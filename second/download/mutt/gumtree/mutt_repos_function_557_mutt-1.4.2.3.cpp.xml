<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_557_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_canonical_charset<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">dest<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">dlen<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">name<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">i<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">scratch<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><name pos:line="5" pos:column="16">LONG_STRING<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* catch some common iso-8859-something misspellings */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><call><name pos:line="8" pos:column="8">ascii_strncasecmp<pos:position pos:line="8" pos:column="25"/></name> <argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">name<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"8859"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="41">4<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call> <operator pos:line="8" pos:column="44">&amp;&amp;<pos:position pos:line="8" pos:column="54"/></operator> <name><name pos:line="8" pos:column="47">name<pos:position pos:line="8" pos:column="51"/></name><index pos:line="8" pos:column="51">[<expr><literal type="number" pos:line="8" pos:column="52">4<pos:position pos:line="8" pos:column="53"/></literal></expr>]<pos:position pos:line="8" pos:column="54"/></index></name> <operator pos:line="8" pos:column="55">!=<pos:position pos:line="8" pos:column="57"/></operator> <literal type="char" pos:line="8" pos:column="58">'-'<pos:position pos:line="8" pos:column="61"/></literal></expr>)<pos:position pos:line="8" pos:column="62"/></condition><then pos:line="8" pos:column="62">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">snprintf<pos:position pos:line="9" pos:column="13"/></name> <argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">scratch<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="24">sizeof <argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">scratch<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="42">"iso-8859-%s"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="57">name<pos:position pos:line="9" pos:column="61"/></name> <operator pos:line="9" pos:column="62">+<pos:position pos:line="9" pos:column="63"/></operator><literal type="number" pos:line="9" pos:column="63">4<pos:position pos:line="9" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt></block></then>
  <elseif pos:line="10" pos:column="3">else <if pos:line="10" pos:column="8">if <condition pos:line="10" pos:column="11">(<expr><operator pos:line="10" pos:column="12">!<pos:position pos:line="10" pos:column="13"/></operator><call><name pos:line="10" pos:column="13">ascii_strncasecmp<pos:position pos:line="10" pos:column="30"/></name> <argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">name<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="38">"8859-"<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="47">5<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">snprintf<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">scratch<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="24">sizeof <argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">scratch<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="42">"iso-8859-%s"<pos:position pos:line="11" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="57">name<pos:position pos:line="11" pos:column="61"/></name> <operator pos:line="11" pos:column="62">+<pos:position pos:line="11" pos:column="63"/></operator> <literal type="number" pos:line="11" pos:column="64">5<pos:position pos:line="11" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="67"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="12" pos:column="3">else <if pos:line="12" pos:column="8">if <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">!<pos:position pos:line="12" pos:column="13"/></operator><call><name pos:line="12" pos:column="13">ascii_strncasecmp<pos:position pos:line="12" pos:column="30"/></name> <argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">name<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">"iso8859"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="49">7<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call> <operator pos:line="12" pos:column="52">&amp;&amp;<pos:position pos:line="12" pos:column="62"/></operator> <name><name pos:line="12" pos:column="55">name<pos:position pos:line="12" pos:column="59"/></name><index pos:line="12" pos:column="59">[<expr><literal type="number" pos:line="12" pos:column="60">7<pos:position pos:line="12" pos:column="61"/></literal></expr>]<pos:position pos:line="12" pos:column="62"/></index></name> <operator pos:line="12" pos:column="63">!=<pos:position pos:line="12" pos:column="65"/></operator> <literal type="char" pos:line="12" pos:column="66">'-'<pos:position pos:line="12" pos:column="69"/></literal></expr>)<pos:position pos:line="12" pos:column="70"/></condition><then pos:line="12" pos:column="70">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">snprintf<pos:position pos:line="13" pos:column="13"/></name> <argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">scratch<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="24">sizeof <argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">scratch<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">"iso_8859-%s"<pos:position pos:line="13" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">name<pos:position pos:line="13" pos:column="61"/></name> <operator pos:line="13" pos:column="62">+<pos:position pos:line="13" pos:column="63"/></operator> <literal type="number" pos:line="13" pos:column="64">7<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="67"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="14" pos:column="3">else <if pos:line="14" pos:column="8">if <condition pos:line="14" pos:column="11">(<expr><operator pos:line="14" pos:column="12">!<pos:position pos:line="14" pos:column="13"/></operator><call><name pos:line="14" pos:column="13">ascii_strncasecmp<pos:position pos:line="14" pos:column="30"/></name> <argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">name<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="38">"iso8859-"<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="50">8<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="53"/></condition><then pos:line="14" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">snprintf<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">scratch<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="24">sizeof <argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">scratch<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="42">"iso_8859-%s"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">name<pos:position pos:line="15" pos:column="61"/></name> <operator pos:line="15" pos:column="62">+<pos:position pos:line="15" pos:column="63"/></operator> <literal type="number" pos:line="15" pos:column="64">8<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt></block></then></if></elseif>
  <else pos:line="16" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">strfcpy<pos:position pos:line="17" pos:column="12"/></name> <argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">scratch<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="23">NONULL<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">name<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="37">sizeof <argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">scratch<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt></block></else></if>

  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><expr><name pos:line="19" pos:column="8">i<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></init> <condition><expr><name><name pos:line="19" pos:column="15">PreferredMIMENames<pos:position pos:line="19" pos:column="33"/></name><index pos:line="19" pos:column="33">[<expr><name pos:line="19" pos:column="34">i<pos:position pos:line="19" pos:column="35"/></name></expr>]<pos:position pos:line="19" pos:column="36"/></index></name><operator pos:line="19" pos:column="36">.<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">key<pos:position pos:line="19" pos:column="40"/></name></expr>;<pos:position pos:line="19" pos:column="41"/></condition> <incr><expr><name pos:line="19" pos:column="42">i<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">++<pos:position pos:line="19" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="46"/></control>
    <block type="pseudo"><if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><call><name pos:line="20" pos:column="10">ascii_strcasecmp<pos:position pos:line="20" pos:column="26"/></name> <argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">scratch<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="37">PreferredMIMENames<pos:position pos:line="20" pos:column="55"/></name><index pos:line="20" pos:column="55">[<expr><name pos:line="20" pos:column="56">i<pos:position pos:line="20" pos:column="57"/></name></expr>]<pos:position pos:line="20" pos:column="58"/></index></name><operator pos:line="20" pos:column="58">.<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">key<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call> <operator pos:line="20" pos:column="64">||<pos:position pos:line="20" pos:column="66"/></operator>
	<operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><call><name pos:line="21" pos:column="10">mutt_strcasecmp<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">scratch<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="36">PreferredMIMENames<pos:position pos:line="21" pos:column="54"/></name><index pos:line="21" pos:column="54">[<expr><name pos:line="21" pos:column="55">i<pos:position pos:line="21" pos:column="56"/></name></expr>]<pos:position pos:line="21" pos:column="57"/></index></name><operator pos:line="21" pos:column="57">.<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">key<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="63"/></condition><then pos:line="21" pos:column="63">
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">strfcpy<pos:position pos:line="23" pos:column="14"/></name> <argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">dest<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="22">PreferredMIMENames<pos:position pos:line="23" pos:column="40"/></name><index pos:line="23" pos:column="40">[<expr><name pos:line="23" pos:column="41">i<pos:position pos:line="23" pos:column="42"/></name></expr>]<pos:position pos:line="23" pos:column="43"/></index></name><operator pos:line="23" pos:column="43">.<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="44">pref<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">dlen<pos:position pos:line="23" pos:column="54"/></name></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>
      <return pos:line="24" pos:column="7">return;<pos:position pos:line="24" pos:column="14"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></block></for>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">strfcpy<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">dest<pos:position pos:line="27" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="18">scratch<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">dlen<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="29" pos:column="3">/* for cosmetics' sake, transform to lowercase. */</comment>
  <for pos:line="30" pos:column="3">for <control pos:line="30" pos:column="7">(<init><expr><name pos:line="30" pos:column="8">p<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <name pos:line="30" pos:column="12">dest<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></init> <condition><expr><operator pos:line="30" pos:column="18">*<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">p<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></condition> <incr><expr><name pos:line="30" pos:column="22">p<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">++<pos:position pos:line="30" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="26"/></control>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="31" pos:column="5">*<pos:position pos:line="31" pos:column="6"/></operator><name pos:line="31" pos:column="6">p<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">ascii_tolower<pos:position pos:line="31" pos:column="23"/></name> <argument_list pos:line="31" pos:column="24">(<argument><expr><operator pos:line="31" pos:column="25">*<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="26">p<pos:position pos:line="31" pos:column="27"/></name></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt></block></for>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1336_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ADDRESS<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type><name pos:line="1" pos:column="10">rfc822_cpy_adr_real<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">ADDRESS<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">addr<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">p<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><call><name pos:line="3" pos:column="16">rfc822_new_address<pos:position pos:line="3" pos:column="34"/></name> <argument_list pos:line="3" pos:column="35">()<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">EXACT_ADDRESS<pos:position pos:line="5" pos:column="21"/></name></cpp:ifdef>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">p<pos:position pos:line="6" pos:column="4"/></name><operator pos:line="6" pos:column="4">-&gt;<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="6">val<pos:position pos:line="6" pos:column="9"/></name></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">safe_strdup<pos:position pos:line="6" pos:column="23"/></name> <argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">addr<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">val<pos:position pos:line="6" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">p<pos:position pos:line="8" pos:column="4"/></name><operator pos:line="8" pos:column="4">-&gt;<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="6">personal<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">safe_strdup<pos:position pos:line="8" pos:column="28"/></name> <argument_list pos:line="8" pos:column="29">(<argument><expr><name><name pos:line="8" pos:column="30">addr<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">personal<pos:position pos:line="8" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">p<pos:position pos:line="9" pos:column="4"/></name><operator pos:line="9" pos:column="4">-&gt;<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="6">mailbox<pos:position pos:line="9" pos:column="13"/></name></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">safe_strdup<pos:position pos:line="9" pos:column="27"/></name> <argument_list pos:line="9" pos:column="28">(<argument><expr><name><name pos:line="9" pos:column="29">addr<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">mailbox<pos:position pos:line="9" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">p<pos:position pos:line="10" pos:column="4"/></name><operator pos:line="10" pos:column="4">-&gt;<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="6">group<pos:position pos:line="10" pos:column="11"/></name></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name><name pos:line="10" pos:column="14">addr<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">group<pos:position pos:line="10" pos:column="25"/></name></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">p<pos:position pos:line="11" pos:column="4"/></name><operator pos:line="11" pos:column="4">-&gt;<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="6">is_intl<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">addr<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">is_intl<pos:position pos:line="11" pos:column="29"/></name></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">p<pos:position pos:line="12" pos:column="4"/></name><operator pos:line="12" pos:column="4">-&gt;<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="6">intl_checked<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name><name pos:line="12" pos:column="21">addr<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">intl_checked<pos:position pos:line="12" pos:column="39"/></name></name></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
  <return pos:line="13" pos:column="3">return <expr><name pos:line="13" pos:column="10">p<pos:position pos:line="13" pos:column="11"/></name></expr>;<pos:position pos:line="13" pos:column="12"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

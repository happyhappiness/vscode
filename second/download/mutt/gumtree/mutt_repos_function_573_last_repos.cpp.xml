<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_573_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">raw_socket_write<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">CONNECTION<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">conn<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="53">buf<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">size_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">count<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">rc<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <call><name pos:line="5" pos:column="13">write<pos:position pos:line="5" pos:column="18"/></name> <argument_list pos:line="5" pos:column="19">(<argument><expr><name><name pos:line="5" pos:column="20">conn<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">fd<pos:position pos:line="5" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="30">buf<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="35">count<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call><operator pos:line="5" pos:column="41">)<pos:position pos:line="5" pos:column="42"/></operator> <operator pos:line="5" pos:column="43">==<pos:position pos:line="5" pos:column="45"/></operator> <operator pos:line="5" pos:column="46">-<pos:position pos:line="5" pos:column="47"/></operator><literal type="number" pos:line="5" pos:column="47">1<pos:position pos:line="5" pos:column="48"/></literal></expr>)<pos:position pos:line="5" pos:column="49"/></condition><then pos:line="5" pos:column="49">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">mutt_error<pos:position pos:line="7" pos:column="15"/></name> <argument_list pos:line="7" pos:column="16">(<argument><expr><call><name pos:line="7" pos:column="17">_<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><literal type="string" pos:line="7" pos:column="19">"Error talking to %s (%s)"<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="48">conn<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">-&gt;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="54">account<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">.<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="62">host<pos:position pos:line="7" pos:column="66"/></name></name></expr></argument>,
		<argument><expr><call><name pos:line="8" pos:column="17">strerror<pos:position pos:line="8" pos:column="25"/></name> <argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">errno<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">mutt_sleep<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><literal type="number" pos:line="9" pos:column="17">2<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">rc<pos:position pos:line="12" pos:column="12"/></name></expr>;<pos:position pos:line="12" pos:column="13"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

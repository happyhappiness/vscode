<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1467_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_buffer_add<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">BUFFER<pos:position pos:line="1" pos:column="29"/></name><modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type> <name pos:line="1" pos:column="31">buf<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">s<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">len<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">offset<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">buf<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">dptr<pos:position pos:line="5" pos:column="16"/></name></name> <operator pos:line="5" pos:column="17">+<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">len<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">+<pos:position pos:line="5" pos:column="24"/></operator> <literal type="number" pos:line="5" pos:column="25">1<pos:position pos:line="5" pos:column="26"/></literal> <operator pos:line="5" pos:column="27">&gt;<pos:position pos:line="5" pos:column="31"/></operator> <name><name pos:line="5" pos:column="29">buf<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">data<pos:position pos:line="5" pos:column="38"/></name></name> <operator pos:line="5" pos:column="39">+<pos:position pos:line="5" pos:column="40"/></operator> <name><name pos:line="5" pos:column="41">buf<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">-&gt;<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="46">dsize<pos:position pos:line="5" pos:column="51"/></name></name></expr>)<pos:position pos:line="5" pos:column="52"/></condition><then pos:line="5" pos:column="52">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">offset<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name><name pos:line="7" pos:column="14">buf<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">dptr<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator> <name><name pos:line="7" pos:column="26">buf<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">data<pos:position pos:line="7" pos:column="35"/></name></name></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">buf<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">dsize<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">+=<pos:position pos:line="8" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="8" pos:column="19">len<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <literal type="number" pos:line="8" pos:column="25">128<pos:position pos:line="8" pos:column="28"/></literal></expr> ?<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <expr><literal type="number" pos:line="8" pos:column="31">128<pos:position pos:line="8" pos:column="34"/></literal></expr> <pos:position pos:line="8" pos:column="35"/></then><else pos:line="8" pos:column="35">: <expr><name pos:line="8" pos:column="37">len<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">+<pos:position pos:line="8" pos:column="42"/></operator> <literal type="number" pos:line="8" pos:column="43">1<pos:position pos:line="8" pos:column="44"/></literal></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* suppress compiler aliasing warning */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">safe_realloc<pos:position pos:line="10" pos:column="17"/></name> <argument_list pos:line="10" pos:column="18">(<argument><expr><operator pos:line="10" pos:column="19">(<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">void<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><operator pos:line="10" pos:column="26">)<pos:position pos:line="10" pos:column="27"/></operator> <operator pos:line="10" pos:column="28">(<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">void<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator> <operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator><name><name pos:line="10" pos:column="37">buf<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">data<pos:position pos:line="10" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="48">buf<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">-&gt;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="53">dsize<pos:position pos:line="10" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">buf<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">dptr<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <name><name pos:line="11" pos:column="17">buf<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">data<pos:position pos:line="11" pos:column="26"/></name></name> <operator pos:line="11" pos:column="27">+<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">offset<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">memcpy<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><name><name pos:line="13" pos:column="11">buf<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">dptr<pos:position pos:line="13" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="22">s<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="25">len<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">buf<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">dptr<pos:position pos:line="14" pos:column="12"/></name></name> <operator pos:line="14" pos:column="13">+=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">len<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="15" pos:column="3">*<pos:position pos:line="15" pos:column="4"/></operator><operator pos:line="15" pos:column="4">(<pos:position pos:line="15" pos:column="5"/></operator><name><name pos:line="15" pos:column="5">buf<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">dptr<pos:position pos:line="15" pos:column="14"/></name></name><operator pos:line="15" pos:column="14">)<pos:position pos:line="15" pos:column="15"/></operator> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="char" pos:line="15" pos:column="18">'\0'<pos:position pos:line="15" pos:column="22"/></literal></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1963_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">loaded_l10nfile<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier>
<name pos:line="2" pos:column="1">internal_function<pos:position pos:line="2" pos:column="18"/></name></type>
<name pos:line="3" pos:column="1">_nl_find_domain<pos:position pos:line="3" pos:column="16"/></name> <argument_list pos:line="3" pos:column="17">(<argument><expr><name pos:line="3" pos:column="18">dirname<pos:position pos:line="3" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="27">locale<pos:position pos:line="3" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="35">domainname<pos:position pos:line="3" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="47">domainbinding<pos:position pos:line="3" pos:column="60"/></name></expr></argument>)<pos:position pos:line="3" pos:column="61"/></argument_list>
     const <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><name pos:line="4" pos:column="18">dirname<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="5" pos:column="6">char<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">locale<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="6" pos:column="6">const<pos:position pos:line="6" pos:column="11"/></specifier> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">domainname<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
     <decl_stmt><decl><type><name><name pos:line="7" pos:column="6">struct<pos:position pos:line="7" pos:column="12"/></name> <name pos:line="7" pos:column="13">binding<pos:position pos:line="7" pos:column="20"/></name></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">domainbinding<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
<block pos:line="8" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">loaded_l10nfile<pos:position pos:line="9" pos:column="25"/></name></name> <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type><name pos:line="9" pos:column="27">retval<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">language<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">modifier<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">territory<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">codeset<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="14" pos:column="3">const<pos:position pos:line="14" pos:column="8"/></specifier> <name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">normalized_codeset<pos:position pos:line="14" pos:column="33"/></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">special<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="16" pos:column="3">const<pos:position pos:line="16" pos:column="8"/></specifier> <name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">sponsor<pos:position pos:line="16" pos:column="22"/></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="17" pos:column="3">const<pos:position pos:line="17" pos:column="8"/></specifier> <name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">revision<pos:position pos:line="17" pos:column="23"/></name></decl>;<pos:position pos:line="17" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="18" pos:column="3">const<pos:position pos:line="18" pos:column="8"/></specifier> <name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">alias_value<pos:position pos:line="18" pos:column="26"/></name></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">mask<pos:position pos:line="19" pos:column="11"/></name></decl>;<pos:position pos:line="19" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* LOCALE can consist of up to four recognized parts for the XPG syntax:

		language[_territory[.codeset]][@modifier]

     and six parts for the CEN syntax:

	language[_territory][+audience][+special][,[sponsor][_revision]]

     Beside the first part all of them are allowed to be missing.  If
     the full specified locale is not found, the less specific one are
     looked for.  The various parts will be stripped off according to
     the following order:
		(1) revision
		(2) sponsor
		(3) special
		(4) codeset
		(5) normalized codeset
		(6) territory
		(7) audience/modifier
   */</comment>

  <comment type="block" pos:line="42" pos:column="3">/* If we have already tested for this locale entry there has to
     be one data set in the list of loaded domains.  */</comment>
  <expr_stmt><expr><name pos:line="44" pos:column="3">retval<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <call><name pos:line="44" pos:column="12">_nl_make_l10nflist<pos:position pos:line="44" pos:column="30"/></name> <argument_list pos:line="44" pos:column="31">(<argument><expr><operator pos:line="44" pos:column="32">&amp;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="33">_nl_loaded_domains<pos:position pos:line="44" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="53">dirname<pos:position pos:line="44" pos:column="60"/></name></expr></argument>,
			       <argument><expr><call><name pos:line="45" pos:column="32">strlen<pos:position pos:line="45" pos:column="38"/></name> <argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">dirname<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call> <operator pos:line="45" pos:column="49">+<pos:position pos:line="45" pos:column="50"/></operator> <literal type="number" pos:line="45" pos:column="51">1<pos:position pos:line="45" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="54">0<pos:position pos:line="45" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="57">locale<pos:position pos:line="45" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="65">NULL<pos:position pos:line="45" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="71">NULL<pos:position pos:line="45" pos:column="75"/></name></expr></argument>,
			       <argument><expr><name pos:line="46" pos:column="32">NULL<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">NULL<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="44">NULL<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">NULL<pos:position pos:line="46" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="56">NULL<pos:position pos:line="46" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="62">domainname<pos:position pos:line="46" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="74">0<pos:position pos:line="46" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></expr_stmt>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">retval<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">!=<pos:position pos:line="47" pos:column="16"/></operator> <name pos:line="47" pos:column="17">NULL<pos:position pos:line="47" pos:column="21"/></name></expr>)<pos:position pos:line="47" pos:column="22"/></condition><then pos:line="47" pos:column="22">
    <block pos:line="48" pos:column="5">{
      <comment type="block" pos:line="49" pos:column="7">/* We know something about this locale.  */</comment>
      <decl_stmt><decl><type><name pos:line="50" pos:column="7">int<pos:position pos:line="50" pos:column="10"/></name></type> <name pos:line="50" pos:column="11">cnt<pos:position pos:line="50" pos:column="14"/></name></decl>;<pos:position pos:line="50" pos:column="15"/></decl_stmt>

      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><name><name pos:line="52" pos:column="11">retval<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">decided<pos:position pos:line="52" pos:column="26"/></name></name> <operator pos:line="52" pos:column="27">==<pos:position pos:line="52" pos:column="29"/></operator> <literal type="number" pos:line="52" pos:column="30">0<pos:position pos:line="52" pos:column="31"/></literal></expr>)<pos:position pos:line="52" pos:column="32"/></condition><then pos:line="52" pos:column="32">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="9">_nl_load_domain<pos:position pos:line="53" pos:column="24"/></name> <argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">retval<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="34">domainbinding<pos:position pos:line="53" pos:column="47"/></name></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="49"/></expr_stmt></block></then></if>

      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><name><name pos:line="55" pos:column="11">retval<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">data<pos:position pos:line="55" pos:column="23"/></name></name> <operator pos:line="55" pos:column="24">!=<pos:position pos:line="55" pos:column="26"/></operator> <name pos:line="55" pos:column="27">NULL<pos:position pos:line="55" pos:column="31"/></name></expr>)<pos:position pos:line="55" pos:column="32"/></condition><then pos:line="55" pos:column="32">
	<block type="pseudo"><return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">retval<pos:position pos:line="56" pos:column="22"/></name></expr>;<pos:position pos:line="56" pos:column="23"/></return></block></then></if>

      <for pos:line="58" pos:column="7">for <control pos:line="58" pos:column="11">(<init><expr><name pos:line="58" pos:column="12">cnt<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">0<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></init> <condition><expr><name><name pos:line="58" pos:column="21">retval<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">successor<pos:position pos:line="58" pos:column="38"/></name><index pos:line="58" pos:column="38">[<expr><name pos:line="58" pos:column="39">cnt<pos:position pos:line="58" pos:column="42"/></name></expr>]<pos:position pos:line="58" pos:column="43"/></index></name> <operator pos:line="58" pos:column="44">!=<pos:position pos:line="58" pos:column="46"/></operator> <name pos:line="58" pos:column="47">NULL<pos:position pos:line="58" pos:column="51"/></name></expr>;<pos:position pos:line="58" pos:column="52"/></condition> <incr><expr><operator pos:line="58" pos:column="53">++<pos:position pos:line="58" pos:column="55"/></operator><name pos:line="58" pos:column="55">cnt<pos:position pos:line="58" pos:column="58"/></name></expr></incr>)<pos:position pos:line="58" pos:column="59"/></control>
	<block pos:line="59" pos:column="9">{
	  <if pos:line="60" pos:column="11">if <condition pos:line="60" pos:column="14">(<expr><name><name pos:line="60" pos:column="15">retval<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">successor<pos:position pos:line="60" pos:column="32"/></name><index pos:line="60" pos:column="32">[<expr><name pos:line="60" pos:column="33">cnt<pos:position pos:line="60" pos:column="36"/></name></expr>]<pos:position pos:line="60" pos:column="37"/></index></name><operator pos:line="60" pos:column="37">-&gt;<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="39">decided<pos:position pos:line="60" pos:column="46"/></name> <operator pos:line="60" pos:column="47">==<pos:position pos:line="60" pos:column="49"/></operator> <literal type="number" pos:line="60" pos:column="50">0<pos:position pos:line="60" pos:column="51"/></literal></expr>)<pos:position pos:line="60" pos:column="52"/></condition><then pos:line="60" pos:column="52">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="13">_nl_load_domain<pos:position pos:line="61" pos:column="28"/></name> <argument_list pos:line="61" pos:column="29">(<argument><expr><name><name pos:line="61" pos:column="30">retval<pos:position pos:line="61" pos:column="36"/></name><operator pos:line="61" pos:column="36">-&gt;<pos:position pos:line="61" pos:column="41"/></operator><name pos:line="61" pos:column="38">successor<pos:position pos:line="61" pos:column="47"/></name><index pos:line="61" pos:column="47">[<expr><name pos:line="61" pos:column="48">cnt<pos:position pos:line="61" pos:column="51"/></name></expr>]<pos:position pos:line="61" pos:column="52"/></index></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">domainbinding<pos:position pos:line="61" pos:column="67"/></name></expr></argument>)<pos:position pos:line="61" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="69"/></expr_stmt></block></then></if>

	  <if pos:line="63" pos:column="11">if <condition pos:line="63" pos:column="14">(<expr><name><name pos:line="63" pos:column="15">retval<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">successor<pos:position pos:line="63" pos:column="32"/></name><index pos:line="63" pos:column="32">[<expr><name pos:line="63" pos:column="33">cnt<pos:position pos:line="63" pos:column="36"/></name></expr>]<pos:position pos:line="63" pos:column="37"/></index></name><operator pos:line="63" pos:column="37">-&gt;<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="39">data<pos:position pos:line="63" pos:column="43"/></name> <operator pos:line="63" pos:column="44">!=<pos:position pos:line="63" pos:column="46"/></operator> <name pos:line="63" pos:column="47">NULL<pos:position pos:line="63" pos:column="51"/></name></expr>)<pos:position pos:line="63" pos:column="52"/></condition><then pos:line="63" pos:column="52">
	    <block type="pseudo"><break pos:line="64" pos:column="13">break;<pos:position pos:line="64" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="65" pos:column="10"/></block></for>
      <return pos:line="66" pos:column="7">return <expr><ternary><condition><expr><name pos:line="66" pos:column="14">cnt<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">&gt;=<pos:position pos:line="66" pos:column="23"/></operator> <literal type="number" pos:line="66" pos:column="21">0<pos:position pos:line="66" pos:column="22"/></literal></expr> ?<pos:position pos:line="66" pos:column="24"/></condition><then pos:line="66" pos:column="24"> <expr><name pos:line="66" pos:column="25">retval<pos:position pos:line="66" pos:column="31"/></name></expr> <pos:position pos:line="66" pos:column="32"/></then><else pos:line="66" pos:column="32">: <expr><name pos:line="66" pos:column="34">NULL<pos:position pos:line="66" pos:column="38"/></name></expr></else></ternary></expr>;<pos:position pos:line="66" pos:column="39"/></return>
      <comment type="block" pos:line="67" pos:column="7">/* NOTREACHED */</comment>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="70" pos:column="3">/* See whether the locale value is an alias.  If yes its value
     *overwrites* the alias name.  No test for the original value is
     done.  */</comment>
  <expr_stmt><expr><name pos:line="73" pos:column="3">alias_value<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <call><name pos:line="73" pos:column="17">_nl_expand_alias<pos:position pos:line="73" pos:column="33"/></name> <argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">locale<pos:position pos:line="73" pos:column="41"/></name></expr></argument>)<pos:position pos:line="73" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="43"/></expr_stmt>
  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">alias_value<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">!=<pos:position pos:line="74" pos:column="21"/></operator> <name pos:line="74" pos:column="22">NULL<pos:position pos:line="74" pos:column="26"/></name></expr>)<pos:position pos:line="74" pos:column="27"/></condition><then pos:line="74" pos:column="27">
    <block pos:line="75" pos:column="5">{
<cpp:if pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">if<pos:position pos:line="76" pos:column="4"/></cpp:directive> <expr><name pos:line="76" pos:column="5">defined<pos:position pos:line="76" pos:column="12"/></name> <name pos:line="76" pos:column="13">_LIBC<pos:position pos:line="76" pos:column="18"/></name> <operator pos:line="76" pos:column="19">||<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">defined<pos:position pos:line="76" pos:column="29"/></name> <name pos:line="76" pos:column="30">HAVE_STRDUP<pos:position pos:line="76" pos:column="41"/></name></expr></cpp:if>
      <expr_stmt><expr><name pos:line="77" pos:column="7">locale<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">=<pos:position pos:line="77" pos:column="15"/></operator> <call><name pos:line="77" pos:column="16">strdup<pos:position pos:line="77" pos:column="22"/></name> <argument_list pos:line="77" pos:column="23">(<argument><expr><name pos:line="77" pos:column="24">alias_value<pos:position pos:line="77" pos:column="35"/></name></expr></argument>)<pos:position pos:line="77" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="37"/></expr_stmt>
      <if pos:line="78" pos:column="7">if <condition pos:line="78" pos:column="10">(<expr><name pos:line="78" pos:column="11">locale<pos:position pos:line="78" pos:column="17"/></name> <operator pos:line="78" pos:column="18">==<pos:position pos:line="78" pos:column="20"/></operator> <name pos:line="78" pos:column="21">NULL<pos:position pos:line="78" pos:column="25"/></name></expr>)<pos:position pos:line="78" pos:column="26"/></condition><then pos:line="78" pos:column="26">
	<block type="pseudo"><return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">NULL<pos:position pos:line="79" pos:column="20"/></name></expr>;<pos:position pos:line="79" pos:column="21"/></return></block></then></if>
<cpp:else pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">else<pos:position pos:line="80" pos:column="6"/></cpp:directive></cpp:else>
      <decl_stmt><decl><type><name pos:line="81" pos:column="7">size_t<pos:position pos:line="81" pos:column="13"/></name></type> <name pos:line="81" pos:column="14">len<pos:position pos:line="81" pos:column="17"/></name> <init pos:line="81" pos:column="18">= <expr><call><name pos:line="81" pos:column="20">strlen<pos:position pos:line="81" pos:column="26"/></name> <argument_list pos:line="81" pos:column="27">(<argument><expr><name pos:line="81" pos:column="28">alias_value<pos:position pos:line="81" pos:column="39"/></name></expr></argument>)<pos:position pos:line="81" pos:column="40"/></argument_list></call> <operator pos:line="81" pos:column="41">+<pos:position pos:line="81" pos:column="42"/></operator> <literal type="number" pos:line="81" pos:column="43">1<pos:position pos:line="81" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="81" pos:column="45"/></decl_stmt>
      <expr_stmt><expr><name pos:line="82" pos:column="7">locale<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">=<pos:position pos:line="82" pos:column="15"/></operator> <operator pos:line="82" pos:column="16">(<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="17">char<pos:position pos:line="82" pos:column="21"/></name> <operator pos:line="82" pos:column="22">*<pos:position pos:line="82" pos:column="23"/></operator><operator pos:line="82" pos:column="23">)<pos:position pos:line="82" pos:column="24"/></operator> <call><name pos:line="82" pos:column="25">malloc<pos:position pos:line="82" pos:column="31"/></name> <argument_list pos:line="82" pos:column="32">(<argument><expr><name pos:line="82" pos:column="33">len<pos:position pos:line="82" pos:column="36"/></name></expr></argument>)<pos:position pos:line="82" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>
      <if pos:line="83" pos:column="7">if <condition pos:line="83" pos:column="10">(<expr><name pos:line="83" pos:column="11">locale<pos:position pos:line="83" pos:column="17"/></name> <operator pos:line="83" pos:column="18">==<pos:position pos:line="83" pos:column="20"/></operator> <name pos:line="83" pos:column="21">NULL<pos:position pos:line="83" pos:column="25"/></name></expr>)<pos:position pos:line="83" pos:column="26"/></condition><then pos:line="83" pos:column="26">
	<block type="pseudo"><return pos:line="84" pos:column="9">return <expr><name pos:line="84" pos:column="16">NULL<pos:position pos:line="84" pos:column="20"/></name></expr>;<pos:position pos:line="84" pos:column="21"/></return></block></then></if>

      <expr_stmt><expr><call><name pos:line="86" pos:column="7">memcpy<pos:position pos:line="86" pos:column="13"/></name> <argument_list pos:line="86" pos:column="14">(<argument><expr><name pos:line="86" pos:column="15">locale<pos:position pos:line="86" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="23">alias_value<pos:position pos:line="86" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="36">len<pos:position pos:line="86" pos:column="39"/></name></expr></argument>)<pos:position pos:line="86" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="90" pos:column="3">/* Now we determine the single parts of the locale name.  First
     look for the language.  Termination symbols are `_' and `@' if
     we use XPG4 style, and `_', `+', and `,' if we use CEN syntax.  */</comment>
  <expr_stmt><expr><name pos:line="93" pos:column="3">mask<pos:position pos:line="93" pos:column="7"/></name> <operator pos:line="93" pos:column="8">=<pos:position pos:line="93" pos:column="9"/></operator> <call><name pos:line="93" pos:column="10">_nl_explode_name<pos:position pos:line="93" pos:column="26"/></name> <argument_list pos:line="93" pos:column="27">(<argument><expr><name pos:line="93" pos:column="28">locale<pos:position pos:line="93" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="36">&amp;<pos:position pos:line="93" pos:column="41"/></operator><name pos:line="93" pos:column="37">language<pos:position pos:line="93" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="47">&amp;<pos:position pos:line="93" pos:column="52"/></operator><name pos:line="93" pos:column="48">modifier<pos:position pos:line="93" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="58">&amp;<pos:position pos:line="93" pos:column="63"/></operator><name pos:line="93" pos:column="59">territory<pos:position pos:line="93" pos:column="68"/></name></expr></argument>,
			   <argument><expr><operator pos:line="94" pos:column="28">&amp;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="29">codeset<pos:position pos:line="94" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="38">&amp;<pos:position pos:line="94" pos:column="43"/></operator><name pos:line="94" pos:column="39">normalized_codeset<pos:position pos:line="94" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="59">&amp;<pos:position pos:line="94" pos:column="64"/></operator><name pos:line="94" pos:column="60">special<pos:position pos:line="94" pos:column="67"/></name></expr></argument>,
			   <argument><expr><operator pos:line="95" pos:column="28">&amp;<pos:position pos:line="95" pos:column="33"/></operator><name pos:line="95" pos:column="29">sponsor<pos:position pos:line="95" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="38">&amp;<pos:position pos:line="95" pos:column="43"/></operator><name pos:line="95" pos:column="39">revision<pos:position pos:line="95" pos:column="47"/></name></expr></argument>)<pos:position pos:line="95" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="97" pos:column="3">/* Create all possible locale entries which might be interested in
     generalization.  */</comment>
  <expr_stmt><expr><name pos:line="99" pos:column="3">retval<pos:position pos:line="99" pos:column="9"/></name> <operator pos:line="99" pos:column="10">=<pos:position pos:line="99" pos:column="11"/></operator> <call><name pos:line="99" pos:column="12">_nl_make_l10nflist<pos:position pos:line="99" pos:column="30"/></name> <argument_list pos:line="99" pos:column="31">(<argument><expr><operator pos:line="99" pos:column="32">&amp;<pos:position pos:line="99" pos:column="37"/></operator><name pos:line="99" pos:column="33">_nl_loaded_domains<pos:position pos:line="99" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="53">dirname<pos:position pos:line="99" pos:column="60"/></name></expr></argument>,
			       <argument><expr><call><name pos:line="100" pos:column="32">strlen<pos:position pos:line="100" pos:column="38"/></name> <argument_list pos:line="100" pos:column="39">(<argument><expr><name pos:line="100" pos:column="40">dirname<pos:position pos:line="100" pos:column="47"/></name></expr></argument>)<pos:position pos:line="100" pos:column="48"/></argument_list></call> <operator pos:line="100" pos:column="49">+<pos:position pos:line="100" pos:column="50"/></operator> <literal type="number" pos:line="100" pos:column="51">1<pos:position pos:line="100" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="54">mask<pos:position pos:line="100" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="60">language<pos:position pos:line="100" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="70">territory<pos:position pos:line="100" pos:column="79"/></name></expr></argument>,
			       <argument><expr><name pos:line="101" pos:column="32">codeset<pos:position pos:line="101" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="41">normalized_codeset<pos:position pos:line="101" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="61">modifier<pos:position pos:line="101" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="71">special<pos:position pos:line="101" pos:column="78"/></name></expr></argument>,
			       <argument><expr><name pos:line="102" pos:column="32">sponsor<pos:position pos:line="102" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="41">revision<pos:position pos:line="102" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="51">domainname<pos:position pos:line="102" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="63">1<pos:position pos:line="102" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="66"/></expr_stmt>
  <if pos:line="103" pos:column="3">if <condition pos:line="103" pos:column="6">(<expr><name pos:line="103" pos:column="7">retval<pos:position pos:line="103" pos:column="13"/></name> <operator pos:line="103" pos:column="14">==<pos:position pos:line="103" pos:column="16"/></operator> <name pos:line="103" pos:column="17">NULL<pos:position pos:line="103" pos:column="21"/></name></expr>)<pos:position pos:line="103" pos:column="22"/></condition><then pos:line="103" pos:column="22">
    <comment type="block" pos:line="104" pos:column="5">/* This means we are out of core.  */</comment>
    <block type="pseudo"><return pos:line="105" pos:column="5">return <expr><name pos:line="105" pos:column="12">NULL<pos:position pos:line="105" pos:column="16"/></name></expr>;<pos:position pos:line="105" pos:column="17"/></return></block></then></if>

  <if pos:line="107" pos:column="3">if <condition pos:line="107" pos:column="6">(<expr><name><name pos:line="107" pos:column="7">retval<pos:position pos:line="107" pos:column="13"/></name><operator pos:line="107" pos:column="13">-&gt;<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="15">decided<pos:position pos:line="107" pos:column="22"/></name></name> <operator pos:line="107" pos:column="23">==<pos:position pos:line="107" pos:column="25"/></operator> <literal type="number" pos:line="107" pos:column="26">0<pos:position pos:line="107" pos:column="27"/></literal></expr>)<pos:position pos:line="107" pos:column="28"/></condition><then pos:line="107" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="5">_nl_load_domain<pos:position pos:line="108" pos:column="20"/></name> <argument_list pos:line="108" pos:column="21">(<argument><expr><name pos:line="108" pos:column="22">retval<pos:position pos:line="108" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="30">domainbinding<pos:position pos:line="108" pos:column="43"/></name></expr></argument>)<pos:position pos:line="108" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="45"/></expr_stmt></block></then></if>
  <if pos:line="109" pos:column="3">if <condition pos:line="109" pos:column="6">(<expr><name><name pos:line="109" pos:column="7">retval<pos:position pos:line="109" pos:column="13"/></name><operator pos:line="109" pos:column="13">-&gt;<pos:position pos:line="109" pos:column="18"/></operator><name pos:line="109" pos:column="15">data<pos:position pos:line="109" pos:column="19"/></name></name> <operator pos:line="109" pos:column="20">==<pos:position pos:line="109" pos:column="22"/></operator> <name pos:line="109" pos:column="23">NULL<pos:position pos:line="109" pos:column="27"/></name></expr>)<pos:position pos:line="109" pos:column="28"/></condition><then pos:line="109" pos:column="28">
    <block pos:line="110" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="111" pos:column="7">int<pos:position pos:line="111" pos:column="10"/></name></type> <name pos:line="111" pos:column="11">cnt<pos:position pos:line="111" pos:column="14"/></name></decl>;<pos:position pos:line="111" pos:column="15"/></decl_stmt>
      <for pos:line="112" pos:column="7">for <control pos:line="112" pos:column="11">(<init><expr><name pos:line="112" pos:column="12">cnt<pos:position pos:line="112" pos:column="15"/></name> <operator pos:line="112" pos:column="16">=<pos:position pos:line="112" pos:column="17"/></operator> <literal type="number" pos:line="112" pos:column="18">0<pos:position pos:line="112" pos:column="19"/></literal></expr>;<pos:position pos:line="112" pos:column="20"/></init> <condition><expr><name><name pos:line="112" pos:column="21">retval<pos:position pos:line="112" pos:column="27"/></name><operator pos:line="112" pos:column="27">-&gt;<pos:position pos:line="112" pos:column="32"/></operator><name pos:line="112" pos:column="29">successor<pos:position pos:line="112" pos:column="38"/></name><index pos:line="112" pos:column="38">[<expr><name pos:line="112" pos:column="39">cnt<pos:position pos:line="112" pos:column="42"/></name></expr>]<pos:position pos:line="112" pos:column="43"/></index></name> <operator pos:line="112" pos:column="44">!=<pos:position pos:line="112" pos:column="46"/></operator> <name pos:line="112" pos:column="47">NULL<pos:position pos:line="112" pos:column="51"/></name></expr>;<pos:position pos:line="112" pos:column="52"/></condition> <incr><expr><operator pos:line="112" pos:column="53">++<pos:position pos:line="112" pos:column="55"/></operator><name pos:line="112" pos:column="55">cnt<pos:position pos:line="112" pos:column="58"/></name></expr></incr>)<pos:position pos:line="112" pos:column="59"/></control>
	<block pos:line="113" pos:column="9">{
	  <if pos:line="114" pos:column="11">if <condition pos:line="114" pos:column="14">(<expr><name><name pos:line="114" pos:column="15">retval<pos:position pos:line="114" pos:column="21"/></name><operator pos:line="114" pos:column="21">-&gt;<pos:position pos:line="114" pos:column="26"/></operator><name pos:line="114" pos:column="23">successor<pos:position pos:line="114" pos:column="32"/></name><index pos:line="114" pos:column="32">[<expr><name pos:line="114" pos:column="33">cnt<pos:position pos:line="114" pos:column="36"/></name></expr>]<pos:position pos:line="114" pos:column="37"/></index></name><operator pos:line="114" pos:column="37">-&gt;<pos:position pos:line="114" pos:column="42"/></operator><name pos:line="114" pos:column="39">decided<pos:position pos:line="114" pos:column="46"/></name> <operator pos:line="114" pos:column="47">==<pos:position pos:line="114" pos:column="49"/></operator> <literal type="number" pos:line="114" pos:column="50">0<pos:position pos:line="114" pos:column="51"/></literal></expr>)<pos:position pos:line="114" pos:column="52"/></condition><then pos:line="114" pos:column="52">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="13">_nl_load_domain<pos:position pos:line="115" pos:column="28"/></name> <argument_list pos:line="115" pos:column="29">(<argument><expr><name><name pos:line="115" pos:column="30">retval<pos:position pos:line="115" pos:column="36"/></name><operator pos:line="115" pos:column="36">-&gt;<pos:position pos:line="115" pos:column="41"/></operator><name pos:line="115" pos:column="38">successor<pos:position pos:line="115" pos:column="47"/></name><index pos:line="115" pos:column="47">[<expr><name pos:line="115" pos:column="48">cnt<pos:position pos:line="115" pos:column="51"/></name></expr>]<pos:position pos:line="115" pos:column="52"/></index></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="54">domainbinding<pos:position pos:line="115" pos:column="67"/></name></expr></argument>)<pos:position pos:line="115" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="69"/></expr_stmt></block></then></if>
	  <if pos:line="116" pos:column="11">if <condition pos:line="116" pos:column="14">(<expr><name><name pos:line="116" pos:column="15">retval<pos:position pos:line="116" pos:column="21"/></name><operator pos:line="116" pos:column="21">-&gt;<pos:position pos:line="116" pos:column="26"/></operator><name pos:line="116" pos:column="23">successor<pos:position pos:line="116" pos:column="32"/></name><index pos:line="116" pos:column="32">[<expr><name pos:line="116" pos:column="33">cnt<pos:position pos:line="116" pos:column="36"/></name></expr>]<pos:position pos:line="116" pos:column="37"/></index></name><operator pos:line="116" pos:column="37">-&gt;<pos:position pos:line="116" pos:column="42"/></operator><name pos:line="116" pos:column="39">data<pos:position pos:line="116" pos:column="43"/></name> <operator pos:line="116" pos:column="44">!=<pos:position pos:line="116" pos:column="46"/></operator> <name pos:line="116" pos:column="47">NULL<pos:position pos:line="116" pos:column="51"/></name></expr>)<pos:position pos:line="116" pos:column="52"/></condition><then pos:line="116" pos:column="52">
	    <block type="pseudo"><break pos:line="117" pos:column="13">break;<pos:position pos:line="117" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="118" pos:column="10"/></block></for>
    }<pos:position pos:line="119" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="121" pos:column="3">/* The room for an alias was dynamically allocated.  Free it now.  */</comment>
  <if pos:line="122" pos:column="3">if <condition pos:line="122" pos:column="6">(<expr><name pos:line="122" pos:column="7">alias_value<pos:position pos:line="122" pos:column="18"/></name> <operator pos:line="122" pos:column="19">!=<pos:position pos:line="122" pos:column="21"/></operator> <name pos:line="122" pos:column="22">NULL<pos:position pos:line="122" pos:column="26"/></name></expr>)<pos:position pos:line="122" pos:column="27"/></condition><then pos:line="122" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="5">free<pos:position pos:line="123" pos:column="9"/></name> <argument_list pos:line="123" pos:column="10">(<argument><expr><name pos:line="123" pos:column="11">locale<pos:position pos:line="123" pos:column="17"/></name></expr></argument>)<pos:position pos:line="123" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="19"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="125" pos:column="3">/* The space for normalized_codeset is dynamically allocated.  Free it.  */</comment>
  <if pos:line="126" pos:column="3">if <condition pos:line="126" pos:column="6">(<expr><name pos:line="126" pos:column="7">mask<pos:position pos:line="126" pos:column="11"/></name> <operator pos:line="126" pos:column="12">&amp;<pos:position pos:line="126" pos:column="17"/></operator> <name pos:line="126" pos:column="14">XPG_NORM_CODESET<pos:position pos:line="126" pos:column="30"/></name></expr>)<pos:position pos:line="126" pos:column="31"/></condition><then pos:line="126" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="5">free<pos:position pos:line="127" pos:column="9"/></name> <argument_list pos:line="127" pos:column="10">(<argument><expr><operator pos:line="127" pos:column="11">(<pos:position pos:line="127" pos:column="12"/></operator><name pos:line="127" pos:column="12">void<pos:position pos:line="127" pos:column="16"/></name> <operator pos:line="127" pos:column="17">*<pos:position pos:line="127" pos:column="18"/></operator><operator pos:line="127" pos:column="18">)<pos:position pos:line="127" pos:column="19"/></operator> <name pos:line="127" pos:column="20">normalized_codeset<pos:position pos:line="127" pos:column="38"/></name></expr></argument>)<pos:position pos:line="127" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt></block></then></if>

  <return pos:line="129" pos:column="3">return <expr><name pos:line="129" pos:column="10">retval<pos:position pos:line="129" pos:column="16"/></name></expr>;<pos:position pos:line="129" pos:column="17"/></return>
}<pos:position pos:line="130" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_608_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">mbrtowc<pos:position pos:line="1" pos:column="15"/></name> <parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">wchar_t<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">pwc<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">size_t<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">n<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">mbstate_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">ps<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">mbstate_t<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">mbstate<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">ps<pos:position pos:line="5" pos:column="10"/></name></expr>)<pos:position pos:line="5" pos:column="11"/></condition><then pos:line="5" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">ps<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <operator pos:line="6" pos:column="10">&amp;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="11">mbstate<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">Charset_is_utf8<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><call><name pos:line="9" pos:column="12">utf8rtowc<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">pwc<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">s<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">n<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">ps<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></return></block></then>
  <elseif pos:line="10" pos:column="3">else <if pos:line="10" pos:column="8">if <condition pos:line="10" pos:column="11">(<expr><name pos:line="10" pos:column="12">charset_to_utf8<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">!=<pos:position pos:line="10" pos:column="30"/></operator> <call pos:line="10" pos:column="31">(<name pos:line="10" pos:column="32">iconv_t<pos:position pos:line="10" pos:column="39"/></name>)<argument_list pos:line="10" pos:column="40">(<argument><expr><operator pos:line="10" pos:column="41">-<pos:position pos:line="10" pos:column="42"/></operator><literal type="number" pos:line="10" pos:column="42">1<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="45"/></condition><then pos:line="10" pos:column="45">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><call><name pos:line="11" pos:column="12">mbrtowc_iconv<pos:position pos:line="11" pos:column="25"/></name> <argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">pwc<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">s<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">n<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">ps<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">charset_to_utf8<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></return></block></then></if></elseif>
  <else pos:line="12" pos:column="3">else
  <block pos:line="13" pos:column="3">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">s<pos:position pos:line="14" pos:column="11"/></name></expr>)<pos:position pos:line="14" pos:column="12"/></condition><then pos:line="14" pos:column="12">
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">memset<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">ps<pos:position pos:line="16" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="21">sizeof<argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">ps<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">n<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition><then pos:line="19" pos:column="12">
      <block type="pseudo"><return pos:line="20" pos:column="7">return <expr><operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">size_t<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">)<pos:position pos:line="20" pos:column="22"/></operator><operator pos:line="20" pos:column="22">-<pos:position pos:line="20" pos:column="23"/></operator><literal type="number" pos:line="20" pos:column="23">2<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></return></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">pwc<pos:position pos:line="21" pos:column="12"/></name></expr>)<pos:position pos:line="21" pos:column="13"/></condition><then pos:line="21" pos:column="13">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="7">*<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">pwc<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">wchar_t<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">)<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">(<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">unsigned<pos:position pos:line="22" pos:column="32"/></name> <name pos:line="22" pos:column="33">char<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">)<pos:position pos:line="22" pos:column="38"/></operator><operator pos:line="22" pos:column="38">*<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">s<pos:position pos:line="22" pos:column="40"/></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt></block></then></if>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">*<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">s<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal><operator pos:line="23" pos:column="20">)<pos:position pos:line="23" pos:column="21"/></operator></expr>;<pos:position pos:line="23" pos:column="22"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></else></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

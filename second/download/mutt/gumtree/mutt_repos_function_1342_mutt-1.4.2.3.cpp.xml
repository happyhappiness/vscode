<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1342_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_browse<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name><modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type> <name pos:line="1" pos:column="24">path<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">browser_state<pos:position pos:line="1" pos:column="50"/></name></name><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type> <name pos:line="1" pos:column="52">state<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">LONG_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf2<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">LONG_STRING<pos:position pos:line="5" pos:column="24"/></name></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">nsbuf<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">LONG_STRING<pos:position pos:line="6" pos:column="25"/></name></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">mbox<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><name pos:line="7" pos:column="13">LONG_STRING<pos:position pos:line="7" pos:column="24"/></name></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">list_cmd<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">5<pos:position pos:line="8" pos:column="18"/></literal></expr>]<pos:position pos:line="8" pos:column="19"/></index></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">IMAP_NAMESPACE_INFO<pos:position pos:line="9" pos:column="22"/></name></type> <name><name pos:line="9" pos:column="23">nsi<pos:position pos:line="9" pos:column="26"/></name><index pos:line="9" pos:column="26">[<expr><literal type="number" pos:line="9" pos:column="27">16<pos:position pos:line="9" pos:column="29"/></literal></expr>]<pos:position pos:line="9" pos:column="30"/></index></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">home_namespace<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">n<pos:position pos:line="11" pos:column="8"/></name></decl>;<pos:position pos:line="11" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">i<pos:position pos:line="12" pos:column="8"/></name></decl>;<pos:position pos:line="12" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">nsup<pos:position pos:line="13" pos:column="11"/></name></decl>;<pos:position pos:line="13" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name pos:line="14" pos:column="8">ctmp<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">nns<pos:position pos:line="15" pos:column="10"/></name></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type><name pos:line="16" pos:column="9">cur_folder<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">short<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">showparents<pos:position pos:line="17" pos:column="20"/></name> <init pos:line="17" pos:column="21">= <expr><literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">noselect<pos:position pos:line="18" pos:column="15"/></name></decl>;<pos:position pos:line="18" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">noinferiors<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">IMAP_MBOX<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">mx<pos:position pos:line="20" pos:column="15"/></name></decl>;<pos:position pos:line="20" pos:column="16"/></decl_stmt>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><call><name pos:line="22" pos:column="7">imap_parse_path<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">path<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="30">&amp;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="31">mx<pos:position pos:line="22" pos:column="33"/></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_error<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><call><name pos:line="24" pos:column="17">_<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><literal type="string" pos:line="24" pos:column="19">"%s is an invalid IMAP path"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">path<pos:position pos:line="24" pos:column="54"/></name></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">-<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">strfcpy<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">list_cmd<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="28" pos:column="22">option<pos:position pos:line="28" pos:column="28"/></name> <argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">OPTIMAPLSUB<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr> ?<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44"> <expr><literal type="string" pos:line="28" pos:column="45">"LSUB"<pos:position pos:line="28" pos:column="51"/></literal></expr> <pos:position pos:line="28" pos:column="52"/></then><else pos:line="28" pos:column="52">: <expr><literal type="string" pos:line="28" pos:column="54">"LIST"<pos:position pos:line="28" pos:column="60"/></literal></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="62">sizeof <argument_list pos:line="28" pos:column="69">(<argument><expr><name pos:line="28" pos:column="70">list_cmd<pos:position pos:line="28" pos:column="78"/></name></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="81"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">!<pos:position pos:line="30" pos:column="8"/></operator><operator pos:line="30" pos:column="8">(<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">idata<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">imap_conn_find<pos:position pos:line="30" pos:column="31"/></name> <argument_list pos:line="30" pos:column="32">(<argument><expr><operator pos:line="30" pos:column="33">&amp;<pos:position pos:line="30" pos:column="38"/></operator><operator pos:line="30" pos:column="34">(<pos:position pos:line="30" pos:column="35"/></operator><name><name pos:line="30" pos:column="35">mx<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">.<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="38">account<pos:position pos:line="30" pos:column="45"/></name></name><operator pos:line="30" pos:column="45">)<pos:position pos:line="30" pos:column="46"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="48">0<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call><operator pos:line="30" pos:column="50">)<pos:position pos:line="30" pos:column="51"/></operator></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52">
    <block type="pseudo"><goto pos:line="31" pos:column="5">goto <name pos:line="31" pos:column="10">fail<pos:position pos:line="31" pos:column="14"/></name>;<pos:position pos:line="31" pos:column="15"/></goto></block></then></if>

  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><operator pos:line="33" pos:column="7">!<pos:position pos:line="33" pos:column="8"/></operator><name><name pos:line="33" pos:column="8">mx<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">.<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">mbox<pos:position pos:line="33" pos:column="15"/></name></name></expr>)<pos:position pos:line="33" pos:column="16"/></condition><then pos:line="33" pos:column="16">
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><name pos:line="35" pos:column="5">home_namespace<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <literal type="number" pos:line="35" pos:column="22">1<pos:position pos:line="35" pos:column="23"/></literal></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">mbox<pos:position pos:line="36" pos:column="9"/></name><index pos:line="36" pos:column="9">[<expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>]<pos:position pos:line="36" pos:column="12"/></index></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <literal type="char" pos:line="36" pos:column="15">'\0'<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>		<comment type="block" pos:line="36" pos:column="33">/* Do not replace "" with "INBOX" here */</comment>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">mx<pos:position pos:line="37" pos:column="7"/></name><operator pos:line="37" pos:column="7">.<pos:position pos:line="37" pos:column="8"/></operator><name pos:line="37" pos:column="8">mbox<pos:position pos:line="37" pos:column="12"/></name></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">safe_strdup<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">ImapHomeNamespace<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">nns<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">=<pos:position pos:line="38" pos:column="10"/></operator> <literal type="number" pos:line="38" pos:column="11">0<pos:position pos:line="38" pos:column="12"/></literal></expr>;<pos:position pos:line="38" pos:column="13"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><call><name pos:line="39" pos:column="9">mutt_bit_isset<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name><name pos:line="39" pos:column="24">idata<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">-&gt;<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="31">capabilities<pos:position pos:line="39" pos:column="43"/></name></name></expr></argument>,<argument><expr><name pos:line="39" pos:column="44">NAMESPACE<pos:position pos:line="39" pos:column="53"/></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="55"/></condition><then pos:line="39" pos:column="55">
    <block pos:line="40" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">mutt_message<pos:position pos:line="41" pos:column="19"/></name></type> <name pos:line="41" pos:column="20">_<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><literal type="string" pos:line="41" pos:column="22">"Getting namespaces..."<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></decl>;<pos:position pos:line="41" pos:column="47"/></decl_stmt>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><call><name pos:line="42" pos:column="11">browse_get_namespace<pos:position pos:line="42" pos:column="31"/></name> <argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">idata<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">nsbuf<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="47">sizeof <argument_list pos:line="42" pos:column="54">(<argument><expr><name pos:line="42" pos:column="55">nsbuf<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></sizeof></expr></argument>, 
			 <argument><expr><name pos:line="43" pos:column="26">nsi<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="31">sizeof <argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">nsi<pos:position pos:line="43" pos:column="42"/></name></expr></argument>)<pos:position pos:line="43" pos:column="43"/></argument_list></sizeof></expr></argument>,  <argument><expr><operator pos:line="43" pos:column="46">&amp;<pos:position pos:line="43" pos:column="51"/></operator><name pos:line="43" pos:column="47">nns<pos:position pos:line="43" pos:column="50"/></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call> <operator pos:line="43" pos:column="52">!=<pos:position pos:line="43" pos:column="54"/></operator> <literal type="number" pos:line="43" pos:column="55">0<pos:position pos:line="43" pos:column="56"/></literal></expr>)<pos:position pos:line="43" pos:column="57"/></condition><then pos:line="43" pos:column="57">
	<block type="pseudo"><goto pos:line="44" pos:column="9">goto <name pos:line="44" pos:column="14">fail<pos:position pos:line="44" pos:column="18"/></name>;<pos:position pos:line="44" pos:column="19"/></goto></block></then></if>
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><call><name pos:line="45" pos:column="11">browse_verify_namespace<pos:position pos:line="45" pos:column="34"/></name> <argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">idata<pos:position pos:line="45" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">nsi<pos:position pos:line="45" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="48">nns<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call> <operator pos:line="45" pos:column="53">!=<pos:position pos:line="45" pos:column="55"/></operator> <literal type="number" pos:line="45" pos:column="56">0<pos:position pos:line="45" pos:column="57"/></literal></expr>)<pos:position pos:line="45" pos:column="58"/></condition><then pos:line="45" pos:column="58">
	<block type="pseudo"><goto pos:line="46" pos:column="9">goto <name pos:line="46" pos:column="14">fail<pos:position pos:line="46" pos:column="18"/></name>;<pos:position pos:line="46" pos:column="19"/></goto></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="50" pos:column="3">mutt_message<pos:position pos:line="50" pos:column="15"/></name></type> <name pos:line="50" pos:column="16">_<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><literal type="string" pos:line="50" pos:column="18">"Getting folder list..."<pos:position pos:line="50" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></decl>;<pos:position pos:line="50" pos:column="44"/></decl_stmt>

  <comment type="block" pos:line="52" pos:column="3">/* skip check for parents when at the root */</comment>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name><name pos:line="53" pos:column="7">mx<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">.<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">mbox<pos:position pos:line="53" pos:column="14"/></name></name> <operator pos:line="53" pos:column="15">&amp;&amp;<pos:position pos:line="53" pos:column="25"/></operator> <name><name pos:line="53" pos:column="18">mx<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">.<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">mbox<pos:position pos:line="53" pos:column="25"/></name><index pos:line="53" pos:column="25">[<expr><literal type="number" pos:line="53" pos:column="26">0<pos:position pos:line="53" pos:column="27"/></literal></expr>]<pos:position pos:line="53" pos:column="28"/></index></name> <operator pos:line="53" pos:column="29">!=<pos:position pos:line="53" pos:column="31"/></operator> <literal type="char" pos:line="53" pos:column="32">'\0'<pos:position pos:line="53" pos:column="36"/></literal></expr>)<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37">
  <block pos:line="54" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">imap_fix_path<pos:position pos:line="55" pos:column="18"/></name> <argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">idata<pos:position pos:line="55" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="27">mx<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">.<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">mbox<pos:position pos:line="55" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="36">mbox<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="42">sizeof <argument_list pos:line="55" pos:column="49">(<argument><expr><name pos:line="55" pos:column="50">mbox<pos:position pos:line="55" pos:column="54"/></name></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">imap_munge_mbox_name<pos:position pos:line="56" pos:column="25"/></name> <argument_list pos:line="56" pos:column="26">(<argument><expr><name pos:line="56" pos:column="27">buf<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="32">sizeof <argument_list pos:line="56" pos:column="39">(<argument><expr><name pos:line="56" pos:column="40">buf<pos:position pos:line="56" pos:column="43"/></name></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">mbox<pos:position pos:line="56" pos:column="50"/></name></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">imap_unquote_string<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">buf<pos:position pos:line="57" pos:column="28"/></name></expr></argument>)<pos:position pos:line="57" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt> <comment type="block" pos:line="57" pos:column="31">/* As kludgy as it gets */</comment>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">mbox<pos:position pos:line="58" pos:column="9"/></name><index pos:line="58" pos:column="9">[<expr><sizeof pos:line="58" pos:column="10">sizeof <argument_list pos:line="58" pos:column="17">(<argument><expr><name pos:line="58" pos:column="18">mbox<pos:position pos:line="58" pos:column="22"/></name></expr></argument>)<pos:position pos:line="58" pos:column="23"/></argument_list></sizeof> <operator pos:line="58" pos:column="24">-<pos:position pos:line="58" pos:column="25"/></operator> <literal type="number" pos:line="58" pos:column="26">1<pos:position pos:line="58" pos:column="27"/></literal></expr>]<pos:position pos:line="58" pos:column="28"/></index></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <literal type="char" pos:line="58" pos:column="31">'\0'<pos:position pos:line="58" pos:column="35"/></literal></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">strncpy<pos:position pos:line="59" pos:column="12"/></name> <argument_list pos:line="59" pos:column="13">(<argument><expr><name pos:line="59" pos:column="14">mbox<pos:position pos:line="59" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="20">buf<pos:position pos:line="59" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="25">sizeof <argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">mbox<pos:position pos:line="59" pos:column="37"/></name></expr></argument>)<pos:position pos:line="59" pos:column="38"/></argument_list></sizeof> <operator pos:line="59" pos:column="39">-<pos:position pos:line="59" pos:column="40"/></operator> <literal type="number" pos:line="59" pos:column="41">1<pos:position pos:line="59" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="60" pos:column="5">n<pos:position pos:line="60" pos:column="6"/></name> <operator pos:line="60" pos:column="7">=<pos:position pos:line="60" pos:column="8"/></operator> <call><name pos:line="60" pos:column="9">mutt_strlen<pos:position pos:line="60" pos:column="20"/></name> <argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">mbox<pos:position pos:line="60" pos:column="26"/></name></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="62" pos:column="5">dprint<pos:position pos:line="62" pos:column="11"/></name> <argument_list pos:line="62" pos:column="12">(<argument><expr><literal type="number" pos:line="62" pos:column="13">3<pos:position pos:line="62" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="16">(<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="17">debugfile<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">,<pos:position pos:line="62" pos:column="27"/></operator> <literal type="string" pos:line="62" pos:column="28">"imap_browse: mbox: %s\n"<pos:position pos:line="62" pos:column="53"/></literal><operator pos:line="62" pos:column="53">,<pos:position pos:line="62" pos:column="54"/></operator> <name pos:line="62" pos:column="55">mbox<pos:position pos:line="62" pos:column="59"/></name><operator pos:line="62" pos:column="59">)<pos:position pos:line="62" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="64" pos:column="5">/* if our target exists and has inferiors, enter it if we
     * aren't already going to */</comment>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">mbox<pos:position pos:line="66" pos:column="13"/></name><index pos:line="66" pos:column="13">[<expr><name pos:line="66" pos:column="14">n<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">-<pos:position pos:line="66" pos:column="16"/></operator><literal type="number" pos:line="66" pos:column="16">1<pos:position pos:line="66" pos:column="17"/></literal></expr>]<pos:position pos:line="66" pos:column="18"/></index></name> <operator pos:line="66" pos:column="19">!=<pos:position pos:line="66" pos:column="21"/></operator> <name><name pos:line="66" pos:column="22">idata<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">-&gt;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="29">delim<pos:position pos:line="66" pos:column="34"/></name></name></expr>)<pos:position pos:line="66" pos:column="35"/></condition><then pos:line="66" pos:column="35">
    <block pos:line="67" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">snprintf<pos:position pos:line="68" pos:column="15"/></name> <argument_list pos:line="68" pos:column="16">(<argument><expr><name pos:line="68" pos:column="17">buf<pos:position pos:line="68" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="22">sizeof <argument_list pos:line="68" pos:column="29">(<argument><expr><name pos:line="68" pos:column="30">buf<pos:position pos:line="68" pos:column="33"/></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="36">"%s \"\" \"%s\""<pos:position pos:line="68" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="54">list_cmd<pos:position pos:line="68" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="64">mbox<pos:position pos:line="68" pos:column="68"/></name></expr></argument>)<pos:position pos:line="68" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">imap_cmd_start<pos:position pos:line="69" pos:column="21"/></name> <argument_list pos:line="69" pos:column="22">(<argument><expr><name pos:line="69" pos:column="23">idata<pos:position pos:line="69" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="30">buf<pos:position pos:line="69" pos:column="33"/></name></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>
      <do pos:line="70" pos:column="7">do 
      <block pos:line="71" pos:column="7">{
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name pos:line="72" pos:column="13">imap_parse_list_response<pos:position pos:line="72" pos:column="37"/></name> <argument_list pos:line="72" pos:column="38">(<argument><expr><name pos:line="72" pos:column="39">idata<pos:position pos:line="72" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="46">&amp;<pos:position pos:line="72" pos:column="51"/></operator><name pos:line="72" pos:column="47">cur_folder<pos:position pos:line="72" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="59">&amp;<pos:position pos:line="72" pos:column="64"/></operator><name pos:line="72" pos:column="60">noselect<pos:position pos:line="72" pos:column="68"/></name></expr></argument>,
            <argument><expr><operator pos:line="73" pos:column="13">&amp;<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="14">noinferiors<pos:position pos:line="73" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="27">&amp;<pos:position pos:line="73" pos:column="32"/></operator><name><name pos:line="73" pos:column="28">idata<pos:position pos:line="73" pos:column="33"/></name><operator pos:line="73" pos:column="33">-&gt;<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="35">delim<pos:position pos:line="73" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="41"/></argument_list></call> <operator pos:line="73" pos:column="42">!=<pos:position pos:line="73" pos:column="44"/></operator> <literal type="number" pos:line="73" pos:column="45">0<pos:position pos:line="73" pos:column="46"/></literal></expr>)<pos:position pos:line="73" pos:column="47"/></condition><then pos:line="73" pos:column="47">
	  <block type="pseudo"><goto pos:line="74" pos:column="11">goto <name pos:line="74" pos:column="16">fail<pos:position pos:line="74" pos:column="20"/></name>;<pos:position pos:line="74" pos:column="21"/></goto></block></then></if>

        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">cur_folder<pos:position pos:line="76" pos:column="23"/></name></expr>)<pos:position pos:line="76" pos:column="24"/></condition><then pos:line="76" pos:column="24">
        <block pos:line="77" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="78" pos:column="11">imap_unmunge_mbox_name<pos:position pos:line="78" pos:column="33"/></name> <argument_list pos:line="78" pos:column="34">(<argument><expr><name pos:line="78" pos:column="35">cur_folder<pos:position pos:line="78" pos:column="45"/></name></expr></argument>)<pos:position pos:line="78" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="47"/></expr_stmt>

          <if pos:line="80" pos:column="11">if <condition pos:line="80" pos:column="14">(<expr><operator pos:line="80" pos:column="15">!<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="16">noinferiors<pos:position pos:line="80" pos:column="27"/></name> <operator pos:line="80" pos:column="28">&amp;&amp;<pos:position pos:line="80" pos:column="38"/></operator> <name><name pos:line="80" pos:column="31">cur_folder<pos:position pos:line="80" pos:column="41"/></name><index pos:line="80" pos:column="41">[<expr><literal type="number" pos:line="80" pos:column="42">0<pos:position pos:line="80" pos:column="43"/></literal></expr>]<pos:position pos:line="80" pos:column="44"/></index></name> <operator pos:line="80" pos:column="45">&amp;&amp;<pos:position pos:line="80" pos:column="55"/></operator>
            <operator pos:line="81" pos:column="13">(<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">n<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <call><name pos:line="81" pos:column="18">strlen<pos:position pos:line="81" pos:column="24"/></name> <argument_list pos:line="81" pos:column="25">(<argument><expr><name pos:line="81" pos:column="26">mbox<pos:position pos:line="81" pos:column="30"/></name></expr></argument>)<pos:position pos:line="81" pos:column="31"/></argument_list></call><operator pos:line="81" pos:column="31">)<pos:position pos:line="81" pos:column="32"/></operator> <operator pos:line="81" pos:column="33">&lt;<pos:position pos:line="81" pos:column="37"/></operator> <name pos:line="81" pos:column="35">LONG_STRING<pos:position pos:line="81" pos:column="46"/></name><operator pos:line="81" pos:column="46">-<pos:position pos:line="81" pos:column="47"/></operator><literal type="number" pos:line="81" pos:column="47">1<pos:position pos:line="81" pos:column="48"/></literal></expr>)<pos:position pos:line="81" pos:column="49"/></condition><then pos:line="81" pos:column="49">
          <block pos:line="82" pos:column="11">{
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">mbox<pos:position pos:line="83" pos:column="17"/></name><index pos:line="83" pos:column="17">[<expr><name pos:line="83" pos:column="18">n<pos:position pos:line="83" pos:column="19"/></name><operator pos:line="83" pos:column="19">++<pos:position pos:line="83" pos:column="21"/></operator></expr>]<pos:position pos:line="83" pos:column="22"/></index></name> <operator pos:line="83" pos:column="23">=<pos:position pos:line="83" pos:column="24"/></operator> <name><name pos:line="83" pos:column="25">idata<pos:position pos:line="83" pos:column="30"/></name><operator pos:line="83" pos:column="30">-&gt;<pos:position pos:line="83" pos:column="35"/></operator><name pos:line="83" pos:column="32">delim<pos:position pos:line="83" pos:column="37"/></name></name></expr>;<pos:position pos:line="83" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="84" pos:column="13">mbox<pos:position pos:line="84" pos:column="17"/></name><index pos:line="84" pos:column="17">[<expr><name pos:line="84" pos:column="18">n<pos:position pos:line="84" pos:column="19"/></name></expr>]<pos:position pos:line="84" pos:column="20"/></index></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <literal type="char" pos:line="84" pos:column="23">'\0'<pos:position pos:line="84" pos:column="27"/></literal></expr>;<pos:position pos:line="84" pos:column="28"/></expr_stmt>
          }<pos:position pos:line="85" pos:column="12"/></block></then></if>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>
      }<pos:position pos:line="87" pos:column="8"/></block>
      while <condition pos:line="88" pos:column="13">(<expr><call><name pos:line="88" pos:column="14">ascii_strncmp<pos:position pos:line="88" pos:column="27"/></name> <argument_list pos:line="88" pos:column="28">(<argument><expr><name><name pos:line="88" pos:column="29">idata<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">-&gt;<pos:position pos:line="88" pos:column="39"/></operator><name pos:line="88" pos:column="36">cmd<pos:position pos:line="88" pos:column="39"/></name><operator pos:line="88" pos:column="39">.<pos:position pos:line="88" pos:column="40"/></operator><name pos:line="88" pos:column="40">buf<pos:position pos:line="88" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="45">idata<pos:position pos:line="88" pos:column="50"/></name><operator pos:line="88" pos:column="50">-&gt;<pos:position pos:line="88" pos:column="55"/></operator><name pos:line="88" pos:column="52">cmd<pos:position pos:line="88" pos:column="55"/></name><operator pos:line="88" pos:column="55">.<pos:position pos:line="88" pos:column="56"/></operator><name pos:line="88" pos:column="56">seq<pos:position pos:line="88" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="61">SEQLEN<pos:position pos:line="88" pos:column="67"/></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="69"/></condition>;<pos:position pos:line="88" pos:column="70"/></do>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="91" pos:column="5">/* if we're descending a folder, mark it as current in browser_state */</comment>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name><name pos:line="92" pos:column="9">mbox<pos:position pos:line="92" pos:column="13"/></name><index pos:line="92" pos:column="13">[<expr><name pos:line="92" pos:column="14">n<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">-<pos:position pos:line="92" pos:column="16"/></operator><literal type="number" pos:line="92" pos:column="16">1<pos:position pos:line="92" pos:column="17"/></literal></expr>]<pos:position pos:line="92" pos:column="18"/></index></name> <operator pos:line="92" pos:column="19">==<pos:position pos:line="92" pos:column="21"/></operator> <name><name pos:line="92" pos:column="22">idata<pos:position pos:line="92" pos:column="27"/></name><operator pos:line="92" pos:column="27">-&gt;<pos:position pos:line="92" pos:column="32"/></operator><name pos:line="92" pos:column="29">delim<pos:position pos:line="92" pos:column="34"/></name></name></expr>)<pos:position pos:line="92" pos:column="35"/></condition><then pos:line="92" pos:column="35">
    <block pos:line="93" pos:column="5">{
      <comment type="block" pos:line="94" pos:column="7">/* don't show parents in the home namespace */</comment>
      <if pos:line="95" pos:column="7">if <condition pos:line="95" pos:column="10">(<expr><operator pos:line="95" pos:column="11">!<pos:position pos:line="95" pos:column="12"/></operator><name pos:line="95" pos:column="12">home_namespace<pos:position pos:line="95" pos:column="26"/></name></expr>)<pos:position pos:line="95" pos:column="27"/></condition><then pos:line="95" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="9">showparents<pos:position pos:line="96" pos:column="20"/></name> <operator pos:line="96" pos:column="21">=<pos:position pos:line="96" pos:column="22"/></operator> <literal type="number" pos:line="96" pos:column="23">1<pos:position pos:line="96" pos:column="24"/></literal></expr>;<pos:position pos:line="96" pos:column="25"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="97" pos:column="7">imap_qualify_path<pos:position pos:line="97" pos:column="24"/></name> <argument_list pos:line="97" pos:column="25">(<argument><expr><name pos:line="97" pos:column="26">buf<pos:position pos:line="97" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="31">sizeof <argument_list pos:line="97" pos:column="38">(<argument><expr><name pos:line="97" pos:column="39">buf<pos:position pos:line="97" pos:column="42"/></name></expr></argument>)<pos:position pos:line="97" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="97" pos:column="45">&amp;<pos:position pos:line="97" pos:column="50"/></operator><name pos:line="97" pos:column="46">mx<pos:position pos:line="97" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="50">mbox<pos:position pos:line="97" pos:column="54"/></name></expr></argument>)<pos:position pos:line="97" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="98" pos:column="7">state<pos:position pos:line="98" pos:column="12"/></name><operator pos:line="98" pos:column="12">-&gt;<pos:position pos:line="98" pos:column="17"/></operator><name pos:line="98" pos:column="14">folder<pos:position pos:line="98" pos:column="20"/></name></name> <operator pos:line="98" pos:column="21">=<pos:position pos:line="98" pos:column="22"/></operator> <call><name pos:line="98" pos:column="23">safe_strdup<pos:position pos:line="98" pos:column="34"/></name> <argument_list pos:line="98" pos:column="35">(<argument><expr><name pos:line="98" pos:column="36">buf<pos:position pos:line="98" pos:column="39"/></name></expr></argument>)<pos:position pos:line="98" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="99" pos:column="7">n<pos:position pos:line="99" pos:column="8"/></name><operator pos:line="99" pos:column="8">--<pos:position pos:line="99" pos:column="10"/></operator></expr>;<pos:position pos:line="99" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="102" pos:column="5">/* Find superiors to list
     * Note: UW-IMAP servers return folder + delimiter when asked to list
     *  folder + delimiter. Cyrus servers don't. So we ask for folder,
     *  and tack on delimiter ourselves.
     * Further note: UW-IMAP servers return nothing when asked for 
     *  NAMESPACES without delimiters at the end. Argh! */</comment>
    <for pos:line="108" pos:column="5">for <control pos:line="108" pos:column="9">(<init><expr><name pos:line="108" pos:column="10">n<pos:position pos:line="108" pos:column="11"/></name><operator pos:line="108" pos:column="11">--<pos:position pos:line="108" pos:column="13"/></operator></expr>;<pos:position pos:line="108" pos:column="14"/></init> <condition><expr><name pos:line="108" pos:column="15">n<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">&gt;=<pos:position pos:line="108" pos:column="22"/></operator> <literal type="number" pos:line="108" pos:column="20">0<pos:position pos:line="108" pos:column="21"/></literal> <operator pos:line="108" pos:column="22">&amp;&amp;<pos:position pos:line="108" pos:column="32"/></operator> <name><name pos:line="108" pos:column="25">mbox<pos:position pos:line="108" pos:column="29"/></name><index pos:line="108" pos:column="29">[<expr><name pos:line="108" pos:column="30">n<pos:position pos:line="108" pos:column="31"/></name></expr>]<pos:position pos:line="108" pos:column="32"/></index></name> <operator pos:line="108" pos:column="33">!=<pos:position pos:line="108" pos:column="35"/></operator> <name><name pos:line="108" pos:column="36">idata<pos:position pos:line="108" pos:column="41"/></name><operator pos:line="108" pos:column="41">-&gt;<pos:position pos:line="108" pos:column="46"/></operator><name pos:line="108" pos:column="43">delim<pos:position pos:line="108" pos:column="48"/></name></name></expr> ;<pos:position pos:line="108" pos:column="50"/></condition> <incr><expr><name pos:line="108" pos:column="51">n<pos:position pos:line="108" pos:column="52"/></name><operator pos:line="108" pos:column="52">--<pos:position pos:line="108" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="108" pos:column="55"/></control><block type="pseudo"><empty_stmt pos:line="108" pos:column="55">;<pos:position pos:line="108" pos:column="56"/></empty_stmt></block></for>
    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><name pos:line="109" pos:column="9">n<pos:position pos:line="109" pos:column="10"/></name> <operator pos:line="109" pos:column="11">&gt;<pos:position pos:line="109" pos:column="15"/></operator> <literal type="number" pos:line="109" pos:column="13">0<pos:position pos:line="109" pos:column="14"/></literal></expr>)<pos:position pos:line="109" pos:column="15"/></condition><then pos:line="109" pos:column="15">			<comment type="block" pos:line="109" pos:column="33">/* "aaaa/bbbb/" -&gt; "aaaa" */</comment>
    <block pos:line="110" pos:column="5">{
      <comment type="block" pos:line="111" pos:column="7">/* forget the check, it is too delicate (see above). Have we ever
       * had the parent not exist? */</comment>
      <expr_stmt><expr><name pos:line="113" pos:column="7">ctmp<pos:position pos:line="113" pos:column="11"/></name> <operator pos:line="113" pos:column="12">=<pos:position pos:line="113" pos:column="13"/></operator> <name><name pos:line="113" pos:column="14">mbox<pos:position pos:line="113" pos:column="18"/></name><index pos:line="113" pos:column="18">[<expr><name pos:line="113" pos:column="19">n<pos:position pos:line="113" pos:column="20"/></name></expr>]<pos:position pos:line="113" pos:column="21"/></index></name></expr>;<pos:position pos:line="113" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="114" pos:column="7">mbox<pos:position pos:line="114" pos:column="11"/></name><index pos:line="114" pos:column="11">[<expr><name pos:line="114" pos:column="12">n<pos:position pos:line="114" pos:column="13"/></name></expr>]<pos:position pos:line="114" pos:column="14"/></index></name> <operator pos:line="114" pos:column="15">=<pos:position pos:line="114" pos:column="16"/></operator> <literal type="char" pos:line="114" pos:column="17">'\0'<pos:position pos:line="114" pos:column="21"/></literal></expr>;<pos:position pos:line="114" pos:column="22"/></expr_stmt>

      <if pos:line="116" pos:column="7">if <condition pos:line="116" pos:column="10">(<expr><name pos:line="116" pos:column="11">showparents<pos:position pos:line="116" pos:column="22"/></name></expr>)<pos:position pos:line="116" pos:column="23"/></condition><then pos:line="116" pos:column="23">
      <block pos:line="117" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="118" pos:column="9">dprint<pos:position pos:line="118" pos:column="15"/></name> <argument_list pos:line="118" pos:column="16">(<argument><expr><literal type="number" pos:line="118" pos:column="17">3<pos:position pos:line="118" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="118" pos:column="20">(<pos:position pos:line="118" pos:column="21"/></operator><name pos:line="118" pos:column="21">debugfile<pos:position pos:line="118" pos:column="30"/></name><operator pos:line="118" pos:column="30">,<pos:position pos:line="118" pos:column="31"/></operator> <literal type="string" pos:line="118" pos:column="32">"imap_init_browse: adding parent %s\n"<pos:position pos:line="118" pos:column="70"/></literal><operator pos:line="118" pos:column="70">,<pos:position pos:line="118" pos:column="71"/></operator> <name pos:line="118" pos:column="72">mbox<pos:position pos:line="118" pos:column="76"/></name><operator pos:line="118" pos:column="76">)<pos:position pos:line="118" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="118" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="119" pos:column="9">imap_add_folder<pos:position pos:line="119" pos:column="24"/></name> <argument_list pos:line="119" pos:column="25">(<argument><expr><name><name pos:line="119" pos:column="26">idata<pos:position pos:line="119" pos:column="31"/></name><operator pos:line="119" pos:column="31">-&gt;<pos:position pos:line="119" pos:column="36"/></operator><name pos:line="119" pos:column="33">delim<pos:position pos:line="119" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="40">mbox<pos:position pos:line="119" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="46">1<pos:position pos:line="119" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="49">0<pos:position pos:line="119" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="52">state<pos:position pos:line="119" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="59">1<pos:position pos:line="119" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="120" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="122" pos:column="7">/* if our target isn't a folder, we are in our superior */</comment>
      <if pos:line="123" pos:column="7">if <condition pos:line="123" pos:column="10">(<expr><operator pos:line="123" pos:column="11">!<pos:position pos:line="123" pos:column="12"/></operator><name><name pos:line="123" pos:column="12">state<pos:position pos:line="123" pos:column="17"/></name><operator pos:line="123" pos:column="17">-&gt;<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="19">folder<pos:position pos:line="123" pos:column="25"/></name></name></expr>)<pos:position pos:line="123" pos:column="26"/></condition><then pos:line="123" pos:column="26">
      <block pos:line="124" pos:column="7">{
        <comment type="block" pos:line="125" pos:column="9">/* store folder with delimiter */</comment>
        <expr_stmt><expr><name><name pos:line="126" pos:column="9">mbox<pos:position pos:line="126" pos:column="13"/></name><index pos:line="126" pos:column="13">[<expr><name pos:line="126" pos:column="14">n<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">++<pos:position pos:line="126" pos:column="17"/></operator></expr>]<pos:position pos:line="126" pos:column="18"/></index></name> <operator pos:line="126" pos:column="19">=<pos:position pos:line="126" pos:column="20"/></operator> <name pos:line="126" pos:column="21">ctmp<pos:position pos:line="126" pos:column="25"/></name></expr>;<pos:position pos:line="126" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="127" pos:column="9">ctmp<pos:position pos:line="127" pos:column="13"/></name> <operator pos:line="127" pos:column="14">=<pos:position pos:line="127" pos:column="15"/></operator> <name><name pos:line="127" pos:column="16">mbox<pos:position pos:line="127" pos:column="20"/></name><index pos:line="127" pos:column="20">[<expr><name pos:line="127" pos:column="21">n<pos:position pos:line="127" pos:column="22"/></name></expr>]<pos:position pos:line="127" pos:column="23"/></index></name></expr>;<pos:position pos:line="127" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="128" pos:column="9">mbox<pos:position pos:line="128" pos:column="13"/></name><index pos:line="128" pos:column="13">[<expr><name pos:line="128" pos:column="14">n<pos:position pos:line="128" pos:column="15"/></name></expr>]<pos:position pos:line="128" pos:column="16"/></index></name> <operator pos:line="128" pos:column="17">=<pos:position pos:line="128" pos:column="18"/></operator> <literal type="char" pos:line="128" pos:column="19">'\0'<pos:position pos:line="128" pos:column="23"/></literal></expr>;<pos:position pos:line="128" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">imap_qualify_path<pos:position pos:line="129" pos:column="26"/></name> <argument_list pos:line="129" pos:column="27">(<argument><expr><name pos:line="129" pos:column="28">buf<pos:position pos:line="129" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="129" pos:column="33">sizeof <argument_list pos:line="129" pos:column="40">(<argument><expr><name pos:line="129" pos:column="41">buf<pos:position pos:line="129" pos:column="44"/></name></expr></argument>)<pos:position pos:line="129" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="129" pos:column="47">&amp;<pos:position pos:line="129" pos:column="52"/></operator><name pos:line="129" pos:column="48">mx<pos:position pos:line="129" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="52">mbox<pos:position pos:line="129" pos:column="56"/></name></expr></argument>)<pos:position pos:line="129" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="130" pos:column="9">state<pos:position pos:line="130" pos:column="14"/></name><operator pos:line="130" pos:column="14">-&gt;<pos:position pos:line="130" pos:column="19"/></operator><name pos:line="130" pos:column="16">folder<pos:position pos:line="130" pos:column="22"/></name></name> <operator pos:line="130" pos:column="23">=<pos:position pos:line="130" pos:column="24"/></operator> <call><name pos:line="130" pos:column="25">safe_strdup<pos:position pos:line="130" pos:column="36"/></name> <argument_list pos:line="130" pos:column="37">(<argument><expr><name pos:line="130" pos:column="38">buf<pos:position pos:line="130" pos:column="41"/></name></expr></argument>)<pos:position pos:line="130" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="131" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="132" pos:column="7">mbox<pos:position pos:line="132" pos:column="11"/></name><index pos:line="132" pos:column="11">[<expr><name pos:line="132" pos:column="12">n<pos:position pos:line="132" pos:column="13"/></name></expr>]<pos:position pos:line="132" pos:column="14"/></index></name> <operator pos:line="132" pos:column="15">=<pos:position pos:line="132" pos:column="16"/></operator> <name pos:line="132" pos:column="17">ctmp<pos:position pos:line="132" pos:column="21"/></name></expr>;<pos:position pos:line="132" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="133" pos:column="6"/></block></then> 
    <comment type="block" pos:line="134" pos:column="5">/* "/bbbb/" -&gt; add  "/", "aaaa/" -&gt; add "" */</comment>
    <else pos:line="135" pos:column="5">else
    <block pos:line="136" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="137" pos:column="7">char<pos:position pos:line="137" pos:column="11"/></name></type> <name><name pos:line="137" pos:column="12">relpath<pos:position pos:line="137" pos:column="19"/></name><index pos:line="137" pos:column="19">[<expr><literal type="number" pos:line="137" pos:column="20">2<pos:position pos:line="137" pos:column="21"/></literal></expr>]<pos:position pos:line="137" pos:column="22"/></index></name></decl>;<pos:position pos:line="137" pos:column="23"/></decl_stmt>
      <comment type="block" pos:line="138" pos:column="7">/* folder may be "/" */</comment>
      <expr_stmt><expr><call><name pos:line="139" pos:column="7">snprintf<pos:position pos:line="139" pos:column="15"/></name> <argument_list pos:line="139" pos:column="16">(<argument><expr><name pos:line="139" pos:column="17">relpath<pos:position pos:line="139" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="139" pos:column="26">sizeof <argument_list pos:line="139" pos:column="33">(<argument><expr><name pos:line="139" pos:column="34">relpath<pos:position pos:line="139" pos:column="41"/></name></expr></argument>)<pos:position pos:line="139" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="44">"%c"<pos:position pos:line="139" pos:column="48"/></literal></expr></argument> , <argument><expr><ternary><condition><expr><name pos:line="139" pos:column="51">n<pos:position pos:line="139" pos:column="52"/></name> <operator pos:line="139" pos:column="53">&lt;<pos:position pos:line="139" pos:column="57"/></operator> <literal type="number" pos:line="139" pos:column="55">0<pos:position pos:line="139" pos:column="56"/></literal></expr> ?<pos:position pos:line="139" pos:column="58"/></condition><then pos:line="139" pos:column="58"> <expr><literal type="char" pos:line="139" pos:column="59">'\0'<pos:position pos:line="139" pos:column="63"/></literal></expr> <pos:position pos:line="139" pos:column="64"/></then><else pos:line="139" pos:column="64">: <expr><name><name pos:line="139" pos:column="66">idata<pos:position pos:line="139" pos:column="71"/></name><operator pos:line="139" pos:column="71">-&gt;<pos:position pos:line="139" pos:column="76"/></operator><name pos:line="139" pos:column="73">delim<pos:position pos:line="139" pos:column="78"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="139" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="80"/></expr_stmt>
      <if pos:line="140" pos:column="7">if <condition pos:line="140" pos:column="10">(<expr><name pos:line="140" pos:column="11">showparents<pos:position pos:line="140" pos:column="22"/></name></expr>)<pos:position pos:line="140" pos:column="23"/></condition><then pos:line="140" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="9">imap_add_folder<pos:position pos:line="141" pos:column="24"/></name> <argument_list pos:line="141" pos:column="25">(<argument><expr><name><name pos:line="141" pos:column="26">idata<pos:position pos:line="141" pos:column="31"/></name><operator pos:line="141" pos:column="31">-&gt;<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="33">delim<pos:position pos:line="141" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="40">relpath<pos:position pos:line="141" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="49">1<pos:position pos:line="141" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="52">0<pos:position pos:line="141" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="55">state<pos:position pos:line="141" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="62">1<pos:position pos:line="141" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="65"/></expr_stmt></block></then></if> 
      <if pos:line="142" pos:column="7">if <condition pos:line="142" pos:column="10">(<expr><operator pos:line="142" pos:column="11">!<pos:position pos:line="142" pos:column="12"/></operator><name><name pos:line="142" pos:column="12">state<pos:position pos:line="142" pos:column="17"/></name><operator pos:line="142" pos:column="17">-&gt;<pos:position pos:line="142" pos:column="22"/></operator><name pos:line="142" pos:column="19">folder<pos:position pos:line="142" pos:column="25"/></name></name></expr>)<pos:position pos:line="142" pos:column="26"/></condition><then pos:line="142" pos:column="26">
      <block pos:line="143" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="144" pos:column="9">imap_qualify_path<pos:position pos:line="144" pos:column="26"/></name> <argument_list pos:line="144" pos:column="27">(<argument><expr><name pos:line="144" pos:column="28">buf<pos:position pos:line="144" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="144" pos:column="33">sizeof <argument_list pos:line="144" pos:column="40">(<argument><expr><name pos:line="144" pos:column="41">buf<pos:position pos:line="144" pos:column="44"/></name></expr></argument>)<pos:position pos:line="144" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="144" pos:column="47">&amp;<pos:position pos:line="144" pos:column="52"/></operator><name pos:line="144" pos:column="48">mx<pos:position pos:line="144" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="52">relpath<pos:position pos:line="144" pos:column="59"/></name></expr></argument>)<pos:position pos:line="144" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="145" pos:column="9">state<pos:position pos:line="145" pos:column="14"/></name><operator pos:line="145" pos:column="14">-&gt;<pos:position pos:line="145" pos:column="19"/></operator><name pos:line="145" pos:column="16">folder<pos:position pos:line="145" pos:column="22"/></name></name> <operator pos:line="145" pos:column="23">=<pos:position pos:line="145" pos:column="24"/></operator> <call><name pos:line="145" pos:column="25">safe_strdup<pos:position pos:line="145" pos:column="36"/></name> <argument_list pos:line="145" pos:column="37">(<argument><expr><name pos:line="145" pos:column="38">buf<pos:position pos:line="145" pos:column="41"/></name></expr></argument>)<pos:position pos:line="145" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="146" pos:column="8"/></block></then></if>
    }<pos:position pos:line="147" pos:column="6"/></block></else></if>
  }<pos:position pos:line="148" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="150" pos:column="3">/* no namespace, no folder: set folder to host only */</comment>
  <if pos:line="151" pos:column="3">if <condition pos:line="151" pos:column="6">(<expr><operator pos:line="151" pos:column="7">!<pos:position pos:line="151" pos:column="8"/></operator><name><name pos:line="151" pos:column="8">state<pos:position pos:line="151" pos:column="13"/></name><operator pos:line="151" pos:column="13">-&gt;<pos:position pos:line="151" pos:column="18"/></operator><name pos:line="151" pos:column="15">folder<pos:position pos:line="151" pos:column="21"/></name></name></expr>)<pos:position pos:line="151" pos:column="22"/></condition><then pos:line="151" pos:column="22">
  <block pos:line="152" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="153" pos:column="5">imap_qualify_path<pos:position pos:line="153" pos:column="22"/></name> <argument_list pos:line="153" pos:column="23">(<argument><expr><name pos:line="153" pos:column="24">buf<pos:position pos:line="153" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="153" pos:column="29">sizeof <argument_list pos:line="153" pos:column="36">(<argument><expr><name pos:line="153" pos:column="37">buf<pos:position pos:line="153" pos:column="40"/></name></expr></argument>)<pos:position pos:line="153" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="153" pos:column="43">&amp;<pos:position pos:line="153" pos:column="48"/></operator><name pos:line="153" pos:column="44">mx<pos:position pos:line="153" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="48">NULL<pos:position pos:line="153" pos:column="52"/></name></expr></argument>)<pos:position pos:line="153" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="154" pos:column="5">state<pos:position pos:line="154" pos:column="10"/></name><operator pos:line="154" pos:column="10">-&gt;<pos:position pos:line="154" pos:column="15"/></operator><name pos:line="154" pos:column="12">folder<pos:position pos:line="154" pos:column="18"/></name></name> <operator pos:line="154" pos:column="19">=<pos:position pos:line="154" pos:column="20"/></operator> <call><name pos:line="154" pos:column="21">safe_strdup<pos:position pos:line="154" pos:column="32"/></name> <argument_list pos:line="154" pos:column="33">(<argument><expr><name pos:line="154" pos:column="34">buf<pos:position pos:line="154" pos:column="37"/></name></expr></argument>)<pos:position pos:line="154" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="155" pos:column="4"/></block></then></if>

  <if pos:line="157" pos:column="3">if <condition pos:line="157" pos:column="6">(<expr><name pos:line="157" pos:column="7">home_namespace<pos:position pos:line="157" pos:column="21"/></name> <operator pos:line="157" pos:column="22">&amp;&amp;<pos:position pos:line="157" pos:column="32"/></operator> <name><name pos:line="157" pos:column="25">mbox<pos:position pos:line="157" pos:column="29"/></name><index pos:line="157" pos:column="29">[<expr><literal type="number" pos:line="157" pos:column="30">0<pos:position pos:line="157" pos:column="31"/></literal></expr>]<pos:position pos:line="157" pos:column="32"/></index></name> <operator pos:line="157" pos:column="33">!=<pos:position pos:line="157" pos:column="35"/></operator> <literal type="char" pos:line="157" pos:column="36">'\0'<pos:position pos:line="157" pos:column="40"/></literal></expr>)<pos:position pos:line="157" pos:column="41"/></condition><then pos:line="157" pos:column="41">
  <block pos:line="158" pos:column="3">{
    <comment type="block" pos:line="159" pos:column="5">/* Listing the home namespace, so INBOX should be included. Home 
     * namespace is not "", so we have to list it explicitly. We ask the 
     * server to see if it has descendants. */</comment>
    <expr_stmt><expr><call><name pos:line="162" pos:column="5">dprint<pos:position pos:line="162" pos:column="11"/></name> <argument_list pos:line="162" pos:column="12">(<argument><expr><literal type="number" pos:line="162" pos:column="13">3<pos:position pos:line="162" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="162" pos:column="16">(<pos:position pos:line="162" pos:column="17"/></operator><name pos:line="162" pos:column="17">debugfile<pos:position pos:line="162" pos:column="26"/></name><operator pos:line="162" pos:column="26">,<pos:position pos:line="162" pos:column="27"/></operator> <literal type="string" pos:line="162" pos:column="28">"imap_browse: adding INBOX\n"<pos:position pos:line="162" pos:column="57"/></literal><operator pos:line="162" pos:column="57">)<pos:position pos:line="162" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="162" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="60"/></expr_stmt>
    <if pos:line="163" pos:column="5">if <condition pos:line="163" pos:column="8">(<expr><call><name pos:line="163" pos:column="9">browse_add_list_result<pos:position pos:line="163" pos:column="31"/></name> <argument_list pos:line="163" pos:column="32">(<argument><expr><name pos:line="163" pos:column="33">idata<pos:position pos:line="163" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="40">"LIST \"\" \"INBOX\""<pos:position pos:line="163" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="63">state<pos:position pos:line="163" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="70">0<pos:position pos:line="163" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="73"/></condition><then pos:line="163" pos:column="73">
      <block type="pseudo"><goto pos:line="164" pos:column="7">goto <name pos:line="164" pos:column="12">fail<pos:position pos:line="164" pos:column="16"/></name>;<pos:position pos:line="164" pos:column="17"/></goto></block></then></if>
  }<pos:position pos:line="165" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="167" pos:column="3">nsup<pos:position pos:line="167" pos:column="7"/></name> <operator pos:line="167" pos:column="8">=<pos:position pos:line="167" pos:column="9"/></operator> <name><name pos:line="167" pos:column="10">state<pos:position pos:line="167" pos:column="15"/></name><operator pos:line="167" pos:column="15">-&gt;<pos:position pos:line="167" pos:column="20"/></operator><name pos:line="167" pos:column="17">entrylen<pos:position pos:line="167" pos:column="25"/></name></name></expr>;<pos:position pos:line="167" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="169" pos:column="3">dprint<pos:position pos:line="169" pos:column="9"/></name> <argument_list pos:line="169" pos:column="10">(<argument><expr><literal type="number" pos:line="169" pos:column="11">3<pos:position pos:line="169" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="169" pos:column="14">(<pos:position pos:line="169" pos:column="15"/></operator><name pos:line="169" pos:column="15">debugfile<pos:position pos:line="169" pos:column="24"/></name><operator pos:line="169" pos:column="24">,<pos:position pos:line="169" pos:column="25"/></operator> <literal type="string" pos:line="169" pos:column="26">"imap_browse: Quoting mailbox scan: %s -&gt; "<pos:position pos:line="169" pos:column="72"/></literal><operator pos:line="169" pos:column="69">,<pos:position pos:line="169" pos:column="70"/></operator> <name pos:line="169" pos:column="71">mbox<pos:position pos:line="169" pos:column="75"/></name><operator pos:line="169" pos:column="75">)<pos:position pos:line="169" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="169" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="170" pos:column="3">snprintf<pos:position pos:line="170" pos:column="11"/></name> <argument_list pos:line="170" pos:column="12">(<argument><expr><name pos:line="170" pos:column="13">buf<pos:position pos:line="170" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="170" pos:column="18">sizeof <argument_list pos:line="170" pos:column="25">(<argument><expr><name pos:line="170" pos:column="26">buf<pos:position pos:line="170" pos:column="29"/></name></expr></argument>)<pos:position pos:line="170" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="32">"%s%%"<pos:position pos:line="170" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="40">mbox<pos:position pos:line="170" pos:column="44"/></name></expr></argument>)<pos:position pos:line="170" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="171" pos:column="3">imap_quote_string<pos:position pos:line="171" pos:column="20"/></name> <argument_list pos:line="171" pos:column="21">(<argument><expr><name pos:line="171" pos:column="22">buf2<pos:position pos:line="171" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="171" pos:column="28">sizeof <argument_list pos:line="171" pos:column="35">(<argument><expr><name pos:line="171" pos:column="36">buf2<pos:position pos:line="171" pos:column="40"/></name></expr></argument>)<pos:position pos:line="171" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="171" pos:column="43">buf<pos:position pos:line="171" pos:column="46"/></name></expr></argument>)<pos:position pos:line="171" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="172" pos:column="3">dprint<pos:position pos:line="172" pos:column="9"/></name> <argument_list pos:line="172" pos:column="10">(<argument><expr><literal type="number" pos:line="172" pos:column="11">3<pos:position pos:line="172" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="172" pos:column="14">(<pos:position pos:line="172" pos:column="15"/></operator><name pos:line="172" pos:column="15">debugfile<pos:position pos:line="172" pos:column="24"/></name><operator pos:line="172" pos:column="24">,<pos:position pos:line="172" pos:column="25"/></operator> <literal type="string" pos:line="172" pos:column="26">"%s\n"<pos:position pos:line="172" pos:column="32"/></literal><operator pos:line="172" pos:column="32">,<pos:position pos:line="172" pos:column="33"/></operator> <name pos:line="172" pos:column="34">buf2<pos:position pos:line="172" pos:column="38"/></name><operator pos:line="172" pos:column="38">)<pos:position pos:line="172" pos:column="39"/></operator></expr></argument>)<pos:position pos:line="172" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="173" pos:column="3">snprintf<pos:position pos:line="173" pos:column="11"/></name> <argument_list pos:line="173" pos:column="12">(<argument><expr><name pos:line="173" pos:column="13">buf<pos:position pos:line="173" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="173" pos:column="18">sizeof <argument_list pos:line="173" pos:column="25">(<argument><expr><name pos:line="173" pos:column="26">buf<pos:position pos:line="173" pos:column="29"/></name></expr></argument>)<pos:position pos:line="173" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="32">"%s \"\" %s"<pos:position pos:line="173" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="173" pos:column="46">list_cmd<pos:position pos:line="173" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="56">buf2<pos:position pos:line="173" pos:column="60"/></name></expr></argument>)<pos:position pos:line="173" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="62"/></expr_stmt>
  <if pos:line="174" pos:column="3">if <condition pos:line="174" pos:column="6">(<expr><call><name pos:line="174" pos:column="7">browse_add_list_result<pos:position pos:line="174" pos:column="29"/></name> <argument_list pos:line="174" pos:column="30">(<argument><expr><name pos:line="174" pos:column="31">idata<pos:position pos:line="174" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="38">buf<pos:position pos:line="174" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="43">state<pos:position pos:line="174" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="174" pos:column="50">0<pos:position pos:line="174" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="53"/></condition><then pos:line="174" pos:column="53">
    <block type="pseudo"><goto pos:line="175" pos:column="5">goto <name pos:line="175" pos:column="10">fail<pos:position pos:line="175" pos:column="14"/></name>;<pos:position pos:line="175" pos:column="15"/></goto></block></then></if>

  <if pos:line="177" pos:column="3">if <condition pos:line="177" pos:column="6">(<expr><operator pos:line="177" pos:column="7">!<pos:position pos:line="177" pos:column="8"/></operator><name><name pos:line="177" pos:column="8">state<pos:position pos:line="177" pos:column="13"/></name><operator pos:line="177" pos:column="13">-&gt;<pos:position pos:line="177" pos:column="18"/></operator><name pos:line="177" pos:column="15">entrylen<pos:position pos:line="177" pos:column="23"/></name></name></expr>)<pos:position pos:line="177" pos:column="24"/></condition><then pos:line="177" pos:column="24">
  <block pos:line="178" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="179" pos:column="5">mutt_error<pos:position pos:line="179" pos:column="15"/></name></type> <name pos:line="179" pos:column="16">_<pos:position pos:line="179" pos:column="17"/></name><argument_list pos:line="179" pos:column="17">(<argument><expr><literal type="string" pos:line="179" pos:column="18">"No such folder"<pos:position pos:line="179" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="35"/></argument_list></decl>;<pos:position pos:line="179" pos:column="36"/></decl_stmt>
    <goto pos:line="180" pos:column="5">goto <name pos:line="180" pos:column="10">fail<pos:position pos:line="180" pos:column="14"/></name>;<pos:position pos:line="180" pos:column="15"/></goto>
  }<pos:position pos:line="181" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="183" pos:column="3">mutt_clear_error<pos:position pos:line="183" pos:column="19"/></name> <argument_list pos:line="183" pos:column="20">()<pos:position pos:line="183" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="185" pos:column="3">qsort<pos:position pos:line="185" pos:column="8"/></name><argument_list pos:line="185" pos:column="8">(<argument><expr><operator pos:line="185" pos:column="9">&amp;<pos:position pos:line="185" pos:column="14"/></operator><operator pos:line="185" pos:column="10">(<pos:position pos:line="185" pos:column="11"/></operator><name><name pos:line="185" pos:column="11">state<pos:position pos:line="185" pos:column="16"/></name><operator pos:line="185" pos:column="16">-&gt;<pos:position pos:line="185" pos:column="21"/></operator><name pos:line="185" pos:column="18">entry<pos:position pos:line="185" pos:column="23"/></name><index pos:line="185" pos:column="23">[<expr><name pos:line="185" pos:column="24">nsup<pos:position pos:line="185" pos:column="28"/></name></expr>]<pos:position pos:line="185" pos:column="29"/></index></name><operator pos:line="185" pos:column="29">)<pos:position pos:line="185" pos:column="30"/></operator></expr></argument>,<argument><expr><name><name pos:line="185" pos:column="31">state<pos:position pos:line="185" pos:column="36"/></name><operator pos:line="185" pos:column="36">-&gt;<pos:position pos:line="185" pos:column="41"/></operator><name pos:line="185" pos:column="38">entrylen<pos:position pos:line="185" pos:column="46"/></name></name><operator pos:line="185" pos:column="46">-<pos:position pos:line="185" pos:column="47"/></operator><name pos:line="185" pos:column="47">nsup<pos:position pos:line="185" pos:column="51"/></name></expr></argument>,<argument><expr><sizeof pos:line="185" pos:column="52">sizeof<argument_list pos:line="185" pos:column="58">(<argument><expr><name><name pos:line="185" pos:column="59">state<pos:position pos:line="185" pos:column="64"/></name><operator pos:line="185" pos:column="64">-&gt;<pos:position pos:line="185" pos:column="69"/></operator><name pos:line="185" pos:column="66">entry<pos:position pos:line="185" pos:column="71"/></name><index pos:line="185" pos:column="71">[<expr><literal type="number" pos:line="185" pos:column="72">0<pos:position pos:line="185" pos:column="73"/></literal></expr>]<pos:position pos:line="185" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="185" pos:column="75"/></argument_list></sizeof></expr></argument>,
	<argument><expr><operator pos:line="186" pos:column="9">(<pos:position pos:line="186" pos:column="10"/></operator><call><call><name pos:line="186" pos:column="10">int<pos:position pos:line="186" pos:column="13"/></name> <argument_list pos:line="186" pos:column="14">(<argument><expr><operator pos:line="186" pos:column="15">*<pos:position pos:line="186" pos:column="16"/></operator></expr></argument>)<pos:position pos:line="186" pos:column="17"/></argument_list></call><argument_list pos:line="186" pos:column="17">(<argument><expr><specifier pos:line="186" pos:column="18">const<pos:position pos:line="186" pos:column="23"/></specifier> <name pos:line="186" pos:column="24">void<pos:position pos:line="186" pos:column="28"/></name><operator pos:line="186" pos:column="28">*<pos:position pos:line="186" pos:column="29"/></operator></expr></argument>,<argument><expr><specifier pos:line="186" pos:column="30">const<pos:position pos:line="186" pos:column="35"/></specifier> <name pos:line="186" pos:column="36">void<pos:position pos:line="186" pos:column="40"/></name><operator pos:line="186" pos:column="40">*<pos:position pos:line="186" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="186" pos:column="42"/></argument_list></call><operator pos:line="186" pos:column="42">)<pos:position pos:line="186" pos:column="43"/></operator> <name pos:line="186" pos:column="44">compare_names<pos:position pos:line="186" pos:column="57"/></name></expr></argument>)<pos:position pos:line="186" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="59"/></expr_stmt>
  <if pos:line="187" pos:column="3">if <condition pos:line="187" pos:column="6">(<expr><name pos:line="187" pos:column="7">home_namespace<pos:position pos:line="187" pos:column="21"/></name></expr>)<pos:position pos:line="187" pos:column="22"/></condition><then pos:line="187" pos:column="22">
  <block pos:line="188" pos:column="3">{				<comment type="block" pos:line="188" pos:column="33">/* List additional namespaces */</comment>
    <for pos:line="189" pos:column="5">for <control pos:line="189" pos:column="9">(<init><expr><name pos:line="189" pos:column="10">i<pos:position pos:line="189" pos:column="11"/></name> <operator pos:line="189" pos:column="12">=<pos:position pos:line="189" pos:column="13"/></operator> <literal type="number" pos:line="189" pos:column="14">0<pos:position pos:line="189" pos:column="15"/></literal></expr>;<pos:position pos:line="189" pos:column="16"/></init> <condition><expr><name pos:line="189" pos:column="17">i<pos:position pos:line="189" pos:column="18"/></name> <operator pos:line="189" pos:column="19">&lt;<pos:position pos:line="189" pos:column="23"/></operator> <name pos:line="189" pos:column="21">nns<pos:position pos:line="189" pos:column="24"/></name></expr>;<pos:position pos:line="189" pos:column="25"/></condition> <incr><expr><name pos:line="189" pos:column="26">i<pos:position pos:line="189" pos:column="27"/></name><operator pos:line="189" pos:column="27">++<pos:position pos:line="189" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="189" pos:column="30"/></control>
      <block type="pseudo"><if pos:line="190" pos:column="7">if <condition pos:line="190" pos:column="10">(<expr><name><name pos:line="190" pos:column="11">nsi<pos:position pos:line="190" pos:column="14"/></name><index pos:line="190" pos:column="14">[<expr><name pos:line="190" pos:column="15">i<pos:position pos:line="190" pos:column="16"/></name></expr>]<pos:position pos:line="190" pos:column="17"/></index></name><operator pos:line="190" pos:column="17">.<pos:position pos:line="190" pos:column="18"/></operator><name pos:line="190" pos:column="18">listable<pos:position pos:line="190" pos:column="26"/></name> <operator pos:line="190" pos:column="27">&amp;&amp;<pos:position pos:line="190" pos:column="37"/></operator> <operator pos:line="190" pos:column="30">!<pos:position pos:line="190" pos:column="31"/></operator><name><name pos:line="190" pos:column="31">nsi<pos:position pos:line="190" pos:column="34"/></name><index pos:line="190" pos:column="34">[<expr><name pos:line="190" pos:column="35">i<pos:position pos:line="190" pos:column="36"/></name></expr>]<pos:position pos:line="190" pos:column="37"/></index></name><operator pos:line="190" pos:column="37">.<pos:position pos:line="190" pos:column="38"/></operator><name pos:line="190" pos:column="38">home_namespace<pos:position pos:line="190" pos:column="52"/></name></expr>)<pos:position pos:line="190" pos:column="53"/></condition><then pos:line="190" pos:column="53"> <block pos:line="190" pos:column="54">{
	<expr_stmt><expr><call><name pos:line="191" pos:column="9">imap_add_folder<pos:position pos:line="191" pos:column="24"/></name><argument_list pos:line="191" pos:column="24">(<argument><expr><name><name pos:line="191" pos:column="25">nsi<pos:position pos:line="191" pos:column="28"/></name><index pos:line="191" pos:column="28">[<expr><name pos:line="191" pos:column="29">i<pos:position pos:line="191" pos:column="30"/></name></expr>]<pos:position pos:line="191" pos:column="31"/></index></name><operator pos:line="191" pos:column="31">.<pos:position pos:line="191" pos:column="32"/></operator><name pos:line="191" pos:column="32">delim<pos:position pos:line="191" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="191" pos:column="39">nsi<pos:position pos:line="191" pos:column="42"/></name><index pos:line="191" pos:column="42">[<expr><name pos:line="191" pos:column="43">i<pos:position pos:line="191" pos:column="44"/></name></expr>]<pos:position pos:line="191" pos:column="45"/></index></name><operator pos:line="191" pos:column="45">.<pos:position pos:line="191" pos:column="46"/></operator><name pos:line="191" pos:column="46">prefix<pos:position pos:line="191" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="191" pos:column="54">nsi<pos:position pos:line="191" pos:column="57"/></name><index pos:line="191" pos:column="57">[<expr><name pos:line="191" pos:column="58">i<pos:position pos:line="191" pos:column="59"/></name></expr>]<pos:position pos:line="191" pos:column="60"/></index></name><operator pos:line="191" pos:column="60">.<pos:position pos:line="191" pos:column="61"/></operator><name pos:line="191" pos:column="61">noselect<pos:position pos:line="191" pos:column="69"/></name></expr></argument>,
			<argument><expr><name><name pos:line="192" pos:column="25">nsi<pos:position pos:line="192" pos:column="28"/></name><index pos:line="192" pos:column="28">[<expr><name pos:line="192" pos:column="29">i<pos:position pos:line="192" pos:column="30"/></name></expr>]<pos:position pos:line="192" pos:column="31"/></index></name><operator pos:line="192" pos:column="31">.<pos:position pos:line="192" pos:column="32"/></operator><name pos:line="192" pos:column="32">noinferiors<pos:position pos:line="192" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="45">state<pos:position pos:line="192" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="192" pos:column="52">0<pos:position pos:line="192" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="193" pos:column="9">dprint<pos:position pos:line="193" pos:column="15"/></name> <argument_list pos:line="193" pos:column="16">(<argument><expr><literal type="number" pos:line="193" pos:column="17">3<pos:position pos:line="193" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="193" pos:column="20">(<pos:position pos:line="193" pos:column="21"/></operator><name pos:line="193" pos:column="21">debugfile<pos:position pos:line="193" pos:column="30"/></name><operator pos:line="193" pos:column="30">,<pos:position pos:line="193" pos:column="31"/></operator> <literal type="string" pos:line="193" pos:column="32">"imap_browse: adding namespace: %s\n"<pos:position pos:line="193" pos:column="69"/></literal><operator pos:line="193" pos:column="69">,<pos:position pos:line="193" pos:column="70"/></operator>
		    <name><name pos:line="194" pos:column="21">nsi<pos:position pos:line="194" pos:column="24"/></name><index pos:line="194" pos:column="24">[<expr><name pos:line="194" pos:column="25">i<pos:position pos:line="194" pos:column="26"/></name></expr>]<pos:position pos:line="194" pos:column="27"/></index></name><operator pos:line="194" pos:column="27">.<pos:position pos:line="194" pos:column="28"/></operator><name pos:line="194" pos:column="28">prefix<pos:position pos:line="194" pos:column="34"/></name><operator pos:line="194" pos:column="34">)<pos:position pos:line="194" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="194" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="195" pos:column="8"/></block></then></if></block></for>
  }<pos:position pos:line="196" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="198" pos:column="3">FREE<pos:position pos:line="198" pos:column="7"/></name> <argument_list pos:line="198" pos:column="8">(<argument><expr><operator pos:line="198" pos:column="9">&amp;<pos:position pos:line="198" pos:column="14"/></operator><name><name pos:line="198" pos:column="10">mx<pos:position pos:line="198" pos:column="12"/></name><operator pos:line="198" pos:column="12">.<pos:position pos:line="198" pos:column="13"/></operator><name pos:line="198" pos:column="13">mbox<pos:position pos:line="198" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="19"/></expr_stmt>
  <return pos:line="199" pos:column="3">return <expr><literal type="number" pos:line="199" pos:column="10">0<pos:position pos:line="199" pos:column="11"/></literal></expr>;<pos:position pos:line="199" pos:column="12"/></return>

 <label><name pos:line="201" pos:column="2">fail<pos:position pos:line="201" pos:column="6"/></name>:<pos:position pos:line="201" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="202" pos:column="3">FREE<pos:position pos:line="202" pos:column="7"/></name> <argument_list pos:line="202" pos:column="8">(<argument><expr><operator pos:line="202" pos:column="9">&amp;<pos:position pos:line="202" pos:column="14"/></operator><name><name pos:line="202" pos:column="10">mx<pos:position pos:line="202" pos:column="12"/></name><operator pos:line="202" pos:column="12">.<pos:position pos:line="202" pos:column="13"/></operator><name pos:line="202" pos:column="13">mbox<pos:position pos:line="202" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="202" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="19"/></expr_stmt>
  <return pos:line="203" pos:column="3">return <expr><operator pos:line="203" pos:column="10">-<pos:position pos:line="203" pos:column="11"/></operator><literal type="number" pos:line="203" pos:column="11">1<pos:position pos:line="203" pos:column="12"/></literal></expr>;<pos:position pos:line="203" pos:column="13"/></return>
}<pos:position pos:line="204" pos:column="2"/></block></function></unit>

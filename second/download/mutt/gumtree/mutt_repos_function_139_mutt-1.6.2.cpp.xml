<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_139_mutt-1.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">pattern_t<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type><name pos:line="1" pos:column="12">mutt_pattern_comp<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<comment type="block" pos:line="1" pos:column="31">/* const */</comment> <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">flags<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">BUFFER<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">err<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">pattern_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">curlist<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name pos:line="3" pos:column="24">NULL<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">pattern_t<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">tmp<pos:position pos:line="4" pos:column="17"/></name></decl>, <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="20">tmp2<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">pattern_t<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">last<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">not<pos:position pos:line="6" pos:column="10"/></operator> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">alladdr<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">or<pos:position pos:line="8" pos:column="9"/></operator> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">implicit<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><literal type="number" pos:line="9" pos:column="18">1<pos:position pos:line="9" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>	<comment type="block" pos:line="9" pos:column="25">/* used to detect logical AND operator */</comment>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">pattern_flags<pos:position pos:line="10" pos:column="29"/></name></name> <modifier pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></modifier></type><name pos:line="10" pos:column="31">entry<pos:position pos:line="10" pos:column="36"/></name></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">p<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">buf<pos:position pos:line="12" pos:column="12"/></name></decl>;<pos:position pos:line="12" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">BUFFER<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">ps<pos:position pos:line="13" pos:column="12"/></name></decl>;<pos:position pos:line="13" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">mutt_buffer_init<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="22">ps<pos:position pos:line="15" pos:column="24"/></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">ps<pos:position pos:line="16" pos:column="5"/></name><operator pos:line="16" pos:column="5">.<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">dptr<pos:position pos:line="16" pos:column="10"/></name></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">s<pos:position pos:line="16" pos:column="14"/></name></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">ps<pos:position pos:line="17" pos:column="5"/></name><operator pos:line="17" pos:column="5">.<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">dsize<pos:position pos:line="17" pos:column="11"/></name></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">mutt_strlen<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">s<pos:position pos:line="17" pos:column="28"/></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>

  <while pos:line="19" pos:column="3">while <condition pos:line="19" pos:column="9">(<expr><operator pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></operator><name><name pos:line="19" pos:column="11">ps<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">dptr<pos:position pos:line="19" pos:column="18"/></name></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition>
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">SKIPWS<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><name><name pos:line="21" pos:column="13">ps<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">dptr<pos:position pos:line="21" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    <switch pos:line="22" pos:column="5">switch <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="14">ps<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">dptr<pos:position pos:line="22" pos:column="21"/></name></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition>
    <block pos:line="23" pos:column="5">{
      <case pos:line="24" pos:column="7">case <expr><literal type="char" pos:line="24" pos:column="12">'^'<pos:position pos:line="24" pos:column="15"/></literal></expr>:<pos:position pos:line="24" pos:column="16"/></case>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">ps<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">dptr<pos:position pos:line="25" pos:column="16"/></name></name><operator pos:line="25" pos:column="16">++<pos:position pos:line="25" pos:column="18"/></operator></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">alladdr<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <operator pos:line="26" pos:column="19">!<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">alladdr<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
	<break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>
      <case pos:line="28" pos:column="7">case <expr><literal type="char" pos:line="28" pos:column="12">'!'<pos:position pos:line="28" pos:column="15"/></literal></expr>:<pos:position pos:line="28" pos:column="16"/></case>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">ps<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">dptr<pos:position pos:line="29" pos:column="16"/></name></name><operator pos:line="29" pos:column="16">++<pos:position pos:line="29" pos:column="18"/></operator></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="30" pos:column="9">not<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <operator pos:line="30" pos:column="15">!<pos:position pos:line="30" pos:column="16"/></operator><operator pos:line="30" pos:column="16">not<pos:position pos:line="30" pos:column="19"/></operator></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
	<break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>
      <case pos:line="32" pos:column="7">case <expr><literal type="char" pos:line="32" pos:column="12">'|'<pos:position pos:line="32" pos:column="15"/></literal></expr>:<pos:position pos:line="32" pos:column="16"/></case>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><operator pos:line="33" pos:column="14">or<pos:position pos:line="33" pos:column="16"/></operator></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17">
	<block pos:line="34" pos:column="9">{
	  <if pos:line="35" pos:column="11">if <condition pos:line="35" pos:column="14">(<expr><operator pos:line="35" pos:column="15">!<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">curlist<pos:position pos:line="35" pos:column="23"/></name></expr>)<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24">
	  <block pos:line="36" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="37" pos:column="13">snprintf<pos:position pos:line="37" pos:column="21"/></name> <argument_list pos:line="37" pos:column="22">(<argument><expr><name><name pos:line="37" pos:column="23">err<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">-&gt;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="28">data<pos:position pos:line="37" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="34">err<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">dsize<pos:position pos:line="37" pos:column="44"/></name></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="46">_<pos:position pos:line="37" pos:column="47"/></name><argument_list pos:line="37" pos:column="47">(<argument><expr><literal type="string" pos:line="37" pos:column="48">"error in pattern at: %s"<pos:position pos:line="37" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="76">ps<pos:position pos:line="37" pos:column="78"/></name><operator pos:line="37" pos:column="78">.<pos:position pos:line="37" pos:column="79"/></operator><name pos:line="37" pos:column="79">dptr<pos:position pos:line="37" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="85"/></expr_stmt>
	    <return pos:line="38" pos:column="13">return <expr><name pos:line="38" pos:column="20">NULL<pos:position pos:line="38" pos:column="24"/></name></expr>;<pos:position pos:line="38" pos:column="25"/></return>
	  }<pos:position pos:line="39" pos:column="12"/></block></then></if>
	  <if pos:line="40" pos:column="11">if <condition pos:line="40" pos:column="14">(<expr><name><name pos:line="40" pos:column="15">curlist<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">next<pos:position pos:line="40" pos:column="28"/></name></name></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29">
	  <block pos:line="41" pos:column="11">{
	    <comment type="block" pos:line="42" pos:column="13">/* A &amp; B | C == (A &amp; B) | C */</comment>
	    <expr_stmt><expr><name pos:line="43" pos:column="13">tmp<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <call><name pos:line="43" pos:column="19">new_pattern<pos:position pos:line="43" pos:column="30"/></name> <argument_list pos:line="43" pos:column="31">()<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="44" pos:column="13">tmp<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">op<pos:position pos:line="44" pos:column="20"/></name></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">M_AND<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="45" pos:column="13">tmp<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">child<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <name pos:line="45" pos:column="26">curlist<pos:position pos:line="45" pos:column="33"/></name></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>

	    <expr_stmt><expr><name pos:line="47" pos:column="13">curlist<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">tmp<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="48" pos:column="13">last<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">curlist<pos:position pos:line="48" pos:column="27"/></name></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
	  }<pos:position pos:line="49" pos:column="12"/></block></then></if>

	  <expr_stmt><expr><operator pos:line="51" pos:column="11">or<pos:position pos:line="51" pos:column="13"/></operator> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <literal type="number" pos:line="51" pos:column="16">1<pos:position pos:line="51" pos:column="17"/></literal></expr>;<pos:position pos:line="51" pos:column="18"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">ps<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">.<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="12">dptr<pos:position pos:line="53" pos:column="16"/></name></name><operator pos:line="53" pos:column="16">++<pos:position pos:line="53" pos:column="18"/></operator></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="54" pos:column="9">implicit<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <literal type="number" pos:line="54" pos:column="20">0<pos:position pos:line="54" pos:column="21"/></literal></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="55" pos:column="9">not<pos:position pos:line="55" pos:column="12"/></operator> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <literal type="number" pos:line="55" pos:column="15">0<pos:position pos:line="55" pos:column="16"/></literal></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="56" pos:column="9">alladdr<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr>;<pos:position pos:line="56" pos:column="21"/></expr_stmt>
	<break pos:line="57" pos:column="9">break;<pos:position pos:line="57" pos:column="15"/></break>
      <case pos:line="58" pos:column="7">case <expr><literal type="char" pos:line="58" pos:column="12">'%'<pos:position pos:line="58" pos:column="15"/></literal></expr>:<pos:position pos:line="58" pos:column="16"/></case>
      <case pos:line="59" pos:column="7">case <expr><literal type="char" pos:line="59" pos:column="12">'='<pos:position pos:line="59" pos:column="15"/></literal></expr>:<pos:position pos:line="59" pos:column="16"/></case>
      <case pos:line="60" pos:column="7">case <expr><literal type="char" pos:line="60" pos:column="12">'~'<pos:position pos:line="60" pos:column="15"/></literal></expr>:<pos:position pos:line="60" pos:column="16"/></case>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><operator pos:line="61" pos:column="14">*<pos:position pos:line="61" pos:column="15"/></operator><operator pos:line="61" pos:column="15">(<pos:position pos:line="61" pos:column="16"/></operator><name><name pos:line="61" pos:column="16">ps<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">.<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="19">dptr<pos:position pos:line="61" pos:column="23"/></name></name> <operator pos:line="61" pos:column="24">+<pos:position pos:line="61" pos:column="25"/></operator> <literal type="number" pos:line="61" pos:column="26">1<pos:position pos:line="61" pos:column="27"/></literal><operator pos:line="61" pos:column="27">)<pos:position pos:line="61" pos:column="28"/></operator></expr>)<pos:position pos:line="61" pos:column="29"/></condition><then pos:line="61" pos:column="29">
	<block pos:line="62" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="63" pos:column="11">snprintf<pos:position pos:line="63" pos:column="19"/></name> <argument_list pos:line="63" pos:column="20">(<argument><expr><name><name pos:line="63" pos:column="21">err<pos:position pos:line="63" pos:column="24"/></name><operator pos:line="63" pos:column="24">-&gt;<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="26">data<pos:position pos:line="63" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="32">err<pos:position pos:line="63" pos:column="35"/></name><operator pos:line="63" pos:column="35">-&gt;<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="37">dsize<pos:position pos:line="63" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="44">_<pos:position pos:line="63" pos:column="45"/></name><argument_list pos:line="63" pos:column="45">(<argument><expr><literal type="string" pos:line="63" pos:column="46">"missing pattern: %s"<pos:position pos:line="63" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="70">ps<pos:position pos:line="63" pos:column="72"/></name><operator pos:line="63" pos:column="72">.<pos:position pos:line="63" pos:column="73"/></operator><name pos:line="63" pos:column="73">dptr<pos:position pos:line="63" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="64" pos:column="11">mutt_pattern_free<pos:position pos:line="64" pos:column="28"/></name> <argument_list pos:line="64" pos:column="29">(<argument><expr><operator pos:line="64" pos:column="30">&amp;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="31">curlist<pos:position pos:line="64" pos:column="38"/></name></expr></argument>)<pos:position pos:line="64" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt>
	  <return pos:line="65" pos:column="11">return <expr><name pos:line="65" pos:column="18">NULL<pos:position pos:line="65" pos:column="22"/></name></expr>;<pos:position pos:line="65" pos:column="23"/></return>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">*<pos:position pos:line="67" pos:column="14"/></operator><operator pos:line="67" pos:column="14">(<pos:position pos:line="67" pos:column="15"/></operator><name><name pos:line="67" pos:column="15">ps<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">.<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">dptr<pos:position pos:line="67" pos:column="22"/></name></name> <operator pos:line="67" pos:column="23">+<pos:position pos:line="67" pos:column="24"/></operator> <literal type="number" pos:line="67" pos:column="25">1<pos:position pos:line="67" pos:column="26"/></literal><operator pos:line="67" pos:column="26">)<pos:position pos:line="67" pos:column="27"/></operator> <operator pos:line="67" pos:column="28">==<pos:position pos:line="67" pos:column="30"/></operator> <literal type="char" pos:line="67" pos:column="31">'('<pos:position pos:line="67" pos:column="34"/></literal></expr>)<pos:position pos:line="67" pos:column="35"/></condition><then pos:line="67" pos:column="35">
        <block pos:line="68" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="69" pos:column="11">ps<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">.<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">dptr<pos:position pos:line="69" pos:column="18"/></name></name> <operator pos:line="69" pos:column="19">++<pos:position pos:line="69" pos:column="21"/></operator></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt> <comment type="block" pos:line="69" pos:column="23">/* skip ~ */</comment>
	  <expr_stmt><expr><name pos:line="70" pos:column="11">p<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <call><name pos:line="70" pos:column="15">find_matching_paren<pos:position pos:line="70" pos:column="34"/></name> <argument_list pos:line="70" pos:column="35">(<argument><expr><name><name pos:line="70" pos:column="36">ps<pos:position pos:line="70" pos:column="38"/></name><operator pos:line="70" pos:column="38">.<pos:position pos:line="70" pos:column="39"/></operator><name pos:line="70" pos:column="39">dptr<pos:position pos:line="70" pos:column="43"/></name></name> <operator pos:line="70" pos:column="44">+<pos:position pos:line="70" pos:column="45"/></operator> <literal type="number" pos:line="70" pos:column="46">1<pos:position pos:line="70" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>
	  <if pos:line="71" pos:column="11">if <condition pos:line="71" pos:column="14">(<expr><operator pos:line="71" pos:column="15">*<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="16">p<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">!=<pos:position pos:line="71" pos:column="20"/></operator> <literal type="char" pos:line="71" pos:column="21">')'<pos:position pos:line="71" pos:column="24"/></literal></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25">
	  <block pos:line="72" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="73" pos:column="13">snprintf<pos:position pos:line="73" pos:column="21"/></name> <argument_list pos:line="73" pos:column="22">(<argument><expr><name><name pos:line="73" pos:column="23">err<pos:position pos:line="73" pos:column="26"/></name><operator pos:line="73" pos:column="26">-&gt;<pos:position pos:line="73" pos:column="31"/></operator><name pos:line="73" pos:column="28">data<pos:position pos:line="73" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="34">err<pos:position pos:line="73" pos:column="37"/></name><operator pos:line="73" pos:column="37">-&gt;<pos:position pos:line="73" pos:column="42"/></operator><name pos:line="73" pos:column="39">dsize<pos:position pos:line="73" pos:column="44"/></name></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="46">_<pos:position pos:line="73" pos:column="47"/></name><argument_list pos:line="73" pos:column="47">(<argument><expr><literal type="string" pos:line="73" pos:column="48">"mismatched brackets: %s"<pos:position pos:line="73" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="76">ps<pos:position pos:line="73" pos:column="78"/></name><operator pos:line="73" pos:column="78">.<pos:position pos:line="73" pos:column="79"/></operator><name pos:line="73" pos:column="79">dptr<pos:position pos:line="73" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="85"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="74" pos:column="13">mutt_pattern_free<pos:position pos:line="74" pos:column="30"/></name> <argument_list pos:line="74" pos:column="31">(<argument><expr><operator pos:line="74" pos:column="32">&amp;<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="33">curlist<pos:position pos:line="74" pos:column="40"/></name></expr></argument>)<pos:position pos:line="74" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="42"/></expr_stmt>
	    <return pos:line="75" pos:column="13">return <expr><name pos:line="75" pos:column="20">NULL<pos:position pos:line="75" pos:column="24"/></name></expr>;<pos:position pos:line="75" pos:column="25"/></return>
	  }<pos:position pos:line="76" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><name pos:line="77" pos:column="11">tmp<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator> <call><name pos:line="77" pos:column="17">new_pattern<pos:position pos:line="77" pos:column="28"/></name> <argument_list pos:line="77" pos:column="29">()<pos:position pos:line="77" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="78" pos:column="11">tmp<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">-&gt;<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="16">op<pos:position pos:line="78" pos:column="18"/></name></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <name pos:line="78" pos:column="21">M_THREAD<pos:position pos:line="78" pos:column="29"/></name></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt>
	  <if pos:line="79" pos:column="11">if <condition pos:line="79" pos:column="14">(<expr><name pos:line="79" pos:column="15">last<pos:position pos:line="79" pos:column="19"/></name></expr>)<pos:position pos:line="79" pos:column="20"/></condition><then pos:line="79" pos:column="20">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="80" pos:column="13">last<pos:position pos:line="80" pos:column="17"/></name><operator pos:line="80" pos:column="17">-&gt;<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="19">next<pos:position pos:line="80" pos:column="23"/></name></name> <operator pos:line="80" pos:column="24">=<pos:position pos:line="80" pos:column="25"/></operator> <name pos:line="80" pos:column="26">tmp<pos:position pos:line="80" pos:column="29"/></name></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt></block></then>
	  <else pos:line="81" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="13">curlist<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <name pos:line="82" pos:column="23">tmp<pos:position pos:line="82" pos:column="26"/></name></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt></block></else></if>
	  <expr_stmt><expr><name pos:line="83" pos:column="11">last<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <name pos:line="83" pos:column="18">tmp<pos:position pos:line="83" pos:column="21"/></name></expr>;<pos:position pos:line="83" pos:column="22"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="84" pos:column="11">tmp<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">-&gt;<pos:position pos:line="84" pos:column="19"/></operator></name><operator pos:line="84" pos:column="16">not<pos:position pos:line="84" pos:column="19"/></operator> <operator pos:line="84" pos:column="20">^=<pos:position pos:line="84" pos:column="22"/></operator> <operator pos:line="84" pos:column="23">not<pos:position pos:line="84" pos:column="26"/></operator></expr>;<pos:position pos:line="84" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="85" pos:column="11">tmp<pos:position pos:line="85" pos:column="14"/></name><operator pos:line="85" pos:column="14">-&gt;<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="16">alladdr<pos:position pos:line="85" pos:column="23"/></name></name> <operator pos:line="85" pos:column="24">|=<pos:position pos:line="85" pos:column="26"/></operator> <name pos:line="85" pos:column="27">alladdr<pos:position pos:line="85" pos:column="34"/></name></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="86" pos:column="11">not<pos:position pos:line="86" pos:column="14"/></operator> <operator pos:line="86" pos:column="15">=<pos:position pos:line="86" pos:column="16"/></operator> <literal type="number" pos:line="86" pos:column="17">0<pos:position pos:line="86" pos:column="18"/></literal></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="87" pos:column="11">alladdr<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">=<pos:position pos:line="87" pos:column="20"/></operator> <literal type="number" pos:line="87" pos:column="21">0<pos:position pos:line="87" pos:column="22"/></literal></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>
	  <comment type="block" pos:line="88" pos:column="11">/* compile the sub-expression */</comment>
	  <expr_stmt><expr><name pos:line="89" pos:column="11">buf<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">=<pos:position pos:line="89" pos:column="16"/></operator> <call><name pos:line="89" pos:column="17">mutt_substrdup<pos:position pos:line="89" pos:column="31"/></name> <argument_list pos:line="89" pos:column="32">(<argument><expr><name><name pos:line="89" pos:column="33">ps<pos:position pos:line="89" pos:column="35"/></name><operator pos:line="89" pos:column="35">.<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="36">dptr<pos:position pos:line="89" pos:column="40"/></name></name> <operator pos:line="89" pos:column="41">+<pos:position pos:line="89" pos:column="42"/></operator> <literal type="number" pos:line="89" pos:column="43">1<pos:position pos:line="89" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="46">p<pos:position pos:line="89" pos:column="47"/></name></expr></argument>)<pos:position pos:line="89" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="49"/></expr_stmt>
	  <if pos:line="90" pos:column="11">if <condition pos:line="90" pos:column="14">(<expr><operator pos:line="90" pos:column="15">(<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="16">tmp2<pos:position pos:line="90" pos:column="20"/></name> <operator pos:line="90" pos:column="21">=<pos:position pos:line="90" pos:column="22"/></operator> <call><name pos:line="90" pos:column="23">mutt_pattern_comp<pos:position pos:line="90" pos:column="40"/></name> <argument_list pos:line="90" pos:column="41">(<argument><expr><name pos:line="90" pos:column="42">buf<pos:position pos:line="90" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="47">flags<pos:position pos:line="90" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="54">err<pos:position pos:line="90" pos:column="57"/></name></expr></argument>)<pos:position pos:line="90" pos:column="58"/></argument_list></call><operator pos:line="90" pos:column="58">)<pos:position pos:line="90" pos:column="59"/></operator> <operator pos:line="90" pos:column="60">==<pos:position pos:line="90" pos:column="62"/></operator> <name pos:line="90" pos:column="63">NULL<pos:position pos:line="90" pos:column="67"/></name></expr>)<pos:position pos:line="90" pos:column="68"/></condition><then pos:line="90" pos:column="68">
	  <block pos:line="91" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="92" pos:column="13">FREE<pos:position pos:line="92" pos:column="17"/></name> <argument_list pos:line="92" pos:column="18">(<argument><expr><operator pos:line="92" pos:column="19">&amp;<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="20">buf<pos:position pos:line="92" pos:column="23"/></name></expr></argument>)<pos:position pos:line="92" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="25"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="93" pos:column="13">mutt_pattern_free<pos:position pos:line="93" pos:column="30"/></name> <argument_list pos:line="93" pos:column="31">(<argument><expr><operator pos:line="93" pos:column="32">&amp;<pos:position pos:line="93" pos:column="37"/></operator><name pos:line="93" pos:column="33">curlist<pos:position pos:line="93" pos:column="40"/></name></expr></argument>)<pos:position pos:line="93" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="42"/></expr_stmt>
	    <return pos:line="94" pos:column="13">return <expr><name pos:line="94" pos:column="20">NULL<pos:position pos:line="94" pos:column="24"/></name></expr>;<pos:position pos:line="94" pos:column="25"/></return>
	  }<pos:position pos:line="95" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><call><name pos:line="96" pos:column="11">FREE<pos:position pos:line="96" pos:column="15"/></name> <argument_list pos:line="96" pos:column="16">(<argument><expr><operator pos:line="96" pos:column="17">&amp;<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="18">buf<pos:position pos:line="96" pos:column="21"/></name></expr></argument>)<pos:position pos:line="96" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="23"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="97" pos:column="11">tmp<pos:position pos:line="97" pos:column="14"/></name><operator pos:line="97" pos:column="14">-&gt;<pos:position pos:line="97" pos:column="19"/></operator><name pos:line="97" pos:column="16">child<pos:position pos:line="97" pos:column="21"/></name></name> <operator pos:line="97" pos:column="22">=<pos:position pos:line="97" pos:column="23"/></operator> <name pos:line="97" pos:column="24">tmp2<pos:position pos:line="97" pos:column="28"/></name></expr>;<pos:position pos:line="97" pos:column="29"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="98" pos:column="11">ps<pos:position pos:line="98" pos:column="13"/></name><operator pos:line="98" pos:column="13">.<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="14">dptr<pos:position pos:line="98" pos:column="18"/></name></name> <operator pos:line="98" pos:column="19">=<pos:position pos:line="98" pos:column="20"/></operator> <name pos:line="98" pos:column="21">p<pos:position pos:line="98" pos:column="22"/></name> <operator pos:line="98" pos:column="23">+<pos:position pos:line="98" pos:column="24"/></operator> <literal type="number" pos:line="98" pos:column="25">1<pos:position pos:line="98" pos:column="26"/></literal></expr>;<pos:position pos:line="98" pos:column="27"/></expr_stmt> <comment type="block" pos:line="98" pos:column="28">/* restore location */</comment>
	  <break pos:line="99" pos:column="11">break;<pos:position pos:line="99" pos:column="17"/></break>
	}<pos:position pos:line="100" pos:column="10"/></block></then></if>
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">implicit<pos:position pos:line="101" pos:column="21"/></name> <operator pos:line="101" pos:column="22">&amp;&amp;<pos:position pos:line="101" pos:column="32"/></operator> <operator pos:line="101" pos:column="25">or<pos:position pos:line="101" pos:column="27"/></operator></expr>)<pos:position pos:line="101" pos:column="28"/></condition><then pos:line="101" pos:column="28">
	<block pos:line="102" pos:column="9">{
	  <comment type="block" pos:line="103" pos:column="11">/* A | B &amp; C == (A | B) &amp; C */</comment>
	  <expr_stmt><expr><name pos:line="104" pos:column="11">tmp<pos:position pos:line="104" pos:column="14"/></name> <operator pos:line="104" pos:column="15">=<pos:position pos:line="104" pos:column="16"/></operator> <call><name pos:line="104" pos:column="17">new_pattern<pos:position pos:line="104" pos:column="28"/></name> <argument_list pos:line="104" pos:column="29">()<pos:position pos:line="104" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="105" pos:column="11">tmp<pos:position pos:line="105" pos:column="14"/></name><operator pos:line="105" pos:column="14">-&gt;<pos:position pos:line="105" pos:column="19"/></operator><name pos:line="105" pos:column="16">op<pos:position pos:line="105" pos:column="18"/></name></name> <operator pos:line="105" pos:column="19">=<pos:position pos:line="105" pos:column="20"/></operator> <name pos:line="105" pos:column="21">M_OR<pos:position pos:line="105" pos:column="25"/></name></expr>;<pos:position pos:line="105" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="106" pos:column="11">tmp<pos:position pos:line="106" pos:column="14"/></name><operator pos:line="106" pos:column="14">-&gt;<pos:position pos:line="106" pos:column="19"/></operator><name pos:line="106" pos:column="16">child<pos:position pos:line="106" pos:column="21"/></name></name> <operator pos:line="106" pos:column="22">=<pos:position pos:line="106" pos:column="23"/></operator> <name pos:line="106" pos:column="24">curlist<pos:position pos:line="106" pos:column="31"/></name></expr>;<pos:position pos:line="106" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="107" pos:column="11">curlist<pos:position pos:line="107" pos:column="18"/></name> <operator pos:line="107" pos:column="19">=<pos:position pos:line="107" pos:column="20"/></operator> <name pos:line="107" pos:column="21">tmp<pos:position pos:line="107" pos:column="24"/></name></expr>;<pos:position pos:line="107" pos:column="25"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="108" pos:column="11">last<pos:position pos:line="108" pos:column="15"/></name> <operator pos:line="108" pos:column="16">=<pos:position pos:line="108" pos:column="17"/></operator> <name pos:line="108" pos:column="18">tmp<pos:position pos:line="108" pos:column="21"/></name></expr>;<pos:position pos:line="108" pos:column="22"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="109" pos:column="11">or<pos:position pos:line="109" pos:column="13"/></operator> <operator pos:line="109" pos:column="14">=<pos:position pos:line="109" pos:column="15"/></operator> <literal type="number" pos:line="109" pos:column="16">0<pos:position pos:line="109" pos:column="17"/></literal></expr>;<pos:position pos:line="109" pos:column="18"/></expr_stmt>
	}<pos:position pos:line="110" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="112" pos:column="9">tmp<pos:position pos:line="112" pos:column="12"/></name> <operator pos:line="112" pos:column="13">=<pos:position pos:line="112" pos:column="14"/></operator> <call><name pos:line="112" pos:column="15">new_pattern<pos:position pos:line="112" pos:column="26"/></name> <argument_list pos:line="112" pos:column="27">()<pos:position pos:line="112" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="113" pos:column="9">tmp<pos:position pos:line="113" pos:column="12"/></name><operator pos:line="113" pos:column="12">-&gt;<pos:position pos:line="113" pos:column="17"/></operator></name><operator pos:line="113" pos:column="14">not<pos:position pos:line="113" pos:column="17"/></operator> <operator pos:line="113" pos:column="18">=<pos:position pos:line="113" pos:column="19"/></operator> <operator pos:line="113" pos:column="20">not<pos:position pos:line="113" pos:column="23"/></operator></expr>;<pos:position pos:line="113" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="114" pos:column="9">tmp<pos:position pos:line="114" pos:column="12"/></name><operator pos:line="114" pos:column="12">-&gt;<pos:position pos:line="114" pos:column="17"/></operator><name pos:line="114" pos:column="14">alladdr<pos:position pos:line="114" pos:column="21"/></name></name> <operator pos:line="114" pos:column="22">=<pos:position pos:line="114" pos:column="23"/></operator> <name pos:line="114" pos:column="24">alladdr<pos:position pos:line="114" pos:column="31"/></name></expr>;<pos:position pos:line="114" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="115" pos:column="9">tmp<pos:position pos:line="115" pos:column="12"/></name><operator pos:line="115" pos:column="12">-&gt;<pos:position pos:line="115" pos:column="17"/></operator><name pos:line="115" pos:column="14">stringmatch<pos:position pos:line="115" pos:column="25"/></name></name> <operator pos:line="115" pos:column="26">=<pos:position pos:line="115" pos:column="27"/></operator> <ternary><condition><expr><operator pos:line="115" pos:column="28">(<pos:position pos:line="115" pos:column="29"/></operator><operator pos:line="115" pos:column="29">*<pos:position pos:line="115" pos:column="30"/></operator><name><name pos:line="115" pos:column="30">ps<pos:position pos:line="115" pos:column="32"/></name><operator pos:line="115" pos:column="32">.<pos:position pos:line="115" pos:column="33"/></operator><name pos:line="115" pos:column="33">dptr<pos:position pos:line="115" pos:column="37"/></name></name> <operator pos:line="115" pos:column="38">==<pos:position pos:line="115" pos:column="40"/></operator> <literal type="char" pos:line="115" pos:column="41">'='<pos:position pos:line="115" pos:column="44"/></literal><operator pos:line="115" pos:column="44">)<pos:position pos:line="115" pos:column="45"/></operator></expr> ?<pos:position pos:line="115" pos:column="47"/></condition><then pos:line="115" pos:column="47"> <expr><literal type="number" pos:line="115" pos:column="48">1<pos:position pos:line="115" pos:column="49"/></literal></expr> <pos:position pos:line="115" pos:column="50"/></then><else pos:line="115" pos:column="50">: <expr><literal type="number" pos:line="115" pos:column="52">0<pos:position pos:line="115" pos:column="53"/></literal></expr></else></ternary></expr>;<pos:position pos:line="115" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="116" pos:column="9">tmp<pos:position pos:line="116" pos:column="12"/></name><operator pos:line="116" pos:column="12">-&gt;<pos:position pos:line="116" pos:column="17"/></operator><name pos:line="116" pos:column="14">groupmatch<pos:position pos:line="116" pos:column="24"/></name></name>  <operator pos:line="116" pos:column="26">=<pos:position pos:line="116" pos:column="27"/></operator> <ternary><condition><expr><operator pos:line="116" pos:column="28">(<pos:position pos:line="116" pos:column="29"/></operator><operator pos:line="116" pos:column="29">*<pos:position pos:line="116" pos:column="30"/></operator><name><name pos:line="116" pos:column="30">ps<pos:position pos:line="116" pos:column="32"/></name><operator pos:line="116" pos:column="32">.<pos:position pos:line="116" pos:column="33"/></operator><name pos:line="116" pos:column="33">dptr<pos:position pos:line="116" pos:column="37"/></name></name> <operator pos:line="116" pos:column="38">==<pos:position pos:line="116" pos:column="40"/></operator> <literal type="char" pos:line="116" pos:column="41">'%'<pos:position pos:line="116" pos:column="44"/></literal><operator pos:line="116" pos:column="44">)<pos:position pos:line="116" pos:column="45"/></operator></expr> ?<pos:position pos:line="116" pos:column="47"/></condition><then pos:line="116" pos:column="47"> <expr><literal type="number" pos:line="116" pos:column="48">1<pos:position pos:line="116" pos:column="49"/></literal></expr> <pos:position pos:line="116" pos:column="50"/></then><else pos:line="116" pos:column="50">: <expr><literal type="number" pos:line="116" pos:column="52">0<pos:position pos:line="116" pos:column="53"/></literal></expr></else></ternary></expr>;<pos:position pos:line="116" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="117" pos:column="9">not<pos:position pos:line="117" pos:column="12"/></operator> <operator pos:line="117" pos:column="13">=<pos:position pos:line="117" pos:column="14"/></operator> <literal type="number" pos:line="117" pos:column="15">0<pos:position pos:line="117" pos:column="16"/></literal></expr>;<pos:position pos:line="117" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="118" pos:column="9">alladdr<pos:position pos:line="118" pos:column="16"/></name> <operator pos:line="118" pos:column="17">=<pos:position pos:line="118" pos:column="18"/></operator> <literal type="number" pos:line="118" pos:column="19">0<pos:position pos:line="118" pos:column="20"/></literal></expr>;<pos:position pos:line="118" pos:column="21"/></expr_stmt>

	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">last<pos:position pos:line="120" pos:column="17"/></name></expr>)<pos:position pos:line="120" pos:column="18"/></condition><then pos:line="120" pos:column="18">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="121" pos:column="11">last<pos:position pos:line="121" pos:column="15"/></name><operator pos:line="121" pos:column="15">-&gt;<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="17">next<pos:position pos:line="121" pos:column="21"/></name></name> <operator pos:line="121" pos:column="22">=<pos:position pos:line="121" pos:column="23"/></operator> <name pos:line="121" pos:column="24">tmp<pos:position pos:line="121" pos:column="27"/></name></expr>;<pos:position pos:line="121" pos:column="28"/></expr_stmt></block></then>
	<else pos:line="122" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="123" pos:column="11">curlist<pos:position pos:line="123" pos:column="18"/></name> <operator pos:line="123" pos:column="19">=<pos:position pos:line="123" pos:column="20"/></operator> <name pos:line="123" pos:column="21">tmp<pos:position pos:line="123" pos:column="24"/></name></expr>;<pos:position pos:line="123" pos:column="25"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="124" pos:column="9">last<pos:position pos:line="124" pos:column="13"/></name> <operator pos:line="124" pos:column="14">=<pos:position pos:line="124" pos:column="15"/></operator> <name pos:line="124" pos:column="16">tmp<pos:position pos:line="124" pos:column="19"/></name></expr>;<pos:position pos:line="124" pos:column="20"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="126" pos:column="9">ps<pos:position pos:line="126" pos:column="11"/></name><operator pos:line="126" pos:column="11">.<pos:position pos:line="126" pos:column="12"/></operator><name pos:line="126" pos:column="12">dptr<pos:position pos:line="126" pos:column="16"/></name></name><operator pos:line="126" pos:column="16">++<pos:position pos:line="126" pos:column="18"/></operator></expr>;<pos:position pos:line="126" pos:column="19"/></expr_stmt> <comment type="block" pos:line="126" pos:column="20">/* move past the ~ */</comment>
	<if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><operator pos:line="127" pos:column="13">(<pos:position pos:line="127" pos:column="14"/></operator><name pos:line="127" pos:column="14">entry<pos:position pos:line="127" pos:column="19"/></name> <operator pos:line="127" pos:column="20">=<pos:position pos:line="127" pos:column="21"/></operator> <call><name pos:line="127" pos:column="22">lookup_tag<pos:position pos:line="127" pos:column="32"/></name> <argument_list pos:line="127" pos:column="33">(<argument><expr><operator pos:line="127" pos:column="34">*<pos:position pos:line="127" pos:column="35"/></operator><name><name pos:line="127" pos:column="35">ps<pos:position pos:line="127" pos:column="37"/></name><operator pos:line="127" pos:column="37">.<pos:position pos:line="127" pos:column="38"/></operator><name pos:line="127" pos:column="38">dptr<pos:position pos:line="127" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="43"/></argument_list></call><operator pos:line="127" pos:column="43">)<pos:position pos:line="127" pos:column="44"/></operator> <operator pos:line="127" pos:column="45">==<pos:position pos:line="127" pos:column="47"/></operator> <name pos:line="127" pos:column="48">NULL<pos:position pos:line="127" pos:column="52"/></name></expr>)<pos:position pos:line="127" pos:column="53"/></condition><then pos:line="127" pos:column="53">
	<block pos:line="128" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="129" pos:column="11">snprintf<pos:position pos:line="129" pos:column="19"/></name> <argument_list pos:line="129" pos:column="20">(<argument><expr><name><name pos:line="129" pos:column="21">err<pos:position pos:line="129" pos:column="24"/></name><operator pos:line="129" pos:column="24">-&gt;<pos:position pos:line="129" pos:column="29"/></operator><name pos:line="129" pos:column="26">data<pos:position pos:line="129" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="32">err<pos:position pos:line="129" pos:column="35"/></name><operator pos:line="129" pos:column="35">-&gt;<pos:position pos:line="129" pos:column="40"/></operator><name pos:line="129" pos:column="37">dsize<pos:position pos:line="129" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="129" pos:column="44">_<pos:position pos:line="129" pos:column="45"/></name><argument_list pos:line="129" pos:column="45">(<argument><expr><literal type="string" pos:line="129" pos:column="46">"%c: invalid pattern modifier"<pos:position pos:line="129" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="129" pos:column="79">*<pos:position pos:line="129" pos:column="80"/></operator><name><name pos:line="129" pos:column="80">ps<pos:position pos:line="129" pos:column="82"/></name><operator pos:line="129" pos:column="82">.<pos:position pos:line="129" pos:column="83"/></operator><name pos:line="129" pos:column="83">dptr<pos:position pos:line="129" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="89"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="130" pos:column="11">mutt_pattern_free<pos:position pos:line="130" pos:column="28"/></name> <argument_list pos:line="130" pos:column="29">(<argument><expr><operator pos:line="130" pos:column="30">&amp;<pos:position pos:line="130" pos:column="35"/></operator><name pos:line="130" pos:column="31">curlist<pos:position pos:line="130" pos:column="38"/></name></expr></argument>)<pos:position pos:line="130" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="40"/></expr_stmt>
	  <return pos:line="131" pos:column="11">return <expr><name pos:line="131" pos:column="18">NULL<pos:position pos:line="131" pos:column="22"/></name></expr>;<pos:position pos:line="131" pos:column="23"/></return>
	}<pos:position pos:line="132" pos:column="10"/></block></then></if>
	<if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name><name pos:line="133" pos:column="13">entry<pos:position pos:line="133" pos:column="18"/></name><operator pos:line="133" pos:column="18">-&gt;<pos:position pos:line="133" pos:column="23"/></operator><name pos:line="133" pos:column="20">class<pos:position pos:line="133" pos:column="25"/></name></name> <operator pos:line="133" pos:column="26">&amp;&amp;<pos:position pos:line="133" pos:column="36"/></operator> <operator pos:line="133" pos:column="29">(<pos:position pos:line="133" pos:column="30"/></operator><name pos:line="133" pos:column="30">flags<pos:position pos:line="133" pos:column="35"/></name> <operator pos:line="133" pos:column="36">&amp;<pos:position pos:line="133" pos:column="41"/></operator> <name><name pos:line="133" pos:column="38">entry<pos:position pos:line="133" pos:column="43"/></name><operator pos:line="133" pos:column="43">-&gt;<pos:position pos:line="133" pos:column="48"/></operator><name pos:line="133" pos:column="45">class<pos:position pos:line="133" pos:column="50"/></name></name><operator pos:line="133" pos:column="50">)<pos:position pos:line="133" pos:column="51"/></operator> <operator pos:line="133" pos:column="52">==<pos:position pos:line="133" pos:column="54"/></operator> <literal type="number" pos:line="133" pos:column="55">0<pos:position pos:line="133" pos:column="56"/></literal></expr>)<pos:position pos:line="133" pos:column="57"/></condition><then pos:line="133" pos:column="57">
	<block pos:line="134" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="135" pos:column="11">snprintf<pos:position pos:line="135" pos:column="19"/></name> <argument_list pos:line="135" pos:column="20">(<argument><expr><name><name pos:line="135" pos:column="21">err<pos:position pos:line="135" pos:column="24"/></name><operator pos:line="135" pos:column="24">-&gt;<pos:position pos:line="135" pos:column="29"/></operator><name pos:line="135" pos:column="26">data<pos:position pos:line="135" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="32">err<pos:position pos:line="135" pos:column="35"/></name><operator pos:line="135" pos:column="35">-&gt;<pos:position pos:line="135" pos:column="40"/></operator><name pos:line="135" pos:column="37">dsize<pos:position pos:line="135" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="135" pos:column="44">_<pos:position pos:line="135" pos:column="45"/></name><argument_list pos:line="135" pos:column="45">(<argument><expr><literal type="string" pos:line="135" pos:column="46">"%c: not supported in this mode"<pos:position pos:line="135" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="135" pos:column="81">*<pos:position pos:line="135" pos:column="82"/></operator><name><name pos:line="135" pos:column="82">ps<pos:position pos:line="135" pos:column="84"/></name><operator pos:line="135" pos:column="84">.<pos:position pos:line="135" pos:column="85"/></operator><name pos:line="135" pos:column="85">dptr<pos:position pos:line="135" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="91"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="136" pos:column="11">mutt_pattern_free<pos:position pos:line="136" pos:column="28"/></name> <argument_list pos:line="136" pos:column="29">(<argument><expr><operator pos:line="136" pos:column="30">&amp;<pos:position pos:line="136" pos:column="35"/></operator><name pos:line="136" pos:column="31">curlist<pos:position pos:line="136" pos:column="38"/></name></expr></argument>)<pos:position pos:line="136" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="40"/></expr_stmt>
	  <return pos:line="137" pos:column="11">return <expr><name pos:line="137" pos:column="18">NULL<pos:position pos:line="137" pos:column="22"/></name></expr>;<pos:position pos:line="137" pos:column="23"/></return>
	}<pos:position pos:line="138" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="139" pos:column="9">tmp<pos:position pos:line="139" pos:column="12"/></name><operator pos:line="139" pos:column="12">-&gt;<pos:position pos:line="139" pos:column="17"/></operator><name pos:line="139" pos:column="14">op<pos:position pos:line="139" pos:column="16"/></name></name> <operator pos:line="139" pos:column="17">=<pos:position pos:line="139" pos:column="18"/></operator> <name><name pos:line="139" pos:column="19">entry<pos:position pos:line="139" pos:column="24"/></name><operator pos:line="139" pos:column="24">-&gt;<pos:position pos:line="139" pos:column="29"/></operator><name pos:line="139" pos:column="26">op<pos:position pos:line="139" pos:column="28"/></name></name></expr>;<pos:position pos:line="139" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="141" pos:column="9">ps<pos:position pos:line="141" pos:column="11"/></name><operator pos:line="141" pos:column="11">.<pos:position pos:line="141" pos:column="12"/></operator><name pos:line="141" pos:column="12">dptr<pos:position pos:line="141" pos:column="16"/></name></name><operator pos:line="141" pos:column="16">++<pos:position pos:line="141" pos:column="18"/></operator></expr>;<pos:position pos:line="141" pos:column="19"/></expr_stmt> <comment type="block" pos:line="141" pos:column="20">/* eat the operator and any optional whitespace */</comment>
	<expr_stmt><expr><call><name pos:line="142" pos:column="9">SKIPWS<pos:position pos:line="142" pos:column="15"/></name> <argument_list pos:line="142" pos:column="16">(<argument><expr><name><name pos:line="142" pos:column="17">ps<pos:position pos:line="142" pos:column="19"/></name><operator pos:line="142" pos:column="19">.<pos:position pos:line="142" pos:column="20"/></operator><name pos:line="142" pos:column="20">dptr<pos:position pos:line="142" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="26"/></expr_stmt>

	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name><name pos:line="144" pos:column="13">entry<pos:position pos:line="144" pos:column="18"/></name><operator pos:line="144" pos:column="18">-&gt;<pos:position pos:line="144" pos:column="23"/></operator><name pos:line="144" pos:column="20">eat_arg<pos:position pos:line="144" pos:column="27"/></name></name></expr>)<pos:position pos:line="144" pos:column="28"/></condition><then pos:line="144" pos:column="28">
	<block pos:line="145" pos:column="9">{
	  <if pos:line="146" pos:column="11">if <condition pos:line="146" pos:column="14">(<expr><operator pos:line="146" pos:column="15">!<pos:position pos:line="146" pos:column="16"/></operator><operator pos:line="146" pos:column="16">*<pos:position pos:line="146" pos:column="17"/></operator><name><name pos:line="146" pos:column="17">ps<pos:position pos:line="146" pos:column="19"/></name><operator pos:line="146" pos:column="19">.<pos:position pos:line="146" pos:column="20"/></operator><name pos:line="146" pos:column="20">dptr<pos:position pos:line="146" pos:column="24"/></name></name></expr>)<pos:position pos:line="146" pos:column="25"/></condition><then pos:line="146" pos:column="25">
	  <block pos:line="147" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="148" pos:column="13">snprintf<pos:position pos:line="148" pos:column="21"/></name> <argument_list pos:line="148" pos:column="22">(<argument><expr><name><name pos:line="148" pos:column="23">err<pos:position pos:line="148" pos:column="26"/></name><operator pos:line="148" pos:column="26">-&gt;<pos:position pos:line="148" pos:column="31"/></operator><name pos:line="148" pos:column="28">data<pos:position pos:line="148" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="34">err<pos:position pos:line="148" pos:column="37"/></name><operator pos:line="148" pos:column="37">-&gt;<pos:position pos:line="148" pos:column="42"/></operator><name pos:line="148" pos:column="39">dsize<pos:position pos:line="148" pos:column="44"/></name></name></expr></argument>, <argument><expr><call><name pos:line="148" pos:column="46">_<pos:position pos:line="148" pos:column="47"/></name><argument_list pos:line="148" pos:column="47">(<argument><expr><literal type="string" pos:line="148" pos:column="48">"missing parameter"<pos:position pos:line="148" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="148" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="70"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="149" pos:column="13">mutt_pattern_free<pos:position pos:line="149" pos:column="30"/></name> <argument_list pos:line="149" pos:column="31">(<argument><expr><operator pos:line="149" pos:column="32">&amp;<pos:position pos:line="149" pos:column="37"/></operator><name pos:line="149" pos:column="33">curlist<pos:position pos:line="149" pos:column="40"/></name></expr></argument>)<pos:position pos:line="149" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="42"/></expr_stmt>
	    <return pos:line="150" pos:column="13">return <expr><name pos:line="150" pos:column="20">NULL<pos:position pos:line="150" pos:column="24"/></name></expr>;<pos:position pos:line="150" pos:column="25"/></return>
	  }<pos:position pos:line="151" pos:column="12"/></block></then></if>
	  <if pos:line="152" pos:column="11">if <condition pos:line="152" pos:column="14">(<expr><call><name><name pos:line="152" pos:column="15">entry<pos:position pos:line="152" pos:column="20"/></name><operator pos:line="152" pos:column="20">-&gt;<pos:position pos:line="152" pos:column="25"/></operator><name pos:line="152" pos:column="22">eat_arg<pos:position pos:line="152" pos:column="29"/></name></name> <argument_list pos:line="152" pos:column="30">(<argument><expr><name pos:line="152" pos:column="31">tmp<pos:position pos:line="152" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="36">&amp;<pos:position pos:line="152" pos:column="41"/></operator><name pos:line="152" pos:column="37">ps<pos:position pos:line="152" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="41">err<pos:position pos:line="152" pos:column="44"/></name></expr></argument>)<pos:position pos:line="152" pos:column="45"/></argument_list></call> <operator pos:line="152" pos:column="46">==<pos:position pos:line="152" pos:column="48"/></operator> <operator pos:line="152" pos:column="49">-<pos:position pos:line="152" pos:column="50"/></operator><literal type="number" pos:line="152" pos:column="50">1<pos:position pos:line="152" pos:column="51"/></literal></expr>)<pos:position pos:line="152" pos:column="52"/></condition><then pos:line="152" pos:column="52">
	  <block pos:line="153" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="154" pos:column="13">mutt_pattern_free<pos:position pos:line="154" pos:column="30"/></name> <argument_list pos:line="154" pos:column="31">(<argument><expr><operator pos:line="154" pos:column="32">&amp;<pos:position pos:line="154" pos:column="37"/></operator><name pos:line="154" pos:column="33">curlist<pos:position pos:line="154" pos:column="40"/></name></expr></argument>)<pos:position pos:line="154" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="42"/></expr_stmt>
	    <return pos:line="155" pos:column="13">return <expr><name pos:line="155" pos:column="20">NULL<pos:position pos:line="155" pos:column="24"/></name></expr>;<pos:position pos:line="155" pos:column="25"/></return>
	  }<pos:position pos:line="156" pos:column="12"/></block></then></if>
	}<pos:position pos:line="157" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="158" pos:column="9">implicit<pos:position pos:line="158" pos:column="17"/></name> <operator pos:line="158" pos:column="18">=<pos:position pos:line="158" pos:column="19"/></operator> <literal type="number" pos:line="158" pos:column="20">1<pos:position pos:line="158" pos:column="21"/></literal></expr>;<pos:position pos:line="158" pos:column="22"/></expr_stmt>
	<break pos:line="159" pos:column="9">break;<pos:position pos:line="159" pos:column="15"/></break>
      <case pos:line="160" pos:column="7">case <expr><literal type="char" pos:line="160" pos:column="12">'('<pos:position pos:line="160" pos:column="15"/></literal></expr>:<pos:position pos:line="160" pos:column="16"/></case>
	<expr_stmt><expr><name pos:line="161" pos:column="9">p<pos:position pos:line="161" pos:column="10"/></name> <operator pos:line="161" pos:column="11">=<pos:position pos:line="161" pos:column="12"/></operator> <call><name pos:line="161" pos:column="13">find_matching_paren<pos:position pos:line="161" pos:column="32"/></name> <argument_list pos:line="161" pos:column="33">(<argument><expr><name><name pos:line="161" pos:column="34">ps<pos:position pos:line="161" pos:column="36"/></name><operator pos:line="161" pos:column="36">.<pos:position pos:line="161" pos:column="37"/></operator><name pos:line="161" pos:column="37">dptr<pos:position pos:line="161" pos:column="41"/></name></name> <operator pos:line="161" pos:column="42">+<pos:position pos:line="161" pos:column="43"/></operator> <literal type="number" pos:line="161" pos:column="44">1<pos:position pos:line="161" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="47"/></expr_stmt>
	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><operator pos:line="162" pos:column="13">*<pos:position pos:line="162" pos:column="14"/></operator><name pos:line="162" pos:column="14">p<pos:position pos:line="162" pos:column="15"/></name> <operator pos:line="162" pos:column="16">!=<pos:position pos:line="162" pos:column="18"/></operator> <literal type="char" pos:line="162" pos:column="19">')'<pos:position pos:line="162" pos:column="22"/></literal></expr>)<pos:position pos:line="162" pos:column="23"/></condition><then pos:line="162" pos:column="23">
	<block pos:line="163" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="164" pos:column="11">snprintf<pos:position pos:line="164" pos:column="19"/></name> <argument_list pos:line="164" pos:column="20">(<argument><expr><name><name pos:line="164" pos:column="21">err<pos:position pos:line="164" pos:column="24"/></name><operator pos:line="164" pos:column="24">-&gt;<pos:position pos:line="164" pos:column="29"/></operator><name pos:line="164" pos:column="26">data<pos:position pos:line="164" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="32">err<pos:position pos:line="164" pos:column="35"/></name><operator pos:line="164" pos:column="35">-&gt;<pos:position pos:line="164" pos:column="40"/></operator><name pos:line="164" pos:column="37">dsize<pos:position pos:line="164" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="164" pos:column="44">_<pos:position pos:line="164" pos:column="45"/></name><argument_list pos:line="164" pos:column="45">(<argument><expr><literal type="string" pos:line="164" pos:column="46">"mismatched parenthesis: %s"<pos:position pos:line="164" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="77">ps<pos:position pos:line="164" pos:column="79"/></name><operator pos:line="164" pos:column="79">.<pos:position pos:line="164" pos:column="80"/></operator><name pos:line="164" pos:column="80">dptr<pos:position pos:line="164" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="86"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="165" pos:column="11">mutt_pattern_free<pos:position pos:line="165" pos:column="28"/></name> <argument_list pos:line="165" pos:column="29">(<argument><expr><operator pos:line="165" pos:column="30">&amp;<pos:position pos:line="165" pos:column="35"/></operator><name pos:line="165" pos:column="31">curlist<pos:position pos:line="165" pos:column="38"/></name></expr></argument>)<pos:position pos:line="165" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="40"/></expr_stmt>
	  <return pos:line="166" pos:column="11">return <expr><name pos:line="166" pos:column="18">NULL<pos:position pos:line="166" pos:column="22"/></name></expr>;<pos:position pos:line="166" pos:column="23"/></return>
	}<pos:position pos:line="167" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="168" pos:column="9">/* compile the sub-expression */</comment>
	<expr_stmt><expr><name pos:line="169" pos:column="9">buf<pos:position pos:line="169" pos:column="12"/></name> <operator pos:line="169" pos:column="13">=<pos:position pos:line="169" pos:column="14"/></operator> <call><name pos:line="169" pos:column="15">mutt_substrdup<pos:position pos:line="169" pos:column="29"/></name> <argument_list pos:line="169" pos:column="30">(<argument><expr><name><name pos:line="169" pos:column="31">ps<pos:position pos:line="169" pos:column="33"/></name><operator pos:line="169" pos:column="33">.<pos:position pos:line="169" pos:column="34"/></operator><name pos:line="169" pos:column="34">dptr<pos:position pos:line="169" pos:column="38"/></name></name> <operator pos:line="169" pos:column="39">+<pos:position pos:line="169" pos:column="40"/></operator> <literal type="number" pos:line="169" pos:column="41">1<pos:position pos:line="169" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="169" pos:column="44">p<pos:position pos:line="169" pos:column="45"/></name></expr></argument>)<pos:position pos:line="169" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="47"/></expr_stmt>
	<if pos:line="170" pos:column="9">if <condition pos:line="170" pos:column="12">(<expr><operator pos:line="170" pos:column="13">(<pos:position pos:line="170" pos:column="14"/></operator><name pos:line="170" pos:column="14">tmp<pos:position pos:line="170" pos:column="17"/></name> <operator pos:line="170" pos:column="18">=<pos:position pos:line="170" pos:column="19"/></operator> <call><name pos:line="170" pos:column="20">mutt_pattern_comp<pos:position pos:line="170" pos:column="37"/></name> <argument_list pos:line="170" pos:column="38">(<argument><expr><name pos:line="170" pos:column="39">buf<pos:position pos:line="170" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="44">flags<pos:position pos:line="170" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="51">err<pos:position pos:line="170" pos:column="54"/></name></expr></argument>)<pos:position pos:line="170" pos:column="55"/></argument_list></call><operator pos:line="170" pos:column="55">)<pos:position pos:line="170" pos:column="56"/></operator> <operator pos:line="170" pos:column="57">==<pos:position pos:line="170" pos:column="59"/></operator> <name pos:line="170" pos:column="60">NULL<pos:position pos:line="170" pos:column="64"/></name></expr>)<pos:position pos:line="170" pos:column="65"/></condition><then pos:line="170" pos:column="65">
	<block pos:line="171" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="172" pos:column="11">FREE<pos:position pos:line="172" pos:column="15"/></name> <argument_list pos:line="172" pos:column="16">(<argument><expr><operator pos:line="172" pos:column="17">&amp;<pos:position pos:line="172" pos:column="22"/></operator><name pos:line="172" pos:column="18">buf<pos:position pos:line="172" pos:column="21"/></name></expr></argument>)<pos:position pos:line="172" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="23"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="173" pos:column="11">mutt_pattern_free<pos:position pos:line="173" pos:column="28"/></name> <argument_list pos:line="173" pos:column="29">(<argument><expr><operator pos:line="173" pos:column="30">&amp;<pos:position pos:line="173" pos:column="35"/></operator><name pos:line="173" pos:column="31">curlist<pos:position pos:line="173" pos:column="38"/></name></expr></argument>)<pos:position pos:line="173" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="40"/></expr_stmt>
	  <return pos:line="174" pos:column="11">return <expr><name pos:line="174" pos:column="18">NULL<pos:position pos:line="174" pos:column="22"/></name></expr>;<pos:position pos:line="174" pos:column="23"/></return>
	}<pos:position pos:line="175" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="176" pos:column="9">FREE<pos:position pos:line="176" pos:column="13"/></name> <argument_list pos:line="176" pos:column="14">(<argument><expr><operator pos:line="176" pos:column="15">&amp;<pos:position pos:line="176" pos:column="20"/></operator><name pos:line="176" pos:column="16">buf<pos:position pos:line="176" pos:column="19"/></name></expr></argument>)<pos:position pos:line="176" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="21"/></expr_stmt>
	<if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><name pos:line="177" pos:column="13">last<pos:position pos:line="177" pos:column="17"/></name></expr>)<pos:position pos:line="177" pos:column="18"/></condition><then pos:line="177" pos:column="18">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="178" pos:column="11">last<pos:position pos:line="178" pos:column="15"/></name><operator pos:line="178" pos:column="15">-&gt;<pos:position pos:line="178" pos:column="20"/></operator><name pos:line="178" pos:column="17">next<pos:position pos:line="178" pos:column="21"/></name></name> <operator pos:line="178" pos:column="22">=<pos:position pos:line="178" pos:column="23"/></operator> <name pos:line="178" pos:column="24">tmp<pos:position pos:line="178" pos:column="27"/></name></expr>;<pos:position pos:line="178" pos:column="28"/></expr_stmt></block></then>
	<else pos:line="179" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="180" pos:column="11">curlist<pos:position pos:line="180" pos:column="18"/></name> <operator pos:line="180" pos:column="19">=<pos:position pos:line="180" pos:column="20"/></operator> <name pos:line="180" pos:column="21">tmp<pos:position pos:line="180" pos:column="24"/></name></expr>;<pos:position pos:line="180" pos:column="25"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="181" pos:column="9">last<pos:position pos:line="181" pos:column="13"/></name> <operator pos:line="181" pos:column="14">=<pos:position pos:line="181" pos:column="15"/></operator> <name pos:line="181" pos:column="16">tmp<pos:position pos:line="181" pos:column="19"/></name></expr>;<pos:position pos:line="181" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="182" pos:column="9">tmp<pos:position pos:line="182" pos:column="12"/></name><operator pos:line="182" pos:column="12">-&gt;<pos:position pos:line="182" pos:column="17"/></operator></name><operator pos:line="182" pos:column="14">not<pos:position pos:line="182" pos:column="17"/></operator> <operator pos:line="182" pos:column="18">^=<pos:position pos:line="182" pos:column="20"/></operator> <operator pos:line="182" pos:column="21">not<pos:position pos:line="182" pos:column="24"/></operator></expr>;<pos:position pos:line="182" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="183" pos:column="9">tmp<pos:position pos:line="183" pos:column="12"/></name><operator pos:line="183" pos:column="12">-&gt;<pos:position pos:line="183" pos:column="17"/></operator><name pos:line="183" pos:column="14">alladdr<pos:position pos:line="183" pos:column="21"/></name></name> <operator pos:line="183" pos:column="22">|=<pos:position pos:line="183" pos:column="24"/></operator> <name pos:line="183" pos:column="25">alladdr<pos:position pos:line="183" pos:column="32"/></name></expr>;<pos:position pos:line="183" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="184" pos:column="9">not<pos:position pos:line="184" pos:column="12"/></operator> <operator pos:line="184" pos:column="13">=<pos:position pos:line="184" pos:column="14"/></operator> <literal type="number" pos:line="184" pos:column="15">0<pos:position pos:line="184" pos:column="16"/></literal></expr>;<pos:position pos:line="184" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="185" pos:column="9">alladdr<pos:position pos:line="185" pos:column="16"/></name> <operator pos:line="185" pos:column="17">=<pos:position pos:line="185" pos:column="18"/></operator> <literal type="number" pos:line="185" pos:column="19">0<pos:position pos:line="185" pos:column="20"/></literal></expr>;<pos:position pos:line="185" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="186" pos:column="9">ps<pos:position pos:line="186" pos:column="11"/></name><operator pos:line="186" pos:column="11">.<pos:position pos:line="186" pos:column="12"/></operator><name pos:line="186" pos:column="12">dptr<pos:position pos:line="186" pos:column="16"/></name></name> <operator pos:line="186" pos:column="17">=<pos:position pos:line="186" pos:column="18"/></operator> <name pos:line="186" pos:column="19">p<pos:position pos:line="186" pos:column="20"/></name> <operator pos:line="186" pos:column="21">+<pos:position pos:line="186" pos:column="22"/></operator> <literal type="number" pos:line="186" pos:column="23">1<pos:position pos:line="186" pos:column="24"/></literal></expr>;<pos:position pos:line="186" pos:column="25"/></expr_stmt> <comment type="block" pos:line="186" pos:column="26">/* restore location */</comment>
	<break pos:line="187" pos:column="9">break;<pos:position pos:line="187" pos:column="15"/></break>
      <default pos:line="188" pos:column="7">default:<pos:position pos:line="188" pos:column="15"/></default>
	<expr_stmt><expr><call><name pos:line="189" pos:column="9">snprintf<pos:position pos:line="189" pos:column="17"/></name> <argument_list pos:line="189" pos:column="18">(<argument><expr><name><name pos:line="189" pos:column="19">err<pos:position pos:line="189" pos:column="22"/></name><operator pos:line="189" pos:column="22">-&gt;<pos:position pos:line="189" pos:column="27"/></operator><name pos:line="189" pos:column="24">data<pos:position pos:line="189" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="30">err<pos:position pos:line="189" pos:column="33"/></name><operator pos:line="189" pos:column="33">-&gt;<pos:position pos:line="189" pos:column="38"/></operator><name pos:line="189" pos:column="35">dsize<pos:position pos:line="189" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="189" pos:column="42">_<pos:position pos:line="189" pos:column="43"/></name><argument_list pos:line="189" pos:column="43">(<argument><expr><literal type="string" pos:line="189" pos:column="44">"error in pattern at: %s"<pos:position pos:line="189" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="72">ps<pos:position pos:line="189" pos:column="74"/></name><operator pos:line="189" pos:column="74">.<pos:position pos:line="189" pos:column="75"/></operator><name pos:line="189" pos:column="75">dptr<pos:position pos:line="189" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="190" pos:column="9">mutt_pattern_free<pos:position pos:line="190" pos:column="26"/></name> <argument_list pos:line="190" pos:column="27">(<argument><expr><operator pos:line="190" pos:column="28">&amp;<pos:position pos:line="190" pos:column="33"/></operator><name pos:line="190" pos:column="29">curlist<pos:position pos:line="190" pos:column="36"/></name></expr></argument>)<pos:position pos:line="190" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="38"/></expr_stmt>
	<return pos:line="191" pos:column="9">return <expr><name pos:line="191" pos:column="16">NULL<pos:position pos:line="191" pos:column="20"/></name></expr>;<pos:position pos:line="191" pos:column="21"/></return>
    }<pos:position pos:line="192" pos:column="6"/></block></switch>
  }<pos:position pos:line="193" pos:column="4"/></block></while>
  <if pos:line="194" pos:column="3">if <condition pos:line="194" pos:column="6">(<expr><operator pos:line="194" pos:column="7">!<pos:position pos:line="194" pos:column="8"/></operator><name pos:line="194" pos:column="8">curlist<pos:position pos:line="194" pos:column="15"/></name></expr>)<pos:position pos:line="194" pos:column="16"/></condition><then pos:line="194" pos:column="16">
  <block pos:line="195" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="196" pos:column="5">strfcpy<pos:position pos:line="196" pos:column="12"/></name> <argument_list pos:line="196" pos:column="13">(<argument><expr><name><name pos:line="196" pos:column="14">err<pos:position pos:line="196" pos:column="17"/></name><operator pos:line="196" pos:column="17">-&gt;<pos:position pos:line="196" pos:column="22"/></operator><name pos:line="196" pos:column="19">data<pos:position pos:line="196" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="196" pos:column="25">_<pos:position pos:line="196" pos:column="26"/></name><argument_list pos:line="196" pos:column="26">(<argument><expr><literal type="string" pos:line="196" pos:column="27">"empty pattern"<pos:position pos:line="196" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="45">err<pos:position pos:line="196" pos:column="48"/></name><operator pos:line="196" pos:column="48">-&gt;<pos:position pos:line="196" pos:column="53"/></operator><name pos:line="196" pos:column="50">dsize<pos:position pos:line="196" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="196" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="57"/></expr_stmt>
    <return pos:line="197" pos:column="5">return <expr><name pos:line="197" pos:column="12">NULL<pos:position pos:line="197" pos:column="16"/></name></expr>;<pos:position pos:line="197" pos:column="17"/></return>
  }<pos:position pos:line="198" pos:column="4"/></block></then></if>
  <if pos:line="199" pos:column="3">if <condition pos:line="199" pos:column="6">(<expr><name><name pos:line="199" pos:column="7">curlist<pos:position pos:line="199" pos:column="14"/></name><operator pos:line="199" pos:column="14">-&gt;<pos:position pos:line="199" pos:column="19"/></operator><name pos:line="199" pos:column="16">next<pos:position pos:line="199" pos:column="20"/></name></name></expr>)<pos:position pos:line="199" pos:column="21"/></condition><then pos:line="199" pos:column="21">
  <block pos:line="200" pos:column="3">{
    <expr_stmt><expr><name pos:line="201" pos:column="5">tmp<pos:position pos:line="201" pos:column="8"/></name> <operator pos:line="201" pos:column="9">=<pos:position pos:line="201" pos:column="10"/></operator> <call><name pos:line="201" pos:column="11">new_pattern<pos:position pos:line="201" pos:column="22"/></name> <argument_list pos:line="201" pos:column="23">()<pos:position pos:line="201" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="202" pos:column="5">tmp<pos:position pos:line="202" pos:column="8"/></name><operator pos:line="202" pos:column="8">-&gt;<pos:position pos:line="202" pos:column="13"/></operator><name pos:line="202" pos:column="10">op<pos:position pos:line="202" pos:column="12"/></name></name> <operator pos:line="202" pos:column="13">=<pos:position pos:line="202" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="202" pos:column="15">or<pos:position pos:line="202" pos:column="17"/></operator></expr> ?<pos:position pos:line="202" pos:column="19"/></condition><then pos:line="202" pos:column="19"> <expr><name pos:line="202" pos:column="20">M_OR<pos:position pos:line="202" pos:column="24"/></name></expr> <pos:position pos:line="202" pos:column="25"/></then><else pos:line="202" pos:column="25">: <expr><name pos:line="202" pos:column="27">M_AND<pos:position pos:line="202" pos:column="32"/></name></expr></else></ternary></expr>;<pos:position pos:line="202" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="203" pos:column="5">tmp<pos:position pos:line="203" pos:column="8"/></name><operator pos:line="203" pos:column="8">-&gt;<pos:position pos:line="203" pos:column="13"/></operator><name pos:line="203" pos:column="10">child<pos:position pos:line="203" pos:column="15"/></name></name> <operator pos:line="203" pos:column="16">=<pos:position pos:line="203" pos:column="17"/></operator> <name pos:line="203" pos:column="18">curlist<pos:position pos:line="203" pos:column="25"/></name></expr>;<pos:position pos:line="203" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="204" pos:column="5">curlist<pos:position pos:line="204" pos:column="12"/></name> <operator pos:line="204" pos:column="13">=<pos:position pos:line="204" pos:column="14"/></operator> <name pos:line="204" pos:column="15">tmp<pos:position pos:line="204" pos:column="18"/></name></expr>;<pos:position pos:line="204" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="205" pos:column="4"/></block></then></if>
  <return pos:line="206" pos:column="3">return <expr><operator pos:line="206" pos:column="10">(<pos:position pos:line="206" pos:column="11"/></operator><name pos:line="206" pos:column="11">curlist<pos:position pos:line="206" pos:column="18"/></name><operator pos:line="206" pos:column="18">)<pos:position pos:line="206" pos:column="19"/></operator></expr>;<pos:position pos:line="206" pos:column="20"/></return>
}<pos:position pos:line="207" pos:column="2"/></block></function></unit>

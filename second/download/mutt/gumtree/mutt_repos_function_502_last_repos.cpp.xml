<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_502_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">mutt_wstr_trunc<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">src<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">maxlen<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">size_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">maxwid<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">size_t<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">width<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">wchar_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">wc<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">n<pos:position pos:line="4" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="13">w<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">l<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="27">cl<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">cw<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">mbstate_t<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">mbstate<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">src<pos:position pos:line="8" pos:column="11"/></name></expr>)<pos:position pos:line="8" pos:column="12"/></condition><then pos:line="8" pos:column="12">
    <block type="pseudo"><goto pos:line="9" pos:column="5">goto <name pos:line="9" pos:column="10">out<pos:position pos:line="9" pos:column="13"/></name>;<pos:position pos:line="9" pos:column="14"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">n<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <call><name pos:line="11" pos:column="7">mutt_strlen<pos:position pos:line="11" pos:column="18"/></name> <argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">src<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">memset<pos:position pos:line="13" pos:column="9"/></name> <argument_list pos:line="13" pos:column="10">(<argument><expr><operator pos:line="13" pos:column="11">&amp;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="12">mbstate<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="24">sizeof <argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">mbstate<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><expr><name pos:line="14" pos:column="8">w<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></init> <condition><expr><name pos:line="14" pos:column="15">n<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&amp;&amp;<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="20">(<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">cl<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <call><name pos:line="14" pos:column="26">mbrtowc<pos:position pos:line="14" pos:column="33"/></name> <argument_list pos:line="14" pos:column="34">(<argument><expr><operator pos:line="14" pos:column="35">&amp;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="36">wc<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">src<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">n<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="48">&amp;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="49">mbstate<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call><operator pos:line="14" pos:column="57">)<pos:position pos:line="14" pos:column="58"/></operator></expr>;<pos:position pos:line="14" pos:column="59"/></condition> <incr><expr><name pos:line="14" pos:column="60">src<pos:position pos:line="14" pos:column="63"/></name> <operator pos:line="14" pos:column="64">+=<pos:position pos:line="14" pos:column="66"/></operator> <name pos:line="14" pos:column="67">cl<pos:position pos:line="14" pos:column="69"/></name></expr><operator pos:line="14" pos:column="69">,<pos:position pos:line="14" pos:column="70"/></operator> <expr><name pos:line="14" pos:column="71">n<pos:position pos:line="14" pos:column="72"/></name> <operator pos:line="14" pos:column="73">-=<pos:position pos:line="14" pos:column="75"/></operator> <name pos:line="14" pos:column="76">cl<pos:position pos:line="14" pos:column="78"/></name></expr></incr>)<pos:position pos:line="14" pos:column="79"/></control>
  <block pos:line="15" pos:column="3">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">cl<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <call pos:line="16" pos:column="15">(<name pos:line="16" pos:column="16">size_t<pos:position pos:line="16" pos:column="22"/></name>)<argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call> <operator pos:line="16" pos:column="28">||<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">cl<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">==<pos:position pos:line="16" pos:column="36"/></operator> <call pos:line="16" pos:column="37">(<name pos:line="16" pos:column="38">size_t<pos:position pos:line="16" pos:column="44"/></name>)<argument_list pos:line="16" pos:column="45">(<argument><expr><operator pos:line="16" pos:column="46">-<pos:position pos:line="16" pos:column="47"/></operator><literal type="number" pos:line="16" pos:column="47">2<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50">
    <block pos:line="17" pos:column="5">{
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><name pos:line="18" pos:column="11">cl<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <call pos:line="18" pos:column="17">(<name pos:line="18" pos:column="18">size_t<pos:position pos:line="18" pos:column="24"/></name>)<argument_list pos:line="18" pos:column="25">(<argument><expr><operator pos:line="18" pos:column="26">-<pos:position pos:line="18" pos:column="27"/></operator><literal type="number" pos:line="18" pos:column="27">1<pos:position pos:line="18" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">memset<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><operator pos:line="19" pos:column="17">&amp;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="18">mbstate<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="27">0<pos:position pos:line="19" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="30">sizeof <argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">mbstate<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="20" pos:column="7">cl<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <ternary><condition><expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">cl<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">==<pos:position pos:line="20" pos:column="18"/></operator> <call pos:line="20" pos:column="19">(<name pos:line="20" pos:column="20">size_t<pos:position pos:line="20" pos:column="26"/></name>)<argument_list pos:line="20" pos:column="27">(<argument><expr><operator pos:line="20" pos:column="28">-<pos:position pos:line="20" pos:column="29"/></operator><literal type="number" pos:line="20" pos:column="29">1<pos:position pos:line="20" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator></expr> ?<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34"> <expr><literal type="number" pos:line="20" pos:column="35">1<pos:position pos:line="20" pos:column="36"/></literal></expr> <pos:position pos:line="20" pos:column="37"/></then><else pos:line="20" pos:column="37">: <expr><name pos:line="20" pos:column="39">n<pos:position pos:line="20" pos:column="40"/></name></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="21" pos:column="7">wc<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">replacement_char<pos:position pos:line="21" pos:column="28"/></name> <argument_list pos:line="21" pos:column="29">()<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="23" pos:column="5">cw<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">wcwidth<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">wc<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <comment type="block" pos:line="24" pos:column="5">/* hack because MUTT_TREE symbols aren't turned into characters
     * until rendered by print_enriched_string (#3364) */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">cw<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">&lt;<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal> <operator pos:line="26" pos:column="16">&amp;&amp;<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="19">cl<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">==<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal> <operator pos:line="26" pos:column="27">&amp;&amp;<pos:position pos:line="26" pos:column="37"/></operator> <name><name pos:line="26" pos:column="30">src<pos:position pos:line="26" pos:column="33"/></name><index pos:line="26" pos:column="33">[<expr><literal type="number" pos:line="26" pos:column="34">0<pos:position pos:line="26" pos:column="35"/></literal></expr>]<pos:position pos:line="26" pos:column="36"/></index></name> <operator pos:line="26" pos:column="37">&amp;&amp;<pos:position pos:line="26" pos:column="47"/></operator> <name><name pos:line="26" pos:column="40">src<pos:position pos:line="26" pos:column="43"/></name><index pos:line="26" pos:column="43">[<expr><literal type="number" pos:line="26" pos:column="44">0<pos:position pos:line="26" pos:column="45"/></literal></expr>]<pos:position pos:line="26" pos:column="46"/></index></name> <operator pos:line="26" pos:column="47">&lt;<pos:position pos:line="26" pos:column="51"/></operator> <name pos:line="26" pos:column="49">MUTT_TREE_MAX<pos:position pos:line="26" pos:column="62"/></name></expr>)<pos:position pos:line="26" pos:column="63"/></condition><then pos:line="26" pos:column="63">
      <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="7">cw<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <literal type="number" pos:line="27" pos:column="12">1<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></expr_stmt></block></then>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><name pos:line="28" pos:column="14">cw<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">&lt;<pos:position pos:line="28" pos:column="21"/></operator> <literal type="number" pos:line="28" pos:column="19">0<pos:position pos:line="28" pos:column="20"/></literal></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">cw<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></expr_stmt></block></then></if></elseif></if>			<comment type="block" pos:line="29" pos:column="33">/* unprintable wchar */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">cl<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">+<pos:position pos:line="30" pos:column="13"/></operator> <name pos:line="30" pos:column="14">l<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">&gt;<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="18">maxlen<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">||<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">cw<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">+<pos:position pos:line="30" pos:column="32"/></operator> <name pos:line="30" pos:column="33">w<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">&gt;<pos:position pos:line="30" pos:column="39"/></operator> <name pos:line="30" pos:column="37">maxwid<pos:position pos:line="30" pos:column="43"/></name></expr>)<pos:position pos:line="30" pos:column="44"/></condition><then pos:line="30" pos:column="44">
      <block type="pseudo"><break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="32" pos:column="5">l<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">+=<pos:position pos:line="32" pos:column="9"/></operator> <name pos:line="32" pos:column="10">cl<pos:position pos:line="32" pos:column="12"/></name></expr>;<pos:position pos:line="32" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">w<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">+=<pos:position pos:line="33" pos:column="9"/></operator> <name pos:line="33" pos:column="10">cw<pos:position pos:line="33" pos:column="12"/></name></expr>;<pos:position pos:line="33" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></for>
<label><name pos:line="35" pos:column="1">out<pos:position pos:line="35" pos:column="4"/></name>:<pos:position pos:line="35" pos:column="5"/></label>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">width<pos:position pos:line="36" pos:column="12"/></name></expr>)<pos:position pos:line="36" pos:column="13"/></condition><then pos:line="36" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="37" pos:column="5">*<pos:position pos:line="37" pos:column="6"/></operator><name pos:line="37" pos:column="6">width<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <name pos:line="37" pos:column="14">w<pos:position pos:line="37" pos:column="15"/></name></expr>;<pos:position pos:line="37" pos:column="16"/></expr_stmt></block></then></if>
  <return pos:line="38" pos:column="3">return <expr><name pos:line="38" pos:column="10">l<pos:position pos:line="38" pos:column="11"/></name></expr>;<pos:position pos:line="38" pos:column="12"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

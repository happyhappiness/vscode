<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2095_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">imap_pretty_mailbox<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name><modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type> <name pos:line="1" pos:column="33">path<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_MBOX<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">home<pos:position pos:line="3" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="19">target<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ciss_url_t<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">url<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name><modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type> <name pos:line="5" pos:column="9">delim<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">tlen<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">hlen<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">home_match<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">imap_parse_path<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">path<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="31">target<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call> <operator pos:line="10" pos:column="39">&lt;<pos:position pos:line="10" pos:column="43"/></operator> <literal type="number" pos:line="10" pos:column="41">0<pos:position pos:line="10" pos:column="42"/></literal></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43">
    <block type="pseudo"><return pos:line="11" pos:column="5">return;<pos:position pos:line="11" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">tlen<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">mutt_strlen<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><name><name pos:line="13" pos:column="23">target<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">mbox<pos:position pos:line="13" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
  <comment type="block" pos:line="14" pos:column="3">/* check whether we can do '=' substitution */</comment>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">mx_is_imap<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">Maildir<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator> <operator pos:line="15" pos:column="30">!<pos:position pos:line="15" pos:column="31"/></operator><call><name pos:line="15" pos:column="31">imap_parse_path<pos:position pos:line="15" pos:column="46"/></name> <argument_list pos:line="15" pos:column="47">(<argument><expr><name pos:line="15" pos:column="48">Maildir<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="57">&amp;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="58">home<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="64"/></condition><then pos:line="15" pos:column="64">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">hlen<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">mutt_strlen<pos:position pos:line="17" pos:column="23"/></name> <argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">home<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">mbox<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">tlen<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">&amp;&amp;<pos:position pos:line="18" pos:column="24"/></operator> <call><name pos:line="18" pos:column="17">mutt_account_match<pos:position pos:line="18" pos:column="35"/></name> <argument_list pos:line="18" pos:column="36">(<argument><expr><operator pos:line="18" pos:column="37">&amp;<pos:position pos:line="18" pos:column="42"/></operator><name><name pos:line="18" pos:column="38">home<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">.<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">account<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="52">&amp;<pos:position pos:line="18" pos:column="57"/></operator><name><name pos:line="18" pos:column="53">target<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">account<pos:position pos:line="18" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call> <operator pos:line="18" pos:column="69">&amp;&amp;<pos:position pos:line="18" pos:column="79"/></operator>
	<operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><call><name pos:line="19" pos:column="10">mutt_strncmp<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><name><name pos:line="19" pos:column="24">home<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">mbox<pos:position pos:line="19" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="35">target<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">mbox<pos:position pos:line="19" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">hlen<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54">
    <block pos:line="20" pos:column="5">{
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">!<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">hlen<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18">
	<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="9">home_match<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="22">1<pos:position pos:line="22" pos:column="23"/></literal></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt></block></then>
      <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><name pos:line="23" pos:column="16">ImapDelimChars<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
	<block type="pseudo"><for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">delim<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">ImapDelimChars<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></init> <condition><expr><operator pos:line="24" pos:column="38">*<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">delim<pos:position pos:line="24" pos:column="44"/></name> <operator pos:line="24" pos:column="45">!=<pos:position pos:line="24" pos:column="47"/></operator> <literal type="char" pos:line="24" pos:column="48">'\0'<pos:position pos:line="24" pos:column="52"/></literal></expr>;<pos:position pos:line="24" pos:column="53"/></condition> <incr><expr><name pos:line="24" pos:column="54">delim<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">++<pos:position pos:line="24" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="62"/></control>
	  <block type="pseudo"><if pos:line="25" pos:column="11">if <condition pos:line="25" pos:column="14">(<expr><name><name pos:line="25" pos:column="15">target<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">mbox<pos:position pos:line="25" pos:column="26"/></name><index pos:line="25" pos:column="26">[<expr><name pos:line="25" pos:column="27">hlen<pos:position pos:line="25" pos:column="31"/></name></expr>]<pos:position pos:line="25" pos:column="32"/></index></name> <operator pos:line="25" pos:column="33">==<pos:position pos:line="25" pos:column="35"/></operator> <operator pos:line="25" pos:column="36">*<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">delim<pos:position pos:line="25" pos:column="42"/></name></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="13">home_match<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="26">1<pos:position pos:line="26" pos:column="27"/></literal></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt></block></then></if></block></for></block></then></if></elseif></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">FREE<pos:position pos:line="28" pos:column="9"/></name> <argument_list pos:line="28" pos:column="10">(<argument><expr><operator pos:line="28" pos:column="11">&amp;<pos:position pos:line="28" pos:column="16"/></operator><name><name pos:line="28" pos:column="12">home<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">mbox<pos:position pos:line="28" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* do the '=' substitution */</comment>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">home_match<pos:position pos:line="32" pos:column="17"/></name></expr>)<pos:position pos:line="32" pos:column="18"/></condition><then pos:line="32" pos:column="18"> <block pos:line="32" pos:column="19">{
    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">path<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">++<pos:position pos:line="33" pos:column="12"/></operator> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <literal type="char" pos:line="33" pos:column="15">'='<pos:position pos:line="33" pos:column="18"/></literal></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
    <comment type="block" pos:line="34" pos:column="5">/* copy remaining path, skipping delimiter */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator> <name pos:line="35" pos:column="11">hlen<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">hlen<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <operator pos:line="36" pos:column="14">-<pos:position pos:line="36" pos:column="15"/></operator><literal type="number" pos:line="36" pos:column="15">1<pos:position pos:line="36" pos:column="16"/></literal></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">memcpy<pos:position pos:line="37" pos:column="11"/></name> <argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">path<pos:position pos:line="37" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="19">target<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">.<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">mbox<pos:position pos:line="37" pos:column="30"/></name></name> <operator pos:line="37" pos:column="31">+<pos:position pos:line="37" pos:column="32"/></operator> <name pos:line="37" pos:column="33">hlen<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">+<pos:position pos:line="37" pos:column="39"/></operator> <literal type="number" pos:line="37" pos:column="40">1<pos:position pos:line="37" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="43">tlen<pos:position pos:line="37" pos:column="47"/></name> <operator pos:line="37" pos:column="48">-<pos:position pos:line="37" pos:column="49"/></operator> <name pos:line="37" pos:column="50">hlen<pos:position pos:line="37" pos:column="54"/></name> <operator pos:line="37" pos:column="55">-<pos:position pos:line="37" pos:column="56"/></operator> <literal type="number" pos:line="37" pos:column="57">1<pos:position pos:line="37" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">path<pos:position pos:line="38" pos:column="9"/></name><index pos:line="38" pos:column="9">[<expr><name pos:line="38" pos:column="10">tlen<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">-<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">hlen<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">-<pos:position pos:line="38" pos:column="23"/></operator> <literal type="number" pos:line="38" pos:column="24">1<pos:position pos:line="38" pos:column="25"/></literal></expr>]<pos:position pos:line="38" pos:column="26"/></index></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <literal type="char" pos:line="38" pos:column="29">'\0'<pos:position pos:line="38" pos:column="33"/></literal></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then>
  <else pos:line="40" pos:column="3">else
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">mutt_account_tourl<pos:position pos:line="42" pos:column="23"/></name> <argument_list pos:line="42" pos:column="24">(<argument><expr><operator pos:line="42" pos:column="25">&amp;<pos:position pos:line="42" pos:column="30"/></operator><name><name pos:line="42" pos:column="26">target<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">.<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">account<pos:position pos:line="42" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="42">&amp;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="43">url<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">url<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">.<pos:position pos:line="43" pos:column="9"/></operator><name pos:line="43" pos:column="9">path<pos:position pos:line="43" pos:column="13"/></name></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <name><name pos:line="43" pos:column="16">target<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">.<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">mbox<pos:position pos:line="43" pos:column="27"/></name></name></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="44" pos:column="5">/* FIXME: That hard-coded constant is bogus. But we need the actual
     *   size of the buffer from mutt_pretty_mailbox. And these pretty
     *   operations usually shrink the result. Still... */</comment>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">url_ciss_tostring<pos:position pos:line="47" pos:column="22"/></name> <argument_list pos:line="47" pos:column="23">(<argument><expr><operator pos:line="47" pos:column="24">&amp;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="25">url<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="30">path<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="36">1024<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="42">0<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">FREE<pos:position pos:line="50" pos:column="7"/></name> <argument_list pos:line="50" pos:column="8">(<argument><expr><operator pos:line="50" pos:column="9">&amp;<pos:position pos:line="50" pos:column="14"/></operator><name><name pos:line="50" pos:column="10">target<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">.<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">mbox<pos:position pos:line="50" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

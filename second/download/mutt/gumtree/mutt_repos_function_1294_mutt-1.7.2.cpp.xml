<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1294_mutt-1.7.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ATTACHPTR<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">mutt_gen_attach_list<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">BODY<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">m<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">parent_type<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="3" pos:column="35">ATTACHPTR<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier><modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">idx<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="4" pos:column="35">short<pos:position pos:line="4" pos:column="40"/></name> <modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier></type><name pos:line="4" pos:column="42">idxlen<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="5" pos:column="35">short<pos:position pos:line="5" pos:column="40"/></name> <modifier pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></modifier></type><name pos:line="5" pos:column="42">idxmax<pos:position pos:line="5" pos:column="48"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="6" pos:column="35">int<pos:position pos:line="6" pos:column="38"/></name></type> <name pos:line="6" pos:column="39">level<pos:position pos:line="6" pos:column="44"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="7" pos:column="35">int<pos:position pos:line="7" pos:column="38"/></name></type> <name pos:line="7" pos:column="39">compose<pos:position pos:line="7" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="47"/></parameter_list>
<block pos:line="8" pos:column="1">{
  <expr_stmt><expr><name pos:line="9" pos:column="3">ATTACHPTR<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">new<pos:position pos:line="9" pos:column="17"/></operator></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">i<pos:position pos:line="10" pos:column="8"/></name></decl>;<pos:position pos:line="10" pos:column="9"/></decl_stmt>
  
  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init pos:line="12" pos:column="8">;<pos:position pos:line="12" pos:column="9"/></init> <condition><expr><name pos:line="12" pos:column="10">m<pos:position pos:line="12" pos:column="11"/></name></expr>;<pos:position pos:line="12" pos:column="12"/></condition> <incr><expr><name pos:line="12" pos:column="13">m<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name><name pos:line="12" pos:column="17">m<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">next<pos:position pos:line="12" pos:column="24"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="25"/></control>
  <block pos:line="13" pos:column="3">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">idxlen<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">==<pos:position pos:line="14" pos:column="19"/></operator> <operator pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">idxmax<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">safe_realloc<pos:position pos:line="16" pos:column="19"/></name> <argument_list pos:line="16" pos:column="20">(<argument><expr><operator pos:line="16" pos:column="21">&amp;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="22">idx<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="27">sizeof <argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">ATTACHPTR<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">*<pos:position pos:line="16" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></sizeof> <operator pos:line="16" pos:column="48">*<pos:position pos:line="16" pos:column="49"/></operator> <operator pos:line="16" pos:column="50">(<pos:position pos:line="16" pos:column="51"/></operator><operator pos:line="16" pos:column="51">(<pos:position pos:line="16" pos:column="52"/></operator><operator pos:line="16" pos:column="52">*<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="53">idxmax<pos:position pos:line="16" pos:column="59"/></name><operator pos:line="16" pos:column="59">)<pos:position pos:line="16" pos:column="60"/></operator> <operator pos:line="16" pos:column="61">+=<pos:position pos:line="16" pos:column="63"/></operator> <literal type="number" pos:line="16" pos:column="64">5<pos:position pos:line="16" pos:column="65"/></literal><operator pos:line="16" pos:column="65">)<pos:position pos:line="16" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
      <for pos:line="17" pos:column="7">for <control pos:line="17" pos:column="11">(<init><expr><name pos:line="17" pos:column="12">i<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <operator pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">idxlen<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></init> <condition><expr><name pos:line="17" pos:column="25">i<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">&lt;<pos:position pos:line="17" pos:column="31"/></operator> <operator pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">idxmax<pos:position pos:line="17" pos:column="36"/></name></expr>;<pos:position pos:line="17" pos:column="37"/></condition> <incr><expr><name pos:line="17" pos:column="38">i<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">++<pos:position pos:line="17" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="42"/></control>
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="9">idx<pos:position pos:line="18" pos:column="12"/></name><index pos:line="18" pos:column="12">[<expr><name pos:line="18" pos:column="13">i<pos:position pos:line="18" pos:column="14"/></name></expr>]<pos:position pos:line="18" pos:column="15"/></index></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt></block></for>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">m<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">type<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">==<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">TYPEMULTIPART<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">&amp;&amp;<pos:position pos:line="21" pos:column="44"/></operator> <name><name pos:line="21" pos:column="37">m<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">parts<pos:position pos:line="21" pos:column="45"/></name></name>
	<operator pos:line="22" pos:column="9">&amp;&amp;<pos:position pos:line="22" pos:column="19"/></operator> <operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">compose<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">||<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">parent_type<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">==<pos:position pos:line="22" pos:column="39"/></operator> <operator pos:line="22" pos:column="40">-<pos:position pos:line="22" pos:column="41"/></operator><literal type="number" pos:line="22" pos:column="41">1<pos:position pos:line="22" pos:column="42"/></literal> <operator pos:line="22" pos:column="43">&amp;&amp;<pos:position pos:line="22" pos:column="53"/></operator> <call><name pos:line="22" pos:column="46">ascii_strcasecmp<pos:position pos:line="22" pos:column="62"/></name> <argument_list pos:line="22" pos:column="63">(<argument><expr><literal type="string" pos:line="22" pos:column="64">"alternative"<pos:position pos:line="22" pos:column="77"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="79">m<pos:position pos:line="22" pos:column="80"/></name><operator pos:line="22" pos:column="80">-&gt;<pos:position pos:line="22" pos:column="85"/></operator><name pos:line="22" pos:column="82">subtype<pos:position pos:line="22" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="90"/></argument_list></call><operator pos:line="22" pos:column="90">)<pos:position pos:line="22" pos:column="91"/></operator><operator pos:line="22" pos:column="91">)<pos:position pos:line="22" pos:column="92"/></operator>
        <operator pos:line="23" pos:column="9">&amp;&amp;<pos:position pos:line="23" pos:column="19"/></operator> <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">WithCrypto<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">&amp;<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="28">APPLICATION_PGP<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator> <operator pos:line="23" pos:column="45">||<pos:position pos:line="23" pos:column="47"/></operator> <operator pos:line="23" pos:column="48">!<pos:position pos:line="23" pos:column="49"/></operator><call><name pos:line="23" pos:column="49">mutt_is_multipart_encrypted<pos:position pos:line="23" pos:column="76"/></name><argument_list pos:line="23" pos:column="76">(<argument><expr><name pos:line="23" pos:column="77">m<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call><operator pos:line="23" pos:column="79">)<pos:position pos:line="23" pos:column="80"/></operator></expr>
	)<pos:position pos:line="24" pos:column="10"/></condition><then pos:line="24" pos:column="10">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><name pos:line="26" pos:column="7">idx<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <call><name pos:line="26" pos:column="13">mutt_gen_attach_list<pos:position pos:line="26" pos:column="33"/></name> <argument_list pos:line="26" pos:column="34">(<argument><expr><name><name pos:line="26" pos:column="35">m<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">parts<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="45">m<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">type<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="54">idx<pos:position pos:line="26" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="59">idxlen<pos:position pos:line="26" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="67">idxmax<pos:position pos:line="26" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="75">level<pos:position pos:line="26" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="82">compose<pos:position pos:line="26" pos:column="89"/></name></expr></argument>)<pos:position pos:line="26" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="91"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <else pos:line="28" pos:column="5">else
    <block pos:line="29" pos:column="5">{
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><operator pos:line="30" pos:column="11">!<pos:position pos:line="30" pos:column="12"/></operator><name><name pos:line="30" pos:column="12">idx<pos:position pos:line="30" pos:column="15"/></name><index pos:line="30" pos:column="15">[<expr><operator pos:line="30" pos:column="16">*<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">idxlen<pos:position pos:line="30" pos:column="23"/></name></expr>]<pos:position pos:line="30" pos:column="24"/></index></name></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="9">idx<pos:position pos:line="31" pos:column="12"/></name><index pos:line="31" pos:column="12">[<expr><operator pos:line="31" pos:column="13">*<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">idxlen<pos:position pos:line="31" pos:column="20"/></name></expr>]<pos:position pos:line="31" pos:column="21"/></index></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <operator pos:line="31" pos:column="24">(<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">ATTACHPTR<pos:position pos:line="31" pos:column="34"/></name> <operator pos:line="31" pos:column="35">*<pos:position pos:line="31" pos:column="36"/></operator><operator pos:line="31" pos:column="36">)<pos:position pos:line="31" pos:column="37"/></operator> <call><name pos:line="31" pos:column="38">safe_calloc<pos:position pos:line="31" pos:column="49"/></name> <argument_list pos:line="31" pos:column="50">(<argument><expr><literal type="number" pos:line="31" pos:column="51">1<pos:position pos:line="31" pos:column="52"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="54">sizeof <argument_list pos:line="31" pos:column="61">(<argument><expr><name pos:line="31" pos:column="62">ATTACHPTR<pos:position pos:line="31" pos:column="71"/></name></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="74"/></expr_stmt></block></then></if>

      <expr_stmt><expr><operator pos:line="33" pos:column="7">new<pos:position pos:line="33" pos:column="10"/></operator> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <name><name pos:line="33" pos:column="13">idx<pos:position pos:line="33" pos:column="16"/></name><index pos:line="33" pos:column="16">[<expr><operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><operator pos:line="33" pos:column="18">*<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">idxlen<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">)<pos:position pos:line="33" pos:column="26"/></operator><operator pos:line="33" pos:column="26">++<pos:position pos:line="33" pos:column="28"/></operator></expr>]<pos:position pos:line="33" pos:column="29"/></index></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="34" pos:column="7">new<pos:position pos:line="34" pos:column="10"/></operator><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">content<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="22">m<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="35" pos:column="7">m<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">-&gt;<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="10">aptr<pos:position pos:line="35" pos:column="14"/></name></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <operator pos:line="35" pos:column="17">new<pos:position pos:line="35" pos:column="20"/></operator></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="36" pos:column="7">new<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">parent_type<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">parent_type<pos:position pos:line="36" pos:column="37"/></name></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="37" pos:column="7">new<pos:position pos:line="37" pos:column="10"/></operator><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">level<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">level<pos:position pos:line="37" pos:column="25"/></name></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>

      <comment type="block" pos:line="39" pos:column="7">/* We don't support multipart messages in the compose menu yet */</comment>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><operator pos:line="40" pos:column="11">!<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">compose<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">&amp;&amp;<pos:position pos:line="40" pos:column="30"/></operator> <operator pos:line="40" pos:column="23">!<pos:position pos:line="40" pos:column="24"/></operator><name><name pos:line="40" pos:column="24">m<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">collapsed<pos:position pos:line="40" pos:column="36"/></name></name> <operator pos:line="40" pos:column="37">&amp;&amp;<pos:position pos:line="40" pos:column="47"/></operator> 
	  <operator pos:line="41" pos:column="11">(<pos:position pos:line="41" pos:column="12"/></operator><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><name><name pos:line="41" pos:column="13">m<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">type<pos:position pos:line="41" pos:column="20"/></name></name> <operator pos:line="41" pos:column="21">==<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">TYPEMULTIPART<pos:position pos:line="41" pos:column="37"/></name>
            <operator pos:line="42" pos:column="13">&amp;&amp;<pos:position pos:line="42" pos:column="23"/></operator> <operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><operator pos:line="42" pos:column="17">!<pos:position pos:line="42" pos:column="18"/></operator><operator pos:line="42" pos:column="18">(<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">WithCrypto<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">&amp;<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="32">APPLICATION_PGP<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">)<pos:position pos:line="42" pos:column="48"/></operator>
                <operator pos:line="43" pos:column="17">||<pos:position pos:line="43" pos:column="19"/></operator> <operator pos:line="43" pos:column="20">!<pos:position pos:line="43" pos:column="21"/></operator><call><name pos:line="43" pos:column="21">mutt_is_multipart_encrypted<pos:position pos:line="43" pos:column="48"/></name> <argument_list pos:line="43" pos:column="49">(<argument><expr><name pos:line="43" pos:column="50">m<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call><operator pos:line="43" pos:column="52">)<pos:position pos:line="43" pos:column="53"/></operator>
	    <operator pos:line="44" pos:column="13">)<pos:position pos:line="44" pos:column="14"/></operator>
	   <operator pos:line="45" pos:column="12">||<pos:position pos:line="45" pos:column="14"/></operator> <call><name pos:line="45" pos:column="15">mutt_is_message_type<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name><name pos:line="45" pos:column="36">m<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">type<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="45">m<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">subtype<pos:position pos:line="45" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call><operator pos:line="45" pos:column="56">)<pos:position pos:line="45" pos:column="57"/></operator></expr>)<pos:position pos:line="45" pos:column="58"/></condition><then pos:line="45" pos:column="58">
      <block pos:line="46" pos:column="7">{
	<expr_stmt><expr><name pos:line="47" pos:column="9">idx<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <call><name pos:line="47" pos:column="15">mutt_gen_attach_list<pos:position pos:line="47" pos:column="35"/></name> <argument_list pos:line="47" pos:column="36">(<argument><expr><name><name pos:line="47" pos:column="37">m<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">-&gt;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="40">parts<pos:position pos:line="47" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="47">m<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">type<pos:position pos:line="47" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="56">idx<pos:position pos:line="47" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="61">idxlen<pos:position pos:line="47" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="69">idxmax<pos:position pos:line="47" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="77">level<pos:position pos:line="47" pos:column="82"/></name> <operator pos:line="47" pos:column="83">+<pos:position pos:line="47" pos:column="84"/></operator> <literal type="number" pos:line="47" pos:column="85">1<pos:position pos:line="47" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="88">compose<pos:position pos:line="47" pos:column="95"/></name></expr></argument>)<pos:position pos:line="47" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="97"/></expr_stmt>
      }<pos:position pos:line="48" pos:column="8"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>
  }<pos:position pos:line="50" pos:column="4"/></block></for>

  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">level<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">==<pos:position pos:line="52" pos:column="15"/></operator> <literal type="number" pos:line="52" pos:column="16">0<pos:position pos:line="52" pos:column="17"/></literal></expr>)<pos:position pos:line="52" pos:column="18"/></condition><then pos:line="52" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="5">mutt_update_tree<pos:position pos:line="53" pos:column="21"/></name> <argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">idx<pos:position pos:line="53" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="28">*<pos:position pos:line="53" pos:column="29"/></operator><name pos:line="53" pos:column="29">idxlen<pos:position pos:line="53" pos:column="35"/></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt></block></then></if>

  <return pos:line="55" pos:column="3">return <expr><operator pos:line="55" pos:column="10">(<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">idx<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">)<pos:position pos:line="55" pos:column="15"/></operator></expr>;<pos:position pos:line="55" pos:column="16"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_646_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier><modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type>
<name pos:line="2" pos:column="1">be_snarf_data<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">FILE<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">f<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier><modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">buf<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">bufmax<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">int<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">buflen<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">LOFF_T<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">offset<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
	       <parameter><decl><type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">bytes<pos:position pos:line="3" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">prefix<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="38"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tmp<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">HUGE_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><name pos:line="6" pos:column="13">tmp<pos:position pos:line="6" pos:column="16"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">tmplen<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><sizeof pos:line="7" pos:column="16">sizeof <argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">tmp<pos:position pos:line="7" pos:column="27"/></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="9" pos:column="3">tmp<pos:position pos:line="9" pos:column="6"/></name><index pos:line="9" pos:column="6">[<expr><sizeof pos:line="9" pos:column="7">sizeof <argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">tmp<pos:position pos:line="9" pos:column="18"/></name></expr></argument>)<pos:position pos:line="9" pos:column="19"/></argument_list></sizeof> <operator pos:line="9" pos:column="20">-<pos:position pos:line="9" pos:column="21"/></operator> <literal type="number" pos:line="9" pos:column="22">1<pos:position pos:line="9" pos:column="23"/></literal></expr>]<pos:position pos:line="9" pos:column="24"/></index></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">prefix<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">strfcpy<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">tmp<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="19">NONULL<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">Prefix<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="35">sizeof <argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">tmp<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">tmplen<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">mutt_strlen<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">tmp<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">p<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <name pos:line="14" pos:column="9">tmp<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">+<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">tmplen<pos:position pos:line="14" pos:column="21"/></name></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">tmplen<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <sizeof pos:line="15" pos:column="14">sizeof <argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">tmp<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></sizeof> <operator pos:line="15" pos:column="27">-<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">tmplen<pos:position pos:line="15" pos:column="35"/></name></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">fseeko<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">f<pos:position pos:line="18" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="14">offset<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
  <while pos:line="19" pos:column="3">while <condition pos:line="19" pos:column="9">(<expr><name pos:line="19" pos:column="10">bytes<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">&gt;<pos:position pos:line="19" pos:column="20"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>)<pos:position pos:line="19" pos:column="20"/></condition>
  <block pos:line="20" pos:column="3">{
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">fgets<pos:position pos:line="21" pos:column="14"/></name> <argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">p<pos:position pos:line="21" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="19">tmplen<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">-<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="28">1<pos:position pos:line="21" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">f<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call> <operator pos:line="21" pos:column="34">==<pos:position pos:line="21" pos:column="36"/></operator> <name pos:line="21" pos:column="37">NULL<pos:position pos:line="21" pos:column="41"/></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42"> <block type="pseudo"><break pos:line="21" pos:column="43">break;<pos:position pos:line="21" pos:column="49"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="22" pos:column="5">bytes<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">-=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">mutt_strlen<pos:position pos:line="22" pos:column="25"/></name> <argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">p<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">bufmax<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">==<pos:position pos:line="23" pos:column="19"/></operator> <operator pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">buflen<pos:position pos:line="23" pos:column="27"/></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">safe_realloc<pos:position pos:line="24" pos:column="19"/></name> <argument_list pos:line="24" pos:column="20">(<argument><expr><operator pos:line="24" pos:column="21">&amp;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="22">buf<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="27">sizeof <argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">char<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">*<pos:position pos:line="24" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></sizeof> <operator pos:line="24" pos:column="43">*<pos:position pos:line="24" pos:column="44"/></operator> <operator pos:line="24" pos:column="45">(<pos:position pos:line="24" pos:column="46"/></operator><operator pos:line="24" pos:column="46">*<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="47">bufmax<pos:position pos:line="24" pos:column="53"/></name> <operator pos:line="24" pos:column="54">+=<pos:position pos:line="24" pos:column="56"/></operator> <literal type="number" pos:line="24" pos:column="57">25<pos:position pos:line="24" pos:column="59"/></literal><operator pos:line="24" pos:column="59">)<pos:position pos:line="24" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">buf<pos:position pos:line="25" pos:column="8"/></name><index pos:line="25" pos:column="8">[<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><operator pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">buflen<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">)<pos:position pos:line="25" pos:column="18"/></operator><operator pos:line="25" pos:column="18">++<pos:position pos:line="25" pos:column="20"/></operator></expr>]<pos:position pos:line="25" pos:column="21"/></index></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <call><name pos:line="25" pos:column="24">safe_strdup<pos:position pos:line="25" pos:column="35"/></name> <argument_list pos:line="25" pos:column="36">(<argument><expr><name pos:line="25" pos:column="37">tmp<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></while>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">buf<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">&amp;&amp;<pos:position pos:line="27" pos:column="21"/></operator> <operator pos:line="27" pos:column="14">*<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">bufmax<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">==<pos:position pos:line="27" pos:column="24"/></operator> <operator pos:line="27" pos:column="25">*<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">buflen<pos:position pos:line="27" pos:column="32"/></name></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33"> <block pos:line="27" pos:column="34">{ <comment type="block" pos:line="27" pos:column="36">/* Do not smash memory past buf */</comment>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">safe_realloc<pos:position pos:line="28" pos:column="17"/></name> <argument_list pos:line="28" pos:column="18">(<argument><expr><operator pos:line="28" pos:column="19">&amp;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="20">buf<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="25">sizeof <argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">char<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">*<pos:position pos:line="28" pos:column="39"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></sizeof> <operator pos:line="28" pos:column="41">*<pos:position pos:line="28" pos:column="42"/></operator> <operator pos:line="28" pos:column="43">(<pos:position pos:line="28" pos:column="44"/></operator><operator pos:line="28" pos:column="44">++<pos:position pos:line="28" pos:column="46"/></operator><operator pos:line="28" pos:column="46">*<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="47">bufmax<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">)<pos:position pos:line="28" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">buf<pos:position pos:line="30" pos:column="10"/></name></expr>)<pos:position pos:line="30" pos:column="11"/></condition><then pos:line="30" pos:column="11"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="12">buf<pos:position pos:line="30" pos:column="15"/></name><index pos:line="30" pos:column="15">[<expr><operator pos:line="30" pos:column="16">*<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">buflen<pos:position pos:line="30" pos:column="23"/></name></expr>]<pos:position pos:line="30" pos:column="24"/></index></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">NULL<pos:position pos:line="30" pos:column="31"/></name></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt></block></then></if>
  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">buf<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">)<pos:position pos:line="31" pos:column="15"/></operator></expr>;<pos:position pos:line="31" pos:column="16"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_118_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">safe_rename<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">src<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">target<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">stat<pos:position pos:line="3" pos:column="14"/></name></name></type> <name pos:line="3" pos:column="15">ssb<pos:position pos:line="3" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="20">tsb<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">src<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">||<pos:position pos:line="5" pos:column="14"/></operator> <operator pos:line="5" pos:column="15">!<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">target<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">link<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">src<pos:position pos:line="8" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="18">target<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call> <operator pos:line="8" pos:column="26">!=<pos:position pos:line="8" pos:column="28"/></operator> <literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
  <block pos:line="9" pos:column="3">{

    <comment type="block" pos:line="11" pos:column="5">/*
     * Coda does not allow cross-directory links, but tells
     * us it's a cross-filesystem linking attempt.
     * 
     * However, the Coda rename call is allegedly safe to use.
     * 
     * With other file systems, rename should just fail when 
     * the files reside on different file systems, so it's safe
     * to try it here.
     *
     */</comment>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">errno<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">==<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">EXDEV<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
      <block type="pseudo"><return pos:line="24" pos:column="7">return <expr><call><name pos:line="24" pos:column="14">rename<pos:position pos:line="24" pos:column="20"/></name> <argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">src<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="27">target<pos:position pos:line="24" pos:column="33"/></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="35"/></return></block></then></if>
    
    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">-<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">1<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="29" pos:column="3">/*
   * Stat both links and check if they are equal.
   */</comment>
  
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><call><name pos:line="33" pos:column="7">stat<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><name pos:line="33" pos:column="13">src<pos:position pos:line="33" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="18">&amp;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="19">ssb<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call> <operator pos:line="33" pos:column="24">==<pos:position pos:line="33" pos:column="26"/></operator> <operator pos:line="33" pos:column="27">-<pos:position pos:line="33" pos:column="28"/></operator><literal type="number" pos:line="33" pos:column="28">1<pos:position pos:line="33" pos:column="29"/></literal></expr>)<pos:position pos:line="33" pos:column="30"/></condition><then pos:line="33" pos:column="30">
  <block pos:line="34" pos:column="3">{
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">-<pos:position pos:line="35" pos:column="13"/></operator><literal type="number" pos:line="35" pos:column="13">1<pos:position pos:line="35" pos:column="14"/></literal></expr>;<pos:position pos:line="35" pos:column="15"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><call><name pos:line="38" pos:column="7">stat<pos:position pos:line="38" pos:column="11"/></name> <argument_list pos:line="38" pos:column="12">(<argument><expr><name pos:line="38" pos:column="13">target<pos:position pos:line="38" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="21">&amp;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="22">tsb<pos:position pos:line="38" pos:column="25"/></name></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call> <operator pos:line="38" pos:column="27">==<pos:position pos:line="38" pos:column="29"/></operator> <operator pos:line="38" pos:column="30">-<pos:position pos:line="38" pos:column="31"/></operator><literal type="number" pos:line="38" pos:column="31">1<pos:position pos:line="38" pos:column="32"/></literal></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33">
  <block pos:line="39" pos:column="3">{
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">-<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">1<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* 
   * pretend that the link failed because the target file
   * did already exist.
   */</comment>

  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><call><name pos:line="48" pos:column="7">compare_stat<pos:position pos:line="48" pos:column="19"/></name> <argument_list pos:line="48" pos:column="20">(<argument><expr><operator pos:line="48" pos:column="21">&amp;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="22">ssb<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="27">&amp;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="28">tsb<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call> <operator pos:line="48" pos:column="33">==<pos:position pos:line="48" pos:column="35"/></operator> <operator pos:line="48" pos:column="36">-<pos:position pos:line="48" pos:column="37"/></operator><literal type="number" pos:line="48" pos:column="37">1<pos:position pos:line="48" pos:column="38"/></literal></expr>)<pos:position pos:line="48" pos:column="39"/></condition><then pos:line="48" pos:column="39">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><name pos:line="50" pos:column="5">errno<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <name pos:line="50" pos:column="13">EEXIST<pos:position pos:line="50" pos:column="19"/></name></expr>;<pos:position pos:line="50" pos:column="20"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">-<pos:position pos:line="51" pos:column="13"/></operator><literal type="number" pos:line="51" pos:column="13">1<pos:position pos:line="51" pos:column="14"/></literal></expr>;<pos:position pos:line="51" pos:column="15"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="54" pos:column="3">/*
   * Unlink the original link.  Should we really ignore the return
   * value here? XXX
   */</comment>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">unlink<pos:position pos:line="59" pos:column="9"/></name> <argument_list pos:line="59" pos:column="10">(<argument><expr><name pos:line="59" pos:column="11">src<pos:position pos:line="59" pos:column="14"/></name></expr></argument>)<pos:position pos:line="59" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="16"/></expr_stmt>

  <return pos:line="61" pos:column="3">return <expr><literal type="number" pos:line="61" pos:column="10">0<pos:position pos:line="61" pos:column="11"/></literal></expr>;<pos:position pos:line="61" pos:column="12"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

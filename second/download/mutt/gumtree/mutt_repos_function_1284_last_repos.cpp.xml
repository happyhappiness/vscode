<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1284_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_get_body_charset<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">d<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">size_t<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">dlen<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">BODY<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">b<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><name pos:line="3" pos:column="13">NULL<pos:position pos:line="3" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">b<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">&amp;&amp;<pos:position pos:line="5" pos:column="19"/></operator> <name><name pos:line="5" pos:column="12">b<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">type<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">!=<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">TYPETEXT<pos:position pos:line="5" pos:column="31"/></name></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">b<pos:position pos:line="8" pos:column="8"/></name></expr>)<pos:position pos:line="8" pos:column="9"/></condition><then pos:line="8" pos:column="9">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">p<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">mutt_get_parameter<pos:position pos:line="9" pos:column="27"/></name> <argument_list pos:line="9" pos:column="28">(<argument><expr><literal type="string" pos:line="9" pos:column="29">"charset"<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="40">b<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">parameter<pos:position pos:line="9" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">p<pos:position pos:line="11" pos:column="8"/></name></expr>)<pos:position pos:line="11" pos:column="9"/></condition><then pos:line="11" pos:column="9">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">mutt_canonical_charset<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">d<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">dlen<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="38">NONULL<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">p<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt></block></then>
  <else pos:line="13" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="5">strfcpy<pos:position pos:line="14" pos:column="12"/></name> <argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">d<pos:position pos:line="14" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="17">"us-ascii"<pos:position pos:line="14" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">dlen<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt></block></else></if>

  <return pos:line="16" pos:column="3">return <expr><name pos:line="16" pos:column="10">d<pos:position pos:line="16" pos:column="11"/></name></expr>;<pos:position pos:line="16" pos:column="12"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

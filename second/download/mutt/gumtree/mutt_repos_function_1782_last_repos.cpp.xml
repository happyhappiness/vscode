<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1782_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">parse_unmy_hdr<pos:position pos:line="2" pos:column="15"/></name> <parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">BUFFER<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">buf<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">BUFFER<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">s<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">unsigned<pos:position pos:line="2" pos:column="49"/></name> <name pos:line="2" pos:column="50">long<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">data<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">BUFFER<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">err<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">LIST<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">last<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">LIST<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tmp<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">UserHeader<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">LIST<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">ptr<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">l<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <do pos:line="9" pos:column="3">do
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">mutt_extract_token<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">buf<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">s<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="33">0<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">mutt_strcmp<pos:position pos:line="12" pos:column="20"/></name> <argument_list pos:line="12" pos:column="21">(<argument><expr><literal type="string" pos:line="12" pos:column="22">"*"<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="27">buf<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">data<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call> <operator pos:line="12" pos:column="38">==<pos:position pos:line="12" pos:column="40"/></operator> <literal type="number" pos:line="12" pos:column="41">0<pos:position pos:line="12" pos:column="42"/></literal></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">mutt_free_list<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">UserHeader<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt></block></then>
    <else pos:line="14" pos:column="5">else
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><name pos:line="16" pos:column="7">tmp<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">UserHeader<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="17" pos:column="7">last<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">NULL<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>

      <expr_stmt><expr><name pos:line="19" pos:column="7">l<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <call><name pos:line="19" pos:column="11">mutt_strlen<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><name><name pos:line="19" pos:column="24">buf<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">data<pos:position pos:line="19" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><name><name pos:line="20" pos:column="11">buf<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">data<pos:position pos:line="20" pos:column="20"/></name><index pos:line="20" pos:column="20">[<expr><name pos:line="20" pos:column="21">l<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">-<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>]<pos:position pos:line="20" pos:column="27"/></index></name> <operator pos:line="20" pos:column="28">==<pos:position pos:line="20" pos:column="30"/></operator> <literal type="char" pos:line="20" pos:column="31">':'<pos:position pos:line="20" pos:column="34"/></literal></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35">
	<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">l<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">--<pos:position pos:line="21" pos:column="12"/></operator></expr>;<pos:position pos:line="21" pos:column="13"/></expr_stmt></block></then></if>

      <while pos:line="23" pos:column="7">while <condition pos:line="23" pos:column="13">(<expr><name pos:line="23" pos:column="14">tmp<pos:position pos:line="23" pos:column="17"/></name></expr>)<pos:position pos:line="23" pos:column="18"/></condition>
      <block pos:line="24" pos:column="7">{
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">ascii_strncasecmp<pos:position pos:line="25" pos:column="30"/></name> <argument_list pos:line="25" pos:column="31">(<argument><expr><name><name pos:line="25" pos:column="32">buf<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">data<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="43">tmp<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">data<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">l<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call> <operator pos:line="25" pos:column="57">==<pos:position pos:line="25" pos:column="59"/></operator> <literal type="number" pos:line="25" pos:column="60">0<pos:position pos:line="25" pos:column="61"/></literal> <operator pos:line="25" pos:column="62">&amp;&amp;<pos:position pos:line="25" pos:column="72"/></operator> <name><name pos:line="25" pos:column="65">tmp<pos:position pos:line="25" pos:column="68"/></name><operator pos:line="25" pos:column="68">-&gt;<pos:position pos:line="25" pos:column="73"/></operator><name pos:line="25" pos:column="70">data<pos:position pos:line="25" pos:column="74"/></name><index pos:line="25" pos:column="74">[<expr><name pos:line="25" pos:column="75">l<pos:position pos:line="25" pos:column="76"/></name></expr>]<pos:position pos:line="25" pos:column="77"/></index></name> <operator pos:line="25" pos:column="78">==<pos:position pos:line="25" pos:column="80"/></operator> <literal type="char" pos:line="25" pos:column="81">':'<pos:position pos:line="25" pos:column="84"/></literal></expr>)<pos:position pos:line="25" pos:column="85"/></condition><then pos:line="25" pos:column="85">
	<block pos:line="26" pos:column="9">{
	  <expr_stmt><expr><name pos:line="27" pos:column="11">ptr<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">tmp<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
	  <if pos:line="28" pos:column="11">if <condition pos:line="28" pos:column="14">(<expr><name pos:line="28" pos:column="15">last<pos:position pos:line="28" pos:column="19"/></name></expr>)<pos:position pos:line="28" pos:column="20"/></condition><then pos:line="28" pos:column="20">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="13">last<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">next<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name><name pos:line="29" pos:column="26">tmp<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">next<pos:position pos:line="29" pos:column="35"/></name></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt></block></then>
	  <else pos:line="30" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="13">UserHeader<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name><name pos:line="31" pos:column="26">tmp<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">next<pos:position pos:line="31" pos:column="35"/></name></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt></block></else></if>
	  <expr_stmt><expr><name pos:line="32" pos:column="11">tmp<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name><name pos:line="32" pos:column="17">tmp<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">next<pos:position pos:line="32" pos:column="26"/></name></name></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="33" pos:column="11">ptr<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">next<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">NULL<pos:position pos:line="33" pos:column="27"/></name></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="34" pos:column="11">mutt_free_list<pos:position pos:line="34" pos:column="25"/></name> <argument_list pos:line="34" pos:column="26">(<argument><expr><operator pos:line="34" pos:column="27">&amp;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="28">ptr<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then>
	<else pos:line="36" pos:column="9">else
	<block pos:line="37" pos:column="9">{
	  <expr_stmt><expr><name pos:line="38" pos:column="11">last<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">tmp<pos:position pos:line="38" pos:column="21"/></name></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="39" pos:column="11">tmp<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <name><name pos:line="39" pos:column="17">tmp<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">next<pos:position pos:line="39" pos:column="26"/></name></name></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></else></if>
      }<pos:position pos:line="41" pos:column="8"/></block></while>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>
  }<pos:position pos:line="43" pos:column="4"/></block>
  while <condition pos:line="44" pos:column="9">(<expr><call><name pos:line="44" pos:column="10">MoreArgs<pos:position pos:line="44" pos:column="18"/></name> <argument_list pos:line="44" pos:column="19">(<argument><expr><name pos:line="44" pos:column="20">s<pos:position pos:line="44" pos:column="21"/></name></expr></argument>)<pos:position pos:line="44" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="23"/></condition>;<pos:position pos:line="44" pos:column="24"/></do>
  <return pos:line="45" pos:column="3">return <expr><literal type="number" pos:line="45" pos:column="10">0<pos:position pos:line="45" pos:column="11"/></literal></expr>;<pos:position pos:line="45" pos:column="12"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

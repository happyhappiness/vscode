<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1124_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_alias<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">BUFFER<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">BUFFER<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">long<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">data<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">BUFFER<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">err<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ALIAS<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">tmp<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">Aliases<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ALIAS<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">last<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name pos:line="4" pos:column="17">NULL<pos:position pos:line="4" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">len<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">p<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">strpbrk<pos:position pos:line="8" pos:column="19"/></name> <argument_list pos:line="8" pos:column="20">(<argument><expr><name><name pos:line="8" pos:column="21">s<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">dptr<pos:position pos:line="8" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">" \t"<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call><operator pos:line="8" pos:column="36">)<pos:position pos:line="8" pos:column="37"/></operator> <operator pos:line="8" pos:column="38">==<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="41">NULL<pos:position pos:line="8" pos:column="45"/></name></expr>)<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">strfcpy<pos:position pos:line="10" pos:column="12"/></name> <argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">err<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">data<pos:position pos:line="10" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="25">_<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><literal type="string" pos:line="10" pos:column="27">"alias: no address"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="49">err<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">dsize<pos:position pos:line="10" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">len<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <name pos:line="14" pos:column="9">p<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">-<pos:position pos:line="14" pos:column="12"/></operator> <name><name pos:line="14" pos:column="13">s<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">dptr<pos:position pos:line="14" pos:column="20"/></name></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* check to see if an alias with this name already exists */</comment>
  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init pos:line="17" pos:column="8">;<pos:position pos:line="17" pos:column="9"/></init> <condition><expr><name pos:line="17" pos:column="10">tmp<pos:position pos:line="17" pos:column="13"/></name></expr>;<pos:position pos:line="17" pos:column="14"/></condition> <incr><expr><name pos:line="17" pos:column="15">tmp<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name><name pos:line="17" pos:column="21">tmp<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">next<pos:position pos:line="17" pos:column="30"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="31"/></control>
  <block pos:line="18" pos:column="3">{
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><call><name pos:line="19" pos:column="10">mutt_strncasecmp<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><name><name pos:line="19" pos:column="28">tmp<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">name<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="39">s<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">-&gt;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="42">dptr<pos:position pos:line="19" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">len<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call> <operator pos:line="19" pos:column="53">&amp;&amp;<pos:position pos:line="19" pos:column="63"/></operator> <operator pos:line="19" pos:column="56">*<pos:position pos:line="19" pos:column="57"/></operator><operator pos:line="19" pos:column="57">(<pos:position pos:line="19" pos:column="58"/></operator><name><name pos:line="19" pos:column="58">tmp<pos:position pos:line="19" pos:column="61"/></name><operator pos:line="19" pos:column="61">-&gt;<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="63">name<pos:position pos:line="19" pos:column="67"/></name></name> <operator pos:line="19" pos:column="68">+<pos:position pos:line="19" pos:column="69"/></operator> <name pos:line="19" pos:column="70">len<pos:position pos:line="19" pos:column="73"/></name><operator pos:line="19" pos:column="73">)<pos:position pos:line="19" pos:column="74"/></operator> <operator pos:line="19" pos:column="75">==<pos:position pos:line="19" pos:column="77"/></operator> <literal type="number" pos:line="19" pos:column="78">0<pos:position pos:line="19" pos:column="79"/></literal></expr>)<pos:position pos:line="19" pos:column="80"/></condition><then pos:line="19" pos:column="80">
      <block type="pseudo"><break pos:line="20" pos:column="7">break;<pos:position pos:line="20" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="21" pos:column="5">last<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <name pos:line="21" pos:column="12">tmp<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></for>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">tmp<pos:position pos:line="24" pos:column="11"/></name></expr>)<pos:position pos:line="24" pos:column="12"/></condition><then pos:line="24" pos:column="12">
  <block pos:line="25" pos:column="3">{
    <comment type="block" pos:line="26" pos:column="5">/* create a new alias */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">tmp<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <operator pos:line="27" pos:column="11">(<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">ALIAS<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">*<pos:position pos:line="27" pos:column="19"/></operator><operator pos:line="27" pos:column="19">)<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">safe_calloc<pos:position pos:line="27" pos:column="32"/></name> <argument_list pos:line="27" pos:column="33">(<argument><expr><literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="37">sizeof <argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">ALIAS<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">tmp<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">self<pos:position pos:line="28" pos:column="14"/></name></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">tmp<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">tmp<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">-&gt;<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="10">name<pos:position pos:line="29" pos:column="14"/></name></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">safe_malloc<pos:position pos:line="29" pos:column="28"/></name> <argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">len<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">+<pos:position pos:line="29" pos:column="35"/></operator> <literal type="number" pos:line="29" pos:column="36">1<pos:position pos:line="29" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">memcpy<pos:position pos:line="30" pos:column="11"/></name> <argument_list pos:line="30" pos:column="12">(<argument><expr><name><name pos:line="30" pos:column="13">tmp<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">name<pos:position pos:line="30" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="24">s<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">dptr<pos:position pos:line="30" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">len<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">tmp<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">name<pos:position pos:line="31" pos:column="14"/></name><index pos:line="31" pos:column="14">[<expr><name pos:line="31" pos:column="15">len<pos:position pos:line="31" pos:column="18"/></name></expr>]<pos:position pos:line="31" pos:column="19"/></index></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <literal type="number" pos:line="31" pos:column="22">0<pos:position pos:line="31" pos:column="23"/></literal></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
    <comment type="block" pos:line="32" pos:column="5">/* give the main addressbook code a chance */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">CurrentMenu<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">==<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">MENU_ALIAS<pos:position pos:line="33" pos:column="34"/></name></expr>)<pos:position pos:line="33" pos:column="35"/></condition><then pos:line="33" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">set_option<pos:position pos:line="34" pos:column="17"/></name> <argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">OPTMENUCALLER<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt></block></then></if>
  }<pos:position pos:line="35" pos:column="4"/></block></then>
  <else pos:line="36" pos:column="3">else
  <block pos:line="37" pos:column="3">{
    <comment type="block" pos:line="38" pos:column="5">/* override the previous value */</comment>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">rfc822_free_address<pos:position pos:line="39" pos:column="24"/></name> <argument_list pos:line="39" pos:column="25">(<argument><expr><operator pos:line="39" pos:column="26">&amp;<pos:position pos:line="39" pos:column="31"/></operator><name><name pos:line="39" pos:column="27">tmp<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">addr<pos:position pos:line="39" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">CurrentMenu<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">==<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">MENU_ALIAS<pos:position pos:line="40" pos:column="34"/></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="7">set_option<pos:position pos:line="41" pos:column="17"/></name> <argument_list pos:line="41" pos:column="18">(<argument><expr><name pos:line="41" pos:column="19">OPTFORCEREDRAWINDEX<pos:position pos:line="41" pos:column="38"/></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">s<pos:position pos:line="43" pos:column="4"/></name><operator pos:line="43" pos:column="4">-&gt;<pos:position pos:line="43" pos:column="9"/></operator><name pos:line="43" pos:column="6">dptr<pos:position pos:line="43" pos:column="10"/></name></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <name pos:line="43" pos:column="13">p<pos:position pos:line="43" pos:column="14"/></name></expr>;<pos:position pos:line="43" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">mutt_extract_token<pos:position pos:line="45" pos:column="21"/></name> <argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">buf<pos:position pos:line="45" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="28">s<pos:position pos:line="45" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="31">M_TOKEN_QUOTE<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">|<pos:position pos:line="45" pos:column="46"/></operator> <name pos:line="45" pos:column="47">M_TOKEN_SPACE<pos:position pos:line="45" pos:column="60"/></name> <operator pos:line="45" pos:column="61">|<pos:position pos:line="45" pos:column="62"/></operator> <name pos:line="45" pos:column="63">M_TOKEN_SEMICOLON<pos:position pos:line="45" pos:column="80"/></name></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="82"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">tmp<pos:position pos:line="46" pos:column="6"/></name><operator pos:line="46" pos:column="6">-&gt;<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="8">addr<pos:position pos:line="46" pos:column="12"/></name></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <call><name pos:line="46" pos:column="15">mutt_parse_adrlist<pos:position pos:line="46" pos:column="33"/></name> <argument_list pos:line="46" pos:column="34">(<argument><expr><name><name pos:line="46" pos:column="35">tmp<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">addr<pos:position pos:line="46" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="46">buf<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">-&gt;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="51">data<pos:position pos:line="46" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">last<pos:position pos:line="47" pos:column="11"/></name></expr>)<pos:position pos:line="47" pos:column="12"/></condition><then pos:line="47" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="5">last<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">next<pos:position pos:line="48" pos:column="15"/></name></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">tmp<pos:position pos:line="48" pos:column="21"/></name></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt></block></then>
  <else pos:line="49" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="5">Aliases<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <name pos:line="50" pos:column="15">tmp<pos:position pos:line="50" pos:column="18"/></name></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt></block></else></if>
  <return pos:line="51" pos:column="3">return <expr><literal type="number" pos:line="51" pos:column="10">0<pos:position pos:line="51" pos:column="11"/></literal></expr>;<pos:position pos:line="51" pos:column="12"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

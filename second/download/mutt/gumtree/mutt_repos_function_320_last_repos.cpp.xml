<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_320_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pgp_verify_one<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">BODY<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">sigbdy<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">STATE<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">s<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">tempfile<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">sigfile<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><name pos:line="3" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="31"/></name></expr>]<pos:position pos:line="3" pos:column="32"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="34">pgperrfile<pos:position pos:line="3" pos:column="44"/></name><index pos:line="3" pos:column="44">[<expr><name pos:line="3" pos:column="45">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="60"/></name></expr>]<pos:position pos:line="3" pos:column="61"/></index></name></decl>;<pos:position pos:line="3" pos:column="62"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fp<pos:position pos:line="4" pos:column="11"/></name></decl>, <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="14">pgpout<pos:position pos:line="4" pos:column="20"/></name></decl>, <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="23">pgperr<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">pid_t<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">thepid<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">badsig<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><operator pos:line="6" pos:column="16">-<pos:position pos:line="6" pos:column="17"/></operator><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rv<pos:position pos:line="7" pos:column="9"/></name></decl>;<pos:position pos:line="7" pos:column="10"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">snprintf<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">sigfile<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="22">sizeof <argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">sigfile<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="40">"%s.asc"<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">tempfile<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
  
  <if pos:line="11" pos:column="3">if<condition pos:line="11" pos:column="5">(<expr><operator pos:line="11" pos:column="6">!<pos:position pos:line="11" pos:column="7"/></operator><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">fp<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">safe_fopen<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">sigfile<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"w"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">mutt_perror<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">sigfile<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
	
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">fseeko<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><name><name pos:line="17" pos:column="11">s<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">fpin<pos:position pos:line="17" pos:column="18"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="20">sigbdy<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">offset<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="36">0<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_copy_bytes<pos:position pos:line="18" pos:column="18"/></name> <argument_list pos:line="18" pos:column="19">(<argument><expr><name><name pos:line="18" pos:column="20">s<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">fpin<pos:position pos:line="18" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="29">fp<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="33">sigbdy<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">length<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">safe_fclose<pos:position pos:line="19" pos:column="14"/></name> <argument_list pos:line="19" pos:column="15">(<argument><expr><operator pos:line="19" pos:column="16">&amp;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="17">fp<pos:position pos:line="19" pos:column="19"/></name></expr></argument>)<pos:position pos:line="19" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">mutt_mktemp<pos:position pos:line="21" pos:column="14"/></name> <argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">pgperrfile<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="28">sizeof <argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">pgperrfile<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
  <if pos:line="22" pos:column="3">if<condition pos:line="22" pos:column="5">(<expr><operator pos:line="22" pos:column="6">!<pos:position pos:line="22" pos:column="7"/></operator><operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">pgperr<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">safe_fopen<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">pgperrfile<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="40">"w+"<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call><operator pos:line="22" pos:column="45">)<pos:position pos:line="22" pos:column="46"/></operator></expr>)<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_perror<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">pgperrfile<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">unlink<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">sigfile<pos:position pos:line="25" pos:column="19"/></name></expr></argument>)<pos:position pos:line="25" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">-<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">1<pos:position pos:line="26" pos:column="14"/></literal></expr>;<pos:position pos:line="26" pos:column="15"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">crypt_current_time<pos:position pos:line="29" pos:column="21"/></name> <argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">s<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="26">"PGP"<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
  
  <if pos:line="31" pos:column="3">if<condition pos:line="31" pos:column="5">(<expr><operator pos:line="31" pos:column="6">(<pos:position pos:line="31" pos:column="7"/></operator><name pos:line="31" pos:column="7">thepid<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <call><name pos:line="31" pos:column="16">pgp_invoke_verify<pos:position pos:line="31" pos:column="33"/></name> <argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">NULL<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="41">&amp;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="42">pgpout<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">NULL<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, 
				   <argument><expr><operator pos:line="32" pos:column="36">-<pos:position pos:line="32" pos:column="37"/></operator><literal type="number" pos:line="32" pos:column="37">1<pos:position pos:line="32" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="40">-<pos:position pos:line="32" pos:column="41"/></operator><literal type="number" pos:line="32" pos:column="41">1<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="44">fileno<pos:position pos:line="32" pos:column="50"/></name><argument_list pos:line="32" pos:column="50">(<argument><expr><name pos:line="32" pos:column="51">pgperr<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr></argument>,
				   <argument><expr><name pos:line="33" pos:column="36">tempfile<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="46">sigfile<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call><operator pos:line="33" pos:column="54">)<pos:position pos:line="33" pos:column="55"/></operator> <operator pos:line="33" pos:column="56">!=<pos:position pos:line="33" pos:column="58"/></operator> <operator pos:line="33" pos:column="59">-<pos:position pos:line="33" pos:column="60"/></operator><literal type="number" pos:line="33" pos:column="60">1<pos:position pos:line="33" pos:column="61"/></literal></expr>)<pos:position pos:line="33" pos:column="62"/></condition><then pos:line="33" pos:column="62">
  <block pos:line="34" pos:column="3">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">pgp_copy_checksig<pos:position pos:line="35" pos:column="26"/></name> <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">pgpout<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="36">s<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">fpout<pos:position pos:line="35" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call> <operator pos:line="35" pos:column="46">&gt;=<pos:position pos:line="35" pos:column="51"/></operator> <literal type="number" pos:line="35" pos:column="49">0<pos:position pos:line="35" pos:column="50"/></literal></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">badsig<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt></block></then></if>
    
    
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">safe_fclose<pos:position pos:line="39" pos:column="16"/></name> <argument_list pos:line="39" pos:column="17">(<argument><expr><operator pos:line="39" pos:column="18">&amp;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="19">pgpout<pos:position pos:line="39" pos:column="25"/></name></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">fflush<pos:position pos:line="40" pos:column="11"/></name> <argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">pgperr<pos:position pos:line="40" pos:column="19"/></name></expr></argument>)<pos:position pos:line="40" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">rewind<pos:position pos:line="41" pos:column="11"/></name> <argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">pgperr<pos:position pos:line="41" pos:column="19"/></name></expr></argument>)<pos:position pos:line="41" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
    
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><call><name pos:line="43" pos:column="9">pgp_copy_checksig<pos:position pos:line="43" pos:column="26"/></name>  <argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">pgperr<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="37">s<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">fpout<pos:position pos:line="43" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call> <operator pos:line="43" pos:column="47">&gt;=<pos:position pos:line="43" pos:column="52"/></operator> <literal type="number" pos:line="43" pos:column="50">0<pos:position pos:line="43" pos:column="51"/></literal></expr>)<pos:position pos:line="43" pos:column="52"/></condition><then pos:line="43" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="7">badsig<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">rv<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <call><name pos:line="46" pos:column="15">mutt_wait_filter<pos:position pos:line="46" pos:column="31"/></name> <argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">thepid<pos:position pos:line="46" pos:column="39"/></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call><operator pos:line="46" pos:column="40">)<pos:position pos:line="46" pos:column="41"/></operator></expr>)<pos:position pos:line="46" pos:column="42"/></condition><then pos:line="46" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="7">badsig<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <operator pos:line="47" pos:column="16">-<pos:position pos:line="47" pos:column="17"/></operator><literal type="number" pos:line="47" pos:column="17">1<pos:position pos:line="47" pos:column="18"/></literal></expr>;<pos:position pos:line="47" pos:column="19"/></expr_stmt></block></then></if>
    
     <expr_stmt><expr><call><name pos:line="49" pos:column="6">dprint<pos:position pos:line="49" pos:column="12"/></name> <argument_list pos:line="49" pos:column="13">(<argument><expr><literal type="number" pos:line="49" pos:column="14">1<pos:position pos:line="49" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="17">(<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">debugfile<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">,<pos:position pos:line="49" pos:column="28"/></operator> <literal type="string" pos:line="49" pos:column="29">"pgp_verify_one: mutt_wait_filter returned %d.\n"<pos:position pos:line="49" pos:column="78"/></literal><operator pos:line="49" pos:column="78">,<pos:position pos:line="49" pos:column="79"/></operator> <name pos:line="49" pos:column="80">rv<pos:position pos:line="49" pos:column="82"/></name><operator pos:line="49" pos:column="82">)<pos:position pos:line="49" pos:column="83"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="85"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="52" pos:column="3">safe_fclose<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><operator pos:line="52" pos:column="16">&amp;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="17">pgperr<pos:position pos:line="52" pos:column="23"/></name></expr></argument>)<pos:position pos:line="52" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">state_attach_puts<pos:position pos:line="54" pos:column="20"/></name> <argument_list pos:line="54" pos:column="21">(<argument><expr><call><name pos:line="54" pos:column="22">_<pos:position pos:line="54" pos:column="23"/></name><argument_list pos:line="54" pos:column="23">(<argument><expr><literal type="string" pos:line="54" pos:column="24">"[-- End of PGP output --]\n\n"<pos:position pos:line="54" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">s<pos:position pos:line="54" pos:column="59"/></name></expr></argument>)<pos:position pos:line="54" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">mutt_unlink<pos:position pos:line="56" pos:column="14"/></name> <argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">sigfile<pos:position pos:line="56" pos:column="23"/></name></expr></argument>)<pos:position pos:line="56" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">mutt_unlink<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><name pos:line="57" pos:column="16">pgperrfile<pos:position pos:line="57" pos:column="26"/></name></expr></argument>)<pos:position pos:line="57" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">dprint<pos:position pos:line="59" pos:column="9"/></name> <argument_list pos:line="59" pos:column="10">(<argument><expr><literal type="number" pos:line="59" pos:column="11">1<pos:position pos:line="59" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="59" pos:column="14">(<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">debugfile<pos:position pos:line="59" pos:column="24"/></name><operator pos:line="59" pos:column="24">,<pos:position pos:line="59" pos:column="25"/></operator> <literal type="string" pos:line="59" pos:column="26">"pgp_verify_one: returning %d.\n"<pos:position pos:line="59" pos:column="59"/></literal><operator pos:line="59" pos:column="59">,<pos:position pos:line="59" pos:column="60"/></operator> <name pos:line="59" pos:column="61">badsig<pos:position pos:line="59" pos:column="67"/></name><operator pos:line="59" pos:column="67">)<pos:position pos:line="59" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="59" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="70"/></expr_stmt>
  
  <return pos:line="61" pos:column="3">return <expr><name pos:line="61" pos:column="10">badsig<pos:position pos:line="61" pos:column="16"/></name></expr>;<pos:position pos:line="61" pos:column="17"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_908_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_host<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">X509<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">x509cert<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">hostname<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">err<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="73">size_t<pos:position pos:line="1" pos:column="79"/></name></type> <name pos:line="1" pos:column="80">errlen<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="10">rc<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <comment type="block" pos:line="4" pos:column="3">/* hostname in ASCII format: */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">hostname_ascii<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name pos:line="5" pos:column="26">NULL<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <comment type="block" pos:line="6" pos:column="3">/* needed to get the common name: */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">X509_NAME<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">x509_subject<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">buf<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">bufsize<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
  <comment type="block" pos:line="10" pos:column="3">/* needed to get the DNS subjectAltNames: */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">STACK_OF<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">GENERAL_NAME<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call> <operator pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">subj_alt_names<pos:position pos:line="11" pos:column="41"/></name></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">subj_alt_names_count<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">GENERAL_NAME<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">subj_alt_name<pos:position pos:line="13" pos:column="30"/></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
  <comment type="block" pos:line="14" pos:column="3">/* did we find a name matching hostname? */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">match_found<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* Check if 'hostname' matches the one of the subjectAltName extensions of
   * type DNS or the Common Name (CN). */</comment>

<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">HAVE_LIBIDN<pos:position pos:line="20" pos:column="19"/></name></cpp:ifdef>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">idna_to_ascii_lz<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">hostname<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="34">&amp;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="35">hostname_ascii<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="51">0<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call> <operator pos:line="21" pos:column="54">!=<pos:position pos:line="21" pos:column="56"/></operator> <name pos:line="21" pos:column="57">IDNA_SUCCESS<pos:position pos:line="21" pos:column="69"/></name></expr>)<pos:position pos:line="21" pos:column="70"/></condition><then pos:line="21" pos:column="70">
  <block pos:line="22" pos:column="3">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">hostname_ascii<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <call><name pos:line="23" pos:column="22">safe_strdup<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">hostname<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="26" pos:column="3">hostname_ascii<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="20">safe_strdup<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">hostname<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="29" pos:column="3">/* Try the DNS subjectAltNames. */</comment>
  <expr_stmt><expr><name pos:line="30" pos:column="3">match_found<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="number" pos:line="30" pos:column="17">0<pos:position pos:line="30" pos:column="18"/></literal></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><operator pos:line="31" pos:column="7">(<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">subj_alt_names<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <call><name pos:line="31" pos:column="25">X509_get_ext_d2i<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">x509cert<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">NID_subject_alt_name<pos:position pos:line="31" pos:column="72"/></name></expr></argument>,
					 <argument><expr><name pos:line="32" pos:column="42">NULL<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">NULL<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call><operator pos:line="32" pos:column="53">)<pos:position pos:line="32" pos:column="54"/></operator></expr>)<pos:position pos:line="32" pos:column="55"/></condition><then pos:line="32" pos:column="55">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><name pos:line="34" pos:column="5">subj_alt_names_count<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <call><name pos:line="34" pos:column="28">sk_GENERAL_NAME_num<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">(<argument><expr><name pos:line="34" pos:column="48">subj_alt_names<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt>
    <for pos:line="35" pos:column="5">for <control pos:line="35" pos:column="9">(<init><expr><name pos:line="35" pos:column="10">i<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <literal type="number" pos:line="35" pos:column="14">0<pos:position pos:line="35" pos:column="15"/></literal></expr>;<pos:position pos:line="35" pos:column="16"/></init> <condition><expr><name pos:line="35" pos:column="17">i<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">&lt;<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="21">subj_alt_names_count<pos:position pos:line="35" pos:column="41"/></name></expr>;<pos:position pos:line="35" pos:column="42"/></condition> <incr><expr><name pos:line="35" pos:column="43">i<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">++<pos:position pos:line="35" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="47"/></control>
    <block pos:line="36" pos:column="5">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">subj_alt_name<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <call><name pos:line="37" pos:column="23">sk_GENERAL_NAME_value<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">subj_alt_names<pos:position pos:line="37" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">i<pos:position pos:line="37" pos:column="62"/></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><name><name pos:line="38" pos:column="11">subj_alt_name<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">type<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">==<pos:position pos:line="38" pos:column="33"/></operator> <name pos:line="38" pos:column="34">GEN_DNS<pos:position pos:line="38" pos:column="41"/></name></expr>)<pos:position pos:line="38" pos:column="42"/></condition><then pos:line="38" pos:column="42">
      <block pos:line="39" pos:column="7">{
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">subj_alt_name<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">-&gt;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="28">d<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">.<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">ia5<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">length<pos:position pos:line="40" pos:column="41"/></name></name> <operator pos:line="40" pos:column="42">&gt;=<pos:position pos:line="40" pos:column="47"/></operator> <literal type="number" pos:line="40" pos:column="45">0<pos:position pos:line="40" pos:column="46"/></literal> <operator pos:line="40" pos:column="47">&amp;&amp;<pos:position pos:line="40" pos:column="57"/></operator>
	    <call><name pos:line="41" pos:column="13">mutt_strlen<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><operator pos:line="41" pos:column="25">(<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">char<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">*<pos:position pos:line="41" pos:column="32"/></operator><operator pos:line="41" pos:column="32">)<pos:position pos:line="41" pos:column="33"/></operator><name><name pos:line="41" pos:column="33">subj_alt_name<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">d<pos:position pos:line="41" pos:column="49"/></name><operator pos:line="41" pos:column="49">.<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="50">ia5<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">-&gt;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="55">data<pos:position pos:line="41" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call> <operator pos:line="41" pos:column="61">==<pos:position pos:line="41" pos:column="63"/></operator> <operator pos:line="41" pos:column="64">(<pos:position pos:line="41" pos:column="65"/></operator><name pos:line="41" pos:column="65">size_t<pos:position pos:line="41" pos:column="71"/></name><operator pos:line="41" pos:column="71">)<pos:position pos:line="41" pos:column="72"/></operator><name><name pos:line="41" pos:column="72">subj_alt_name<pos:position pos:line="41" pos:column="85"/></name><operator pos:line="41" pos:column="85">-&gt;<pos:position pos:line="41" pos:column="90"/></operator><name pos:line="41" pos:column="87">d<pos:position pos:line="41" pos:column="88"/></name><operator pos:line="41" pos:column="88">.<pos:position pos:line="41" pos:column="89"/></operator><name pos:line="41" pos:column="89">ia5<pos:position pos:line="41" pos:column="92"/></name><operator pos:line="41" pos:column="92">-&gt;<pos:position pos:line="41" pos:column="97"/></operator><name pos:line="41" pos:column="94">length<pos:position pos:line="41" pos:column="100"/></name></name> <operator pos:line="41" pos:column="101">&amp;&amp;<pos:position pos:line="41" pos:column="111"/></operator>
	    <operator pos:line="42" pos:column="13">(<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">match_found<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <call><name pos:line="42" pos:column="28">hostname_match<pos:position pos:line="42" pos:column="42"/></name><argument_list pos:line="42" pos:column="42">(<argument><expr><name pos:line="42" pos:column="43">hostname_ascii<pos:position pos:line="42" pos:column="57"/></name></expr></argument>,
					  <argument><expr><operator pos:line="43" pos:column="43">(<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="44">char<pos:position pos:line="43" pos:column="48"/></name> <operator pos:line="43" pos:column="49">*<pos:position pos:line="43" pos:column="50"/></operator><operator pos:line="43" pos:column="50">)<pos:position pos:line="43" pos:column="51"/></operator><operator pos:line="43" pos:column="51">(<pos:position pos:line="43" pos:column="52"/></operator><name><name pos:line="43" pos:column="52">subj_alt_name<pos:position pos:line="43" pos:column="65"/></name><operator pos:line="43" pos:column="65">-&gt;<pos:position pos:line="43" pos:column="70"/></operator><name pos:line="43" pos:column="67">d<pos:position pos:line="43" pos:column="68"/></name><operator pos:line="43" pos:column="68">.<pos:position pos:line="43" pos:column="69"/></operator><name pos:line="43" pos:column="69">ia5<pos:position pos:line="43" pos:column="72"/></name><operator pos:line="43" pos:column="72">-&gt;<pos:position pos:line="43" pos:column="77"/></operator><name pos:line="43" pos:column="74">data<pos:position pos:line="43" pos:column="78"/></name></name><operator pos:line="43" pos:column="78">)<pos:position pos:line="43" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="43" pos:column="80"/></argument_list></call><operator pos:line="43" pos:column="80">)<pos:position pos:line="43" pos:column="81"/></operator></expr>)<pos:position pos:line="43" pos:column="82"/></condition><then pos:line="43" pos:column="82">
	<block pos:line="44" pos:column="9">{
	  <break pos:line="45" pos:column="11">break;<pos:position pos:line="45" pos:column="17"/></break>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if>
    }<pos:position pos:line="48" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">GENERAL_NAMES_free<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">subj_alt_names<pos:position pos:line="49" pos:column="38"/></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><operator pos:line="52" pos:column="7">!<pos:position pos:line="52" pos:column="8"/></operator><name pos:line="52" pos:column="8">match_found<pos:position pos:line="52" pos:column="19"/></name></expr>)<pos:position pos:line="52" pos:column="20"/></condition><then pos:line="52" pos:column="20">
  <block pos:line="53" pos:column="3">{
    <comment type="block" pos:line="54" pos:column="5">/* Try the common name */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><operator pos:line="55" pos:column="10">(<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">x509_subject<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <call><name pos:line="55" pos:column="26">X509_get_subject_name<pos:position pos:line="55" pos:column="47"/></name><argument_list pos:line="55" pos:column="47">(<argument><expr><name pos:line="55" pos:column="48">x509cert<pos:position pos:line="55" pos:column="56"/></name></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call><operator pos:line="55" pos:column="57">)<pos:position pos:line="55" pos:column="58"/></operator></expr>)<pos:position pos:line="55" pos:column="59"/></condition><then pos:line="55" pos:column="59">
    <block pos:line="56" pos:column="5">{
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><name pos:line="57" pos:column="11">err<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">&amp;&amp;<pos:position pos:line="57" pos:column="25"/></operator> <name pos:line="57" pos:column="18">errlen<pos:position pos:line="57" pos:column="24"/></name></expr>)<pos:position pos:line="57" pos:column="25"/></condition><then pos:line="57" pos:column="25">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="9">strfcpy<pos:position pos:line="58" pos:column="16"/></name> <argument_list pos:line="58" pos:column="17">(<argument><expr><name pos:line="58" pos:column="18">err<pos:position pos:line="58" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="23">_<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><literal type="string" pos:line="58" pos:column="25">"cannot get certificate subject"<pos:position pos:line="58" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="58" pos:column="60">errlen<pos:position pos:line="58" pos:column="66"/></name></expr></argument>)<pos:position pos:line="58" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="68"/></expr_stmt></block></then></if>
      <goto pos:line="59" pos:column="7">goto <name pos:line="59" pos:column="12">out<pos:position pos:line="59" pos:column="15"/></name>;<pos:position pos:line="59" pos:column="16"/></goto>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* first get the space requirements */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">bufsize<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <call><name pos:line="63" pos:column="15">X509_NAME_get_text_by_NID<pos:position pos:line="63" pos:column="40"/></name><argument_list pos:line="63" pos:column="40">(<argument><expr><name pos:line="63" pos:column="41">x509_subject<pos:position pos:line="63" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="55">NID_commonName<pos:position pos:line="63" pos:column="69"/></name></expr></argument>,
					<argument><expr><name pos:line="64" pos:column="41">NULL<pos:position pos:line="64" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="47">0<pos:position pos:line="64" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">bufsize<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">==<pos:position pos:line="65" pos:column="19"/></operator> <operator pos:line="65" pos:column="20">-<pos:position pos:line="65" pos:column="21"/></operator><literal type="number" pos:line="65" pos:column="21">1<pos:position pos:line="65" pos:column="22"/></literal></expr>)<pos:position pos:line="65" pos:column="23"/></condition><then pos:line="65" pos:column="23">
    <block pos:line="66" pos:column="5">{
      <if pos:line="67" pos:column="7">if <condition pos:line="67" pos:column="10">(<expr><name pos:line="67" pos:column="11">err<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">&amp;&amp;<pos:position pos:line="67" pos:column="25"/></operator> <name pos:line="67" pos:column="18">errlen<pos:position pos:line="67" pos:column="24"/></name></expr>)<pos:position pos:line="67" pos:column="25"/></condition><then pos:line="67" pos:column="25">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="9">strfcpy<pos:position pos:line="68" pos:column="16"/></name> <argument_list pos:line="68" pos:column="17">(<argument><expr><name pos:line="68" pos:column="18">err<pos:position pos:line="68" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="23">_<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><literal type="string" pos:line="68" pos:column="25">"cannot get certificate common name"<pos:position pos:line="68" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="68" pos:column="64">errlen<pos:position pos:line="68" pos:column="70"/></name></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="72"/></expr_stmt></block></then></if>
      <goto pos:line="69" pos:column="7">goto <name pos:line="69" pos:column="12">out<pos:position pos:line="69" pos:column="15"/></name>;<pos:position pos:line="69" pos:column="16"/></goto>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="71" pos:column="5">bufsize<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">++<pos:position pos:line="71" pos:column="14"/></operator></expr>;<pos:position pos:line="71" pos:column="15"/></expr_stmt> <comment type="block" pos:line="71" pos:column="16">/* space for the terminal nul char */</comment>
    <expr_stmt><expr><name pos:line="72" pos:column="5">buf<pos:position pos:line="72" pos:column="8"/></name> <operator pos:line="72" pos:column="9">=<pos:position pos:line="72" pos:column="10"/></operator> <call><name pos:line="72" pos:column="11">safe_malloc<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><operator pos:line="72" pos:column="23">(<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="24">size_t<pos:position pos:line="72" pos:column="30"/></name><operator pos:line="72" pos:column="30">)<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="31">bufsize<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><call><name pos:line="73" pos:column="9">X509_NAME_get_text_by_NID<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">x509_subject<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="49">NID_commonName<pos:position pos:line="73" pos:column="63"/></name></expr></argument>,
				  <argument><expr><name pos:line="74" pos:column="35">buf<pos:position pos:line="74" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="40">bufsize<pos:position pos:line="74" pos:column="47"/></name></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></call> <operator pos:line="74" pos:column="49">==<pos:position pos:line="74" pos:column="51"/></operator> <operator pos:line="74" pos:column="52">-<pos:position pos:line="74" pos:column="53"/></operator><literal type="number" pos:line="74" pos:column="53">1<pos:position pos:line="74" pos:column="54"/></literal></expr>)<pos:position pos:line="74" pos:column="55"/></condition><then pos:line="74" pos:column="55">
    <block pos:line="75" pos:column="5">{
      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><name pos:line="76" pos:column="11">err<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">&amp;&amp;<pos:position pos:line="76" pos:column="25"/></operator> <name pos:line="76" pos:column="18">errlen<pos:position pos:line="76" pos:column="24"/></name></expr>)<pos:position pos:line="76" pos:column="25"/></condition><then pos:line="76" pos:column="25">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="9">strfcpy<pos:position pos:line="77" pos:column="16"/></name> <argument_list pos:line="77" pos:column="17">(<argument><expr><name pos:line="77" pos:column="18">err<pos:position pos:line="77" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="23">_<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><literal type="string" pos:line="77" pos:column="25">"cannot get certificate common name"<pos:position pos:line="77" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="77" pos:column="64">errlen<pos:position pos:line="77" pos:column="70"/></name></expr></argument>)<pos:position pos:line="77" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="72"/></expr_stmt></block></then></if>
      <goto pos:line="78" pos:column="7">goto <name pos:line="78" pos:column="12">out<pos:position pos:line="78" pos:column="15"/></name>;<pos:position pos:line="78" pos:column="16"/></goto>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="80" pos:column="5">/* cast is safe since bufsize is incremented above, so bufsize-1 is always
     * zero or greater.
     */</comment>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><call><name pos:line="83" pos:column="9">mutt_strlen<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><name pos:line="83" pos:column="21">buf<pos:position pos:line="83" pos:column="24"/></name></expr></argument>)<pos:position pos:line="83" pos:column="25"/></argument_list></call> <operator pos:line="83" pos:column="26">==<pos:position pos:line="83" pos:column="28"/></operator> <operator pos:line="83" pos:column="29">(<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">size_t<pos:position pos:line="83" pos:column="36"/></name><operator pos:line="83" pos:column="36">)<pos:position pos:line="83" pos:column="37"/></operator><name pos:line="83" pos:column="37">bufsize<pos:position pos:line="83" pos:column="44"/></name> <operator pos:line="83" pos:column="45">-<pos:position pos:line="83" pos:column="46"/></operator> <literal type="number" pos:line="83" pos:column="47">1<pos:position pos:line="83" pos:column="48"/></literal></expr>)<pos:position pos:line="83" pos:column="49"/></condition><then pos:line="83" pos:column="49"> <block pos:line="83" pos:column="50">{
      <expr_stmt><expr><name pos:line="84" pos:column="7">match_found<pos:position pos:line="84" pos:column="18"/></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <call><name pos:line="84" pos:column="21">hostname_match<pos:position pos:line="84" pos:column="35"/></name><argument_list pos:line="84" pos:column="35">(<argument><expr><name pos:line="84" pos:column="36">hostname_ascii<pos:position pos:line="84" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="52">buf<pos:position pos:line="84" pos:column="55"/></name></expr></argument>)<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if>

  <if pos:line="88" pos:column="3">if <condition pos:line="88" pos:column="6">(<expr><operator pos:line="88" pos:column="7">!<pos:position pos:line="88" pos:column="8"/></operator><name pos:line="88" pos:column="8">match_found<pos:position pos:line="88" pos:column="19"/></name></expr>)<pos:position pos:line="88" pos:column="20"/></condition><then pos:line="88" pos:column="20">
  <block pos:line="89" pos:column="3">{
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name pos:line="90" pos:column="9">err<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">&amp;&amp;<pos:position pos:line="90" pos:column="23"/></operator> <name pos:line="90" pos:column="16">errlen<pos:position pos:line="90" pos:column="22"/></name></expr>)<pos:position pos:line="90" pos:column="23"/></condition><then pos:line="90" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="7">snprintf<pos:position pos:line="91" pos:column="15"/></name> <argument_list pos:line="91" pos:column="16">(<argument><expr><name pos:line="91" pos:column="17">err<pos:position pos:line="91" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="22">errlen<pos:position pos:line="91" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="30">_<pos:position pos:line="91" pos:column="31"/></name><argument_list pos:line="91" pos:column="31">(<argument><expr><literal type="string" pos:line="91" pos:column="32">"certificate owner does not match hostname %s"<pos:position pos:line="91" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="79"/></argument_list></call></expr></argument>,
		<argument><expr><name pos:line="92" pos:column="17">hostname<pos:position pos:line="92" pos:column="25"/></name></expr></argument>)<pos:position pos:line="92" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="27"/></expr_stmt></block></then></if>
    <goto pos:line="93" pos:column="5">goto <name pos:line="93" pos:column="10">out<pos:position pos:line="93" pos:column="13"/></name>;<pos:position pos:line="93" pos:column="14"/></goto>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="96" pos:column="3">rc<pos:position pos:line="96" pos:column="5"/></name> <operator pos:line="96" pos:column="6">=<pos:position pos:line="96" pos:column="7"/></operator> <literal type="number" pos:line="96" pos:column="8">1<pos:position pos:line="96" pos:column="9"/></literal></expr>;<pos:position pos:line="96" pos:column="10"/></expr_stmt>

<label><name pos:line="98" pos:column="1">out<pos:position pos:line="98" pos:column="4"/></name>:<pos:position pos:line="98" pos:column="5"/></label>
  <expr_stmt><expr><call><name pos:line="99" pos:column="3">FREE<pos:position pos:line="99" pos:column="7"/></name><argument_list pos:line="99" pos:column="7">(<argument><expr><operator pos:line="99" pos:column="8">&amp;<pos:position pos:line="99" pos:column="13"/></operator><name pos:line="99" pos:column="9">buf<pos:position pos:line="99" pos:column="12"/></name></expr></argument>)<pos:position pos:line="99" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="100" pos:column="3">FREE<pos:position pos:line="100" pos:column="7"/></name><argument_list pos:line="100" pos:column="7">(<argument><expr><operator pos:line="100" pos:column="8">&amp;<pos:position pos:line="100" pos:column="13"/></operator><name pos:line="100" pos:column="9">hostname_ascii<pos:position pos:line="100" pos:column="23"/></name></expr></argument>)<pos:position pos:line="100" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="25"/></expr_stmt>

  <return pos:line="102" pos:column="3">return <expr><name pos:line="102" pos:column="10">rc<pos:position pos:line="102" pos:column="12"/></name></expr>;<pos:position pos:line="102" pos:column="13"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

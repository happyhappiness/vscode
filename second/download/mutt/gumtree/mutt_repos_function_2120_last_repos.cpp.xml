<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2120_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_mailbox_create<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type> <name pos:line="1" pos:column="38">folder<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_MBOX<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">mx<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">LONG_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">short<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">n<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">imap_parse_path<pos:position pos:line="8" pos:column="22"/></name> <argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">folder<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="32">&amp;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="33">mx<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call> <operator pos:line="8" pos:column="37">&lt;<pos:position pos:line="8" pos:column="41"/></operator> <literal type="number" pos:line="8" pos:column="39">0<pos:position pos:line="8" pos:column="40"/></literal></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">dprint<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">debugfile<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">,<pos:position pos:line="10" pos:column="27"/></operator> <literal type="string" pos:line="10" pos:column="28">"imap_mailbox_create: Bad starting path %s\n"<pos:position pos:line="10" pos:column="73"/></literal><operator pos:line="10" pos:column="73">,<pos:position pos:line="10" pos:column="74"/></operator>
      <name pos:line="11" pos:column="7">folder<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">)<pos:position pos:line="11" pos:column="14"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">!<pos:position pos:line="15" pos:column="8"/></operator><operator pos:line="15" pos:column="8">(<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">idata<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">imap_conn_find<pos:position pos:line="15" pos:column="31"/></name> <argument_list pos:line="15" pos:column="32">(<argument><expr><operator pos:line="15" pos:column="33">&amp;<pos:position pos:line="15" pos:column="38"/></operator><name><name pos:line="15" pos:column="34">mx<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">account<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">MUTT_IMAP_CONN_NONEW<pos:position pos:line="15" pos:column="66"/></name></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call><operator pos:line="15" pos:column="67">)<pos:position pos:line="15" pos:column="68"/></operator></expr>)<pos:position pos:line="15" pos:column="69"/></condition><then pos:line="15" pos:column="69">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">dprint<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><literal type="number" pos:line="17" pos:column="13">1<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">debugfile<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">,<pos:position pos:line="17" pos:column="27"/></operator> <literal type="string" pos:line="17" pos:column="28">"imap_mailbox_create: Couldn't find open connection to %s"<pos:position pos:line="17" pos:column="86"/></literal><operator pos:line="17" pos:column="86">,<pos:position pos:line="17" pos:column="87"/></operator> <name><name pos:line="17" pos:column="88">mx<pos:position pos:line="17" pos:column="90"/></name><operator pos:line="17" pos:column="90">.<pos:position pos:line="17" pos:column="91"/></operator><name pos:line="17" pos:column="91">account<pos:position pos:line="17" pos:column="98"/></name><operator pos:line="17" pos:column="98">.<pos:position pos:line="17" pos:column="99"/></operator><name pos:line="17" pos:column="99">host<pos:position pos:line="17" pos:column="103"/></name></name><operator pos:line="17" pos:column="103">)<pos:position pos:line="17" pos:column="104"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="106"/></expr_stmt>
    <goto pos:line="18" pos:column="5">goto <name pos:line="18" pos:column="10">fail<pos:position pos:line="18" pos:column="14"/></name>;<pos:position pos:line="18" pos:column="15"/></goto>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">strfcpy<pos:position pos:line="21" pos:column="10"/></name> <argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">buf<pos:position pos:line="21" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="17">NONULL<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">(<argument><expr><name><name pos:line="21" pos:column="25">mx<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">mbox<pos:position pos:line="21" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="35">sizeof <argument_list pos:line="21" pos:column="42">(<argument><expr><name pos:line="21" pos:column="43">buf<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>

  <comment type="block" pos:line="23" pos:column="3">/* append a delimiter if necessary */</comment>
  <expr_stmt><expr><name pos:line="24" pos:column="3">n<pos:position pos:line="24" pos:column="4"/></name> <operator pos:line="24" pos:column="5">=<pos:position pos:line="24" pos:column="6"/></operator> <call><name pos:line="24" pos:column="7">mutt_strlen<pos:position pos:line="24" pos:column="18"/></name> <argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">buf<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">n<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">&amp;&amp;<pos:position pos:line="25" pos:column="19"/></operator> <operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">n<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">&lt;<pos:position pos:line="25" pos:column="19"/></operator> <sizeof pos:line="25" pos:column="17">sizeof <argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">buf<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></sizeof> <operator pos:line="25" pos:column="30">-<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="32">1<pos:position pos:line="25" pos:column="33"/></literal><operator pos:line="25" pos:column="33">)<pos:position pos:line="25" pos:column="34"/></operator> <operator pos:line="25" pos:column="35">&amp;&amp;<pos:position pos:line="25" pos:column="45"/></operator> <operator pos:line="25" pos:column="38">(<pos:position pos:line="25" pos:column="39"/></operator><name><name pos:line="25" pos:column="39">buf<pos:position pos:line="25" pos:column="42"/></name><index pos:line="25" pos:column="42">[<expr><name pos:line="25" pos:column="43">n<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-<pos:position pos:line="25" pos:column="45"/></operator><literal type="number" pos:line="25" pos:column="45">1<pos:position pos:line="25" pos:column="46"/></literal></expr>]<pos:position pos:line="25" pos:column="47"/></index></name> <operator pos:line="25" pos:column="48">!=<pos:position pos:line="25" pos:column="50"/></operator> <name><name pos:line="25" pos:column="51">idata<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">-&gt;<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="58">delim<pos:position pos:line="25" pos:column="63"/></name></name><operator pos:line="25" pos:column="63">)<pos:position pos:line="25" pos:column="64"/></operator></expr>)<pos:position pos:line="25" pos:column="65"/></condition><then pos:line="25" pos:column="65">
  <block pos:line="26" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">buf<pos:position pos:line="27" pos:column="8"/></name><index pos:line="27" pos:column="8">[<expr><name pos:line="27" pos:column="9">n<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">++<pos:position pos:line="27" pos:column="12"/></operator></expr>]<pos:position pos:line="27" pos:column="13"/></index></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name><name pos:line="27" pos:column="16">idata<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">delim<pos:position pos:line="27" pos:column="28"/></name></name></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">buf<pos:position pos:line="28" pos:column="8"/></name><index pos:line="28" pos:column="8">[<expr><name pos:line="28" pos:column="9">n<pos:position pos:line="28" pos:column="10"/></name></expr>]<pos:position pos:line="28" pos:column="11"/></index></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <literal type="char" pos:line="28" pos:column="14">'\0'<pos:position pos:line="28" pos:column="18"/></literal></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
  
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><call><name pos:line="31" pos:column="7">mutt_get_field<pos:position pos:line="31" pos:column="21"/></name> <argument_list pos:line="31" pos:column="22">(<argument><expr><call><name pos:line="31" pos:column="23">_<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"Create mailbox: "<pos:position pos:line="31" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="46">buf<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="51">sizeof <argument_list pos:line="31" pos:column="58">(<argument><expr><name pos:line="31" pos:column="59">buf<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="31" pos:column="65">MUTT_FILE<pos:position pos:line="31" pos:column="74"/></name></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call> <operator pos:line="31" pos:column="76">&lt;<pos:position pos:line="31" pos:column="80"/></operator> <literal type="number" pos:line="31" pos:column="78">0<pos:position pos:line="31" pos:column="79"/></literal></expr>)<pos:position pos:line="31" pos:column="80"/></condition><then pos:line="31" pos:column="80">
    <block type="pseudo"><goto pos:line="32" pos:column="5">goto <name pos:line="32" pos:column="10">fail<pos:position pos:line="32" pos:column="14"/></name>;<pos:position pos:line="32" pos:column="15"/></goto></block></then></if>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><operator pos:line="34" pos:column="7">!<pos:position pos:line="34" pos:column="8"/></operator><call><name pos:line="34" pos:column="8">mutt_strlen<pos:position pos:line="34" pos:column="19"/></name> <argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">buf<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26">
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">mutt_error<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><call><name pos:line="36" pos:column="17">_<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><literal type="string" pos:line="36" pos:column="19">"Mailbox must have a name."<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">mutt_sleep<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="number" pos:line="37" pos:column="16">1<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    <goto pos:line="38" pos:column="5">goto <name pos:line="38" pos:column="10">fail<pos:position pos:line="38" pos:column="14"/></name>;<pos:position pos:line="38" pos:column="15"/></goto>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>
  
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><call><name pos:line="41" pos:column="7">imap_create_mailbox<pos:position pos:line="41" pos:column="26"/></name> <argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">idata<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">buf<pos:position pos:line="41" pos:column="38"/></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call> <operator pos:line="41" pos:column="40">&lt;<pos:position pos:line="41" pos:column="44"/></operator> <literal type="number" pos:line="41" pos:column="42">0<pos:position pos:line="41" pos:column="43"/></literal></expr>)<pos:position pos:line="41" pos:column="44"/></condition><then pos:line="41" pos:column="44">
    <block type="pseudo"><goto pos:line="42" pos:column="5">goto <name pos:line="42" pos:column="10">fail<pos:position pos:line="42" pos:column="14"/></name>;<pos:position pos:line="42" pos:column="15"/></goto></block></then></if>

  <decl_stmt><decl><type><name pos:line="44" pos:column="3">mutt_message<pos:position pos:line="44" pos:column="15"/></name></type> <name pos:line="44" pos:column="16">_<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><literal type="string" pos:line="44" pos:column="18">"Mailbox created."<pos:position pos:line="44" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></decl>;<pos:position pos:line="44" pos:column="38"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">mutt_sleep<pos:position pos:line="45" pos:column="13"/></name> <argument_list pos:line="45" pos:column="14">(<argument><expr><literal type="number" pos:line="45" pos:column="15">0<pos:position pos:line="45" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="47" pos:column="3">FREE<pos:position pos:line="47" pos:column="7"/></name> <argument_list pos:line="47" pos:column="8">(<argument><expr><operator pos:line="47" pos:column="9">&amp;<pos:position pos:line="47" pos:column="14"/></operator><name><name pos:line="47" pos:column="10">mx<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">.<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="13">mbox<pos:position pos:line="47" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="19"/></expr_stmt>
  <return pos:line="48" pos:column="3">return <expr><literal type="number" pos:line="48" pos:column="10">0<pos:position pos:line="48" pos:column="11"/></literal></expr>;<pos:position pos:line="48" pos:column="12"/></return>

 <label><name pos:line="50" pos:column="2">fail<pos:position pos:line="50" pos:column="6"/></name>:<pos:position pos:line="50" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">FREE<pos:position pos:line="51" pos:column="7"/></name> <argument_list pos:line="51" pos:column="8">(<argument><expr><operator pos:line="51" pos:column="9">&amp;<pos:position pos:line="51" pos:column="14"/></operator><name><name pos:line="51" pos:column="10">mx<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">.<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">mbox<pos:position pos:line="51" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
  <return pos:line="52" pos:column="3">return <expr><operator pos:line="52" pos:column="10">-<pos:position pos:line="52" pos:column="11"/></operator><literal type="number" pos:line="52" pos:column="11">1<pos:position pos:line="52" pos:column="12"/></literal></expr>;<pos:position pos:line="52" pos:column="13"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

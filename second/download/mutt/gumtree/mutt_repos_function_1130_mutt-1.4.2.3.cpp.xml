<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1130_mutt-1.4.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_set<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">BUFFER<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">tmp<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">BUFFER<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">s<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">unsigned<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">long<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">data<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">BUFFER<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">err<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">idx<pos:position pos:line="3" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="12">query<pos:position pos:line="3" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="19">unset<pos:position pos:line="3" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="26">inv<pos:position pos:line="3" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="31">reset<pos:position pos:line="3" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="38">r<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><literal type="number" pos:line="3" pos:column="42">0<pos:position pos:line="3" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="12">scratch<pos:position pos:line="4" pos:column="19"/></name><index pos:line="4" pos:column="19">[<expr><name pos:line="4" pos:column="20">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><call><name pos:line="6" pos:column="10">MoreArgs<pos:position pos:line="6" pos:column="18"/></name> <argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">s<pos:position pos:line="6" pos:column="21"/></name></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="23"/></condition>
  <block pos:line="7" pos:column="3">{
    <comment type="block" pos:line="8" pos:column="5">/* reset state variables */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">query<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">unset<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">data<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">&amp;<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="20">M_SET_UNSET<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">inv<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <name pos:line="11" pos:column="11">data<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&amp;<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="18">M_SET_INV<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">reset<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">data<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&amp;<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="20">M_SET_RESET<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">s<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">dptr<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">==<pos:position pos:line="14" pos:column="20"/></operator> <literal type="char" pos:line="14" pos:column="21">'?'<pos:position pos:line="14" pos:column="24"/></literal></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><name pos:line="16" pos:column="7">query<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">s<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">dptr<pos:position pos:line="17" pos:column="14"/></name></name><operator pos:line="17" pos:column="14">++<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
    <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><call><name pos:line="19" pos:column="14">mutt_strncmp<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><literal type="string" pos:line="19" pos:column="28">"no"<pos:position pos:line="19" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">s<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">dptr<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="43">2<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call> <operator pos:line="19" pos:column="46">==<pos:position pos:line="19" pos:column="48"/></operator> <literal type="number" pos:line="19" pos:column="49">0<pos:position pos:line="19" pos:column="50"/></literal></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">s<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">-&gt;<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="10">dptr<pos:position pos:line="21" pos:column="14"/></name></name> <operator pos:line="21" pos:column="15">+=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">2<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="22" pos:column="7">unset<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <operator pos:line="22" pos:column="15">!<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">unset<pos:position pos:line="22" pos:column="21"/></name></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><call><name pos:line="24" pos:column="14">mutt_strncmp<pos:position pos:line="24" pos:column="26"/></name> <argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="string" pos:line="24" pos:column="28">"inv"<pos:position pos:line="24" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="35">s<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">dptr<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="44">3<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call> <operator pos:line="24" pos:column="47">==<pos:position pos:line="24" pos:column="49"/></operator> <literal type="number" pos:line="24" pos:column="50">0<pos:position pos:line="24" pos:column="51"/></literal></expr>)<pos:position pos:line="24" pos:column="52"/></condition><then pos:line="24" pos:column="52">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="26" pos:column="7">s<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">-&gt;<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="10">dptr<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">+=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">3<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">inv<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">inv<pos:position pos:line="27" pos:column="17"/></name></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><operator pos:line="29" pos:column="14">*<pos:position pos:line="29" pos:column="15"/></operator><name><name pos:line="29" pos:column="15">s<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">dptr<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">==<pos:position pos:line="29" pos:column="25"/></operator> <literal type="char" pos:line="29" pos:column="26">'&amp;'<pos:position pos:line="29" pos:column="33"/></literal></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30">
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><name pos:line="31" pos:column="7">reset<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">s<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">dptr<pos:position pos:line="32" pos:column="14"/></name></name><operator pos:line="32" pos:column="14">++<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="35" pos:column="5">/* get the variable name */</comment>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">mutt_extract_token<pos:position pos:line="36" pos:column="23"/></name> <argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">tmp<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">s<pos:position pos:line="36" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="33">M_TOKEN_EQUAL<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">idx<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">mutt_option_index<pos:position pos:line="38" pos:column="33"/></name> <argument_list pos:line="38" pos:column="34">(<argument><expr><name><name pos:line="38" pos:column="35">tmp<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">data<pos:position pos:line="38" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call><operator pos:line="38" pos:column="45">)<pos:position pos:line="38" pos:column="46"/></operator> <operator pos:line="38" pos:column="47">==<pos:position pos:line="38" pos:column="49"/></operator> <operator pos:line="38" pos:column="50">-<pos:position pos:line="38" pos:column="51"/></operator><literal type="number" pos:line="38" pos:column="51">1<pos:position pos:line="38" pos:column="52"/></literal> <operator pos:line="38" pos:column="53">&amp;&amp;<pos:position pos:line="38" pos:column="63"/></operator>
	<operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><operator pos:line="39" pos:column="10">(<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">reset<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">&amp;&amp;<pos:position pos:line="39" pos:column="27"/></operator> <operator pos:line="39" pos:column="20">!<pos:position pos:line="39" pos:column="21"/></operator><call><name pos:line="39" pos:column="21">mutt_strcmp<pos:position pos:line="39" pos:column="32"/></name> <argument_list pos:line="39" pos:column="33">(<argument><expr><literal type="string" pos:line="39" pos:column="34">"all"<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="41">tmp<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">-&gt;<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="46">data<pos:position pos:line="39" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call><operator pos:line="39" pos:column="51">)<pos:position pos:line="39" pos:column="52"/></operator></expr>)<pos:position pos:line="39" pos:column="53"/></condition><then pos:line="39" pos:column="53">
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">snprintf<pos:position pos:line="41" pos:column="15"/></name> <argument_list pos:line="41" pos:column="16">(<argument><expr><name><name pos:line="41" pos:column="17">err<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">data<pos:position pos:line="41" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="28">err<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">dsize<pos:position pos:line="41" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="40">_<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><literal type="string" pos:line="41" pos:column="42">"%s: unknown variable"<pos:position pos:line="41" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="67">tmp<pos:position pos:line="41" pos:column="70"/></name><operator pos:line="41" pos:column="70">-&gt;<pos:position pos:line="41" pos:column="75"/></operator><name pos:line="41" pos:column="72">data<pos:position pos:line="41" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="78"/></expr_stmt>
      <return pos:line="42" pos:column="7">return <expr><operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><operator pos:line="42" pos:column="15">-<pos:position pos:line="42" pos:column="16"/></operator><literal type="number" pos:line="42" pos:column="16">1<pos:position pos:line="42" pos:column="17"/></literal><operator pos:line="42" pos:column="17">)<pos:position pos:line="42" pos:column="18"/></operator></expr>;<pos:position pos:line="42" pos:column="19"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">SKIPWS<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><name><name pos:line="44" pos:column="13">s<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">dptr<pos:position pos:line="44" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">reset<pos:position pos:line="46" pos:column="14"/></name></expr>)<pos:position pos:line="46" pos:column="15"/></condition><then pos:line="46" pos:column="15">
    <block pos:line="47" pos:column="5">{
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">query<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">||<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">unset<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">||<pos:position pos:line="48" pos:column="28"/></operator> <name pos:line="48" pos:column="29">inv<pos:position pos:line="48" pos:column="32"/></name></expr>)<pos:position pos:line="48" pos:column="33"/></condition><then pos:line="48" pos:column="33">
      <block pos:line="49" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">snprintf<pos:position pos:line="50" pos:column="17"/></name> <argument_list pos:line="50" pos:column="18">(<argument><expr><name><name pos:line="50" pos:column="19">err<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">-&gt;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="24">data<pos:position pos:line="50" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="30">err<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">dsize<pos:position pos:line="50" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="42">_<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">(<argument><expr><literal type="string" pos:line="50" pos:column="44">"prefix is illegal with reset"<pos:position pos:line="50" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="77"/></expr_stmt>
	<return pos:line="51" pos:column="9">return <expr><operator pos:line="51" pos:column="16">(<pos:position pos:line="51" pos:column="17"/></operator><operator pos:line="51" pos:column="17">-<pos:position pos:line="51" pos:column="18"/></operator><literal type="number" pos:line="51" pos:column="18">1<pos:position pos:line="51" pos:column="19"/></literal><operator pos:line="51" pos:column="19">)<pos:position pos:line="51" pos:column="20"/></operator></expr>;<pos:position pos:line="51" pos:column="21"/></return>
      }<pos:position pos:line="52" pos:column="8"/></block></then></if>

      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><name pos:line="54" pos:column="11">s<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">&amp;&amp;<pos:position pos:line="54" pos:column="23"/></operator> <operator pos:line="54" pos:column="16">*<pos:position pos:line="54" pos:column="17"/></operator><name><name pos:line="54" pos:column="17">s<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">dptr<pos:position pos:line="54" pos:column="24"/></name></name> <operator pos:line="54" pos:column="25">==<pos:position pos:line="54" pos:column="27"/></operator> <literal type="char" pos:line="54" pos:column="28">'='<pos:position pos:line="54" pos:column="31"/></literal></expr>)<pos:position pos:line="54" pos:column="32"/></condition><then pos:line="54" pos:column="32">
      <block pos:line="55" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">snprintf<pos:position pos:line="56" pos:column="17"/></name> <argument_list pos:line="56" pos:column="18">(<argument><expr><name><name pos:line="56" pos:column="19">err<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">-&gt;<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="24">data<pos:position pos:line="56" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="30">err<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">dsize<pos:position pos:line="56" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="42">_<pos:position pos:line="56" pos:column="43"/></name><argument_list pos:line="56" pos:column="43">(<argument><expr><literal type="string" pos:line="56" pos:column="44">"value is illegal with reset"<pos:position pos:line="56" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="76"/></expr_stmt>
	<return pos:line="57" pos:column="9">return <expr><operator pos:line="57" pos:column="16">(<pos:position pos:line="57" pos:column="17"/></operator><operator pos:line="57" pos:column="17">-<pos:position pos:line="57" pos:column="18"/></operator><literal type="number" pos:line="57" pos:column="18">1<pos:position pos:line="57" pos:column="19"/></literal><operator pos:line="57" pos:column="19">)<pos:position pos:line="57" pos:column="20"/></operator></expr>;<pos:position pos:line="57" pos:column="21"/></return>
      }<pos:position pos:line="58" pos:column="8"/></block></then></if>
     
      <if pos:line="60" pos:column="7">if <condition pos:line="60" pos:column="10">(<expr><operator pos:line="60" pos:column="11">!<pos:position pos:line="60" pos:column="12"/></operator><call><name pos:line="60" pos:column="12">mutt_strcmp<pos:position pos:line="60" pos:column="23"/></name> <argument_list pos:line="60" pos:column="24">(<argument><expr><literal type="string" pos:line="60" pos:column="25">"all"<pos:position pos:line="60" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="32">tmp<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">data<pos:position pos:line="60" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43">
      <block pos:line="61" pos:column="7">{
	<for pos:line="62" pos:column="9">for <control pos:line="62" pos:column="13">(<init><expr><name pos:line="62" pos:column="14">idx<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <literal type="number" pos:line="62" pos:column="20">0<pos:position pos:line="62" pos:column="21"/></literal></expr>;<pos:position pos:line="62" pos:column="22"/></init> <condition><expr><name><name pos:line="62" pos:column="23">MuttVars<pos:position pos:line="62" pos:column="31"/></name><index pos:line="62" pos:column="31">[<expr><name pos:line="62" pos:column="32">idx<pos:position pos:line="62" pos:column="35"/></name></expr>]<pos:position pos:line="62" pos:column="36"/></index></name><operator pos:line="62" pos:column="36">.<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="37">option<pos:position pos:line="62" pos:column="43"/></name></expr>;<pos:position pos:line="62" pos:column="44"/></condition> <incr><expr><name pos:line="62" pos:column="45">idx<pos:position pos:line="62" pos:column="48"/></name><operator pos:line="62" pos:column="48">++<pos:position pos:line="62" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="62" pos:column="51"/></control>
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="11">mutt_restore_default<pos:position pos:line="63" pos:column="31"/></name> <argument_list pos:line="63" pos:column="32">(<argument><expr><operator pos:line="63" pos:column="33">&amp;<pos:position pos:line="63" pos:column="38"/></operator><name><name pos:line="63" pos:column="34">MuttVars<pos:position pos:line="63" pos:column="42"/></name><index pos:line="63" pos:column="42">[<expr><name pos:line="63" pos:column="43">idx<pos:position pos:line="63" pos:column="46"/></name></expr>]<pos:position pos:line="63" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="49"/></expr_stmt></block></for>
	<return pos:line="64" pos:column="9">return <expr><literal type="number" pos:line="64" pos:column="16">0<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></return>
      }<pos:position pos:line="65" pos:column="8"/></block></then>
      <else pos:line="66" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="9">mutt_restore_default<pos:position pos:line="67" pos:column="29"/></name> <argument_list pos:line="67" pos:column="30">(<argument><expr><operator pos:line="67" pos:column="31">&amp;<pos:position pos:line="67" pos:column="36"/></operator><name><name pos:line="67" pos:column="32">MuttVars<pos:position pos:line="67" pos:column="40"/></name><index pos:line="67" pos:column="40">[<expr><name pos:line="67" pos:column="41">idx<pos:position pos:line="67" pos:column="44"/></name></expr>]<pos:position pos:line="67" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt></block></else></if>
    }<pos:position pos:line="68" pos:column="6"/></block></then> 
    <elseif pos:line="69" pos:column="5">else <if pos:line="69" pos:column="10">if <condition pos:line="69" pos:column="13">(<expr><call><name pos:line="69" pos:column="14">DTYPE<pos:position pos:line="69" pos:column="19"/></name> <argument_list pos:line="69" pos:column="20">(<argument><expr><name><name pos:line="69" pos:column="21">MuttVars<pos:position pos:line="69" pos:column="29"/></name><index pos:line="69" pos:column="29">[<expr><name pos:line="69" pos:column="30">idx<pos:position pos:line="69" pos:column="33"/></name></expr>]<pos:position pos:line="69" pos:column="34"/></index></name><operator pos:line="69" pos:column="34">.<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="35">type<pos:position pos:line="69" pos:column="39"/></name></expr></argument>)<pos:position pos:line="69" pos:column="40"/></argument_list></call> <operator pos:line="69" pos:column="41">==<pos:position pos:line="69" pos:column="43"/></operator> <name pos:line="69" pos:column="44">DT_BOOL<pos:position pos:line="69" pos:column="51"/></name></expr>)<pos:position pos:line="69" pos:column="52"/></condition><then pos:line="69" pos:column="52">
    <block pos:line="70" pos:column="5">{ 
      <if pos:line="71" pos:column="7">if <condition pos:line="71" pos:column="10">(<expr><name pos:line="71" pos:column="11">s<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">&amp;&amp;<pos:position pos:line="71" pos:column="23"/></operator> <operator pos:line="71" pos:column="16">*<pos:position pos:line="71" pos:column="17"/></operator><name><name pos:line="71" pos:column="17">s<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">dptr<pos:position pos:line="71" pos:column="24"/></name></name> <operator pos:line="71" pos:column="25">==<pos:position pos:line="71" pos:column="27"/></operator> <literal type="char" pos:line="71" pos:column="28">'='<pos:position pos:line="71" pos:column="31"/></literal></expr>)<pos:position pos:line="71" pos:column="32"/></condition><then pos:line="71" pos:column="32">
      <block pos:line="72" pos:column="7">{
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">unset<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">||<pos:position pos:line="73" pos:column="21"/></operator> <name pos:line="73" pos:column="22">inv<pos:position pos:line="73" pos:column="25"/></name> <operator pos:line="73" pos:column="26">||<pos:position pos:line="73" pos:column="28"/></operator> <name pos:line="73" pos:column="29">query<pos:position pos:line="73" pos:column="34"/></name></expr>)<pos:position pos:line="73" pos:column="35"/></condition><then pos:line="73" pos:column="35">
	<block pos:line="74" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="75" pos:column="11">snprintf<pos:position pos:line="75" pos:column="19"/></name> <argument_list pos:line="75" pos:column="20">(<argument><expr><name><name pos:line="75" pos:column="21">err<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">data<pos:position pos:line="75" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="32">err<pos:position pos:line="75" pos:column="35"/></name><operator pos:line="75" pos:column="35">-&gt;<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="37">dsize<pos:position pos:line="75" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="44">"Usage: set variable=yes|no"<pos:position pos:line="75" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="74"/></expr_stmt>
	  <return pos:line="76" pos:column="11">return <expr><operator pos:line="76" pos:column="18">(<pos:position pos:line="76" pos:column="19"/></operator><operator pos:line="76" pos:column="19">-<pos:position pos:line="76" pos:column="20"/></operator><literal type="number" pos:line="76" pos:column="20">1<pos:position pos:line="76" pos:column="21"/></literal><operator pos:line="76" pos:column="21">)<pos:position pos:line="76" pos:column="22"/></operator></expr>;<pos:position pos:line="76" pos:column="23"/></return>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="79" pos:column="9">s<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">-&gt;<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="12">dptr<pos:position pos:line="79" pos:column="16"/></name></name><operator pos:line="79" pos:column="16">++<pos:position pos:line="79" pos:column="18"/></operator></expr>;<pos:position pos:line="79" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">mutt_extract_token<pos:position pos:line="80" pos:column="27"/></name> <argument_list pos:line="80" pos:column="28">(<argument><expr><name pos:line="80" pos:column="29">tmp<pos:position pos:line="80" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="34">s<pos:position pos:line="80" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="37">0<pos:position pos:line="80" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="40"/></expr_stmt>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><call><name pos:line="81" pos:column="13">ascii_strcasecmp<pos:position pos:line="81" pos:column="29"/></name> <argument_list pos:line="81" pos:column="30">(<argument><expr><literal type="string" pos:line="81" pos:column="31">"yes"<pos:position pos:line="81" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="38">tmp<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">-&gt;<pos:position pos:line="81" pos:column="46"/></operator><name pos:line="81" pos:column="43">data<pos:position pos:line="81" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="48"/></argument_list></call> <operator pos:line="81" pos:column="49">==<pos:position pos:line="81" pos:column="51"/></operator> <literal type="number" pos:line="81" pos:column="52">0<pos:position pos:line="81" pos:column="53"/></literal></expr>)<pos:position pos:line="81" pos:column="54"/></condition><then pos:line="81" pos:column="54">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="11">unset<pos:position pos:line="82" pos:column="16"/></name> <operator pos:line="82" pos:column="17">=<pos:position pos:line="82" pos:column="18"/></operator> <name pos:line="82" pos:column="19">inv<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">=<pos:position pos:line="82" pos:column="24"/></operator> <literal type="number" pos:line="82" pos:column="25">0<pos:position pos:line="82" pos:column="26"/></literal></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt></block></then>
	<elseif pos:line="83" pos:column="9">else <if pos:line="83" pos:column="14">if <condition pos:line="83" pos:column="17">(<expr><call><name pos:line="83" pos:column="18">ascii_strcasecmp<pos:position pos:line="83" pos:column="34"/></name> <argument_list pos:line="83" pos:column="35">(<argument><expr><literal type="string" pos:line="83" pos:column="36">"no"<pos:position pos:line="83" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="42">tmp<pos:position pos:line="83" pos:column="45"/></name><operator pos:line="83" pos:column="45">-&gt;<pos:position pos:line="83" pos:column="50"/></operator><name pos:line="83" pos:column="47">data<pos:position pos:line="83" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></call> <operator pos:line="83" pos:column="53">==<pos:position pos:line="83" pos:column="55"/></operator> <literal type="number" pos:line="83" pos:column="56">0<pos:position pos:line="83" pos:column="57"/></literal></expr>)<pos:position pos:line="83" pos:column="58"/></condition><then pos:line="83" pos:column="58">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="11">unset<pos:position pos:line="84" pos:column="16"/></name> <operator pos:line="84" pos:column="17">=<pos:position pos:line="84" pos:column="18"/></operator> <literal type="number" pos:line="84" pos:column="19">1<pos:position pos:line="84" pos:column="20"/></literal></expr>;<pos:position pos:line="84" pos:column="21"/></expr_stmt></block></then></if></elseif>
	<else pos:line="85" pos:column="9">else
	<block pos:line="86" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="87" pos:column="11">snprintf<pos:position pos:line="87" pos:column="19"/></name> <argument_list pos:line="87" pos:column="20">(<argument><expr><name><name pos:line="87" pos:column="21">err<pos:position pos:line="87" pos:column="24"/></name><operator pos:line="87" pos:column="24">-&gt;<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="26">data<pos:position pos:line="87" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="32">err<pos:position pos:line="87" pos:column="35"/></name><operator pos:line="87" pos:column="35">-&gt;<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="37">dsize<pos:position pos:line="87" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="44">"Usage: set variable=yes|no"<pos:position pos:line="87" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="74"/></expr_stmt>
	  <return pos:line="88" pos:column="11">return <expr><operator pos:line="88" pos:column="18">(<pos:position pos:line="88" pos:column="19"/></operator><operator pos:line="88" pos:column="19">-<pos:position pos:line="88" pos:column="20"/></operator><literal type="number" pos:line="88" pos:column="20">1<pos:position pos:line="88" pos:column="21"/></literal><operator pos:line="88" pos:column="21">)<pos:position pos:line="88" pos:column="22"/></operator></expr>;<pos:position pos:line="88" pos:column="23"/></return>
	}<pos:position pos:line="89" pos:column="10"/></block></else></if>
      }<pos:position pos:line="90" pos:column="8"/></block></then></if>

      <if pos:line="92" pos:column="7">if <condition pos:line="92" pos:column="10">(<expr><name pos:line="92" pos:column="11">query<pos:position pos:line="92" pos:column="16"/></name></expr>)<pos:position pos:line="92" pos:column="17"/></condition><then pos:line="92" pos:column="17">
      <block pos:line="93" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">snprintf<pos:position pos:line="94" pos:column="17"/></name> <argument_list pos:line="94" pos:column="18">(<argument><expr><name><name pos:line="94" pos:column="19">err<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">-&gt;<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="24">data<pos:position pos:line="94" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="30">err<pos:position pos:line="94" pos:column="33"/></name><operator pos:line="94" pos:column="33">-&gt;<pos:position pos:line="94" pos:column="38"/></operator><name pos:line="94" pos:column="35">dsize<pos:position pos:line="94" pos:column="40"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="94" pos:column="42">option<pos:position pos:line="94" pos:column="48"/></name> <argument_list pos:line="94" pos:column="49">(<argument><expr><name><name pos:line="94" pos:column="50">MuttVars<pos:position pos:line="94" pos:column="58"/></name><index pos:line="94" pos:column="58">[<expr><name pos:line="94" pos:column="59">idx<pos:position pos:line="94" pos:column="62"/></name></expr>]<pos:position pos:line="94" pos:column="63"/></index></name><operator pos:line="94" pos:column="63">.<pos:position pos:line="94" pos:column="64"/></operator><name pos:line="94" pos:column="64">data<pos:position pos:line="94" pos:column="68"/></name></expr></argument>)<pos:position pos:line="94" pos:column="69"/></argument_list></call></expr>
			?<pos:position pos:line="95" pos:column="26"/></condition><then pos:line="95" pos:column="26"> <expr><call><name pos:line="95" pos:column="27">_<pos:position pos:line="95" pos:column="28"/></name><argument_list pos:line="95" pos:column="28">(<argument><expr><literal type="string" pos:line="95" pos:column="29">"%s is set"<pos:position pos:line="95" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="41"/></argument_list></call></expr> <pos:position pos:line="95" pos:column="42"/></then><else pos:line="95" pos:column="42">: <expr><call><name pos:line="95" pos:column="44">_<pos:position pos:line="95" pos:column="45"/></name><argument_list pos:line="95" pos:column="45">(<argument><expr><literal type="string" pos:line="95" pos:column="46">"%s is unset"<pos:position pos:line="95" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="60"/></argument_list></call></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="62">tmp<pos:position pos:line="95" pos:column="65"/></name><operator pos:line="95" pos:column="65">-&gt;<pos:position pos:line="95" pos:column="70"/></operator><name pos:line="95" pos:column="67">data<pos:position pos:line="95" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="73"/></expr_stmt>
	<return pos:line="96" pos:column="9">return <expr><literal type="number" pos:line="96" pos:column="16">0<pos:position pos:line="96" pos:column="17"/></literal></expr>;<pos:position pos:line="96" pos:column="18"/></return>
      }<pos:position pos:line="97" pos:column="8"/></block></then></if>

      <if pos:line="99" pos:column="7">if <condition pos:line="99" pos:column="10">(<expr><name pos:line="99" pos:column="11">unset<pos:position pos:line="99" pos:column="16"/></name></expr>)<pos:position pos:line="99" pos:column="17"/></condition><then pos:line="99" pos:column="17">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="9">unset_option<pos:position pos:line="100" pos:column="21"/></name> <argument_list pos:line="100" pos:column="22">(<argument><expr><name><name pos:line="100" pos:column="23">MuttVars<pos:position pos:line="100" pos:column="31"/></name><index pos:line="100" pos:column="31">[<expr><name pos:line="100" pos:column="32">idx<pos:position pos:line="100" pos:column="35"/></name></expr>]<pos:position pos:line="100" pos:column="36"/></index></name><operator pos:line="100" pos:column="36">.<pos:position pos:line="100" pos:column="37"/></operator><name pos:line="100" pos:column="37">data<pos:position pos:line="100" pos:column="41"/></name></expr></argument>)<pos:position pos:line="100" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="43"/></expr_stmt></block></then>
      <elseif pos:line="101" pos:column="7">else <if pos:line="101" pos:column="12">if <condition pos:line="101" pos:column="15">(<expr><name pos:line="101" pos:column="16">inv<pos:position pos:line="101" pos:column="19"/></name></expr>)<pos:position pos:line="101" pos:column="20"/></condition><then pos:line="101" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="9">toggle_option<pos:position pos:line="102" pos:column="22"/></name> <argument_list pos:line="102" pos:column="23">(<argument><expr><name><name pos:line="102" pos:column="24">MuttVars<pos:position pos:line="102" pos:column="32"/></name><index pos:line="102" pos:column="32">[<expr><name pos:line="102" pos:column="33">idx<pos:position pos:line="102" pos:column="36"/></name></expr>]<pos:position pos:line="102" pos:column="37"/></index></name><operator pos:line="102" pos:column="37">.<pos:position pos:line="102" pos:column="38"/></operator><name pos:line="102" pos:column="38">data<pos:position pos:line="102" pos:column="42"/></name></expr></argument>)<pos:position pos:line="102" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt></block></then></if></elseif>
      <else pos:line="103" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="9">set_option<pos:position pos:line="104" pos:column="19"/></name> <argument_list pos:line="104" pos:column="20">(<argument><expr><name><name pos:line="104" pos:column="21">MuttVars<pos:position pos:line="104" pos:column="29"/></name><index pos:line="104" pos:column="29">[<expr><name pos:line="104" pos:column="30">idx<pos:position pos:line="104" pos:column="33"/></name></expr>]<pos:position pos:line="104" pos:column="34"/></index></name><operator pos:line="104" pos:column="34">.<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="35">data<pos:position pos:line="104" pos:column="39"/></name></expr></argument>)<pos:position pos:line="104" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt></block></else></if>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="106" pos:column="5">else <if pos:line="106" pos:column="10">if <condition pos:line="106" pos:column="13">(<expr><call><name pos:line="106" pos:column="14">DTYPE<pos:position pos:line="106" pos:column="19"/></name> <argument_list pos:line="106" pos:column="20">(<argument><expr><name><name pos:line="106" pos:column="21">MuttVars<pos:position pos:line="106" pos:column="29"/></name><index pos:line="106" pos:column="29">[<expr><name pos:line="106" pos:column="30">idx<pos:position pos:line="106" pos:column="33"/></name></expr>]<pos:position pos:line="106" pos:column="34"/></index></name><operator pos:line="106" pos:column="34">.<pos:position pos:line="106" pos:column="35"/></operator><name pos:line="106" pos:column="35">type<pos:position pos:line="106" pos:column="39"/></name></expr></argument>)<pos:position pos:line="106" pos:column="40"/></argument_list></call> <operator pos:line="106" pos:column="41">==<pos:position pos:line="106" pos:column="43"/></operator> <name pos:line="106" pos:column="44">DT_STR<pos:position pos:line="106" pos:column="50"/></name> <operator pos:line="106" pos:column="51">||<pos:position pos:line="106" pos:column="53"/></operator>
	     <call><name pos:line="107" pos:column="14">DTYPE<pos:position pos:line="107" pos:column="19"/></name> <argument_list pos:line="107" pos:column="20">(<argument><expr><name><name pos:line="107" pos:column="21">MuttVars<pos:position pos:line="107" pos:column="29"/></name><index pos:line="107" pos:column="29">[<expr><name pos:line="107" pos:column="30">idx<pos:position pos:line="107" pos:column="33"/></name></expr>]<pos:position pos:line="107" pos:column="34"/></index></name><operator pos:line="107" pos:column="34">.<pos:position pos:line="107" pos:column="35"/></operator><name pos:line="107" pos:column="35">type<pos:position pos:line="107" pos:column="39"/></name></expr></argument>)<pos:position pos:line="107" pos:column="40"/></argument_list></call> <operator pos:line="107" pos:column="41">==<pos:position pos:line="107" pos:column="43"/></operator> <name pos:line="107" pos:column="44">DT_PATH<pos:position pos:line="107" pos:column="51"/></name> <operator pos:line="107" pos:column="52">||<pos:position pos:line="107" pos:column="54"/></operator>
	     <call><name pos:line="108" pos:column="14">DTYPE<pos:position pos:line="108" pos:column="19"/></name> <argument_list pos:line="108" pos:column="20">(<argument><expr><name><name pos:line="108" pos:column="21">MuttVars<pos:position pos:line="108" pos:column="29"/></name><index pos:line="108" pos:column="29">[<expr><name pos:line="108" pos:column="30">idx<pos:position pos:line="108" pos:column="33"/></name></expr>]<pos:position pos:line="108" pos:column="34"/></index></name><operator pos:line="108" pos:column="34">.<pos:position pos:line="108" pos:column="35"/></operator><name pos:line="108" pos:column="35">type<pos:position pos:line="108" pos:column="39"/></name></expr></argument>)<pos:position pos:line="108" pos:column="40"/></argument_list></call> <operator pos:line="108" pos:column="41">==<pos:position pos:line="108" pos:column="43"/></operator> <name pos:line="108" pos:column="44">DT_ADDR<pos:position pos:line="108" pos:column="51"/></name></expr>)<pos:position pos:line="108" pos:column="52"/></condition><then pos:line="108" pos:column="52">
    <block pos:line="109" pos:column="5">{
      <if pos:line="110" pos:column="7">if <condition pos:line="110" pos:column="10">(<expr><name pos:line="110" pos:column="11">unset<pos:position pos:line="110" pos:column="16"/></name></expr>)<pos:position pos:line="110" pos:column="17"/></condition><then pos:line="110" pos:column="17">
      <block pos:line="111" pos:column="7">{
	<if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><call><name pos:line="112" pos:column="13">DTYPE<pos:position pos:line="112" pos:column="18"/></name> <argument_list pos:line="112" pos:column="19">(<argument><expr><name><name pos:line="112" pos:column="20">MuttVars<pos:position pos:line="112" pos:column="28"/></name><index pos:line="112" pos:column="28">[<expr><name pos:line="112" pos:column="29">idx<pos:position pos:line="112" pos:column="32"/></name></expr>]<pos:position pos:line="112" pos:column="33"/></index></name><operator pos:line="112" pos:column="33">.<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="34">type<pos:position pos:line="112" pos:column="38"/></name></expr></argument>)<pos:position pos:line="112" pos:column="39"/></argument_list></call> <operator pos:line="112" pos:column="40">==<pos:position pos:line="112" pos:column="42"/></operator> <name pos:line="112" pos:column="43">DT_ADDR<pos:position pos:line="112" pos:column="50"/></name></expr>)<pos:position pos:line="112" pos:column="51"/></condition><then pos:line="112" pos:column="51">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="11">rfc822_free_address<pos:position pos:line="113" pos:column="30"/></name> <argument_list pos:line="113" pos:column="31">(<argument><expr><operator pos:line="113" pos:column="32">(<pos:position pos:line="113" pos:column="33"/></operator><name pos:line="113" pos:column="33">ADDRESS<pos:position pos:line="113" pos:column="40"/></name> <operator pos:line="113" pos:column="41">*<pos:position pos:line="113" pos:column="42"/></operator><operator pos:line="113" pos:column="42">*<pos:position pos:line="113" pos:column="43"/></operator><operator pos:line="113" pos:column="43">)<pos:position pos:line="113" pos:column="44"/></operator> <name><name pos:line="113" pos:column="45">MuttVars<pos:position pos:line="113" pos:column="53"/></name><index pos:line="113" pos:column="53">[<expr><name pos:line="113" pos:column="54">idx<pos:position pos:line="113" pos:column="57"/></name></expr>]<pos:position pos:line="113" pos:column="58"/></index></name><operator pos:line="113" pos:column="58">.<pos:position pos:line="113" pos:column="59"/></operator><name pos:line="113" pos:column="59">data<pos:position pos:line="113" pos:column="63"/></name></expr></argument>)<pos:position pos:line="113" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="65"/></expr_stmt></block></then>
	<else pos:line="114" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="11">safe_free<pos:position pos:line="115" pos:column="20"/></name> <argument_list pos:line="115" pos:column="21">(<argument><expr><operator pos:line="115" pos:column="22">(<pos:position pos:line="115" pos:column="23"/></operator><name pos:line="115" pos:column="23">void<pos:position pos:line="115" pos:column="27"/></name> <operator pos:line="115" pos:column="28">*<pos:position pos:line="115" pos:column="29"/></operator><operator pos:line="115" pos:column="29">*<pos:position pos:line="115" pos:column="30"/></operator><operator pos:line="115" pos:column="30">)<pos:position pos:line="115" pos:column="31"/></operator> <name><name pos:line="115" pos:column="32">MuttVars<pos:position pos:line="115" pos:column="40"/></name><index pos:line="115" pos:column="40">[<expr><name pos:line="115" pos:column="41">idx<pos:position pos:line="115" pos:column="44"/></name></expr>]<pos:position pos:line="115" pos:column="45"/></index></name><operator pos:line="115" pos:column="45">.<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="46">data<pos:position pos:line="115" pos:column="50"/></name></expr></argument>)<pos:position pos:line="115" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="52"/></expr_stmt></block></else></if>
      }<pos:position pos:line="116" pos:column="8"/></block></then>
      <elseif pos:line="117" pos:column="7">else <if pos:line="117" pos:column="12">if <condition pos:line="117" pos:column="15">(<expr><name pos:line="117" pos:column="16">query<pos:position pos:line="117" pos:column="21"/></name> <operator pos:line="117" pos:column="22">||<pos:position pos:line="117" pos:column="24"/></operator> <operator pos:line="117" pos:column="25">*<pos:position pos:line="117" pos:column="26"/></operator><name><name pos:line="117" pos:column="26">s<pos:position pos:line="117" pos:column="27"/></name><operator pos:line="117" pos:column="27">-&gt;<pos:position pos:line="117" pos:column="32"/></operator><name pos:line="117" pos:column="29">dptr<pos:position pos:line="117" pos:column="33"/></name></name> <operator pos:line="117" pos:column="34">!=<pos:position pos:line="117" pos:column="36"/></operator> <literal type="char" pos:line="117" pos:column="37">'='<pos:position pos:line="117" pos:column="40"/></literal></expr>)<pos:position pos:line="117" pos:column="41"/></condition><then pos:line="117" pos:column="41">
      <block pos:line="118" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="119" pos:column="9">char<pos:position pos:line="119" pos:column="13"/></name></type> <name><name pos:line="119" pos:column="14">_tmp<pos:position pos:line="119" pos:column="18"/></name><index pos:line="119" pos:column="18">[<expr><name pos:line="119" pos:column="19">STRING<pos:position pos:line="119" pos:column="25"/></name></expr>]<pos:position pos:line="119" pos:column="26"/></index></name></decl>;<pos:position pos:line="119" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="120" pos:column="9">char<pos:position pos:line="120" pos:column="13"/></name> <modifier pos:line="120" pos:column="14">*<pos:position pos:line="120" pos:column="15"/></modifier></type><name pos:line="120" pos:column="15">val<pos:position pos:line="120" pos:column="18"/></name> <init pos:line="120" pos:column="19">= <expr><name pos:line="120" pos:column="21">NULL<pos:position pos:line="120" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="120" pos:column="26"/></decl_stmt>
	
	<if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><call><name pos:line="122" pos:column="13">DTYPE<pos:position pos:line="122" pos:column="18"/></name> <argument_list pos:line="122" pos:column="19">(<argument><expr><name><name pos:line="122" pos:column="20">MuttVars<pos:position pos:line="122" pos:column="28"/></name><index pos:line="122" pos:column="28">[<expr><name pos:line="122" pos:column="29">idx<pos:position pos:line="122" pos:column="32"/></name></expr>]<pos:position pos:line="122" pos:column="33"/></index></name><operator pos:line="122" pos:column="33">.<pos:position pos:line="122" pos:column="34"/></operator><name pos:line="122" pos:column="34">type<pos:position pos:line="122" pos:column="38"/></name></expr></argument>)<pos:position pos:line="122" pos:column="39"/></argument_list></call> <operator pos:line="122" pos:column="40">==<pos:position pos:line="122" pos:column="42"/></operator> <name pos:line="122" pos:column="43">DT_ADDR<pos:position pos:line="122" pos:column="50"/></name></expr>)<pos:position pos:line="122" pos:column="51"/></condition><then pos:line="122" pos:column="51">
	<block pos:line="123" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="124" pos:column="11">_tmp<pos:position pos:line="124" pos:column="15"/></name><index pos:line="124" pos:column="15">[<expr><literal type="number" pos:line="124" pos:column="16">0<pos:position pos:line="124" pos:column="17"/></literal></expr>]<pos:position pos:line="124" pos:column="18"/></index></name> <operator pos:line="124" pos:column="19">=<pos:position pos:line="124" pos:column="20"/></operator> <literal type="char" pos:line="124" pos:column="21">'\0'<pos:position pos:line="124" pos:column="25"/></literal></expr>;<pos:position pos:line="124" pos:column="26"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="125" pos:column="11">rfc822_write_address<pos:position pos:line="125" pos:column="31"/></name> <argument_list pos:line="125" pos:column="32">(<argument><expr><name pos:line="125" pos:column="33">_tmp<pos:position pos:line="125" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="125" pos:column="39">sizeof <argument_list pos:line="125" pos:column="46">(<argument><expr><name pos:line="125" pos:column="47">_tmp<pos:position pos:line="125" pos:column="51"/></name></expr></argument>)<pos:position pos:line="125" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="125" pos:column="54">*<pos:position pos:line="125" pos:column="55"/></operator><operator pos:line="125" pos:column="55">(<pos:position pos:line="125" pos:column="56"/></operator><operator pos:line="125" pos:column="56">(<pos:position pos:line="125" pos:column="57"/></operator><name pos:line="125" pos:column="57">ADDRESS<pos:position pos:line="125" pos:column="64"/></name> <operator pos:line="125" pos:column="65">*<pos:position pos:line="125" pos:column="66"/></operator><operator pos:line="125" pos:column="66">*<pos:position pos:line="125" pos:column="67"/></operator><operator pos:line="125" pos:column="67">)<pos:position pos:line="125" pos:column="68"/></operator> <name><name pos:line="125" pos:column="69">MuttVars<pos:position pos:line="125" pos:column="77"/></name><index pos:line="125" pos:column="77">[<expr><name pos:line="125" pos:column="78">idx<pos:position pos:line="125" pos:column="81"/></name></expr>]<pos:position pos:line="125" pos:column="82"/></index></name><operator pos:line="125" pos:column="82">.<pos:position pos:line="125" pos:column="83"/></operator><name pos:line="125" pos:column="83">data<pos:position pos:line="125" pos:column="87"/></name><operator pos:line="125" pos:column="87">)<pos:position pos:line="125" pos:column="88"/></operator></expr></argument>)<pos:position pos:line="125" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="90"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="126" pos:column="11">val<pos:position pos:line="126" pos:column="14"/></name> <operator pos:line="126" pos:column="15">=<pos:position pos:line="126" pos:column="16"/></operator> <name pos:line="126" pos:column="17">_tmp<pos:position pos:line="126" pos:column="21"/></name></expr>;<pos:position pos:line="126" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="127" pos:column="10"/></block></then>
	<else pos:line="128" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="11">val<pos:position pos:line="129" pos:column="14"/></name> <operator pos:line="129" pos:column="15">=<pos:position pos:line="129" pos:column="16"/></operator> <operator pos:line="129" pos:column="17">*<pos:position pos:line="129" pos:column="18"/></operator><operator pos:line="129" pos:column="18">(<pos:position pos:line="129" pos:column="19"/></operator><operator pos:line="129" pos:column="19">(<pos:position pos:line="129" pos:column="20"/></operator><name pos:line="129" pos:column="20">char<pos:position pos:line="129" pos:column="24"/></name> <operator pos:line="129" pos:column="25">*<pos:position pos:line="129" pos:column="26"/></operator><operator pos:line="129" pos:column="26">*<pos:position pos:line="129" pos:column="27"/></operator><operator pos:line="129" pos:column="27">)<pos:position pos:line="129" pos:column="28"/></operator> <name><name pos:line="129" pos:column="29">MuttVars<pos:position pos:line="129" pos:column="37"/></name><index pos:line="129" pos:column="37">[<expr><name pos:line="129" pos:column="38">idx<pos:position pos:line="129" pos:column="41"/></name></expr>]<pos:position pos:line="129" pos:column="42"/></index></name><operator pos:line="129" pos:column="42">.<pos:position pos:line="129" pos:column="43"/></operator><name pos:line="129" pos:column="43">data<pos:position pos:line="129" pos:column="47"/></name><operator pos:line="129" pos:column="47">)<pos:position pos:line="129" pos:column="48"/></operator></expr>;<pos:position pos:line="129" pos:column="49"/></expr_stmt></block></else></if>
	
	<comment type="block" pos:line="131" pos:column="9">/* user requested the value of this variable */</comment>
	<expr_stmt><expr><call><name pos:line="132" pos:column="9">snprintf<pos:position pos:line="132" pos:column="17"/></name> <argument_list pos:line="132" pos:column="18">(<argument><expr><name><name pos:line="132" pos:column="19">err<pos:position pos:line="132" pos:column="22"/></name><operator pos:line="132" pos:column="22">-&gt;<pos:position pos:line="132" pos:column="27"/></operator><name pos:line="132" pos:column="24">data<pos:position pos:line="132" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="30">err<pos:position pos:line="132" pos:column="33"/></name><operator pos:line="132" pos:column="33">-&gt;<pos:position pos:line="132" pos:column="38"/></operator><name pos:line="132" pos:column="35">dsize<pos:position pos:line="132" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="42">"%s=\"%s\""<pos:position pos:line="132" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="55">MuttVars<pos:position pos:line="132" pos:column="63"/></name><index pos:line="132" pos:column="63">[<expr><name pos:line="132" pos:column="64">idx<pos:position pos:line="132" pos:column="67"/></name></expr>]<pos:position pos:line="132" pos:column="68"/></index></name><operator pos:line="132" pos:column="68">.<pos:position pos:line="132" pos:column="69"/></operator><name pos:line="132" pos:column="69">option<pos:position pos:line="132" pos:column="75"/></name></expr></argument>,
		  <argument><expr><call><name pos:line="133" pos:column="19">NONULL<pos:position pos:line="133" pos:column="25"/></name> <argument_list pos:line="133" pos:column="26">(<argument><expr><name pos:line="133" pos:column="27">val<pos:position pos:line="133" pos:column="30"/></name></expr></argument>)<pos:position pos:line="133" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="33"/></expr_stmt>
	<break pos:line="134" pos:column="9">break;<pos:position pos:line="134" pos:column="15"/></break>
      }<pos:position pos:line="135" pos:column="8"/></block></then></if></elseif>
      <else pos:line="136" pos:column="7">else
      <block pos:line="137" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="138" pos:column="9">s<pos:position pos:line="138" pos:column="10"/></name><operator pos:line="138" pos:column="10">-&gt;<pos:position pos:line="138" pos:column="15"/></operator><name pos:line="138" pos:column="12">dptr<pos:position pos:line="138" pos:column="16"/></name></name><operator pos:line="138" pos:column="16">++<pos:position pos:line="138" pos:column="18"/></operator></expr>;<pos:position pos:line="138" pos:column="19"/></expr_stmt>

        <comment type="block" pos:line="140" pos:column="9">/* copy the value of the string */</comment>
        <if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><call><name pos:line="141" pos:column="13">DTYPE<pos:position pos:line="141" pos:column="18"/></name> <argument_list pos:line="141" pos:column="19">(<argument><expr><name><name pos:line="141" pos:column="20">MuttVars<pos:position pos:line="141" pos:column="28"/></name><index pos:line="141" pos:column="28">[<expr><name pos:line="141" pos:column="29">idx<pos:position pos:line="141" pos:column="32"/></name></expr>]<pos:position pos:line="141" pos:column="33"/></index></name><operator pos:line="141" pos:column="33">.<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="34">type<pos:position pos:line="141" pos:column="38"/></name></expr></argument>)<pos:position pos:line="141" pos:column="39"/></argument_list></call> <operator pos:line="141" pos:column="40">==<pos:position pos:line="141" pos:column="42"/></operator> <name pos:line="141" pos:column="43">DT_ADDR<pos:position pos:line="141" pos:column="50"/></name></expr>)<pos:position pos:line="141" pos:column="51"/></condition><then pos:line="141" pos:column="51">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="11">rfc822_free_address<pos:position pos:line="142" pos:column="30"/></name> <argument_list pos:line="142" pos:column="31">(<argument><expr><operator pos:line="142" pos:column="32">(<pos:position pos:line="142" pos:column="33"/></operator><name pos:line="142" pos:column="33">ADDRESS<pos:position pos:line="142" pos:column="40"/></name> <operator pos:line="142" pos:column="41">*<pos:position pos:line="142" pos:column="42"/></operator><operator pos:line="142" pos:column="42">*<pos:position pos:line="142" pos:column="43"/></operator><operator pos:line="142" pos:column="43">)<pos:position pos:line="142" pos:column="44"/></operator> <name><name pos:line="142" pos:column="45">MuttVars<pos:position pos:line="142" pos:column="53"/></name><index pos:line="142" pos:column="53">[<expr><name pos:line="142" pos:column="54">idx<pos:position pos:line="142" pos:column="57"/></name></expr>]<pos:position pos:line="142" pos:column="58"/></index></name><operator pos:line="142" pos:column="58">.<pos:position pos:line="142" pos:column="59"/></operator><name pos:line="142" pos:column="59">data<pos:position pos:line="142" pos:column="63"/></name></expr></argument>)<pos:position pos:line="142" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="65"/></expr_stmt></block></then>
        <else pos:line="143" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="144" pos:column="11">FREE<pos:position pos:line="144" pos:column="15"/></name> <argument_list pos:line="144" pos:column="16">(<argument><expr><name><name pos:line="144" pos:column="17">MuttVars<pos:position pos:line="144" pos:column="25"/></name><index pos:line="144" pos:column="25">[<expr><name pos:line="144" pos:column="26">idx<pos:position pos:line="144" pos:column="29"/></name></expr>]<pos:position pos:line="144" pos:column="30"/></index></name><operator pos:line="144" pos:column="30">.<pos:position pos:line="144" pos:column="31"/></operator><name pos:line="144" pos:column="31">data<pos:position pos:line="144" pos:column="35"/></name></expr></argument>)<pos:position pos:line="144" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="37"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="146" pos:column="9">mutt_extract_token<pos:position pos:line="146" pos:column="27"/></name> <argument_list pos:line="146" pos:column="28">(<argument><expr><name pos:line="146" pos:column="29">tmp<pos:position pos:line="146" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="34">s<pos:position pos:line="146" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="37">0<pos:position pos:line="146" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="40"/></expr_stmt>
        <if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><call><name pos:line="147" pos:column="13">DTYPE<pos:position pos:line="147" pos:column="18"/></name> <argument_list pos:line="147" pos:column="19">(<argument><expr><name><name pos:line="147" pos:column="20">MuttVars<pos:position pos:line="147" pos:column="28"/></name><index pos:line="147" pos:column="28">[<expr><name pos:line="147" pos:column="29">idx<pos:position pos:line="147" pos:column="32"/></name></expr>]<pos:position pos:line="147" pos:column="33"/></index></name><operator pos:line="147" pos:column="33">.<pos:position pos:line="147" pos:column="34"/></operator><name pos:line="147" pos:column="34">type<pos:position pos:line="147" pos:column="38"/></name></expr></argument>)<pos:position pos:line="147" pos:column="39"/></argument_list></call> <operator pos:line="147" pos:column="40">==<pos:position pos:line="147" pos:column="42"/></operator> <name pos:line="147" pos:column="43">DT_PATH<pos:position pos:line="147" pos:column="50"/></name></expr>)<pos:position pos:line="147" pos:column="51"/></condition><then pos:line="147" pos:column="51">
        <block pos:line="148" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="149" pos:column="11">strfcpy<pos:position pos:line="149" pos:column="18"/></name> <argument_list pos:line="149" pos:column="19">(<argument><expr><name pos:line="149" pos:column="20">scratch<pos:position pos:line="149" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="29">tmp<pos:position pos:line="149" pos:column="32"/></name><operator pos:line="149" pos:column="32">-&gt;<pos:position pos:line="149" pos:column="37"/></operator><name pos:line="149" pos:column="34">data<pos:position pos:line="149" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="149" pos:column="40">sizeof <argument_list pos:line="149" pos:column="47">(<argument><expr><name pos:line="149" pos:column="48">scratch<pos:position pos:line="149" pos:column="55"/></name></expr></argument>)<pos:position pos:line="149" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="149" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="58"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="150" pos:column="11">mutt_expand_path<pos:position pos:line="150" pos:column="27"/></name> <argument_list pos:line="150" pos:column="28">(<argument><expr><name pos:line="150" pos:column="29">scratch<pos:position pos:line="150" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="150" pos:column="38">sizeof <argument_list pos:line="150" pos:column="45">(<argument><expr><name pos:line="150" pos:column="46">scratch<pos:position pos:line="150" pos:column="53"/></name></expr></argument>)<pos:position pos:line="150" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="150" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="56"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="151" pos:column="11">*<pos:position pos:line="151" pos:column="12"/></operator><operator pos:line="151" pos:column="12">(<pos:position pos:line="151" pos:column="13"/></operator><operator pos:line="151" pos:column="13">(<pos:position pos:line="151" pos:column="14"/></operator><name pos:line="151" pos:column="14">char<pos:position pos:line="151" pos:column="18"/></name> <operator pos:line="151" pos:column="19">*<pos:position pos:line="151" pos:column="20"/></operator><operator pos:line="151" pos:column="20">*<pos:position pos:line="151" pos:column="21"/></operator><operator pos:line="151" pos:column="21">)<pos:position pos:line="151" pos:column="22"/></operator> <name><name pos:line="151" pos:column="23">MuttVars<pos:position pos:line="151" pos:column="31"/></name><index pos:line="151" pos:column="31">[<expr><name pos:line="151" pos:column="32">idx<pos:position pos:line="151" pos:column="35"/></name></expr>]<pos:position pos:line="151" pos:column="36"/></index></name><operator pos:line="151" pos:column="36">.<pos:position pos:line="151" pos:column="37"/></operator><name pos:line="151" pos:column="37">data<pos:position pos:line="151" pos:column="41"/></name><operator pos:line="151" pos:column="41">)<pos:position pos:line="151" pos:column="42"/></operator> <operator pos:line="151" pos:column="43">=<pos:position pos:line="151" pos:column="44"/></operator> <call><name pos:line="151" pos:column="45">safe_strdup<pos:position pos:line="151" pos:column="56"/></name> <argument_list pos:line="151" pos:column="57">(<argument><expr><name pos:line="151" pos:column="58">scratch<pos:position pos:line="151" pos:column="65"/></name></expr></argument>)<pos:position pos:line="151" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="152" pos:column="10"/></block></then>
        <elseif pos:line="153" pos:column="9">else <if pos:line="153" pos:column="14">if <condition pos:line="153" pos:column="17">(<expr><call><name pos:line="153" pos:column="18">DTYPE<pos:position pos:line="153" pos:column="23"/></name> <argument_list pos:line="153" pos:column="24">(<argument><expr><name><name pos:line="153" pos:column="25">MuttVars<pos:position pos:line="153" pos:column="33"/></name><index pos:line="153" pos:column="33">[<expr><name pos:line="153" pos:column="34">idx<pos:position pos:line="153" pos:column="37"/></name></expr>]<pos:position pos:line="153" pos:column="38"/></index></name><operator pos:line="153" pos:column="38">.<pos:position pos:line="153" pos:column="39"/></operator><name pos:line="153" pos:column="39">type<pos:position pos:line="153" pos:column="43"/></name></expr></argument>)<pos:position pos:line="153" pos:column="44"/></argument_list></call> <operator pos:line="153" pos:column="45">==<pos:position pos:line="153" pos:column="47"/></operator> <name pos:line="153" pos:column="48">DT_STR<pos:position pos:line="153" pos:column="54"/></name></expr>)<pos:position pos:line="153" pos:column="55"/></condition><then pos:line="153" pos:column="55">
        <block pos:line="154" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="155" pos:column="11">*<pos:position pos:line="155" pos:column="12"/></operator><operator pos:line="155" pos:column="12">(<pos:position pos:line="155" pos:column="13"/></operator><operator pos:line="155" pos:column="13">(<pos:position pos:line="155" pos:column="14"/></operator><name pos:line="155" pos:column="14">char<pos:position pos:line="155" pos:column="18"/></name> <operator pos:line="155" pos:column="19">*<pos:position pos:line="155" pos:column="20"/></operator><operator pos:line="155" pos:column="20">*<pos:position pos:line="155" pos:column="21"/></operator><operator pos:line="155" pos:column="21">)<pos:position pos:line="155" pos:column="22"/></operator> <name><name pos:line="155" pos:column="23">MuttVars<pos:position pos:line="155" pos:column="31"/></name><index pos:line="155" pos:column="31">[<expr><name pos:line="155" pos:column="32">idx<pos:position pos:line="155" pos:column="35"/></name></expr>]<pos:position pos:line="155" pos:column="36"/></index></name><operator pos:line="155" pos:column="36">.<pos:position pos:line="155" pos:column="37"/></operator><name pos:line="155" pos:column="37">data<pos:position pos:line="155" pos:column="41"/></name><operator pos:line="155" pos:column="41">)<pos:position pos:line="155" pos:column="42"/></operator> <operator pos:line="155" pos:column="43">=<pos:position pos:line="155" pos:column="44"/></operator> <call><name pos:line="155" pos:column="45">safe_strdup<pos:position pos:line="155" pos:column="56"/></name> <argument_list pos:line="155" pos:column="57">(<argument><expr><name><name pos:line="155" pos:column="58">tmp<pos:position pos:line="155" pos:column="61"/></name><operator pos:line="155" pos:column="61">-&gt;<pos:position pos:line="155" pos:column="66"/></operator><name pos:line="155" pos:column="63">data<pos:position pos:line="155" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="69"/></expr_stmt>
	  <if pos:line="156" pos:column="11">if <condition pos:line="156" pos:column="14">(<expr><call><name pos:line="156" pos:column="15">mutt_strcmp<pos:position pos:line="156" pos:column="26"/></name> <argument_list pos:line="156" pos:column="27">(<argument><expr><name><name pos:line="156" pos:column="28">MuttVars<pos:position pos:line="156" pos:column="36"/></name><index pos:line="156" pos:column="36">[<expr><name pos:line="156" pos:column="37">idx<pos:position pos:line="156" pos:column="40"/></name></expr>]<pos:position pos:line="156" pos:column="41"/></index></name><operator pos:line="156" pos:column="41">.<pos:position pos:line="156" pos:column="42"/></operator><name pos:line="156" pos:column="42">option<pos:position pos:line="156" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="50">"charset"<pos:position pos:line="156" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="60"/></argument_list></call> <operator pos:line="156" pos:column="61">==<pos:position pos:line="156" pos:column="63"/></operator> <literal type="number" pos:line="156" pos:column="64">0<pos:position pos:line="156" pos:column="65"/></literal></expr>)<pos:position pos:line="156" pos:column="66"/></condition><then pos:line="156" pos:column="66">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="157" pos:column="13">mutt_set_charset<pos:position pos:line="157" pos:column="29"/></name> <argument_list pos:line="157" pos:column="30">(<argument><expr><name pos:line="157" pos:column="31">Charset<pos:position pos:line="157" pos:column="38"/></name></expr></argument>)<pos:position pos:line="157" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="40"/></expr_stmt></block></then></if>
        }<pos:position pos:line="158" pos:column="10"/></block></then></if></elseif>
        <else pos:line="159" pos:column="9">else
        <block pos:line="160" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="161" pos:column="11">*<pos:position pos:line="161" pos:column="12"/></operator><operator pos:line="161" pos:column="12">(<pos:position pos:line="161" pos:column="13"/></operator><operator pos:line="161" pos:column="13">(<pos:position pos:line="161" pos:column="14"/></operator><name pos:line="161" pos:column="14">ADDRESS<pos:position pos:line="161" pos:column="21"/></name> <operator pos:line="161" pos:column="22">*<pos:position pos:line="161" pos:column="23"/></operator><operator pos:line="161" pos:column="23">*<pos:position pos:line="161" pos:column="24"/></operator><operator pos:line="161" pos:column="24">)<pos:position pos:line="161" pos:column="25"/></operator> <name><name pos:line="161" pos:column="26">MuttVars<pos:position pos:line="161" pos:column="34"/></name><index pos:line="161" pos:column="34">[<expr><name pos:line="161" pos:column="35">idx<pos:position pos:line="161" pos:column="38"/></name></expr>]<pos:position pos:line="161" pos:column="39"/></index></name><operator pos:line="161" pos:column="39">.<pos:position pos:line="161" pos:column="40"/></operator><name pos:line="161" pos:column="40">data<pos:position pos:line="161" pos:column="44"/></name><operator pos:line="161" pos:column="44">)<pos:position pos:line="161" pos:column="45"/></operator> <operator pos:line="161" pos:column="46">=<pos:position pos:line="161" pos:column="47"/></operator> <call><name pos:line="161" pos:column="48">rfc822_parse_adrlist<pos:position pos:line="161" pos:column="68"/></name> <argument_list pos:line="161" pos:column="69">(<argument><expr><name pos:line="161" pos:column="70">NULL<pos:position pos:line="161" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="76">tmp<pos:position pos:line="161" pos:column="79"/></name><operator pos:line="161" pos:column="79">-&gt;<pos:position pos:line="161" pos:column="84"/></operator><name pos:line="161" pos:column="81">data<pos:position pos:line="161" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="87"/></expr_stmt>
        }<pos:position pos:line="162" pos:column="10"/></block></else></if>
      }<pos:position pos:line="163" pos:column="8"/></block></else></if>
    }<pos:position pos:line="164" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="165" pos:column="5">else <if pos:line="165" pos:column="10">if <condition pos:line="165" pos:column="13">(<expr><call><name pos:line="165" pos:column="14">DTYPE<pos:position pos:line="165" pos:column="19"/></name><argument_list pos:line="165" pos:column="19">(<argument><expr><name><name pos:line="165" pos:column="20">MuttVars<pos:position pos:line="165" pos:column="28"/></name><index pos:line="165" pos:column="28">[<expr><name pos:line="165" pos:column="29">idx<pos:position pos:line="165" pos:column="32"/></name></expr>]<pos:position pos:line="165" pos:column="33"/></index></name><operator pos:line="165" pos:column="33">.<pos:position pos:line="165" pos:column="34"/></operator><name pos:line="165" pos:column="34">type<pos:position pos:line="165" pos:column="38"/></name></expr></argument>)<pos:position pos:line="165" pos:column="39"/></argument_list></call> <operator pos:line="165" pos:column="40">==<pos:position pos:line="165" pos:column="42"/></operator> <name pos:line="165" pos:column="43">DT_RX<pos:position pos:line="165" pos:column="48"/></name></expr>)<pos:position pos:line="165" pos:column="49"/></condition><then pos:line="165" pos:column="49">
    <block pos:line="166" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="167" pos:column="7">REGEXP<pos:position pos:line="167" pos:column="13"/></name> <modifier pos:line="167" pos:column="14">*<pos:position pos:line="167" pos:column="15"/></modifier></type><name pos:line="167" pos:column="15">ptr<pos:position pos:line="167" pos:column="18"/></name> <init pos:line="167" pos:column="19">= <expr><operator pos:line="167" pos:column="21">(<pos:position pos:line="167" pos:column="22"/></operator><name pos:line="167" pos:column="22">REGEXP<pos:position pos:line="167" pos:column="28"/></name> <operator pos:line="167" pos:column="29">*<pos:position pos:line="167" pos:column="30"/></operator><operator pos:line="167" pos:column="30">)<pos:position pos:line="167" pos:column="31"/></operator> <name><name pos:line="167" pos:column="32">MuttVars<pos:position pos:line="167" pos:column="40"/></name><index pos:line="167" pos:column="40">[<expr><name pos:line="167" pos:column="41">idx<pos:position pos:line="167" pos:column="44"/></name></expr>]<pos:position pos:line="167" pos:column="45"/></index></name><operator pos:line="167" pos:column="45">.<pos:position pos:line="167" pos:column="46"/></operator><name pos:line="167" pos:column="46">data<pos:position pos:line="167" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="167" pos:column="51"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="168" pos:column="7">regex_t<pos:position pos:line="168" pos:column="14"/></name> <modifier pos:line="168" pos:column="15">*<pos:position pos:line="168" pos:column="16"/></modifier></type><name pos:line="168" pos:column="16">rx<pos:position pos:line="168" pos:column="18"/></name></decl>;<pos:position pos:line="168" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="169" pos:column="7">int<pos:position pos:line="169" pos:column="10"/></name></type> <name pos:line="169" pos:column="11">e<pos:position pos:line="169" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="169" pos:column="14">flags<pos:position pos:line="169" pos:column="19"/></name> <init pos:line="169" pos:column="20">= <expr><literal type="number" pos:line="169" pos:column="22">0<pos:position pos:line="169" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="169" pos:column="24"/></decl_stmt>

      <if pos:line="171" pos:column="7">if <condition pos:line="171" pos:column="10">(<expr><name pos:line="171" pos:column="11">query<pos:position pos:line="171" pos:column="16"/></name> <operator pos:line="171" pos:column="17">||<pos:position pos:line="171" pos:column="19"/></operator> <operator pos:line="171" pos:column="20">*<pos:position pos:line="171" pos:column="21"/></operator><name><name pos:line="171" pos:column="21">s<pos:position pos:line="171" pos:column="22"/></name><operator pos:line="171" pos:column="22">-&gt;<pos:position pos:line="171" pos:column="27"/></operator><name pos:line="171" pos:column="24">dptr<pos:position pos:line="171" pos:column="28"/></name></name> <operator pos:line="171" pos:column="29">!=<pos:position pos:line="171" pos:column="31"/></operator> <literal type="char" pos:line="171" pos:column="32">'='<pos:position pos:line="171" pos:column="35"/></literal></expr>)<pos:position pos:line="171" pos:column="36"/></condition><then pos:line="171" pos:column="36">
      <block pos:line="172" pos:column="7">{
	<comment type="block" pos:line="173" pos:column="9">/* user requested the value of this variable */</comment>
	<expr_stmt><expr><call><name pos:line="174" pos:column="9">snprintf<pos:position pos:line="174" pos:column="17"/></name> <argument_list pos:line="174" pos:column="18">(<argument><expr><name><name pos:line="174" pos:column="19">err<pos:position pos:line="174" pos:column="22"/></name><operator pos:line="174" pos:column="22">-&gt;<pos:position pos:line="174" pos:column="27"/></operator><name pos:line="174" pos:column="24">data<pos:position pos:line="174" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="30">err<pos:position pos:line="174" pos:column="33"/></name><operator pos:line="174" pos:column="33">-&gt;<pos:position pos:line="174" pos:column="38"/></operator><name pos:line="174" pos:column="35">dsize<pos:position pos:line="174" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="42">"%s=\"%s\""<pos:position pos:line="174" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="55">MuttVars<pos:position pos:line="174" pos:column="63"/></name><index pos:line="174" pos:column="63">[<expr><name pos:line="174" pos:column="64">idx<pos:position pos:line="174" pos:column="67"/></name></expr>]<pos:position pos:line="174" pos:column="68"/></index></name><operator pos:line="174" pos:column="68">.<pos:position pos:line="174" pos:column="69"/></operator><name pos:line="174" pos:column="69">option<pos:position pos:line="174" pos:column="75"/></name></expr></argument>,
		  <argument><expr><call><name pos:line="175" pos:column="19">NONULL<pos:position pos:line="175" pos:column="25"/></name> <argument_list pos:line="175" pos:column="26">(<argument><expr><name><name pos:line="175" pos:column="27">ptr<pos:position pos:line="175" pos:column="30"/></name><operator pos:line="175" pos:column="30">-&gt;<pos:position pos:line="175" pos:column="35"/></operator><name pos:line="175" pos:column="32">pattern<pos:position pos:line="175" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="175" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="42"/></expr_stmt>
	<break pos:line="176" pos:column="9">break;<pos:position pos:line="176" pos:column="15"/></break>
      }<pos:position pos:line="177" pos:column="8"/></block></then></if>

      <if pos:line="179" pos:column="7">if <condition pos:line="179" pos:column="10">(<expr><call><name pos:line="179" pos:column="11">option<pos:position pos:line="179" pos:column="17"/></name><argument_list pos:line="179" pos:column="17">(<argument><expr><name pos:line="179" pos:column="18">OPTATTACHMSG<pos:position pos:line="179" pos:column="30"/></name></expr></argument>)<pos:position pos:line="179" pos:column="31"/></argument_list></call> <operator pos:line="179" pos:column="32">&amp;&amp;<pos:position pos:line="179" pos:column="42"/></operator> <operator pos:line="179" pos:column="35">(<pos:position pos:line="179" pos:column="36"/></operator><operator pos:line="179" pos:column="36">!<pos:position pos:line="179" pos:column="37"/></operator><call><name pos:line="179" pos:column="37">mutt_strcmp<pos:position pos:line="179" pos:column="48"/></name><argument_list pos:line="179" pos:column="48">(<argument><expr><name><name pos:line="179" pos:column="49">MuttVars<pos:position pos:line="179" pos:column="57"/></name><index pos:line="179" pos:column="57">[<expr><name pos:line="179" pos:column="58">idx<pos:position pos:line="179" pos:column="61"/></name></expr>]<pos:position pos:line="179" pos:column="62"/></index></name><operator pos:line="179" pos:column="62">.<pos:position pos:line="179" pos:column="63"/></operator><name pos:line="179" pos:column="63">option<pos:position pos:line="179" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="71">"alternates"<pos:position pos:line="179" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="84"/></argument_list></call>
				   <operator pos:line="180" pos:column="36">||<pos:position pos:line="180" pos:column="38"/></operator> <operator pos:line="180" pos:column="39">!<pos:position pos:line="180" pos:column="40"/></operator><call><name pos:line="180" pos:column="40">mutt_strcmp<pos:position pos:line="180" pos:column="51"/></name><argument_list pos:line="180" pos:column="51">(<argument><expr><name><name pos:line="180" pos:column="52">MuttVars<pos:position pos:line="180" pos:column="60"/></name><index pos:line="180" pos:column="60">[<expr><name pos:line="180" pos:column="61">idx<pos:position pos:line="180" pos:column="64"/></name></expr>]<pos:position pos:line="180" pos:column="65"/></index></name><operator pos:line="180" pos:column="65">.<pos:position pos:line="180" pos:column="66"/></operator><name pos:line="180" pos:column="66">option<pos:position pos:line="180" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="74">"reply_regexp"<pos:position pos:line="180" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="89"/></argument_list></call><operator pos:line="180" pos:column="89">)<pos:position pos:line="180" pos:column="90"/></operator></expr>)<pos:position pos:line="180" pos:column="91"/></condition><then pos:line="180" pos:column="91">
      <block pos:line="181" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="182" pos:column="9">snprintf<pos:position pos:line="182" pos:column="17"/></name> <argument_list pos:line="182" pos:column="18">(<argument><expr><name><name pos:line="182" pos:column="19">err<pos:position pos:line="182" pos:column="22"/></name><operator pos:line="182" pos:column="22">-&gt;<pos:position pos:line="182" pos:column="27"/></operator><name pos:line="182" pos:column="24">data<pos:position pos:line="182" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="182" pos:column="30">err<pos:position pos:line="182" pos:column="33"/></name><operator pos:line="182" pos:column="33">-&gt;<pos:position pos:line="182" pos:column="38"/></operator><name pos:line="182" pos:column="35">dsize<pos:position pos:line="182" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="42">"Operation not permitted when in attach-message mode."<pos:position pos:line="182" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="98"/></expr_stmt>
	<expr_stmt><expr><name pos:line="183" pos:column="9">r<pos:position pos:line="183" pos:column="10"/></name> <operator pos:line="183" pos:column="11">=<pos:position pos:line="183" pos:column="12"/></operator> <operator pos:line="183" pos:column="13">-<pos:position pos:line="183" pos:column="14"/></operator><literal type="number" pos:line="183" pos:column="14">1<pos:position pos:line="183" pos:column="15"/></literal></expr>;<pos:position pos:line="183" pos:column="16"/></expr_stmt>
	<break pos:line="184" pos:column="9">break;<pos:position pos:line="184" pos:column="15"/></break>
      }<pos:position pos:line="185" pos:column="8"/></block></then></if>
      
      <expr_stmt><expr><name><name pos:line="187" pos:column="7">s<pos:position pos:line="187" pos:column="8"/></name><operator pos:line="187" pos:column="8">-&gt;<pos:position pos:line="187" pos:column="13"/></operator><name pos:line="187" pos:column="10">dptr<pos:position pos:line="187" pos:column="14"/></name></name><operator pos:line="187" pos:column="14">++<pos:position pos:line="187" pos:column="16"/></operator></expr>;<pos:position pos:line="187" pos:column="17"/></expr_stmt>

      <comment type="block" pos:line="189" pos:column="7">/* copy the value of the string */</comment>
      <expr_stmt><expr><call><name pos:line="190" pos:column="7">mutt_extract_token<pos:position pos:line="190" pos:column="25"/></name> <argument_list pos:line="190" pos:column="26">(<argument><expr><name pos:line="190" pos:column="27">tmp<pos:position pos:line="190" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="32">s<pos:position pos:line="190" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="190" pos:column="35">0<pos:position pos:line="190" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="38"/></expr_stmt>

      <if pos:line="192" pos:column="7">if <condition pos:line="192" pos:column="10">(<expr><operator pos:line="192" pos:column="11">!<pos:position pos:line="192" pos:column="12"/></operator><name><name pos:line="192" pos:column="12">ptr<pos:position pos:line="192" pos:column="15"/></name><operator pos:line="192" pos:column="15">-&gt;<pos:position pos:line="192" pos:column="20"/></operator><name pos:line="192" pos:column="17">pattern<pos:position pos:line="192" pos:column="24"/></name></name> <operator pos:line="192" pos:column="25">||<pos:position pos:line="192" pos:column="27"/></operator> <call><name pos:line="192" pos:column="28">mutt_strcmp<pos:position pos:line="192" pos:column="39"/></name> <argument_list pos:line="192" pos:column="40">(<argument><expr><name><name pos:line="192" pos:column="41">ptr<pos:position pos:line="192" pos:column="44"/></name><operator pos:line="192" pos:column="44">-&gt;<pos:position pos:line="192" pos:column="49"/></operator><name pos:line="192" pos:column="46">pattern<pos:position pos:line="192" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="192" pos:column="55">tmp<pos:position pos:line="192" pos:column="58"/></name><operator pos:line="192" pos:column="58">-&gt;<pos:position pos:line="192" pos:column="63"/></operator><name pos:line="192" pos:column="60">data<pos:position pos:line="192" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="65"/></argument_list></call> <operator pos:line="192" pos:column="66">!=<pos:position pos:line="192" pos:column="68"/></operator> <literal type="number" pos:line="192" pos:column="69">0<pos:position pos:line="192" pos:column="70"/></literal></expr>)<pos:position pos:line="192" pos:column="71"/></condition><then pos:line="192" pos:column="71">
      <block pos:line="193" pos:column="7">{
	<expr_stmt><expr><name pos:line="194" pos:column="9">int<pos:position pos:line="194" pos:column="12"/></name> <operator pos:line="194" pos:column="13">not<pos:position pos:line="194" pos:column="16"/></operator> <operator pos:line="194" pos:column="17">=<pos:position pos:line="194" pos:column="18"/></operator> <literal type="number" pos:line="194" pos:column="19">0<pos:position pos:line="194" pos:column="20"/></literal></expr>;<pos:position pos:line="194" pos:column="21"/></expr_stmt>

	<comment type="block" pos:line="196" pos:column="9">/* $alternates is case-insensitive,
	   $mask is case-sensitive */</comment>
	<if pos:line="198" pos:column="9">if <condition pos:line="198" pos:column="12">(<expr><call><name pos:line="198" pos:column="13">mutt_strcmp<pos:position pos:line="198" pos:column="24"/></name> <argument_list pos:line="198" pos:column="25">(<argument><expr><name><name pos:line="198" pos:column="26">MuttVars<pos:position pos:line="198" pos:column="34"/></name><index pos:line="198" pos:column="34">[<expr><name pos:line="198" pos:column="35">idx<pos:position pos:line="198" pos:column="38"/></name></expr>]<pos:position pos:line="198" pos:column="39"/></index></name><operator pos:line="198" pos:column="39">.<pos:position pos:line="198" pos:column="40"/></operator><name pos:line="198" pos:column="40">option<pos:position pos:line="198" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="48">"alternates"<pos:position pos:line="198" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="61"/></argument_list></call> <operator pos:line="198" pos:column="62">==<pos:position pos:line="198" pos:column="64"/></operator> <literal type="number" pos:line="198" pos:column="65">0<pos:position pos:line="198" pos:column="66"/></literal></expr>)<pos:position pos:line="198" pos:column="67"/></condition><then pos:line="198" pos:column="67">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="199" pos:column="11">flags<pos:position pos:line="199" pos:column="16"/></name> <operator pos:line="199" pos:column="17">|=<pos:position pos:line="199" pos:column="19"/></operator> <name pos:line="199" pos:column="20">REG_ICASE<pos:position pos:line="199" pos:column="29"/></name></expr>;<pos:position pos:line="199" pos:column="30"/></expr_stmt></block></then>
	<elseif pos:line="200" pos:column="9">else <if pos:line="200" pos:column="14">if <condition pos:line="200" pos:column="17">(<expr><call><name pos:line="200" pos:column="18">mutt_strcmp<pos:position pos:line="200" pos:column="29"/></name> <argument_list pos:line="200" pos:column="30">(<argument><expr><name><name pos:line="200" pos:column="31">MuttVars<pos:position pos:line="200" pos:column="39"/></name><index pos:line="200" pos:column="39">[<expr><name pos:line="200" pos:column="40">idx<pos:position pos:line="200" pos:column="43"/></name></expr>]<pos:position pos:line="200" pos:column="44"/></index></name><operator pos:line="200" pos:column="44">.<pos:position pos:line="200" pos:column="45"/></operator><name pos:line="200" pos:column="45">option<pos:position pos:line="200" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="53">"mask"<pos:position pos:line="200" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="60"/></argument_list></call> <operator pos:line="200" pos:column="61">!=<pos:position pos:line="200" pos:column="63"/></operator> <literal type="number" pos:line="200" pos:column="64">0<pos:position pos:line="200" pos:column="65"/></literal></expr>)<pos:position pos:line="200" pos:column="66"/></condition><then pos:line="200" pos:column="66">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="201" pos:column="11">flags<pos:position pos:line="201" pos:column="16"/></name> <operator pos:line="201" pos:column="17">|=<pos:position pos:line="201" pos:column="19"/></operator> <call><name pos:line="201" pos:column="20">mutt_which_case<pos:position pos:line="201" pos:column="35"/></name> <argument_list pos:line="201" pos:column="36">(<argument><expr><name><name pos:line="201" pos:column="37">tmp<pos:position pos:line="201" pos:column="40"/></name><operator pos:line="201" pos:column="40">-&gt;<pos:position pos:line="201" pos:column="45"/></operator><name pos:line="201" pos:column="42">data<pos:position pos:line="201" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="201" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="48"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="203" pos:column="9">p<pos:position pos:line="203" pos:column="10"/></name> <operator pos:line="203" pos:column="11">=<pos:position pos:line="203" pos:column="12"/></operator> <name><name pos:line="203" pos:column="13">tmp<pos:position pos:line="203" pos:column="16"/></name><operator pos:line="203" pos:column="16">-&gt;<pos:position pos:line="203" pos:column="21"/></operator><name pos:line="203" pos:column="18">data<pos:position pos:line="203" pos:column="22"/></name></name></expr>;<pos:position pos:line="203" pos:column="23"/></expr_stmt>
	<if pos:line="204" pos:column="9">if <condition pos:line="204" pos:column="12">(<expr><call><name pos:line="204" pos:column="13">mutt_strcmp<pos:position pos:line="204" pos:column="24"/></name> <argument_list pos:line="204" pos:column="25">(<argument><expr><name><name pos:line="204" pos:column="26">MuttVars<pos:position pos:line="204" pos:column="34"/></name><index pos:line="204" pos:column="34">[<expr><name pos:line="204" pos:column="35">idx<pos:position pos:line="204" pos:column="38"/></name></expr>]<pos:position pos:line="204" pos:column="39"/></index></name><operator pos:line="204" pos:column="39">.<pos:position pos:line="204" pos:column="40"/></operator><name pos:line="204" pos:column="40">option<pos:position pos:line="204" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="48">"mask"<pos:position pos:line="204" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="55"/></argument_list></call> <operator pos:line="204" pos:column="56">==<pos:position pos:line="204" pos:column="58"/></operator> <literal type="number" pos:line="204" pos:column="59">0<pos:position pos:line="204" pos:column="60"/></literal></expr>)<pos:position pos:line="204" pos:column="61"/></condition><then pos:line="204" pos:column="61">
	<block pos:line="205" pos:column="9">{
	  <if pos:line="206" pos:column="11">if <condition pos:line="206" pos:column="14">(<expr><operator pos:line="206" pos:column="15">*<pos:position pos:line="206" pos:column="16"/></operator><name pos:line="206" pos:column="16">p<pos:position pos:line="206" pos:column="17"/></name> <operator pos:line="206" pos:column="18">==<pos:position pos:line="206" pos:column="20"/></operator> <literal type="char" pos:line="206" pos:column="21">'!'<pos:position pos:line="206" pos:column="24"/></literal></expr>)<pos:position pos:line="206" pos:column="25"/></condition><then pos:line="206" pos:column="25">
	  <block pos:line="207" pos:column="11">{
	    <expr_stmt><expr><operator pos:line="208" pos:column="13">not<pos:position pos:line="208" pos:column="16"/></operator> <operator pos:line="208" pos:column="17">=<pos:position pos:line="208" pos:column="18"/></operator> <literal type="number" pos:line="208" pos:column="19">1<pos:position pos:line="208" pos:column="20"/></literal></expr>;<pos:position pos:line="208" pos:column="21"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="209" pos:column="13">p<pos:position pos:line="209" pos:column="14"/></name><operator pos:line="209" pos:column="14">++<pos:position pos:line="209" pos:column="16"/></operator></expr>;<pos:position pos:line="209" pos:column="17"/></expr_stmt>
	  }<pos:position pos:line="210" pos:column="12"/></block></then></if>
	}<pos:position pos:line="211" pos:column="10"/></block></then></if>
	  
	<expr_stmt><expr><name pos:line="213" pos:column="9">rx<pos:position pos:line="213" pos:column="11"/></name> <operator pos:line="213" pos:column="12">=<pos:position pos:line="213" pos:column="13"/></operator> <operator pos:line="213" pos:column="14">(<pos:position pos:line="213" pos:column="15"/></operator><name pos:line="213" pos:column="15">regex_t<pos:position pos:line="213" pos:column="22"/></name> <operator pos:line="213" pos:column="23">*<pos:position pos:line="213" pos:column="24"/></operator><operator pos:line="213" pos:column="24">)<pos:position pos:line="213" pos:column="25"/></operator> <call><name pos:line="213" pos:column="26">safe_malloc<pos:position pos:line="213" pos:column="37"/></name> <argument_list pos:line="213" pos:column="38">(<argument><expr><sizeof pos:line="213" pos:column="39">sizeof <argument_list pos:line="213" pos:column="46">(<argument><expr><name pos:line="213" pos:column="47">regex_t<pos:position pos:line="213" pos:column="54"/></name></expr></argument>)<pos:position pos:line="213" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="213" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="57"/></expr_stmt>
	<if pos:line="214" pos:column="9">if <condition pos:line="214" pos:column="12">(<expr><operator pos:line="214" pos:column="13">(<pos:position pos:line="214" pos:column="14"/></operator><name pos:line="214" pos:column="14">e<pos:position pos:line="214" pos:column="15"/></name> <operator pos:line="214" pos:column="16">=<pos:position pos:line="214" pos:column="17"/></operator> <call><name pos:line="214" pos:column="18">REGCOMP<pos:position pos:line="214" pos:column="25"/></name> <argument_list pos:line="214" pos:column="26">(<argument><expr><name pos:line="214" pos:column="27">rx<pos:position pos:line="214" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="31">p<pos:position pos:line="214" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="34">flags<pos:position pos:line="214" pos:column="39"/></name></expr></argument>)<pos:position pos:line="214" pos:column="40"/></argument_list></call><operator pos:line="214" pos:column="40">)<pos:position pos:line="214" pos:column="41"/></operator> <operator pos:line="214" pos:column="42">!=<pos:position pos:line="214" pos:column="44"/></operator> <literal type="number" pos:line="214" pos:column="45">0<pos:position pos:line="214" pos:column="46"/></literal></expr>)<pos:position pos:line="214" pos:column="47"/></condition><then pos:line="214" pos:column="47">
	<block pos:line="215" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="216" pos:column="11">regerror<pos:position pos:line="216" pos:column="19"/></name> <argument_list pos:line="216" pos:column="20">(<argument><expr><name pos:line="216" pos:column="21">e<pos:position pos:line="216" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="24">rx<pos:position pos:line="216" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="216" pos:column="28">err<pos:position pos:line="216" pos:column="31"/></name><operator pos:line="216" pos:column="31">-&gt;<pos:position pos:line="216" pos:column="36"/></operator><name pos:line="216" pos:column="33">data<pos:position pos:line="216" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="216" pos:column="39">err<pos:position pos:line="216" pos:column="42"/></name><operator pos:line="216" pos:column="42">-&gt;<pos:position pos:line="216" pos:column="47"/></operator><name pos:line="216" pos:column="44">dsize<pos:position pos:line="216" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="216" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="51"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="217" pos:column="11">regfree<pos:position pos:line="217" pos:column="18"/></name> <argument_list pos:line="217" pos:column="19">(<argument><expr><name pos:line="217" pos:column="20">rx<pos:position pos:line="217" pos:column="22"/></name></expr></argument>)<pos:position pos:line="217" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="24"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="218" pos:column="11">FREE<pos:position pos:line="218" pos:column="15"/></name> <argument_list pos:line="218" pos:column="16">(<argument><expr><operator pos:line="218" pos:column="17">&amp;<pos:position pos:line="218" pos:column="22"/></operator><name pos:line="218" pos:column="18">rx<pos:position pos:line="218" pos:column="20"/></name></expr></argument>)<pos:position pos:line="218" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="22"/></expr_stmt>
	  <break pos:line="219" pos:column="11">break;<pos:position pos:line="219" pos:column="17"/></break>
	}<pos:position pos:line="220" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="222" pos:column="9">/* get here only if everything went smootly */</comment>
	<if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name><name pos:line="223" pos:column="13">ptr<pos:position pos:line="223" pos:column="16"/></name><operator pos:line="223" pos:column="16">-&gt;<pos:position pos:line="223" pos:column="21"/></operator><name pos:line="223" pos:column="18">pattern<pos:position pos:line="223" pos:column="25"/></name></name></expr>)<pos:position pos:line="223" pos:column="26"/></condition><then pos:line="223" pos:column="26">
	<block pos:line="224" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="225" pos:column="11">FREE<pos:position pos:line="225" pos:column="15"/></name> <argument_list pos:line="225" pos:column="16">(<argument><expr><operator pos:line="225" pos:column="17">&amp;<pos:position pos:line="225" pos:column="22"/></operator><name><name pos:line="225" pos:column="18">ptr<pos:position pos:line="225" pos:column="21"/></name><operator pos:line="225" pos:column="21">-&gt;<pos:position pos:line="225" pos:column="26"/></operator><name pos:line="225" pos:column="23">pattern<pos:position pos:line="225" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="225" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="226" pos:column="11">regfree<pos:position pos:line="226" pos:column="18"/></name> <argument_list pos:line="226" pos:column="19">(<argument><expr><operator pos:line="226" pos:column="20">(<pos:position pos:line="226" pos:column="21"/></operator><name pos:line="226" pos:column="21">regex_t<pos:position pos:line="226" pos:column="28"/></name> <operator pos:line="226" pos:column="29">*<pos:position pos:line="226" pos:column="30"/></operator><operator pos:line="226" pos:column="30">)<pos:position pos:line="226" pos:column="31"/></operator> <name><name pos:line="226" pos:column="32">ptr<pos:position pos:line="226" pos:column="35"/></name><operator pos:line="226" pos:column="35">-&gt;<pos:position pos:line="226" pos:column="40"/></operator><name pos:line="226" pos:column="37">rx<pos:position pos:line="226" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="226" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="41"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="227" pos:column="11">FREE<pos:position pos:line="227" pos:column="15"/></name> <argument_list pos:line="227" pos:column="16">(<argument><expr><operator pos:line="227" pos:column="17">&amp;<pos:position pos:line="227" pos:column="22"/></operator><name><name pos:line="227" pos:column="18">ptr<pos:position pos:line="227" pos:column="21"/></name><operator pos:line="227" pos:column="21">-&gt;<pos:position pos:line="227" pos:column="26"/></operator><name pos:line="227" pos:column="23">rx<pos:position pos:line="227" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="227" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="228" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="230" pos:column="9">ptr<pos:position pos:line="230" pos:column="12"/></name><operator pos:line="230" pos:column="12">-&gt;<pos:position pos:line="230" pos:column="17"/></operator><name pos:line="230" pos:column="14">pattern<pos:position pos:line="230" pos:column="21"/></name></name> <operator pos:line="230" pos:column="22">=<pos:position pos:line="230" pos:column="23"/></operator> <call><name pos:line="230" pos:column="24">safe_strdup<pos:position pos:line="230" pos:column="35"/></name> <argument_list pos:line="230" pos:column="36">(<argument><expr><name><name pos:line="230" pos:column="37">tmp<pos:position pos:line="230" pos:column="40"/></name><operator pos:line="230" pos:column="40">-&gt;<pos:position pos:line="230" pos:column="45"/></operator><name pos:line="230" pos:column="42">data<pos:position pos:line="230" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="230" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="231" pos:column="9">ptr<pos:position pos:line="231" pos:column="12"/></name><operator pos:line="231" pos:column="12">-&gt;<pos:position pos:line="231" pos:column="17"/></operator><name pos:line="231" pos:column="14">rx<pos:position pos:line="231" pos:column="16"/></name></name> <operator pos:line="231" pos:column="17">=<pos:position pos:line="231" pos:column="18"/></operator> <name pos:line="231" pos:column="19">rx<pos:position pos:line="231" pos:column="21"/></name></expr>;<pos:position pos:line="231" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="232" pos:column="9">ptr<pos:position pos:line="232" pos:column="12"/></name><operator pos:line="232" pos:column="12">-&gt;<pos:position pos:line="232" pos:column="17"/></operator></name><operator pos:line="232" pos:column="14">not<pos:position pos:line="232" pos:column="17"/></operator> <operator pos:line="232" pos:column="18">=<pos:position pos:line="232" pos:column="19"/></operator> <operator pos:line="232" pos:column="20">not<pos:position pos:line="232" pos:column="23"/></operator></expr>;<pos:position pos:line="232" pos:column="24"/></expr_stmt>

	<comment type="block" pos:line="234" pos:column="9">/* $reply_regexp and $alterantes require special treatment */</comment>
	
	<if pos:line="236" pos:column="9">if <condition pos:line="236" pos:column="12">(<expr><name pos:line="236" pos:column="13">Context<pos:position pos:line="236" pos:column="20"/></name> <operator pos:line="236" pos:column="21">&amp;&amp;<pos:position pos:line="236" pos:column="31"/></operator> <name><name pos:line="236" pos:column="24">Context<pos:position pos:line="236" pos:column="31"/></name><operator pos:line="236" pos:column="31">-&gt;<pos:position pos:line="236" pos:column="36"/></operator><name pos:line="236" pos:column="33">msgcount<pos:position pos:line="236" pos:column="41"/></name></name> <operator pos:line="236" pos:column="42">&amp;&amp;<pos:position pos:line="236" pos:column="52"/></operator>
	    <call><name pos:line="237" pos:column="13">mutt_strcmp<pos:position pos:line="237" pos:column="24"/></name> <argument_list pos:line="237" pos:column="25">(<argument><expr><name><name pos:line="237" pos:column="26">MuttVars<pos:position pos:line="237" pos:column="34"/></name><index pos:line="237" pos:column="34">[<expr><name pos:line="237" pos:column="35">idx<pos:position pos:line="237" pos:column="38"/></name></expr>]<pos:position pos:line="237" pos:column="39"/></index></name><operator pos:line="237" pos:column="39">.<pos:position pos:line="237" pos:column="40"/></operator><name pos:line="237" pos:column="40">option<pos:position pos:line="237" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="48">"reply_regexp"<pos:position pos:line="237" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="63"/></argument_list></call> <operator pos:line="237" pos:column="64">==<pos:position pos:line="237" pos:column="66"/></operator> <literal type="number" pos:line="237" pos:column="67">0<pos:position pos:line="237" pos:column="68"/></literal></expr>)<pos:position pos:line="237" pos:column="69"/></condition><then pos:line="237" pos:column="69">
	<block pos:line="238" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="239" pos:column="11">regmatch_t<pos:position pos:line="239" pos:column="21"/></name></type> <name><name pos:line="239" pos:column="22">pmatch<pos:position pos:line="239" pos:column="28"/></name><index pos:line="239" pos:column="28">[<expr><literal type="number" pos:line="239" pos:column="29">1<pos:position pos:line="239" pos:column="30"/></literal></expr>]<pos:position pos:line="239" pos:column="31"/></index></name></decl>;<pos:position pos:line="239" pos:column="32"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="240" pos:column="11">int<pos:position pos:line="240" pos:column="14"/></name></type> <name pos:line="240" pos:column="15">i<pos:position pos:line="240" pos:column="16"/></name></decl>;<pos:position pos:line="240" pos:column="17"/></decl_stmt>
	  
<cpp:define pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">define<pos:position pos:line="242" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="242" pos:column="9">CUR_ENV<pos:position pos:line="242" pos:column="16"/></name></cpp:macro> <cpp:value pos:line="242" pos:column="17">Context-&gt;hdrs[i]-&gt;env<pos:position pos:line="242" pos:column="38"/></cpp:value></cpp:define>
	  <for pos:line="243" pos:column="11">for <control pos:line="243" pos:column="15">(<init><expr><name pos:line="243" pos:column="16">i<pos:position pos:line="243" pos:column="17"/></name> <operator pos:line="243" pos:column="18">=<pos:position pos:line="243" pos:column="19"/></operator> <literal type="number" pos:line="243" pos:column="20">0<pos:position pos:line="243" pos:column="21"/></literal></expr>;<pos:position pos:line="243" pos:column="22"/></init> <condition><expr><name pos:line="243" pos:column="23">i<pos:position pos:line="243" pos:column="24"/></name> <operator pos:line="243" pos:column="25">&lt;<pos:position pos:line="243" pos:column="29"/></operator> <name><name pos:line="243" pos:column="27">Context<pos:position pos:line="243" pos:column="34"/></name><operator pos:line="243" pos:column="34">-&gt;<pos:position pos:line="243" pos:column="39"/></operator><name pos:line="243" pos:column="36">msgcount<pos:position pos:line="243" pos:column="44"/></name></name></expr>;<pos:position pos:line="243" pos:column="45"/></condition> <incr><expr><name pos:line="243" pos:column="46">i<pos:position pos:line="243" pos:column="47"/></name><operator pos:line="243" pos:column="47">++<pos:position pos:line="243" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="243" pos:column="50"/></control>
	  <block pos:line="244" pos:column="11">{
	    <if pos:line="245" pos:column="13">if <condition pos:line="245" pos:column="16">(<expr><name pos:line="245" pos:column="17">CUR_ENV<pos:position pos:line="245" pos:column="24"/></name> <operator pos:line="245" pos:column="25">&amp;&amp;<pos:position pos:line="245" pos:column="35"/></operator> <name><name pos:line="245" pos:column="28">CUR_ENV<pos:position pos:line="245" pos:column="35"/></name><operator pos:line="245" pos:column="35">-&gt;<pos:position pos:line="245" pos:column="40"/></operator><name pos:line="245" pos:column="37">subject<pos:position pos:line="245" pos:column="44"/></name></name></expr>)<pos:position pos:line="245" pos:column="45"/></condition><then pos:line="245" pos:column="45">
	    <block pos:line="246" pos:column="13">{
	      <expr_stmt><expr><name><name pos:line="247" pos:column="15">CUR_ENV<pos:position pos:line="247" pos:column="22"/></name><operator pos:line="247" pos:column="22">-&gt;<pos:position pos:line="247" pos:column="27"/></operator><name pos:line="247" pos:column="24">real_subj<pos:position pos:line="247" pos:column="33"/></name></name> <operator pos:line="247" pos:column="34">=<pos:position pos:line="247" pos:column="35"/></operator> <ternary><condition><expr><operator pos:line="247" pos:column="36">(<pos:position pos:line="247" pos:column="37"/></operator><call><name pos:line="247" pos:column="37">regexec<pos:position pos:line="247" pos:column="44"/></name> <argument_list pos:line="247" pos:column="45">(<argument><expr><name><name pos:line="247" pos:column="46">ReplyRegexp<pos:position pos:line="247" pos:column="57"/></name><operator pos:line="247" pos:column="57">.<pos:position pos:line="247" pos:column="58"/></operator><name pos:line="247" pos:column="58">rx<pos:position pos:line="247" pos:column="60"/></name></name></expr></argument>,
				    <argument><expr><name><name pos:line="248" pos:column="37">CUR_ENV<pos:position pos:line="248" pos:column="44"/></name><operator pos:line="248" pos:column="44">-&gt;<pos:position pos:line="248" pos:column="49"/></operator><name pos:line="248" pos:column="46">subject<pos:position pos:line="248" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="248" pos:column="55">1<pos:position pos:line="248" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="248" pos:column="58">pmatch<pos:position pos:line="248" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="248" pos:column="66">0<pos:position pos:line="248" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="248" pos:column="68"/></argument_list></call><operator pos:line="248" pos:column="68">)<pos:position pos:line="248" pos:column="69"/></operator></expr> ?<pos:position pos:line="248" pos:column="71"/></condition><then pos:line="248" pos:column="71">
				    <expr><name><name pos:line="249" pos:column="37">CUR_ENV<pos:position pos:line="249" pos:column="44"/></name><operator pos:line="249" pos:column="44">-&gt;<pos:position pos:line="249" pos:column="49"/></operator><name pos:line="249" pos:column="46">subject<pos:position pos:line="249" pos:column="53"/></name></name></expr> <pos:position pos:line="249" pos:column="54"/></then><else pos:line="249" pos:column="54">: 
				    <expr><name><name pos:line="250" pos:column="37">CUR_ENV<pos:position pos:line="250" pos:column="44"/></name><operator pos:line="250" pos:column="44">-&gt;<pos:position pos:line="250" pos:column="49"/></operator><name pos:line="250" pos:column="46">subject<pos:position pos:line="250" pos:column="53"/></name></name> <operator pos:line="250" pos:column="54">+<pos:position pos:line="250" pos:column="55"/></operator> <name><name pos:line="250" pos:column="56">pmatch<pos:position pos:line="250" pos:column="62"/></name><index pos:line="250" pos:column="62">[<expr><literal type="number" pos:line="250" pos:column="63">0<pos:position pos:line="250" pos:column="64"/></literal></expr>]<pos:position pos:line="250" pos:column="65"/></index></name><operator pos:line="250" pos:column="65">.<pos:position pos:line="250" pos:column="66"/></operator><name pos:line="250" pos:column="66">rm_eo<pos:position pos:line="250" pos:column="71"/></name></expr></else></ternary></expr>;<pos:position pos:line="250" pos:column="72"/></expr_stmt>
	    }<pos:position pos:line="251" pos:column="14"/></block></then></if>
	  }<pos:position pos:line="252" pos:column="12"/></block></for>
<cpp:undef pos:line="253" pos:column="1">#<cpp:directive pos:line="253" pos:column="2">undef<pos:position pos:line="253" pos:column="7"/></cpp:directive> <name pos:line="253" pos:column="8">CUR_ENV<pos:position pos:line="253" pos:column="15"/></name></cpp:undef>
	}<pos:position pos:line="254" pos:column="10"/></block></then></if>
	
	<if pos:line="256" pos:column="9">if<condition pos:line="256" pos:column="11">(<expr><name pos:line="256" pos:column="12">Context<pos:position pos:line="256" pos:column="19"/></name> <operator pos:line="256" pos:column="20">&amp;&amp;<pos:position pos:line="256" pos:column="30"/></operator> <name><name pos:line="256" pos:column="23">Context<pos:position pos:line="256" pos:column="30"/></name><operator pos:line="256" pos:column="30">-&gt;<pos:position pos:line="256" pos:column="35"/></operator><name pos:line="256" pos:column="32">msgcount<pos:position pos:line="256" pos:column="40"/></name></name> <operator pos:line="256" pos:column="41">&amp;&amp;<pos:position pos:line="256" pos:column="51"/></operator>
	   <call><name pos:line="257" pos:column="12">mutt_strcmp<pos:position pos:line="257" pos:column="23"/></name><argument_list pos:line="257" pos:column="23">(<argument><expr><name><name pos:line="257" pos:column="24">MuttVars<pos:position pos:line="257" pos:column="32"/></name><index pos:line="257" pos:column="32">[<expr><name pos:line="257" pos:column="33">idx<pos:position pos:line="257" pos:column="36"/></name></expr>]<pos:position pos:line="257" pos:column="37"/></index></name><operator pos:line="257" pos:column="37">.<pos:position pos:line="257" pos:column="38"/></operator><name pos:line="257" pos:column="38">option<pos:position pos:line="257" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="46">"alternates"<pos:position pos:line="257" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="59"/></argument_list></call> <operator pos:line="257" pos:column="60">==<pos:position pos:line="257" pos:column="62"/></operator> <literal type="number" pos:line="257" pos:column="63">0<pos:position pos:line="257" pos:column="64"/></literal></expr>)<pos:position pos:line="257" pos:column="65"/></condition><then pos:line="257" pos:column="65">
	<block pos:line="258" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="259" pos:column="11">int<pos:position pos:line="259" pos:column="14"/></name></type> <name pos:line="259" pos:column="15">i<pos:position pos:line="259" pos:column="16"/></name></decl>;<pos:position pos:line="259" pos:column="17"/></decl_stmt>
	  
	  <for pos:line="261" pos:column="11">for<control pos:line="261" pos:column="14">(<init><expr><name pos:line="261" pos:column="15">i<pos:position pos:line="261" pos:column="16"/></name> <operator pos:line="261" pos:column="17">=<pos:position pos:line="261" pos:column="18"/></operator> <literal type="number" pos:line="261" pos:column="19">0<pos:position pos:line="261" pos:column="20"/></literal></expr>;<pos:position pos:line="261" pos:column="21"/></init> <condition><expr><name pos:line="261" pos:column="22">i<pos:position pos:line="261" pos:column="23"/></name> <operator pos:line="261" pos:column="24">&lt;<pos:position pos:line="261" pos:column="28"/></operator> <name><name pos:line="261" pos:column="26">Context<pos:position pos:line="261" pos:column="33"/></name><operator pos:line="261" pos:column="33">-&gt;<pos:position pos:line="261" pos:column="38"/></operator><name pos:line="261" pos:column="35">msgcount<pos:position pos:line="261" pos:column="43"/></name></name></expr>;<pos:position pos:line="261" pos:column="44"/></condition> <incr><expr><name pos:line="261" pos:column="45">i<pos:position pos:line="261" pos:column="46"/></name><operator pos:line="261" pos:column="46">++<pos:position pos:line="261" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="261" pos:column="49"/></control>
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="262" pos:column="13">Context<pos:position pos:line="262" pos:column="20"/></name><operator pos:line="262" pos:column="20">-&gt;<pos:position pos:line="262" pos:column="25"/></operator><name pos:line="262" pos:column="22">hdrs<pos:position pos:line="262" pos:column="26"/></name><index pos:line="262" pos:column="26">[<expr><name pos:line="262" pos:column="27">i<pos:position pos:line="262" pos:column="28"/></name></expr>]<pos:position pos:line="262" pos:column="29"/></index></name><operator pos:line="262" pos:column="29">-&gt;<pos:position pos:line="262" pos:column="34"/></operator><name pos:line="262" pos:column="31">recip_valid<pos:position pos:line="262" pos:column="42"/></name> <operator pos:line="262" pos:column="43">=<pos:position pos:line="262" pos:column="44"/></operator> <literal type="number" pos:line="262" pos:column="45">0<pos:position pos:line="262" pos:column="46"/></literal></expr>;<pos:position pos:line="262" pos:column="47"/></expr_stmt></block></for>
	}<pos:position pos:line="263" pos:column="10"/></block></then></if>
      }<pos:position pos:line="264" pos:column="8"/></block></then></if>
    }<pos:position pos:line="265" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="266" pos:column="5">else <if pos:line="266" pos:column="10">if <condition pos:line="266" pos:column="13">(<expr><call><name pos:line="266" pos:column="14">DTYPE<pos:position pos:line="266" pos:column="19"/></name><argument_list pos:line="266" pos:column="19">(<argument><expr><name><name pos:line="266" pos:column="20">MuttVars<pos:position pos:line="266" pos:column="28"/></name><index pos:line="266" pos:column="28">[<expr><name pos:line="266" pos:column="29">idx<pos:position pos:line="266" pos:column="32"/></name></expr>]<pos:position pos:line="266" pos:column="33"/></index></name><operator pos:line="266" pos:column="33">.<pos:position pos:line="266" pos:column="34"/></operator><name pos:line="266" pos:column="34">type<pos:position pos:line="266" pos:column="38"/></name></expr></argument>)<pos:position pos:line="266" pos:column="39"/></argument_list></call> <operator pos:line="266" pos:column="40">==<pos:position pos:line="266" pos:column="42"/></operator> <name pos:line="266" pos:column="43">DT_MAGIC<pos:position pos:line="266" pos:column="51"/></name></expr>)<pos:position pos:line="266" pos:column="52"/></condition><then pos:line="266" pos:column="52">
    <block pos:line="267" pos:column="5">{
      <if pos:line="268" pos:column="7">if <condition pos:line="268" pos:column="10">(<expr><name pos:line="268" pos:column="11">query<pos:position pos:line="268" pos:column="16"/></name> <operator pos:line="268" pos:column="17">||<pos:position pos:line="268" pos:column="19"/></operator> <operator pos:line="268" pos:column="20">*<pos:position pos:line="268" pos:column="21"/></operator><name><name pos:line="268" pos:column="21">s<pos:position pos:line="268" pos:column="22"/></name><operator pos:line="268" pos:column="22">-&gt;<pos:position pos:line="268" pos:column="27"/></operator><name pos:line="268" pos:column="24">dptr<pos:position pos:line="268" pos:column="28"/></name></name> <operator pos:line="268" pos:column="29">!=<pos:position pos:line="268" pos:column="31"/></operator> <literal type="char" pos:line="268" pos:column="32">'='<pos:position pos:line="268" pos:column="35"/></literal></expr>)<pos:position pos:line="268" pos:column="36"/></condition><then pos:line="268" pos:column="36">
      <block pos:line="269" pos:column="7">{
	<switch pos:line="270" pos:column="9">switch <condition pos:line="270" pos:column="16">(<expr><name pos:line="270" pos:column="17">DefaultMagic<pos:position pos:line="270" pos:column="29"/></name></expr>)<pos:position pos:line="270" pos:column="30"/></condition>
	<block pos:line="271" pos:column="9">{
	  <case pos:line="272" pos:column="11">case <expr><name pos:line="272" pos:column="16">M_MBOX<pos:position pos:line="272" pos:column="22"/></name></expr>:<pos:position pos:line="272" pos:column="23"/></case>
	    <expr_stmt><expr><name pos:line="273" pos:column="13">p<pos:position pos:line="273" pos:column="14"/></name> <operator pos:line="273" pos:column="15">=<pos:position pos:line="273" pos:column="16"/></operator> <literal type="string" pos:line="273" pos:column="17">"mbox"<pos:position pos:line="273" pos:column="23"/></literal></expr>;<pos:position pos:line="273" pos:column="24"/></expr_stmt>
	    <break pos:line="274" pos:column="13">break;<pos:position pos:line="274" pos:column="19"/></break>
	  <case pos:line="275" pos:column="11">case <expr><name pos:line="275" pos:column="16">M_MMDF<pos:position pos:line="275" pos:column="22"/></name></expr>:<pos:position pos:line="275" pos:column="23"/></case>
	    <expr_stmt><expr><name pos:line="276" pos:column="13">p<pos:position pos:line="276" pos:column="14"/></name> <operator pos:line="276" pos:column="15">=<pos:position pos:line="276" pos:column="16"/></operator> <literal type="string" pos:line="276" pos:column="17">"MMDF"<pos:position pos:line="276" pos:column="23"/></literal></expr>;<pos:position pos:line="276" pos:column="24"/></expr_stmt>
	    <break pos:line="277" pos:column="13">break;<pos:position pos:line="277" pos:column="19"/></break>
	  <case pos:line="278" pos:column="11">case <expr><name pos:line="278" pos:column="16">M_KENDRA<pos:position pos:line="278" pos:column="24"/></name></expr>:<pos:position pos:line="278" pos:column="25"/></case>
	    <expr_stmt><expr><name pos:line="279" pos:column="13">p<pos:position pos:line="279" pos:column="14"/></name> <operator pos:line="279" pos:column="15">=<pos:position pos:line="279" pos:column="16"/></operator> <literal type="string" pos:line="279" pos:column="17">"KENDRA"<pos:position pos:line="279" pos:column="25"/></literal></expr>;<pos:position pos:line="279" pos:column="26"/></expr_stmt>
	    <break pos:line="280" pos:column="13">break;<pos:position pos:line="280" pos:column="19"/></break>
	  <case pos:line="281" pos:column="11">case <expr><name pos:line="281" pos:column="16">M_MH<pos:position pos:line="281" pos:column="20"/></name></expr>:<pos:position pos:line="281" pos:column="21"/></case>
	    <expr_stmt><expr><name pos:line="282" pos:column="13">p<pos:position pos:line="282" pos:column="14"/></name> <operator pos:line="282" pos:column="15">=<pos:position pos:line="282" pos:column="16"/></operator> <literal type="string" pos:line="282" pos:column="17">"MH"<pos:position pos:line="282" pos:column="21"/></literal></expr>;<pos:position pos:line="282" pos:column="22"/></expr_stmt>
	    <break pos:line="283" pos:column="13">break;<pos:position pos:line="283" pos:column="19"/></break>
	  <case pos:line="284" pos:column="11">case <expr><name pos:line="284" pos:column="16">M_MAILDIR<pos:position pos:line="284" pos:column="25"/></name></expr>:<pos:position pos:line="284" pos:column="26"/></case>
	    <expr_stmt><expr><name pos:line="285" pos:column="13">p<pos:position pos:line="285" pos:column="14"/></name> <operator pos:line="285" pos:column="15">=<pos:position pos:line="285" pos:column="16"/></operator> <literal type="string" pos:line="285" pos:column="17">"Maildir"<pos:position pos:line="285" pos:column="26"/></literal></expr>;<pos:position pos:line="285" pos:column="27"/></expr_stmt>
	    <break pos:line="286" pos:column="13">break;<pos:position pos:line="286" pos:column="19"/></break>
	  <default pos:line="287" pos:column="11">default:<pos:position pos:line="287" pos:column="19"/></default>
	    <expr_stmt><expr><name pos:line="288" pos:column="13">p<pos:position pos:line="288" pos:column="14"/></name> <operator pos:line="288" pos:column="15">=<pos:position pos:line="288" pos:column="16"/></operator> <literal type="string" pos:line="288" pos:column="17">"unknown"<pos:position pos:line="288" pos:column="26"/></literal></expr>;<pos:position pos:line="288" pos:column="27"/></expr_stmt>
	    <break pos:line="289" pos:column="13">break;<pos:position pos:line="289" pos:column="19"/></break>
	}<pos:position pos:line="290" pos:column="10"/></block></switch>
	<expr_stmt><expr><call><name pos:line="291" pos:column="9">snprintf<pos:position pos:line="291" pos:column="17"/></name> <argument_list pos:line="291" pos:column="18">(<argument><expr><name><name pos:line="291" pos:column="19">err<pos:position pos:line="291" pos:column="22"/></name><operator pos:line="291" pos:column="22">-&gt;<pos:position pos:line="291" pos:column="27"/></operator><name pos:line="291" pos:column="24">data<pos:position pos:line="291" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="291" pos:column="30">err<pos:position pos:line="291" pos:column="33"/></name><operator pos:line="291" pos:column="33">-&gt;<pos:position pos:line="291" pos:column="38"/></operator><name pos:line="291" pos:column="35">dsize<pos:position pos:line="291" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="42">"%s=%s"<pos:position pos:line="291" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="291" pos:column="51">MuttVars<pos:position pos:line="291" pos:column="59"/></name><index pos:line="291" pos:column="59">[<expr><name pos:line="291" pos:column="60">idx<pos:position pos:line="291" pos:column="63"/></name></expr>]<pos:position pos:line="291" pos:column="64"/></index></name><operator pos:line="291" pos:column="64">.<pos:position pos:line="291" pos:column="65"/></operator><name pos:line="291" pos:column="65">option<pos:position pos:line="291" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="73">p<pos:position pos:line="291" pos:column="74"/></name></expr></argument>)<pos:position pos:line="291" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="76"/></expr_stmt>
	<break pos:line="292" pos:column="9">break;<pos:position pos:line="292" pos:column="15"/></break>
      }<pos:position pos:line="293" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="295" pos:column="7">s<pos:position pos:line="295" pos:column="8"/></name><operator pos:line="295" pos:column="8">-&gt;<pos:position pos:line="295" pos:column="13"/></operator><name pos:line="295" pos:column="10">dptr<pos:position pos:line="295" pos:column="14"/></name></name><operator pos:line="295" pos:column="14">++<pos:position pos:line="295" pos:column="16"/></operator></expr>;<pos:position pos:line="295" pos:column="17"/></expr_stmt>

      <comment type="block" pos:line="297" pos:column="7">/* copy the value of the string */</comment>
      <expr_stmt><expr><call><name pos:line="298" pos:column="7">mutt_extract_token<pos:position pos:line="298" pos:column="25"/></name> <argument_list pos:line="298" pos:column="26">(<argument><expr><name pos:line="298" pos:column="27">tmp<pos:position pos:line="298" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="32">s<pos:position pos:line="298" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="298" pos:column="35">0<pos:position pos:line="298" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="298" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="38"/></expr_stmt>
      <if pos:line="299" pos:column="7">if <condition pos:line="299" pos:column="10">(<expr><call><name pos:line="299" pos:column="11">mx_set_magic<pos:position pos:line="299" pos:column="23"/></name> <argument_list pos:line="299" pos:column="24">(<argument><expr><name><name pos:line="299" pos:column="25">tmp<pos:position pos:line="299" pos:column="28"/></name><operator pos:line="299" pos:column="28">-&gt;<pos:position pos:line="299" pos:column="33"/></operator><name pos:line="299" pos:column="30">data<pos:position pos:line="299" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="299" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="299" pos:column="36"/></condition><then pos:line="299" pos:column="36">
      <block pos:line="300" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="301" pos:column="9">snprintf<pos:position pos:line="301" pos:column="17"/></name> <argument_list pos:line="301" pos:column="18">(<argument><expr><name><name pos:line="301" pos:column="19">err<pos:position pos:line="301" pos:column="22"/></name><operator pos:line="301" pos:column="22">-&gt;<pos:position pos:line="301" pos:column="27"/></operator><name pos:line="301" pos:column="24">data<pos:position pos:line="301" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="301" pos:column="30">err<pos:position pos:line="301" pos:column="33"/></name><operator pos:line="301" pos:column="33">-&gt;<pos:position pos:line="301" pos:column="38"/></operator><name pos:line="301" pos:column="35">dsize<pos:position pos:line="301" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="301" pos:column="42">_<pos:position pos:line="301" pos:column="43"/></name><argument_list pos:line="301" pos:column="43">(<argument><expr><literal type="string" pos:line="301" pos:column="44">"%s: invalid mailbox type"<pos:position pos:line="301" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="301" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="301" pos:column="73">tmp<pos:position pos:line="301" pos:column="76"/></name><operator pos:line="301" pos:column="76">-&gt;<pos:position pos:line="301" pos:column="81"/></operator><name pos:line="301" pos:column="78">data<pos:position pos:line="301" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="301" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="84"/></expr_stmt>
	<expr_stmt><expr><name pos:line="302" pos:column="9">r<pos:position pos:line="302" pos:column="10"/></name> <operator pos:line="302" pos:column="11">=<pos:position pos:line="302" pos:column="12"/></operator> <operator pos:line="302" pos:column="13">-<pos:position pos:line="302" pos:column="14"/></operator><literal type="number" pos:line="302" pos:column="14">1<pos:position pos:line="302" pos:column="15"/></literal></expr>;<pos:position pos:line="302" pos:column="16"/></expr_stmt>
	<break pos:line="303" pos:column="9">break;<pos:position pos:line="303" pos:column="15"/></break>
      }<pos:position pos:line="304" pos:column="8"/></block></then></if>
    }<pos:position pos:line="305" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="306" pos:column="5">else <if pos:line="306" pos:column="10">if <condition pos:line="306" pos:column="13">(<expr><call><name pos:line="306" pos:column="14">DTYPE<pos:position pos:line="306" pos:column="19"/></name><argument_list pos:line="306" pos:column="19">(<argument><expr><name><name pos:line="306" pos:column="20">MuttVars<pos:position pos:line="306" pos:column="28"/></name><index pos:line="306" pos:column="28">[<expr><name pos:line="306" pos:column="29">idx<pos:position pos:line="306" pos:column="32"/></name></expr>]<pos:position pos:line="306" pos:column="33"/></index></name><operator pos:line="306" pos:column="33">.<pos:position pos:line="306" pos:column="34"/></operator><name pos:line="306" pos:column="34">type<pos:position pos:line="306" pos:column="38"/></name></expr></argument>)<pos:position pos:line="306" pos:column="39"/></argument_list></call> <operator pos:line="306" pos:column="40">==<pos:position pos:line="306" pos:column="42"/></operator> <name pos:line="306" pos:column="43">DT_NUM<pos:position pos:line="306" pos:column="49"/></name></expr>)<pos:position pos:line="306" pos:column="50"/></condition><then pos:line="306" pos:column="50">
    <block pos:line="307" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="308" pos:column="7">short<pos:position pos:line="308" pos:column="12"/></name> <modifier pos:line="308" pos:column="13">*<pos:position pos:line="308" pos:column="14"/></modifier></type><name pos:line="308" pos:column="14">ptr<pos:position pos:line="308" pos:column="17"/></name> <init pos:line="308" pos:column="18">= <expr><operator pos:line="308" pos:column="20">(<pos:position pos:line="308" pos:column="21"/></operator><name pos:line="308" pos:column="21">short<pos:position pos:line="308" pos:column="26"/></name> <operator pos:line="308" pos:column="27">*<pos:position pos:line="308" pos:column="28"/></operator><operator pos:line="308" pos:column="28">)<pos:position pos:line="308" pos:column="29"/></operator> <name><name pos:line="308" pos:column="30">MuttVars<pos:position pos:line="308" pos:column="38"/></name><index pos:line="308" pos:column="38">[<expr><name pos:line="308" pos:column="39">idx<pos:position pos:line="308" pos:column="42"/></name></expr>]<pos:position pos:line="308" pos:column="43"/></index></name><operator pos:line="308" pos:column="43">.<pos:position pos:line="308" pos:column="44"/></operator><name pos:line="308" pos:column="44">data<pos:position pos:line="308" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="308" pos:column="49"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="309" pos:column="7">int<pos:position pos:line="309" pos:column="10"/></name></type> <name pos:line="309" pos:column="11">val<pos:position pos:line="309" pos:column="14"/></name></decl>;<pos:position pos:line="309" pos:column="15"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="310" pos:column="7">char<pos:position pos:line="310" pos:column="11"/></name> <modifier pos:line="310" pos:column="12">*<pos:position pos:line="310" pos:column="13"/></modifier></type><name pos:line="310" pos:column="13">t<pos:position pos:line="310" pos:column="14"/></name></decl>;<pos:position pos:line="310" pos:column="15"/></decl_stmt>

      <if pos:line="312" pos:column="7">if <condition pos:line="312" pos:column="10">(<expr><name pos:line="312" pos:column="11">query<pos:position pos:line="312" pos:column="16"/></name> <operator pos:line="312" pos:column="17">||<pos:position pos:line="312" pos:column="19"/></operator> <operator pos:line="312" pos:column="20">*<pos:position pos:line="312" pos:column="21"/></operator><name><name pos:line="312" pos:column="21">s<pos:position pos:line="312" pos:column="22"/></name><operator pos:line="312" pos:column="22">-&gt;<pos:position pos:line="312" pos:column="27"/></operator><name pos:line="312" pos:column="24">dptr<pos:position pos:line="312" pos:column="28"/></name></name> <operator pos:line="312" pos:column="29">!=<pos:position pos:line="312" pos:column="31"/></operator> <literal type="char" pos:line="312" pos:column="32">'='<pos:position pos:line="312" pos:column="35"/></literal></expr>)<pos:position pos:line="312" pos:column="36"/></condition><then pos:line="312" pos:column="36">
      <block pos:line="313" pos:column="7">{
	<comment type="block" pos:line="314" pos:column="9">/* user requested the value of this variable */</comment>
	<expr_stmt><expr><call><name pos:line="315" pos:column="9">snprintf<pos:position pos:line="315" pos:column="17"/></name> <argument_list pos:line="315" pos:column="18">(<argument><expr><name><name pos:line="315" pos:column="19">err<pos:position pos:line="315" pos:column="22"/></name><operator pos:line="315" pos:column="22">-&gt;<pos:position pos:line="315" pos:column="27"/></operator><name pos:line="315" pos:column="24">data<pos:position pos:line="315" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="315" pos:column="30">err<pos:position pos:line="315" pos:column="33"/></name><operator pos:line="315" pos:column="33">-&gt;<pos:position pos:line="315" pos:column="38"/></operator><name pos:line="315" pos:column="35">dsize<pos:position pos:line="315" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="315" pos:column="42">"%s=%d"<pos:position pos:line="315" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="315" pos:column="51">MuttVars<pos:position pos:line="315" pos:column="59"/></name><index pos:line="315" pos:column="59">[<expr><name pos:line="315" pos:column="60">idx<pos:position pos:line="315" pos:column="63"/></name></expr>]<pos:position pos:line="315" pos:column="64"/></index></name><operator pos:line="315" pos:column="64">.<pos:position pos:line="315" pos:column="65"/></operator><name pos:line="315" pos:column="65">option<pos:position pos:line="315" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="315" pos:column="73">*<pos:position pos:line="315" pos:column="74"/></operator><name pos:line="315" pos:column="74">ptr<pos:position pos:line="315" pos:column="77"/></name></expr></argument>)<pos:position pos:line="315" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="79"/></expr_stmt>
	<break pos:line="316" pos:column="9">break;<pos:position pos:line="316" pos:column="15"/></break>
      }<pos:position pos:line="317" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="319" pos:column="7">s<pos:position pos:line="319" pos:column="8"/></name><operator pos:line="319" pos:column="8">-&gt;<pos:position pos:line="319" pos:column="13"/></operator><name pos:line="319" pos:column="10">dptr<pos:position pos:line="319" pos:column="14"/></name></name><operator pos:line="319" pos:column="14">++<pos:position pos:line="319" pos:column="16"/></operator></expr>;<pos:position pos:line="319" pos:column="17"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="321" pos:column="7">mutt_extract_token<pos:position pos:line="321" pos:column="25"/></name> <argument_list pos:line="321" pos:column="26">(<argument><expr><name pos:line="321" pos:column="27">tmp<pos:position pos:line="321" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="32">s<pos:position pos:line="321" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="321" pos:column="35">0<pos:position pos:line="321" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="321" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name pos:line="322" pos:column="7">val<pos:position pos:line="322" pos:column="10"/></name> <operator pos:line="322" pos:column="11">=<pos:position pos:line="322" pos:column="12"/></operator> <call><name pos:line="322" pos:column="13">strtol<pos:position pos:line="322" pos:column="19"/></name> <argument_list pos:line="322" pos:column="20">(<argument><expr><name><name pos:line="322" pos:column="21">tmp<pos:position pos:line="322" pos:column="24"/></name><operator pos:line="322" pos:column="24">-&gt;<pos:position pos:line="322" pos:column="29"/></operator><name pos:line="322" pos:column="26">data<pos:position pos:line="322" pos:column="30"/></name></name></expr></argument>, <argument><expr><operator pos:line="322" pos:column="32">&amp;<pos:position pos:line="322" pos:column="37"/></operator><name pos:line="322" pos:column="33">t<pos:position pos:line="322" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="322" pos:column="36">0<pos:position pos:line="322" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="39"/></expr_stmt>

      <if pos:line="324" pos:column="7">if <condition pos:line="324" pos:column="10">(<expr><operator pos:line="324" pos:column="11">!<pos:position pos:line="324" pos:column="12"/></operator><operator pos:line="324" pos:column="12">*<pos:position pos:line="324" pos:column="13"/></operator><name><name pos:line="324" pos:column="13">tmp<pos:position pos:line="324" pos:column="16"/></name><operator pos:line="324" pos:column="16">-&gt;<pos:position pos:line="324" pos:column="21"/></operator><name pos:line="324" pos:column="18">data<pos:position pos:line="324" pos:column="22"/></name></name> <operator pos:line="324" pos:column="23">||<pos:position pos:line="324" pos:column="25"/></operator> <operator pos:line="324" pos:column="26">*<pos:position pos:line="324" pos:column="27"/></operator><name pos:line="324" pos:column="27">t<pos:position pos:line="324" pos:column="28"/></name> <operator pos:line="324" pos:column="29">||<pos:position pos:line="324" pos:column="31"/></operator> <operator pos:line="324" pos:column="32">(<pos:position pos:line="324" pos:column="33"/></operator><name pos:line="324" pos:column="33">short<pos:position pos:line="324" pos:column="38"/></name><operator pos:line="324" pos:column="38">)<pos:position pos:line="324" pos:column="39"/></operator> <name pos:line="324" pos:column="40">val<pos:position pos:line="324" pos:column="43"/></name> <operator pos:line="324" pos:column="44">!=<pos:position pos:line="324" pos:column="46"/></operator> <name pos:line="324" pos:column="47">val<pos:position pos:line="324" pos:column="50"/></name></expr>)<pos:position pos:line="324" pos:column="51"/></condition><then pos:line="324" pos:column="51">
      <block pos:line="325" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="326" pos:column="9">snprintf<pos:position pos:line="326" pos:column="17"/></name> <argument_list pos:line="326" pos:column="18">(<argument><expr><name><name pos:line="326" pos:column="19">err<pos:position pos:line="326" pos:column="22"/></name><operator pos:line="326" pos:column="22">-&gt;<pos:position pos:line="326" pos:column="27"/></operator><name pos:line="326" pos:column="24">data<pos:position pos:line="326" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="326" pos:column="30">err<pos:position pos:line="326" pos:column="33"/></name><operator pos:line="326" pos:column="33">-&gt;<pos:position pos:line="326" pos:column="38"/></operator><name pos:line="326" pos:column="35">dsize<pos:position pos:line="326" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="326" pos:column="42">_<pos:position pos:line="326" pos:column="43"/></name><argument_list pos:line="326" pos:column="43">(<argument><expr><literal type="string" pos:line="326" pos:column="44">"%s: invalid value"<pos:position pos:line="326" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="326" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="326" pos:column="66">tmp<pos:position pos:line="326" pos:column="69"/></name><operator pos:line="326" pos:column="69">-&gt;<pos:position pos:line="326" pos:column="74"/></operator><name pos:line="326" pos:column="71">data<pos:position pos:line="326" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="326" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><name pos:line="327" pos:column="9">r<pos:position pos:line="327" pos:column="10"/></name> <operator pos:line="327" pos:column="11">=<pos:position pos:line="327" pos:column="12"/></operator> <operator pos:line="327" pos:column="13">-<pos:position pos:line="327" pos:column="14"/></operator><literal type="number" pos:line="327" pos:column="14">1<pos:position pos:line="327" pos:column="15"/></literal></expr>;<pos:position pos:line="327" pos:column="16"/></expr_stmt>
	<break pos:line="328" pos:column="9">break;<pos:position pos:line="328" pos:column="15"/></break>
      }<pos:position pos:line="329" pos:column="8"/></block></then>
      <else pos:line="330" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><operator pos:line="331" pos:column="9">*<pos:position pos:line="331" pos:column="10"/></operator><name pos:line="331" pos:column="10">ptr<pos:position pos:line="331" pos:column="13"/></name> <operator pos:line="331" pos:column="14">=<pos:position pos:line="331" pos:column="15"/></operator> <operator pos:line="331" pos:column="16">(<pos:position pos:line="331" pos:column="17"/></operator><name pos:line="331" pos:column="17">short<pos:position pos:line="331" pos:column="22"/></name><operator pos:line="331" pos:column="22">)<pos:position pos:line="331" pos:column="23"/></operator> <name pos:line="331" pos:column="24">val<pos:position pos:line="331" pos:column="27"/></name></expr>;<pos:position pos:line="331" pos:column="28"/></expr_stmt></block></else></if>

      <comment type="block" pos:line="333" pos:column="7">/* these ones need a sanity check */</comment>
      <if pos:line="334" pos:column="7">if <condition pos:line="334" pos:column="10">(<expr><call><name pos:line="334" pos:column="11">mutt_strcmp<pos:position pos:line="334" pos:column="22"/></name> <argument_list pos:line="334" pos:column="23">(<argument><expr><name><name pos:line="334" pos:column="24">MuttVars<pos:position pos:line="334" pos:column="32"/></name><index pos:line="334" pos:column="32">[<expr><name pos:line="334" pos:column="33">idx<pos:position pos:line="334" pos:column="36"/></name></expr>]<pos:position pos:line="334" pos:column="37"/></index></name><operator pos:line="334" pos:column="37">.<pos:position pos:line="334" pos:column="38"/></operator><name pos:line="334" pos:column="38">option<pos:position pos:line="334" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="46">"history"<pos:position pos:line="334" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="334" pos:column="56"/></argument_list></call> <operator pos:line="334" pos:column="57">==<pos:position pos:line="334" pos:column="59"/></operator> <literal type="number" pos:line="334" pos:column="60">0<pos:position pos:line="334" pos:column="61"/></literal></expr>)<pos:position pos:line="334" pos:column="62"/></condition><then pos:line="334" pos:column="62">
      <block pos:line="335" pos:column="7">{
	<if pos:line="336" pos:column="9">if <condition pos:line="336" pos:column="12">(<expr><operator pos:line="336" pos:column="13">*<pos:position pos:line="336" pos:column="14"/></operator><name pos:line="336" pos:column="14">ptr<pos:position pos:line="336" pos:column="17"/></name> <operator pos:line="336" pos:column="18">&lt;<pos:position pos:line="336" pos:column="22"/></operator> <literal type="number" pos:line="336" pos:column="20">0<pos:position pos:line="336" pos:column="21"/></literal></expr>)<pos:position pos:line="336" pos:column="22"/></condition><then pos:line="336" pos:column="22">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="337" pos:column="11">*<pos:position pos:line="337" pos:column="12"/></operator><name pos:line="337" pos:column="12">ptr<pos:position pos:line="337" pos:column="15"/></name> <operator pos:line="337" pos:column="16">=<pos:position pos:line="337" pos:column="17"/></operator> <literal type="number" pos:line="337" pos:column="18">0<pos:position pos:line="337" pos:column="19"/></literal></expr>;<pos:position pos:line="337" pos:column="20"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="338" pos:column="9">mutt_init_history<pos:position pos:line="338" pos:column="26"/></name> <argument_list pos:line="338" pos:column="27">()<pos:position pos:line="338" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="339" pos:column="8"/></block></then>
      <elseif pos:line="340" pos:column="7">else <if pos:line="340" pos:column="12">if <condition pos:line="340" pos:column="15">(<expr><call><name pos:line="340" pos:column="16">mutt_strcmp<pos:position pos:line="340" pos:column="27"/></name> <argument_list pos:line="340" pos:column="28">(<argument><expr><name><name pos:line="340" pos:column="29">MuttVars<pos:position pos:line="340" pos:column="37"/></name><index pos:line="340" pos:column="37">[<expr><name pos:line="340" pos:column="38">idx<pos:position pos:line="340" pos:column="41"/></name></expr>]<pos:position pos:line="340" pos:column="42"/></index></name><operator pos:line="340" pos:column="42">.<pos:position pos:line="340" pos:column="43"/></operator><name pos:line="340" pos:column="43">option<pos:position pos:line="340" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="340" pos:column="51">"pager_index_lines"<pos:position pos:line="340" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="340" pos:column="71"/></argument_list></call> <operator pos:line="340" pos:column="72">==<pos:position pos:line="340" pos:column="74"/></operator> <literal type="number" pos:line="340" pos:column="75">0<pos:position pos:line="340" pos:column="76"/></literal></expr>)<pos:position pos:line="340" pos:column="77"/></condition><then pos:line="340" pos:column="77">
      <block pos:line="341" pos:column="7">{
	<if pos:line="342" pos:column="9">if <condition pos:line="342" pos:column="12">(<expr><operator pos:line="342" pos:column="13">*<pos:position pos:line="342" pos:column="14"/></operator><name pos:line="342" pos:column="14">ptr<pos:position pos:line="342" pos:column="17"/></name> <operator pos:line="342" pos:column="18">&lt;<pos:position pos:line="342" pos:column="22"/></operator> <literal type="number" pos:line="342" pos:column="20">0<pos:position pos:line="342" pos:column="21"/></literal></expr>)<pos:position pos:line="342" pos:column="22"/></condition><then pos:line="342" pos:column="22">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="343" pos:column="11">*<pos:position pos:line="343" pos:column="12"/></operator><name pos:line="343" pos:column="12">ptr<pos:position pos:line="343" pos:column="15"/></name> <operator pos:line="343" pos:column="16">=<pos:position pos:line="343" pos:column="17"/></operator> <literal type="number" pos:line="343" pos:column="18">0<pos:position pos:line="343" pos:column="19"/></literal></expr>;<pos:position pos:line="343" pos:column="20"/></expr_stmt></block></then></if>
      }<pos:position pos:line="344" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="345" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="346" pos:column="5">else <if pos:line="346" pos:column="10">if <condition pos:line="346" pos:column="13">(<expr><call><name pos:line="346" pos:column="14">DTYPE<pos:position pos:line="346" pos:column="19"/></name> <argument_list pos:line="346" pos:column="20">(<argument><expr><name><name pos:line="346" pos:column="21">MuttVars<pos:position pos:line="346" pos:column="29"/></name><index pos:line="346" pos:column="29">[<expr><name pos:line="346" pos:column="30">idx<pos:position pos:line="346" pos:column="33"/></name></expr>]<pos:position pos:line="346" pos:column="34"/></index></name><operator pos:line="346" pos:column="34">.<pos:position pos:line="346" pos:column="35"/></operator><name pos:line="346" pos:column="35">type<pos:position pos:line="346" pos:column="39"/></name></expr></argument>)<pos:position pos:line="346" pos:column="40"/></argument_list></call> <operator pos:line="346" pos:column="41">==<pos:position pos:line="346" pos:column="43"/></operator> <name pos:line="346" pos:column="44">DT_QUAD<pos:position pos:line="346" pos:column="51"/></name></expr>)<pos:position pos:line="346" pos:column="52"/></condition><then pos:line="346" pos:column="52">
    <block pos:line="347" pos:column="5">{
      <if pos:line="348" pos:column="7">if <condition pos:line="348" pos:column="10">(<expr><name pos:line="348" pos:column="11">query<pos:position pos:line="348" pos:column="16"/></name></expr>)<pos:position pos:line="348" pos:column="17"/></condition><then pos:line="348" pos:column="17">
      <block pos:line="349" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="350" pos:column="9">char<pos:position pos:line="350" pos:column="13"/></name> <modifier pos:line="350" pos:column="14">*<pos:position pos:line="350" pos:column="15"/></modifier></type><name><name pos:line="350" pos:column="15">vals<pos:position pos:line="350" pos:column="19"/></name><index pos:line="350" pos:column="19">[]<pos:position pos:line="350" pos:column="21"/></index></name> <init pos:line="350" pos:column="22">= <expr><block pos:line="350" pos:column="24">{ <expr><literal type="string" pos:line="350" pos:column="26">"no"<pos:position pos:line="350" pos:column="30"/></literal></expr>, <expr><literal type="string" pos:line="350" pos:column="32">"yes"<pos:position pos:line="350" pos:column="37"/></literal></expr>, <expr><literal type="string" pos:line="350" pos:column="39">"ask-no"<pos:position pos:line="350" pos:column="47"/></literal></expr>, <expr><literal type="string" pos:line="350" pos:column="49">"ask-yes"<pos:position pos:line="350" pos:column="58"/></literal></expr> }<pos:position pos:line="350" pos:column="60"/></block></expr></init></decl>;<pos:position pos:line="350" pos:column="61"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="352" pos:column="9">snprintf<pos:position pos:line="352" pos:column="17"/></name> <argument_list pos:line="352" pos:column="18">(<argument><expr><name><name pos:line="352" pos:column="19">err<pos:position pos:line="352" pos:column="22"/></name><operator pos:line="352" pos:column="22">-&gt;<pos:position pos:line="352" pos:column="27"/></operator><name pos:line="352" pos:column="24">data<pos:position pos:line="352" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="352" pos:column="30">err<pos:position pos:line="352" pos:column="33"/></name><operator pos:line="352" pos:column="33">-&gt;<pos:position pos:line="352" pos:column="38"/></operator><name pos:line="352" pos:column="35">dsize<pos:position pos:line="352" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="352" pos:column="42">"%s=%s"<pos:position pos:line="352" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="352" pos:column="51">MuttVars<pos:position pos:line="352" pos:column="59"/></name><index pos:line="352" pos:column="59">[<expr><name pos:line="352" pos:column="60">idx<pos:position pos:line="352" pos:column="63"/></name></expr>]<pos:position pos:line="352" pos:column="64"/></index></name><operator pos:line="352" pos:column="64">.<pos:position pos:line="352" pos:column="65"/></operator><name pos:line="352" pos:column="65">option<pos:position pos:line="352" pos:column="71"/></name></expr></argument>,
		  <argument><expr><name><name pos:line="353" pos:column="19">vals<pos:position pos:line="353" pos:column="23"/></name> <index pos:line="353" pos:column="24">[ <expr><call><name pos:line="353" pos:column="26">quadoption<pos:position pos:line="353" pos:column="36"/></name> <argument_list pos:line="353" pos:column="37">(<argument><expr><name><name pos:line="353" pos:column="38">MuttVars<pos:position pos:line="353" pos:column="46"/></name><index pos:line="353" pos:column="46">[<expr><name pos:line="353" pos:column="47">idx<pos:position pos:line="353" pos:column="50"/></name></expr>]<pos:position pos:line="353" pos:column="51"/></index></name><operator pos:line="353" pos:column="51">.<pos:position pos:line="353" pos:column="52"/></operator><name pos:line="353" pos:column="52">data<pos:position pos:line="353" pos:column="56"/></name></expr></argument>)<pos:position pos:line="353" pos:column="57"/></argument_list></call></expr> ]<pos:position pos:line="353" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="353" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="61"/></expr_stmt>
	<break pos:line="354" pos:column="9">break;<pos:position pos:line="354" pos:column="15"/></break>
      }<pos:position pos:line="355" pos:column="8"/></block></then></if>

      <if pos:line="357" pos:column="7">if <condition pos:line="357" pos:column="10">(<expr><operator pos:line="357" pos:column="11">*<pos:position pos:line="357" pos:column="12"/></operator><name><name pos:line="357" pos:column="12">s<pos:position pos:line="357" pos:column="13"/></name><operator pos:line="357" pos:column="13">-&gt;<pos:position pos:line="357" pos:column="18"/></operator><name pos:line="357" pos:column="15">dptr<pos:position pos:line="357" pos:column="19"/></name></name> <operator pos:line="357" pos:column="20">==<pos:position pos:line="357" pos:column="22"/></operator> <literal type="char" pos:line="357" pos:column="23">'='<pos:position pos:line="357" pos:column="26"/></literal></expr>)<pos:position pos:line="357" pos:column="27"/></condition><then pos:line="357" pos:column="27">
      <block pos:line="358" pos:column="7">{
	<expr_stmt><expr><name><name pos:line="359" pos:column="9">s<pos:position pos:line="359" pos:column="10"/></name><operator pos:line="359" pos:column="10">-&gt;<pos:position pos:line="359" pos:column="15"/></operator><name pos:line="359" pos:column="12">dptr<pos:position pos:line="359" pos:column="16"/></name></name><operator pos:line="359" pos:column="16">++<pos:position pos:line="359" pos:column="18"/></operator></expr>;<pos:position pos:line="359" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="360" pos:column="9">mutt_extract_token<pos:position pos:line="360" pos:column="27"/></name> <argument_list pos:line="360" pos:column="28">(<argument><expr><name pos:line="360" pos:column="29">tmp<pos:position pos:line="360" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="34">s<pos:position pos:line="360" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="360" pos:column="37">0<pos:position pos:line="360" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="360" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="40"/></expr_stmt>
	<if pos:line="361" pos:column="9">if <condition pos:line="361" pos:column="12">(<expr><call><name pos:line="361" pos:column="13">ascii_strcasecmp<pos:position pos:line="361" pos:column="29"/></name> <argument_list pos:line="361" pos:column="30">(<argument><expr><literal type="string" pos:line="361" pos:column="31">"yes"<pos:position pos:line="361" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="361" pos:column="38">tmp<pos:position pos:line="361" pos:column="41"/></name><operator pos:line="361" pos:column="41">-&gt;<pos:position pos:line="361" pos:column="46"/></operator><name pos:line="361" pos:column="43">data<pos:position pos:line="361" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="361" pos:column="48"/></argument_list></call> <operator pos:line="361" pos:column="49">==<pos:position pos:line="361" pos:column="51"/></operator> <literal type="number" pos:line="361" pos:column="52">0<pos:position pos:line="361" pos:column="53"/></literal></expr>)<pos:position pos:line="361" pos:column="54"/></condition><then pos:line="361" pos:column="54">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="362" pos:column="11">set_quadoption<pos:position pos:line="362" pos:column="25"/></name> <argument_list pos:line="362" pos:column="26">(<argument><expr><name><name pos:line="362" pos:column="27">MuttVars<pos:position pos:line="362" pos:column="35"/></name><index pos:line="362" pos:column="35">[<expr><name pos:line="362" pos:column="36">idx<pos:position pos:line="362" pos:column="39"/></name></expr>]<pos:position pos:line="362" pos:column="40"/></index></name><operator pos:line="362" pos:column="40">.<pos:position pos:line="362" pos:column="41"/></operator><name pos:line="362" pos:column="41">data<pos:position pos:line="362" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="362" pos:column="47">M_YES<pos:position pos:line="362" pos:column="52"/></name></expr></argument>)<pos:position pos:line="362" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="54"/></expr_stmt></block></then>
	<elseif pos:line="363" pos:column="9">else <if pos:line="363" pos:column="14">if <condition pos:line="363" pos:column="17">(<expr><call><name pos:line="363" pos:column="18">ascii_strcasecmp<pos:position pos:line="363" pos:column="34"/></name> <argument_list pos:line="363" pos:column="35">(<argument><expr><literal type="string" pos:line="363" pos:column="36">"no"<pos:position pos:line="363" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="363" pos:column="42">tmp<pos:position pos:line="363" pos:column="45"/></name><operator pos:line="363" pos:column="45">-&gt;<pos:position pos:line="363" pos:column="50"/></operator><name pos:line="363" pos:column="47">data<pos:position pos:line="363" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="363" pos:column="52"/></argument_list></call> <operator pos:line="363" pos:column="53">==<pos:position pos:line="363" pos:column="55"/></operator> <literal type="number" pos:line="363" pos:column="56">0<pos:position pos:line="363" pos:column="57"/></literal></expr>)<pos:position pos:line="363" pos:column="58"/></condition><then pos:line="363" pos:column="58">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="364" pos:column="11">set_quadoption<pos:position pos:line="364" pos:column="25"/></name> <argument_list pos:line="364" pos:column="26">(<argument><expr><name><name pos:line="364" pos:column="27">MuttVars<pos:position pos:line="364" pos:column="35"/></name><index pos:line="364" pos:column="35">[<expr><name pos:line="364" pos:column="36">idx<pos:position pos:line="364" pos:column="39"/></name></expr>]<pos:position pos:line="364" pos:column="40"/></index></name><operator pos:line="364" pos:column="40">.<pos:position pos:line="364" pos:column="41"/></operator><name pos:line="364" pos:column="41">data<pos:position pos:line="364" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="47">M_NO<pos:position pos:line="364" pos:column="51"/></name></expr></argument>)<pos:position pos:line="364" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="53"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="365" pos:column="9">else <if pos:line="365" pos:column="14">if <condition pos:line="365" pos:column="17">(<expr><call><name pos:line="365" pos:column="18">ascii_strcasecmp<pos:position pos:line="365" pos:column="34"/></name> <argument_list pos:line="365" pos:column="35">(<argument><expr><literal type="string" pos:line="365" pos:column="36">"ask-yes"<pos:position pos:line="365" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="365" pos:column="47">tmp<pos:position pos:line="365" pos:column="50"/></name><operator pos:line="365" pos:column="50">-&gt;<pos:position pos:line="365" pos:column="55"/></operator><name pos:line="365" pos:column="52">data<pos:position pos:line="365" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="365" pos:column="57"/></argument_list></call> <operator pos:line="365" pos:column="58">==<pos:position pos:line="365" pos:column="60"/></operator> <literal type="number" pos:line="365" pos:column="61">0<pos:position pos:line="365" pos:column="62"/></literal></expr>)<pos:position pos:line="365" pos:column="63"/></condition><then pos:line="365" pos:column="63">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="366" pos:column="11">set_quadoption<pos:position pos:line="366" pos:column="25"/></name> <argument_list pos:line="366" pos:column="26">(<argument><expr><name><name pos:line="366" pos:column="27">MuttVars<pos:position pos:line="366" pos:column="35"/></name><index pos:line="366" pos:column="35">[<expr><name pos:line="366" pos:column="36">idx<pos:position pos:line="366" pos:column="39"/></name></expr>]<pos:position pos:line="366" pos:column="40"/></index></name><operator pos:line="366" pos:column="40">.<pos:position pos:line="366" pos:column="41"/></operator><name pos:line="366" pos:column="41">data<pos:position pos:line="366" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="47">M_ASKYES<pos:position pos:line="366" pos:column="55"/></name></expr></argument>)<pos:position pos:line="366" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="57"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="367" pos:column="9">else <if pos:line="367" pos:column="14">if <condition pos:line="367" pos:column="17">(<expr><call><name pos:line="367" pos:column="18">ascii_strcasecmp<pos:position pos:line="367" pos:column="34"/></name> <argument_list pos:line="367" pos:column="35">(<argument><expr><literal type="string" pos:line="367" pos:column="36">"ask-no"<pos:position pos:line="367" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="367" pos:column="46">tmp<pos:position pos:line="367" pos:column="49"/></name><operator pos:line="367" pos:column="49">-&gt;<pos:position pos:line="367" pos:column="54"/></operator><name pos:line="367" pos:column="51">data<pos:position pos:line="367" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="367" pos:column="56"/></argument_list></call> <operator pos:line="367" pos:column="57">==<pos:position pos:line="367" pos:column="59"/></operator> <literal type="number" pos:line="367" pos:column="60">0<pos:position pos:line="367" pos:column="61"/></literal></expr>)<pos:position pos:line="367" pos:column="62"/></condition><then pos:line="367" pos:column="62">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="368" pos:column="11">set_quadoption<pos:position pos:line="368" pos:column="25"/></name> <argument_list pos:line="368" pos:column="26">(<argument><expr><name><name pos:line="368" pos:column="27">MuttVars<pos:position pos:line="368" pos:column="35"/></name><index pos:line="368" pos:column="35">[<expr><name pos:line="368" pos:column="36">idx<pos:position pos:line="368" pos:column="39"/></name></expr>]<pos:position pos:line="368" pos:column="40"/></index></name><operator pos:line="368" pos:column="40">.<pos:position pos:line="368" pos:column="41"/></operator><name pos:line="368" pos:column="41">data<pos:position pos:line="368" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="368" pos:column="47">M_ASKNO<pos:position pos:line="368" pos:column="54"/></name></expr></argument>)<pos:position pos:line="368" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="56"/></expr_stmt></block></then></if></elseif>
	<else pos:line="369" pos:column="9">else
	<block pos:line="370" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="371" pos:column="11">snprintf<pos:position pos:line="371" pos:column="19"/></name> <argument_list pos:line="371" pos:column="20">(<argument><expr><name><name pos:line="371" pos:column="21">err<pos:position pos:line="371" pos:column="24"/></name><operator pos:line="371" pos:column="24">-&gt;<pos:position pos:line="371" pos:column="29"/></operator><name pos:line="371" pos:column="26">data<pos:position pos:line="371" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="371" pos:column="32">err<pos:position pos:line="371" pos:column="35"/></name><operator pos:line="371" pos:column="35">-&gt;<pos:position pos:line="371" pos:column="40"/></operator><name pos:line="371" pos:column="37">dsize<pos:position pos:line="371" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="371" pos:column="44">_<pos:position pos:line="371" pos:column="45"/></name><argument_list pos:line="371" pos:column="45">(<argument><expr><literal type="string" pos:line="371" pos:column="46">"%s: invalid value"<pos:position pos:line="371" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="371" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="371" pos:column="68">tmp<pos:position pos:line="371" pos:column="71"/></name><operator pos:line="371" pos:column="71">-&gt;<pos:position pos:line="371" pos:column="76"/></operator><name pos:line="371" pos:column="73">data<pos:position pos:line="371" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="371" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="79"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="372" pos:column="11">r<pos:position pos:line="372" pos:column="12"/></name> <operator pos:line="372" pos:column="13">=<pos:position pos:line="372" pos:column="14"/></operator> <operator pos:line="372" pos:column="15">-<pos:position pos:line="372" pos:column="16"/></operator><literal type="number" pos:line="372" pos:column="16">1<pos:position pos:line="372" pos:column="17"/></literal></expr>;<pos:position pos:line="372" pos:column="18"/></expr_stmt>
	  <break pos:line="373" pos:column="11">break;<pos:position pos:line="373" pos:column="17"/></break>
	}<pos:position pos:line="374" pos:column="10"/></block></else></if>
      }<pos:position pos:line="375" pos:column="8"/></block></then>
      <else pos:line="376" pos:column="7">else
      <block pos:line="377" pos:column="7">{
	<if pos:line="378" pos:column="9">if <condition pos:line="378" pos:column="12">(<expr><name pos:line="378" pos:column="13">inv<pos:position pos:line="378" pos:column="16"/></name></expr>)<pos:position pos:line="378" pos:column="17"/></condition><then pos:line="378" pos:column="17">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="379" pos:column="11">toggle_quadoption<pos:position pos:line="379" pos:column="28"/></name> <argument_list pos:line="379" pos:column="29">(<argument><expr><name><name pos:line="379" pos:column="30">MuttVars<pos:position pos:line="379" pos:column="38"/></name><index pos:line="379" pos:column="38">[<expr><name pos:line="379" pos:column="39">idx<pos:position pos:line="379" pos:column="42"/></name></expr>]<pos:position pos:line="379" pos:column="43"/></index></name><operator pos:line="379" pos:column="43">.<pos:position pos:line="379" pos:column="44"/></operator><name pos:line="379" pos:column="44">data<pos:position pos:line="379" pos:column="48"/></name></expr></argument>)<pos:position pos:line="379" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="379" pos:column="50"/></expr_stmt></block></then>
	<elseif pos:line="380" pos:column="9">else <if pos:line="380" pos:column="14">if <condition pos:line="380" pos:column="17">(<expr><name pos:line="380" pos:column="18">unset<pos:position pos:line="380" pos:column="23"/></name></expr>)<pos:position pos:line="380" pos:column="24"/></condition><then pos:line="380" pos:column="24">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="381" pos:column="11">set_quadoption<pos:position pos:line="381" pos:column="25"/></name> <argument_list pos:line="381" pos:column="26">(<argument><expr><name><name pos:line="381" pos:column="27">MuttVars<pos:position pos:line="381" pos:column="35"/></name><index pos:line="381" pos:column="35">[<expr><name pos:line="381" pos:column="36">idx<pos:position pos:line="381" pos:column="39"/></name></expr>]<pos:position pos:line="381" pos:column="40"/></index></name><operator pos:line="381" pos:column="40">.<pos:position pos:line="381" pos:column="41"/></operator><name pos:line="381" pos:column="41">data<pos:position pos:line="381" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="47">M_NO<pos:position pos:line="381" pos:column="51"/></name></expr></argument>)<pos:position pos:line="381" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="53"/></expr_stmt></block></then></if></elseif>
	<else pos:line="382" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="383" pos:column="11">set_quadoption<pos:position pos:line="383" pos:column="25"/></name> <argument_list pos:line="383" pos:column="26">(<argument><expr><name><name pos:line="383" pos:column="27">MuttVars<pos:position pos:line="383" pos:column="35"/></name><index pos:line="383" pos:column="35">[<expr><name pos:line="383" pos:column="36">idx<pos:position pos:line="383" pos:column="39"/></name></expr>]<pos:position pos:line="383" pos:column="40"/></index></name><operator pos:line="383" pos:column="40">.<pos:position pos:line="383" pos:column="41"/></operator><name pos:line="383" pos:column="41">data<pos:position pos:line="383" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="383" pos:column="47">M_YES<pos:position pos:line="383" pos:column="52"/></name></expr></argument>)<pos:position pos:line="383" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="54"/></expr_stmt></block></else></if>
      }<pos:position pos:line="384" pos:column="8"/></block></else></if>
    }<pos:position pos:line="385" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="386" pos:column="5">else <if pos:line="386" pos:column="10">if <condition pos:line="386" pos:column="13">(<expr><call><name pos:line="386" pos:column="14">DTYPE<pos:position pos:line="386" pos:column="19"/></name> <argument_list pos:line="386" pos:column="20">(<argument><expr><name><name pos:line="386" pos:column="21">MuttVars<pos:position pos:line="386" pos:column="29"/></name><index pos:line="386" pos:column="29">[<expr><name pos:line="386" pos:column="30">idx<pos:position pos:line="386" pos:column="33"/></name></expr>]<pos:position pos:line="386" pos:column="34"/></index></name><operator pos:line="386" pos:column="34">.<pos:position pos:line="386" pos:column="35"/></operator><name pos:line="386" pos:column="35">type<pos:position pos:line="386" pos:column="39"/></name></expr></argument>)<pos:position pos:line="386" pos:column="40"/></argument_list></call> <operator pos:line="386" pos:column="41">==<pos:position pos:line="386" pos:column="43"/></operator> <name pos:line="386" pos:column="44">DT_SORT<pos:position pos:line="386" pos:column="51"/></name></expr>)<pos:position pos:line="386" pos:column="52"/></condition><then pos:line="386" pos:column="52">
    <block pos:line="387" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="388" pos:column="7">const<pos:position pos:line="388" pos:column="12"/></specifier> <name><name pos:line="388" pos:column="13">struct<pos:position pos:line="388" pos:column="19"/></name> <name pos:line="388" pos:column="20">mapping_t<pos:position pos:line="388" pos:column="29"/></name></name> <modifier pos:line="388" pos:column="30">*<pos:position pos:line="388" pos:column="31"/></modifier></type><name pos:line="388" pos:column="31">map<pos:position pos:line="388" pos:column="34"/></name></decl>;<pos:position pos:line="388" pos:column="35"/></decl_stmt>

      <switch pos:line="390" pos:column="7">switch <condition pos:line="390" pos:column="14">(<expr><name><name pos:line="390" pos:column="15">MuttVars<pos:position pos:line="390" pos:column="23"/></name><index pos:line="390" pos:column="23">[<expr><name pos:line="390" pos:column="24">idx<pos:position pos:line="390" pos:column="27"/></name></expr>]<pos:position pos:line="390" pos:column="28"/></index></name><operator pos:line="390" pos:column="28">.<pos:position pos:line="390" pos:column="29"/></operator><name pos:line="390" pos:column="29">type<pos:position pos:line="390" pos:column="33"/></name> <operator pos:line="390" pos:column="34">&amp;<pos:position pos:line="390" pos:column="39"/></operator> <name pos:line="390" pos:column="36">DT_SUBTYPE_MASK<pos:position pos:line="390" pos:column="51"/></name></expr>)<pos:position pos:line="390" pos:column="52"/></condition>
      <block pos:line="391" pos:column="7">{
	<case pos:line="392" pos:column="9">case <expr><name pos:line="392" pos:column="14">DT_SORT_ALIAS<pos:position pos:line="392" pos:column="27"/></name></expr>:<pos:position pos:line="392" pos:column="28"/></case>
	  <expr_stmt><expr><name pos:line="393" pos:column="11">map<pos:position pos:line="393" pos:column="14"/></name> <operator pos:line="393" pos:column="15">=<pos:position pos:line="393" pos:column="16"/></operator> <name pos:line="393" pos:column="17">SortAliasMethods<pos:position pos:line="393" pos:column="33"/></name></expr>;<pos:position pos:line="393" pos:column="34"/></expr_stmt>
	  <break pos:line="394" pos:column="11">break;<pos:position pos:line="394" pos:column="17"/></break>
	<case pos:line="395" pos:column="9">case <expr><name pos:line="395" pos:column="14">DT_SORT_BROWSER<pos:position pos:line="395" pos:column="29"/></name></expr>:<pos:position pos:line="395" pos:column="30"/></case>
	  <expr_stmt><expr><name pos:line="396" pos:column="11">map<pos:position pos:line="396" pos:column="14"/></name> <operator pos:line="396" pos:column="15">=<pos:position pos:line="396" pos:column="16"/></operator> <name pos:line="396" pos:column="17">SortBrowserMethods<pos:position pos:line="396" pos:column="35"/></name></expr>;<pos:position pos:line="396" pos:column="36"/></expr_stmt>
	  <break pos:line="397" pos:column="11">break;<pos:position pos:line="397" pos:column="17"/></break>
<cpp:ifdef pos:line="398" pos:column="1">#<cpp:directive pos:line="398" pos:column="2">ifdef<pos:position pos:line="398" pos:column="7"/></cpp:directive> <name pos:line="398" pos:column="8">HAVE_PGP<pos:position pos:line="398" pos:column="16"/></name></cpp:ifdef>
	<case pos:line="399" pos:column="9">case <expr><name pos:line="399" pos:column="14">DT_SORT_KEYS<pos:position pos:line="399" pos:column="26"/></name></expr>:<pos:position pos:line="399" pos:column="27"/></case>
	  <expr_stmt><expr><name pos:line="400" pos:column="11">map<pos:position pos:line="400" pos:column="14"/></name> <operator pos:line="400" pos:column="15">=<pos:position pos:line="400" pos:column="16"/></operator> <name pos:line="400" pos:column="17">SortKeyMethods<pos:position pos:line="400" pos:column="31"/></name></expr>;<pos:position pos:line="400" pos:column="32"/></expr_stmt>
	  <break pos:line="401" pos:column="11">break;<pos:position pos:line="401" pos:column="17"/></break>
<cpp:endif pos:line="402" pos:column="1">#<cpp:directive pos:line="402" pos:column="2">endif<pos:position pos:line="402" pos:column="7"/></cpp:directive></cpp:endif>
	<case pos:line="403" pos:column="9">case <expr><name pos:line="403" pos:column="14">DT_SORT_AUX<pos:position pos:line="403" pos:column="25"/></name></expr>:<pos:position pos:line="403" pos:column="26"/></case>
	  <expr_stmt><expr><name pos:line="404" pos:column="11">map<pos:position pos:line="404" pos:column="14"/></name> <operator pos:line="404" pos:column="15">=<pos:position pos:line="404" pos:column="16"/></operator> <name pos:line="404" pos:column="17">SortAuxMethods<pos:position pos:line="404" pos:column="31"/></name></expr>;<pos:position pos:line="404" pos:column="32"/></expr_stmt>
	  <break pos:line="405" pos:column="11">break;<pos:position pos:line="405" pos:column="17"/></break>
	<default pos:line="406" pos:column="9">default:<pos:position pos:line="406" pos:column="17"/></default>
	  <expr_stmt><expr><name pos:line="407" pos:column="11">map<pos:position pos:line="407" pos:column="14"/></name> <operator pos:line="407" pos:column="15">=<pos:position pos:line="407" pos:column="16"/></operator> <name pos:line="407" pos:column="17">SortMethods<pos:position pos:line="407" pos:column="28"/></name></expr>;<pos:position pos:line="407" pos:column="29"/></expr_stmt>
	  <break pos:line="408" pos:column="11">break;<pos:position pos:line="408" pos:column="17"/></break>
      }<pos:position pos:line="409" pos:column="8"/></block></switch>

      <if pos:line="411" pos:column="7">if <condition pos:line="411" pos:column="10">(<expr><name pos:line="411" pos:column="11">query<pos:position pos:line="411" pos:column="16"/></name> <operator pos:line="411" pos:column="17">||<pos:position pos:line="411" pos:column="19"/></operator> <operator pos:line="411" pos:column="20">*<pos:position pos:line="411" pos:column="21"/></operator><name><name pos:line="411" pos:column="21">s<pos:position pos:line="411" pos:column="22"/></name><operator pos:line="411" pos:column="22">-&gt;<pos:position pos:line="411" pos:column="27"/></operator><name pos:line="411" pos:column="24">dptr<pos:position pos:line="411" pos:column="28"/></name></name> <operator pos:line="411" pos:column="29">!=<pos:position pos:line="411" pos:column="31"/></operator> <literal type="char" pos:line="411" pos:column="32">'='<pos:position pos:line="411" pos:column="35"/></literal></expr>)<pos:position pos:line="411" pos:column="36"/></condition><then pos:line="411" pos:column="36">
      <block pos:line="412" pos:column="7">{
	<expr_stmt><expr><name pos:line="413" pos:column="9">p<pos:position pos:line="413" pos:column="10"/></name> <operator pos:line="413" pos:column="11">=<pos:position pos:line="413" pos:column="12"/></operator> <call><name pos:line="413" pos:column="13">mutt_getnamebyvalue<pos:position pos:line="413" pos:column="32"/></name> <argument_list pos:line="413" pos:column="33">(<argument><expr><operator pos:line="413" pos:column="34">*<pos:position pos:line="413" pos:column="35"/></operator><operator pos:line="413" pos:column="35">(<pos:position pos:line="413" pos:column="36"/></operator><operator pos:line="413" pos:column="36">(<pos:position pos:line="413" pos:column="37"/></operator><name pos:line="413" pos:column="37">short<pos:position pos:line="413" pos:column="42"/></name> <operator pos:line="413" pos:column="43">*<pos:position pos:line="413" pos:column="44"/></operator><operator pos:line="413" pos:column="44">)<pos:position pos:line="413" pos:column="45"/></operator> <name><name pos:line="413" pos:column="46">MuttVars<pos:position pos:line="413" pos:column="54"/></name><index pos:line="413" pos:column="54">[<expr><name pos:line="413" pos:column="55">idx<pos:position pos:line="413" pos:column="58"/></name></expr>]<pos:position pos:line="413" pos:column="59"/></index></name><operator pos:line="413" pos:column="59">.<pos:position pos:line="413" pos:column="60"/></operator><name pos:line="413" pos:column="60">data<pos:position pos:line="413" pos:column="64"/></name><operator pos:line="413" pos:column="64">)<pos:position pos:line="413" pos:column="65"/></operator> <operator pos:line="413" pos:column="66">&amp;<pos:position pos:line="413" pos:column="71"/></operator> <name pos:line="413" pos:column="68">SORT_MASK<pos:position pos:line="413" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="413" pos:column="79">map<pos:position pos:line="413" pos:column="82"/></name></expr></argument>)<pos:position pos:line="413" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="84"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="415" pos:column="9">snprintf<pos:position pos:line="415" pos:column="17"/></name> <argument_list pos:line="415" pos:column="18">(<argument><expr><name><name pos:line="415" pos:column="19">err<pos:position pos:line="415" pos:column="22"/></name><operator pos:line="415" pos:column="22">-&gt;<pos:position pos:line="415" pos:column="27"/></operator><name pos:line="415" pos:column="24">data<pos:position pos:line="415" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="415" pos:column="30">err<pos:position pos:line="415" pos:column="33"/></name><operator pos:line="415" pos:column="33">-&gt;<pos:position pos:line="415" pos:column="38"/></operator><name pos:line="415" pos:column="35">dsize<pos:position pos:line="415" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="415" pos:column="42">"%s=%s%s%s"<pos:position pos:line="415" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="415" pos:column="55">MuttVars<pos:position pos:line="415" pos:column="63"/></name><index pos:line="415" pos:column="63">[<expr><name pos:line="415" pos:column="64">idx<pos:position pos:line="415" pos:column="67"/></name></expr>]<pos:position pos:line="415" pos:column="68"/></index></name><operator pos:line="415" pos:column="68">.<pos:position pos:line="415" pos:column="69"/></operator><name pos:line="415" pos:column="69">option<pos:position pos:line="415" pos:column="75"/></name></expr></argument>,
		  <argument><expr><ternary><condition><expr><operator pos:line="416" pos:column="19">(<pos:position pos:line="416" pos:column="20"/></operator><operator pos:line="416" pos:column="20">*<pos:position pos:line="416" pos:column="21"/></operator><operator pos:line="416" pos:column="21">(<pos:position pos:line="416" pos:column="22"/></operator><operator pos:line="416" pos:column="22">(<pos:position pos:line="416" pos:column="23"/></operator><name pos:line="416" pos:column="23">short<pos:position pos:line="416" pos:column="28"/></name> <operator pos:line="416" pos:column="29">*<pos:position pos:line="416" pos:column="30"/></operator><operator pos:line="416" pos:column="30">)<pos:position pos:line="416" pos:column="31"/></operator> <name><name pos:line="416" pos:column="32">MuttVars<pos:position pos:line="416" pos:column="40"/></name><index pos:line="416" pos:column="40">[<expr><name pos:line="416" pos:column="41">idx<pos:position pos:line="416" pos:column="44"/></name></expr>]<pos:position pos:line="416" pos:column="45"/></index></name><operator pos:line="416" pos:column="45">.<pos:position pos:line="416" pos:column="46"/></operator><name pos:line="416" pos:column="46">data<pos:position pos:line="416" pos:column="50"/></name><operator pos:line="416" pos:column="50">)<pos:position pos:line="416" pos:column="51"/></operator> <operator pos:line="416" pos:column="52">&amp;<pos:position pos:line="416" pos:column="57"/></operator> <name pos:line="416" pos:column="54">SORT_REVERSE<pos:position pos:line="416" pos:column="66"/></name><operator pos:line="416" pos:column="66">)<pos:position pos:line="416" pos:column="67"/></operator></expr> ?<pos:position pos:line="416" pos:column="69"/></condition><then pos:line="416" pos:column="69"> <expr><literal type="string" pos:line="416" pos:column="70">"reverse-"<pos:position pos:line="416" pos:column="80"/></literal></expr> <pos:position pos:line="416" pos:column="81"/></then><else pos:line="416" pos:column="81">: <expr><literal type="string" pos:line="416" pos:column="83">""<pos:position pos:line="416" pos:column="85"/></literal></expr></else></ternary></expr></argument>,
		  <argument><expr><ternary><condition><expr><operator pos:line="417" pos:column="19">(<pos:position pos:line="417" pos:column="20"/></operator><operator pos:line="417" pos:column="20">*<pos:position pos:line="417" pos:column="21"/></operator><operator pos:line="417" pos:column="21">(<pos:position pos:line="417" pos:column="22"/></operator><operator pos:line="417" pos:column="22">(<pos:position pos:line="417" pos:column="23"/></operator><name pos:line="417" pos:column="23">short<pos:position pos:line="417" pos:column="28"/></name> <operator pos:line="417" pos:column="29">*<pos:position pos:line="417" pos:column="30"/></operator><operator pos:line="417" pos:column="30">)<pos:position pos:line="417" pos:column="31"/></operator> <name><name pos:line="417" pos:column="32">MuttVars<pos:position pos:line="417" pos:column="40"/></name><index pos:line="417" pos:column="40">[<expr><name pos:line="417" pos:column="41">idx<pos:position pos:line="417" pos:column="44"/></name></expr>]<pos:position pos:line="417" pos:column="45"/></index></name><operator pos:line="417" pos:column="45">.<pos:position pos:line="417" pos:column="46"/></operator><name pos:line="417" pos:column="46">data<pos:position pos:line="417" pos:column="50"/></name><operator pos:line="417" pos:column="50">)<pos:position pos:line="417" pos:column="51"/></operator> <operator pos:line="417" pos:column="52">&amp;<pos:position pos:line="417" pos:column="57"/></operator> <name pos:line="417" pos:column="54">SORT_LAST<pos:position pos:line="417" pos:column="63"/></name><operator pos:line="417" pos:column="63">)<pos:position pos:line="417" pos:column="64"/></operator></expr> ?<pos:position pos:line="417" pos:column="66"/></condition><then pos:line="417" pos:column="66"> <expr><literal type="string" pos:line="417" pos:column="67">"last-"<pos:position pos:line="417" pos:column="74"/></literal></expr> <pos:position pos:line="417" pos:column="75"/></then><else pos:line="417" pos:column="75">: <expr><literal type="string" pos:line="417" pos:column="77">""<pos:position pos:line="417" pos:column="79"/></literal></expr></else></ternary></expr></argument>,
		  <argument><expr><name pos:line="418" pos:column="19">p<pos:position pos:line="418" pos:column="20"/></name></expr></argument>)<pos:position pos:line="418" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="22"/></expr_stmt>
	<return pos:line="419" pos:column="9">return <expr><literal type="number" pos:line="419" pos:column="16">0<pos:position pos:line="419" pos:column="17"/></literal></expr>;<pos:position pos:line="419" pos:column="18"/></return>
      }<pos:position pos:line="420" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="421" pos:column="7">s<pos:position pos:line="421" pos:column="8"/></name><operator pos:line="421" pos:column="8">-&gt;<pos:position pos:line="421" pos:column="13"/></operator><name pos:line="421" pos:column="10">dptr<pos:position pos:line="421" pos:column="14"/></name></name><operator pos:line="421" pos:column="14">++<pos:position pos:line="421" pos:column="16"/></operator></expr>;<pos:position pos:line="421" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="422" pos:column="7">mutt_extract_token<pos:position pos:line="422" pos:column="25"/></name> <argument_list pos:line="422" pos:column="26">(<argument><expr><name pos:line="422" pos:column="27">tmp<pos:position pos:line="422" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="422" pos:column="32">s<pos:position pos:line="422" pos:column="33"/></name></expr></argument> , <argument><expr><literal type="number" pos:line="422" pos:column="36">0<pos:position pos:line="422" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="422" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="39"/></expr_stmt>

      <if pos:line="424" pos:column="7">if <condition pos:line="424" pos:column="10">(<expr><call><name pos:line="424" pos:column="11">parse_sort<pos:position pos:line="424" pos:column="21"/></name> <argument_list pos:line="424" pos:column="22">(<argument><expr><operator pos:line="424" pos:column="23">(<pos:position pos:line="424" pos:column="24"/></operator><name pos:line="424" pos:column="24">short<pos:position pos:line="424" pos:column="29"/></name> <operator pos:line="424" pos:column="30">*<pos:position pos:line="424" pos:column="31"/></operator><operator pos:line="424" pos:column="31">)<pos:position pos:line="424" pos:column="32"/></operator> <name><name pos:line="424" pos:column="33">MuttVars<pos:position pos:line="424" pos:column="41"/></name><index pos:line="424" pos:column="41">[<expr><name pos:line="424" pos:column="42">idx<pos:position pos:line="424" pos:column="45"/></name></expr>]<pos:position pos:line="424" pos:column="46"/></index></name><operator pos:line="424" pos:column="46">.<pos:position pos:line="424" pos:column="47"/></operator><name pos:line="424" pos:column="47">data<pos:position pos:line="424" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="424" pos:column="53">tmp<pos:position pos:line="424" pos:column="56"/></name><operator pos:line="424" pos:column="56">-&gt;<pos:position pos:line="424" pos:column="61"/></operator><name pos:line="424" pos:column="58">data<pos:position pos:line="424" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="64">map<pos:position pos:line="424" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="69">err<pos:position pos:line="424" pos:column="72"/></name></expr></argument>)<pos:position pos:line="424" pos:column="73"/></argument_list></call> <operator pos:line="424" pos:column="74">==<pos:position pos:line="424" pos:column="76"/></operator> <operator pos:line="424" pos:column="77">-<pos:position pos:line="424" pos:column="78"/></operator><literal type="number" pos:line="424" pos:column="78">1<pos:position pos:line="424" pos:column="79"/></literal></expr>)<pos:position pos:line="424" pos:column="80"/></condition><then pos:line="424" pos:column="80">
      <block pos:line="425" pos:column="7">{
	<expr_stmt><expr><name pos:line="426" pos:column="9">r<pos:position pos:line="426" pos:column="10"/></name> <operator pos:line="426" pos:column="11">=<pos:position pos:line="426" pos:column="12"/></operator> <operator pos:line="426" pos:column="13">-<pos:position pos:line="426" pos:column="14"/></operator><literal type="number" pos:line="426" pos:column="14">1<pos:position pos:line="426" pos:column="15"/></literal></expr>;<pos:position pos:line="426" pos:column="16"/></expr_stmt>
	<break pos:line="427" pos:column="9">break;<pos:position pos:line="427" pos:column="15"/></break>
      }<pos:position pos:line="428" pos:column="8"/></block></then></if>
    }<pos:position pos:line="429" pos:column="6"/></block></then></if></elseif>
    <else pos:line="430" pos:column="5">else
    <block pos:line="431" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="432" pos:column="7">snprintf<pos:position pos:line="432" pos:column="15"/></name> <argument_list pos:line="432" pos:column="16">(<argument><expr><name><name pos:line="432" pos:column="17">err<pos:position pos:line="432" pos:column="20"/></name><operator pos:line="432" pos:column="20">-&gt;<pos:position pos:line="432" pos:column="25"/></operator><name pos:line="432" pos:column="22">data<pos:position pos:line="432" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="432" pos:column="28">err<pos:position pos:line="432" pos:column="31"/></name><operator pos:line="432" pos:column="31">-&gt;<pos:position pos:line="432" pos:column="36"/></operator><name pos:line="432" pos:column="33">dsize<pos:position pos:line="432" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="432" pos:column="40">_<pos:position pos:line="432" pos:column="41"/></name><argument_list pos:line="432" pos:column="41">(<argument><expr><literal type="string" pos:line="432" pos:column="42">"%s: unknown type"<pos:position pos:line="432" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="432" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="432" pos:column="63">MuttVars<pos:position pos:line="432" pos:column="71"/></name><index pos:line="432" pos:column="71">[<expr><name pos:line="432" pos:column="72">idx<pos:position pos:line="432" pos:column="75"/></name></expr>]<pos:position pos:line="432" pos:column="76"/></index></name><operator pos:line="432" pos:column="76">.<pos:position pos:line="432" pos:column="77"/></operator><name pos:line="432" pos:column="77">option<pos:position pos:line="432" pos:column="83"/></name></expr></argument>)<pos:position pos:line="432" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="85"/></expr_stmt>
      <expr_stmt><expr><name pos:line="433" pos:column="7">r<pos:position pos:line="433" pos:column="8"/></name> <operator pos:line="433" pos:column="9">=<pos:position pos:line="433" pos:column="10"/></operator> <operator pos:line="433" pos:column="11">-<pos:position pos:line="433" pos:column="12"/></operator><literal type="number" pos:line="433" pos:column="12">1<pos:position pos:line="433" pos:column="13"/></literal></expr>;<pos:position pos:line="433" pos:column="14"/></expr_stmt>
      <break pos:line="434" pos:column="7">break;<pos:position pos:line="434" pos:column="13"/></break>
    }<pos:position pos:line="435" pos:column="6"/></block></else></if>

    <if pos:line="437" pos:column="5">if <condition pos:line="437" pos:column="8">(<expr><name><name pos:line="437" pos:column="9">MuttVars<pos:position pos:line="437" pos:column="17"/></name><index pos:line="437" pos:column="17">[<expr><name pos:line="437" pos:column="18">idx<pos:position pos:line="437" pos:column="21"/></name></expr>]<pos:position pos:line="437" pos:column="22"/></index></name><operator pos:line="437" pos:column="22">.<pos:position pos:line="437" pos:column="23"/></operator><name pos:line="437" pos:column="23">flags<pos:position pos:line="437" pos:column="28"/></name> <operator pos:line="437" pos:column="29">&amp;<pos:position pos:line="437" pos:column="34"/></operator> <name pos:line="437" pos:column="31">R_INDEX<pos:position pos:line="437" pos:column="38"/></name></expr>)<pos:position pos:line="437" pos:column="39"/></condition><then pos:line="437" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="438" pos:column="7">set_option<pos:position pos:line="438" pos:column="17"/></name> <argument_list pos:line="438" pos:column="18">(<argument><expr><name pos:line="438" pos:column="19">OPTFORCEREDRAWINDEX<pos:position pos:line="438" pos:column="38"/></name></expr></argument>)<pos:position pos:line="438" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="438" pos:column="40"/></expr_stmt></block></then></if>
    <if pos:line="439" pos:column="5">if <condition pos:line="439" pos:column="8">(<expr><name><name pos:line="439" pos:column="9">MuttVars<pos:position pos:line="439" pos:column="17"/></name><index pos:line="439" pos:column="17">[<expr><name pos:line="439" pos:column="18">idx<pos:position pos:line="439" pos:column="21"/></name></expr>]<pos:position pos:line="439" pos:column="22"/></index></name><operator pos:line="439" pos:column="22">.<pos:position pos:line="439" pos:column="23"/></operator><name pos:line="439" pos:column="23">flags<pos:position pos:line="439" pos:column="28"/></name> <operator pos:line="439" pos:column="29">&amp;<pos:position pos:line="439" pos:column="34"/></operator> <name pos:line="439" pos:column="31">R_PAGER<pos:position pos:line="439" pos:column="38"/></name></expr>)<pos:position pos:line="439" pos:column="39"/></condition><then pos:line="439" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="440" pos:column="7">set_option<pos:position pos:line="440" pos:column="17"/></name> <argument_list pos:line="440" pos:column="18">(<argument><expr><name pos:line="440" pos:column="19">OPTFORCEREDRAWPAGER<pos:position pos:line="440" pos:column="38"/></name></expr></argument>)<pos:position pos:line="440" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="440" pos:column="40"/></expr_stmt></block></then></if>
    <if pos:line="441" pos:column="5">if <condition pos:line="441" pos:column="8">(<expr><name><name pos:line="441" pos:column="9">MuttVars<pos:position pos:line="441" pos:column="17"/></name><index pos:line="441" pos:column="17">[<expr><name pos:line="441" pos:column="18">idx<pos:position pos:line="441" pos:column="21"/></name></expr>]<pos:position pos:line="441" pos:column="22"/></index></name><operator pos:line="441" pos:column="22">.<pos:position pos:line="441" pos:column="23"/></operator><name pos:line="441" pos:column="23">flags<pos:position pos:line="441" pos:column="28"/></name> <operator pos:line="441" pos:column="29">&amp;<pos:position pos:line="441" pos:column="34"/></operator> <name pos:line="441" pos:column="31">R_RESORT_SUB<pos:position pos:line="441" pos:column="43"/></name></expr>)<pos:position pos:line="441" pos:column="44"/></condition><then pos:line="441" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="442" pos:column="7">set_option<pos:position pos:line="442" pos:column="17"/></name> <argument_list pos:line="442" pos:column="18">(<argument><expr><name pos:line="442" pos:column="19">OPTSORTSUBTHREADS<pos:position pos:line="442" pos:column="36"/></name></expr></argument>)<pos:position pos:line="442" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="38"/></expr_stmt></block></then></if>
    <if pos:line="443" pos:column="5">if <condition pos:line="443" pos:column="8">(<expr><name><name pos:line="443" pos:column="9">MuttVars<pos:position pos:line="443" pos:column="17"/></name><index pos:line="443" pos:column="17">[<expr><name pos:line="443" pos:column="18">idx<pos:position pos:line="443" pos:column="21"/></name></expr>]<pos:position pos:line="443" pos:column="22"/></index></name><operator pos:line="443" pos:column="22">.<pos:position pos:line="443" pos:column="23"/></operator><name pos:line="443" pos:column="23">flags<pos:position pos:line="443" pos:column="28"/></name> <operator pos:line="443" pos:column="29">&amp;<pos:position pos:line="443" pos:column="34"/></operator> <name pos:line="443" pos:column="31">R_RESORT<pos:position pos:line="443" pos:column="39"/></name></expr>)<pos:position pos:line="443" pos:column="40"/></condition><then pos:line="443" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="444" pos:column="7">set_option<pos:position pos:line="444" pos:column="17"/></name> <argument_list pos:line="444" pos:column="18">(<argument><expr><name pos:line="444" pos:column="19">OPTNEEDRESORT<pos:position pos:line="444" pos:column="32"/></name></expr></argument>)<pos:position pos:line="444" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="444" pos:column="34"/></expr_stmt></block></then></if>
    <if pos:line="445" pos:column="5">if <condition pos:line="445" pos:column="8">(<expr><name><name pos:line="445" pos:column="9">MuttVars<pos:position pos:line="445" pos:column="17"/></name><index pos:line="445" pos:column="17">[<expr><name pos:line="445" pos:column="18">idx<pos:position pos:line="445" pos:column="21"/></name></expr>]<pos:position pos:line="445" pos:column="22"/></index></name><operator pos:line="445" pos:column="22">.<pos:position pos:line="445" pos:column="23"/></operator><name pos:line="445" pos:column="23">flags<pos:position pos:line="445" pos:column="28"/></name> <operator pos:line="445" pos:column="29">&amp;<pos:position pos:line="445" pos:column="34"/></operator> <name pos:line="445" pos:column="31">R_RESORT_INIT<pos:position pos:line="445" pos:column="44"/></name></expr>)<pos:position pos:line="445" pos:column="45"/></condition><then pos:line="445" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="446" pos:column="7">set_option<pos:position pos:line="446" pos:column="17"/></name> <argument_list pos:line="446" pos:column="18">(<argument><expr><name pos:line="446" pos:column="19">OPTRESORTINIT<pos:position pos:line="446" pos:column="32"/></name></expr></argument>)<pos:position pos:line="446" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="34"/></expr_stmt></block></then></if>
  }<pos:position pos:line="447" pos:column="4"/></block></while>
  <return pos:line="448" pos:column="3">return <expr><operator pos:line="448" pos:column="10">(<pos:position pos:line="448" pos:column="11"/></operator><name pos:line="448" pos:column="11">r<pos:position pos:line="448" pos:column="12"/></name><operator pos:line="448" pos:column="12">)<pos:position pos:line="448" pos:column="13"/></operator></expr>;<pos:position pos:line="448" pos:column="14"/></return>
}<pos:position pos:line="449" pos:column="2"/></block></function></unit>

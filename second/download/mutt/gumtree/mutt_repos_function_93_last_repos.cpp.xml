<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_93_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ADDRESS<pos:position pos:line="1" pos:column="15"/></name> <modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier></type><name pos:line="1" pos:column="17">set_reverse_name<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">ENVELOPE<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">env<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">tmp<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><expr><name pos:line="5" pos:column="8">tmp<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <name><name pos:line="5" pos:column="14">env<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">to<pos:position pos:line="5" pos:column="21"/></name></name></expr>;<pos:position pos:line="5" pos:column="22"/></init> <condition><expr><name pos:line="5" pos:column="23">tmp<pos:position pos:line="5" pos:column="26"/></name></expr>;<pos:position pos:line="5" pos:column="27"/></condition> <incr><expr><name pos:line="5" pos:column="28">tmp<pos:position pos:line="5" pos:column="31"/></name> <operator pos:line="5" pos:column="32">=<pos:position pos:line="5" pos:column="33"/></operator> <name><name pos:line="5" pos:column="34">tmp<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">next<pos:position pos:line="5" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="44"/></control>
  <block pos:line="6" pos:column="3">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">mutt_addr_is_user<pos:position pos:line="7" pos:column="26"/></name> <argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">tmp<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
      <block type="pseudo"><break pos:line="8" pos:column="7">break;<pos:position pos:line="8" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="9" pos:column="4"/></block></for>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">tmp<pos:position pos:line="10" pos:column="11"/></name></expr>)<pos:position pos:line="10" pos:column="12"/></condition><then pos:line="10" pos:column="12">
  <block pos:line="11" pos:column="3">{
    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">tmp<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name><name pos:line="12" pos:column="16">env<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">cc<pos:position pos:line="12" pos:column="23"/></name></name></expr>;<pos:position pos:line="12" pos:column="24"/></init> <condition><expr><name pos:line="12" pos:column="25">tmp<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></condition> <incr><expr><name pos:line="12" pos:column="30">tmp<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">=<pos:position pos:line="12" pos:column="35"/></operator> <name><name pos:line="12" pos:column="36">tmp<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">next<pos:position pos:line="12" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="46"/></control>
    <block pos:line="13" pos:column="5">{
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><call><name pos:line="14" pos:column="11">mutt_addr_is_user<pos:position pos:line="14" pos:column="28"/></name> <argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">tmp<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35">
	<block type="pseudo"><break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></for>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">tmp<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">&amp;&amp;<pos:position pos:line="18" pos:column="22"/></operator> <call><name pos:line="18" pos:column="15">mutt_addr_is_user<pos:position pos:line="18" pos:column="32"/></name> <argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">env<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">from<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">tmp<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <name><name pos:line="19" pos:column="11">env<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">from<pos:position pos:line="19" pos:column="20"/></name></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt></block></then></if>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">tmp<pos:position pos:line="20" pos:column="10"/></name></expr>)<pos:position pos:line="20" pos:column="11"/></condition><then pos:line="20" pos:column="11">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">tmp<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <call><name pos:line="22" pos:column="11">rfc822_cpy_adr_real<pos:position pos:line="22" pos:column="30"/></name> <argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">tmp<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
    <comment type="block" pos:line="23" pos:column="5">/* when $reverse_realname is not set, clear the personal name so that it
     * may be set vi a reply- or send-hook.
     */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><call><name pos:line="26" pos:column="10">option<pos:position pos:line="26" pos:column="16"/></name> <argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">OPTREVREAL<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="7">FREE<pos:position pos:line="27" pos:column="11"/></name> <argument_list pos:line="27" pos:column="12">(<argument><expr><operator pos:line="27" pos:column="13">&amp;<pos:position pos:line="27" pos:column="18"/></operator><name><name pos:line="27" pos:column="14">tmp<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">personal<pos:position pos:line="27" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt></block></then></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>
  <return pos:line="29" pos:column="3">return <expr><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">tmp<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">)<pos:position pos:line="29" pos:column="15"/></operator></expr>;<pos:position pos:line="29" pos:column="16"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

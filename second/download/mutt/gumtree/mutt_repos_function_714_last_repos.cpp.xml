<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_714_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">gpgme_data_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">body_to_data_object<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">BODY<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">a<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">convert<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tempfile<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">fptmp<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">err<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">gpgme_data_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">data<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">mutt_mktemp<pos:position pos:line="8" pos:column="14"/></name> <argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">tempfile<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="26">sizeof <argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">tempfile<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">fptmp<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">safe_fopen<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">tempfile<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"w+"<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">fptmp<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14">
    <block pos:line="11" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">mutt_perror<pos:position pos:line="12" pos:column="18"/></name> <argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">tempfile<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
      <return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">NULL<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">mutt_write_mime_header<pos:position pos:line="16" pos:column="25"/></name> <argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">a<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">fptmp<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">fputc<pos:position pos:line="17" pos:column="8"/></name> <argument_list pos:line="17" pos:column="9">(<argument><expr><literal type="char" pos:line="17" pos:column="10">'\n'<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="16">fptmp<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_write_mime_body<pos:position pos:line="18" pos:column="23"/></name> <argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">a<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">fptmp<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">convert<pos:position pos:line="20" pos:column="14"/></name></expr>)<pos:position pos:line="20" pos:column="15"/></condition><then pos:line="20" pos:column="15">
    <block pos:line="21" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">int<pos:position pos:line="22" pos:column="10"/></name></type> <name pos:line="22" pos:column="11">c<pos:position pos:line="22" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="14">hadcr<pos:position pos:line="22" pos:column="19"/></name> <init pos:line="22" pos:column="20">= <expr><literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="23" pos:column="7">unsigned<pos:position pos:line="23" pos:column="15"/></name> <name pos:line="23" pos:column="16">char<pos:position pos:line="23" pos:column="20"/></name></type> <name><name pos:line="23" pos:column="21">buf<pos:position pos:line="23" pos:column="24"/></name><index pos:line="23" pos:column="24">[<expr><literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>]<pos:position pos:line="23" pos:column="27"/></index></name></decl>;<pos:position pos:line="23" pos:column="28"/></decl_stmt>

      <expr_stmt><expr><name pos:line="25" pos:column="7">data<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">create_gpgme_data<pos:position pos:line="25" pos:column="31"/></name> <argument_list pos:line="25" pos:column="32">()<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">rewind<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">fptmp<pos:position pos:line="26" pos:column="20"/></name></expr></argument>)<pos:position pos:line="26" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
      <while pos:line="27" pos:column="7">while <condition pos:line="27" pos:column="13">(<expr><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">c<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="19">fgetc<pos:position pos:line="27" pos:column="24"/></name> <argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">fptmp<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call><operator pos:line="27" pos:column="32">)<pos:position pos:line="27" pos:column="33"/></operator> <operator pos:line="27" pos:column="34">!=<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">EOF<pos:position pos:line="27" pos:column="40"/></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition>
        <block pos:line="28" pos:column="9">{
          <if pos:line="29" pos:column="11">if  <condition pos:line="29" pos:column="15">(<expr><name pos:line="29" pos:column="16">c<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">==<pos:position pos:line="29" pos:column="20"/></operator> <literal type="char" pos:line="29" pos:column="21">'\r'<pos:position pos:line="29" pos:column="25"/></literal></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="13">hadcr<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <literal type="number" pos:line="30" pos:column="21">1<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt></block></then>
          <else pos:line="31" pos:column="11">else 
            <block pos:line="32" pos:column="13">{
              <if pos:line="33" pos:column="15">if <condition pos:line="33" pos:column="18">(<expr><name pos:line="33" pos:column="19">c<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">==<pos:position pos:line="33" pos:column="23"/></operator> <literal type="char" pos:line="33" pos:column="24">'\n'<pos:position pos:line="33" pos:column="28"/></literal> <operator pos:line="33" pos:column="29">&amp;&amp;<pos:position pos:line="33" pos:column="39"/></operator> <operator pos:line="33" pos:column="32">!<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="33">hadcr<pos:position pos:line="33" pos:column="38"/></name></expr>)<pos:position pos:line="33" pos:column="39"/></condition><then pos:line="33" pos:column="39">
                <block pos:line="34" pos:column="17">{
                  <expr_stmt><expr><name><name pos:line="35" pos:column="19">buf<pos:position pos:line="35" pos:column="22"/></name><index pos:line="35" pos:column="22">[<expr><literal type="number" pos:line="35" pos:column="23">0<pos:position pos:line="35" pos:column="24"/></literal></expr>]<pos:position pos:line="35" pos:column="25"/></index></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <literal type="char" pos:line="35" pos:column="28">'\r'<pos:position pos:line="35" pos:column="32"/></literal></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>
                  <expr_stmt><expr><call><name pos:line="36" pos:column="19">gpgme_data_write<pos:position pos:line="36" pos:column="35"/></name> <argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">data<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="43">buf<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="48">1<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="37" pos:column="18"/></block></then></if>
                  
              <expr_stmt><expr><name pos:line="39" pos:column="15">hadcr<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <literal type="number" pos:line="39" pos:column="23">0<pos:position pos:line="39" pos:column="24"/></literal></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></else></if>
          <comment type="block" pos:line="41" pos:column="11">/* FIXME: This is quite suboptimal */</comment>
          <expr_stmt><expr><name><name pos:line="42" pos:column="11">buf<pos:position pos:line="42" pos:column="14"/></name><index pos:line="42" pos:column="14">[<expr><literal type="number" pos:line="42" pos:column="15">0<pos:position pos:line="42" pos:column="16"/></literal></expr>]<pos:position pos:line="42" pos:column="17"/></index></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">c<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="43" pos:column="11">gpgme_data_write<pos:position pos:line="43" pos:column="27"/></name> <argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">data<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="35">buf<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="40">1<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></while>
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">safe_fclose<pos:position pos:line="45" pos:column="18"/></name> <argument_list pos:line="45" pos:column="19">(<argument><expr><operator pos:line="45" pos:column="20">&amp;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="21">fptmp<pos:position pos:line="45" pos:column="26"/></name></expr></argument>)<pos:position pos:line="45" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">gpgme_data_seek<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">data<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="30">0<pos:position pos:line="46" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="33">SEEK_SET<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then>
  <else pos:line="48" pos:column="3">else
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">safe_fclose<pos:position pos:line="50" pos:column="18"/></name> <argument_list pos:line="50" pos:column="19">(<argument><expr><operator pos:line="50" pos:column="20">&amp;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="21">fptmp<pos:position pos:line="50" pos:column="26"/></name></expr></argument>)<pos:position pos:line="50" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">err<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <call><name pos:line="51" pos:column="13">gpgme_data_new_from_file<pos:position pos:line="51" pos:column="37"/></name> <argument_list pos:line="51" pos:column="38">(<argument><expr><operator pos:line="51" pos:column="39">&amp;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="40">data<pos:position pos:line="51" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="46">tempfile<pos:position pos:line="51" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="56">1<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">unlink<pos:position pos:line="53" pos:column="9"/></name> <argument_list pos:line="53" pos:column="10">(<argument><expr><name pos:line="53" pos:column="11">tempfile<pos:position pos:line="53" pos:column="19"/></name></expr></argument>)<pos:position pos:line="53" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">err<pos:position pos:line="54" pos:column="10"/></name></expr>)<pos:position pos:line="54" pos:column="11"/></condition><then pos:line="54" pos:column="11"> 
    <block pos:line="55" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">mutt_error<pos:position pos:line="56" pos:column="17"/></name> <argument_list pos:line="56" pos:column="18">(<argument><expr><call><name pos:line="56" pos:column="19">_<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><literal type="string" pos:line="56" pos:column="21">"error allocating data object: %s\n"<pos:position pos:line="56" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="60">gpgme_strerror<pos:position pos:line="56" pos:column="74"/></name> <argument_list pos:line="56" pos:column="75">(<argument><expr><name pos:line="56" pos:column="76">err<pos:position pos:line="56" pos:column="79"/></name></expr></argument>)<pos:position pos:line="56" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="82"/></expr_stmt>
      <return pos:line="57" pos:column="7">return <expr><name pos:line="57" pos:column="14">NULL<pos:position pos:line="57" pos:column="18"/></name></expr>;<pos:position pos:line="57" pos:column="19"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">data<pos:position pos:line="60" pos:column="14"/></name></expr>;<pos:position pos:line="60" pos:column="15"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

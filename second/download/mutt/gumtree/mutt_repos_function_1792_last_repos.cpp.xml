<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1792_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_setenv<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">BUFFER<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">tmp<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">BUFFER<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">unsigned<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">long<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">data<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">BUFFER<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">err<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">query<pos:position pos:line="3" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="14">unset<pos:position pos:line="3" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="21">len<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">name<pos:position pos:line="4" pos:column="13"/></name></decl>, <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier><modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="17">save<pos:position pos:line="4" pos:column="21"/></name></decl>, <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier><modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="25">envp<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">envlist<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">count<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">query<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <literal type="number" pos:line="7" pos:column="11">0<pos:position pos:line="7" pos:column="12"/></literal></expr>;<pos:position pos:line="7" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">unset<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <name pos:line="8" pos:column="11">data<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">&amp;<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="18">MUTT_SET_UNSET<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">!<pos:position pos:line="10" pos:column="8"/></operator><call><name pos:line="10" pos:column="8">MoreArgs<pos:position pos:line="10" pos:column="16"/></name> <argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">s<pos:position pos:line="10" pos:column="19"/></name></expr></argument>)<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">strfcpy<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><name><name pos:line="12" pos:column="14">err<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">data<pos:position pos:line="12" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="25">_<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><literal type="string" pos:line="12" pos:column="27">"too few arguments"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="49">err<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">dsize<pos:position pos:line="12" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">*<pos:position pos:line="16" pos:column="8"/></operator><name><name pos:line="16" pos:column="8">s<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">dptr<pos:position pos:line="16" pos:column="15"/></name></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <literal type="char" pos:line="16" pos:column="19">'?'<pos:position pos:line="16" pos:column="22"/></literal></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">query<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">s<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">dptr<pos:position pos:line="19" pos:column="12"/></name></name><operator pos:line="19" pos:column="12">++<pos:position pos:line="19" pos:column="14"/></operator></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="22" pos:column="3">/* get variable name */</comment>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">mutt_extract_token<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">tmp<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">s<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="31">MUTT_TOKEN_EQUAL<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">len<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <call><name pos:line="24" pos:column="9">strlen<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><name><name pos:line="24" pos:column="17">tmp<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">data<pos:position pos:line="24" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">query<pos:position pos:line="26" pos:column="12"/></name></expr>)<pos:position pos:line="26" pos:column="13"/></condition><then pos:line="26" pos:column="13">
  <block pos:line="27" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">int<pos:position pos:line="28" pos:column="8"/></name></type> <name pos:line="28" pos:column="9">found<pos:position pos:line="28" pos:column="14"/></name> <init pos:line="28" pos:column="15">= <expr><literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="19"/></decl_stmt>
    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><name pos:line="29" pos:column="12">envp<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">&amp;&amp;<pos:position pos:line="29" pos:column="27"/></operator> <operator pos:line="29" pos:column="20">*<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">envp<pos:position pos:line="29" pos:column="25"/></name></expr>)<pos:position pos:line="29" pos:column="26"/></condition>
    <block pos:line="30" pos:column="5">{
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><operator pos:line="31" pos:column="11">!<pos:position pos:line="31" pos:column="12"/></operator><call><name pos:line="31" pos:column="12">mutt_strncmp<pos:position pos:line="31" pos:column="24"/></name> <argument_list pos:line="31" pos:column="25">(<argument><expr><name><name pos:line="31" pos:column="26">tmp<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">data<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="37">*<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">envp<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">len<pos:position pos:line="31" pos:column="47"/></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="49"/></condition><then pos:line="31" pos:column="49">
      <block pos:line="32" pos:column="7">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">found<pos:position pos:line="33" pos:column="19"/></name></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20">
        <block pos:line="34" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="35" pos:column="11">mutt_endwin<pos:position pos:line="35" pos:column="22"/></name> <argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
          <expr_stmt><expr><name pos:line="36" pos:column="11">found<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <literal type="number" pos:line="36" pos:column="19">1<pos:position pos:line="36" pos:column="20"/></literal></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">puts<pos:position pos:line="38" pos:column="13"/></name> <argument_list pos:line="38" pos:column="14">(<argument><expr><operator pos:line="38" pos:column="15">*<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">envp<pos:position pos:line="38" pos:column="20"/></name></expr></argument>)<pos:position pos:line="38" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="40" pos:column="7">envp<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">++<pos:position pos:line="40" pos:column="13"/></operator></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></while>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">found<pos:position pos:line="43" pos:column="14"/></name></expr>)<pos:position pos:line="43" pos:column="15"/></condition><then pos:line="43" pos:column="15">
    <block pos:line="44" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">mutt_any_key_to_continue<pos:position pos:line="45" pos:column="31"/></name> <argument_list pos:line="45" pos:column="32">(<argument><expr><name pos:line="45" pos:column="33">NULL<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
      <return pos:line="46" pos:column="7">return <expr><literal type="number" pos:line="46" pos:column="14">0<pos:position pos:line="46" pos:column="15"/></literal></expr>;<pos:position pos:line="46" pos:column="16"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">snprintf<pos:position pos:line="49" pos:column="13"/></name> <argument_list pos:line="49" pos:column="14">(<argument><expr><name><name pos:line="49" pos:column="15">err<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">-&gt;<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="20">data<pos:position pos:line="49" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="26">err<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">dsize<pos:position pos:line="49" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="38">_<pos:position pos:line="49" pos:column="39"/></name><argument_list pos:line="49" pos:column="39">(<argument><expr><literal type="string" pos:line="49" pos:column="40">"%s is unset"<pos:position pos:line="49" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="56">tmp<pos:position pos:line="49" pos:column="59"/></name><operator pos:line="49" pos:column="59">-&gt;<pos:position pos:line="49" pos:column="64"/></operator><name pos:line="49" pos:column="61">data<pos:position pos:line="49" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="67"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><operator pos:line="50" pos:column="12">-<pos:position pos:line="50" pos:column="13"/></operator><literal type="number" pos:line="50" pos:column="13">1<pos:position pos:line="50" pos:column="14"/></literal></expr>;<pos:position pos:line="50" pos:column="15"/></return>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">unset<pos:position pos:line="53" pos:column="12"/></name></expr>)<pos:position pos:line="53" pos:column="13"/></condition><then pos:line="53" pos:column="13">
  <block pos:line="54" pos:column="3">{
    <expr_stmt><expr><name pos:line="55" pos:column="5">count<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <literal type="number" pos:line="55" pos:column="13">0<pos:position pos:line="55" pos:column="14"/></literal></expr>;<pos:position pos:line="55" pos:column="15"/></expr_stmt>
    <while pos:line="56" pos:column="5">while <condition pos:line="56" pos:column="11">(<expr><name pos:line="56" pos:column="12">envp<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">&amp;&amp;<pos:position pos:line="56" pos:column="27"/></operator> <operator pos:line="56" pos:column="20">*<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="21">envp<pos:position pos:line="56" pos:column="25"/></name></expr>)<pos:position pos:line="56" pos:column="26"/></condition>
    <block pos:line="57" pos:column="5">{
      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><operator pos:line="58" pos:column="11">!<pos:position pos:line="58" pos:column="12"/></operator><call><name pos:line="58" pos:column="12">mutt_strncmp<pos:position pos:line="58" pos:column="24"/></name> <argument_list pos:line="58" pos:column="25">(<argument><expr><name><name pos:line="58" pos:column="26">tmp<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">-&gt;<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="31">data<pos:position pos:line="58" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="37">*<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="38">envp<pos:position pos:line="58" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="44">len<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call> <operator pos:line="58" pos:column="49">&amp;&amp;<pos:position pos:line="58" pos:column="59"/></operator> <operator pos:line="58" pos:column="52">(<pos:position pos:line="58" pos:column="53"/></operator><operator pos:line="58" pos:column="53">*<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="54">envp<pos:position pos:line="58" pos:column="58"/></name><operator pos:line="58" pos:column="58">)<pos:position pos:line="58" pos:column="59"/></operator><index pos:line="58" pos:column="59">[<expr><name pos:line="58" pos:column="60">len<pos:position pos:line="58" pos:column="63"/></name></expr>]<pos:position pos:line="58" pos:column="64"/></index> <operator pos:line="58" pos:column="65">==<pos:position pos:line="58" pos:column="67"/></operator> <literal type="char" pos:line="58" pos:column="68">'='<pos:position pos:line="58" pos:column="71"/></literal></expr>)<pos:position pos:line="58" pos:column="72"/></condition><then pos:line="58" pos:column="72">
      <block pos:line="59" pos:column="7">{
        <comment type="block" pos:line="60" pos:column="9">/* shuffle down */</comment>
        <expr_stmt><expr><name pos:line="61" pos:column="9">save<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <name pos:line="61" pos:column="16">envp<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">++<pos:position pos:line="61" pos:column="22"/></operator></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
        <while pos:line="62" pos:column="9">while <condition pos:line="62" pos:column="15">(<expr><operator pos:line="62" pos:column="16">*<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="17">envp<pos:position pos:line="62" pos:column="21"/></name></expr>)<pos:position pos:line="62" pos:column="22"/></condition>
        <block pos:line="63" pos:column="9">{
          <expr_stmt><expr><operator pos:line="64" pos:column="11">*<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="12">save<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">++<pos:position pos:line="64" pos:column="18"/></operator> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <operator pos:line="64" pos:column="21">*<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="22">envp<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">++<pos:position pos:line="64" pos:column="28"/></operator></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>
          <expr_stmt><expr><name pos:line="65" pos:column="11">count<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">++<pos:position pos:line="65" pos:column="18"/></operator></expr>;<pos:position pos:line="65" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></while>
        <expr_stmt><expr><operator pos:line="67" pos:column="9">*<pos:position pos:line="67" pos:column="10"/></operator><name pos:line="67" pos:column="10">save<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <name pos:line="67" pos:column="17">NULL<pos:position pos:line="67" pos:column="21"/></name></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">safe_realloc<pos:position pos:line="68" pos:column="21"/></name> <argument_list pos:line="68" pos:column="22">(<argument><expr><operator pos:line="68" pos:column="23">&amp;<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="24">envlist<pos:position pos:line="68" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="33">sizeof<argument_list pos:line="68" pos:column="39">(<argument><expr><name pos:line="68" pos:column="40">char<pos:position pos:line="68" pos:column="44"/></name> <operator pos:line="68" pos:column="45">*<pos:position pos:line="68" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></sizeof> <operator pos:line="68" pos:column="48">*<pos:position pos:line="68" pos:column="49"/></operator> <operator pos:line="68" pos:column="50">(<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="51">count<pos:position pos:line="68" pos:column="56"/></name><operator pos:line="68" pos:column="56">+<pos:position pos:line="68" pos:column="57"/></operator><literal type="number" pos:line="68" pos:column="57">1<pos:position pos:line="68" pos:column="58"/></literal><operator pos:line="68" pos:column="58">)<pos:position pos:line="68" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="61"/></expr_stmt>
        <return pos:line="69" pos:column="9">return <expr><literal type="number" pos:line="69" pos:column="16">0<pos:position pos:line="69" pos:column="17"/></literal></expr>;<pos:position pos:line="69" pos:column="18"/></return>
      }<pos:position pos:line="70" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="71" pos:column="7">envp<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">++<pos:position pos:line="71" pos:column="13"/></operator></expr>;<pos:position pos:line="71" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="72" pos:column="7">count<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">++<pos:position pos:line="72" pos:column="14"/></operator></expr>;<pos:position pos:line="72" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></while>
    <return pos:line="74" pos:column="5">return <expr><operator pos:line="74" pos:column="12">-<pos:position pos:line="74" pos:column="13"/></operator><literal type="number" pos:line="74" pos:column="13">1<pos:position pos:line="74" pos:column="14"/></literal></expr>;<pos:position pos:line="74" pos:column="15"/></return>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="77" pos:column="3">/* set variable */</comment>

  <if pos:line="79" pos:column="3">if <condition pos:line="79" pos:column="6">(<expr><operator pos:line="79" pos:column="7">*<pos:position pos:line="79" pos:column="8"/></operator><name><name pos:line="79" pos:column="8">s<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">-&gt;<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="11">dptr<pos:position pos:line="79" pos:column="15"/></name></name> <operator pos:line="79" pos:column="16">==<pos:position pos:line="79" pos:column="18"/></operator> <literal type="char" pos:line="79" pos:column="19">'='<pos:position pos:line="79" pos:column="22"/></literal></expr>)<pos:position pos:line="79" pos:column="23"/></condition><then pos:line="79" pos:column="23">
  <block pos:line="80" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">s<pos:position pos:line="81" pos:column="6"/></name><operator pos:line="81" pos:column="6">-&gt;<pos:position pos:line="81" pos:column="11"/></operator><name pos:line="81" pos:column="8">dptr<pos:position pos:line="81" pos:column="12"/></name></name><operator pos:line="81" pos:column="12">++<pos:position pos:line="81" pos:column="14"/></operator></expr>;<pos:position pos:line="81" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">SKIPWS<pos:position pos:line="82" pos:column="11"/></name> <argument_list pos:line="82" pos:column="12">(<argument><expr><name><name pos:line="82" pos:column="13">s<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">-&gt;<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="16">dptr<pos:position pos:line="82" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="83" pos:column="4"/></block></then></if>

  <if pos:line="85" pos:column="3">if <condition pos:line="85" pos:column="6">(<expr><operator pos:line="85" pos:column="7">!<pos:position pos:line="85" pos:column="8"/></operator><call><name pos:line="85" pos:column="8">MoreArgs<pos:position pos:line="85" pos:column="16"/></name> <argument_list pos:line="85" pos:column="17">(<argument><expr><name pos:line="85" pos:column="18">s<pos:position pos:line="85" pos:column="19"/></name></expr></argument>)<pos:position pos:line="85" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="21"/></condition><then pos:line="85" pos:column="21">
  <block pos:line="86" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">strfcpy<pos:position pos:line="87" pos:column="12"/></name> <argument_list pos:line="87" pos:column="13">(<argument><expr><name><name pos:line="87" pos:column="14">err<pos:position pos:line="87" pos:column="17"/></name><operator pos:line="87" pos:column="17">-&gt;<pos:position pos:line="87" pos:column="22"/></operator><name pos:line="87" pos:column="19">data<pos:position pos:line="87" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="25">_<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><literal type="string" pos:line="87" pos:column="27">"too few arguments"<pos:position pos:line="87" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="49">err<pos:position pos:line="87" pos:column="52"/></name><operator pos:line="87" pos:column="52">-&gt;<pos:position pos:line="87" pos:column="57"/></operator><name pos:line="87" pos:column="54">dsize<pos:position pos:line="87" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="61"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><operator pos:line="88" pos:column="12">-<pos:position pos:line="88" pos:column="13"/></operator><literal type="number" pos:line="88" pos:column="13">1<pos:position pos:line="88" pos:column="14"/></literal></expr>;<pos:position pos:line="88" pos:column="15"/></return>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="91" pos:column="3">name<pos:position pos:line="91" pos:column="7"/></name> <operator pos:line="91" pos:column="8">=<pos:position pos:line="91" pos:column="9"/></operator> <call><name pos:line="91" pos:column="10">safe_strdup<pos:position pos:line="91" pos:column="21"/></name> <argument_list pos:line="91" pos:column="22">(<argument><expr><name><name pos:line="91" pos:column="23">tmp<pos:position pos:line="91" pos:column="26"/></name><operator pos:line="91" pos:column="26">-&gt;<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="28">data<pos:position pos:line="91" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="92" pos:column="3">mutt_extract_token<pos:position pos:line="92" pos:column="21"/></name> <argument_list pos:line="92" pos:column="22">(<argument><expr><name pos:line="92" pos:column="23">tmp<pos:position pos:line="92" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="28">s<pos:position pos:line="92" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="31">0<pos:position pos:line="92" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="93" pos:column="3">mutt_envlist_set<pos:position pos:line="93" pos:column="19"/></name> <argument_list pos:line="93" pos:column="20">(<argument><expr><name pos:line="93" pos:column="21">name<pos:position pos:line="93" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="27">tmp<pos:position pos:line="93" pos:column="30"/></name><operator pos:line="93" pos:column="30">-&gt;<pos:position pos:line="93" pos:column="35"/></operator><name pos:line="93" pos:column="32">data<pos:position pos:line="93" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="38">1<pos:position pos:line="93" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">FREE<pos:position pos:line="94" pos:column="7"/></name> <argument_list pos:line="94" pos:column="8">(<argument><expr><operator pos:line="94" pos:column="9">&amp;<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="10">name<pos:position pos:line="94" pos:column="14"/></name></expr></argument>)<pos:position pos:line="94" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="16"/></expr_stmt>

  <return pos:line="96" pos:column="3">return <expr><literal type="number" pos:line="96" pos:column="10">0<pos:position pos:line="96" pos:column="11"/></literal></expr>;<pos:position pos:line="96" pos:column="12"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

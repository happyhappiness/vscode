<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_665_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">pop_sync_mailbox<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">CONTEXT<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">ctx<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">index_hint<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="10">ret<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">LONG_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">POP_DATA<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">pop_data<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><operator pos:line="5" pos:column="24">(<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">POP_DATA<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><operator pos:line="5" pos:column="35">)<pos:position pos:line="5" pos:column="36"/></operator><name><name pos:line="5" pos:column="36">ctx<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">data<pos:position pos:line="5" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">pop_data<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">check_time<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>

  <macro><name pos:line="9" pos:column="3">FOREVER<pos:position pos:line="9" pos:column="10"/></name></macro>
  <block pos:line="10" pos:column="3">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">pop_reconnect<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">ctx<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call> <operator pos:line="11" pos:column="29">&lt;<pos:position pos:line="11" pos:column="33"/></operator> <literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><operator pos:line="12" pos:column="14">-<pos:position pos:line="12" pos:column="15"/></operator><literal type="number" pos:line="12" pos:column="15">1<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">mutt_message<pos:position pos:line="14" pos:column="17"/></name> <argument_list pos:line="14" pos:column="18">(<argument><expr><call><name pos:line="14" pos:column="19">_<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><literal type="string" pos:line="14" pos:column="21">"Marking %d messages deleted..."<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="56">ctx<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">-&gt;<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="61">deleted<pos:position pos:line="14" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="70"/></expr_stmt>

    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">i<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr><operator pos:line="16" pos:column="15">,<pos:position pos:line="16" pos:column="16"/></operator> <expr><name pos:line="16" pos:column="17">ret<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr>;<pos:position pos:line="16" pos:column="25"/></init> <condition><expr><name pos:line="16" pos:column="26">ret<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">==<pos:position pos:line="16" pos:column="32"/></operator> <literal type="number" pos:line="16" pos:column="33">0<pos:position pos:line="16" pos:column="34"/></literal> <operator pos:line="16" pos:column="35">&amp;&amp;<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="38">i<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">&lt;<pos:position pos:line="16" pos:column="44"/></operator> <name><name pos:line="16" pos:column="42">ctx<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">msgcount<pos:position pos:line="16" pos:column="55"/></name></name></expr>;<pos:position pos:line="16" pos:column="56"/></condition> <incr><expr><name pos:line="16" pos:column="57">i<pos:position pos:line="16" pos:column="58"/></name><operator pos:line="16" pos:column="58">++<pos:position pos:line="16" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="61"/></control>
    <block pos:line="17" pos:column="5">{
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><name><name pos:line="18" pos:column="11">ctx<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">hdrs<pos:position pos:line="18" pos:column="20"/></name><index pos:line="18" pos:column="20">[<expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name></expr>]<pos:position pos:line="18" pos:column="23"/></index></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">deleted<pos:position pos:line="18" pos:column="32"/></name></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33">
      <block pos:line="19" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">snprintf<pos:position pos:line="20" pos:column="17"/></name> <argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">buf<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="24">sizeof <argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">buf<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="38">"DELE %d\r\n"<pos:position pos:line="20" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="53">ctx<pos:position pos:line="20" pos:column="56"/></name><operator pos:line="20" pos:column="56">-&gt;<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="58">hdrs<pos:position pos:line="20" pos:column="62"/></name><index pos:line="20" pos:column="62">[<expr><name pos:line="20" pos:column="63">i<pos:position pos:line="20" pos:column="64"/></name></expr>]<pos:position pos:line="20" pos:column="65"/></index></name><operator pos:line="20" pos:column="65">-&gt;<pos:position pos:line="20" pos:column="70"/></operator><name pos:line="20" pos:column="67">refno<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">ret<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">pop_query<pos:position pos:line="21" pos:column="24"/></name> <argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">pop_data<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">buf<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="41">sizeof <argument_list pos:line="21" pos:column="48">(<argument><expr><name pos:line="21" pos:column="49">buf<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="22" pos:column="8"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></for>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">ret<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">==<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18">
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">strfcpy<pos:position pos:line="27" pos:column="14"/></name> <argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">buf<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="21">"QUIT\r\n"<pos:position pos:line="27" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="33">sizeof <argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">buf<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">ret<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">pop_query<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">pop_data<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">buf<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="39">sizeof <argument_list pos:line="28" pos:column="46">(<argument><expr><name pos:line="28" pos:column="47">buf<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">ret<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">==<pos:position pos:line="31" pos:column="15"/></operator> <literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>)<pos:position pos:line="31" pos:column="18"/></condition><then pos:line="31" pos:column="18">
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">pop_data<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">clear_cache<pos:position pos:line="33" pos:column="28"/></name></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <literal type="number" pos:line="33" pos:column="31">1<pos:position pos:line="33" pos:column="32"/></literal></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">pop_clear_cache<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">pop_data<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="35" pos:column="7">pop_data<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">status<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">POP_DISCONNECTED<pos:position pos:line="35" pos:column="42"/></name></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
      <return pos:line="36" pos:column="7">return <expr><literal type="number" pos:line="36" pos:column="14">0<pos:position pos:line="36" pos:column="15"/></literal></expr>;<pos:position pos:line="36" pos:column="16"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">ret<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">==<pos:position pos:line="39" pos:column="15"/></operator> <operator pos:line="39" pos:column="16">-<pos:position pos:line="39" pos:column="17"/></operator><literal type="number" pos:line="39" pos:column="17">2<pos:position pos:line="39" pos:column="18"/></literal></expr>)<pos:position pos:line="39" pos:column="19"/></condition><then pos:line="39" pos:column="19">
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">mutt_error<pos:position pos:line="41" pos:column="17"/></name> <argument_list pos:line="41" pos:column="18">(<argument><expr><literal type="string" pos:line="41" pos:column="19">"%s"<pos:position pos:line="41" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="25">pop_data<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">-&gt;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="35">err_msg<pos:position pos:line="41" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">mutt_sleep<pos:position pos:line="42" pos:column="17"/></name> <argument_list pos:line="42" pos:column="18">(<argument><expr><literal type="number" pos:line="42" pos:column="19">2<pos:position pos:line="42" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
      <return pos:line="43" pos:column="7">return <expr><operator pos:line="43" pos:column="14">-<pos:position pos:line="43" pos:column="15"/></operator><literal type="number" pos:line="43" pos:column="15">1<pos:position pos:line="43" pos:column="16"/></literal></expr>;<pos:position pos:line="43" pos:column="17"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
  }<pos:position pos:line="45" pos:column="4"/></block>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

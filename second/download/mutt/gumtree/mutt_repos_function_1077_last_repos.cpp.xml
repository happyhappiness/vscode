<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1077_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">mutt_hcache_fetch_raw<pos:position pos:line="2" pos:column="22"/></name> <parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">header_cache_t<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">h<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">filename<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                       <parameter><function_decl><type><name pos:line="3" pos:column="24">size_t<pos:position pos:line="3" pos:column="30"/></name></type>(<modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><name pos:line="3" pos:column="32">keylen<pos:position pos:line="3" pos:column="38"/></name>) <parameter_list pos:line="3" pos:column="40">(<parameter><decl><type><specifier pos:line="3" pos:column="41">const<pos:position pos:line="3" pos:column="46"/></specifier> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">fn<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="56"/></parameter_list></function_decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
<cpp:ifndef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifndef<pos:position pos:line="5" pos:column="8"/></cpp:directive> <name pos:line="5" pos:column="9">HAVE_DB4<pos:position pos:line="5" pos:column="17"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">path<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><name pos:line="6" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="6" pos:column="28"/></name></expr>]<pos:position pos:line="6" pos:column="29"/></index></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ksize<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">HAVE_QDBM<pos:position pos:line="9" pos:column="17"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
<cpp:elif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">elif<pos:position pos:line="11" pos:column="6"/></cpp:directive> <expr><name pos:line="11" pos:column="7">HAVE_TC<pos:position pos:line="11" pos:column="14"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">void<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">data<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">sp<pos:position pos:line="13" pos:column="9"/></name></decl>;<pos:position pos:line="13" pos:column="10"/></decl_stmt>
<cpp:elif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">elif<pos:position pos:line="14" pos:column="6"/></cpp:directive> <expr><name pos:line="14" pos:column="7">HAVE_KC<pos:position pos:line="14" pos:column="14"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">void<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">data<pos:position pos:line="15" pos:column="13"/></name></decl>;<pos:position pos:line="15" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">size_t<pos:position pos:line="16" pos:column="9"/></name></type> <name pos:line="16" pos:column="10">sp<pos:position pos:line="16" pos:column="12"/></name></decl>;<pos:position pos:line="16" pos:column="13"/></decl_stmt>
<cpp:elif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">elif<pos:position pos:line="17" pos:column="6"/></cpp:directive> <expr><name pos:line="17" pos:column="7">HAVE_GDBM<pos:position pos:line="17" pos:column="16"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">datum<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">key<pos:position pos:line="18" pos:column="12"/></name></decl>;<pos:position pos:line="18" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">datum<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">data<pos:position pos:line="19" pos:column="13"/></name></decl>;<pos:position pos:line="19" pos:column="14"/></decl_stmt>
<cpp:elif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">elif<pos:position pos:line="20" pos:column="6"/></cpp:directive> <expr><name pos:line="20" pos:column="7">HAVE_DB4<pos:position pos:line="20" pos:column="15"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">DBT<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">key<pos:position pos:line="21" pos:column="10"/></name></decl>;<pos:position pos:line="21" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">DBT<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">data<pos:position pos:line="22" pos:column="11"/></name></decl>;<pos:position pos:line="22" pos:column="12"/></decl_stmt>
<cpp:elif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">elif<pos:position pos:line="23" pos:column="6"/></cpp:directive> <expr><name pos:line="23" pos:column="7">HAVE_LMDB<pos:position pos:line="23" pos:column="16"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">MDB_val<pos:position pos:line="24" pos:column="10"/></name></type> <name pos:line="24" pos:column="11">key<pos:position pos:line="24" pos:column="14"/></name></decl>;<pos:position pos:line="24" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">MDB_val<pos:position pos:line="25" pos:column="10"/></name></type> <name pos:line="25" pos:column="11">data<pos:position pos:line="25" pos:column="15"/></name></decl>;<pos:position pos:line="25" pos:column="16"/></decl_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><operator pos:line="28" pos:column="7">!<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">h<pos:position pos:line="28" pos:column="9"/></name></expr>)<pos:position pos:line="28" pos:column="10"/></condition><then pos:line="28" pos:column="10">
    <block type="pseudo"><return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">NULL<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return></block></then></if>

<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">HAVE_DB4<pos:position pos:line="31" pos:column="16"/></name></cpp:ifdef>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name><name pos:line="32" pos:column="7">filename<pos:position pos:line="32" pos:column="15"/></name><index pos:line="32" pos:column="15">[<expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>]<pos:position pos:line="32" pos:column="18"/></index></name> <operator pos:line="32" pos:column="19">==<pos:position pos:line="32" pos:column="21"/></operator> <literal type="char" pos:line="32" pos:column="22">'/'<pos:position pos:line="32" pos:column="25"/></literal></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="5">filename<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">mutt_hcache_dbt_init<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><operator pos:line="35" pos:column="24">&amp;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="25">key<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="30">(<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">void<pos:position pos:line="35" pos:column="35"/></name> <operator pos:line="35" pos:column="36">*<pos:position pos:line="35" pos:column="37"/></operator><operator pos:line="35" pos:column="37">)<pos:position pos:line="35" pos:column="38"/></operator> <name pos:line="35" pos:column="39">filename<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="49">keylen<pos:position pos:line="35" pos:column="55"/></name><argument_list pos:line="35" pos:column="55">(<argument><expr><name pos:line="35" pos:column="56">filename<pos:position pos:line="35" pos:column="64"/></name></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">mutt_hcache_dbt_empty_init<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><operator pos:line="36" pos:column="30">&amp;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="31">data<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">data<pos:position pos:line="37" pos:column="7"/></name><operator pos:line="37" pos:column="7">.<pos:position pos:line="37" pos:column="8"/></operator><name pos:line="37" pos:column="8">flags<pos:position pos:line="37" pos:column="13"/></name></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <name pos:line="37" pos:column="16">DB_DBT_MALLOC<pos:position pos:line="37" pos:column="29"/></name></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><call><name><name pos:line="39" pos:column="3">h<pos:position pos:line="39" pos:column="4"/></name><operator pos:line="39" pos:column="4">-&gt;<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="6">db<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">get<pos:position pos:line="39" pos:column="13"/></name></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name><name pos:line="39" pos:column="14">h<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">db<pos:position pos:line="39" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="21">NULL<pos:position pos:line="39" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="27">&amp;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="28">key<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="34">data<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="40">0<pos:position pos:line="39" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>

  <return pos:line="41" pos:column="3">return <expr><name><name pos:line="41" pos:column="10">data<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">.<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">data<pos:position pos:line="41" pos:column="19"/></name></name></expr>;<pos:position pos:line="41" pos:column="20"/></return>
<cpp:else pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">else<pos:position pos:line="42" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">strncpy<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">path<pos:position pos:line="43" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="17">h<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">folder<pos:position pos:line="43" pos:column="26"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="28">sizeof <argument_list pos:line="43" pos:column="35">(<argument><expr><name pos:line="43" pos:column="36">path<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">safe_strcat<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">path<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="21">sizeof <argument_list pos:line="44" pos:column="28">(<argument><expr><name pos:line="44" pos:column="29">path<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="44" pos:column="36">filename<pos:position pos:line="44" pos:column="44"/></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><name pos:line="46" pos:column="3">ksize<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <call><name pos:line="46" pos:column="11">strlen<pos:position pos:line="46" pos:column="17"/></name> <argument_list pos:line="46" pos:column="18">(<argument><expr><name><name pos:line="46" pos:column="19">h<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">folder<pos:position pos:line="46" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="29"/></argument_list></call> <operator pos:line="46" pos:column="30">+<pos:position pos:line="46" pos:column="31"/></operator> <call><name pos:line="46" pos:column="32">keylen<pos:position pos:line="46" pos:column="38"/></name> <argument_list pos:line="46" pos:column="39">(<argument><expr><name pos:line="46" pos:column="40">path<pos:position pos:line="46" pos:column="44"/></name> <operator pos:line="46" pos:column="45">+<pos:position pos:line="46" pos:column="46"/></operator> <call><name pos:line="46" pos:column="47">strlen<pos:position pos:line="46" pos:column="53"/></name> <argument_list pos:line="46" pos:column="54">(<argument><expr><name><name pos:line="46" pos:column="55">h<pos:position pos:line="46" pos:column="56"/></name><operator pos:line="46" pos:column="56">-&gt;<pos:position pos:line="46" pos:column="61"/></operator><name pos:line="46" pos:column="58">folder<pos:position pos:line="46" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>  
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">HAVE_QDBM<pos:position pos:line="49" pos:column="17"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="50" pos:column="3">data<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <call><name pos:line="50" pos:column="10">vlget<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name><name pos:line="50" pos:column="16">h<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">db<pos:position pos:line="50" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="23">path<pos:position pos:line="50" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="29">ksize<pos:position pos:line="50" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="36">NULL<pos:position pos:line="50" pos:column="40"/></name></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt>

  <return pos:line="52" pos:column="3">return <expr><name pos:line="52" pos:column="10">data<pos:position pos:line="52" pos:column="14"/></name></expr>;<pos:position pos:line="52" pos:column="15"/></return>
<cpp:elif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">elif<pos:position pos:line="53" pos:column="6"/></cpp:directive> <expr><name pos:line="53" pos:column="7">HAVE_TC<pos:position pos:line="53" pos:column="14"/></name></expr></cpp:elif>
  <expr_stmt><expr><name pos:line="54" pos:column="3">data<pos:position pos:line="54" pos:column="7"/></name> <operator pos:line="54" pos:column="8">=<pos:position pos:line="54" pos:column="9"/></operator> <call><name pos:line="54" pos:column="10">tcbdbget<pos:position pos:line="54" pos:column="18"/></name><argument_list pos:line="54" pos:column="18">(<argument><expr><name><name pos:line="54" pos:column="19">h<pos:position pos:line="54" pos:column="20"/></name><operator pos:line="54" pos:column="20">-&gt;<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="22">db<pos:position pos:line="54" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="26">path<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="32">ksize<pos:position pos:line="54" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="39">&amp;<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="40">sp<pos:position pos:line="54" pos:column="42"/></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>

  <return pos:line="56" pos:column="3">return <expr><name pos:line="56" pos:column="10">data<pos:position pos:line="56" pos:column="14"/></name></expr>;<pos:position pos:line="56" pos:column="15"/></return>
<cpp:elif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">elif<pos:position pos:line="57" pos:column="6"/></cpp:directive> <expr><name pos:line="57" pos:column="7">HAVE_KC<pos:position pos:line="57" pos:column="14"/></name></expr></cpp:elif>
  <expr_stmt><expr><name pos:line="58" pos:column="3">data<pos:position pos:line="58" pos:column="7"/></name> <operator pos:line="58" pos:column="8">=<pos:position pos:line="58" pos:column="9"/></operator> <call><name pos:line="58" pos:column="10">kcdbget<pos:position pos:line="58" pos:column="17"/></name><argument_list pos:line="58" pos:column="17">(<argument><expr><name><name pos:line="58" pos:column="18">h<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">-&gt;<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="21">db<pos:position pos:line="58" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="25">path<pos:position pos:line="58" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="31">ksize<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="38">&amp;<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="39">sp<pos:position pos:line="58" pos:column="41"/></name></expr></argument>)<pos:position pos:line="58" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="43"/></expr_stmt>

  <return pos:line="60" pos:column="3">return <expr><name pos:line="60" pos:column="10">data<pos:position pos:line="60" pos:column="14"/></name></expr>;<pos:position pos:line="60" pos:column="15"/></return>
<cpp:elif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">elif<pos:position pos:line="61" pos:column="6"/></cpp:directive> <expr><name pos:line="61" pos:column="7">HAVE_GDBM<pos:position pos:line="61" pos:column="16"/></name></expr></cpp:elif>
  <expr_stmt><expr><name><name pos:line="62" pos:column="3">key<pos:position pos:line="62" pos:column="6"/></name><operator pos:line="62" pos:column="6">.<pos:position pos:line="62" pos:column="7"/></operator><name pos:line="62" pos:column="7">dptr<pos:position pos:line="62" pos:column="11"/></name></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <name pos:line="62" pos:column="14">path<pos:position pos:line="62" pos:column="18"/></name></expr>;<pos:position pos:line="62" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="63" pos:column="3">key<pos:position pos:line="63" pos:column="6"/></name><operator pos:line="63" pos:column="6">.<pos:position pos:line="63" pos:column="7"/></operator><name pos:line="63" pos:column="7">dsize<pos:position pos:line="63" pos:column="12"/></name></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <name pos:line="63" pos:column="15">ksize<pos:position pos:line="63" pos:column="20"/></name></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name pos:line="65" pos:column="3">data<pos:position pos:line="65" pos:column="7"/></name> <operator pos:line="65" pos:column="8">=<pos:position pos:line="65" pos:column="9"/></operator> <call><name pos:line="65" pos:column="10">gdbm_fetch<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><name><name pos:line="65" pos:column="21">h<pos:position pos:line="65" pos:column="22"/></name><operator pos:line="65" pos:column="22">-&gt;<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="24">db<pos:position pos:line="65" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="28">key<pos:position pos:line="65" pos:column="31"/></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>

  <return pos:line="67" pos:column="3">return <expr><name><name pos:line="67" pos:column="10">data<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">.<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="15">dptr<pos:position pos:line="67" pos:column="19"/></name></name></expr>;<pos:position pos:line="67" pos:column="20"/></return>
<cpp:elif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">elif<pos:position pos:line="68" pos:column="6"/></cpp:directive> <expr><name pos:line="68" pos:column="7">HAVE_LMDB<pos:position pos:line="68" pos:column="16"/></name></expr></cpp:elif>
  <expr_stmt><expr><name><name pos:line="69" pos:column="3">key<pos:position pos:line="69" pos:column="6"/></name><operator pos:line="69" pos:column="6">.<pos:position pos:line="69" pos:column="7"/></operator><name pos:line="69" pos:column="7">mv_data<pos:position pos:line="69" pos:column="14"/></name></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <name pos:line="69" pos:column="17">path<pos:position pos:line="69" pos:column="21"/></name></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="70" pos:column="3">key<pos:position pos:line="70" pos:column="6"/></name><operator pos:line="70" pos:column="6">.<pos:position pos:line="70" pos:column="7"/></operator><name pos:line="70" pos:column="7">mv_size<pos:position pos:line="70" pos:column="14"/></name></name> <operator pos:line="70" pos:column="15">=<pos:position pos:line="70" pos:column="16"/></operator> <name pos:line="70" pos:column="17">ksize<pos:position pos:line="70" pos:column="22"/></name></expr>;<pos:position pos:line="70" pos:column="23"/></expr_stmt>
  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><operator pos:line="71" pos:column="7">(<pos:position pos:line="71" pos:column="8"/></operator><call><name pos:line="71" pos:column="8">mdb_get_r_txn<pos:position pos:line="71" pos:column="21"/></name> <argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">h<pos:position pos:line="71" pos:column="24"/></name></expr></argument>)<pos:position pos:line="71" pos:column="25"/></argument_list></call> <operator pos:line="71" pos:column="26">!=<pos:position pos:line="71" pos:column="28"/></operator> <name pos:line="71" pos:column="29">MDB_SUCCESS<pos:position pos:line="71" pos:column="40"/></name><operator pos:line="71" pos:column="40">)<pos:position pos:line="71" pos:column="41"/></operator> <operator pos:line="71" pos:column="42">||<pos:position pos:line="71" pos:column="44"/></operator>
      <operator pos:line="72" pos:column="7">(<pos:position pos:line="72" pos:column="8"/></operator><call><name pos:line="72" pos:column="8">mdb_get<pos:position pos:line="72" pos:column="15"/></name> <argument_list pos:line="72" pos:column="16">(<argument><expr><name><name pos:line="72" pos:column="17">h<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">-&gt;<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="20">txn<pos:position pos:line="72" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="25">h<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">db<pos:position pos:line="72" pos:column="30"/></name></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="32">&amp;<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="33">key<pos:position pos:line="72" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="38">&amp;<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="39">data<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call> <operator pos:line="72" pos:column="45">!=<pos:position pos:line="72" pos:column="47"/></operator> <name pos:line="72" pos:column="48">MDB_SUCCESS<pos:position pos:line="72" pos:column="59"/></name><operator pos:line="72" pos:column="59">)<pos:position pos:line="72" pos:column="60"/></operator></expr>)<pos:position pos:line="72" pos:column="61"/></condition><then pos:line="72" pos:column="61">
    <block type="pseudo"><return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">NULL<pos:position pos:line="73" pos:column="16"/></name></expr>;<pos:position pos:line="73" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="75" pos:column="3">/* LMDB claims ownership of the returned data, so this will not be
   * freed in mutt_hcache_free(). */</comment>
  <return pos:line="77" pos:column="3">return <expr><name><name pos:line="77" pos:column="10">data<pos:position pos:line="77" pos:column="14"/></name><operator pos:line="77" pos:column="14">.<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="15">mv_data<pos:position pos:line="77" pos:column="22"/></name></name></expr>;<pos:position pos:line="77" pos:column="23"/></return>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

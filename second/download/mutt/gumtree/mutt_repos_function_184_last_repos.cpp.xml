<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_184_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">mutt_read_line<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">s<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">size_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">size<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">FILE<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">fp<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">line<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">flags<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">offset<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ch<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">s<pos:position pos:line="6" pos:column="9"/></name></expr>)<pos:position pos:line="6" pos:column="10"/></condition><then pos:line="6" pos:column="10">
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><name pos:line="8" pos:column="5">s<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">safe_malloc<pos:position pos:line="8" pos:column="20"/></name> <argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">STRING<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">size<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">STRING<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <macro><name pos:line="12" pos:column="3">FOREVER<pos:position pos:line="12" pos:column="10"/></name></macro>
  <block pos:line="13" pos:column="3">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">fgets<pos:position pos:line="14" pos:column="14"/></name> <argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">s<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">+<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">offset<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="28">*<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">size<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">-<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">offset<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="44">fp<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call> <operator pos:line="14" pos:column="48">==<pos:position pos:line="14" pos:column="50"/></operator> <name pos:line="14" pos:column="51">NULL<pos:position pos:line="14" pos:column="55"/></name></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">FREE<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><operator pos:line="16" pos:column="13">&amp;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="14">s<pos:position pos:line="16" pos:column="15"/></name></expr></argument>)<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
      <return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">NULL<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">ch<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">strchr<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">s<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">+<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="27">offset<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="35">'\n'<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call><operator pos:line="19" pos:column="40">)<pos:position pos:line="19" pos:column="41"/></operator> <operator pos:line="19" pos:column="42">!=<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">NULL<pos:position pos:line="19" pos:column="49"/></name></expr>)<pos:position pos:line="19" pos:column="50"/></condition><then pos:line="19" pos:column="50">
    <block pos:line="20" pos:column="5">{
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">line<pos:position pos:line="21" pos:column="15"/></name></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><operator pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">line<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">)<pos:position pos:line="22" pos:column="16"/></operator><operator pos:line="22" pos:column="16">++<pos:position pos:line="22" pos:column="18"/></operator></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt></block></then></if>
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><name pos:line="23" pos:column="11">flags<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">&amp;<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="19">MUTT_EOL<pos:position pos:line="23" pos:column="27"/></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
	<block type="pseudo"><return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">s<pos:position pos:line="24" pos:column="17"/></name></expr>;<pos:position pos:line="24" pos:column="18"/></return></block></then></if>
      <expr_stmt><expr><operator pos:line="25" pos:column="7">*<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">ch<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <literal type="number" pos:line="25" pos:column="13">0<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></expr_stmt>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">ch<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">&gt;<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="16">s<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">&amp;&amp;<pos:position pos:line="26" pos:column="28"/></operator> <operator pos:line="26" pos:column="21">*<pos:position pos:line="26" pos:column="22"/></operator><operator pos:line="26" pos:column="22">(<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">ch<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">-<pos:position pos:line="26" pos:column="27"/></operator> <literal type="number" pos:line="26" pos:column="28">1<pos:position pos:line="26" pos:column="29"/></literal><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator> <operator pos:line="26" pos:column="31">==<pos:position pos:line="26" pos:column="33"/></operator> <literal type="char" pos:line="26" pos:column="34">'\r'<pos:position pos:line="26" pos:column="38"/></literal></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></operator><operator pos:line="27" pos:column="10">--<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">ch<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt></block></then></if>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><operator pos:line="28" pos:column="11">!<pos:position pos:line="28" pos:column="12"/></operator><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">flags<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">&amp;<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="21">MUTT_CONT<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">)<pos:position pos:line="28" pos:column="31"/></operator> <operator pos:line="28" pos:column="32">||<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">ch<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">==<pos:position pos:line="28" pos:column="40"/></operator> <name pos:line="28" pos:column="41">s<pos:position pos:line="28" pos:column="42"/></name> <operator pos:line="28" pos:column="43">||<pos:position pos:line="28" pos:column="45"/></operator> <operator pos:line="28" pos:column="46">*<pos:position pos:line="28" pos:column="47"/></operator><operator pos:line="28" pos:column="47">(<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">ch<pos:position pos:line="28" pos:column="50"/></name> <operator pos:line="28" pos:column="51">-<pos:position pos:line="28" pos:column="52"/></operator> <literal type="number" pos:line="28" pos:column="53">1<pos:position pos:line="28" pos:column="54"/></literal><operator pos:line="28" pos:column="54">)<pos:position pos:line="28" pos:column="55"/></operator> <operator pos:line="28" pos:column="56">!=<pos:position pos:line="28" pos:column="58"/></operator> <literal type="char" pos:line="28" pos:column="59">'\\'<pos:position pos:line="28" pos:column="63"/></literal></expr>)<pos:position pos:line="28" pos:column="64"/></condition><then pos:line="28" pos:column="64">
	<block type="pseudo"><return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">s<pos:position pos:line="29" pos:column="17"/></name></expr>;<pos:position pos:line="29" pos:column="18"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="30" pos:column="7">offset<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">ch<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">-<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">s<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">-<pos:position pos:line="30" pos:column="24"/></operator> <literal type="number" pos:line="30" pos:column="25">1<pos:position pos:line="30" pos:column="26"/></literal></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <else pos:line="32" pos:column="5">else
    <block pos:line="33" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="34" pos:column="7">int<pos:position pos:line="34" pos:column="10"/></name></type> <name pos:line="34" pos:column="11">c<pos:position pos:line="34" pos:column="12"/></name></decl>;<pos:position pos:line="34" pos:column="13"/></decl_stmt>
      <expr_stmt><expr><name pos:line="35" pos:column="7">c<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <call><name pos:line="35" pos:column="11">getc<pos:position pos:line="35" pos:column="15"/></name> <argument_list pos:line="35" pos:column="16">(<argument><expr><name pos:line="35" pos:column="17">fp<pos:position pos:line="35" pos:column="19"/></name></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt> <comment type="block" pos:line="35" pos:column="22">/* This is kind of a hack. We want to know if the
                        char at the current point in the input stream is EOF.
                        feof() will only tell us if we've already hit EOF, not
                        if the next character is EOF. So, we need to read in
                        the next character and manually check if it is EOF. */</comment>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name pos:line="40" pos:column="11">c<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">==<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">EOF<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20">
      <block pos:line="41" pos:column="7">{
        <comment type="block" pos:line="42" pos:column="9">/* The last line of fp isn't \n terminated */</comment>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">line<pos:position pos:line="43" pos:column="17"/></name></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18">
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="11">(<pos:position pos:line="44" pos:column="12"/></operator><operator pos:line="44" pos:column="12">*<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="13">line<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">)<pos:position pos:line="44" pos:column="18"/></operator><operator pos:line="44" pos:column="18">++<pos:position pos:line="44" pos:column="20"/></operator></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt></block></then></if>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">s<pos:position pos:line="45" pos:column="17"/></name></expr>;<pos:position pos:line="45" pos:column="18"/></return>
      }<pos:position pos:line="46" pos:column="8"/></block></then>
      <else pos:line="47" pos:column="7">else
      <block pos:line="48" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">ungetc<pos:position pos:line="49" pos:column="15"/></name> <argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">c<pos:position pos:line="49" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="20">fp<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt> <comment type="block" pos:line="49" pos:column="25">/* undo our damage */</comment>
        <comment type="block" pos:line="50" pos:column="9">/* There wasn't room for the line -- increase ``s'' */</comment>
        <expr_stmt><expr><name pos:line="51" pos:column="9">offset<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <operator pos:line="51" pos:column="18">*<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">size<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">-<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="26">1<pos:position pos:line="51" pos:column="27"/></literal></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt> <comment type="block" pos:line="51" pos:column="29">/* overwrite the terminating 0 */</comment>
        <expr_stmt><expr><operator pos:line="52" pos:column="9">*<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">size<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">+=<pos:position pos:line="52" pos:column="17"/></operator> <name pos:line="52" pos:column="18">STRING<pos:position pos:line="52" pos:column="24"/></name></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">safe_realloc<pos:position pos:line="53" pos:column="21"/></name> <argument_list pos:line="53" pos:column="22">(<argument><expr><operator pos:line="53" pos:column="23">&amp;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="24">s<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="27">*<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="28">size<pos:position pos:line="53" pos:column="32"/></name></expr></argument>)<pos:position pos:line="53" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></else></if>
    }<pos:position pos:line="55" pos:column="6"/></block></else></if>
  }<pos:position pos:line="56" pos:column="4"/></block>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

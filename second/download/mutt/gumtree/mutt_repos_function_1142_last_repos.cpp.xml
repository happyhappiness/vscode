<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1142_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">reg_syntax_t<pos:position pos:line="1" pos:column="13"/></name></type>
<name pos:line="2" pos:column="1">re_set_syntax<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">syntax<pos:position pos:line="2" pos:column="22"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="23"/></parameter_list>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">reg_syntax_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">syntax<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">reg_syntax_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">ret<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">re_syntax_options<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">re_syntax_options<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">syntax<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">DEBUG<pos:position pos:line="8" pos:column="13"/></name></cpp:ifdef>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">syntax<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&amp;<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="16">RE_DEBUG<pos:position pos:line="9" pos:column="24"/></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">debug<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt></block></then>
  <elseif pos:line="11" pos:column="3">else <if pos:line="11" pos:column="8">if <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">debug<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <comment type="block" pos:line="11" pos:column="19">/* was on but now is not */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">debug<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="13" pos:column="8">/* DEBUG */</comment>
  <return pos:line="14" pos:column="3">return <expr><name pos:line="14" pos:column="10">ret<pos:position pos:line="14" pos:column="13"/></name></expr>;<pos:position pos:line="14" pos:column="14"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function_decl></unit>

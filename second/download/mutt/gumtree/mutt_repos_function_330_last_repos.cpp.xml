<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_330_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BODY<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">pgp_traditional_encryptsign<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">BODY<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">a<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">flags<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">keylist<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BODY<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">b<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">pgpoutfile<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><name pos:line="5" pos:column="19">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="34"/></name></expr>]<pos:position pos:line="5" pos:column="35"/></index></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">pgperrfile<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">_POSIX_PATH_MAX<pos:position pos:line="6" pos:column="34"/></name></expr>]<pos:position pos:line="6" pos:column="35"/></index></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">pgpinfile<pos:position pos:line="7" pos:column="17"/></name><index pos:line="7" pos:column="17">[<expr><name pos:line="7" pos:column="18">_POSIX_PATH_MAX<pos:position pos:line="7" pos:column="33"/></name></expr>]<pos:position pos:line="7" pos:column="34"/></index></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">body_charset<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><name pos:line="9" pos:column="21">STRING<pos:position pos:line="9" pos:column="27"/></name></expr>]<pos:position pos:line="9" pos:column="28"/></index></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">from_charset<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">send_charset<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
  
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">FILE<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">pgpout<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr></init></decl>, <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="25">pgperr<pos:position pos:line="13" pos:column="31"/></name> <init pos:line="13" pos:column="32">= <expr><name pos:line="13" pos:column="34">NULL<pos:position pos:line="13" pos:column="38"/></name></expr></init></decl>, <modifier pos:line="13" pos:column="40">*<pos:position pos:line="13" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="41">pgpin<pos:position pos:line="13" pos:column="46"/></name> <init pos:line="13" pos:column="47">= <expr><name pos:line="13" pos:column="49">NULL<pos:position pos:line="13" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="54"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">FILE<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">fp<pos:position pos:line="14" pos:column="11"/></name></decl>;<pos:position pos:line="14" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">empty<pos:position pos:line="16" pos:column="12"/></name> <init pos:line="16" pos:column="13">= <expr><literal type="number" pos:line="16" pos:column="15">0<pos:position pos:line="16" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">err<pos:position pos:line="17" pos:column="10"/></name></decl>;<pos:position pos:line="17" pos:column="11"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="19" pos:column="3">char<pos:position pos:line="19" pos:column="7"/></name></type> <name><name pos:line="19" pos:column="8">buff<pos:position pos:line="19" pos:column="12"/></name><index pos:line="19" pos:column="12">[<expr><name pos:line="19" pos:column="13">STRING<pos:position pos:line="19" pos:column="19"/></name></expr>]<pos:position pos:line="19" pos:column="20"/></index></name></decl>;<pos:position pos:line="19" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="21" pos:column="3">pid_t<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">thepid<pos:position pos:line="21" pos:column="15"/></name></decl>;<pos:position pos:line="21" pos:column="16"/></decl_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">a<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">type<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">!=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">TYPETEXT<pos:position pos:line="23" pos:column="26"/></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">NULL<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></return></block></then></if>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">ascii_strcasecmp<pos:position pos:line="25" pos:column="23"/></name> <argument_list pos:line="25" pos:column="24">(<argument><expr><name><name pos:line="25" pos:column="25">a<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">subtype<pos:position pos:line="25" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="37">"plain"<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">NULL<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></return></block></then></if>
  
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><operator pos:line="28" pos:column="7">(<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">fp<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">fopen<pos:position pos:line="28" pos:column="18"/></name> <argument_list pos:line="28" pos:column="19">(<argument><expr><name><name pos:line="28" pos:column="20">a<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">filename<pos:position pos:line="28" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="33">"r"<pos:position pos:line="28" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call><operator pos:line="28" pos:column="37">)<pos:position pos:line="28" pos:column="38"/></operator> <operator pos:line="28" pos:column="39">==<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="42">NULL<pos:position pos:line="28" pos:column="46"/></name></expr>)<pos:position pos:line="28" pos:column="47"/></condition><then pos:line="28" pos:column="47">
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">mutt_perror<pos:position pos:line="30" pos:column="16"/></name> <argument_list pos:line="30" pos:column="17">(<argument><expr><name><name pos:line="30" pos:column="18">a<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">filename<pos:position pos:line="30" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">NULL<pos:position pos:line="31" pos:column="16"/></name></expr>;<pos:position pos:line="31" pos:column="17"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">mutt_mktemp<pos:position pos:line="34" pos:column="14"/></name> <argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">pgpinfile<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="27">sizeof <argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">pgpinfile<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">pgpin<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">safe_fopen<pos:position pos:line="35" pos:column="26"/></name> <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">pgpinfile<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="39">"w"<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call><operator pos:line="35" pos:column="43">)<pos:position pos:line="35" pos:column="44"/></operator> <operator pos:line="35" pos:column="45">==<pos:position pos:line="35" pos:column="47"/></operator> <name pos:line="35" pos:column="48">NULL<pos:position pos:line="35" pos:column="52"/></name></expr>)<pos:position pos:line="35" pos:column="53"/></condition><then pos:line="35" pos:column="53">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">mutt_perror<pos:position pos:line="37" pos:column="16"/></name> <argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">pgpinfile<pos:position pos:line="37" pos:column="27"/></name></expr></argument>)<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">safe_fclose<pos:position pos:line="38" pos:column="16"/></name> <argument_list pos:line="38" pos:column="17">(<argument><expr><operator pos:line="38" pos:column="18">&amp;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="19">fp<pos:position pos:line="38" pos:column="21"/></name></expr></argument>)<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">NULL<pos:position pos:line="39" pos:column="16"/></name></expr>;<pos:position pos:line="39" pos:column="17"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="42" pos:column="3">/* The following code is really correct:  If noconv is set,
   * a's charset parameter contains the on-disk character set, and
   * we have to convert from that to utf-8.  If noconv is not set,
   * we have to convert from $charset to utf-8.
   */</comment>
  
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">mutt_get_body_charset<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">body_charset<pos:position pos:line="48" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="40">sizeof <argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">body_charset<pos:position pos:line="48" pos:column="60"/></name></expr></argument>)<pos:position pos:line="48" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="48" pos:column="63">a<pos:position pos:line="48" pos:column="64"/></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name><name pos:line="49" pos:column="7">a<pos:position pos:line="49" pos:column="8"/></name><operator pos:line="49" pos:column="8">-&gt;<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="10">noconv<pos:position pos:line="49" pos:column="16"/></name></name></expr>)<pos:position pos:line="49" pos:column="17"/></condition><then pos:line="49" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="5">from_charset<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">body_charset<pos:position pos:line="50" pos:column="32"/></name></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt></block></then>
  <else pos:line="51" pos:column="3">else 
    <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="5">from_charset<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="20">Charset<pos:position pos:line="52" pos:column="27"/></name></expr>;<pos:position pos:line="52" pos:column="28"/></expr_stmt></block></else></if>
    
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><operator pos:line="54" pos:column="7">!<pos:position pos:line="54" pos:column="8"/></operator><call><name pos:line="54" pos:column="8">mutt_is_us_ascii<pos:position pos:line="54" pos:column="24"/></name> <argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">body_charset<pos:position pos:line="54" pos:column="38"/></name></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="40"/></condition><then pos:line="54" pos:column="40">
  <block pos:line="55" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="56" pos:column="5">int<pos:position pos:line="56" pos:column="8"/></name></type> <name pos:line="56" pos:column="9">c<pos:position pos:line="56" pos:column="10"/></name></decl>;<pos:position pos:line="56" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="57" pos:column="5">FGETCONV<pos:position pos:line="57" pos:column="13"/></name> <modifier pos:line="57" pos:column="14">*<pos:position pos:line="57" pos:column="15"/></modifier></type><name pos:line="57" pos:column="15">fc<pos:position pos:line="57" pos:column="17"/></name></decl>;<pos:position pos:line="57" pos:column="18"/></decl_stmt>
    
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">flags<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">&amp;<pos:position pos:line="59" pos:column="20"/></operator> <name pos:line="59" pos:column="17">ENCRYPT<pos:position pos:line="59" pos:column="24"/></name></expr>)<pos:position pos:line="59" pos:column="25"/></condition><then pos:line="59" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="7">send_charset<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <literal type="string" pos:line="60" pos:column="22">"us-ascii"<pos:position pos:line="60" pos:column="32"/></literal></expr>;<pos:position pos:line="60" pos:column="33"/></expr_stmt></block></then>
    <else pos:line="61" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">send_charset<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">=<pos:position pos:line="62" pos:column="21"/></operator> <literal type="string" pos:line="62" pos:column="22">"utf-8"<pos:position pos:line="62" pos:column="29"/></literal></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="64" pos:column="5">/* fromcode is assumed to be correct: we set flags to 0 */</comment>
    <expr_stmt><expr><name pos:line="65" pos:column="5">fc<pos:position pos:line="65" pos:column="7"/></name> <operator pos:line="65" pos:column="8">=<pos:position pos:line="65" pos:column="9"/></operator> <call><name pos:line="65" pos:column="10">fgetconv_open<pos:position pos:line="65" pos:column="23"/></name> <argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">fp<pos:position pos:line="65" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="29">from_charset<pos:position pos:line="65" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="43">"utf-8"<pos:position pos:line="65" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="52">0<pos:position pos:line="65" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="55"/></expr_stmt>
    <while pos:line="66" pos:column="5">while <condition pos:line="66" pos:column="11">(<expr><operator pos:line="66" pos:column="12">(<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="13">c<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">=<pos:position pos:line="66" pos:column="16"/></operator> <call><name pos:line="66" pos:column="17">fgetconv<pos:position pos:line="66" pos:column="25"/></name> <argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">fc<pos:position pos:line="66" pos:column="29"/></name></expr></argument>)<pos:position pos:line="66" pos:column="30"/></argument_list></call><operator pos:line="66" pos:column="30">)<pos:position pos:line="66" pos:column="31"/></operator> <operator pos:line="66" pos:column="32">!=<pos:position pos:line="66" pos:column="34"/></operator> <name pos:line="66" pos:column="35">EOF<pos:position pos:line="66" pos:column="38"/></name></expr>)<pos:position pos:line="66" pos:column="39"/></condition>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">fputc<pos:position pos:line="67" pos:column="12"/></name> <argument_list pos:line="67" pos:column="13">(<argument><expr><name pos:line="67" pos:column="14">c<pos:position pos:line="67" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="17">pgpin<pos:position pos:line="67" pos:column="22"/></name></expr></argument>)<pos:position pos:line="67" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt></block></while>
    
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">fgetconv_close<pos:position pos:line="69" pos:column="19"/></name> <argument_list pos:line="69" pos:column="20">(<argument><expr><operator pos:line="69" pos:column="21">&amp;<pos:position pos:line="69" pos:column="26"/></operator><name pos:line="69" pos:column="22">fc<pos:position pos:line="69" pos:column="24"/></name></expr></argument>)<pos:position pos:line="69" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="70" pos:column="4"/></block></then>
  <else pos:line="71" pos:column="3">else
  <block pos:line="72" pos:column="3">{
    <expr_stmt><expr><name pos:line="73" pos:column="5">send_charset<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">=<pos:position pos:line="73" pos:column="19"/></operator> <literal type="string" pos:line="73" pos:column="20">"us-ascii"<pos:position pos:line="73" pos:column="30"/></literal></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">mutt_copy_stream<pos:position pos:line="74" pos:column="21"/></name> <argument_list pos:line="74" pos:column="22">(<argument><expr><name pos:line="74" pos:column="23">fp<pos:position pos:line="74" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="27">pgpin<pos:position pos:line="74" pos:column="32"/></name></expr></argument>)<pos:position pos:line="74" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="75" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">safe_fclose<pos:position pos:line="76" pos:column="14"/></name> <argument_list pos:line="76" pos:column="15">(<argument><expr><operator pos:line="76" pos:column="16">&amp;<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="17">fp<pos:position pos:line="76" pos:column="19"/></name></expr></argument>)<pos:position pos:line="76" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">safe_fclose<pos:position pos:line="77" pos:column="14"/></name> <argument_list pos:line="77" pos:column="15">(<argument><expr><operator pos:line="77" pos:column="16">&amp;<pos:position pos:line="77" pos:column="21"/></operator><name pos:line="77" pos:column="17">pgpin<pos:position pos:line="77" pos:column="22"/></name></expr></argument>)<pos:position pos:line="77" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="79" pos:column="3">mutt_mktemp<pos:position pos:line="79" pos:column="14"/></name> <argument_list pos:line="79" pos:column="15">(<argument><expr><name pos:line="79" pos:column="16">pgpoutfile<pos:position pos:line="79" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="79" pos:column="28">sizeof <argument_list pos:line="79" pos:column="35">(<argument><expr><name pos:line="79" pos:column="36">pgpoutfile<pos:position pos:line="79" pos:column="46"/></name></expr></argument>)<pos:position pos:line="79" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">mutt_mktemp<pos:position pos:line="80" pos:column="14"/></name> <argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">pgperrfile<pos:position pos:line="80" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="80" pos:column="28">sizeof <argument_list pos:line="80" pos:column="35">(<argument><expr><name pos:line="80" pos:column="36">pgperrfile<pos:position pos:line="80" pos:column="46"/></name></expr></argument>)<pos:position pos:line="80" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="80" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="49"/></expr_stmt>
  <if pos:line="81" pos:column="3">if <condition pos:line="81" pos:column="6">(<expr><operator pos:line="81" pos:column="7">(<pos:position pos:line="81" pos:column="8"/></operator><name pos:line="81" pos:column="8">pgpout<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">=<pos:position pos:line="81" pos:column="16"/></operator> <call><name pos:line="81" pos:column="17">safe_fopen<pos:position pos:line="81" pos:column="27"/></name> <argument_list pos:line="81" pos:column="28">(<argument><expr><name pos:line="81" pos:column="29">pgpoutfile<pos:position pos:line="81" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="41">"w+"<pos:position pos:line="81" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="46"/></argument_list></call><operator pos:line="81" pos:column="46">)<pos:position pos:line="81" pos:column="47"/></operator> <operator pos:line="81" pos:column="48">==<pos:position pos:line="81" pos:column="50"/></operator> <name pos:line="81" pos:column="51">NULL<pos:position pos:line="81" pos:column="55"/></name> <operator pos:line="81" pos:column="56">||<pos:position pos:line="81" pos:column="58"/></operator>
      <operator pos:line="82" pos:column="7">(<pos:position pos:line="82" pos:column="8"/></operator><name pos:line="82" pos:column="8">pgperr<pos:position pos:line="82" pos:column="14"/></name> <operator pos:line="82" pos:column="15">=<pos:position pos:line="82" pos:column="16"/></operator> <call><name pos:line="82" pos:column="17">safe_fopen<pos:position pos:line="82" pos:column="27"/></name> <argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">pgperrfile<pos:position pos:line="82" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="41">"w+"<pos:position pos:line="82" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="46"/></argument_list></call><operator pos:line="82" pos:column="46">)<pos:position pos:line="82" pos:column="47"/></operator> <operator pos:line="82" pos:column="48">==<pos:position pos:line="82" pos:column="50"/></operator> <name pos:line="82" pos:column="51">NULL<pos:position pos:line="82" pos:column="55"/></name></expr>)<pos:position pos:line="82" pos:column="56"/></condition><then pos:line="82" pos:column="56">
  <block pos:line="83" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">mutt_perror<pos:position pos:line="84" pos:column="16"/></name> <argument_list pos:line="84" pos:column="17">(<argument><expr><ternary><condition><expr><name pos:line="84" pos:column="18">pgpout<pos:position pos:line="84" pos:column="24"/></name></expr> ?<pos:position pos:line="84" pos:column="26"/></condition><then pos:line="84" pos:column="26"> <expr><name pos:line="84" pos:column="27">pgperrfile<pos:position pos:line="84" pos:column="37"/></name></expr> <pos:position pos:line="84" pos:column="38"/></then><else pos:line="84" pos:column="38">: <expr><name pos:line="84" pos:column="40">pgpoutfile<pos:position pos:line="84" pos:column="50"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">unlink<pos:position pos:line="85" pos:column="11"/></name> <argument_list pos:line="85" pos:column="12">(<argument><expr><name pos:line="85" pos:column="13">pgpinfile<pos:position pos:line="85" pos:column="22"/></name></expr></argument>)<pos:position pos:line="85" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="24"/></expr_stmt>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name pos:line="86" pos:column="9">pgpout<pos:position pos:line="86" pos:column="15"/></name></expr>)<pos:position pos:line="86" pos:column="16"/></condition><then pos:line="86" pos:column="16"> 
    <block pos:line="87" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="88" pos:column="7">safe_fclose<pos:position pos:line="88" pos:column="18"/></name> <argument_list pos:line="88" pos:column="19">(<argument><expr><operator pos:line="88" pos:column="20">&amp;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="21">pgpout<pos:position pos:line="88" pos:column="27"/></name></expr></argument>)<pos:position pos:line="88" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">unlink<pos:position pos:line="89" pos:column="13"/></name> <argument_list pos:line="89" pos:column="14">(<argument><expr><name pos:line="89" pos:column="15">pgpoutfile<pos:position pos:line="89" pos:column="25"/></name></expr></argument>)<pos:position pos:line="89" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <return pos:line="91" pos:column="5">return <expr><name pos:line="91" pos:column="12">NULL<pos:position pos:line="91" pos:column="16"/></name></expr>;<pos:position pos:line="91" pos:column="17"/></return>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">unlink<pos:position pos:line="94" pos:column="9"/></name> <argument_list pos:line="94" pos:column="10">(<argument><expr><name pos:line="94" pos:column="11">pgperrfile<pos:position pos:line="94" pos:column="21"/></name></expr></argument>)<pos:position pos:line="94" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="23"/></expr_stmt>

  <if pos:line="96" pos:column="3">if <condition pos:line="96" pos:column="6">(<expr><operator pos:line="96" pos:column="7">(<pos:position pos:line="96" pos:column="8"/></operator><name pos:line="96" pos:column="8">thepid<pos:position pos:line="96" pos:column="14"/></name> <operator pos:line="96" pos:column="15">=<pos:position pos:line="96" pos:column="16"/></operator> <call><name pos:line="96" pos:column="17">pgp_invoke_traditional<pos:position pos:line="96" pos:column="39"/></name> <argument_list pos:line="96" pos:column="40">(<argument><expr><operator pos:line="96" pos:column="41">&amp;<pos:position pos:line="96" pos:column="46"/></operator><name pos:line="96" pos:column="42">pgpin<pos:position pos:line="96" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="49">NULL<pos:position pos:line="96" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="55">NULL<pos:position pos:line="96" pos:column="59"/></name></expr></argument>, 
					<argument><expr><operator pos:line="97" pos:column="41">-<pos:position pos:line="97" pos:column="42"/></operator><literal type="number" pos:line="97" pos:column="42">1<pos:position pos:line="97" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="45">fileno<pos:position pos:line="97" pos:column="51"/></name> <argument_list pos:line="97" pos:column="52">(<argument><expr><name pos:line="97" pos:column="53">pgpout<pos:position pos:line="97" pos:column="59"/></name></expr></argument>)<pos:position pos:line="97" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="62">fileno<pos:position pos:line="97" pos:column="68"/></name> <argument_list pos:line="97" pos:column="69">(<argument><expr><name pos:line="97" pos:column="70">pgperr<pos:position pos:line="97" pos:column="76"/></name></expr></argument>)<pos:position pos:line="97" pos:column="77"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="98" pos:column="41">pgpinfile<pos:position pos:line="98" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="52">keylist<pos:position pos:line="98" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="61">flags<pos:position pos:line="98" pos:column="66"/></name></expr></argument>)<pos:position pos:line="98" pos:column="67"/></argument_list></call><operator pos:line="98" pos:column="67">)<pos:position pos:line="98" pos:column="68"/></operator> <operator pos:line="98" pos:column="69">==<pos:position pos:line="98" pos:column="71"/></operator> <operator pos:line="98" pos:column="72">-<pos:position pos:line="98" pos:column="73"/></operator><literal type="number" pos:line="98" pos:column="73">1<pos:position pos:line="98" pos:column="74"/></literal></expr>)<pos:position pos:line="98" pos:column="75"/></condition><then pos:line="98" pos:column="75">
  <block pos:line="99" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="100" pos:column="5">mutt_perror<pos:position pos:line="100" pos:column="16"/></name></type> <name pos:line="100" pos:column="17">_<pos:position pos:line="100" pos:column="18"/></name><argument_list pos:line="100" pos:column="18">(<argument><expr><literal type="string" pos:line="100" pos:column="19">"Can't invoke PGP"<pos:position pos:line="100" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="38"/></argument_list></decl>;<pos:position pos:line="100" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">safe_fclose<pos:position pos:line="101" pos:column="16"/></name> <argument_list pos:line="101" pos:column="17">(<argument><expr><operator pos:line="101" pos:column="18">&amp;<pos:position pos:line="101" pos:column="23"/></operator><name pos:line="101" pos:column="19">pgpout<pos:position pos:line="101" pos:column="25"/></name></expr></argument>)<pos:position pos:line="101" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">safe_fclose<pos:position pos:line="102" pos:column="16"/></name> <argument_list pos:line="102" pos:column="17">(<argument><expr><operator pos:line="102" pos:column="18">&amp;<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="19">pgperr<pos:position pos:line="102" pos:column="25"/></name></expr></argument>)<pos:position pos:line="102" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="103" pos:column="5">mutt_unlink<pos:position pos:line="103" pos:column="16"/></name> <argument_list pos:line="103" pos:column="17">(<argument><expr><name pos:line="103" pos:column="18">pgpinfile<pos:position pos:line="103" pos:column="27"/></name></expr></argument>)<pos:position pos:line="103" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">unlink<pos:position pos:line="104" pos:column="11"/></name> <argument_list pos:line="104" pos:column="12">(<argument><expr><name pos:line="104" pos:column="13">pgpoutfile<pos:position pos:line="104" pos:column="23"/></name></expr></argument>)<pos:position pos:line="104" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="25"/></expr_stmt>
    <return pos:line="105" pos:column="5">return <expr><name pos:line="105" pos:column="12">NULL<pos:position pos:line="105" pos:column="16"/></name></expr>;<pos:position pos:line="105" pos:column="17"/></return>
  }<pos:position pos:line="106" pos:column="4"/></block></then></if>

  <if pos:line="108" pos:column="3">if <condition pos:line="108" pos:column="6">(<expr><call><name pos:line="108" pos:column="7">pgp_use_gpg_agent<pos:position pos:line="108" pos:column="24"/></name><argument_list pos:line="108" pos:column="24">()<pos:position pos:line="108" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="27"/></condition><then pos:line="108" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="109" pos:column="5">*<pos:position pos:line="109" pos:column="6"/></operator><name pos:line="109" pos:column="6">PgpPass<pos:position pos:line="109" pos:column="13"/></name> <operator pos:line="109" pos:column="14">=<pos:position pos:line="109" pos:column="15"/></operator> <literal type="number" pos:line="109" pos:column="16">0<pos:position pos:line="109" pos:column="17"/></literal></expr>;<pos:position pos:line="109" pos:column="18"/></expr_stmt></block></then></if>
  <if pos:line="110" pos:column="3">if <condition pos:line="110" pos:column="6">(<expr><name pos:line="110" pos:column="7">flags<pos:position pos:line="110" pos:column="12"/></name> <operator pos:line="110" pos:column="13">&amp;<pos:position pos:line="110" pos:column="18"/></operator> <name pos:line="110" pos:column="15">SIGN<pos:position pos:line="110" pos:column="19"/></name></expr>)<pos:position pos:line="110" pos:column="20"/></condition><then pos:line="110" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="5">fprintf<pos:position pos:line="111" pos:column="12"/></name> <argument_list pos:line="111" pos:column="13">(<argument><expr><name pos:line="111" pos:column="14">pgpin<pos:position pos:line="111" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="21">"%s\n"<pos:position pos:line="111" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="29">PgpPass<pos:position pos:line="111" pos:column="36"/></name></expr></argument>)<pos:position pos:line="111" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="38"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="112" pos:column="3">safe_fclose<pos:position pos:line="112" pos:column="14"/></name> <argument_list pos:line="112" pos:column="15">(<argument><expr><operator pos:line="112" pos:column="16">&amp;<pos:position pos:line="112" pos:column="21"/></operator><name pos:line="112" pos:column="17">pgpin<pos:position pos:line="112" pos:column="22"/></name></expr></argument>)<pos:position pos:line="112" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="24"/></expr_stmt>

  <if pos:line="114" pos:column="3">if<condition pos:line="114" pos:column="5">(<expr><call><name pos:line="114" pos:column="6">mutt_wait_filter<pos:position pos:line="114" pos:column="22"/></name> <argument_list pos:line="114" pos:column="23">(<argument><expr><name pos:line="114" pos:column="24">thepid<pos:position pos:line="114" pos:column="30"/></name></expr></argument>)<pos:position pos:line="114" pos:column="31"/></argument_list></call> <operator pos:line="114" pos:column="32">&amp;&amp;<pos:position pos:line="114" pos:column="42"/></operator> <call><name pos:line="114" pos:column="35">option<pos:position pos:line="114" pos:column="41"/></name><argument_list pos:line="114" pos:column="41">(<argument><expr><name pos:line="114" pos:column="42">OPTPGPCHECKEXIT<pos:position pos:line="114" pos:column="57"/></name></expr></argument>)<pos:position pos:line="114" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="59"/></condition><then pos:line="114" pos:column="59">
    <block type="pseudo"><expr_stmt><expr><name pos:line="115" pos:column="5">empty<pos:position pos:line="115" pos:column="10"/></name><operator pos:line="115" pos:column="10">=<pos:position pos:line="115" pos:column="11"/></operator><literal type="number" pos:line="115" pos:column="11">1<pos:position pos:line="115" pos:column="12"/></literal></expr>;<pos:position pos:line="115" pos:column="13"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="117" pos:column="3">mutt_unlink<pos:position pos:line="117" pos:column="14"/></name> <argument_list pos:line="117" pos:column="15">(<argument><expr><name pos:line="117" pos:column="16">pgpinfile<pos:position pos:line="117" pos:column="25"/></name></expr></argument>)<pos:position pos:line="117" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="119" pos:column="3">fflush<pos:position pos:line="119" pos:column="9"/></name> <argument_list pos:line="119" pos:column="10">(<argument><expr><name pos:line="119" pos:column="11">pgpout<pos:position pos:line="119" pos:column="17"/></name></expr></argument>)<pos:position pos:line="119" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="120" pos:column="3">fflush<pos:position pos:line="120" pos:column="9"/></name> <argument_list pos:line="120" pos:column="10">(<argument><expr><name pos:line="120" pos:column="11">pgperr<pos:position pos:line="120" pos:column="17"/></name></expr></argument>)<pos:position pos:line="120" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="122" pos:column="3">rewind<pos:position pos:line="122" pos:column="9"/></name> <argument_list pos:line="122" pos:column="10">(<argument><expr><name pos:line="122" pos:column="11">pgpout<pos:position pos:line="122" pos:column="17"/></name></expr></argument>)<pos:position pos:line="122" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="123" pos:column="3">rewind<pos:position pos:line="123" pos:column="9"/></name> <argument_list pos:line="123" pos:column="10">(<argument><expr><name pos:line="123" pos:column="11">pgperr<pos:position pos:line="123" pos:column="17"/></name></expr></argument>)<pos:position pos:line="123" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="19"/></expr_stmt>
  
  <if pos:line="125" pos:column="3">if<condition pos:line="125" pos:column="5">(<expr><operator pos:line="125" pos:column="6">!<pos:position pos:line="125" pos:column="7"/></operator><name pos:line="125" pos:column="7">empty<pos:position pos:line="125" pos:column="12"/></name></expr>)<pos:position pos:line="125" pos:column="13"/></condition><then pos:line="125" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="5">empty<pos:position pos:line="126" pos:column="10"/></name> <operator pos:line="126" pos:column="11">=<pos:position pos:line="126" pos:column="12"/></operator> <operator pos:line="126" pos:column="13">(<pos:position pos:line="126" pos:column="14"/></operator><call><name pos:line="126" pos:column="14">fgetc<pos:position pos:line="126" pos:column="19"/></name> <argument_list pos:line="126" pos:column="20">(<argument><expr><name pos:line="126" pos:column="21">pgpout<pos:position pos:line="126" pos:column="27"/></name></expr></argument>)<pos:position pos:line="126" pos:column="28"/></argument_list></call> <operator pos:line="126" pos:column="29">==<pos:position pos:line="126" pos:column="31"/></operator> <name pos:line="126" pos:column="32">EOF<pos:position pos:line="126" pos:column="35"/></name><operator pos:line="126" pos:column="35">)<pos:position pos:line="126" pos:column="36"/></operator></expr>;<pos:position pos:line="126" pos:column="37"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="127" pos:column="3">safe_fclose<pos:position pos:line="127" pos:column="14"/></name> <argument_list pos:line="127" pos:column="15">(<argument><expr><operator pos:line="127" pos:column="16">&amp;<pos:position pos:line="127" pos:column="21"/></operator><name pos:line="127" pos:column="17">pgpout<pos:position pos:line="127" pos:column="23"/></name></expr></argument>)<pos:position pos:line="127" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="25"/></expr_stmt>
  
  <expr_stmt><expr><name pos:line="129" pos:column="3">err<pos:position pos:line="129" pos:column="6"/></name> <operator pos:line="129" pos:column="7">=<pos:position pos:line="129" pos:column="8"/></operator> <literal type="number" pos:line="129" pos:column="9">0<pos:position pos:line="129" pos:column="10"/></literal></expr>;<pos:position pos:line="129" pos:column="11"/></expr_stmt>
  
  <while pos:line="131" pos:column="3">while <condition pos:line="131" pos:column="9">(<expr><call><name pos:line="131" pos:column="10">fgets<pos:position pos:line="131" pos:column="15"/></name> <argument_list pos:line="131" pos:column="16">(<argument><expr><name pos:line="131" pos:column="17">buff<pos:position pos:line="131" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="131" pos:column="23">sizeof <argument_list pos:line="131" pos:column="30">(<argument><expr><name pos:line="131" pos:column="31">buff<pos:position pos:line="131" pos:column="35"/></name></expr></argument>)<pos:position pos:line="131" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="131" pos:column="38">pgperr<pos:position pos:line="131" pos:column="44"/></name></expr></argument>)<pos:position pos:line="131" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="46"/></condition>
  <block pos:line="132" pos:column="3">{
    <expr_stmt><expr><name pos:line="133" pos:column="5">err<pos:position pos:line="133" pos:column="8"/></name> <operator pos:line="133" pos:column="9">=<pos:position pos:line="133" pos:column="10"/></operator> <literal type="number" pos:line="133" pos:column="11">1<pos:position pos:line="133" pos:column="12"/></literal></expr>;<pos:position pos:line="133" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="134" pos:column="5">fputs<pos:position pos:line="134" pos:column="10"/></name> <argument_list pos:line="134" pos:column="11">(<argument><expr><name pos:line="134" pos:column="12">buff<pos:position pos:line="134" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="18">stdout<pos:position pos:line="134" pos:column="24"/></name></expr></argument>)<pos:position pos:line="134" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="135" pos:column="4"/></block></while>
  
  <expr_stmt><expr><call><name pos:line="137" pos:column="3">safe_fclose<pos:position pos:line="137" pos:column="14"/></name> <argument_list pos:line="137" pos:column="15">(<argument><expr><operator pos:line="137" pos:column="16">&amp;<pos:position pos:line="137" pos:column="21"/></operator><name pos:line="137" pos:column="17">pgperr<pos:position pos:line="137" pos:column="23"/></name></expr></argument>)<pos:position pos:line="137" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="25"/></expr_stmt>
  
  <if pos:line="139" pos:column="3">if <condition pos:line="139" pos:column="6">(<expr><name pos:line="139" pos:column="7">err<pos:position pos:line="139" pos:column="10"/></name></expr>)<pos:position pos:line="139" pos:column="11"/></condition><then pos:line="139" pos:column="11">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="5">mutt_any_key_to_continue<pos:position pos:line="140" pos:column="29"/></name> <argument_list pos:line="140" pos:column="30">(<argument><expr><name pos:line="140" pos:column="31">NULL<pos:position pos:line="140" pos:column="35"/></name></expr></argument>)<pos:position pos:line="140" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="37"/></expr_stmt></block></then></if>
  
  <if pos:line="142" pos:column="3">if <condition pos:line="142" pos:column="6">(<expr><name pos:line="142" pos:column="7">empty<pos:position pos:line="142" pos:column="12"/></name></expr>)<pos:position pos:line="142" pos:column="13"/></condition><then pos:line="142" pos:column="13">
  <block pos:line="143" pos:column="3">{
    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><name pos:line="144" pos:column="9">flags<pos:position pos:line="144" pos:column="14"/></name> <operator pos:line="144" pos:column="15">&amp;<pos:position pos:line="144" pos:column="20"/></operator> <name pos:line="144" pos:column="17">SIGN<pos:position pos:line="144" pos:column="21"/></name></expr>)<pos:position pos:line="144" pos:column="22"/></condition><then pos:line="144" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="7">pgp_void_passphrase<pos:position pos:line="145" pos:column="26"/></name> <argument_list pos:line="145" pos:column="27">()<pos:position pos:line="145" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="30"/></expr_stmt></block></then></if> <comment type="block" pos:line="145" pos:column="31">/* just in case */</comment>
    <expr_stmt><expr><call><name pos:line="146" pos:column="5">unlink<pos:position pos:line="146" pos:column="11"/></name> <argument_list pos:line="146" pos:column="12">(<argument><expr><name pos:line="146" pos:column="13">pgpoutfile<pos:position pos:line="146" pos:column="23"/></name></expr></argument>)<pos:position pos:line="146" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="25"/></expr_stmt>
    <return pos:line="147" pos:column="5">return <expr><name pos:line="147" pos:column="12">NULL<pos:position pos:line="147" pos:column="16"/></name></expr>;<pos:position pos:line="147" pos:column="17"/></return>
  }<pos:position pos:line="148" pos:column="4"/></block></then></if>
    
  <expr_stmt><expr><name pos:line="150" pos:column="3">b<pos:position pos:line="150" pos:column="4"/></name> <operator pos:line="150" pos:column="5">=<pos:position pos:line="150" pos:column="6"/></operator> <call><name pos:line="150" pos:column="7">mutt_new_body<pos:position pos:line="150" pos:column="20"/></name> <argument_list pos:line="150" pos:column="21">()<pos:position pos:line="150" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="24"/></expr_stmt>
  
  <expr_stmt><expr><name><name pos:line="152" pos:column="3">b<pos:position pos:line="152" pos:column="4"/></name><operator pos:line="152" pos:column="4">-&gt;<pos:position pos:line="152" pos:column="9"/></operator><name pos:line="152" pos:column="6">encoding<pos:position pos:line="152" pos:column="14"/></name></name> <operator pos:line="152" pos:column="15">=<pos:position pos:line="152" pos:column="16"/></operator> <name pos:line="152" pos:column="17">ENC7BIT<pos:position pos:line="152" pos:column="24"/></name></expr>;<pos:position pos:line="152" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="154" pos:column="3">b<pos:position pos:line="154" pos:column="4"/></name><operator pos:line="154" pos:column="4">-&gt;<pos:position pos:line="154" pos:column="9"/></operator><name pos:line="154" pos:column="6">type<pos:position pos:line="154" pos:column="10"/></name></name> <operator pos:line="154" pos:column="11">=<pos:position pos:line="154" pos:column="12"/></operator> <name pos:line="154" pos:column="13">TYPETEXT<pos:position pos:line="154" pos:column="21"/></name></expr>;<pos:position pos:line="154" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="155" pos:column="3">b<pos:position pos:line="155" pos:column="4"/></name><operator pos:line="155" pos:column="4">-&gt;<pos:position pos:line="155" pos:column="9"/></operator><name pos:line="155" pos:column="6">subtype<pos:position pos:line="155" pos:column="13"/></name></name> <operator pos:line="155" pos:column="14">=<pos:position pos:line="155" pos:column="15"/></operator> <call><name pos:line="155" pos:column="16">safe_strdup<pos:position pos:line="155" pos:column="27"/></name> <argument_list pos:line="155" pos:column="28">(<argument><expr><literal type="string" pos:line="155" pos:column="29">"plain"<pos:position pos:line="155" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="38"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="157" pos:column="3">mutt_set_parameter<pos:position pos:line="157" pos:column="21"/></name> <argument_list pos:line="157" pos:column="22">(<argument><expr><literal type="string" pos:line="157" pos:column="23">"x-action"<pos:position pos:line="157" pos:column="33"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="157" pos:column="35">flags<pos:position pos:line="157" pos:column="40"/></name> <operator pos:line="157" pos:column="41">&amp;<pos:position pos:line="157" pos:column="46"/></operator> <name pos:line="157" pos:column="43">ENCRYPT<pos:position pos:line="157" pos:column="50"/></name></expr> ?<pos:position pos:line="157" pos:column="52"/></condition><then pos:line="157" pos:column="52"> <expr><literal type="string" pos:line="157" pos:column="53">"pgp-encrypted"<pos:position pos:line="157" pos:column="68"/></literal></expr> <pos:position pos:line="157" pos:column="69"/></then><else pos:line="157" pos:column="69">: <expr><literal type="string" pos:line="157" pos:column="71">"pgp-signed"<pos:position pos:line="157" pos:column="83"/></literal></expr></else></ternary></expr></argument>,
		      <argument><expr><operator pos:line="158" pos:column="23">&amp;<pos:position pos:line="158" pos:column="28"/></operator><name><name pos:line="158" pos:column="24">b<pos:position pos:line="158" pos:column="25"/></name><operator pos:line="158" pos:column="25">-&gt;<pos:position pos:line="158" pos:column="30"/></operator><name pos:line="158" pos:column="27">parameter<pos:position pos:line="158" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="159" pos:column="3">mutt_set_parameter<pos:position pos:line="159" pos:column="21"/></name> <argument_list pos:line="159" pos:column="22">(<argument><expr><literal type="string" pos:line="159" pos:column="23">"charset"<pos:position pos:line="159" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="34">send_charset<pos:position pos:line="159" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="48">&amp;<pos:position pos:line="159" pos:column="53"/></operator><name><name pos:line="159" pos:column="49">b<pos:position pos:line="159" pos:column="50"/></name><operator pos:line="159" pos:column="50">-&gt;<pos:position pos:line="159" pos:column="55"/></operator><name pos:line="159" pos:column="52">parameter<pos:position pos:line="159" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="63"/></expr_stmt>
  
  <expr_stmt><expr><name><name pos:line="161" pos:column="3">b<pos:position pos:line="161" pos:column="4"/></name><operator pos:line="161" pos:column="4">-&gt;<pos:position pos:line="161" pos:column="9"/></operator><name pos:line="161" pos:column="6">filename<pos:position pos:line="161" pos:column="14"/></name></name> <operator pos:line="161" pos:column="15">=<pos:position pos:line="161" pos:column="16"/></operator> <call><name pos:line="161" pos:column="17">safe_strdup<pos:position pos:line="161" pos:column="28"/></name> <argument_list pos:line="161" pos:column="29">(<argument><expr><name pos:line="161" pos:column="30">pgpoutfile<pos:position pos:line="161" pos:column="40"/></name></expr></argument>)<pos:position pos:line="161" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="42"/></expr_stmt>
  
<cpp:if pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">if<pos:position pos:line="163" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="163" pos:column="5">0<pos:position pos:line="163" pos:column="6"/></literal></expr></cpp:if>
  <comment type="block" pos:line="164" pos:column="3">/* The following is intended to give a clue to some completely brain-dead 
   * "mail environments" which are typically used by large corporations.
   */</comment>

  b-&gt;d_filename = safe_strdup ("msg.pgp");
  b-&gt;use_disp = 1;

<cpp:endif pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">endif<pos:position pos:line="171" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name><name pos:line="173" pos:column="3">b<pos:position pos:line="173" pos:column="4"/></name><operator pos:line="173" pos:column="4">-&gt;<pos:position pos:line="173" pos:column="9"/></operator><name pos:line="173" pos:column="6">disposition<pos:position pos:line="173" pos:column="17"/></name></name> <operator pos:line="173" pos:column="18">=<pos:position pos:line="173" pos:column="19"/></operator> <name pos:line="173" pos:column="20">DISPNONE<pos:position pos:line="173" pos:column="28"/></name></expr>;<pos:position pos:line="173" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="174" pos:column="3">b<pos:position pos:line="174" pos:column="4"/></name><operator pos:line="174" pos:column="4">-&gt;<pos:position pos:line="174" pos:column="9"/></operator><name pos:line="174" pos:column="6">unlink<pos:position pos:line="174" pos:column="12"/></name></name>   <operator pos:line="174" pos:column="15">=<pos:position pos:line="174" pos:column="16"/></operator> <literal type="number" pos:line="174" pos:column="17">1<pos:position pos:line="174" pos:column="18"/></literal></expr>;<pos:position pos:line="174" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="176" pos:column="3">b<pos:position pos:line="176" pos:column="4"/></name><operator pos:line="176" pos:column="4">-&gt;<pos:position pos:line="176" pos:column="9"/></operator><name pos:line="176" pos:column="6">noconv<pos:position pos:line="176" pos:column="12"/></name></name> <operator pos:line="176" pos:column="13">=<pos:position pos:line="176" pos:column="14"/></operator> <literal type="number" pos:line="176" pos:column="15">1<pos:position pos:line="176" pos:column="16"/></literal></expr>;<pos:position pos:line="176" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="177" pos:column="3">b<pos:position pos:line="177" pos:column="4"/></name><operator pos:line="177" pos:column="4">-&gt;<pos:position pos:line="177" pos:column="9"/></operator><name pos:line="177" pos:column="6">use_disp<pos:position pos:line="177" pos:column="14"/></name></name> <operator pos:line="177" pos:column="15">=<pos:position pos:line="177" pos:column="16"/></operator> <literal type="number" pos:line="177" pos:column="17">0<pos:position pos:line="177" pos:column="18"/></literal></expr>;<pos:position pos:line="177" pos:column="19"/></expr_stmt>
  
  <if pos:line="179" pos:column="3">if <condition pos:line="179" pos:column="6">(<expr><operator pos:line="179" pos:column="7">!<pos:position pos:line="179" pos:column="8"/></operator><operator pos:line="179" pos:column="8">(<pos:position pos:line="179" pos:column="9"/></operator><name pos:line="179" pos:column="9">flags<pos:position pos:line="179" pos:column="14"/></name> <operator pos:line="179" pos:column="15">&amp;<pos:position pos:line="179" pos:column="20"/></operator> <name pos:line="179" pos:column="17">ENCRYPT<pos:position pos:line="179" pos:column="24"/></name><operator pos:line="179" pos:column="24">)<pos:position pos:line="179" pos:column="25"/></operator></expr>)<pos:position pos:line="179" pos:column="26"/></condition><then pos:line="179" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="180" pos:column="5">b<pos:position pos:line="180" pos:column="6"/></name><operator pos:line="180" pos:column="6">-&gt;<pos:position pos:line="180" pos:column="11"/></operator><name pos:line="180" pos:column="8">encoding<pos:position pos:line="180" pos:column="16"/></name></name> <operator pos:line="180" pos:column="17">=<pos:position pos:line="180" pos:column="18"/></operator> <name><name pos:line="180" pos:column="19">a<pos:position pos:line="180" pos:column="20"/></name><operator pos:line="180" pos:column="20">-&gt;<pos:position pos:line="180" pos:column="25"/></operator><name pos:line="180" pos:column="22">encoding<pos:position pos:line="180" pos:column="30"/></name></name></expr>;<pos:position pos:line="180" pos:column="31"/></expr_stmt></block></then></if>
  
  <return pos:line="182" pos:column="3">return <expr><name pos:line="182" pos:column="10">b<pos:position pos:line="182" pos:column="11"/></name></expr>;<pos:position pos:line="182" pos:column="12"/></return>
}<pos:position pos:line="183" pos:column="2"/></block></function></unit>

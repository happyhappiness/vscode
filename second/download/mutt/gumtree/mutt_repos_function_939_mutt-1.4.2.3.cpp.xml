<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_939_mutt-1.4.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_expand_fmt<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">dest<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">size_t<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">destlen<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">fmt<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="68">const<pos:position pos:line="1" pos:column="73"/></specifier> <name pos:line="1" pos:column="74">char<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">src<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">p<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">fmt<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">last<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">p<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">len<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">slen<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">found<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">slen<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <call><name pos:line="9" pos:column="10">mutt_strlen<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">src<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
  
  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">p<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">strchr<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">p<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="26">'%'<pos:position pos:line="11" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="32">!=<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="35">NULL<pos:position pos:line="11" pos:column="39"/></name></expr>)<pos:position pos:line="11" pos:column="40"/></condition>
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">p<pos:position pos:line="13" pos:column="10"/></name><index pos:line="13" pos:column="10">[<expr><literal type="number" pos:line="13" pos:column="11">1<pos:position pos:line="13" pos:column="12"/></literal></expr>]<pos:position pos:line="13" pos:column="13"/></index></name> <operator pos:line="13" pos:column="14">==<pos:position pos:line="13" pos:column="16"/></operator> <literal type="char" pos:line="13" pos:column="17">'s'<pos:position pos:line="13" pos:column="20"/></literal></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><name pos:line="15" pos:column="7">found<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">++<pos:position pos:line="15" pos:column="14"/></operator></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>

      <expr_stmt><expr><name pos:line="17" pos:column="7">len<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call pos:line="17" pos:column="13">(<name pos:line="17" pos:column="14">size_t<pos:position pos:line="17" pos:column="20"/></name>) <argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">p<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">last<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><name pos:line="18" pos:column="11">len<pos:position pos:line="18" pos:column="14"/></name></expr>)<pos:position pos:line="18" pos:column="15"/></condition><then pos:line="18" pos:column="15">
      <block pos:line="19" pos:column="7">{
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">len<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&gt;<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="19">destlen<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">-<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="29">1<pos:position pos:line="20" pos:column="30"/></literal></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="11">len<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">destlen<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">-<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="27">1<pos:position pos:line="21" pos:column="28"/></literal></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">memcpy<pos:position pos:line="23" pos:column="15"/></name> <argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">dest<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="23">last<pos:position pos:line="23" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="29">len<pos:position pos:line="23" pos:column="32"/></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">dest<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">+=<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">len<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="25" pos:column="9">destlen<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">-=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">len<pos:position pos:line="25" pos:column="23"/></name></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">destlen<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">&lt;=<pos:position pos:line="27" pos:column="26"/></operator> <literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26">
	<block pos:line="28" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="29" pos:column="11">*<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">dest<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>
	  <break pos:line="30" pos:column="11">break;<pos:position pos:line="30" pos:column="17"/></break> <comment type="block" pos:line="30" pos:column="18">/* no more space */</comment>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="34" pos:column="7">strfcpy<pos:position pos:line="34" pos:column="14"/></name> <argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">dest<pos:position pos:line="34" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="22">src<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="27">destlen<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><name pos:line="35" pos:column="11">slen<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">&gt;<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="18">destlen<pos:position pos:line="35" pos:column="25"/></name></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26">
      <block pos:line="36" pos:column="7">{
	<comment type="block" pos:line="37" pos:column="9">/* no more room */</comment>
	<break pos:line="38" pos:column="9">break;<pos:position pos:line="38" pos:column="15"/></break>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="40" pos:column="7">dest<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">+=<pos:position pos:line="40" pos:column="14"/></operator> <name pos:line="40" pos:column="15">slen<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="41" pos:column="7">destlen<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">-=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">slen<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>

      <expr_stmt><expr><name pos:line="43" pos:column="7">p<pos:position pos:line="43" pos:column="8"/></name> <operator pos:line="43" pos:column="9">+=<pos:position pos:line="43" pos:column="11"/></operator> <literal type="number" pos:line="43" pos:column="12">2<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="44" pos:column="7">last<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name pos:line="44" pos:column="14">p<pos:position pos:line="44" pos:column="15"/></name></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><name><name pos:line="46" pos:column="14">p<pos:position pos:line="46" pos:column="15"/></name><index pos:line="46" pos:column="15">[<expr><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal></expr>]<pos:position pos:line="46" pos:column="18"/></index></name> <operator pos:line="46" pos:column="19">==<pos:position pos:line="46" pos:column="21"/></operator> <literal type="char" pos:line="46" pos:column="22">'%'<pos:position pos:line="46" pos:column="25"/></literal></expr>)<pos:position pos:line="46" pos:column="26"/></condition><then pos:line="46" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="7">p<pos:position pos:line="47" pos:column="8"/></name><operator pos:line="47" pos:column="8">++<pos:position pos:line="47" pos:column="10"/></operator></expr>;<pos:position pos:line="47" pos:column="11"/></expr_stmt></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="49" pos:column="5">p<pos:position pos:line="49" pos:column="6"/></name><operator pos:line="49" pos:column="6">++<pos:position pos:line="49" pos:column="8"/></operator></expr>;<pos:position pos:line="49" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></while>

  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">found<pos:position pos:line="52" pos:column="12"/></name></expr>)<pos:position pos:line="52" pos:column="13"/></condition><then pos:line="52" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="5">strfcpy<pos:position pos:line="53" pos:column="12"/></name> <argument_list pos:line="53" pos:column="13">(<argument><expr><name pos:line="53" pos:column="14">dest<pos:position pos:line="53" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="20">last<pos:position pos:line="53" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="26">destlen<pos:position pos:line="53" pos:column="33"/></name></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt></block></then>
  <else pos:line="54" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="5">snprintf<pos:position pos:line="55" pos:column="13"/></name> <argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">dest<pos:position pos:line="55" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="21">destlen<pos:position pos:line="55" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="30">"%s %s"<pos:position pos:line="55" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="39">fmt<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">src<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt></block></else></if>
  
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

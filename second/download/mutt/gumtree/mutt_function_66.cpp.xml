<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_66.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">pgp_application_pgp_handler<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">BODY<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">m<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">STATE<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">s<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">needpass<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><operator pos:line="3" pos:column="18">-<pos:position pos:line="3" pos:column="19"/></operator><literal type="number" pos:line="3" pos:column="19">1<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="22">pgp_keyblock<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><literal type="number" pos:line="3" pos:column="37">0<pos:position pos:line="3" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">clearsign<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">rv<pos:position pos:line="4" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">rc<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">long<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">start_pos<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">long<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">bytes<pos:position pos:line="6" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="15">last_pos<pos:position pos:line="6" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="25">offset<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">buf<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><name pos:line="7" pos:column="12">HUGE_STRING<pos:position pos:line="7" pos:column="23"/></name></expr>]<pos:position pos:line="7" pos:column="24"/></index></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">outfile<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><name pos:line="8" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="8" pos:column="31"/></name></expr>]<pos:position pos:line="8" pos:column="32"/></index></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">tmpfname<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><name pos:line="9" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="9" pos:column="32"/></name></expr>]<pos:position pos:line="9" pos:column="33"/></index></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">FILE<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">pgpout<pos:position pos:line="10" pos:column="15"/></name> <init pos:line="10" pos:column="16">= <expr><name pos:line="10" pos:column="18">NULL<pos:position pos:line="10" pos:column="22"/></name></expr></init></decl>, <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="25">pgpin<pos:position pos:line="10" pos:column="30"/></name> <init pos:line="10" pos:column="31">= <expr><name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr></init></decl>, <modifier pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="40">pgperr<pos:position pos:line="10" pos:column="46"/></name> <init pos:line="10" pos:column="47">= <expr><name pos:line="10" pos:column="49">NULL<pos:position pos:line="10" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="54"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">FILE<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">tmpfp<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">pid_t<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">thepid<pos:position pos:line="12" pos:column="15"/></name></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">short<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">maybe_goodsig<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">short<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">have_any_sigs<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">fseek<pos:position pos:line="17" pos:column="8"/></name> <argument_list pos:line="17" pos:column="9">(<argument><expr><name><name pos:line="17" pos:column="10">s<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">fpin<pos:position pos:line="17" pos:column="17"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="19">m<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">offset<pos:position pos:line="17" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">last_pos<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name><name pos:line="18" pos:column="14">m<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">offset<pos:position pos:line="18" pos:column="23"/></name></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
  
  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><expr><name pos:line="20" pos:column="8">bytes<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name><name pos:line="20" pos:column="16">m<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">length<pos:position pos:line="20" pos:column="25"/></name></name></expr>;<pos:position pos:line="20" pos:column="26"/></init> <condition><expr><name pos:line="20" pos:column="27">bytes<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">&gt;<pos:position pos:line="20" pos:column="37"/></operator> <literal type="number" pos:line="20" pos:column="35">0<pos:position pos:line="20" pos:column="36"/></literal></expr>;<pos:position pos:line="20" pos:column="37"/></condition><incr/>)<pos:position pos:line="20" pos:column="38"/></control>
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">fgets<pos:position pos:line="22" pos:column="14"/></name> <argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">buf<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="21">sizeof <argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">buf<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></sizeof> <operator pos:line="22" pos:column="34">-<pos:position pos:line="22" pos:column="35"/></operator> <literal type="number" pos:line="22" pos:column="36">1<pos:position pos:line="22" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="39">s<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">fpin<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call> <operator pos:line="22" pos:column="48">==<pos:position pos:line="22" pos:column="50"/></operator> <name pos:line="22" pos:column="51">NULL<pos:position pos:line="22" pos:column="55"/></name></expr>)<pos:position pos:line="22" pos:column="56"/></condition><then pos:line="22" pos:column="56">
      <block type="pseudo"><break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break></block></then></if>
    
    <expr_stmt><expr><name pos:line="25" pos:column="5">offset<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">ftell<pos:position pos:line="25" pos:column="19"/></name> <argument_list pos:line="25" pos:column="20">(<argument><expr><name><name pos:line="25" pos:column="21">s<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">fpin<pos:position pos:line="25" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">bytes<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">-=<pos:position pos:line="26" pos:column="13"/></operator> <operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">offset<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">-<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">last_pos<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">)<pos:position pos:line="26" pos:column="33"/></operator></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt> <comment type="block" pos:line="26" pos:column="35">/* don't rely on mutt_strlen(buf) */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">last_pos<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">offset<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
    
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">mutt_strncmp<pos:position pos:line="29" pos:column="21"/></name> <argument_list pos:line="29" pos:column="22">(<argument><expr><literal type="string" pos:line="29" pos:column="23">"-----BEGIN PGP "<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">buf<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="47">15<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call> <operator pos:line="29" pos:column="51">==<pos:position pos:line="29" pos:column="53"/></operator> <literal type="number" pos:line="29" pos:column="54">0<pos:position pos:line="29" pos:column="55"/></literal></expr>)<pos:position pos:line="29" pos:column="56"/></condition><then pos:line="29" pos:column="56">
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><name pos:line="31" pos:column="7">clearsign<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">start_pos<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">last_pos<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>

      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><call><name pos:line="34" pos:column="11">mutt_strcmp<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><literal type="string" pos:line="34" pos:column="24">"MESSAGE-----\n"<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="42">buf<pos:position pos:line="34" pos:column="45"/></name> <operator pos:line="34" pos:column="46">+<pos:position pos:line="34" pos:column="47"/></operator> <literal type="number" pos:line="34" pos:column="48">15<pos:position pos:line="34" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call> <operator pos:line="34" pos:column="52">==<pos:position pos:line="34" pos:column="54"/></operator> <literal type="number" pos:line="34" pos:column="55">0<pos:position pos:line="34" pos:column="56"/></literal></expr>)<pos:position pos:line="34" pos:column="57"/></condition><then pos:line="34" pos:column="57">
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">needpass<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <literal type="number" pos:line="35" pos:column="20">1<pos:position pos:line="35" pos:column="21"/></literal></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt></block></then>
      <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><call><name pos:line="36" pos:column="16">mutt_strcmp<pos:position pos:line="36" pos:column="27"/></name> <argument_list pos:line="36" pos:column="28">(<argument><expr><literal type="string" pos:line="36" pos:column="29">"SIGNED MESSAGE-----\n"<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">buf<pos:position pos:line="36" pos:column="57"/></name> <operator pos:line="36" pos:column="58">+<pos:position pos:line="36" pos:column="59"/></operator> <literal type="number" pos:line="36" pos:column="60">15<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call> <operator pos:line="36" pos:column="64">==<pos:position pos:line="36" pos:column="66"/></operator> <literal type="number" pos:line="36" pos:column="67">0<pos:position pos:line="36" pos:column="68"/></literal></expr>)<pos:position pos:line="36" pos:column="69"/></condition><then pos:line="36" pos:column="69">
      <block pos:line="37" pos:column="7">{
	<expr_stmt><expr><name pos:line="38" pos:column="9">clearsign<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <literal type="number" pos:line="38" pos:column="21">1<pos:position pos:line="38" pos:column="22"/></literal></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">needpass<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if></elseif>
      <elseif pos:line="41" pos:column="7">else <if pos:line="41" pos:column="12">if <condition pos:line="41" pos:column="15">(<expr><operator pos:line="41" pos:column="16">!<pos:position pos:line="41" pos:column="17"/></operator><call><name pos:line="41" pos:column="17">option<pos:position pos:line="41" pos:column="23"/></name> <argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">OPTDONTHANDLEPGPKEYS<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call> <operator pos:line="41" pos:column="47">&amp;&amp;<pos:position pos:line="41" pos:column="57"/></operator>
	       <call><name pos:line="42" pos:column="16">mutt_strcmp<pos:position pos:line="42" pos:column="27"/></name> <argument_list pos:line="42" pos:column="28">(<argument><expr><literal type="string" pos:line="42" pos:column="29">"PUBLIC KEY BLOCK-----\n"<pos:position pos:line="42" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="56">buf<pos:position pos:line="42" pos:column="59"/></name> <operator pos:line="42" pos:column="60">+<pos:position pos:line="42" pos:column="61"/></operator> <literal type="number" pos:line="42" pos:column="62">15<pos:position pos:line="42" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call> <operator pos:line="42" pos:column="66">==<pos:position pos:line="42" pos:column="68"/></operator> <literal type="number" pos:line="42" pos:column="69">0<pos:position pos:line="42" pos:column="70"/></literal></expr>)<pos:position pos:line="42" pos:column="71"/></condition><then pos:line="42" pos:column="71"> 
      <block pos:line="43" pos:column="7">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">needpass<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <literal type="number" pos:line="44" pos:column="20">0<pos:position pos:line="44" pos:column="21"/></literal></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="45" pos:column="9">pgp_keyblock<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator><literal type="number" pos:line="45" pos:column="23">1<pos:position pos:line="45" pos:column="24"/></literal></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if></elseif> 
      <else pos:line="47" pos:column="7">else
      <block pos:line="48" pos:column="7">{
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name><name pos:line="49" pos:column="13">s<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">prefix<pos:position pos:line="49" pos:column="22"/></name></name></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="11">state_puts<pos:position pos:line="50" pos:column="21"/></name> <argument_list pos:line="50" pos:column="22">(<argument><expr><name><name pos:line="50" pos:column="23">s<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">prefix<pos:position pos:line="50" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="34">s<pos:position pos:line="50" pos:column="35"/></name></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">state_puts<pos:position pos:line="51" pos:column="19"/></name> <argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">buf<pos:position pos:line="51" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="26">s<pos:position pos:line="51" pos:column="27"/></name></expr></argument>)<pos:position pos:line="51" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
	<continue pos:line="52" pos:column="9">continue;<pos:position pos:line="52" pos:column="18"/></continue>
      }<pos:position pos:line="53" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name pos:line="55" pos:column="7">have_any_sigs<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <name pos:line="55" pos:column="23">have_any_sigs<pos:position pos:line="55" pos:column="36"/></name> <operator pos:line="55" pos:column="37">||<pos:position pos:line="55" pos:column="39"/></operator> <operator pos:line="55" pos:column="40">(<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="41">clearsign<pos:position pos:line="55" pos:column="50"/></name> <operator pos:line="55" pos:column="51">&amp;&amp;<pos:position pos:line="55" pos:column="61"/></operator> <operator pos:line="55" pos:column="54">(<pos:position pos:line="55" pos:column="55"/></operator><name><name pos:line="55" pos:column="55">s<pos:position pos:line="55" pos:column="56"/></name><operator pos:line="55" pos:column="56">-&gt;<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="58">flags<pos:position pos:line="55" pos:column="63"/></name></name> <operator pos:line="55" pos:column="64">&amp;<pos:position pos:line="55" pos:column="69"/></operator> <name pos:line="55" pos:column="66">M_VERIFY<pos:position pos:line="55" pos:column="74"/></name><operator pos:line="55" pos:column="74">)<pos:position pos:line="55" pos:column="75"/></operator><operator pos:line="55" pos:column="75">)<pos:position pos:line="55" pos:column="76"/></operator></expr>;<pos:position pos:line="55" pos:column="77"/></expr_stmt>
      
      <if pos:line="57" pos:column="7">if<condition pos:line="57" pos:column="9">(<expr><operator pos:line="57" pos:column="10">!<pos:position pos:line="57" pos:column="11"/></operator><name pos:line="57" pos:column="11">clearsign<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">||<pos:position pos:line="57" pos:column="23"/></operator> <name><name pos:line="57" pos:column="24">s<pos:position pos:line="57" pos:column="25"/></name><operator pos:line="57" pos:column="25">-&gt;<pos:position pos:line="57" pos:column="30"/></operator><name pos:line="57" pos:column="27">flags<pos:position pos:line="57" pos:column="32"/></name></name> <operator pos:line="57" pos:column="33">&amp;<pos:position pos:line="57" pos:column="38"/></operator> <name pos:line="57" pos:column="35">M_VERIFY<pos:position pos:line="57" pos:column="43"/></name></expr>)<pos:position pos:line="57" pos:column="44"/></condition><then pos:line="57" pos:column="44">
      <block pos:line="58" pos:column="7">{

	<comment type="block" pos:line="60" pos:column="9">/* invoke PGP */</comment>
	
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">mutt_mktemp<pos:position pos:line="62" pos:column="20"/></name> <argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">outfile<pos:position pos:line="62" pos:column="29"/></name></expr></argument>)<pos:position pos:line="62" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="31"/></expr_stmt>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">(<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">pgpout<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">=<pos:position pos:line="63" pos:column="22"/></operator> <call><name pos:line="63" pos:column="23">safe_fopen<pos:position pos:line="63" pos:column="33"/></name> <argument_list pos:line="63" pos:column="34">(<argument><expr><name pos:line="63" pos:column="35">outfile<pos:position pos:line="63" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="44">"w+"<pos:position pos:line="63" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="49"/></argument_list></call><operator pos:line="63" pos:column="49">)<pos:position pos:line="63" pos:column="50"/></operator> <operator pos:line="63" pos:column="51">==<pos:position pos:line="63" pos:column="53"/></operator> <name pos:line="63" pos:column="54">NULL<pos:position pos:line="63" pos:column="58"/></name></expr>)<pos:position pos:line="63" pos:column="59"/></condition><then pos:line="63" pos:column="59">
	<block pos:line="64" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="65" pos:column="11">mutt_perror<pos:position pos:line="65" pos:column="22"/></name> <argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">outfile<pos:position pos:line="65" pos:column="31"/></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>
	  <return pos:line="66" pos:column="11">return;<pos:position pos:line="66" pos:column="18"/></return>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if>
	
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">mutt_mktemp<pos:position pos:line="69" pos:column="20"/></name> <argument_list pos:line="69" pos:column="21">(<argument><expr><name pos:line="69" pos:column="22">tmpfname<pos:position pos:line="69" pos:column="30"/></name></expr></argument>)<pos:position pos:line="69" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><operator pos:line="70" pos:column="13">(<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">tmpfp<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">=<pos:position pos:line="70" pos:column="21"/></operator> <call><name pos:line="70" pos:column="22">safe_fopen<pos:position pos:line="70" pos:column="32"/></name> <argument_list pos:line="70" pos:column="33">(<argument><expr><name pos:line="70" pos:column="34">tmpfname<pos:position pos:line="70" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="44">"w+"<pos:position pos:line="70" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call><operator pos:line="70" pos:column="49">)<pos:position pos:line="70" pos:column="50"/></operator> <operator pos:line="70" pos:column="51">==<pos:position pos:line="70" pos:column="53"/></operator> <name pos:line="70" pos:column="54">NULL<pos:position pos:line="70" pos:column="58"/></name></expr>)<pos:position pos:line="70" pos:column="59"/></condition><then pos:line="70" pos:column="59">
	<block pos:line="71" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="72" pos:column="11">mutt_perror<pos:position pos:line="72" pos:column="22"/></name> <argument_list pos:line="72" pos:column="23">(<argument><expr><name pos:line="72" pos:column="24">tmpfname<pos:position pos:line="72" pos:column="32"/></name></expr></argument>)<pos:position pos:line="72" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="73" pos:column="11">safe_fclose<pos:position pos:line="73" pos:column="22"/></name> <argument_list pos:line="73" pos:column="23">(<argument><expr><operator pos:line="73" pos:column="24">&amp;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="25">pgpout<pos:position pos:line="73" pos:column="31"/></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt> 
	  <return pos:line="74" pos:column="11">return;<pos:position pos:line="74" pos:column="18"/></return>
	}<pos:position pos:line="75" pos:column="10"/></block></then></if>
	
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">fputs<pos:position pos:line="77" pos:column="14"/></name> <argument_list pos:line="77" pos:column="15">(<argument><expr><name pos:line="77" pos:column="16">buf<pos:position pos:line="77" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="21">tmpfp<pos:position pos:line="77" pos:column="26"/></name></expr></argument>)<pos:position pos:line="77" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="28"/></expr_stmt>
	<while pos:line="78" pos:column="9">while <condition pos:line="78" pos:column="15">(<expr><name pos:line="78" pos:column="16">bytes<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">&gt;<pos:position pos:line="78" pos:column="26"/></operator> <literal type="number" pos:line="78" pos:column="24">0<pos:position pos:line="78" pos:column="25"/></literal> <operator pos:line="78" pos:column="26">&amp;&amp;<pos:position pos:line="78" pos:column="36"/></operator> <call><name pos:line="78" pos:column="29">fgets<pos:position pos:line="78" pos:column="34"/></name> <argument_list pos:line="78" pos:column="35">(<argument><expr><name pos:line="78" pos:column="36">buf<pos:position pos:line="78" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="41">sizeof <argument_list pos:line="78" pos:column="48">(<argument><expr><name pos:line="78" pos:column="49">buf<pos:position pos:line="78" pos:column="52"/></name></expr></argument>)<pos:position pos:line="78" pos:column="53"/></argument_list></sizeof> <operator pos:line="78" pos:column="54">-<pos:position pos:line="78" pos:column="55"/></operator> <literal type="number" pos:line="78" pos:column="56">1<pos:position pos:line="78" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="59">s<pos:position pos:line="78" pos:column="60"/></name><operator pos:line="78" pos:column="60">-&gt;<pos:position pos:line="78" pos:column="65"/></operator><name pos:line="78" pos:column="62">fpin<pos:position pos:line="78" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="67"/></argument_list></call> <operator pos:line="78" pos:column="68">!=<pos:position pos:line="78" pos:column="70"/></operator> <name pos:line="78" pos:column="71">NULL<pos:position pos:line="78" pos:column="75"/></name></expr>)<pos:position pos:line="78" pos:column="76"/></condition>
	<block pos:line="79" pos:column="9">{
	  <expr_stmt><expr><name pos:line="80" pos:column="11">offset<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <call><name pos:line="80" pos:column="20">ftell<pos:position pos:line="80" pos:column="25"/></name> <argument_list pos:line="80" pos:column="26">(<argument><expr><name><name pos:line="80" pos:column="27">s<pos:position pos:line="80" pos:column="28"/></name><operator pos:line="80" pos:column="28">-&gt;<pos:position pos:line="80" pos:column="33"/></operator><name pos:line="80" pos:column="30">fpin<pos:position pos:line="80" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="81" pos:column="11">bytes<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">-=<pos:position pos:line="81" pos:column="19"/></operator> <operator pos:line="81" pos:column="20">(<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="21">offset<pos:position pos:line="81" pos:column="27"/></name> <operator pos:line="81" pos:column="28">-<pos:position pos:line="81" pos:column="29"/></operator> <name pos:line="81" pos:column="30">last_pos<pos:position pos:line="81" pos:column="38"/></name><operator pos:line="81" pos:column="38">)<pos:position pos:line="81" pos:column="39"/></operator></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt> <comment type="block" pos:line="81" pos:column="41">/* don't rely on mutt_strlen(buf) */</comment>
	  <expr_stmt><expr><name pos:line="82" pos:column="11">last_pos<pos:position pos:line="82" pos:column="19"/></name> <operator pos:line="82" pos:column="20">=<pos:position pos:line="82" pos:column="21"/></operator> <name pos:line="82" pos:column="22">offset<pos:position pos:line="82" pos:column="28"/></name></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
	  
	  <expr_stmt><expr><call><name pos:line="84" pos:column="11">fputs<pos:position pos:line="84" pos:column="16"/></name> <argument_list pos:line="84" pos:column="17">(<argument><expr><name pos:line="84" pos:column="18">buf<pos:position pos:line="84" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="23">tmpfp<pos:position pos:line="84" pos:column="28"/></name></expr></argument>)<pos:position pos:line="84" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="30"/></expr_stmt>
	  <if pos:line="85" pos:column="11">if <condition pos:line="85" pos:column="14">(<expr><operator pos:line="85" pos:column="15">(<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="16">needpass<pos:position pos:line="85" pos:column="24"/></name> <operator pos:line="85" pos:column="25">&amp;&amp;<pos:position pos:line="85" pos:column="35"/></operator> <call><name pos:line="85" pos:column="28">mutt_strcmp<pos:position pos:line="85" pos:column="39"/></name> <argument_list pos:line="85" pos:column="40">(<argument><expr><literal type="string" pos:line="85" pos:column="41">"-----END PGP MESSAGE-----\n"<pos:position pos:line="85" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="72">buf<pos:position pos:line="85" pos:column="75"/></name></expr></argument>)<pos:position pos:line="85" pos:column="76"/></argument_list></call> <operator pos:line="85" pos:column="77">==<pos:position pos:line="85" pos:column="79"/></operator> <literal type="number" pos:line="85" pos:column="80">0<pos:position pos:line="85" pos:column="81"/></literal><operator pos:line="85" pos:column="81">)<pos:position pos:line="85" pos:column="82"/></operator> <operator pos:line="85" pos:column="83">||<pos:position pos:line="85" pos:column="85"/></operator>
	      <operator pos:line="86" pos:column="15">(<pos:position pos:line="86" pos:column="16"/></operator><operator pos:line="86" pos:column="16">!<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="17">needpass<pos:position pos:line="86" pos:column="25"/></name> 
             <operator pos:line="87" pos:column="14">&amp;&amp;<pos:position pos:line="87" pos:column="24"/></operator> <operator pos:line="87" pos:column="17">(<pos:position pos:line="87" pos:column="18"/></operator><call><name pos:line="87" pos:column="18">mutt_strcmp<pos:position pos:line="87" pos:column="29"/></name> <argument_list pos:line="87" pos:column="30">(<argument><expr><literal type="string" pos:line="87" pos:column="31">"-----END PGP SIGNATURE-----\n"<pos:position pos:line="87" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="64">buf<pos:position pos:line="87" pos:column="67"/></name></expr></argument>)<pos:position pos:line="87" pos:column="68"/></argument_list></call> <operator pos:line="87" pos:column="69">==<pos:position pos:line="87" pos:column="71"/></operator> <literal type="number" pos:line="87" pos:column="72">0<pos:position pos:line="87" pos:column="73"/></literal>
                 <operator pos:line="88" pos:column="18">||<pos:position pos:line="88" pos:column="20"/></operator> <call><name pos:line="88" pos:column="21">mutt_strcmp<pos:position pos:line="88" pos:column="32"/></name> <argument_list pos:line="88" pos:column="33">(<argument><expr><literal type="string" pos:line="88" pos:column="34">"-----END PGP PUBLIC KEY BLOCK-----\n"<pos:position pos:line="88" pos:column="72"/></literal></expr></argument>,<argument><expr><name pos:line="88" pos:column="73">buf<pos:position pos:line="88" pos:column="76"/></name></expr></argument>)<pos:position pos:line="88" pos:column="77"/></argument_list></call> <operator pos:line="88" pos:column="78">==<pos:position pos:line="88" pos:column="80"/></operator> <literal type="number" pos:line="88" pos:column="81">0<pos:position pos:line="88" pos:column="82"/></literal><operator pos:line="88" pos:column="82">)<pos:position pos:line="88" pos:column="83"/></operator><operator pos:line="88" pos:column="83">)<pos:position pos:line="88" pos:column="84"/></operator></expr>)<pos:position pos:line="88" pos:column="85"/></condition><then pos:line="88" pos:column="85">
	    <block type="pseudo"><break pos:line="89" pos:column="13">break;<pos:position pos:line="89" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="90" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="92" pos:column="9">safe_fclose<pos:position pos:line="92" pos:column="20"/></name> <argument_list pos:line="92" pos:column="21">(<argument><expr><operator pos:line="92" pos:column="22">&amp;<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="23">tmpfp<pos:position pos:line="92" pos:column="28"/></name></expr></argument>)<pos:position pos:line="92" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="30"/></expr_stmt>
	
	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><operator pos:line="94" pos:column="13">(<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="14">thepid<pos:position pos:line="94" pos:column="20"/></name> <operator pos:line="94" pos:column="21">=<pos:position pos:line="94" pos:column="22"/></operator> <call><name pos:line="94" pos:column="23">pgp_invoke_decode<pos:position pos:line="94" pos:column="40"/></name> <argument_list pos:line="94" pos:column="41">(<argument><expr><operator pos:line="94" pos:column="42">&amp;<pos:position pos:line="94" pos:column="47"/></operator><name pos:line="94" pos:column="43">pgpin<pos:position pos:line="94" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="50">NULL<pos:position pos:line="94" pos:column="54"/></name></expr></argument>,
					  <argument><expr><operator pos:line="95" pos:column="43">&amp;<pos:position pos:line="95" pos:column="48"/></operator><name pos:line="95" pos:column="44">pgperr<pos:position pos:line="95" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="52">-<pos:position pos:line="95" pos:column="53"/></operator><literal type="number" pos:line="95" pos:column="53">1<pos:position pos:line="95" pos:column="54"/></literal></expr></argument>,
					  <argument><expr><call><name pos:line="96" pos:column="43">fileno<pos:position pos:line="96" pos:column="49"/></name> <argument_list pos:line="96" pos:column="50">(<argument><expr><name pos:line="96" pos:column="51">pgpout<pos:position pos:line="96" pos:column="57"/></name></expr></argument>)<pos:position pos:line="96" pos:column="58"/></argument_list></call></expr></argument>, 
					  <argument><expr><operator pos:line="97" pos:column="43">-<pos:position pos:line="97" pos:column="44"/></operator><literal type="number" pos:line="97" pos:column="44">1<pos:position pos:line="97" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="47">tmpfname<pos:position pos:line="97" pos:column="55"/></name></expr></argument>, 
					  <argument><expr><name pos:line="98" pos:column="43">needpass<pos:position pos:line="98" pos:column="51"/></name></expr></argument>)<pos:position pos:line="98" pos:column="52"/></argument_list></call><operator pos:line="98" pos:column="52">)<pos:position pos:line="98" pos:column="53"/></operator> <operator pos:line="98" pos:column="54">==<pos:position pos:line="98" pos:column="56"/></operator> <operator pos:line="98" pos:column="57">-<pos:position pos:line="98" pos:column="58"/></operator><literal type="number" pos:line="98" pos:column="58">1<pos:position pos:line="98" pos:column="59"/></literal></expr>)<pos:position pos:line="98" pos:column="60"/></condition><then pos:line="98" pos:column="60">
	<block pos:line="99" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="100" pos:column="11">safe_fclose<pos:position pos:line="100" pos:column="22"/></name> <argument_list pos:line="100" pos:column="23">(<argument><expr><operator pos:line="100" pos:column="24">&amp;<pos:position pos:line="100" pos:column="29"/></operator><name pos:line="100" pos:column="25">pgpout<pos:position pos:line="100" pos:column="31"/></name></expr></argument>)<pos:position pos:line="100" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="101" pos:column="11">mutt_unlink<pos:position pos:line="101" pos:column="22"/></name> <argument_list pos:line="101" pos:column="23">(<argument><expr><name pos:line="101" pos:column="24">tmpfname<pos:position pos:line="101" pos:column="32"/></name></expr></argument>)<pos:position pos:line="101" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt>

	  <expr_stmt><expr><name pos:line="103" pos:column="11">maybe_goodsig<pos:position pos:line="103" pos:column="24"/></name> <operator pos:line="103" pos:column="25">=<pos:position pos:line="103" pos:column="26"/></operator> <literal type="number" pos:line="103" pos:column="27">0<pos:position pos:line="103" pos:column="28"/></literal></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt>

	  <expr_stmt><expr><name pos:line="105" pos:column="11">pgpin<pos:position pos:line="105" pos:column="16"/></name> <operator pos:line="105" pos:column="17">=<pos:position pos:line="105" pos:column="18"/></operator> <name pos:line="105" pos:column="19">NULL<pos:position pos:line="105" pos:column="23"/></name></expr>;<pos:position pos:line="105" pos:column="24"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="106" pos:column="11">pgperr<pos:position pos:line="106" pos:column="17"/></name> <operator pos:line="106" pos:column="18">=<pos:position pos:line="106" pos:column="19"/></operator> <name pos:line="106" pos:column="20">NULL<pos:position pos:line="106" pos:column="24"/></name></expr>;<pos:position pos:line="106" pos:column="25"/></expr_stmt>
	  
	  <expr_stmt><expr><call><name pos:line="108" pos:column="11">state_attach_puts<pos:position pos:line="108" pos:column="28"/></name> <argument_list pos:line="108" pos:column="29">(<argument><expr><call><name pos:line="108" pos:column="30">_<pos:position pos:line="108" pos:column="31"/></name><argument_list pos:line="108" pos:column="31">(<argument><expr><literal type="string" pos:line="108" pos:column="32">"[-- Error: unable to create PGP subprocess! --]\n"<pos:position pos:line="108" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="108" pos:column="86">s<pos:position pos:line="108" pos:column="87"/></name></expr></argument>)<pos:position pos:line="108" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="109" pos:column="10"/></block></then>
	<else pos:line="110" pos:column="9">else
	<block pos:line="111" pos:column="9">{
	  <if pos:line="112" pos:column="11">if <condition pos:line="112" pos:column="14">(<expr><name pos:line="112" pos:column="15">needpass<pos:position pos:line="112" pos:column="23"/></name></expr>)<pos:position pos:line="112" pos:column="24"/></condition><then pos:line="112" pos:column="24">
	  <block pos:line="113" pos:column="11">{
	    <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<expr><operator pos:line="114" pos:column="17">!<pos:position pos:line="114" pos:column="18"/></operator><call><name pos:line="114" pos:column="18">pgp_valid_passphrase<pos:position pos:line="114" pos:column="38"/></name> <argument_list pos:line="114" pos:column="39">()<pos:position pos:line="114" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="42"/></condition><then pos:line="114" pos:column="42">
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="15">pgp_void_passphrase<pos:position pos:line="115" pos:column="34"/></name> <argument_list pos:line="115" pos:column="35">()<pos:position pos:line="115" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="38"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><call><name pos:line="116" pos:column="13">fputs<pos:position pos:line="116" pos:column="18"/></name> <argument_list pos:line="116" pos:column="19">(<argument><expr><name pos:line="116" pos:column="20">PgpPass<pos:position pos:line="116" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="29">pgpin<pos:position pos:line="116" pos:column="34"/></name></expr></argument>)<pos:position pos:line="116" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="36"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="117" pos:column="13">fputc<pos:position pos:line="117" pos:column="18"/></name> <argument_list pos:line="117" pos:column="19">(<argument><expr><literal type="char" pos:line="117" pos:column="20">'\n'<pos:position pos:line="117" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="26">pgpin<pos:position pos:line="117" pos:column="31"/></name></expr></argument>)<pos:position pos:line="117" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="33"/></expr_stmt>
	  }<pos:position pos:line="118" pos:column="12"/></block></then></if>
	  
	  <expr_stmt><expr><call><name pos:line="120" pos:column="11">safe_fclose<pos:position pos:line="120" pos:column="22"/></name> <argument_list pos:line="120" pos:column="23">(<argument><expr><operator pos:line="120" pos:column="24">&amp;<pos:position pos:line="120" pos:column="29"/></operator><name pos:line="120" pos:column="25">pgpin<pos:position pos:line="120" pos:column="30"/></name></expr></argument>)<pos:position pos:line="120" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="32"/></expr_stmt>
	  
	  <if pos:line="122" pos:column="11">if <condition pos:line="122" pos:column="14">(<expr><name><name pos:line="122" pos:column="15">s<pos:position pos:line="122" pos:column="16"/></name><operator pos:line="122" pos:column="16">-&gt;<pos:position pos:line="122" pos:column="21"/></operator><name pos:line="122" pos:column="18">flags<pos:position pos:line="122" pos:column="23"/></name></name> <operator pos:line="122" pos:column="24">&amp;<pos:position pos:line="122" pos:column="29"/></operator> <name pos:line="122" pos:column="26">M_DISPLAY<pos:position pos:line="122" pos:column="35"/></name></expr>)<pos:position pos:line="122" pos:column="36"/></condition><then pos:line="122" pos:column="36">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="13">pgp_current_time<pos:position pos:line="123" pos:column="29"/></name> <argument_list pos:line="123" pos:column="30">(<argument><expr><name pos:line="123" pos:column="31">s<pos:position pos:line="123" pos:column="32"/></name></expr></argument>)<pos:position pos:line="123" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="34"/></expr_stmt></block></then></if>
	  
	  <expr_stmt><expr><name pos:line="125" pos:column="11">rv<pos:position pos:line="125" pos:column="13"/></name> <operator pos:line="125" pos:column="14">=<pos:position pos:line="125" pos:column="15"/></operator> <call><name pos:line="125" pos:column="16">mutt_wait_filter<pos:position pos:line="125" pos:column="32"/></name> <argument_list pos:line="125" pos:column="33">(<argument><expr><name pos:line="125" pos:column="34">thepid<pos:position pos:line="125" pos:column="40"/></name></expr></argument>)<pos:position pos:line="125" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="42"/></expr_stmt>
	  
	  <expr_stmt><expr><call><name pos:line="127" pos:column="11">mutt_unlink<pos:position pos:line="127" pos:column="22"/></name> <argument_list pos:line="127" pos:column="23">(<argument><expr><name pos:line="127" pos:column="24">tmpfname<pos:position pos:line="127" pos:column="32"/></name></expr></argument>)<pos:position pos:line="127" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="34"/></expr_stmt>
	
	  <if pos:line="129" pos:column="11">if <condition pos:line="129" pos:column="14">(<expr><name><name pos:line="129" pos:column="15">s<pos:position pos:line="129" pos:column="16"/></name><operator pos:line="129" pos:column="16">-&gt;<pos:position pos:line="129" pos:column="21"/></operator><name pos:line="129" pos:column="18">flags<pos:position pos:line="129" pos:column="23"/></name></name> <operator pos:line="129" pos:column="24">&amp;<pos:position pos:line="129" pos:column="29"/></operator> <name pos:line="129" pos:column="26">M_DISPLAY<pos:position pos:line="129" pos:column="35"/></name></expr>)<pos:position pos:line="129" pos:column="36"/></condition><then pos:line="129" pos:column="36">
	  <block pos:line="130" pos:column="11">{
	    <expr_stmt><expr><name pos:line="131" pos:column="13">rc<pos:position pos:line="131" pos:column="15"/></name> <operator pos:line="131" pos:column="16">=<pos:position pos:line="131" pos:column="17"/></operator> <call><name pos:line="131" pos:column="18">pgp_copy_checksig<pos:position pos:line="131" pos:column="35"/></name> <argument_list pos:line="131" pos:column="36">(<argument><expr><name pos:line="131" pos:column="37">pgperr<pos:position pos:line="131" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="45">s<pos:position pos:line="131" pos:column="46"/></name><operator pos:line="131" pos:column="46">-&gt;<pos:position pos:line="131" pos:column="51"/></operator><name pos:line="131" pos:column="48">fpout<pos:position pos:line="131" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="55"/></expr_stmt>
	    
	    <if pos:line="133" pos:column="13">if <condition pos:line="133" pos:column="16">(<expr><name pos:line="133" pos:column="17">rc<pos:position pos:line="133" pos:column="19"/></name> <operator pos:line="133" pos:column="20">==<pos:position pos:line="133" pos:column="22"/></operator> <literal type="number" pos:line="133" pos:column="23">0<pos:position pos:line="133" pos:column="24"/></literal></expr>)<pos:position pos:line="133" pos:column="25"/></condition><then pos:line="133" pos:column="25">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="134" pos:column="15">have_any_sigs<pos:position pos:line="134" pos:column="28"/></name> <operator pos:line="134" pos:column="29">=<pos:position pos:line="134" pos:column="30"/></operator> <literal type="number" pos:line="134" pos:column="31">1<pos:position pos:line="134" pos:column="32"/></literal></expr>;<pos:position pos:line="134" pos:column="33"/></expr_stmt></block></then></if>
	    <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><name pos:line="135" pos:column="17">rc<pos:position pos:line="135" pos:column="19"/></name> <operator pos:line="135" pos:column="20">||<pos:position pos:line="135" pos:column="22"/></operator> <name pos:line="135" pos:column="23">rv<pos:position pos:line="135" pos:column="25"/></name></expr>)<pos:position pos:line="135" pos:column="26"/></condition><then pos:line="135" pos:column="26">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="136" pos:column="15">maybe_goodsig<pos:position pos:line="136" pos:column="28"/></name> <operator pos:line="136" pos:column="29">=<pos:position pos:line="136" pos:column="30"/></operator> <literal type="number" pos:line="136" pos:column="31">0<pos:position pos:line="136" pos:column="32"/></literal></expr>;<pos:position pos:line="136" pos:column="33"/></expr_stmt></block></then></if>
	  }<pos:position pos:line="137" pos:column="12"/></block></then></if>
	  
	  <expr_stmt><expr><call><name pos:line="139" pos:column="11">safe_fclose<pos:position pos:line="139" pos:column="22"/></name> <argument_list pos:line="139" pos:column="23">(<argument><expr><operator pos:line="139" pos:column="24">&amp;<pos:position pos:line="139" pos:column="29"/></operator><name pos:line="139" pos:column="25">pgperr<pos:position pos:line="139" pos:column="31"/></name></expr></argument>)<pos:position pos:line="139" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="33"/></expr_stmt>

	  <if pos:line="141" pos:column="11">if <condition pos:line="141" pos:column="14">(<expr><name><name pos:line="141" pos:column="15">s<pos:position pos:line="141" pos:column="16"/></name><operator pos:line="141" pos:column="16">-&gt;<pos:position pos:line="141" pos:column="21"/></operator><name pos:line="141" pos:column="18">flags<pos:position pos:line="141" pos:column="23"/></name></name> <operator pos:line="141" pos:column="24">&amp;<pos:position pos:line="141" pos:column="29"/></operator> <name pos:line="141" pos:column="26">M_DISPLAY<pos:position pos:line="141" pos:column="35"/></name></expr>)<pos:position pos:line="141" pos:column="36"/></condition><then pos:line="141" pos:column="36">
	  <block pos:line="142" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="143" pos:column="13">state_putc<pos:position pos:line="143" pos:column="23"/></name> <argument_list pos:line="143" pos:column="24">(<argument><expr><literal type="char" pos:line="143" pos:column="25">'\n'<pos:position pos:line="143" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="31">s<pos:position pos:line="143" pos:column="32"/></name></expr></argument>)<pos:position pos:line="143" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="34"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="144" pos:column="13">state_attach_puts<pos:position pos:line="144" pos:column="30"/></name> <argument_list pos:line="144" pos:column="31">(<argument><expr><call><name pos:line="144" pos:column="32">_<pos:position pos:line="144" pos:column="33"/></name><argument_list pos:line="144" pos:column="33">(<argument><expr><literal type="string" pos:line="144" pos:column="34">"[-- End of PGP output --]\n\n"<pos:position pos:line="144" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="144" pos:column="68">s<pos:position pos:line="144" pos:column="69"/></name></expr></argument>)<pos:position pos:line="144" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="71"/></expr_stmt>
	  }<pos:position pos:line="145" pos:column="12"/></block></then></if>
	}<pos:position pos:line="146" pos:column="10"/></block></else></if>
      }<pos:position pos:line="147" pos:column="8"/></block></then></if>
    
      <if pos:line="149" pos:column="7">if<condition pos:line="149" pos:column="9">(<expr><name><name pos:line="149" pos:column="10">s<pos:position pos:line="149" pos:column="11"/></name><operator pos:line="149" pos:column="11">-&gt;<pos:position pos:line="149" pos:column="16"/></operator><name pos:line="149" pos:column="13">flags<pos:position pos:line="149" pos:column="18"/></name></name> <operator pos:line="149" pos:column="19">&amp;<pos:position pos:line="149" pos:column="24"/></operator> <name pos:line="149" pos:column="21">M_DISPLAY<pos:position pos:line="149" pos:column="30"/></name></expr>)<pos:position pos:line="149" pos:column="31"/></condition><then pos:line="149" pos:column="31">
      <block pos:line="150" pos:column="7">{
	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">needpass<pos:position pos:line="151" pos:column="21"/></name></expr>)<pos:position pos:line="151" pos:column="22"/></condition><then pos:line="151" pos:column="22">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="11">state_attach_puts<pos:position pos:line="152" pos:column="28"/></name> <argument_list pos:line="152" pos:column="29">(<argument><expr><call><name pos:line="152" pos:column="30">_<pos:position pos:line="152" pos:column="31"/></name><argument_list pos:line="152" pos:column="31">(<argument><expr><literal type="string" pos:line="152" pos:column="32">"[-- BEGIN PGP MESSAGE --]\n\n"<pos:position pos:line="152" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="152" pos:column="66">s<pos:position pos:line="152" pos:column="67"/></name></expr></argument>)<pos:position pos:line="152" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="69"/></expr_stmt></block></then>
	<elseif pos:line="153" pos:column="9">else <if pos:line="153" pos:column="14">if <condition pos:line="153" pos:column="17">(<expr><name pos:line="153" pos:column="18">pgp_keyblock<pos:position pos:line="153" pos:column="30"/></name></expr>)<pos:position pos:line="153" pos:column="31"/></condition><then pos:line="153" pos:column="31">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="154" pos:column="11">state_attach_puts<pos:position pos:line="154" pos:column="28"/></name> <argument_list pos:line="154" pos:column="29">(<argument><expr><call><name pos:line="154" pos:column="30">_<pos:position pos:line="154" pos:column="31"/></name><argument_list pos:line="154" pos:column="31">(<argument><expr><literal type="string" pos:line="154" pos:column="32">"[-- BEGIN PGP PUBLIC KEY BLOCK --]\n"<pos:position pos:line="154" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="154" pos:column="73">s<pos:position pos:line="154" pos:column="74"/></name></expr></argument>)<pos:position pos:line="154" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="76"/></expr_stmt></block></then></if></elseif>
	<else pos:line="155" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="156" pos:column="11">state_attach_puts<pos:position pos:line="156" pos:column="28"/></name> <argument_list pos:line="156" pos:column="29">(<argument><expr><call><name pos:line="156" pos:column="30">_<pos:position pos:line="156" pos:column="31"/></name><argument_list pos:line="156" pos:column="31">(<argument><expr><literal type="string" pos:line="156" pos:column="32">"[-- BEGIN PGP SIGNED MESSAGE --]\n\n"<pos:position pos:line="156" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="156" pos:column="73">s<pos:position pos:line="156" pos:column="74"/></name></expr></argument>)<pos:position pos:line="156" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="76"/></expr_stmt></block></else></if>
      }<pos:position pos:line="157" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="159" pos:column="7">/* Use PGP's output if there was no clearsig signature. */</comment>
      
      <if pos:line="161" pos:column="7">if<condition pos:line="161" pos:column="9">(<expr><operator pos:line="161" pos:column="10">!<pos:position pos:line="161" pos:column="11"/></operator><name pos:line="161" pos:column="11">clearsign<pos:position pos:line="161" pos:column="20"/></name> <operator pos:line="161" pos:column="21">&amp;&amp;<pos:position pos:line="161" pos:column="31"/></operator> <name pos:line="161" pos:column="24">pgpout<pos:position pos:line="161" pos:column="30"/></name></expr>)<pos:position pos:line="161" pos:column="31"/></condition><then pos:line="161" pos:column="31">
      <block pos:line="162" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="163" pos:column="9">fflush<pos:position pos:line="163" pos:column="15"/></name> <argument_list pos:line="163" pos:column="16">(<argument><expr><name pos:line="163" pos:column="17">pgpout<pos:position pos:line="163" pos:column="23"/></name></expr></argument>)<pos:position pos:line="163" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="164" pos:column="9">rewind<pos:position pos:line="164" pos:column="15"/></name> <argument_list pos:line="164" pos:column="16">(<argument><expr><name pos:line="164" pos:column="17">pgpout<pos:position pos:line="164" pos:column="23"/></name></expr></argument>)<pos:position pos:line="164" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="25"/></expr_stmt>
	<while pos:line="165" pos:column="9">while <condition pos:line="165" pos:column="15">(<expr><call><name pos:line="165" pos:column="16">fgets<pos:position pos:line="165" pos:column="21"/></name> <argument_list pos:line="165" pos:column="22">(<argument><expr><name pos:line="165" pos:column="23">buf<pos:position pos:line="165" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="165" pos:column="28">sizeof <argument_list pos:line="165" pos:column="35">(<argument><expr><name pos:line="165" pos:column="36">buf<pos:position pos:line="165" pos:column="39"/></name></expr></argument>)<pos:position pos:line="165" pos:column="40"/></argument_list></sizeof> <operator pos:line="165" pos:column="41">-<pos:position pos:line="165" pos:column="42"/></operator> <literal type="number" pos:line="165" pos:column="43">1<pos:position pos:line="165" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="165" pos:column="46">pgpout<pos:position pos:line="165" pos:column="52"/></name></expr></argument>)<pos:position pos:line="165" pos:column="53"/></argument_list></call> <operator pos:line="165" pos:column="54">!=<pos:position pos:line="165" pos:column="56"/></operator> <name pos:line="165" pos:column="57">NULL<pos:position pos:line="165" pos:column="61"/></name></expr>)<pos:position pos:line="165" pos:column="62"/></condition>
	<block pos:line="166" pos:column="9">{
	  <if pos:line="167" pos:column="11">if <condition pos:line="167" pos:column="14">(<expr><name><name pos:line="167" pos:column="15">s<pos:position pos:line="167" pos:column="16"/></name><operator pos:line="167" pos:column="16">-&gt;<pos:position pos:line="167" pos:column="21"/></operator><name pos:line="167" pos:column="18">prefix<pos:position pos:line="167" pos:column="24"/></name></name></expr>)<pos:position pos:line="167" pos:column="25"/></condition><then pos:line="167" pos:column="25">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="13">state_puts<pos:position pos:line="168" pos:column="23"/></name> <argument_list pos:line="168" pos:column="24">(<argument><expr><name><name pos:line="168" pos:column="25">s<pos:position pos:line="168" pos:column="26"/></name><operator pos:line="168" pos:column="26">-&gt;<pos:position pos:line="168" pos:column="31"/></operator><name pos:line="168" pos:column="28">prefix<pos:position pos:line="168" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="36">s<pos:position pos:line="168" pos:column="37"/></name></expr></argument>)<pos:position pos:line="168" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="39"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><call><name pos:line="169" pos:column="11">state_puts<pos:position pos:line="169" pos:column="21"/></name> <argument_list pos:line="169" pos:column="22">(<argument><expr><name pos:line="169" pos:column="23">buf<pos:position pos:line="169" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="28">s<pos:position pos:line="169" pos:column="29"/></name></expr></argument>)<pos:position pos:line="169" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="170" pos:column="10"/></block></while>
      }<pos:position pos:line="171" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="173" pos:column="7">/* Close the temporary files iff they were created. 
       * The condition used to be !clearsign || s-&gt;flags &amp; M_VERIFY,
       * but gcc would complain then.
       */</comment>
      
      <if pos:line="178" pos:column="7">if<condition pos:line="178" pos:column="9">(<expr><name pos:line="178" pos:column="10">pgpout<pos:position pos:line="178" pos:column="16"/></name></expr>)<pos:position pos:line="178" pos:column="17"/></condition><then pos:line="178" pos:column="17">
      <block pos:line="179" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="180" pos:column="9">safe_fclose<pos:position pos:line="180" pos:column="20"/></name> <argument_list pos:line="180" pos:column="21">(<argument><expr><operator pos:line="180" pos:column="22">&amp;<pos:position pos:line="180" pos:column="27"/></operator><name pos:line="180" pos:column="23">pgpout<pos:position pos:line="180" pos:column="29"/></name></expr></argument>)<pos:position pos:line="180" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="181" pos:column="9">mutt_unlink<pos:position pos:line="181" pos:column="20"/></name> <argument_list pos:line="181" pos:column="21">(<argument><expr><name pos:line="181" pos:column="22">outfile<pos:position pos:line="181" pos:column="29"/></name></expr></argument>)<pos:position pos:line="181" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="182" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="184" pos:column="7">/* decode clearsign stuff */</comment>
      
      <if pos:line="186" pos:column="7">if <condition pos:line="186" pos:column="10">(<expr><name pos:line="186" pos:column="11">clearsign<pos:position pos:line="186" pos:column="20"/></name></expr>)<pos:position pos:line="186" pos:column="21"/></condition><then pos:line="186" pos:column="21">
      <block pos:line="187" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="188" pos:column="9">fseek<pos:position pos:line="188" pos:column="14"/></name> <argument_list pos:line="188" pos:column="15">(<argument><expr><name><name pos:line="188" pos:column="16">s<pos:position pos:line="188" pos:column="17"/></name><operator pos:line="188" pos:column="17">-&gt;<pos:position pos:line="188" pos:column="22"/></operator><name pos:line="188" pos:column="19">fpin<pos:position pos:line="188" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="25">start_pos<pos:position pos:line="188" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="36">SEEK_SET<pos:position pos:line="188" pos:column="44"/></name></expr></argument>)<pos:position pos:line="188" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="189" pos:column="9">bytes<pos:position pos:line="189" pos:column="14"/></name>   <operator pos:line="189" pos:column="17">+=<pos:position pos:line="189" pos:column="19"/></operator> <operator pos:line="189" pos:column="20">(<pos:position pos:line="189" pos:column="21"/></operator><name pos:line="189" pos:column="21">last_pos<pos:position pos:line="189" pos:column="29"/></name> <operator pos:line="189" pos:column="30">-<pos:position pos:line="189" pos:column="31"/></operator> <name pos:line="189" pos:column="32">start_pos<pos:position pos:line="189" pos:column="41"/></name><operator pos:line="189" pos:column="41">)<pos:position pos:line="189" pos:column="42"/></operator></expr>;<pos:position pos:line="189" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name pos:line="190" pos:column="9">bytes<pos:position pos:line="190" pos:column="14"/></name>    <operator pos:line="190" pos:column="18">=<pos:position pos:line="190" pos:column="19"/></operator> <call><name pos:line="190" pos:column="20">pgp_copy_clearsigned<pos:position pos:line="190" pos:column="40"/></name> <argument_list pos:line="190" pos:column="41">(<argument><expr><name pos:line="190" pos:column="42">s<pos:position pos:line="190" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="45">bytes<pos:position pos:line="190" pos:column="50"/></name></expr></argument>)<pos:position pos:line="190" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="191" pos:column="9">last_pos<pos:position pos:line="191" pos:column="17"/></name> <operator pos:line="191" pos:column="18">=<pos:position pos:line="191" pos:column="19"/></operator> <call><name pos:line="191" pos:column="20">ftell<pos:position pos:line="191" pos:column="25"/></name> <argument_list pos:line="191" pos:column="26">(<argument><expr><name><name pos:line="191" pos:column="27">s<pos:position pos:line="191" pos:column="28"/></name><operator pos:line="191" pos:column="28">-&gt;<pos:position pos:line="191" pos:column="33"/></operator><name pos:line="191" pos:column="30">fpin<pos:position pos:line="191" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="191" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="36"/></expr_stmt>
      }<pos:position pos:line="192" pos:column="8"/></block></then></if>

      <if pos:line="194" pos:column="7">if <condition pos:line="194" pos:column="10">(<expr><name><name pos:line="194" pos:column="11">s<pos:position pos:line="194" pos:column="12"/></name><operator pos:line="194" pos:column="12">-&gt;<pos:position pos:line="194" pos:column="17"/></operator><name pos:line="194" pos:column="14">flags<pos:position pos:line="194" pos:column="19"/></name></name> <operator pos:line="194" pos:column="20">&amp;<pos:position pos:line="194" pos:column="25"/></operator> <name pos:line="194" pos:column="22">M_DISPLAY<pos:position pos:line="194" pos:column="31"/></name></expr>)<pos:position pos:line="194" pos:column="32"/></condition><then pos:line="194" pos:column="32">
      <block pos:line="195" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="196" pos:column="9">state_putc<pos:position pos:line="196" pos:column="19"/></name> <argument_list pos:line="196" pos:column="20">(<argument><expr><literal type="char" pos:line="196" pos:column="21">'\n'<pos:position pos:line="196" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="196" pos:column="27">s<pos:position pos:line="196" pos:column="28"/></name></expr></argument>)<pos:position pos:line="196" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="30"/></expr_stmt>
	<if pos:line="197" pos:column="9">if <condition pos:line="197" pos:column="12">(<expr><name pos:line="197" pos:column="13">needpass<pos:position pos:line="197" pos:column="21"/></name></expr>)<pos:position pos:line="197" pos:column="22"/></condition><then pos:line="197" pos:column="22">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="198" pos:column="11">state_attach_puts<pos:position pos:line="198" pos:column="28"/></name> <argument_list pos:line="198" pos:column="29">(<argument><expr><call><name pos:line="198" pos:column="30">_<pos:position pos:line="198" pos:column="31"/></name><argument_list pos:line="198" pos:column="31">(<argument><expr><literal type="string" pos:line="198" pos:column="32">"[-- END PGP MESSAGE --]\n"<pos:position pos:line="198" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="198" pos:column="62">s<pos:position pos:line="198" pos:column="63"/></name></expr></argument>)<pos:position pos:line="198" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="65"/></expr_stmt></block></then>
	<elseif pos:line="199" pos:column="9">else <if pos:line="199" pos:column="14">if <condition pos:line="199" pos:column="17">(<expr><name pos:line="199" pos:column="18">pgp_keyblock<pos:position pos:line="199" pos:column="30"/></name></expr>)<pos:position pos:line="199" pos:column="31"/></condition><then pos:line="199" pos:column="31">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="200" pos:column="11">state_attach_puts<pos:position pos:line="200" pos:column="28"/></name> <argument_list pos:line="200" pos:column="29">(<argument><expr><call><name pos:line="200" pos:column="30">_<pos:position pos:line="200" pos:column="31"/></name><argument_list pos:line="200" pos:column="31">(<argument><expr><literal type="string" pos:line="200" pos:column="32">"[-- END PGP PUBLIC KEY BLOCK --]\n"<pos:position pos:line="200" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="200" pos:column="71">s<pos:position pos:line="200" pos:column="72"/></name></expr></argument>)<pos:position pos:line="200" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="74"/></expr_stmt></block></then></if></elseif>
	<else pos:line="201" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="202" pos:column="11">state_attach_puts<pos:position pos:line="202" pos:column="28"/></name> <argument_list pos:line="202" pos:column="29">(<argument><expr><call><name pos:line="202" pos:column="30">_<pos:position pos:line="202" pos:column="31"/></name><argument_list pos:line="202" pos:column="31">(<argument><expr><literal type="string" pos:line="202" pos:column="32">"[-- END PGP SIGNED MESSAGE --]\n"<pos:position pos:line="202" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="202" pos:column="69">s<pos:position pos:line="202" pos:column="70"/></name></expr></argument>)<pos:position pos:line="202" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="72"/></expr_stmt></block></else></if>
      }<pos:position pos:line="203" pos:column="8"/></block></then></if>
    }<pos:position pos:line="204" pos:column="6"/></block></then>
    <else pos:line="205" pos:column="5">else
    <block pos:line="206" pos:column="5">{
      <if pos:line="207" pos:column="7">if <condition pos:line="207" pos:column="10">(<expr><name><name pos:line="207" pos:column="11">s<pos:position pos:line="207" pos:column="12"/></name><operator pos:line="207" pos:column="12">-&gt;<pos:position pos:line="207" pos:column="17"/></operator><name pos:line="207" pos:column="14">prefix<pos:position pos:line="207" pos:column="20"/></name></name></expr>)<pos:position pos:line="207" pos:column="21"/></condition><then pos:line="207" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="208" pos:column="9">state_puts<pos:position pos:line="208" pos:column="19"/></name> <argument_list pos:line="208" pos:column="20">(<argument><expr><name><name pos:line="208" pos:column="21">s<pos:position pos:line="208" pos:column="22"/></name><operator pos:line="208" pos:column="22">-&gt;<pos:position pos:line="208" pos:column="27"/></operator><name pos:line="208" pos:column="24">prefix<pos:position pos:line="208" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="32">s<pos:position pos:line="208" pos:column="33"/></name></expr></argument>)<pos:position pos:line="208" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="35"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="209" pos:column="7">state_puts<pos:position pos:line="209" pos:column="17"/></name> <argument_list pos:line="209" pos:column="18">(<argument><expr><name pos:line="209" pos:column="19">buf<pos:position pos:line="209" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="24">s<pos:position pos:line="209" pos:column="25"/></name></expr></argument>)<pos:position pos:line="209" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="210" pos:column="6"/></block></else></if>
  }<pos:position pos:line="211" pos:column="4"/></block></for>

  <expr_stmt><expr><name><name pos:line="213" pos:column="3">m<pos:position pos:line="213" pos:column="4"/></name><operator pos:line="213" pos:column="4">-&gt;<pos:position pos:line="213" pos:column="9"/></operator><name pos:line="213" pos:column="6">goodsig<pos:position pos:line="213" pos:column="13"/></name></name> <operator pos:line="213" pos:column="14">=<pos:position pos:line="213" pos:column="15"/></operator> <operator pos:line="213" pos:column="16">(<pos:position pos:line="213" pos:column="17"/></operator><name pos:line="213" pos:column="17">maybe_goodsig<pos:position pos:line="213" pos:column="30"/></name> <operator pos:line="213" pos:column="31">&amp;&amp;<pos:position pos:line="213" pos:column="41"/></operator> <name pos:line="213" pos:column="34">have_any_sigs<pos:position pos:line="213" pos:column="47"/></name><operator pos:line="213" pos:column="47">)<pos:position pos:line="213" pos:column="48"/></operator></expr>;<pos:position pos:line="213" pos:column="49"/></expr_stmt>

  <if pos:line="215" pos:column="3">if <condition pos:line="215" pos:column="6">(<expr><name pos:line="215" pos:column="7">needpass<pos:position pos:line="215" pos:column="15"/></name> <operator pos:line="215" pos:column="16">==<pos:position pos:line="215" pos:column="18"/></operator> <operator pos:line="215" pos:column="19">-<pos:position pos:line="215" pos:column="20"/></operator><literal type="number" pos:line="215" pos:column="20">1<pos:position pos:line="215" pos:column="21"/></literal></expr>)<pos:position pos:line="215" pos:column="22"/></condition><then pos:line="215" pos:column="22">
  <block pos:line="216" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="217" pos:column="5">state_attach_puts<pos:position pos:line="217" pos:column="22"/></name> <argument_list pos:line="217" pos:column="23">(<argument><expr><call><name pos:line="217" pos:column="24">_<pos:position pos:line="217" pos:column="25"/></name><argument_list pos:line="217" pos:column="25">(<argument><expr><literal type="string" pos:line="217" pos:column="26">"[-- Error: could not find beginning of PGP message! --]\n\n"<pos:position pos:line="217" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="217" pos:column="90">s<pos:position pos:line="217" pos:column="91"/></name></expr></argument>)<pos:position pos:line="217" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="93"/></expr_stmt>
    <return pos:line="218" pos:column="5">return;<pos:position pos:line="218" pos:column="12"/></return>
  }<pos:position pos:line="219" pos:column="4"/></block></then></if>
}<pos:position pos:line="220" pos:column="2"/></block></function></unit>

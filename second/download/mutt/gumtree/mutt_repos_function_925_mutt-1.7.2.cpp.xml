<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_925_mutt-1.7.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">rfc1524_expand_filename<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">nametemplate<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">oldfile<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, 
			     <parameter><decl><type><name pos:line="3" pos:column="30">char<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">newfile<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="4" pos:column="30">size_t<pos:position pos:line="4" pos:column="36"/></name></type> <name pos:line="4" pos:column="37">nflen<pos:position pos:line="4" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="43"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">i<pos:position pos:line="6" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="10">j<pos:position pos:line="6" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="13">k<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">ps<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">s<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">short<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">lmatch<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="21">rmatch<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt> 
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">left<pos:position pos:line="9" pos:column="12"/></name><index pos:line="9" pos:column="12">[<expr><name pos:line="9" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="9" pos:column="28"/></name></expr>]<pos:position pos:line="9" pos:column="29"/></index></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">right<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><name pos:line="10" pos:column="14">_POSIX_PATH_MAX<pos:position pos:line="10" pos:column="29"/></name></expr>]<pos:position pos:line="10" pos:column="30"/></index></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
  
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">newfile<pos:position pos:line="12" pos:column="10"/></name><index pos:line="12" pos:column="10">[<expr><literal type="number" pos:line="12" pos:column="11">0<pos:position pos:line="12" pos:column="12"/></literal></expr>]<pos:position pos:line="12" pos:column="13"/></index></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* first, ignore leading path components.
   */</comment>
  
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">nametemplate<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&amp;&amp;<pos:position pos:line="17" pos:column="30"/></operator> <operator pos:line="17" pos:column="23">(<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">s<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <call><name pos:line="17" pos:column="28">strrchr<pos:position pos:line="17" pos:column="35"/></name> <argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">nametemplate<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="51">'/'<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call><operator pos:line="17" pos:column="55">)<pos:position pos:line="17" pos:column="56"/></operator></expr>)<pos:position pos:line="17" pos:column="57"/></condition><then pos:line="17" pos:column="57">
    <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="5">nametemplate<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">s<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">+<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="24">1<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt></block></then></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">oldfile<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">&amp;&amp;<pos:position pos:line="20" pos:column="25"/></operator> <operator pos:line="20" pos:column="18">(<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">s<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">strrchr<pos:position pos:line="20" pos:column="30"/></name> <argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">oldfile<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="41">'/'<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call><operator pos:line="20" pos:column="45">)<pos:position pos:line="20" pos:column="46"/></operator></expr>)<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">oldfile<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">s<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">+<pos:position pos:line="21" pos:column="18"/></operator> <literal type="number" pos:line="21" pos:column="19">1<pos:position pos:line="21" pos:column="20"/></literal></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt></block></then></if>
    
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">!<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">nametemplate<pos:position pos:line="23" pos:column="20"/></name></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21">
  <block pos:line="24" pos:column="3">{
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">oldfile<pos:position pos:line="25" pos:column="16"/></name></expr>)<pos:position pos:line="25" pos:column="17"/></condition><then pos:line="25" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="7">strfcpy<pos:position pos:line="26" pos:column="14"/></name> <argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">newfile<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="25">oldfile<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">nflen<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then>
  <elseif pos:line="28" pos:column="3">else <if pos:line="28" pos:column="8">if <condition pos:line="28" pos:column="11">(<expr><operator pos:line="28" pos:column="12">!<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">oldfile<pos:position pos:line="28" pos:column="20"/></name></expr>)<pos:position pos:line="28" pos:column="21"/></condition><then pos:line="28" pos:column="21">
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">mutt_expand_fmt<pos:position pos:line="30" pos:column="20"/></name> <argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">newfile<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="31">nflen<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">nametemplate<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="52">"mutt"<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if></elseif>
  <else pos:line="32" pos:column="3">else <comment type="block" pos:line="32" pos:column="8">/* oldfile &amp;&amp; nametemplate */</comment>
  <block pos:line="33" pos:column="3">{

    <comment type="block" pos:line="35" pos:column="5">/* first, compare everything left from the "%s" 
     * (if there is one).
     */</comment>
    
    <expr_stmt><expr><name pos:line="39" pos:column="5">lmatch<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <literal type="number" pos:line="39" pos:column="14">1<pos:position pos:line="39" pos:column="15"/></literal></expr>;<pos:position pos:line="39" pos:column="16"/></expr_stmt> <expr_stmt><expr><name pos:line="39" pos:column="17">ps<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <literal type="number" pos:line="39" pos:column="22">0<pos:position pos:line="39" pos:column="23"/></literal></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
    <for pos:line="40" pos:column="5">for<control pos:line="40" pos:column="8">(<init><expr><name pos:line="40" pos:column="9">i<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></init> <condition><expr><name><name pos:line="40" pos:column="16">nametemplate<pos:position pos:line="40" pos:column="28"/></name><index pos:line="40" pos:column="28">[<expr><name pos:line="40" pos:column="29">i<pos:position pos:line="40" pos:column="30"/></name></expr>]<pos:position pos:line="40" pos:column="31"/></index></name></expr>;<pos:position pos:line="40" pos:column="32"/></condition> <incr><expr><name pos:line="40" pos:column="33">i<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">++<pos:position pos:line="40" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="37"/></control>
    <block pos:line="41" pos:column="5">{
      <if pos:line="42" pos:column="7">if<condition pos:line="42" pos:column="9">(<expr><name><name pos:line="42" pos:column="10">nametemplate<pos:position pos:line="42" pos:column="22"/></name><index pos:line="42" pos:column="22">[<expr><name pos:line="42" pos:column="23">i<pos:position pos:line="42" pos:column="24"/></name></expr>]<pos:position pos:line="42" pos:column="25"/></index></name> <operator pos:line="42" pos:column="26">==<pos:position pos:line="42" pos:column="28"/></operator> <literal type="char" pos:line="42" pos:column="29">'%'<pos:position pos:line="42" pos:column="32"/></literal> <operator pos:line="42" pos:column="33">&amp;&amp;<pos:position pos:line="42" pos:column="43"/></operator> <name><name pos:line="42" pos:column="36">nametemplate<pos:position pos:line="42" pos:column="48"/></name><index pos:line="42" pos:column="48">[<expr><name pos:line="42" pos:column="49">i<pos:position pos:line="42" pos:column="50"/></name><operator pos:line="42" pos:column="50">+<pos:position pos:line="42" pos:column="51"/></operator><literal type="number" pos:line="42" pos:column="51">1<pos:position pos:line="42" pos:column="52"/></literal></expr>]<pos:position pos:line="42" pos:column="53"/></index></name> <operator pos:line="42" pos:column="54">==<pos:position pos:line="42" pos:column="56"/></operator> <literal type="char" pos:line="42" pos:column="57">'s'<pos:position pos:line="42" pos:column="60"/></literal></expr>)<pos:position pos:line="42" pos:column="61"/></condition><then pos:line="42" pos:column="61">
      <block pos:line="43" pos:column="7">{ 
	<expr_stmt><expr><name pos:line="44" pos:column="9">ps<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <literal type="number" pos:line="44" pos:column="14">1<pos:position pos:line="44" pos:column="15"/></literal></expr>;<pos:position pos:line="44" pos:column="16"/></expr_stmt>
	<break pos:line="45" pos:column="9">break;<pos:position pos:line="45" pos:column="15"/></break>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="48" pos:column="7">/* note that the following will _not_ read beyond oldfile's end. */</comment>

      <if pos:line="50" pos:column="7">if<condition pos:line="50" pos:column="9">(<expr><name pos:line="50" pos:column="10">lmatch<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">&amp;&amp;<pos:position pos:line="50" pos:column="27"/></operator> <name><name pos:line="50" pos:column="20">nametemplate<pos:position pos:line="50" pos:column="32"/></name><index pos:line="50" pos:column="32">[<expr><name pos:line="50" pos:column="33">i<pos:position pos:line="50" pos:column="34"/></name></expr>]<pos:position pos:line="50" pos:column="35"/></index></name> <operator pos:line="50" pos:column="36">!=<pos:position pos:line="50" pos:column="38"/></operator> <name><name pos:line="50" pos:column="39">oldfile<pos:position pos:line="50" pos:column="46"/></name><index pos:line="50" pos:column="46">[<expr><name pos:line="50" pos:column="47">i<pos:position pos:line="50" pos:column="48"/></name></expr>]<pos:position pos:line="50" pos:column="49"/></index></name></expr>)<pos:position pos:line="50" pos:column="50"/></condition><then pos:line="50" pos:column="50">
	<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="9">lmatch<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <literal type="number" pos:line="51" pos:column="18">0<pos:position pos:line="51" pos:column="19"/></literal></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></for>

    <if pos:line="54" pos:column="5">if<condition pos:line="54" pos:column="7">(<expr><name pos:line="54" pos:column="8">ps<pos:position pos:line="54" pos:column="10"/></name></expr>)<pos:position pos:line="54" pos:column="11"/></condition><then pos:line="54" pos:column="11">
    <block pos:line="55" pos:column="5">{
      
      <comment type="block" pos:line="57" pos:column="7">/* If we had a "%s", check the rest. */</comment>
      
      <comment type="block" pos:line="59" pos:column="7">/* now, for the right part: compare everything right from 
       * the "%s" to the final part of oldfile.
       * 
       * The logic here is as follows:
       * 
       * - We start reading from the end.
       * - There must be a match _right_ from the "%s",
       *   thus the i + 2.  
       * - If there was a left hand match, this stuff
       *   must not be counted again.  That's done by the
       *   condition (j &gt;= (lmatch ? i : 0)).
       */</comment>
      
      <expr_stmt><expr><name pos:line="72" pos:column="7">rmatch<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">=<pos:position pos:line="72" pos:column="15"/></operator> <literal type="number" pos:line="72" pos:column="16">1<pos:position pos:line="72" pos:column="17"/></literal></expr>;<pos:position pos:line="72" pos:column="18"/></expr_stmt>

      <for pos:line="74" pos:column="7">for<control pos:line="74" pos:column="10">(<init><expr><name pos:line="74" pos:column="11">j<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <call><name pos:line="74" pos:column="15">mutt_strlen<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><name pos:line="74" pos:column="27">oldfile<pos:position pos:line="74" pos:column="34"/></name></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call> <operator pos:line="74" pos:column="36">-<pos:position pos:line="74" pos:column="37"/></operator> <literal type="number" pos:line="74" pos:column="38">1<pos:position pos:line="74" pos:column="39"/></literal></expr><operator pos:line="74" pos:column="39">,<pos:position pos:line="74" pos:column="40"/></operator> <expr><name pos:line="74" pos:column="41">k<pos:position pos:line="74" pos:column="42"/></name> <operator pos:line="74" pos:column="43">=<pos:position pos:line="74" pos:column="44"/></operator> <call><name pos:line="74" pos:column="45">mutt_strlen<pos:position pos:line="74" pos:column="56"/></name><argument_list pos:line="74" pos:column="56">(<argument><expr><name pos:line="74" pos:column="57">nametemplate<pos:position pos:line="74" pos:column="69"/></name></expr></argument>)<pos:position pos:line="74" pos:column="70"/></argument_list></call> <operator pos:line="74" pos:column="71">-<pos:position pos:line="74" pos:column="72"/></operator> <literal type="number" pos:line="74" pos:column="73">1<pos:position pos:line="74" pos:column="74"/></literal></expr> ;<pos:position pos:line="74" pos:column="76"/></init>
	  <condition><expr><name pos:line="75" pos:column="11">j<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">&gt;=<pos:position pos:line="75" pos:column="18"/></operator> <operator pos:line="75" pos:column="16">(<pos:position pos:line="75" pos:column="17"/></operator><ternary><condition><expr><name pos:line="75" pos:column="17">lmatch<pos:position pos:line="75" pos:column="23"/></name></expr> ?<pos:position pos:line="75" pos:column="25"/></condition><then pos:line="75" pos:column="25"> <expr><name pos:line="75" pos:column="26">i<pos:position pos:line="75" pos:column="27"/></name></expr> <pos:position pos:line="75" pos:column="28"/></then><else pos:line="75" pos:column="28">: <expr><literal type="number" pos:line="75" pos:column="30">0<pos:position pos:line="75" pos:column="31"/></literal></expr></else></ternary><operator pos:line="75" pos:column="31">)<pos:position pos:line="75" pos:column="32"/></operator> <operator pos:line="75" pos:column="33">&amp;&amp;<pos:position pos:line="75" pos:column="43"/></operator> <name pos:line="75" pos:column="36">k<pos:position pos:line="75" pos:column="37"/></name> <operator pos:line="75" pos:column="38">&gt;=<pos:position pos:line="75" pos:column="43"/></operator> <name pos:line="75" pos:column="41">i<pos:position pos:line="75" pos:column="42"/></name> <operator pos:line="75" pos:column="43">+<pos:position pos:line="75" pos:column="44"/></operator> <literal type="number" pos:line="75" pos:column="45">2<pos:position pos:line="75" pos:column="46"/></literal></expr>;<pos:position pos:line="75" pos:column="47"/></condition>
	  <incr><expr><name pos:line="76" pos:column="11">j<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">--<pos:position pos:line="76" pos:column="14"/></operator></expr><operator pos:line="76" pos:column="14">,<pos:position pos:line="76" pos:column="15"/></operator> <expr><name pos:line="76" pos:column="16">k<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">--<pos:position pos:line="76" pos:column="19"/></operator></expr></incr>)<pos:position pos:line="76" pos:column="20"/></control>
      <block pos:line="77" pos:column="7">{
	<if pos:line="78" pos:column="9">if<condition pos:line="78" pos:column="11">(<expr><name><name pos:line="78" pos:column="12">nametemplate<pos:position pos:line="78" pos:column="24"/></name><index pos:line="78" pos:column="24">[<expr><name pos:line="78" pos:column="25">k<pos:position pos:line="78" pos:column="26"/></name></expr>]<pos:position pos:line="78" pos:column="27"/></index></name> <operator pos:line="78" pos:column="28">!=<pos:position pos:line="78" pos:column="30"/></operator> <name><name pos:line="78" pos:column="31">oldfile<pos:position pos:line="78" pos:column="38"/></name><index pos:line="78" pos:column="38">[<expr><name pos:line="78" pos:column="39">j<pos:position pos:line="78" pos:column="40"/></name></expr>]<pos:position pos:line="78" pos:column="41"/></index></name></expr>)<pos:position pos:line="78" pos:column="42"/></condition><then pos:line="78" pos:column="42">
	<block pos:line="79" pos:column="9">{
	  <expr_stmt><expr><name pos:line="80" pos:column="11">rmatch<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <literal type="number" pos:line="80" pos:column="20">0<pos:position pos:line="80" pos:column="21"/></literal></expr>;<pos:position pos:line="80" pos:column="22"/></expr_stmt>
	  <break pos:line="81" pos:column="11">break;<pos:position pos:line="81" pos:column="17"/></break>
	}<pos:position pos:line="82" pos:column="10"/></block></then></if>
      }<pos:position pos:line="83" pos:column="8"/></block></for>
      
      <comment type="block" pos:line="85" pos:column="7">/* Now, check if we had a full match. */</comment>
      
      <if pos:line="87" pos:column="7">if<condition pos:line="87" pos:column="9">(<expr><name pos:line="87" pos:column="10">k<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">&gt;=<pos:position pos:line="87" pos:column="17"/></operator> <name pos:line="87" pos:column="15">i<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">+<pos:position pos:line="87" pos:column="18"/></operator> <literal type="number" pos:line="87" pos:column="19">2<pos:position pos:line="87" pos:column="20"/></literal></expr>)<pos:position pos:line="87" pos:column="21"/></condition><then pos:line="87" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="9">rmatch<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <literal type="number" pos:line="88" pos:column="18">0<pos:position pos:line="88" pos:column="19"/></literal></expr>;<pos:position pos:line="88" pos:column="20"/></expr_stmt></block></then></if>
      
      <if pos:line="90" pos:column="7">if<condition pos:line="90" pos:column="9">(<expr><name pos:line="90" pos:column="10">lmatch<pos:position pos:line="90" pos:column="16"/></name></expr>)<pos:position pos:line="90" pos:column="17"/></condition><then pos:line="90" pos:column="17"> <block type="pseudo"><expr_stmt><expr><operator pos:line="90" pos:column="18">*<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="19">left<pos:position pos:line="90" pos:column="23"/></name> <operator pos:line="90" pos:column="24">=<pos:position pos:line="90" pos:column="25"/></operator> <literal type="number" pos:line="90" pos:column="26">0<pos:position pos:line="90" pos:column="27"/></literal></expr>;<pos:position pos:line="90" pos:column="28"/></expr_stmt></block></then>
      <else pos:line="91" pos:column="7">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="12">strnfcpy<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><name pos:line="91" pos:column="21">left<pos:position pos:line="91" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="27">nametemplate<pos:position pos:line="91" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="91" pos:column="41">sizeof<argument_list pos:line="91" pos:column="47">(<argument><expr><name pos:line="91" pos:column="48">left<pos:position pos:line="91" pos:column="52"/></name></expr></argument>)<pos:position pos:line="91" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="91" pos:column="55">i<pos:position pos:line="91" pos:column="56"/></name></expr></argument>)<pos:position pos:line="91" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="58"/></expr_stmt></block></else></if>
      
      <if pos:line="93" pos:column="7">if<condition pos:line="93" pos:column="9">(<expr><name pos:line="93" pos:column="10">rmatch<pos:position pos:line="93" pos:column="16"/></name></expr>)<pos:position pos:line="93" pos:column="17"/></condition><then pos:line="93" pos:column="17"> <block type="pseudo"><expr_stmt><expr><operator pos:line="93" pos:column="18">*<pos:position pos:line="93" pos:column="19"/></operator><name pos:line="93" pos:column="19">right<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">=<pos:position pos:line="93" pos:column="26"/></operator> <literal type="number" pos:line="93" pos:column="27">0<pos:position pos:line="93" pos:column="28"/></literal></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt></block></then>
      <else pos:line="94" pos:column="7">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="12">strfcpy<pos:position pos:line="94" pos:column="19"/></name><argument_list pos:line="94" pos:column="19">(<argument><expr><name pos:line="94" pos:column="20">right<pos:position pos:line="94" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="27">nametemplate<pos:position pos:line="94" pos:column="39"/></name> <operator pos:line="94" pos:column="40">+<pos:position pos:line="94" pos:column="41"/></operator> <name pos:line="94" pos:column="42">i<pos:position pos:line="94" pos:column="43"/></name> <operator pos:line="94" pos:column="44">+<pos:position pos:line="94" pos:column="45"/></operator> <literal type="number" pos:line="94" pos:column="46">2<pos:position pos:line="94" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="94" pos:column="49">sizeof<argument_list pos:line="94" pos:column="55">(<argument><expr><name pos:line="94" pos:column="56">right<pos:position pos:line="94" pos:column="61"/></name></expr></argument>)<pos:position pos:line="94" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="94" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="64"/></expr_stmt></block></else></if>
      
      <expr_stmt><expr><call><name pos:line="96" pos:column="7">snprintf<pos:position pos:line="96" pos:column="15"/></name><argument_list pos:line="96" pos:column="15">(<argument><expr><name pos:line="96" pos:column="16">newfile<pos:position pos:line="96" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="25">nflen<pos:position pos:line="96" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="32">"%s%s%s"<pos:position pos:line="96" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="42">left<pos:position pos:line="96" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="48">oldfile<pos:position pos:line="96" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="57">right<pos:position pos:line="96" pos:column="62"/></name></expr></argument>)<pos:position pos:line="96" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></then>
    <else pos:line="98" pos:column="5">else
    <block pos:line="99" pos:column="5">{
      <comment type="block" pos:line="100" pos:column="7">/* no "%s" in the name template. */</comment>
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">strfcpy<pos:position pos:line="101" pos:column="14"/></name><argument_list pos:line="101" pos:column="14">(<argument><expr><name pos:line="101" pos:column="15">newfile<pos:position pos:line="101" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="24">nametemplate<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">nflen<pos:position pos:line="101" pos:column="43"/></name></expr></argument>)<pos:position pos:line="101" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></else></if>
  }<pos:position pos:line="103" pos:column="4"/></block></else></if>
  
  <expr_stmt><expr><call><name pos:line="105" pos:column="3">mutt_adv_mktemp<pos:position pos:line="105" pos:column="18"/></name><argument_list pos:line="105" pos:column="18">(<argument><expr><name pos:line="105" pos:column="19">newfile<pos:position pos:line="105" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="28">nflen<pos:position pos:line="105" pos:column="33"/></name></expr></argument>)<pos:position pos:line="105" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="35"/></expr_stmt>

  <if pos:line="107" pos:column="3">if<condition pos:line="107" pos:column="5">(<expr><name pos:line="107" pos:column="6">rmatch<pos:position pos:line="107" pos:column="12"/></name> <operator pos:line="107" pos:column="13">&amp;&amp;<pos:position pos:line="107" pos:column="23"/></operator> <name pos:line="107" pos:column="16">lmatch<pos:position pos:line="107" pos:column="22"/></name></expr>)<pos:position pos:line="107" pos:column="23"/></condition><then pos:line="107" pos:column="23">
    <block type="pseudo"><return pos:line="108" pos:column="5">return <expr><literal type="number" pos:line="108" pos:column="12">0<pos:position pos:line="108" pos:column="13"/></literal></expr>;<pos:position pos:line="108" pos:column="14"/></return></block></then>
  <else pos:line="109" pos:column="3">else 
    <block type="pseudo"><return pos:line="110" pos:column="5">return <expr><literal type="number" pos:line="110" pos:column="12">1<pos:position pos:line="110" pos:column="13"/></literal></expr>;<pos:position pos:line="110" pos:column="14"/></return></block></else></if>
  
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

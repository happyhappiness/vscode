<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2023_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">IMAP_COMMAND<pos:position pos:line="1" pos:column="20"/></name><modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type> <name pos:line="1" pos:column="22">cmd_new<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">IMAP_DATA<pos:position pos:line="1" pos:column="40"/></name><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type> <name pos:line="1" pos:column="42">idata<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_COMMAND<pos:position pos:line="3" pos:column="15"/></name><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type> <name pos:line="3" pos:column="17">cmd<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">cmd_queue_full<pos:position pos:line="5" pos:column="21"/></name> <argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">idata<pos:position pos:line="5" pos:column="28"/></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">dprint<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><literal type="number" pos:line="7" pos:column="13">3<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">debugfile<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">,<pos:position pos:line="7" pos:column="27"/></operator> <literal type="string" pos:line="7" pos:column="28">"cmd_new: IMAP command queue full\n"<pos:position pos:line="7" pos:column="64"/></literal><operator pos:line="7" pos:column="64">)<pos:position pos:line="7" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">cmd<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <name><name pos:line="11" pos:column="9">idata<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">cmds<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">+<pos:position pos:line="11" pos:column="22"/></operator> <name><name pos:line="11" pos:column="23">idata<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">nextcmd<pos:position pos:line="11" pos:column="37"/></name></name></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">idata<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">-&gt;<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="10">nextcmd<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name><name pos:line="12" pos:column="21">idata<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">nextcmd<pos:position pos:line="12" pos:column="35"/></name></name> <operator pos:line="12" pos:column="36">+<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="38">1<pos:position pos:line="12" pos:column="39"/></literal><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator> <operator pos:line="12" pos:column="41">%<pos:position pos:line="12" pos:column="42"/></operator> <name><name pos:line="12" pos:column="43">idata<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">cmdslots<pos:position pos:line="12" pos:column="58"/></name></name></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">snprintf<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><name><name pos:line="14" pos:column="13">cmd<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">seq<pos:position pos:line="14" pos:column="21"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="23">sizeof <argument_list pos:line="14" pos:column="30">(<argument><expr><name><name pos:line="14" pos:column="31">cmd<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">seq<pos:position pos:line="14" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="42">"a%04u"<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="51">idata<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">-&gt;<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="58">seqno<pos:position pos:line="14" pos:column="63"/></name></name><operator pos:line="14" pos:column="63">++<pos:position pos:line="14" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">idata<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">seqno<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">&gt;<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="22">9999<pos:position pos:line="15" pos:column="26"/></literal></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="5">idata<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">seqno<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="18" pos:column="3">cmd<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">state<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">IMAP_CMD_NEW<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>

  <return pos:line="20" pos:column="3">return <expr><name pos:line="20" pos:column="10">cmd<pos:position pos:line="20" pos:column="13"/></name></expr>;<pos:position pos:line="20" pos:column="14"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

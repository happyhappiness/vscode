<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_845_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_alloc_color<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">fg<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">bg<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">COLOR_LIST<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">p<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">ColorList<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><call><name pos:line="6" pos:column="5">defined<pos:position pos:line="6" pos:column="12"/></name> <argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">USE_SLANG_CURSES<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">fgc<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><name pos:line="7" pos:column="12">SHORT_STRING<pos:position pos:line="7" pos:column="24"/></name></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="27">bgc<pos:position pos:line="7" pos:column="30"/></name><index pos:line="7" pos:column="30">[<expr><name pos:line="7" pos:column="31">SHORT_STRING<pos:position pos:line="7" pos:column="43"/></name></expr>]<pos:position pos:line="7" pos:column="44"/></index></name></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="10" pos:column="3">/* check to see if this color is already allocated to save space */</comment>
  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><name pos:line="11" pos:column="10">p<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition>
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">p<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">fg<pos:position pos:line="13" pos:column="14"/></name></name> <operator pos:line="13" pos:column="15">==<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">fg<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&amp;&amp;<pos:position pos:line="13" pos:column="31"/></operator> <name><name pos:line="13" pos:column="24">p<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">bg<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">==<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">bg<pos:position pos:line="13" pos:column="35"/></name></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name><name pos:line="15" pos:column="8">p<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">count<pos:position pos:line="15" pos:column="16"/></name></name><operator pos:line="15" pos:column="16">)<pos:position pos:line="15" pos:column="17"/></operator><operator pos:line="15" pos:column="17">++<pos:position pos:line="15" pos:column="19"/></operator></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><call><name pos:line="16" pos:column="15">COLOR_PAIR<pos:position pos:line="16" pos:column="25"/></name> <argument_list pos:line="16" pos:column="26">(<argument><expr><name><name pos:line="16" pos:column="27">p<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">index<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call><operator pos:line="16" pos:column="36">)<pos:position pos:line="16" pos:column="37"/></operator></expr>;<pos:position pos:line="16" pos:column="38"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="18" pos:column="5">p<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <name><name pos:line="18" pos:column="9">p<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">next<pos:position pos:line="18" pos:column="16"/></name></name></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></while>

  <comment type="block" pos:line="21" pos:column="3">/* check to see if there are colors left */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">++<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">UserColors<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">&gt;<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="22">COLOR_PAIRS<pos:position pos:line="22" pos:column="33"/></name></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block type="pseudo"><return pos:line="22" pos:column="35">return <expr><operator pos:line="22" pos:column="42">(<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="43">A_NORMAL<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">)<pos:position pos:line="22" pos:column="52"/></operator></expr>;<pos:position pos:line="22" pos:column="53"/></return></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* find the smallest available index (object) */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">i<pos:position pos:line="25" pos:column="4"/></name> <operator pos:line="25" pos:column="5">=<pos:position pos:line="25" pos:column="6"/></operator> <literal type="number" pos:line="25" pos:column="7">1<pos:position pos:line="25" pos:column="8"/></literal></expr>;<pos:position pos:line="25" pos:column="9"/></expr_stmt>
  <macro><name pos:line="26" pos:column="3">FOREVER<pos:position pos:line="26" pos:column="10"/></name></macro>
  <block pos:line="27" pos:column="3">{
    <expr_stmt><expr><name pos:line="28" pos:column="5">p<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <name pos:line="28" pos:column="9">ColorList<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><name pos:line="29" pos:column="12">p<pos:position pos:line="29" pos:column="13"/></name></expr>)<pos:position pos:line="29" pos:column="14"/></condition>
    <block pos:line="30" pos:column="5">{
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name><name pos:line="31" pos:column="11">p<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">index<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">==<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">i<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25"> <block type="pseudo"><break pos:line="31" pos:column="26">break;<pos:position pos:line="31" pos:column="32"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="32" pos:column="7">p<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <name><name pos:line="32" pos:column="11">p<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">next<pos:position pos:line="32" pos:column="18"/></name></name></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></while>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">p<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">==<pos:position pos:line="34" pos:column="13"/></operator> <name pos:line="34" pos:column="14">NULL<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19"> <block type="pseudo"><break pos:line="34" pos:column="20">break;<pos:position pos:line="34" pos:column="26"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="35" pos:column="5">i<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">++<pos:position pos:line="35" pos:column="8"/></operator></expr>;<pos:position pos:line="35" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block>

  <expr_stmt><expr><name pos:line="38" pos:column="3">p<pos:position pos:line="38" pos:column="4"/></name> <operator pos:line="38" pos:column="5">=<pos:position pos:line="38" pos:column="6"/></operator> <operator pos:line="38" pos:column="7">(<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">COLOR_LIST<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">*<pos:position pos:line="38" pos:column="20"/></operator><operator pos:line="38" pos:column="20">)<pos:position pos:line="38" pos:column="21"/></operator> <call><name pos:line="38" pos:column="22">safe_malloc<pos:position pos:line="38" pos:column="33"/></name> <argument_list pos:line="38" pos:column="34">(<argument><expr><sizeof pos:line="38" pos:column="35">sizeof <argument_list pos:line="38" pos:column="42">(<argument><expr><name pos:line="38" pos:column="43">COLOR_LIST<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="39" pos:column="3">p<pos:position pos:line="39" pos:column="4"/></name><operator pos:line="39" pos:column="4">-&gt;<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="6">next<pos:position pos:line="39" pos:column="10"/></name></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <name pos:line="39" pos:column="13">ColorList<pos:position pos:line="39" pos:column="22"/></name></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="40" pos:column="3">ColorList<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <name pos:line="40" pos:column="15">p<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="42" pos:column="3">p<pos:position pos:line="42" pos:column="4"/></name><operator pos:line="42" pos:column="4">-&gt;<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="6">index<pos:position pos:line="42" pos:column="11"/></name></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <name pos:line="42" pos:column="14">i<pos:position pos:line="42" pos:column="15"/></name></expr>;<pos:position pos:line="42" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="43" pos:column="3">p<pos:position pos:line="43" pos:column="4"/></name><operator pos:line="43" pos:column="4">-&gt;<pos:position pos:line="43" pos:column="9"/></operator><name pos:line="43" pos:column="6">count<pos:position pos:line="43" pos:column="11"/></name></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <literal type="number" pos:line="43" pos:column="14">1<pos:position pos:line="43" pos:column="15"/></literal></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="44" pos:column="3">p<pos:position pos:line="44" pos:column="4"/></name><operator pos:line="44" pos:column="4">-&gt;<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="6">bg<pos:position pos:line="44" pos:column="8"/></name></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <name pos:line="44" pos:column="11">bg<pos:position pos:line="44" pos:column="13"/></name></expr>;<pos:position pos:line="44" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="45" pos:column="3">p<pos:position pos:line="45" pos:column="4"/></name><operator pos:line="45" pos:column="4">-&gt;<pos:position pos:line="45" pos:column="9"/></operator><name pos:line="45" pos:column="6">fg<pos:position pos:line="45" pos:column="8"/></name></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <name pos:line="45" pos:column="11">fg<pos:position pos:line="45" pos:column="13"/></name></expr>;<pos:position pos:line="45" pos:column="14"/></expr_stmt>

<cpp:if pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">if<pos:position pos:line="47" pos:column="4"/></cpp:directive> <expr><call><name pos:line="47" pos:column="5">defined<pos:position pos:line="47" pos:column="12"/></name> <argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">USE_SLANG_CURSES<pos:position pos:line="47" pos:column="30"/></name></expr></argument>)<pos:position pos:line="47" pos:column="31"/></argument_list></call></expr></cpp:if>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">fg<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">==<pos:position pos:line="48" pos:column="12"/></operator> <name pos:line="48" pos:column="13">COLOR_DEFAULT<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">||<pos:position pos:line="48" pos:column="29"/></operator> <name pos:line="48" pos:column="30">bg<pos:position pos:line="48" pos:column="32"/></name> <operator pos:line="48" pos:column="33">==<pos:position pos:line="48" pos:column="35"/></operator> <name pos:line="48" pos:column="36">COLOR_DEFAULT<pos:position pos:line="48" pos:column="49"/></name></expr>)<pos:position pos:line="48" pos:column="50"/></condition><then pos:line="48" pos:column="50">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="5">SLtt_set_color<pos:position pos:line="49" pos:column="19"/></name> <argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">i<pos:position pos:line="49" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="24">NULL<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="30">get_color_name<pos:position pos:line="49" pos:column="44"/></name> <argument_list pos:line="49" pos:column="45">(<argument><expr><name pos:line="49" pos:column="46">fgc<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="51">sizeof <argument_list pos:line="49" pos:column="58">(<argument><expr><name pos:line="49" pos:column="59">fgc<pos:position pos:line="49" pos:column="62"/></name></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="49" pos:column="65">fg<pos:position pos:line="49" pos:column="67"/></name></expr></argument>)<pos:position pos:line="49" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="70">get_color_name<pos:position pos:line="49" pos:column="84"/></name> <argument_list pos:line="49" pos:column="85">(<argument><expr><name pos:line="49" pos:column="86">bgc<pos:position pos:line="49" pos:column="89"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="91">sizeof <argument_list pos:line="49" pos:column="98">(<argument><expr><name pos:line="49" pos:column="99">bgc<pos:position pos:line="49" pos:column="102"/></name></expr></argument>)<pos:position pos:line="49" pos:column="103"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="49" pos:column="105">bg<pos:position pos:line="49" pos:column="107"/></name></expr></argument>)<pos:position pos:line="49" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="110"/></expr_stmt></block></then>
  <elseif pos:line="50" pos:column="3">else
<cpp:elif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">elif<pos:position pos:line="51" pos:column="6"/></cpp:directive> <expr><call><name pos:line="51" pos:column="7">defined<pos:position pos:line="51" pos:column="14"/></name> <argument_list pos:line="51" pos:column="15">(<argument><expr><name pos:line="51" pos:column="16">HAVE_USE_DEFAULT_COLORS<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr></cpp:elif>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">fg<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">==<pos:position pos:line="52" pos:column="12"/></operator> <name pos:line="52" pos:column="13">COLOR_DEFAULT<pos:position pos:line="52" pos:column="26"/></name></expr>)<pos:position pos:line="52" pos:column="27"/></condition><then pos:line="52" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="5">fg<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <operator pos:line="53" pos:column="10">-<pos:position pos:line="53" pos:column="11"/></operator><literal type="number" pos:line="53" pos:column="11">1<pos:position pos:line="53" pos:column="12"/></literal></expr>;<pos:position pos:line="53" pos:column="13"/></expr_stmt></block></then></if></elseif></if>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">bg<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">==<pos:position pos:line="54" pos:column="12"/></operator> <name pos:line="54" pos:column="13">COLOR_DEFAULT<pos:position pos:line="54" pos:column="26"/></name></expr>)<pos:position pos:line="54" pos:column="27"/></condition><then pos:line="54" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="5">bg<pos:position pos:line="55" pos:column="7"/></name> <operator pos:line="55" pos:column="8">=<pos:position pos:line="55" pos:column="9"/></operator> <operator pos:line="55" pos:column="10">-<pos:position pos:line="55" pos:column="11"/></operator><literal type="number" pos:line="55" pos:column="11">1<pos:position pos:line="55" pos:column="12"/></literal></expr>;<pos:position pos:line="55" pos:column="13"/></expr_stmt></block></then></if>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">init_pair<pos:position pos:line="58" pos:column="12"/></name><argument_list pos:line="58" pos:column="12">(<argument><expr><name pos:line="58" pos:column="13">i<pos:position pos:line="58" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="16">fg<pos:position pos:line="58" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="20">bg<pos:position pos:line="58" pos:column="22"/></name></expr></argument>)<pos:position pos:line="58" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">dprint<pos:position pos:line="60" pos:column="9"/></name> <argument_list pos:line="60" pos:column="10">(<argument><expr><literal type="number" pos:line="60" pos:column="11">3<pos:position pos:line="60" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="60" pos:column="14">(<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="15">debugfile<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">,<pos:position pos:line="60" pos:column="25"/></operator><literal type="string" pos:line="60" pos:column="25">"mutt_alloc_color(): Color pairs used so far: %d\n"<pos:position pos:line="60" pos:column="76"/></literal><operator pos:line="60" pos:column="76">,<pos:position pos:line="60" pos:column="77"/></operator>
	      <name pos:line="61" pos:column="15">UserColors<pos:position pos:line="61" pos:column="25"/></name><operator pos:line="61" pos:column="25">)<pos:position pos:line="61" pos:column="26"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="28"/></expr_stmt>

  <return pos:line="63" pos:column="3">return <expr><operator pos:line="63" pos:column="10">(<pos:position pos:line="63" pos:column="11"/></operator><call><name pos:line="63" pos:column="11">COLOR_PAIR<pos:position pos:line="63" pos:column="21"/></name> <argument_list pos:line="63" pos:column="22">(<argument><expr><name><name pos:line="63" pos:column="23">p<pos:position pos:line="63" pos:column="24"/></name><operator pos:line="63" pos:column="24">-&gt;<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="26">index<pos:position pos:line="63" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="32"/></argument_list></call><operator pos:line="63" pos:column="32">)<pos:position pos:line="63" pos:column="33"/></operator></expr>;<pos:position pos:line="63" pos:column="34"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

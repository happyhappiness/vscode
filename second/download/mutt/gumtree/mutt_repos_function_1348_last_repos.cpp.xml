<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1348_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">prepend_curdir<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">dst<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">size_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">dstlen<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">l<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">dst<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">||<pos:position pos:line="5" pos:column="14"/></operator> <operator pos:line="5" pos:column="15">!<pos:position pos:line="5" pos:column="16"/></operator><operator pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">dst<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">||<pos:position pos:line="5" pos:column="23"/></operator> <operator pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">dst<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">==<pos:position pos:line="5" pos:column="31"/></operator> <literal type="char" pos:line="5" pos:column="32">'/'<pos:position pos:line="5" pos:column="35"/></literal> <operator pos:line="5" pos:column="36">||<pos:position pos:line="5" pos:column="38"/></operator> <name pos:line="5" pos:column="39">dstlen<pos:position pos:line="5" pos:column="45"/></name> <operator pos:line="5" pos:column="46">&lt;<pos:position pos:line="5" pos:column="50"/></operator> <literal type="number" pos:line="5" pos:column="48">3<pos:position pos:line="5" pos:column="49"/></literal> <operator pos:line="5" pos:column="50">||<pos:position pos:line="5" pos:column="52"/></operator>
      <comment type="block" pos:line="6" pos:column="7">/* XXX bad modularization, these are special to mutt_expand_path() */</comment>
      <operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><call><name pos:line="7" pos:column="8">strchr<pos:position pos:line="7" pos:column="14"/></name> <argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"~=+@&lt;&gt;!-^"<pos:position pos:line="7" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">dst<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
    <block type="pseudo"><return pos:line="8" pos:column="5">return;<pos:position pos:line="8" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">dstlen<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">-=<pos:position pos:line="10" pos:column="12"/></operator> <literal type="number" pos:line="10" pos:column="13">3<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">l<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <call><name pos:line="11" pos:column="7">strlen<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">dst<pos:position pos:line="11" pos:column="18"/></name></expr></argument>)<pos:position pos:line="11" pos:column="19"/></argument_list></call> <operator pos:line="11" pos:column="20">+<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="22">2<pos:position pos:line="11" pos:column="23"/></literal></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">l<pos:position pos:line="12" pos:column="4"/></name> <operator pos:line="12" pos:column="5">=<pos:position pos:line="12" pos:column="6"/></operator> <operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><ternary><condition><expr><name pos:line="12" pos:column="8">l<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">&gt;<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="12">dstlen<pos:position pos:line="12" pos:column="18"/></name></expr> ?<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <expr><name pos:line="12" pos:column="21">dstlen<pos:position pos:line="12" pos:column="27"/></name></expr> <pos:position pos:line="12" pos:column="28"/></then><else pos:line="12" pos:column="28">: <expr><name pos:line="12" pos:column="30">l<pos:position pos:line="12" pos:column="31"/></name></expr></else></ternary><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">memmove<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">dst<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">+<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">2<pos:position pos:line="13" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="21">dst<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">l<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">dst<pos:position pos:line="14" pos:column="6"/></name><index pos:line="14" pos:column="6">[<expr><literal type="number" pos:line="14" pos:column="7">0<pos:position pos:line="14" pos:column="8"/></literal></expr>]<pos:position pos:line="14" pos:column="9"/></index></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <literal type="char" pos:line="14" pos:column="12">'.'<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">dst<pos:position pos:line="15" pos:column="6"/></name><index pos:line="15" pos:column="6">[<expr><literal type="number" pos:line="15" pos:column="7">1<pos:position pos:line="15" pos:column="8"/></literal></expr>]<pos:position pos:line="15" pos:column="9"/></index></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <literal type="char" pos:line="15" pos:column="12">'/'<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">dst<pos:position pos:line="16" pos:column="6"/></name><index pos:line="16" pos:column="6">[<expr><name pos:line="16" pos:column="7">l<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">+<pos:position pos:line="16" pos:column="10"/></operator> <literal type="number" pos:line="16" pos:column="11">2<pos:position pos:line="16" pos:column="12"/></literal></expr>]<pos:position pos:line="16" pos:column="13"/></index></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

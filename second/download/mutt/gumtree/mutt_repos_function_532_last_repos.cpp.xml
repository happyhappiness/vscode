<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_532_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mx_unlink_empty<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">path<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">USE_DOTLOCK<pos:position pos:line="4" pos:column="20"/></name></cpp:ifndef>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">stat<pos:position pos:line="5" pos:column="14"/></name></name></type> <name pos:line="5" pos:column="15">sb<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">fd<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <call><name pos:line="8" pos:column="13">open<pos:position pos:line="8" pos:column="17"/></name> <argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">path<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">O_RDWR<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator> <operator pos:line="8" pos:column="34">==<pos:position pos:line="8" pos:column="36"/></operator> <operator pos:line="8" pos:column="37">-<pos:position pos:line="8" pos:column="38"/></operator><literal type="number" pos:line="8" pos:column="38">1<pos:position pos:line="8" pos:column="39"/></literal></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40">
    <block type="pseudo"><return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">mx_lock_file<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">path<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">fd<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="34">0<pos:position pos:line="11" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="37">1<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call> <operator pos:line="11" pos:column="40">==<pos:position pos:line="11" pos:column="42"/></operator> <operator pos:line="11" pos:column="43">-<pos:position pos:line="11" pos:column="44"/></operator><literal type="number" pos:line="11" pos:column="44">1<pos:position pos:line="11" pos:column="45"/></literal></expr>)<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">close<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">fd<pos:position pos:line="13" pos:column="14"/></name></expr></argument>)<pos:position pos:line="13" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
    <return pos:line="14" pos:column="5">return;<pos:position pos:line="14" pos:column="12"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">USE_DOTLOCK<pos:position pos:line="17" pos:column="19"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">invoke_dotlock<pos:position pos:line="18" pos:column="17"/></name> <argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">path<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="25">fd<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="29">DL_FL_UNLINK<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="43">1<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
<cpp:else pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">else<pos:position pos:line="19" pos:column="6"/></cpp:directive></cpp:else>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><call><name pos:line="20" pos:column="7">fstat<pos:position pos:line="20" pos:column="12"/></name> <argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">fd<pos:position pos:line="20" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="18">&amp;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="19">sb<pos:position pos:line="20" pos:column="21"/></name></expr></argument>)<pos:position pos:line="20" pos:column="22"/></argument_list></call> <operator pos:line="20" pos:column="23">==<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal> <operator pos:line="20" pos:column="28">&amp;&amp;<pos:position pos:line="20" pos:column="38"/></operator> <name><name pos:line="20" pos:column="31">sb<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">st_size<pos:position pos:line="20" pos:column="41"/></name></name> <operator pos:line="20" pos:column="42">==<pos:position pos:line="20" pos:column="44"/></operator> <literal type="number" pos:line="20" pos:column="45">0<pos:position pos:line="20" pos:column="46"/></literal></expr>)<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">unlink<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">path<pos:position pos:line="21" pos:column="17"/></name></expr></argument>)<pos:position pos:line="21" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">mx_unlock_file<pos:position pos:line="24" pos:column="17"/></name> <argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">path<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="25">fd<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="29">0<pos:position pos:line="24" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">close<pos:position pos:line="25" pos:column="8"/></name> <argument_list pos:line="25" pos:column="9">(<argument><expr><name pos:line="25" pos:column="10">fd<pos:position pos:line="25" pos:column="12"/></name></expr></argument>)<pos:position pos:line="25" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="14"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

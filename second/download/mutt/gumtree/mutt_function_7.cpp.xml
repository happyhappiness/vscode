<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ci_bounce_message<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">HEADER<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">h<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">redraw<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">prompt<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">SHORT_STRING<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">HUGE_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name> <init pos:line="4" pos:column="25">= <expr><block pos:line="4" pos:column="27">{ <expr><literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr> }<pos:position pos:line="4" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">ADDRESS<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">adr<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">rc<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>

  <if pos:line="8" pos:column="3">if<condition pos:line="8" pos:column="5">(<expr><name pos:line="8" pos:column="6">h<pos:position pos:line="8" pos:column="7"/></name></expr>)<pos:position pos:line="8" pos:column="8"/></condition><then pos:line="8" pos:column="8">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">strfcpy<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">prompt<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="21">_<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><literal type="string" pos:line="9" pos:column="23">"Bounce message to: "<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="47">sizeof<argument_list pos:line="9" pos:column="53">(<argument><expr><name pos:line="9" pos:column="54">prompt<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt></block></then>
  <else pos:line="10" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">strfcpy<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">prompt<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="21">_<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">"Bounce tagged messages to: "<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="55">sizeof<argument_list pos:line="11" pos:column="61">(<argument><expr><name pos:line="11" pos:column="62">prompt<pos:position pos:line="11" pos:column="68"/></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt></block></else></if>
  
  <expr_stmt><expr><name pos:line="13" pos:column="3">rc<pos:position pos:line="13" pos:column="5"/></name> <operator pos:line="13" pos:column="6">=<pos:position pos:line="13" pos:column="7"/></operator> <call><name pos:line="13" pos:column="8">mutt_get_field<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">prompt<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">buf<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="37">sizeof <argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">buf<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">M_ALIAS<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">option<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">OPTNEEDREDRAW<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">unset_option<pos:position pos:line="17" pos:column="17"/></name> <argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">OPTNEEDREDRAW<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">redraw<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">REDRAW_FULL<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">rc<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">||<pos:position pos:line="21" pos:column="12"/></operator> <operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name><name pos:line="21" pos:column="14">buf<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>]<pos:position pos:line="21" pos:column="20"/></index></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21">
    <block type="pseudo"><return pos:line="22" pos:column="5">return;<pos:position pos:line="22" pos:column="12"/></return></block></then></if>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><operator pos:line="24" pos:column="8">(<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">adr<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">rfc822_parse_adrlist<pos:position pos:line="24" pos:column="35"/></name> <argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">adr<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">buf<pos:position pos:line="24" pos:column="45"/></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call><operator pos:line="24" pos:column="46">)<pos:position pos:line="24" pos:column="47"/></operator></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48">
  <block pos:line="25" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">mutt_error<pos:position pos:line="26" pos:column="15"/></name></type> <name pos:line="26" pos:column="16">_<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><literal type="string" pos:line="26" pos:column="18">"Error parsing address!"<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></decl>;<pos:position pos:line="26" pos:column="44"/></decl_stmt>
    <return pos:line="27" pos:column="5">return;<pos:position pos:line="27" pos:column="12"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">adr<pos:position pos:line="30" pos:column="6"/></name> <operator pos:line="30" pos:column="7">=<pos:position pos:line="30" pos:column="8"/></operator> <call><name pos:line="30" pos:column="9">mutt_expand_aliases<pos:position pos:line="30" pos:column="28"/></name> <argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">adr<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="32" pos:column="3">buf<pos:position pos:line="32" pos:column="6"/></name><index pos:line="32" pos:column="6">[<expr><literal type="number" pos:line="32" pos:column="7">0<pos:position pos:line="32" pos:column="8"/></literal></expr>]<pos:position pos:line="32" pos:column="9"/></index></name> <operator pos:line="32" pos:column="10">=<pos:position pos:line="32" pos:column="11"/></operator> <literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">rfc822_write_address<pos:position pos:line="33" pos:column="23"/></name> <argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">buf<pos:position pos:line="33" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="30">sizeof <argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">buf<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">adr<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>

<cpp:define pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">define<pos:position pos:line="35" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="35" pos:column="9">extra_space<pos:position pos:line="35" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="35" pos:column="21">(15 + 7 + 2)<pos:position pos:line="35" pos:column="33"/></cpp:value></cpp:define>
  <comment type="block" pos:line="36" pos:column="3">/*
   * This is the printing width of "...? ([y=yes]/n=no): ?" plus 2
   * for good measure. This is not ideal. FIXME.
   */</comment>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">snprintf<pos:position pos:line="40" pos:column="11"/></name> <argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">prompt<pos:position pos:line="40" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="21">sizeof <argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">prompt<pos:position pos:line="40" pos:column="35"/></name></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></sizeof> <operator pos:line="40" pos:column="37">-<pos:position pos:line="40" pos:column="38"/></operator> <literal type="number" pos:line="40" pos:column="39">4<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>,
           <argument><expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><ternary><condition><expr><name pos:line="41" pos:column="13">h<pos:position pos:line="41" pos:column="14"/></name></expr> ?<pos:position pos:line="41" pos:column="16"/></condition><then pos:line="41" pos:column="16"> <expr><call><name pos:line="41" pos:column="17">_<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><literal type="string" pos:line="41" pos:column="19">"Bounce message to %s"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr> <pos:position pos:line="41" pos:column="43"/></then><else pos:line="41" pos:column="43">: <expr><call><name pos:line="41" pos:column="45">_<pos:position pos:line="41" pos:column="46"/></name><argument_list pos:line="41" pos:column="46">(<argument><expr><literal type="string" pos:line="41" pos:column="47">"Bounce messages to %s"<pos:position pos:line="41" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr></else></ternary><operator pos:line="41" pos:column="71">)<pos:position pos:line="41" pos:column="72"/></operator></expr></argument>, <argument><expr><name pos:line="41" pos:column="74">buf<pos:position pos:line="41" pos:column="77"/></name></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">mutt_format_string<pos:position pos:line="42" pos:column="21"/></name> <argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">prompt<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="31">sizeof <argument_list pos:line="42" pos:column="38">(<argument><expr><name pos:line="42" pos:column="39">prompt<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></sizeof> <operator pos:line="42" pos:column="47">-<pos:position pos:line="42" pos:column="48"/></operator> <literal type="number" pos:line="42" pos:column="49">4<pos:position pos:line="42" pos:column="50"/></literal></expr></argument>,
		      <argument><expr><literal type="number" pos:line="43" pos:column="23">0<pos:position pos:line="43" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="26">COLS<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="31">extra_space<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="44">0<pos:position pos:line="43" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="47">0<pos:position pos:line="43" pos:column="48"/></literal></expr></argument>,
		      <argument><expr><name pos:line="44" pos:column="23">prompt<pos:position pos:line="44" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="31">sizeof <argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">prompt<pos:position pos:line="44" pos:column="45"/></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="48">0<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">strcat<pos:position pos:line="45" pos:column="9"/></name> <argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">prompt<pos:position pos:line="45" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="19">"...?"<pos:position pos:line="45" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>	<comment type="block" pos:line="45" pos:column="33">/* __STRCAT_CHECKED__ */</comment>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><call><name pos:line="46" pos:column="7">mutt_yesorno<pos:position pos:line="46" pos:column="19"/></name> <argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">prompt<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="29">1<pos:position pos:line="46" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call> <operator pos:line="46" pos:column="32">!=<pos:position pos:line="46" pos:column="34"/></operator> <literal type="number" pos:line="46" pos:column="35">1<pos:position pos:line="46" pos:column="36"/></literal></expr>)<pos:position pos:line="46" pos:column="37"/></condition><then pos:line="46" pos:column="37">
  <block pos:line="47" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">rfc822_free_address<pos:position pos:line="48" pos:column="24"/></name> <argument_list pos:line="48" pos:column="25">(<argument><expr><operator pos:line="48" pos:column="26">&amp;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="27">adr<pos:position pos:line="48" pos:column="30"/></name></expr></argument>)<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">CLEARLINE<pos:position pos:line="49" pos:column="14"/></name> <argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">LINES<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">-<pos:position pos:line="49" pos:column="22"/></operator><literal type="number" pos:line="49" pos:column="22">1<pos:position pos:line="49" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
    <return pos:line="50" pos:column="5">return;<pos:position pos:line="50" pos:column="12"/></return>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">mutt_bounce_message<pos:position pos:line="53" pos:column="22"/></name> <argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">NULL<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="30">h<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="33">adr<pos:position pos:line="53" pos:column="36"/></name></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">rfc822_free_address<pos:position pos:line="54" pos:column="22"/></name> <argument_list pos:line="54" pos:column="23">(<argument><expr><operator pos:line="54" pos:column="24">&amp;<pos:position pos:line="54" pos:column="29"/></operator><name pos:line="54" pos:column="25">adr<pos:position pos:line="54" pos:column="28"/></name></expr></argument>)<pos:position pos:line="54" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">mutt_message<pos:position pos:line="55" pos:column="15"/></name> <argument_list pos:line="55" pos:column="16">(<argument><expr><ternary><condition><expr><name pos:line="55" pos:column="17">h<pos:position pos:line="55" pos:column="18"/></name></expr> ?<pos:position pos:line="55" pos:column="20"/></condition><then pos:line="55" pos:column="20"> <expr><call><name pos:line="55" pos:column="21">_<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><literal type="string" pos:line="55" pos:column="23">"Message bounced."<pos:position pos:line="55" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr> <pos:position pos:line="55" pos:column="43"/></then><else pos:line="55" pos:column="43">: <expr><call><name pos:line="55" pos:column="45">_<pos:position pos:line="55" pos:column="46"/></name><argument_list pos:line="55" pos:column="46">(<argument><expr><literal type="string" pos:line="55" pos:column="47">"Messages bounced."<pos:position pos:line="55" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="67"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="55" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="69"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

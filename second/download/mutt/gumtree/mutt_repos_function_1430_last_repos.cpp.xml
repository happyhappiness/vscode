<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1430_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">_mutt_expand_path<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">s<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">size_t<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">slen<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">rx<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">p<pos:position pos:line="3" pos:column="9"/></name><index pos:line="3" pos:column="9">[<expr><name pos:line="3" pos:column="10">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="25"/></name></expr>]<pos:position pos:line="3" pos:column="26"/></index></name> <init pos:line="3" pos:column="27">= <expr><literal type="string" pos:line="3" pos:column="29">""<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">q<pos:position pos:line="4" pos:column="9"/></name><index pos:line="4" pos:column="9">[<expr><name pos:line="4" pos:column="10">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="25"/></name></expr>]<pos:position pos:line="4" pos:column="26"/></index></name> <init pos:line="4" pos:column="27">= <expr><literal type="string" pos:line="4" pos:column="29">""<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tmp<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">_POSIX_PATH_MAX<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">t<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">tail<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><literal type="string" pos:line="8" pos:column="16">""<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt> 

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">recurse<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
  
  <do pos:line="12" pos:column="3">do 
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">recurse<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>

    <switch pos:line="16" pos:column="5">switch <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">s<pos:position pos:line="16" pos:column="15"/></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition>
    <block pos:line="17" pos:column="5">{
      <case pos:line="18" pos:column="7">case <expr><literal type="char" pos:line="18" pos:column="12">'~'<pos:position pos:line="18" pos:column="15"/></literal></expr>:<pos:position pos:line="18" pos:column="16"/></case>
      <block pos:line="19" pos:column="7">{
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">s<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">+<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">1<pos:position pos:line="20" pos:column="20"/></literal><operator pos:line="20" pos:column="20">)<pos:position pos:line="20" pos:column="21"/></operator> <operator pos:line="20" pos:column="22">==<pos:position pos:line="20" pos:column="24"/></operator> <literal type="char" pos:line="20" pos:column="25">'/'<pos:position pos:line="20" pos:column="28"/></literal> <operator pos:line="20" pos:column="29">||<pos:position pos:line="20" pos:column="31"/></operator> <operator pos:line="20" pos:column="32">*<pos:position pos:line="20" pos:column="33"/></operator><operator pos:line="20" pos:column="33">(<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">s<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">+<pos:position pos:line="20" pos:column="37"/></operator> <literal type="number" pos:line="20" pos:column="38">1<pos:position pos:line="20" pos:column="39"/></literal><operator pos:line="20" pos:column="39">)<pos:position pos:line="20" pos:column="40"/></operator> <operator pos:line="20" pos:column="41">==<pos:position pos:line="20" pos:column="43"/></operator> <literal type="number" pos:line="20" pos:column="44">0<pos:position pos:line="20" pos:column="45"/></literal></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
	<block pos:line="21" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="22" pos:column="11">strfcpy<pos:position pos:line="22" pos:column="18"/></name> <argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">p<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="23">NONULL<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">Homedir<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="40">sizeof <argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">p<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="23" pos:column="11">tail<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">s<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">+<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">1<pos:position pos:line="23" pos:column="23"/></literal></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then>
	<else pos:line="25" pos:column="9">else
	<block pos:line="26" pos:column="9">{
	  <decl_stmt><decl><type><name><name pos:line="27" pos:column="11">struct<pos:position pos:line="27" pos:column="17"/></name> <name pos:line="27" pos:column="18">passwd<pos:position pos:line="27" pos:column="24"/></name></name> <modifier pos:line="27" pos:column="25">*<pos:position pos:line="27" pos:column="26"/></modifier></type><name pos:line="27" pos:column="26">pw<pos:position pos:line="27" pos:column="28"/></name></decl>;<pos:position pos:line="27" pos:column="29"/></decl_stmt>
	  <if pos:line="28" pos:column="11">if <condition pos:line="28" pos:column="14">(<expr><operator pos:line="28" pos:column="15">(<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">t<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">strchr<pos:position pos:line="28" pos:column="26"/></name> <argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">s<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">+<pos:position pos:line="28" pos:column="31"/></operator> <literal type="number" pos:line="28" pos:column="32">1<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="28" pos:column="35">'/'<pos:position pos:line="28" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call><operator pos:line="28" pos:column="39">)<pos:position pos:line="28" pos:column="40"/></operator></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41"> 
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="29" pos:column="13">*<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">t<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt></block></then></if>

	  <if pos:line="31" pos:column="11">if <condition pos:line="31" pos:column="14">(<expr><operator pos:line="31" pos:column="15">(<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">pw<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <call><name pos:line="31" pos:column="21">getpwnam<pos:position pos:line="31" pos:column="29"/></name> <argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">s<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">+<pos:position pos:line="31" pos:column="34"/></operator> <literal type="number" pos:line="31" pos:column="35">1<pos:position pos:line="31" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call><operator pos:line="31" pos:column="37">)<pos:position pos:line="31" pos:column="38"/></operator></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39">
	  <block pos:line="32" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="33" pos:column="13">strfcpy<pos:position pos:line="33" pos:column="20"/></name> <argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">p<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="25">pw<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">pw_dir<pos:position pos:line="33" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="37">sizeof <argument_list pos:line="33" pos:column="44">(<argument><expr><name pos:line="33" pos:column="45">p<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
	    <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">t<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
	    <block pos:line="35" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="36" pos:column="15">*<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">t<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <literal type="char" pos:line="36" pos:column="20">'/'<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
	      <expr_stmt><expr><name pos:line="37" pos:column="15">tail<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="22">t<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
	    }<pos:position pos:line="38" pos:column="14"/></block></then>
	    <else pos:line="39" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="15">tail<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <literal type="string" pos:line="40" pos:column="22">""<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt></block></else></if>
	  }<pos:position pos:line="41" pos:column="12"/></block></then>
	  <else pos:line="42" pos:column="11">else
	  <block pos:line="43" pos:column="11">{
	    <comment type="block" pos:line="44" pos:column="13">/* user not found! */</comment>
	    <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">t<pos:position pos:line="45" pos:column="18"/></name></expr>)<pos:position pos:line="45" pos:column="19"/></condition><then pos:line="45" pos:column="19">
	      <block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="15">*<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">t<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <literal type="char" pos:line="46" pos:column="20">'/'<pos:position pos:line="46" pos:column="23"/></literal></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><operator pos:line="47" pos:column="13">*<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">p<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <literal type="char" pos:line="47" pos:column="18">'\0'<pos:position pos:line="47" pos:column="22"/></literal></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="48" pos:column="13">tail<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">s<pos:position pos:line="48" pos:column="21"/></name></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt>
	  }<pos:position pos:line="49" pos:column="12"/></block></else></if>
	}<pos:position pos:line="50" pos:column="10"/></block></else></if>
      }<pos:position pos:line="51" pos:column="8"/></block>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>
      
      <case pos:line="54" pos:column="7">case <expr><literal type="char" pos:line="54" pos:column="12">'='<pos:position pos:line="54" pos:column="15"/></literal></expr>:<pos:position pos:line="54" pos:column="16"/></case>
      <case pos:line="55" pos:column="7">case <expr><literal type="char" pos:line="55" pos:column="12">'+'<pos:position pos:line="55" pos:column="15"/></literal></expr>:<pos:position pos:line="55" pos:column="16"/></case>    
      <block pos:line="56" pos:column="7">{
<cpp:ifdef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifdef<pos:position pos:line="57" pos:column="7"/></cpp:directive> <name pos:line="57" pos:column="8">USE_IMAP<pos:position pos:line="57" pos:column="16"/></name></cpp:ifdef>
	<comment type="block" pos:line="58" pos:column="9">/* if folder = {host} or imap[s]://host/: don't append slash */</comment>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><call><name pos:line="59" pos:column="13">mx_is_imap<pos:position pos:line="59" pos:column="23"/></name> <argument_list pos:line="59" pos:column="24">(<argument><expr><call><name pos:line="59" pos:column="25">NONULL<pos:position pos:line="59" pos:column="31"/></name> <argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">Maildir<pos:position pos:line="59" pos:column="40"/></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="42"/></argument_list></call> <operator pos:line="59" pos:column="43">&amp;&amp;<pos:position pos:line="59" pos:column="53"/></operator>
	    <operator pos:line="60" pos:column="13">(<pos:position pos:line="60" pos:column="14"/></operator><name><name pos:line="60" pos:column="14">Maildir<pos:position pos:line="60" pos:column="21"/></name><index pos:line="60" pos:column="21">[<expr><call><name pos:line="60" pos:column="22">strlen<pos:position pos:line="60" pos:column="28"/></name> <argument_list pos:line="60" pos:column="29">(<argument><expr><name pos:line="60" pos:column="30">Maildir<pos:position pos:line="60" pos:column="37"/></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call> <operator pos:line="60" pos:column="39">-<pos:position pos:line="60" pos:column="40"/></operator> <literal type="number" pos:line="60" pos:column="41">1<pos:position pos:line="60" pos:column="42"/></literal></expr>]<pos:position pos:line="60" pos:column="43"/></index></name> <operator pos:line="60" pos:column="44">==<pos:position pos:line="60" pos:column="46"/></operator> <literal type="char" pos:line="60" pos:column="47">'}'<pos:position pos:line="60" pos:column="50"/></literal> <operator pos:line="60" pos:column="51">||<pos:position pos:line="60" pos:column="53"/></operator>
	     <name><name pos:line="61" pos:column="14">Maildir<pos:position pos:line="61" pos:column="21"/></name><index pos:line="61" pos:column="21">[<expr><call><name pos:line="61" pos:column="22">strlen<pos:position pos:line="61" pos:column="28"/></name> <argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">Maildir<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call> <operator pos:line="61" pos:column="39">-<pos:position pos:line="61" pos:column="40"/></operator> <literal type="number" pos:line="61" pos:column="41">1<pos:position pos:line="61" pos:column="42"/></literal></expr>]<pos:position pos:line="61" pos:column="43"/></index></name> <operator pos:line="61" pos:column="44">==<pos:position pos:line="61" pos:column="46"/></operator> <literal type="char" pos:line="61" pos:column="47">'/'<pos:position pos:line="61" pos:column="50"/></literal><operator pos:line="61" pos:column="50">)<pos:position pos:line="61" pos:column="51"/></operator></expr>)<pos:position pos:line="61" pos:column="52"/></condition><then pos:line="61" pos:column="52">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="11">strfcpy<pos:position pos:line="62" pos:column="18"/></name> <argument_list pos:line="62" pos:column="19">(<argument><expr><name pos:line="62" pos:column="20">p<pos:position pos:line="62" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="23">NONULL<pos:position pos:line="62" pos:column="29"/></name> <argument_list pos:line="62" pos:column="30">(<argument><expr><name pos:line="62" pos:column="31">Maildir<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="41">sizeof <argument_list pos:line="62" pos:column="48">(<argument><expr><name pos:line="62" pos:column="49">p<pos:position pos:line="62" pos:column="50"/></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt></block></then>
	<elseif pos:line="63" pos:column="9">else
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">Maildir<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">&amp;&amp;<pos:position pos:line="65" pos:column="31"/></operator> <operator pos:line="65" pos:column="24">*<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="25">Maildir<pos:position pos:line="65" pos:column="32"/></name> <operator pos:line="65" pos:column="33">&amp;&amp;<pos:position pos:line="65" pos:column="43"/></operator> <name><name pos:line="65" pos:column="36">Maildir<pos:position pos:line="65" pos:column="43"/></name><index pos:line="65" pos:column="43">[<expr><call><name pos:line="65" pos:column="44">strlen<pos:position pos:line="65" pos:column="50"/></name> <argument_list pos:line="65" pos:column="51">(<argument><expr><name pos:line="65" pos:column="52">Maildir<pos:position pos:line="65" pos:column="59"/></name></expr></argument>)<pos:position pos:line="65" pos:column="60"/></argument_list></call> <operator pos:line="65" pos:column="61">-<pos:position pos:line="65" pos:column="62"/></operator> <literal type="number" pos:line="65" pos:column="63">1<pos:position pos:line="65" pos:column="64"/></literal></expr>]<pos:position pos:line="65" pos:column="65"/></index></name> <operator pos:line="65" pos:column="66">==<pos:position pos:line="65" pos:column="68"/></operator> <literal type="char" pos:line="65" pos:column="69">'/'<pos:position pos:line="65" pos:column="72"/></literal></expr>)<pos:position pos:line="65" pos:column="73"/></condition><then pos:line="65" pos:column="73">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="11">strfcpy<pos:position pos:line="66" pos:column="18"/></name> <argument_list pos:line="66" pos:column="19">(<argument><expr><name pos:line="66" pos:column="20">p<pos:position pos:line="66" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="23">NONULL<pos:position pos:line="66" pos:column="29"/></name> <argument_list pos:line="66" pos:column="30">(<argument><expr><name pos:line="66" pos:column="31">Maildir<pos:position pos:line="66" pos:column="38"/></name></expr></argument>)<pos:position pos:line="66" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="41">sizeof <argument_list pos:line="66" pos:column="48">(<argument><expr><name pos:line="66" pos:column="49">p<pos:position pos:line="66" pos:column="50"/></name></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt></block></then></if></elseif>
	<else pos:line="67" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="11">snprintf<pos:position pos:line="68" pos:column="19"/></name> <argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">p<pos:position pos:line="68" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="24">sizeof <argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">p<pos:position pos:line="68" pos:column="33"/></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="36">"%s/"<pos:position pos:line="68" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="43">NONULL<pos:position pos:line="68" pos:column="49"/></name> <argument_list pos:line="68" pos:column="50">(<argument><expr><name pos:line="68" pos:column="51">Maildir<pos:position pos:line="68" pos:column="58"/></name></expr></argument>)<pos:position pos:line="68" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="61"/></expr_stmt></block></else></if>
	
	<expr_stmt><expr><name pos:line="70" pos:column="9">tail<pos:position pos:line="70" pos:column="13"/></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <name pos:line="70" pos:column="16">s<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">+<pos:position pos:line="70" pos:column="19"/></operator> <literal type="number" pos:line="70" pos:column="20">1<pos:position pos:line="70" pos:column="21"/></literal></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="71" pos:column="8"/></block>
      <break pos:line="72" pos:column="7">break;<pos:position pos:line="72" pos:column="13"/></break>
      
      <comment type="block" pos:line="74" pos:column="7">/* elm compatibility, @ expands alias to user name */</comment>
    
      <case pos:line="76" pos:column="7">case <expr><literal type="char" pos:line="76" pos:column="12">'@'<pos:position pos:line="76" pos:column="15"/></literal></expr>:<pos:position pos:line="76" pos:column="16"/></case>
      <block pos:line="77" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="78" pos:column="9">HEADER<pos:position pos:line="78" pos:column="15"/></name> <modifier pos:line="78" pos:column="16">*<pos:position pos:line="78" pos:column="17"/></modifier></type><name pos:line="78" pos:column="17">h<pos:position pos:line="78" pos:column="18"/></name></decl>;<pos:position pos:line="78" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="79" pos:column="9">ADDRESS<pos:position pos:line="79" pos:column="16"/></name> <modifier pos:line="79" pos:column="17">*<pos:position pos:line="79" pos:column="18"/></modifier></type><name pos:line="79" pos:column="18">alias<pos:position pos:line="79" pos:column="23"/></name></decl>;<pos:position pos:line="79" pos:column="24"/></decl_stmt>
	
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">(<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">alias<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">=<pos:position pos:line="81" pos:column="21"/></operator> <call><name pos:line="81" pos:column="22">mutt_lookup_alias<pos:position pos:line="81" pos:column="39"/></name> <argument_list pos:line="81" pos:column="40">(<argument><expr><name pos:line="81" pos:column="41">s<pos:position pos:line="81" pos:column="42"/></name> <operator pos:line="81" pos:column="43">+<pos:position pos:line="81" pos:column="44"/></operator> <literal type="number" pos:line="81" pos:column="45">1<pos:position pos:line="81" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="47"/></argument_list></call><operator pos:line="81" pos:column="47">)<pos:position pos:line="81" pos:column="48"/></operator></expr>)<pos:position pos:line="81" pos:column="49"/></condition><then pos:line="81" pos:column="49">
	<block pos:line="82" pos:column="9">{
	  <expr_stmt><expr><name pos:line="83" pos:column="11">h<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <call><name pos:line="83" pos:column="15">mutt_new_header<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">()<pos:position pos:line="83" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="84" pos:column="11">h<pos:position pos:line="84" pos:column="12"/></name><operator pos:line="84" pos:column="12">-&gt;<pos:position pos:line="84" pos:column="17"/></operator><name pos:line="84" pos:column="14">env<pos:position pos:line="84" pos:column="17"/></name></name> <operator pos:line="84" pos:column="18">=<pos:position pos:line="84" pos:column="19"/></operator> <call><name pos:line="84" pos:column="20">mutt_new_envelope<pos:position pos:line="84" pos:column="37"/></name><argument_list pos:line="84" pos:column="37">()<pos:position pos:line="84" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="85" pos:column="11">h<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">env<pos:position pos:line="85" pos:column="17"/></name><operator pos:line="85" pos:column="17">-&gt;<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="19">from<pos:position pos:line="85" pos:column="23"/></name></name> <operator pos:line="85" pos:column="24">=<pos:position pos:line="85" pos:column="25"/></operator> <name><name pos:line="85" pos:column="26">h<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">-&gt;<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="29">env<pos:position pos:line="85" pos:column="32"/></name><operator pos:line="85" pos:column="32">-&gt;<pos:position pos:line="85" pos:column="37"/></operator><name pos:line="85" pos:column="34">to<pos:position pos:line="85" pos:column="36"/></name></name> <operator pos:line="85" pos:column="37">=<pos:position pos:line="85" pos:column="38"/></operator> <name pos:line="85" pos:column="39">alias<pos:position pos:line="85" pos:column="44"/></name></expr>;<pos:position pos:line="85" pos:column="45"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="86" pos:column="11">mutt_default_save<pos:position pos:line="86" pos:column="28"/></name> <argument_list pos:line="86" pos:column="29">(<argument><expr><name pos:line="86" pos:column="30">p<pos:position pos:line="86" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="33">sizeof <argument_list pos:line="86" pos:column="40">(<argument><expr><name pos:line="86" pos:column="41">p<pos:position pos:line="86" pos:column="42"/></name></expr></argument>)<pos:position pos:line="86" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="86" pos:column="45">h<pos:position pos:line="86" pos:column="46"/></name></expr></argument>)<pos:position pos:line="86" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="48"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="87" pos:column="11">h<pos:position pos:line="87" pos:column="12"/></name><operator pos:line="87" pos:column="12">-&gt;<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="14">env<pos:position pos:line="87" pos:column="17"/></name><operator pos:line="87" pos:column="17">-&gt;<pos:position pos:line="87" pos:column="22"/></operator><name pos:line="87" pos:column="19">from<pos:position pos:line="87" pos:column="23"/></name></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <name><name pos:line="87" pos:column="26">h<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">-&gt;<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="29">env<pos:position pos:line="87" pos:column="32"/></name><operator pos:line="87" pos:column="32">-&gt;<pos:position pos:line="87" pos:column="37"/></operator><name pos:line="87" pos:column="34">to<pos:position pos:line="87" pos:column="36"/></name></name> <operator pos:line="87" pos:column="37">=<pos:position pos:line="87" pos:column="38"/></operator> <name pos:line="87" pos:column="39">NULL<pos:position pos:line="87" pos:column="43"/></name></expr>;<pos:position pos:line="87" pos:column="44"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="88" pos:column="11">mutt_free_header<pos:position pos:line="88" pos:column="27"/></name> <argument_list pos:line="88" pos:column="28">(<argument><expr><operator pos:line="88" pos:column="29">&amp;<pos:position pos:line="88" pos:column="34"/></operator><name pos:line="88" pos:column="30">h<pos:position pos:line="88" pos:column="31"/></name></expr></argument>)<pos:position pos:line="88" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="33"/></expr_stmt>
	  <comment type="block" pos:line="89" pos:column="11">/* Avoid infinite recursion if the resulting folder starts with '@' */</comment>
	  <if pos:line="90" pos:column="11">if <condition pos:line="90" pos:column="14">(<expr><operator pos:line="90" pos:column="15">*<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="16">p<pos:position pos:line="90" pos:column="17"/></name> <operator pos:line="90" pos:column="18">!=<pos:position pos:line="90" pos:column="20"/></operator> <literal type="char" pos:line="90" pos:column="21">'@'<pos:position pos:line="90" pos:column="24"/></literal></expr>)<pos:position pos:line="90" pos:column="25"/></condition><then pos:line="90" pos:column="25">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="13">recurse<pos:position pos:line="91" pos:column="20"/></name> <operator pos:line="91" pos:column="21">=<pos:position pos:line="91" pos:column="22"/></operator> <literal type="number" pos:line="91" pos:column="23">1<pos:position pos:line="91" pos:column="24"/></literal></expr>;<pos:position pos:line="91" pos:column="25"/></expr_stmt></block></then></if>
	  
	  <expr_stmt><expr><name pos:line="93" pos:column="11">tail<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">=<pos:position pos:line="93" pos:column="17"/></operator> <literal type="string" pos:line="93" pos:column="18">""<pos:position pos:line="93" pos:column="20"/></literal></expr>;<pos:position pos:line="93" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="94" pos:column="10"/></block></then></if>
      }<pos:position pos:line="95" pos:column="8"/></block>
      <break pos:line="96" pos:column="7">break;<pos:position pos:line="96" pos:column="13"/></break>
      
      <case pos:line="98" pos:column="7">case <expr><literal type="char" pos:line="98" pos:column="12">'&gt;'<pos:position pos:line="98" pos:column="18"/></literal></expr>:<pos:position pos:line="98" pos:column="16"/></case>
      <block pos:line="99" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="100" pos:column="9">strfcpy<pos:position pos:line="100" pos:column="16"/></name> <argument_list pos:line="100" pos:column="17">(<argument><expr><name pos:line="100" pos:column="18">p<pos:position pos:line="100" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="100" pos:column="21">NONULL<pos:position pos:line="100" pos:column="27"/></name><argument_list pos:line="100" pos:column="27">(<argument><expr><name pos:line="100" pos:column="28">Inbox<pos:position pos:line="100" pos:column="33"/></name></expr></argument>)<pos:position pos:line="100" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="100" pos:column="36">sizeof <argument_list pos:line="100" pos:column="43">(<argument><expr><name pos:line="100" pos:column="44">p<pos:position pos:line="100" pos:column="45"/></name></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="101" pos:column="9">tail<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">=<pos:position pos:line="101" pos:column="15"/></operator> <name pos:line="101" pos:column="16">s<pos:position pos:line="101" pos:column="17"/></name> <operator pos:line="101" pos:column="18">+<pos:position pos:line="101" pos:column="19"/></operator> <literal type="number" pos:line="101" pos:column="20">1<pos:position pos:line="101" pos:column="21"/></literal></expr>;<pos:position pos:line="101" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="102" pos:column="8"/></block>
      <break pos:line="103" pos:column="7">break;<pos:position pos:line="103" pos:column="13"/></break>
      
      <case pos:line="105" pos:column="7">case <expr><literal type="char" pos:line="105" pos:column="12">'&lt;'<pos:position pos:line="105" pos:column="18"/></literal></expr>:<pos:position pos:line="105" pos:column="16"/></case>
      <block pos:line="106" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="107" pos:column="9">strfcpy<pos:position pos:line="107" pos:column="16"/></name> <argument_list pos:line="107" pos:column="17">(<argument><expr><name pos:line="107" pos:column="18">p<pos:position pos:line="107" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="21">NONULL<pos:position pos:line="107" pos:column="27"/></name><argument_list pos:line="107" pos:column="27">(<argument><expr><name pos:line="107" pos:column="28">Outbox<pos:position pos:line="107" pos:column="34"/></name></expr></argument>)<pos:position pos:line="107" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="37">sizeof <argument_list pos:line="107" pos:column="44">(<argument><expr><name pos:line="107" pos:column="45">p<pos:position pos:line="107" pos:column="46"/></name></expr></argument>)<pos:position pos:line="107" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="107" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="108" pos:column="9">tail<pos:position pos:line="108" pos:column="13"/></name> <operator pos:line="108" pos:column="14">=<pos:position pos:line="108" pos:column="15"/></operator> <name pos:line="108" pos:column="16">s<pos:position pos:line="108" pos:column="17"/></name> <operator pos:line="108" pos:column="18">+<pos:position pos:line="108" pos:column="19"/></operator> <literal type="number" pos:line="108" pos:column="20">1<pos:position pos:line="108" pos:column="21"/></literal></expr>;<pos:position pos:line="108" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="109" pos:column="8"/></block>
      <break pos:line="110" pos:column="7">break;<pos:position pos:line="110" pos:column="13"/></break>
      
      <case pos:line="112" pos:column="7">case <expr><literal type="char" pos:line="112" pos:column="12">'!'<pos:position pos:line="112" pos:column="15"/></literal></expr>:<pos:position pos:line="112" pos:column="16"/></case>
      <block pos:line="113" pos:column="7">{
	<if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><operator pos:line="114" pos:column="13">*<pos:position pos:line="114" pos:column="14"/></operator><operator pos:line="114" pos:column="14">(<pos:position pos:line="114" pos:column="15"/></operator><name pos:line="114" pos:column="15">s<pos:position pos:line="114" pos:column="16"/></name><operator pos:line="114" pos:column="16">+<pos:position pos:line="114" pos:column="17"/></operator><literal type="number" pos:line="114" pos:column="17">1<pos:position pos:line="114" pos:column="18"/></literal><operator pos:line="114" pos:column="18">)<pos:position pos:line="114" pos:column="19"/></operator> <operator pos:line="114" pos:column="20">==<pos:position pos:line="114" pos:column="22"/></operator> <literal type="char" pos:line="114" pos:column="23">'!'<pos:position pos:line="114" pos:column="26"/></literal></expr>)<pos:position pos:line="114" pos:column="27"/></condition><then pos:line="114" pos:column="27">
	<block pos:line="115" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="116" pos:column="11">strfcpy<pos:position pos:line="116" pos:column="18"/></name> <argument_list pos:line="116" pos:column="19">(<argument><expr><name pos:line="116" pos:column="20">p<pos:position pos:line="116" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="116" pos:column="23">NONULL<pos:position pos:line="116" pos:column="29"/></name><argument_list pos:line="116" pos:column="29">(<argument><expr><name pos:line="116" pos:column="30">LastFolder<pos:position pos:line="116" pos:column="40"/></name></expr></argument>)<pos:position pos:line="116" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="116" pos:column="43">sizeof <argument_list pos:line="116" pos:column="50">(<argument><expr><name pos:line="116" pos:column="51">p<pos:position pos:line="116" pos:column="52"/></name></expr></argument>)<pos:position pos:line="116" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="116" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="55"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="117" pos:column="11">tail<pos:position pos:line="117" pos:column="15"/></name> <operator pos:line="117" pos:column="16">=<pos:position pos:line="117" pos:column="17"/></operator> <name pos:line="117" pos:column="18">s<pos:position pos:line="117" pos:column="19"/></name> <operator pos:line="117" pos:column="20">+<pos:position pos:line="117" pos:column="21"/></operator> <literal type="number" pos:line="117" pos:column="22">2<pos:position pos:line="117" pos:column="23"/></literal></expr>;<pos:position pos:line="117" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="118" pos:column="10"/></block></then>
	<else pos:line="119" pos:column="9">else 
	<block pos:line="120" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="121" pos:column="11">strfcpy<pos:position pos:line="121" pos:column="18"/></name> <argument_list pos:line="121" pos:column="19">(<argument><expr><name pos:line="121" pos:column="20">p<pos:position pos:line="121" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="121" pos:column="23">NONULL<pos:position pos:line="121" pos:column="29"/></name><argument_list pos:line="121" pos:column="29">(<argument><expr><name pos:line="121" pos:column="30">Spoolfile<pos:position pos:line="121" pos:column="39"/></name></expr></argument>)<pos:position pos:line="121" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="121" pos:column="42">sizeof <argument_list pos:line="121" pos:column="49">(<argument><expr><name pos:line="121" pos:column="50">p<pos:position pos:line="121" pos:column="51"/></name></expr></argument>)<pos:position pos:line="121" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="121" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="54"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="122" pos:column="11">tail<pos:position pos:line="122" pos:column="15"/></name> <operator pos:line="122" pos:column="16">=<pos:position pos:line="122" pos:column="17"/></operator> <name pos:line="122" pos:column="18">s<pos:position pos:line="122" pos:column="19"/></name> <operator pos:line="122" pos:column="20">+<pos:position pos:line="122" pos:column="21"/></operator> <literal type="number" pos:line="122" pos:column="22">1<pos:position pos:line="122" pos:column="23"/></literal></expr>;<pos:position pos:line="122" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="123" pos:column="10"/></block></else></if>
      }<pos:position pos:line="124" pos:column="8"/></block>
      <break pos:line="125" pos:column="7">break;<pos:position pos:line="125" pos:column="13"/></break>
      
      <case pos:line="127" pos:column="7">case <expr><literal type="char" pos:line="127" pos:column="12">'-'<pos:position pos:line="127" pos:column="15"/></literal></expr>:<pos:position pos:line="127" pos:column="16"/></case>
      <block pos:line="128" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="129" pos:column="9">strfcpy<pos:position pos:line="129" pos:column="16"/></name> <argument_list pos:line="129" pos:column="17">(<argument><expr><name pos:line="129" pos:column="18">p<pos:position pos:line="129" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="129" pos:column="21">NONULL<pos:position pos:line="129" pos:column="27"/></name><argument_list pos:line="129" pos:column="27">(<argument><expr><name pos:line="129" pos:column="28">LastFolder<pos:position pos:line="129" pos:column="38"/></name></expr></argument>)<pos:position pos:line="129" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="129" pos:column="41">sizeof <argument_list pos:line="129" pos:column="48">(<argument><expr><name pos:line="129" pos:column="49">p<pos:position pos:line="129" pos:column="50"/></name></expr></argument>)<pos:position pos:line="129" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="129" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="130" pos:column="9">tail<pos:position pos:line="130" pos:column="13"/></name> <operator pos:line="130" pos:column="14">=<pos:position pos:line="130" pos:column="15"/></operator> <name pos:line="130" pos:column="16">s<pos:position pos:line="130" pos:column="17"/></name> <operator pos:line="130" pos:column="18">+<pos:position pos:line="130" pos:column="19"/></operator> <literal type="number" pos:line="130" pos:column="20">1<pos:position pos:line="130" pos:column="21"/></literal></expr>;<pos:position pos:line="130" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="131" pos:column="8"/></block>
      <break pos:line="132" pos:column="7">break;<pos:position pos:line="132" pos:column="13"/></break>
      
      <case pos:line="134" pos:column="7">case <expr><literal type="char" pos:line="134" pos:column="12">'^'<pos:position pos:line="134" pos:column="15"/></literal></expr>:<pos:position pos:line="134" pos:column="16"/></case>        
      <block pos:line="135" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="136" pos:column="9">strfcpy<pos:position pos:line="136" pos:column="16"/></name> <argument_list pos:line="136" pos:column="17">(<argument><expr><name pos:line="136" pos:column="18">p<pos:position pos:line="136" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="136" pos:column="21">NONULL<pos:position pos:line="136" pos:column="27"/></name><argument_list pos:line="136" pos:column="27">(<argument><expr><name pos:line="136" pos:column="28">CurrentFolder<pos:position pos:line="136" pos:column="41"/></name></expr></argument>)<pos:position pos:line="136" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="136" pos:column="44">sizeof <argument_list pos:line="136" pos:column="51">(<argument><expr><name pos:line="136" pos:column="52">p<pos:position pos:line="136" pos:column="53"/></name></expr></argument>)<pos:position pos:line="136" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="136" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="137" pos:column="9">tail<pos:position pos:line="137" pos:column="13"/></name> <operator pos:line="137" pos:column="14">=<pos:position pos:line="137" pos:column="15"/></operator> <name pos:line="137" pos:column="16">s<pos:position pos:line="137" pos:column="17"/></name> <operator pos:line="137" pos:column="18">+<pos:position pos:line="137" pos:column="19"/></operator> <literal type="number" pos:line="137" pos:column="20">1<pos:position pos:line="137" pos:column="21"/></literal></expr>;<pos:position pos:line="137" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="138" pos:column="8"/></block>
      <break pos:line="139" pos:column="7">break;<pos:position pos:line="139" pos:column="13"/></break>

      <default pos:line="141" pos:column="7">default:<pos:position pos:line="141" pos:column="15"/></default>
      <block pos:line="142" pos:column="7">{
	<expr_stmt><expr><operator pos:line="143" pos:column="9">*<pos:position pos:line="143" pos:column="10"/></operator><name pos:line="143" pos:column="10">p<pos:position pos:line="143" pos:column="11"/></name> <operator pos:line="143" pos:column="12">=<pos:position pos:line="143" pos:column="13"/></operator> <literal type="char" pos:line="143" pos:column="14">'\0'<pos:position pos:line="143" pos:column="18"/></literal></expr>;<pos:position pos:line="143" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="144" pos:column="9">tail<pos:position pos:line="144" pos:column="13"/></name> <operator pos:line="144" pos:column="14">=<pos:position pos:line="144" pos:column="15"/></operator> <name pos:line="144" pos:column="16">s<pos:position pos:line="144" pos:column="17"/></name></expr>;<pos:position pos:line="144" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="145" pos:column="8"/></block>
    }<pos:position pos:line="146" pos:column="6"/></block></switch>

    <if pos:line="148" pos:column="5">if <condition pos:line="148" pos:column="8">(<expr><name pos:line="148" pos:column="9">rx<pos:position pos:line="148" pos:column="11"/></name> <operator pos:line="148" pos:column="12">&amp;&amp;<pos:position pos:line="148" pos:column="22"/></operator> <operator pos:line="148" pos:column="15">*<pos:position pos:line="148" pos:column="16"/></operator><name pos:line="148" pos:column="16">p<pos:position pos:line="148" pos:column="17"/></name> <operator pos:line="148" pos:column="18">&amp;&amp;<pos:position pos:line="148" pos:column="28"/></operator> <operator pos:line="148" pos:column="21">!<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="22">recurse<pos:position pos:line="148" pos:column="29"/></name></expr>)<pos:position pos:line="148" pos:column="30"/></condition><then pos:line="148" pos:column="30">
    <block pos:line="149" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="150" pos:column="7">mutt_rx_sanitize_string<pos:position pos:line="150" pos:column="30"/></name> <argument_list pos:line="150" pos:column="31">(<argument><expr><name pos:line="150" pos:column="32">q<pos:position pos:line="150" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="150" pos:column="35">sizeof <argument_list pos:line="150" pos:column="42">(<argument><expr><name pos:line="150" pos:column="43">q<pos:position pos:line="150" pos:column="44"/></name></expr></argument>)<pos:position pos:line="150" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="150" pos:column="47">p<pos:position pos:line="150" pos:column="48"/></name></expr></argument>)<pos:position pos:line="150" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="151" pos:column="7">snprintf<pos:position pos:line="151" pos:column="15"/></name> <argument_list pos:line="151" pos:column="16">(<argument><expr><name pos:line="151" pos:column="17">tmp<pos:position pos:line="151" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="151" pos:column="22">sizeof <argument_list pos:line="151" pos:column="29">(<argument><expr><name pos:line="151" pos:column="30">tmp<pos:position pos:line="151" pos:column="33"/></name></expr></argument>)<pos:position pos:line="151" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="36">"%s%s"<pos:position pos:line="151" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="151" pos:column="44">q<pos:position pos:line="151" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="47">tail<pos:position pos:line="151" pos:column="51"/></name></expr></argument>)<pos:position pos:line="151" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="152" pos:column="6"/></block></then>
    <else pos:line="153" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="154" pos:column="7">snprintf<pos:position pos:line="154" pos:column="15"/></name> <argument_list pos:line="154" pos:column="16">(<argument><expr><name pos:line="154" pos:column="17">tmp<pos:position pos:line="154" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="154" pos:column="22">sizeof <argument_list pos:line="154" pos:column="29">(<argument><expr><name pos:line="154" pos:column="30">tmp<pos:position pos:line="154" pos:column="33"/></name></expr></argument>)<pos:position pos:line="154" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="36">"%s%s"<pos:position pos:line="154" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="44">p<pos:position pos:line="154" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="47">tail<pos:position pos:line="154" pos:column="51"/></name></expr></argument>)<pos:position pos:line="154" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="53"/></expr_stmt></block></else></if>
    
    <expr_stmt><expr><call><name pos:line="156" pos:column="5">strfcpy<pos:position pos:line="156" pos:column="12"/></name> <argument_list pos:line="156" pos:column="13">(<argument><expr><name pos:line="156" pos:column="14">s<pos:position pos:line="156" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="17">tmp<pos:position pos:line="156" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="22">slen<pos:position pos:line="156" pos:column="26"/></name></expr></argument>)<pos:position pos:line="156" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="157" pos:column="4"/></block>
  while <condition pos:line="158" pos:column="9">(<expr><name pos:line="158" pos:column="10">recurse<pos:position pos:line="158" pos:column="17"/></name></expr>)<pos:position pos:line="158" pos:column="18"/></condition>;<pos:position pos:line="158" pos:column="19"/></do>

<cpp:ifdef pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">ifdef<pos:position pos:line="160" pos:column="7"/></cpp:directive> <name pos:line="160" pos:column="8">USE_IMAP<pos:position pos:line="160" pos:column="16"/></name></cpp:ifdef>
  <comment type="block" pos:line="161" pos:column="3">/* Rewrite IMAP path in canonical form - aids in string comparisons of
   * folders. May possibly fail, in which case s should be the same. */</comment>
  <if pos:line="163" pos:column="3">if <condition pos:line="163" pos:column="6">(<expr><call><name pos:line="163" pos:column="7">mx_is_imap<pos:position pos:line="163" pos:column="17"/></name> <argument_list pos:line="163" pos:column="18">(<argument><expr><name pos:line="163" pos:column="19">s<pos:position pos:line="163" pos:column="20"/></name></expr></argument>)<pos:position pos:line="163" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="22"/></condition><then pos:line="163" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="164" pos:column="5">imap_expand_path<pos:position pos:line="164" pos:column="21"/></name> <argument_list pos:line="164" pos:column="22">(<argument><expr><name pos:line="164" pos:column="23">s<pos:position pos:line="164" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="26">slen<pos:position pos:line="164" pos:column="30"/></name></expr></argument>)<pos:position pos:line="164" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="32"/></expr_stmt></block></then></if>
<cpp:endif pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">endif<pos:position pos:line="165" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="167" pos:column="3">return <expr><operator pos:line="167" pos:column="10">(<pos:position pos:line="167" pos:column="11"/></operator><name pos:line="167" pos:column="11">s<pos:position pos:line="167" pos:column="12"/></name><operator pos:line="167" pos:column="12">)<pos:position pos:line="167" pos:column="13"/></operator></expr>;<pos:position pos:line="167" pos:column="14"/></return>
}<pos:position pos:line="168" pos:column="2"/></block></function></unit>

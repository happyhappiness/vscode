<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1122_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">msg_cache_check<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">id<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">body_cache_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">bcache<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">void<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">data<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CONTEXT<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">ctx<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">POP_DATA<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">pop_data<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><operator pos:line="7" pos:column="8">(<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">ctx<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">(<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">CONTEXT<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">)<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">data<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">)<pos:position pos:line="7" pos:column="31"/></operator></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return></block></then></if>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><operator pos:line="9" pos:column="8">(<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">pop_data<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">POP_DATA<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></operator><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator><name><name pos:line="9" pos:column="32">ctx<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">data<pos:position pos:line="9" pos:column="41"/></name></name><operator pos:line="9" pos:column="41">)<pos:position pos:line="9" pos:column="42"/></operator></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return></block></then></if>

<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">USE_HCACHE<pos:position pos:line="12" pos:column="18"/></name></cpp:ifdef>
  <comment type="block" pos:line="13" pos:column="3">/* keep hcache file if hcache == bcache */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name pos:line="14" pos:column="7">strcmp<pos:position pos:line="14" pos:column="13"/></name> <argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">HC_FNAME<pos:position pos:line="14" pos:column="23"/></name> <literal type="string" pos:line="14" pos:column="24">"."<pos:position pos:line="14" pos:column="27"/></literal> <name pos:line="14" pos:column="28">HC_FEXT<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">id<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call> <operator pos:line="14" pos:column="41">==<pos:position pos:line="14" pos:column="43"/></operator> <literal type="number" pos:line="14" pos:column="44">0<pos:position pos:line="14" pos:column="45"/></literal></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><expr><name pos:line="18" pos:column="8">i<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></init> <condition><expr><name pos:line="18" pos:column="15">i<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&lt;<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="19">ctx<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">msgcount<pos:position pos:line="18" pos:column="32"/></name></name></expr>;<pos:position pos:line="18" pos:column="33"/></condition> <incr><expr><name pos:line="18" pos:column="34">i<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">++<pos:position pos:line="18" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="38"/></control>
    <comment type="block" pos:line="19" pos:column="5">/* if the id we get is known for a header: done (i.e. keep in cache) */</comment>
    <block type="pseudo"><if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">ctx<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">hdrs<pos:position pos:line="20" pos:column="18"/></name><index pos:line="20" pos:column="18">[<expr><name pos:line="20" pos:column="19">i<pos:position pos:line="20" pos:column="20"/></name></expr>]<pos:position pos:line="20" pos:column="21"/></index></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">data<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">&amp;&amp;<pos:position pos:line="20" pos:column="38"/></operator> <call><name pos:line="20" pos:column="31">mutt_strcmp<pos:position pos:line="20" pos:column="42"/></name> <argument_list pos:line="20" pos:column="43">(<argument><expr><name><name pos:line="20" pos:column="44">ctx<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">hdrs<pos:position pos:line="20" pos:column="53"/></name><index pos:line="20" pos:column="53">[<expr><name pos:line="20" pos:column="54">i<pos:position pos:line="20" pos:column="55"/></name></expr>]<pos:position pos:line="20" pos:column="56"/></index></name><operator pos:line="20" pos:column="56">-&gt;<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="58">data<pos:position pos:line="20" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">id<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call> <operator pos:line="20" pos:column="68">==<pos:position pos:line="20" pos:column="70"/></operator> <literal type="number" pos:line="20" pos:column="71">0<pos:position pos:line="20" pos:column="72"/></literal></expr>)<pos:position pos:line="20" pos:column="73"/></condition><then pos:line="20" pos:column="73">
      <block type="pseudo"><return pos:line="21" pos:column="7">return <expr><literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></return></block></then></if></block></for>

  <comment type="block" pos:line="23" pos:column="3">/* message not found in context -&gt; remove it from cache
   * return the result of bcache, so we stop upon its first error
   */</comment>
  <return pos:line="26" pos:column="3">return <expr><call><name pos:line="26" pos:column="10">mutt_bcache_del<pos:position pos:line="26" pos:column="25"/></name> <argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">bcache<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">id<pos:position pos:line="26" pos:column="37"/></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

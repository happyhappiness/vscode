<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_523_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">count_body_parts_check<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">LIST<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">checklist<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">BODY<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">b<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">dflt<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">LIST<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">type<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ATTACH_MATCH<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">a<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* If list is null, use default behavior. */</comment>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator> <operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">checklist<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
  <block pos:line="8" pos:column="3">{
    <comment type="block" pos:line="9" pos:column="5">/*return dflt;*/</comment>
    <return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><expr><name pos:line="13" pos:column="8">type<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">*<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">checklist<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></init> <condition><expr><name pos:line="13" pos:column="27">type<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></condition> <incr><expr><name pos:line="13" pos:column="33">type<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">=<pos:position pos:line="13" pos:column="39"/></operator> <name><name pos:line="13" pos:column="40">type<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">next<pos:position pos:line="13" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="51"/></control>
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">a<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">ATTACH_MATCH<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></operator><operator pos:line="15" pos:column="24">)<pos:position pos:line="15" pos:column="25"/></operator><name><name pos:line="15" pos:column="25">type<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">data<pos:position pos:line="15" pos:column="35"/></name></name></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">dprint<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">5<pos:position pos:line="16" pos:column="13"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="15">(<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">debugfile<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">,<pos:position pos:line="16" pos:column="26"/></operator> <literal type="string" pos:line="16" pos:column="27">"cbpc: %s %d/%s ?? %s/%s [%d]... "<pos:position pos:line="16" pos:column="61"/></literal><operator pos:line="16" pos:column="61">,<pos:position pos:line="16" pos:column="62"/></operator>
		<ternary><condition><expr><name pos:line="17" pos:column="17">dflt<pos:position pos:line="17" pos:column="21"/></name></expr> ?<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <expr><literal type="string" pos:line="17" pos:column="24">"[OK]   "<pos:position pos:line="17" pos:column="33"/></literal></expr> <pos:position pos:line="17" pos:column="34"/></then><else pos:line="17" pos:column="34">: <expr><literal type="string" pos:line="17" pos:column="36">"[EXCL] "<pos:position pos:line="17" pos:column="45"/></literal></expr></else></ternary><operator pos:line="17" pos:column="45">,<pos:position pos:line="17" pos:column="46"/></operator>
		<name><name pos:line="18" pos:column="17">b<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">type<pos:position pos:line="18" pos:column="24"/></name></name><operator pos:line="18" pos:column="24">,<pos:position pos:line="18" pos:column="25"/></operator> <name><name pos:line="18" pos:column="26">b<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">subtype<pos:position pos:line="18" pos:column="36"/></name></name><operator pos:line="18" pos:column="36">,<pos:position pos:line="18" pos:column="37"/></operator> <name><name pos:line="18" pos:column="38">a<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">major<pos:position pos:line="18" pos:column="46"/></name></name><operator pos:line="18" pos:column="46">,<pos:position pos:line="18" pos:column="47"/></operator> <name><name pos:line="18" pos:column="48">a<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">minor<pos:position pos:line="18" pos:column="56"/></name></name><operator pos:line="18" pos:column="56">,<pos:position pos:line="18" pos:column="57"/></operator> <name><name pos:line="18" pos:column="58">a<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">-&gt;<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="61">major_int<pos:position pos:line="18" pos:column="70"/></name></name><operator pos:line="18" pos:column="70">)<pos:position pos:line="18" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="73"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">a<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">major_int<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">==<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">TYPEANY<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">||<pos:position pos:line="19" pos:column="36"/></operator> <name><name pos:line="19" pos:column="37">a<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">-&gt;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="40">major_int<pos:position pos:line="19" pos:column="49"/></name></name> <operator pos:line="19" pos:column="50">==<pos:position pos:line="19" pos:column="52"/></operator> <name><name pos:line="19" pos:column="53">b<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">-&gt;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="56">type<pos:position pos:line="19" pos:column="60"/></name></name><operator pos:line="19" pos:column="60">)<pos:position pos:line="19" pos:column="61"/></operator> <operator pos:line="19" pos:column="62">&amp;&amp;<pos:position pos:line="19" pos:column="72"/></operator>
	<operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><call><name pos:line="20" pos:column="10">regexec<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><operator pos:line="20" pos:column="18">&amp;<pos:position pos:line="20" pos:column="23"/></operator><name><name pos:line="20" pos:column="19">a<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">minor_rx<pos:position pos:line="20" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="32">b<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">subtype<pos:position pos:line="20" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="44">0<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">NULL<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="53">0<pos:position pos:line="20" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="56"/></condition><then pos:line="20" pos:column="56">
    <block pos:line="21" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">dprint<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><literal type="number" pos:line="22" pos:column="14">5<pos:position pos:line="22" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="17">(<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">debugfile<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">,<pos:position pos:line="22" pos:column="28"/></operator> <literal type="string" pos:line="22" pos:column="29">"yes\n"<pos:position pos:line="22" pos:column="36"/></literal><operator pos:line="22" pos:column="36">)<pos:position pos:line="22" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">dprint<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><literal type="number" pos:line="27" pos:column="14">5<pos:position pos:line="27" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="17">(<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">debugfile<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">,<pos:position pos:line="27" pos:column="28"/></operator> <literal type="string" pos:line="27" pos:column="29">"no\n"<pos:position pos:line="27" pos:column="35"/></literal><operator pos:line="27" pos:column="35">)<pos:position pos:line="27" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>
  }<pos:position pos:line="29" pos:column="4"/></block></for>

  <return pos:line="31" pos:column="3">return <expr><literal type="number" pos:line="31" pos:column="10">0<pos:position pos:line="31" pos:column="11"/></literal></expr>;<pos:position pos:line="31" pos:column="12"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

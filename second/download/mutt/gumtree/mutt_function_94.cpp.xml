<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_94.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_write_one_header<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">FILE<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">fp<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">tag<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">value<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">pfx<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">wraplen<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">flags<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">p<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><operator pos:line="4" pos:column="13">(<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">char<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></operator><operator pos:line="4" pos:column="20">)<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">value<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="29">last<pos:position pos:line="4" pos:column="33"/></name></decl>, <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="36">line<pos:position pos:line="4" pos:column="40"/></name></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">max<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">w<pos:position pos:line="5" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">rc<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><operator pos:line="5" pos:column="24">-<pos:position pos:line="5" pos:column="25"/></operator><literal type="number" pos:line="5" pos:column="25">1<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">pfxw<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><call><name pos:line="6" pos:column="14">mutt_strwidth<pos:position pos:line="6" pos:column="27"/></name> <argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">pfx<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">v<pos:position pos:line="7" pos:column="10"/></name> <init pos:line="7" pos:column="11">= <expr><call><name pos:line="7" pos:column="13">safe_strdup<pos:position pos:line="7" pos:column="24"/></name> <argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">value<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><operator pos:line="9" pos:column="8">(<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">flags<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&amp;<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="17">CH_DISPLAY<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="29">||<pos:position pos:line="9" pos:column="31"/></operator> <call><name pos:line="9" pos:column="32">option<pos:position pos:line="9" pos:column="38"/></name> <argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">OPTWEED<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">v<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">unfold_header<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">v<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* when not displaying, use sane wrap value */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><operator pos:line="13" pos:column="8">(<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">flags<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&amp;<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="17">CH_DISPLAY<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29">
  <block pos:line="14" pos:column="3">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">WrapHeaders<pos:position pos:line="15" pos:column="20"/></name> <argument_list type="generic" pos:line="15" pos:column="21">&lt; <argument><expr><literal type="number" pos:line="15" pos:column="23">78<pos:position pos:line="15" pos:column="25"/></literal> <operator pos:line="15" pos:column="26">||<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">WrapHeaders<pos:position pos:line="15" pos:column="40"/></name></expr></argument> &gt;<pos:position pos:line="15" pos:column="45"/></argument_list></name> <literal type="number" pos:line="15" pos:column="43">998<pos:position pos:line="15" pos:column="46"/></literal></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">wraplen<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">78<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="7">wraplen<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">WrapHeaders<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt></block></else></if>
  }<pos:position pos:line="19" pos:column="4"/></block></then>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><name pos:line="20" pos:column="12">wraplen<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&lt;=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal> <operator pos:line="20" pos:column="25">||<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="28">wraplen<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">&gt;<pos:position pos:line="20" pos:column="40"/></operator> <name pos:line="20" pos:column="38">COLS<pos:position pos:line="20" pos:column="42"/></name></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">wraplen<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">COLS<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt></block></then></if></elseif></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">tag<pos:position pos:line="23" pos:column="10"/></name></expr>)<pos:position pos:line="23" pos:column="11"/></condition><then pos:line="23" pos:column="11">
  <block pos:line="24" pos:column="3">{
    <comment type="block" pos:line="25" pos:column="5">/* if header is short enough, simply print it */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">flags<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">&amp;<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="19">CH_DISPLAY<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator> <operator pos:line="26" pos:column="31">&amp;&amp;<pos:position pos:line="26" pos:column="41"/></operator> <call><name pos:line="26" pos:column="34">mutt_strwidth<pos:position pos:line="26" pos:column="47"/></name> <argument_list pos:line="26" pos:column="48">(<argument><expr><name pos:line="26" pos:column="49">tag<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call> <operator pos:line="26" pos:column="54">+<pos:position pos:line="26" pos:column="55"/></operator> <literal type="number" pos:line="26" pos:column="56">2<pos:position pos:line="26" pos:column="57"/></literal> <operator pos:line="26" pos:column="58">+<pos:position pos:line="26" pos:column="59"/></operator> <name pos:line="26" pos:column="60">pfxw<pos:position pos:line="26" pos:column="64"/></name> <operator pos:line="26" pos:column="65">+<pos:position pos:line="26" pos:column="66"/></operator>
	<call><name pos:line="27" pos:column="9">mutt_strwidth<pos:position pos:line="27" pos:column="22"/></name> <argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">v<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call> <operator pos:line="27" pos:column="27">&lt;=<pos:position pos:line="27" pos:column="32"/></operator> <name pos:line="27" pos:column="30">wraplen<pos:position pos:line="27" pos:column="37"/></name></expr>)<pos:position pos:line="27" pos:column="38"/></condition><then pos:line="27" pos:column="38">
    <block pos:line="28" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">dprint<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><literal type="number" pos:line="29" pos:column="14">4<pos:position pos:line="29" pos:column="15"/></literal></expr></argument>,<argument><expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">debugfile<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">,<pos:position pos:line="29" pos:column="27"/></operator><literal type="string" pos:line="29" pos:column="27">"mwoh: buf[%s%s: %s] is short enough\n"<pos:position pos:line="29" pos:column="66"/></literal><operator pos:line="29" pos:column="66">,<pos:position pos:line="29" pos:column="67"/></operator>
		<call><name pos:line="30" pos:column="17">NONULL<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">pfx<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call><operator pos:line="30" pos:column="28">,<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">tag<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">,<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">v<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">)<pos:position pos:line="30" pos:column="37"/></operator></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><call><name pos:line="31" pos:column="11">fprintf<pos:position pos:line="31" pos:column="18"/></name> <argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">fp<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="24">"%s%s: %s\n"<pos:position pos:line="31" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="38">NONULL<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><name pos:line="31" pos:column="45">pfx<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="51">tag<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="56">v<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call> <operator pos:line="31" pos:column="59">&lt;=<pos:position pos:line="31" pos:column="64"/></operator> <literal type="number" pos:line="31" pos:column="62">0<pos:position pos:line="31" pos:column="63"/></literal></expr>)<pos:position pos:line="31" pos:column="64"/></condition><then pos:line="31" pos:column="64">
	<block type="pseudo"><goto pos:line="32" pos:column="9">goto <name pos:line="32" pos:column="14">out<pos:position pos:line="32" pos:column="17"/></name>;<pos:position pos:line="32" pos:column="18"/></goto></block></then></if>
      <expr_stmt><expr><name pos:line="33" pos:column="7">rc<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <literal type="number" pos:line="33" pos:column="12">0<pos:position pos:line="33" pos:column="13"/></literal></expr>;<pos:position pos:line="33" pos:column="14"/></expr_stmt>
      <goto pos:line="34" pos:column="7">goto <name pos:line="34" pos:column="12">out<pos:position pos:line="34" pos:column="15"/></name>;<pos:position pos:line="34" pos:column="16"/></goto>
    }<pos:position pos:line="35" pos:column="6"/></block></then>
    <else pos:line="36" pos:column="5">else
    <block pos:line="37" pos:column="5">{
      <expr_stmt><expr><name pos:line="38" pos:column="7">rc<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">fold_one_header<pos:position pos:line="38" pos:column="27"/></name> <argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">fp<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="33">tag<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="38">v<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">pfx<pos:position pos:line="38" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">wraplen<pos:position pos:line="38" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="55">flags<pos:position pos:line="38" pos:column="60"/></name></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
      <goto pos:line="39" pos:column="7">goto <name pos:line="39" pos:column="12">out<pos:position pos:line="39" pos:column="15"/></name>;<pos:position pos:line="39" pos:column="16"/></goto>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="43" pos:column="3">p<pos:position pos:line="43" pos:column="4"/></name> <operator pos:line="43" pos:column="5">=<pos:position pos:line="43" pos:column="6"/></operator> <name pos:line="43" pos:column="7">last<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <name pos:line="43" pos:column="14">line<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <operator pos:line="43" pos:column="21">(<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">char<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">*<pos:position pos:line="43" pos:column="28"/></operator><operator pos:line="43" pos:column="28">)<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">v<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
  <while pos:line="44" pos:column="3">while <condition pos:line="44" pos:column="9">(<expr><name pos:line="44" pos:column="10">p<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">&amp;&amp;<pos:position pos:line="44" pos:column="22"/></operator> <operator pos:line="44" pos:column="15">*<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">p<pos:position pos:line="44" pos:column="17"/></name></expr>)<pos:position pos:line="44" pos:column="18"/></condition>
  <block pos:line="45" pos:column="3">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">p<pos:position pos:line="46" pos:column="6"/></name> <operator pos:line="46" pos:column="7">=<pos:position pos:line="46" pos:column="8"/></operator> <call><name pos:line="46" pos:column="9">strchr<pos:position pos:line="46" pos:column="15"/></name> <argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">p<pos:position pos:line="46" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="46" pos:column="20">'\n'<pos:position pos:line="46" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* find maximum line width in current header */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">p<pos:position pos:line="49" pos:column="10"/></name></expr>)<pos:position pos:line="49" pos:column="11"/></condition><then pos:line="49" pos:column="11">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="50" pos:column="7">*<pos:position pos:line="50" pos:column="8"/></operator><name pos:line="50" pos:column="8">p<pos:position pos:line="50" pos:column="9"/></name> <operator pos:line="50" pos:column="10">=<pos:position pos:line="50" pos:column="11"/></operator> <literal type="number" pos:line="50" pos:column="12">0<pos:position pos:line="50" pos:column="13"/></literal></expr>;<pos:position pos:line="50" pos:column="14"/></expr_stmt></block></then></if>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">(<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">w<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">my_width<pos:position pos:line="51" pos:column="22"/></name> <argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">line<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="30">0<pos:position pos:line="51" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="33">flags<pos:position pos:line="51" pos:column="38"/></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call><operator pos:line="51" pos:column="39">)<pos:position pos:line="51" pos:column="40"/></operator> <operator pos:line="51" pos:column="41">&gt;<pos:position pos:line="51" pos:column="45"/></operator> <name pos:line="51" pos:column="43">max<pos:position pos:line="51" pos:column="46"/></name></expr>)<pos:position pos:line="51" pos:column="47"/></condition><then pos:line="51" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="7">max<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <name pos:line="52" pos:column="13">w<pos:position pos:line="52" pos:column="14"/></name></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt></block></then></if>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">p<pos:position pos:line="53" pos:column="10"/></name></expr>)<pos:position pos:line="53" pos:column="11"/></condition><then pos:line="53" pos:column="11">
      <block type="pseudo"><expr_stmt><expr><operator pos:line="54" pos:column="7">*<pos:position pos:line="54" pos:column="8"/></operator><name pos:line="54" pos:column="8">p<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">=<pos:position pos:line="54" pos:column="11"/></operator> <literal type="char" pos:line="54" pos:column="12">'\n'<pos:position pos:line="54" pos:column="16"/></literal></expr>;<pos:position pos:line="54" pos:column="17"/></expr_stmt></block></then></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">!<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">p<pos:position pos:line="56" pos:column="11"/></name></expr>)<pos:position pos:line="56" pos:column="12"/></condition><then pos:line="56" pos:column="12">
      <block type="pseudo"><break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="59" pos:column="5">line<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <operator pos:line="59" pos:column="12">++<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">p<pos:position pos:line="59" pos:column="15"/></name></expr>;<pos:position pos:line="59" pos:column="16"/></expr_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">*<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">p<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">!=<pos:position pos:line="60" pos:column="14"/></operator> <literal type="char" pos:line="60" pos:column="15">' '<pos:position pos:line="60" pos:column="18"/></literal> <operator pos:line="60" pos:column="19">&amp;&amp;<pos:position pos:line="60" pos:column="29"/></operator> <operator pos:line="60" pos:column="22">*<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="23">p<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">!=<pos:position pos:line="60" pos:column="27"/></operator> <literal type="char" pos:line="60" pos:column="28">'\t'<pos:position pos:line="60" pos:column="32"/></literal></expr>)<pos:position pos:line="60" pos:column="33"/></condition><then pos:line="60" pos:column="33">
    <block pos:line="61" pos:column="5">{
      <if pos:line="62" pos:column="7">if <condition pos:line="62" pos:column="10">(<expr><call><name pos:line="62" pos:column="11">write_one_header<pos:position pos:line="62" pos:column="27"/></name> <argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">fp<pos:position pos:line="62" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="33">pfxw<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="39">max<pos:position pos:line="62" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="44">wraplen<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">pfx<pos:position pos:line="62" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="58">last<pos:position pos:line="62" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="64">p<pos:position pos:line="62" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="67">flags<pos:position pos:line="62" pos:column="72"/></name></expr></argument>)<pos:position pos:line="62" pos:column="73"/></argument_list></call> <operator pos:line="62" pos:column="74">&lt;<pos:position pos:line="62" pos:column="78"/></operator> <literal type="number" pos:line="62" pos:column="76">0<pos:position pos:line="62" pos:column="77"/></literal></expr>)<pos:position pos:line="62" pos:column="78"/></condition><then pos:line="62" pos:column="78">
	<block type="pseudo"><goto pos:line="63" pos:column="9">goto <name pos:line="63" pos:column="14">out<pos:position pos:line="63" pos:column="17"/></name>;<pos:position pos:line="63" pos:column="18"/></goto></block></then></if>
      <expr_stmt><expr><name pos:line="64" pos:column="7">last<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <name pos:line="64" pos:column="14">p<pos:position pos:line="64" pos:column="15"/></name></expr>;<pos:position pos:line="64" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="65" pos:column="7">max<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">=<pos:position pos:line="65" pos:column="12"/></operator> <literal type="number" pos:line="65" pos:column="13">0<pos:position pos:line="65" pos:column="14"/></literal></expr>;<pos:position pos:line="65" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
  }<pos:position pos:line="67" pos:column="4"/></block></while>

  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name pos:line="69" pos:column="7">last<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">&amp;&amp;<pos:position pos:line="69" pos:column="22"/></operator> <operator pos:line="69" pos:column="15">*<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">last<pos:position pos:line="69" pos:column="20"/></name></expr>)<pos:position pos:line="69" pos:column="21"/></condition><then pos:line="69" pos:column="21">
    <block type="pseudo"><if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><call><name pos:line="70" pos:column="9">write_one_header<pos:position pos:line="70" pos:column="25"/></name> <argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">fp<pos:position pos:line="70" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="31">pfxw<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="37">max<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="42">wraplen<pos:position pos:line="70" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="51">pfx<pos:position pos:line="70" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="56">last<pos:position pos:line="70" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="62">p<pos:position pos:line="70" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="65">flags<pos:position pos:line="70" pos:column="70"/></name></expr></argument>)<pos:position pos:line="70" pos:column="71"/></argument_list></call> <operator pos:line="70" pos:column="72">&lt;<pos:position pos:line="70" pos:column="76"/></operator> <literal type="number" pos:line="70" pos:column="74">0<pos:position pos:line="70" pos:column="75"/></literal></expr>)<pos:position pos:line="70" pos:column="76"/></condition><then pos:line="70" pos:column="76">
      <block type="pseudo"><goto pos:line="71" pos:column="7">goto <name pos:line="71" pos:column="12">out<pos:position pos:line="71" pos:column="15"/></name>;<pos:position pos:line="71" pos:column="16"/></goto></block></then></if></block></then></if>

  <expr_stmt><expr><name pos:line="73" pos:column="3">rc<pos:position pos:line="73" pos:column="5"/></name> <operator pos:line="73" pos:column="6">=<pos:position pos:line="73" pos:column="7"/></operator> <literal type="number" pos:line="73" pos:column="8">0<pos:position pos:line="73" pos:column="9"/></literal></expr>;<pos:position pos:line="73" pos:column="10"/></expr_stmt>

<label><name pos:line="75" pos:column="1">out<pos:position pos:line="75" pos:column="4"/></name>:<pos:position pos:line="75" pos:column="5"/></label>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">FREE<pos:position pos:line="76" pos:column="7"/></name> <argument_list pos:line="76" pos:column="8">(<argument><expr><operator pos:line="76" pos:column="9">&amp;<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="10">v<pos:position pos:line="76" pos:column="11"/></name></expr></argument>)<pos:position pos:line="76" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="13"/></expr_stmt>
  <return pos:line="77" pos:column="3">return <expr><name pos:line="77" pos:column="10">rc<pos:position pos:line="77" pos:column="12"/></name></expr>;<pos:position pos:line="77" pos:column="13"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

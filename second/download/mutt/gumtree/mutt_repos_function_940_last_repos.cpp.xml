<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_940_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_convert_string<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier><modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">ps<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">from<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">to<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name></type> <name pos:line="1" pos:column="75">flags<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">iconv_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">cd<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ICONV_CONST<pos:position pos:line="4" pos:column="14"/></name> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name><name pos:line="4" pos:column="21">repls<pos:position pos:line="4" pos:column="26"/></name><index pos:line="4" pos:column="26">[]<pos:position pos:line="4" pos:column="28"/></index></name> <init pos:line="4" pos:column="29">= <expr><block pos:line="4" pos:column="31">{ <expr><literal type="string" pos:line="4" pos:column="33">"\357\277\275"<pos:position pos:line="4" pos:column="47"/></literal></expr>, <expr><literal type="string" pos:line="4" pos:column="49">"?"<pos:position pos:line="4" pos:column="52"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="54">0<pos:position pos:line="4" pos:column="55"/></literal></expr> }<pos:position pos:line="4" pos:column="57"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">s<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">ps<pos:position pos:line="5" pos:column="16"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">s<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">||<pos:position pos:line="7" pos:column="12"/></operator> <operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">s<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">to<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">&amp;&amp;<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="13">from<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">&amp;&amp;<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">cd<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <call><name pos:line="10" pos:column="27">mutt_iconv_open<pos:position pos:line="10" pos:column="42"/></name> <argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">to<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">from<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="54">flags<pos:position pos:line="10" pos:column="59"/></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call><operator pos:line="10" pos:column="60">)<pos:position pos:line="10" pos:column="61"/></operator> <operator pos:line="10" pos:column="62">!=<pos:position pos:line="10" pos:column="64"/></operator> <operator pos:line="10" pos:column="65">(<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="66">iconv_t<pos:position pos:line="10" pos:column="73"/></name><operator pos:line="10" pos:column="73">)<pos:position pos:line="10" pos:column="74"/></operator><operator pos:line="10" pos:column="74">-<pos:position pos:line="10" pos:column="75"/></operator><literal type="number" pos:line="10" pos:column="75">1<pos:position pos:line="10" pos:column="76"/></literal></expr>)<pos:position pos:line="10" pos:column="77"/></condition><then pos:line="10" pos:column="77">
  <block pos:line="11" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">len<pos:position pos:line="12" pos:column="12"/></name></decl>;<pos:position pos:line="12" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">ICONV_CONST<pos:position pos:line="13" pos:column="16"/></name> <name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">ib<pos:position pos:line="13" pos:column="25"/></name></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">buf<pos:position pos:line="14" pos:column="14"/></name></decl>, <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="14" pos:column="17">ob<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">size_t<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">ibl<pos:position pos:line="15" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="17">obl<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">ICONV_CONST<pos:position pos:line="16" pos:column="16"/></name> <name pos:line="16" pos:column="17">char<pos:position pos:line="16" pos:column="21"/></name> <modifier pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></modifier><modifier pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></modifier></type><name pos:line="16" pos:column="24">inrepls<pos:position pos:line="16" pos:column="31"/></name> <init pos:line="16" pos:column="32">= <expr><literal type="number" pos:line="16" pos:column="34">0<pos:position pos:line="16" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">outrepl<pos:position pos:line="17" pos:column="18"/></name> <init pos:line="17" pos:column="19">= <expr><literal type="number" pos:line="17" pos:column="21">0<pos:position pos:line="17" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">mutt_is_utf8<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">to<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="7">outrepl<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="string" pos:line="20" pos:column="17">"\357\277\275"<pos:position pos:line="20" pos:column="31"/></literal></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt></block></then>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><call><name pos:line="21" pos:column="14">mutt_is_utf8<pos:position pos:line="21" pos:column="26"/></name> <argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">from<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">inrepls<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">repls<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt></block></then></if></elseif>
    <else pos:line="23" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">outrepl<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <literal type="string" pos:line="24" pos:column="17">"?"<pos:position pos:line="24" pos:column="20"/></literal></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt></block></else></if>
      
    <expr_stmt><expr><name pos:line="26" pos:column="5">len<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">strlen<pos:position pos:line="26" pos:column="17"/></name> <argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">s<pos:position pos:line="26" pos:column="20"/></name></expr></argument>)<pos:position pos:line="26" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">ib<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <name pos:line="27" pos:column="10">s<pos:position pos:line="27" pos:column="11"/></name></expr><operator pos:line="27" pos:column="11">,<pos:position pos:line="27" pos:column="12"/></operator> <expr><name pos:line="27" pos:column="13">ibl<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">len<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">+<pos:position pos:line="27" pos:column="24"/></operator> <literal type="number" pos:line="27" pos:column="25">1<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">obl<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <name pos:line="28" pos:column="11">MB_LEN_MAX<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">ibl<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">ob<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <name pos:line="29" pos:column="10">buf<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">safe_malloc<pos:position pos:line="29" pos:column="27"/></name> <argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">obl<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">+<pos:position pos:line="29" pos:column="34"/></operator> <literal type="number" pos:line="29" pos:column="35">1<pos:position pos:line="29" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">mutt_iconv<pos:position pos:line="31" pos:column="15"/></name> <argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">cd<pos:position pos:line="31" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="21">&amp;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="22">ib<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="26">&amp;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="27">ibl<pos:position pos:line="31" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="32">&amp;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="33">ob<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="37">&amp;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="38">obl<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="43">inrepls<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">outrepl<pos:position pos:line="31" pos:column="59"/></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">iconv_close<pos:position pos:line="32" pos:column="16"/></name> <argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">cd<pos:position pos:line="32" pos:column="20"/></name></expr></argument>)<pos:position pos:line="32" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="34" pos:column="5">*<pos:position pos:line="34" pos:column="6"/></operator><name pos:line="34" pos:column="6">ob<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <literal type="char" pos:line="34" pos:column="11">'\0'<pos:position pos:line="34" pos:column="15"/></literal></expr>;<pos:position pos:line="34" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">FREE<pos:position pos:line="36" pos:column="9"/></name> <argument_list pos:line="36" pos:column="10">(<argument><expr><name pos:line="36" pos:column="11">ps<pos:position pos:line="36" pos:column="13"/></name></expr></argument>)<pos:position pos:line="36" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="15"/></expr_stmt>		<comment type="block" pos:line="36" pos:column="25">/* __FREE_CHECKED__ */</comment>
    <expr_stmt><expr><operator pos:line="37" pos:column="5">*<pos:position pos:line="37" pos:column="6"/></operator><name pos:line="37" pos:column="6">ps<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <name pos:line="37" pos:column="11">buf<pos:position pos:line="37" pos:column="14"/></name></expr>;<pos:position pos:line="37" pos:column="15"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">mutt_str_adjust<pos:position pos:line="39" pos:column="20"/></name> <argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">ps<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><literal type="number" pos:line="40" pos:column="12">0<pos:position pos:line="40" pos:column="13"/></literal></expr>;<pos:position pos:line="40" pos:column="14"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then>
  <else pos:line="42" pos:column="3">else
    <block type="pseudo"><return pos:line="43" pos:column="5">return <expr><operator pos:line="43" pos:column="12">-<pos:position pos:line="43" pos:column="13"/></operator><literal type="number" pos:line="43" pos:column="13">1<pos:position pos:line="43" pos:column="14"/></literal></expr>;<pos:position pos:line="43" pos:column="15"/></return></block></else></if>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

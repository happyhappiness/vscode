<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_210_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_group_context_destroy<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">group_context_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ctx<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">group_context_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">p<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init pos:line="4" pos:column="8">;<pos:position pos:line="4" pos:column="9"/></init> <condition><expr><operator pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">ctx<pos:position pos:line="4" pos:column="14"/></name></expr>;<pos:position pos:line="4" pos:column="15"/></condition> <incr><expr><operator pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">ctx<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">=<pos:position pos:line="4" pos:column="22"/></operator> <name pos:line="4" pos:column="23">p<pos:position pos:line="4" pos:column="24"/></name></expr></incr>)<pos:position pos:line="4" pos:column="25"/></control>
  <block pos:line="5" pos:column="3">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">p<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <name><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">ctx<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">)<pos:position pos:line="6" pos:column="15"/></operator><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">next<pos:position pos:line="6" pos:column="21"/></name></name></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">FREE<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">ctx<pos:position pos:line="7" pos:column="14"/></name></expr></argument>)<pos:position pos:line="7" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="16"/></expr_stmt>		<comment type="block" pos:line="7" pos:column="25">/* __FREE_CHECKED__ */</comment>
  }<pos:position pos:line="8" pos:column="4"/></block></for>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

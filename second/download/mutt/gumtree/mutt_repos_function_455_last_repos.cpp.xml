<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_455_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BUFFY<pos:position pos:line="1" pos:column="13"/></name><modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type> <name pos:line="1" pos:column="15">buffy_get<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BUFFY<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">cur<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">epath<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">path<pos:position pos:line="6" pos:column="12"/></name></expr>)<pos:position pos:line="6" pos:column="13"/></condition><then pos:line="6" pos:column="13">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">epath<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">safe_strdup<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">path<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">mutt_expand_path<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">epath<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="27">mutt_strlen<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">epath<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>

  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><expr><name pos:line="12" pos:column="8">cur<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">Incoming<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></init> <condition><expr><name pos:line="12" pos:column="24">cur<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></condition> <incr><expr><name pos:line="12" pos:column="29">cur<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <name><name pos:line="12" pos:column="35">cur<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">next<pos:position pos:line="12" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="45"/></control>
  <block pos:line="13" pos:column="3">{
    <comment type="block" pos:line="14" pos:column="5">/* must be done late because e.g. IMAP delimiter may change */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">mutt_expand_path<pos:position pos:line="15" pos:column="21"/></name> <argument_list pos:line="15" pos:column="22">(<argument><expr><name><name pos:line="15" pos:column="23">cur<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">path<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="34">sizeof <argument_list pos:line="15" pos:column="41">(<argument><expr><name><name pos:line="15" pos:column="42">cur<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">path<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name pos:line="16" pos:column="10">mutt_strcmp<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name><name pos:line="16" pos:column="22">cur<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">path<pos:position pos:line="16" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">path<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39">
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">FREE<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><operator pos:line="18" pos:column="13">&amp;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="14">epath<pos:position pos:line="18" pos:column="19"/></name></expr></argument>)<pos:position pos:line="18" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
      <return pos:line="19" pos:column="7">return <expr><name pos:line="19" pos:column="14">cur<pos:position pos:line="19" pos:column="17"/></name></expr>;<pos:position pos:line="19" pos:column="18"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">FREE<pos:position pos:line="23" pos:column="7"/></name> <argument_list pos:line="23" pos:column="8">(<argument><expr><operator pos:line="23" pos:column="9">&amp;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="10">epath<pos:position pos:line="23" pos:column="15"/></name></expr></argument>)<pos:position pos:line="23" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
  <return pos:line="24" pos:column="3">return <expr><name pos:line="24" pos:column="10">NULL<pos:position pos:line="24" pos:column="14"/></name></expr>;<pos:position pos:line="24" pos:column="15"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

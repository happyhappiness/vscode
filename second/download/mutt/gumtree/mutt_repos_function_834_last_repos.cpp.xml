<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_834_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">examine_directory<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">MUTTMENU<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">menu<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">browser_state<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">state<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">d<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">prefix<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">s<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">DIR<pos:position pos:line="5" pos:column="6"/></name> <modifier pos:line="5" pos:column="7">*<pos:position pos:line="5" pos:column="8"/></modifier></type><name pos:line="5" pos:column="8">dp<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">dirent<pos:position pos:line="6" pos:column="16"/></name></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">de<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">buffer<pos:position pos:line="7" pos:column="14"/></name><index pos:line="7" pos:column="14">[<expr><name pos:line="7" pos:column="15">_POSIX_PATH_MAX<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">+<pos:position pos:line="7" pos:column="32"/></operator> <name pos:line="7" pos:column="33">SHORT_STRING<pos:position pos:line="7" pos:column="45"/></name></expr>]<pos:position pos:line="7" pos:column="46"/></index></name></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">BUFFY<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">tmp<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

  <while pos:line="10" pos:column="3">while <condition pos:line="10" pos:column="9">(<expr><call><name pos:line="10" pos:column="10">stat<pos:position pos:line="10" pos:column="14"/></name> <argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">d<pos:position pos:line="10" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="19">&amp;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="20">s<pos:position pos:line="10" pos:column="21"/></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <operator pos:line="10" pos:column="26">-<pos:position pos:line="10" pos:column="27"/></operator><literal type="number" pos:line="10" pos:column="27">1<pos:position pos:line="10" pos:column="28"/></literal></expr>)<pos:position pos:line="10" pos:column="29"/></condition>
  <block pos:line="11" pos:column="3">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">errno<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">==<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">ENOENT<pos:position pos:line="12" pos:column="24"/></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25">
    <block pos:line="13" pos:column="5">{
      <comment type="block" pos:line="14" pos:column="7">/* The last used directory is deleted, try to use the parent dir. */</comment>
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">char<pos:position pos:line="15" pos:column="11"/></name> <modifier pos:line="15" pos:column="12">*<pos:position pos:line="15" pos:column="13"/></modifier></type><name pos:line="15" pos:column="13">c<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><call><name pos:line="15" pos:column="17">strrchr<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">d<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="29">'/'<pos:position pos:line="15" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>

      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">c<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">&amp;&amp;<pos:position pos:line="17" pos:column="23"/></operator> <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">c<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&gt;<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="21">d<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24">
      <block pos:line="18" pos:column="7">{
	<expr_stmt><expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">c<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
	<continue pos:line="20" pos:column="9">continue;<pos:position pos:line="20" pos:column="18"/></continue>
      }<pos:position pos:line="21" pos:column="8"/></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">mutt_perror<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">d<pos:position pos:line="23" pos:column="19"/></name></expr></argument>)<pos:position pos:line="23" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><operator pos:line="24" pos:column="13">-<pos:position pos:line="24" pos:column="14"/></operator><literal type="number" pos:line="24" pos:column="14">1<pos:position pos:line="24" pos:column="15"/></literal><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator></expr>;<pos:position pos:line="24" pos:column="17"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></while>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">!<pos:position pos:line="27" pos:column="8"/></operator><call><name pos:line="27" pos:column="8">S_ISDIR<pos:position pos:line="27" pos:column="15"/></name> <argument_list pos:line="27" pos:column="16">(<argument><expr><name><name pos:line="27" pos:column="17">s<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">st_mode<pos:position pos:line="27" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28">
  <block pos:line="28" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">mutt_error<pos:position pos:line="29" pos:column="15"/></name> <argument_list pos:line="29" pos:column="16">(<argument><expr><call><name pos:line="29" pos:column="17">_<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><literal type="string" pos:line="29" pos:column="19">"%s is not a directory."<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">d<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal><operator pos:line="30" pos:column="15">)<pos:position pos:line="30" pos:column="16"/></operator></expr>;<pos:position pos:line="30" pos:column="17"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">mutt_buffy_check<pos:position pos:line="33" pos:column="19"/></name> <argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">(<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">dp<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">opendir<pos:position pos:line="35" pos:column="20"/></name> <argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">d<pos:position pos:line="35" pos:column="23"/></name></expr></argument>)<pos:position pos:line="35" pos:column="24"/></argument_list></call><operator pos:line="35" pos:column="24">)<pos:position pos:line="35" pos:column="25"/></operator> <operator pos:line="35" pos:column="26">==<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="29">NULL<pos:position pos:line="35" pos:column="33"/></name></expr>)<pos:position pos:line="35" pos:column="34"/></condition><then pos:line="35" pos:column="34">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">mutt_perror<pos:position pos:line="37" pos:column="16"/></name> <argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">d<pos:position pos:line="37" pos:column="19"/></name></expr></argument>)<pos:position pos:line="37" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><operator pos:line="38" pos:column="13">-<pos:position pos:line="38" pos:column="14"/></operator><literal type="number" pos:line="38" pos:column="14">1<pos:position pos:line="38" pos:column="15"/></literal><operator pos:line="38" pos:column="15">)<pos:position pos:line="38" pos:column="16"/></operator></expr>;<pos:position pos:line="38" pos:column="17"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">init_state<pos:position pos:line="41" pos:column="13"/></name> <argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">state<pos:position pos:line="41" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="22">menu<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>

  <while pos:line="43" pos:column="3">while <condition pos:line="43" pos:column="9">(<expr><operator pos:line="43" pos:column="10">(<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="11">de<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">readdir<pos:position pos:line="43" pos:column="23"/></name> <argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">dp<pos:position pos:line="43" pos:column="27"/></name></expr></argument>)<pos:position pos:line="43" pos:column="28"/></argument_list></call><operator pos:line="43" pos:column="28">)<pos:position pos:line="43" pos:column="29"/></operator> <operator pos:line="43" pos:column="30">!=<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="33">NULL<pos:position pos:line="43" pos:column="37"/></name></expr>)<pos:position pos:line="43" pos:column="38"/></condition>
  <block pos:line="44" pos:column="3">{
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name pos:line="45" pos:column="9">mutt_strcmp<pos:position pos:line="45" pos:column="20"/></name> <argument_list pos:line="45" pos:column="21">(<argument><expr><name><name pos:line="45" pos:column="22">de<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">d_name<pos:position pos:line="45" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="34">"."<pos:position pos:line="45" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call> <operator pos:line="45" pos:column="39">==<pos:position pos:line="45" pos:column="41"/></operator> <literal type="number" pos:line="45" pos:column="42">0<pos:position pos:line="45" pos:column="43"/></literal></expr>)<pos:position pos:line="45" pos:column="44"/></condition><then pos:line="45" pos:column="44">
      <block type="pseudo"><continue pos:line="46" pos:column="7">continue;<pos:position pos:line="46" pos:column="16"/></continue></block></then></if>    <comment type="block" pos:line="46" pos:column="20">/* we don't need . */</comment>
    
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">prefix<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">&amp;&amp;<pos:position pos:line="48" pos:column="26"/></operator> <operator pos:line="48" pos:column="19">*<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">prefix<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">&amp;&amp;<pos:position pos:line="48" pos:column="37"/></operator> <call><name pos:line="48" pos:column="30">mutt_strncmp<pos:position pos:line="48" pos:column="42"/></name> <argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">prefix<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="52">de<pos:position pos:line="48" pos:column="54"/></name><operator pos:line="48" pos:column="54">-&gt;<pos:position pos:line="48" pos:column="59"/></operator><name pos:line="48" pos:column="56">d_name<pos:position pos:line="48" pos:column="62"/></name></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="64">mutt_strlen<pos:position pos:line="48" pos:column="75"/></name> <argument_list pos:line="48" pos:column="76">(<argument><expr><name pos:line="48" pos:column="77">prefix<pos:position pos:line="48" pos:column="83"/></name></expr></argument>)<pos:position pos:line="48" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="85"/></argument_list></call> <operator pos:line="48" pos:column="86">!=<pos:position pos:line="48" pos:column="88"/></operator> <literal type="number" pos:line="48" pos:column="89">0<pos:position pos:line="48" pos:column="90"/></literal></expr>)<pos:position pos:line="48" pos:column="91"/></condition><then pos:line="48" pos:column="91">
      <block type="pseudo"><continue pos:line="49" pos:column="7">continue;<pos:position pos:line="49" pos:column="16"/></continue></block></then></if>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">!<pos:position pos:line="50" pos:column="10"/></operator><operator pos:line="50" pos:column="10">(<pos:position pos:line="50" pos:column="11"/></operator><operator pos:line="50" pos:column="11">(<pos:position pos:line="50" pos:column="12"/></operator><call><name pos:line="50" pos:column="12">regexec<pos:position pos:line="50" pos:column="19"/></name> <argument_list pos:line="50" pos:column="20">(<argument><expr><name><name pos:line="50" pos:column="21">Mask<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">.<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="26">rx<pos:position pos:line="50" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="30">de<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">-&gt;<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="34">d_name<pos:position pos:line="50" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="42">0<pos:position pos:line="50" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="45">NULL<pos:position pos:line="50" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="51">0<pos:position pos:line="50" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call> <operator pos:line="50" pos:column="54">==<pos:position pos:line="50" pos:column="56"/></operator> <literal type="number" pos:line="50" pos:column="57">0<pos:position pos:line="50" pos:column="58"/></literal><operator pos:line="50" pos:column="58">)<pos:position pos:line="50" pos:column="59"/></operator> <operator pos:line="50" pos:column="60">^<pos:position pos:line="50" pos:column="61"/></operator> <name><name pos:line="50" pos:column="62">Mask<pos:position pos:line="50" pos:column="66"/></name><operator pos:line="50" pos:column="66">.<pos:position pos:line="50" pos:column="67"/></operator></name><operator pos:line="50" pos:column="67">not<pos:position pos:line="50" pos:column="70"/></operator><operator pos:line="50" pos:column="70">)<pos:position pos:line="50" pos:column="71"/></operator></expr>)<pos:position pos:line="50" pos:column="72"/></condition><then pos:line="50" pos:column="72">
      <block type="pseudo"><continue pos:line="51" pos:column="7">continue;<pos:position pos:line="51" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">mutt_concat_path<pos:position pos:line="53" pos:column="21"/></name> <argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">buffer<pos:position pos:line="53" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="31">d<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="34">de<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">-&gt;<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="38">d_name<pos:position pos:line="53" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="46">sizeof <argument_list pos:line="53" pos:column="53">(<argument><expr><name pos:line="53" pos:column="54">buffer<pos:position pos:line="53" pos:column="60"/></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><call><name pos:line="54" pos:column="9">lstat<pos:position pos:line="54" pos:column="14"/></name> <argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">buffer<pos:position pos:line="54" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="24">&amp;<pos:position pos:line="54" pos:column="29"/></operator><name pos:line="54" pos:column="25">s<pos:position pos:line="54" pos:column="26"/></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call> <operator pos:line="54" pos:column="28">==<pos:position pos:line="54" pos:column="30"/></operator> <operator pos:line="54" pos:column="31">-<pos:position pos:line="54" pos:column="32"/></operator><literal type="number" pos:line="54" pos:column="32">1<pos:position pos:line="54" pos:column="33"/></literal></expr>)<pos:position pos:line="54" pos:column="34"/></condition><then pos:line="54" pos:column="34">
      <block type="pseudo"><continue pos:line="55" pos:column="7">continue;<pos:position pos:line="55" pos:column="16"/></continue></block></then></if>
    
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">(<pos:position pos:line="57" pos:column="10"/></operator><operator pos:line="57" pos:column="10">!<pos:position pos:line="57" pos:column="11"/></operator> <call><name pos:line="57" pos:column="12">S_ISREG<pos:position pos:line="57" pos:column="19"/></name> <argument_list pos:line="57" pos:column="20">(<argument><expr><name><name pos:line="57" pos:column="21">s<pos:position pos:line="57" pos:column="22"/></name><operator pos:line="57" pos:column="22">.<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">st_mode<pos:position pos:line="57" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="31"/></argument_list></call><operator pos:line="57" pos:column="31">)<pos:position pos:line="57" pos:column="32"/></operator> <operator pos:line="57" pos:column="33">&amp;&amp;<pos:position pos:line="57" pos:column="43"/></operator> <operator pos:line="57" pos:column="36">(<pos:position pos:line="57" pos:column="37"/></operator><operator pos:line="57" pos:column="37">!<pos:position pos:line="57" pos:column="38"/></operator> <call><name pos:line="57" pos:column="39">S_ISDIR<pos:position pos:line="57" pos:column="46"/></name> <argument_list pos:line="57" pos:column="47">(<argument><expr><name><name pos:line="57" pos:column="48">s<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">.<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="50">st_mode<pos:position pos:line="57" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="58"/></argument_list></call><operator pos:line="57" pos:column="58">)<pos:position pos:line="57" pos:column="59"/></operator> <operator pos:line="57" pos:column="60">&amp;&amp;<pos:position pos:line="57" pos:column="70"/></operator>
	<operator pos:line="58" pos:column="9">(<pos:position pos:line="58" pos:column="10"/></operator><operator pos:line="58" pos:column="10">!<pos:position pos:line="58" pos:column="11"/></operator> <call><name pos:line="58" pos:column="12">S_ISLNK<pos:position pos:line="58" pos:column="19"/></name> <argument_list pos:line="58" pos:column="20">(<argument><expr><name><name pos:line="58" pos:column="21">s<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">.<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">st_mode<pos:position pos:line="58" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="31"/></argument_list></call><operator pos:line="58" pos:column="31">)<pos:position pos:line="58" pos:column="32"/></operator></expr>)<pos:position pos:line="58" pos:column="33"/></condition><then pos:line="58" pos:column="33">
      <block type="pseudo"><continue pos:line="59" pos:column="7">continue;<pos:position pos:line="59" pos:column="16"/></continue></block></then></if>
    
    <expr_stmt><expr><name pos:line="61" pos:column="5">tmp<pos:position pos:line="61" pos:column="8"/></name> <operator pos:line="61" pos:column="9">=<pos:position pos:line="61" pos:column="10"/></operator> <name pos:line="61" pos:column="11">Incoming<pos:position pos:line="61" pos:column="19"/></name></expr>;<pos:position pos:line="61" pos:column="20"/></expr_stmt>
    <while pos:line="62" pos:column="5">while <condition pos:line="62" pos:column="11">(<expr><name pos:line="62" pos:column="12">tmp<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">&amp;&amp;<pos:position pos:line="62" pos:column="26"/></operator> <call><name pos:line="62" pos:column="19">mutt_strcmp<pos:position pos:line="62" pos:column="30"/></name> <argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">buffer<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="40">tmp<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">-&gt;<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="45">path<pos:position pos:line="62" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="51"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="7">tmp<pos:position pos:line="63" pos:column="10"/></name> <operator pos:line="63" pos:column="11">=<pos:position pos:line="63" pos:column="12"/></operator> <name><name pos:line="63" pos:column="13">tmp<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">next<pos:position pos:line="63" pos:column="22"/></name></name></expr>;<pos:position pos:line="63" pos:column="23"/></expr_stmt></block></while>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">tmp<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">&amp;&amp;<pos:position pos:line="64" pos:column="23"/></operator> <name pos:line="64" pos:column="16">Context<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">&amp;&amp;<pos:position pos:line="64" pos:column="34"/></operator>
        <operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><call><name pos:line="65" pos:column="10">mutt_strcmp<pos:position pos:line="65" pos:column="21"/></name> <argument_list pos:line="65" pos:column="22">(<argument><expr><name><name pos:line="65" pos:column="23">tmp<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">-&gt;<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="28">realpath<pos:position pos:line="65" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="38">Context<pos:position pos:line="65" pos:column="45"/></name><operator pos:line="65" pos:column="45">-&gt;<pos:position pos:line="65" pos:column="50"/></operator><name pos:line="65" pos:column="47">realpath<pos:position pos:line="65" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="57"/></condition><then pos:line="65" pos:column="57">
    <block pos:line="66" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="67" pos:column="7">tmp<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">-&gt;<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="12">msg_count<pos:position pos:line="67" pos:column="21"/></name></name> <operator pos:line="67" pos:column="22">=<pos:position pos:line="67" pos:column="23"/></operator> <name><name pos:line="67" pos:column="24">Context<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">msgcount<pos:position pos:line="67" pos:column="41"/></name></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="68" pos:column="7">tmp<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">-&gt;<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="12">msg_unread<pos:position pos:line="68" pos:column="22"/></name></name> <operator pos:line="68" pos:column="23">=<pos:position pos:line="68" pos:column="24"/></operator> <name><name pos:line="68" pos:column="25">Context<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">unread<pos:position pos:line="68" pos:column="40"/></name></name></expr>;<pos:position pos:line="68" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">add_folder<pos:position pos:line="70" pos:column="15"/></name> <argument_list pos:line="70" pos:column="16">(<argument><expr><name pos:line="70" pos:column="17">menu<pos:position pos:line="70" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="23">state<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="30">de<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">-&gt;<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="34">d_name<pos:position pos:line="70" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="42">&amp;<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="43">s<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">tmp<pos:position pos:line="70" pos:column="49"/></name></expr></argument>)<pos:position pos:line="70" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">closedir<pos:position pos:line="72" pos:column="11"/></name> <argument_list pos:line="72" pos:column="12">(<argument><expr><name pos:line="72" pos:column="13">dp<pos:position pos:line="72" pos:column="15"/></name></expr></argument>)<pos:position pos:line="72" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="17"/></expr_stmt>  
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">browser_sort<pos:position pos:line="73" pos:column="15"/></name> <argument_list pos:line="73" pos:column="16">(<argument><expr><name pos:line="73" pos:column="17">state<pos:position pos:line="73" pos:column="22"/></name></expr></argument>)<pos:position pos:line="73" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
  <return pos:line="74" pos:column="3">return <expr><literal type="number" pos:line="74" pos:column="10">0<pos:position pos:line="74" pos:column="11"/></literal></expr>;<pos:position pos:line="74" pos:column="12"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

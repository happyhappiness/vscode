<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1956_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">loaded_l10nfile<pos:position pos:line="1" pos:column="23"/></name></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type>
<name pos:line="2" pos:column="1">_nl_make_l10nflist<pos:position pos:line="2" pos:column="19"/></name> <argument_list pos:line="2" pos:column="20">(<argument><expr><name pos:line="2" pos:column="21">l10nfile_list<pos:position pos:line="2" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="36">dirlist<pos:position pos:line="2" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="45">dirlist_len<pos:position pos:line="2" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="58">mask<pos:position pos:line="2" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="64">language<pos:position pos:line="2" pos:column="72"/></name></expr></argument>,
		    <argument><expr><name pos:line="3" pos:column="21">territory<pos:position pos:line="3" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="32">codeset<pos:position pos:line="3" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="41">normalized_codeset<pos:position pos:line="3" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="61">modifier<pos:position pos:line="3" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="71">special<pos:position pos:line="3" pos:column="78"/></name></expr></argument>,
		    <argument><expr><name pos:line="4" pos:column="21">sponsor<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="30">revision<pos:position pos:line="4" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="40">filename<pos:position pos:line="4" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="50">do_allocate<pos:position pos:line="4" pos:column="61"/></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list>
     struct <name pos:line="5" pos:column="13">loaded_l10nfile<pos:position pos:line="5" pos:column="28"/></name> <modifier pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></modifier><modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier><name pos:line="5" pos:column="31">l10nfile_list<pos:position pos:line="5" pos:column="44"/></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="6" pos:column="6">const<pos:position pos:line="6" pos:column="11"/></specifier> <name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">dirlist<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="7" pos:column="6">size_t<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">dirlist_len<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="8" pos:column="6">int<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">mask<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="9" pos:column="6">const<pos:position pos:line="9" pos:column="11"/></specifier> <name pos:line="9" pos:column="12">char<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">language<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="10" pos:column="6">const<pos:position pos:line="10" pos:column="11"/></specifier> <name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">territory<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="11" pos:column="6">const<pos:position pos:line="11" pos:column="11"/></specifier> <name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">codeset<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="12" pos:column="6">const<pos:position pos:line="12" pos:column="11"/></specifier> <name pos:line="12" pos:column="12">char<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">normalized_codeset<pos:position pos:line="12" pos:column="36"/></name></decl>;<pos:position pos:line="12" pos:column="37"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="13" pos:column="6">const<pos:position pos:line="13" pos:column="11"/></specifier> <name pos:line="13" pos:column="12">char<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">modifier<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="14" pos:column="6">const<pos:position pos:line="14" pos:column="11"/></specifier> <name pos:line="14" pos:column="12">char<pos:position pos:line="14" pos:column="16"/></name> <modifier pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></modifier></type><name pos:line="14" pos:column="18">special<pos:position pos:line="14" pos:column="25"/></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="15" pos:column="6">const<pos:position pos:line="15" pos:column="11"/></specifier> <name pos:line="15" pos:column="12">char<pos:position pos:line="15" pos:column="16"/></name> <modifier pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></modifier></type><name pos:line="15" pos:column="18">sponsor<pos:position pos:line="15" pos:column="25"/></name></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="16" pos:column="6">const<pos:position pos:line="16" pos:column="11"/></specifier> <name pos:line="16" pos:column="12">char<pos:position pos:line="16" pos:column="16"/></name> <modifier pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></modifier></type><name pos:line="16" pos:column="18">revision<pos:position pos:line="16" pos:column="26"/></name></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="17" pos:column="6">const<pos:position pos:line="17" pos:column="11"/></specifier> <name pos:line="17" pos:column="12">char<pos:position pos:line="17" pos:column="16"/></name> <modifier pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></modifier></type><name pos:line="17" pos:column="18">filename<pos:position pos:line="17" pos:column="26"/></name></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="18" pos:column="6">int<pos:position pos:line="18" pos:column="9"/></name></type> <name pos:line="18" pos:column="10">do_allocate<pos:position pos:line="18" pos:column="21"/></name></decl>;<pos:position pos:line="18" pos:column="22"/></decl_stmt>
<block pos:line="19" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">char<pos:position pos:line="20" pos:column="7"/></name> <modifier pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></modifier></type><name pos:line="20" pos:column="9">abs_filename<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="21" pos:column="3">struct<pos:position pos:line="21" pos:column="9"/></name> <name pos:line="21" pos:column="10">loaded_l10nfile<pos:position pos:line="21" pos:column="25"/></name></name> <modifier pos:line="21" pos:column="26">*<pos:position pos:line="21" pos:column="27"/></modifier></type><name pos:line="21" pos:column="27">last<pos:position pos:line="21" pos:column="31"/></name> <init pos:line="21" pos:column="32">= <expr><name pos:line="21" pos:column="34">NULL<pos:position pos:line="21" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="22" pos:column="3">struct<pos:position pos:line="22" pos:column="9"/></name> <name pos:line="22" pos:column="10">loaded_l10nfile<pos:position pos:line="22" pos:column="25"/></name></name> <modifier pos:line="22" pos:column="26">*<pos:position pos:line="22" pos:column="27"/></modifier></type><name pos:line="22" pos:column="27">retval<pos:position pos:line="22" pos:column="33"/></name></decl>;<pos:position pos:line="22" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="23" pos:column="3">char<pos:position pos:line="23" pos:column="7"/></name> <modifier pos:line="23" pos:column="8">*<pos:position pos:line="23" pos:column="9"/></modifier></type><name pos:line="23" pos:column="9">cp<pos:position pos:line="23" pos:column="11"/></name></decl>;<pos:position pos:line="23" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="24" pos:column="3">size_t<pos:position pos:line="24" pos:column="9"/></name></type> <name pos:line="24" pos:column="10">entries<pos:position pos:line="24" pos:column="17"/></name></decl>;<pos:position pos:line="24" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">int<pos:position pos:line="25" pos:column="6"/></name></type> <name pos:line="25" pos:column="7">cnt<pos:position pos:line="25" pos:column="10"/></name></decl>;<pos:position pos:line="25" pos:column="11"/></decl_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* Allocate room for the full file name.  */</comment>
  <expr_stmt><expr><name pos:line="28" pos:column="3">abs_filename<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <operator pos:line="28" pos:column="18">(<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">char<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">*<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator> <call><name pos:line="28" pos:column="27">malloc<pos:position pos:line="28" pos:column="33"/></name> <argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">dirlist_len<pos:position pos:line="28" pos:column="46"/></name>
				  <operator pos:line="29" pos:column="35">+<pos:position pos:line="29" pos:column="36"/></operator> <call><name pos:line="29" pos:column="37">strlen<pos:position pos:line="29" pos:column="43"/></name> <argument_list pos:line="29" pos:column="44">(<argument><expr><name pos:line="29" pos:column="45">language<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call>
				  <operator pos:line="30" pos:column="35">+<pos:position pos:line="30" pos:column="36"/></operator> <operator pos:line="30" pos:column="37">(<pos:position pos:line="30" pos:column="38"/></operator><ternary><condition><expr><operator pos:line="30" pos:column="38">(<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">mask<pos:position pos:line="30" pos:column="43"/></name> <operator pos:line="30" pos:column="44">&amp;<pos:position pos:line="30" pos:column="49"/></operator> <name pos:line="30" pos:column="46">TERRITORY<pos:position pos:line="30" pos:column="55"/></name><operator pos:line="30" pos:column="55">)<pos:position pos:line="30" pos:column="56"/></operator> <operator pos:line="30" pos:column="57">!=<pos:position pos:line="30" pos:column="59"/></operator> <literal type="number" pos:line="30" pos:column="60">0<pos:position pos:line="30" pos:column="61"/></literal></expr>
				     ?<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39"> <expr><call><name pos:line="31" pos:column="40">strlen<pos:position pos:line="31" pos:column="46"/></name> <argument_list pos:line="31" pos:column="47">(<argument><expr><name pos:line="31" pos:column="48">territory<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call> <operator pos:line="31" pos:column="59">+<pos:position pos:line="31" pos:column="60"/></operator> <literal type="number" pos:line="31" pos:column="61">1<pos:position pos:line="31" pos:column="62"/></literal></expr> <pos:position pos:line="31" pos:column="63"/></then><else pos:line="31" pos:column="63">: <expr><literal type="number" pos:line="31" pos:column="65">0<pos:position pos:line="31" pos:column="66"/></literal></expr></else></ternary><operator pos:line="31" pos:column="66">)<pos:position pos:line="31" pos:column="67"/></operator>
				  <operator pos:line="32" pos:column="35">+<pos:position pos:line="32" pos:column="36"/></operator> <operator pos:line="32" pos:column="37">(<pos:position pos:line="32" pos:column="38"/></operator><ternary><condition><expr><operator pos:line="32" pos:column="38">(<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">mask<pos:position pos:line="32" pos:column="43"/></name> <operator pos:line="32" pos:column="44">&amp;<pos:position pos:line="32" pos:column="49"/></operator> <name pos:line="32" pos:column="46">XPG_CODESET<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">)<pos:position pos:line="32" pos:column="58"/></operator> <operator pos:line="32" pos:column="59">!=<pos:position pos:line="32" pos:column="61"/></operator> <literal type="number" pos:line="32" pos:column="62">0<pos:position pos:line="32" pos:column="63"/></literal></expr>
				     ?<pos:position pos:line="33" pos:column="39"/></condition><then pos:line="33" pos:column="39"> <expr><call><name pos:line="33" pos:column="40">strlen<pos:position pos:line="33" pos:column="46"/></name> <argument_list pos:line="33" pos:column="47">(<argument><expr><name pos:line="33" pos:column="48">codeset<pos:position pos:line="33" pos:column="55"/></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call> <operator pos:line="33" pos:column="57">+<pos:position pos:line="33" pos:column="58"/></operator> <literal type="number" pos:line="33" pos:column="59">1<pos:position pos:line="33" pos:column="60"/></literal></expr> <pos:position pos:line="33" pos:column="61"/></then><else pos:line="33" pos:column="61">: <expr><literal type="number" pos:line="33" pos:column="63">0<pos:position pos:line="33" pos:column="64"/></literal></expr></else></ternary><operator pos:line="33" pos:column="64">)<pos:position pos:line="33" pos:column="65"/></operator>
				  <operator pos:line="34" pos:column="35">+<pos:position pos:line="34" pos:column="36"/></operator> <operator pos:line="34" pos:column="37">(<pos:position pos:line="34" pos:column="38"/></operator><ternary><condition><expr><operator pos:line="34" pos:column="38">(<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="39">mask<pos:position pos:line="34" pos:column="43"/></name> <operator pos:line="34" pos:column="44">&amp;<pos:position pos:line="34" pos:column="49"/></operator> <name pos:line="34" pos:column="46">XPG_NORM_CODESET<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">)<pos:position pos:line="34" pos:column="63"/></operator> <operator pos:line="34" pos:column="64">!=<pos:position pos:line="34" pos:column="66"/></operator> <literal type="number" pos:line="34" pos:column="67">0<pos:position pos:line="34" pos:column="68"/></literal></expr>
				     ?<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39"> <expr><call><name pos:line="35" pos:column="40">strlen<pos:position pos:line="35" pos:column="46"/></name> <argument_list pos:line="35" pos:column="47">(<argument><expr><name pos:line="35" pos:column="48">normalized_codeset<pos:position pos:line="35" pos:column="66"/></name></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call> <operator pos:line="35" pos:column="68">+<pos:position pos:line="35" pos:column="69"/></operator> <literal type="number" pos:line="35" pos:column="70">1<pos:position pos:line="35" pos:column="71"/></literal></expr> <pos:position pos:line="35" pos:column="72"/></then><else pos:line="35" pos:column="72">: <expr><literal type="number" pos:line="35" pos:column="74">0<pos:position pos:line="35" pos:column="75"/></literal></expr></else></ternary><operator pos:line="35" pos:column="75">)<pos:position pos:line="35" pos:column="76"/></operator>
				  <operator pos:line="36" pos:column="35">+<pos:position pos:line="36" pos:column="36"/></operator> <operator pos:line="36" pos:column="37">(<pos:position pos:line="36" pos:column="38"/></operator><ternary><condition><expr><operator pos:line="36" pos:column="38">(<pos:position pos:line="36" pos:column="39"/></operator><operator pos:line="36" pos:column="39">(<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">mask<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">&amp;<pos:position pos:line="36" pos:column="50"/></operator> <name pos:line="36" pos:column="47">XPG_MODIFIER<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">)<pos:position pos:line="36" pos:column="60"/></operator> <operator pos:line="36" pos:column="61">!=<pos:position pos:line="36" pos:column="63"/></operator> <literal type="number" pos:line="36" pos:column="64">0<pos:position pos:line="36" pos:column="65"/></literal>
				      <operator pos:line="37" pos:column="39">||<pos:position pos:line="37" pos:column="41"/></operator> <operator pos:line="37" pos:column="42">(<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="43">mask<pos:position pos:line="37" pos:column="47"/></name> <operator pos:line="37" pos:column="48">&amp;<pos:position pos:line="37" pos:column="53"/></operator> <name pos:line="37" pos:column="50">CEN_AUDIENCE<pos:position pos:line="37" pos:column="62"/></name><operator pos:line="37" pos:column="62">)<pos:position pos:line="37" pos:column="63"/></operator> <operator pos:line="37" pos:column="64">!=<pos:position pos:line="37" pos:column="66"/></operator> <literal type="number" pos:line="37" pos:column="67">0<pos:position pos:line="37" pos:column="68"/></literal><operator pos:line="37" pos:column="68">)<pos:position pos:line="37" pos:column="69"/></operator></expr>
				     ?<pos:position pos:line="38" pos:column="39"/></condition><then pos:line="38" pos:column="39"> <expr><call><name pos:line="38" pos:column="40">strlen<pos:position pos:line="38" pos:column="46"/></name> <argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">modifier<pos:position pos:line="38" pos:column="56"/></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call> <operator pos:line="38" pos:column="58">+<pos:position pos:line="38" pos:column="59"/></operator> <literal type="number" pos:line="38" pos:column="60">1<pos:position pos:line="38" pos:column="61"/></literal></expr> <pos:position pos:line="38" pos:column="62"/></then><else pos:line="38" pos:column="62">: <expr><literal type="number" pos:line="38" pos:column="64">0<pos:position pos:line="38" pos:column="65"/></literal></expr></else></ternary><operator pos:line="38" pos:column="65">)<pos:position pos:line="38" pos:column="66"/></operator>
				  <operator pos:line="39" pos:column="35">+<pos:position pos:line="39" pos:column="36"/></operator> <operator pos:line="39" pos:column="37">(<pos:position pos:line="39" pos:column="38"/></operator><ternary><condition><expr><operator pos:line="39" pos:column="38">(<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">mask<pos:position pos:line="39" pos:column="43"/></name> <operator pos:line="39" pos:column="44">&amp;<pos:position pos:line="39" pos:column="49"/></operator> <name pos:line="39" pos:column="46">CEN_SPECIAL<pos:position pos:line="39" pos:column="57"/></name><operator pos:line="39" pos:column="57">)<pos:position pos:line="39" pos:column="58"/></operator> <operator pos:line="39" pos:column="59">!=<pos:position pos:line="39" pos:column="61"/></operator> <literal type="number" pos:line="39" pos:column="62">0<pos:position pos:line="39" pos:column="63"/></literal></expr>
				     ?<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39"> <expr><call><name pos:line="40" pos:column="40">strlen<pos:position pos:line="40" pos:column="46"/></name> <argument_list pos:line="40" pos:column="47">(<argument><expr><name pos:line="40" pos:column="48">special<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call> <operator pos:line="40" pos:column="57">+<pos:position pos:line="40" pos:column="58"/></operator> <literal type="number" pos:line="40" pos:column="59">1<pos:position pos:line="40" pos:column="60"/></literal></expr> <pos:position pos:line="40" pos:column="61"/></then><else pos:line="40" pos:column="61">: <expr><literal type="number" pos:line="40" pos:column="63">0<pos:position pos:line="40" pos:column="64"/></literal></expr></else></ternary><operator pos:line="40" pos:column="64">)<pos:position pos:line="40" pos:column="65"/></operator>
				  <operator pos:line="41" pos:column="35">+<pos:position pos:line="41" pos:column="36"/></operator> <operator pos:line="41" pos:column="37">(<pos:position pos:line="41" pos:column="38"/></operator><ternary><condition><expr><operator pos:line="41" pos:column="38">(<pos:position pos:line="41" pos:column="39"/></operator><operator pos:line="41" pos:column="39">(<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="40">mask<pos:position pos:line="41" pos:column="44"/></name> <operator pos:line="41" pos:column="45">&amp;<pos:position pos:line="41" pos:column="50"/></operator> <name pos:line="41" pos:column="47">CEN_SPONSOR<pos:position pos:line="41" pos:column="58"/></name><operator pos:line="41" pos:column="58">)<pos:position pos:line="41" pos:column="59"/></operator> <operator pos:line="41" pos:column="60">!=<pos:position pos:line="41" pos:column="62"/></operator> <literal type="number" pos:line="41" pos:column="63">0<pos:position pos:line="41" pos:column="64"/></literal>
				      <operator pos:line="42" pos:column="39">||<pos:position pos:line="42" pos:column="41"/></operator> <operator pos:line="42" pos:column="42">(<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">mask<pos:position pos:line="42" pos:column="47"/></name> <operator pos:line="42" pos:column="48">&amp;<pos:position pos:line="42" pos:column="53"/></operator> <name pos:line="42" pos:column="50">CEN_REVISION<pos:position pos:line="42" pos:column="62"/></name><operator pos:line="42" pos:column="62">)<pos:position pos:line="42" pos:column="63"/></operator> <operator pos:line="42" pos:column="64">!=<pos:position pos:line="42" pos:column="66"/></operator> <literal type="number" pos:line="42" pos:column="67">0<pos:position pos:line="42" pos:column="68"/></literal><operator pos:line="42" pos:column="68">)<pos:position pos:line="42" pos:column="69"/></operator></expr>
				     ?<pos:position pos:line="43" pos:column="39"/></condition><then pos:line="43" pos:column="39"> <expr><operator pos:line="43" pos:column="40">(<pos:position pos:line="43" pos:column="41"/></operator><literal type="number" pos:line="43" pos:column="41">1<pos:position pos:line="43" pos:column="42"/></literal> <operator pos:line="43" pos:column="43">+<pos:position pos:line="43" pos:column="44"/></operator> <operator pos:line="43" pos:column="45">(<pos:position pos:line="43" pos:column="46"/></operator><ternary><condition><expr><operator pos:line="43" pos:column="46">(<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="47">mask<pos:position pos:line="43" pos:column="51"/></name> <operator pos:line="43" pos:column="52">&amp;<pos:position pos:line="43" pos:column="57"/></operator> <name pos:line="43" pos:column="54">CEN_SPONSOR<pos:position pos:line="43" pos:column="65"/></name><operator pos:line="43" pos:column="65">)<pos:position pos:line="43" pos:column="66"/></operator> <operator pos:line="43" pos:column="67">!=<pos:position pos:line="43" pos:column="69"/></operator> <literal type="number" pos:line="43" pos:column="70">0<pos:position pos:line="43" pos:column="71"/></literal></expr>
					     ?<pos:position pos:line="44" pos:column="47"/></condition><then pos:line="44" pos:column="47"> <expr><call><name pos:line="44" pos:column="48">strlen<pos:position pos:line="44" pos:column="54"/></name> <argument_list pos:line="44" pos:column="55">(<argument><expr><name pos:line="44" pos:column="56">sponsor<pos:position pos:line="44" pos:column="63"/></name></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call> <operator pos:line="44" pos:column="65">+<pos:position pos:line="44" pos:column="66"/></operator> <literal type="number" pos:line="44" pos:column="67">1<pos:position pos:line="44" pos:column="68"/></literal></expr> <pos:position pos:line="44" pos:column="69"/></then><else pos:line="44" pos:column="69">: <expr><literal type="number" pos:line="44" pos:column="71">0<pos:position pos:line="44" pos:column="72"/></literal></expr></else></ternary><operator pos:line="44" pos:column="72">)<pos:position pos:line="44" pos:column="73"/></operator>
					<operator pos:line="45" pos:column="41">+<pos:position pos:line="45" pos:column="42"/></operator> <operator pos:line="45" pos:column="43">(<pos:position pos:line="45" pos:column="44"/></operator><ternary><condition><expr><operator pos:line="45" pos:column="44">(<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="45">mask<pos:position pos:line="45" pos:column="49"/></name> <operator pos:line="45" pos:column="50">&amp;<pos:position pos:line="45" pos:column="55"/></operator> <name pos:line="45" pos:column="52">CEN_REVISION<pos:position pos:line="45" pos:column="64"/></name><operator pos:line="45" pos:column="64">)<pos:position pos:line="45" pos:column="65"/></operator> <operator pos:line="45" pos:column="66">!=<pos:position pos:line="45" pos:column="68"/></operator> <literal type="number" pos:line="45" pos:column="69">0<pos:position pos:line="45" pos:column="70"/></literal></expr>
					   ?<pos:position pos:line="46" pos:column="45"/></condition><then pos:line="46" pos:column="45"> <expr><call><name pos:line="46" pos:column="46">strlen<pos:position pos:line="46" pos:column="52"/></name> <argument_list pos:line="46" pos:column="53">(<argument><expr><name pos:line="46" pos:column="54">revision<pos:position pos:line="46" pos:column="62"/></name></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call> <operator pos:line="46" pos:column="64">+<pos:position pos:line="46" pos:column="65"/></operator> <literal type="number" pos:line="46" pos:column="66">1<pos:position pos:line="46" pos:column="67"/></literal></expr> <pos:position pos:line="46" pos:column="68"/></then><else pos:line="46" pos:column="68">: <expr><literal type="number" pos:line="46" pos:column="70">0<pos:position pos:line="46" pos:column="71"/></literal></expr></else></ternary><operator pos:line="46" pos:column="71">)<pos:position pos:line="46" pos:column="72"/></operator><operator pos:line="46" pos:column="72">)<pos:position pos:line="46" pos:column="73"/></operator></expr> <pos:position pos:line="46" pos:column="74"/></then><else pos:line="46" pos:column="74">: <expr><literal type="number" pos:line="46" pos:column="76">0<pos:position pos:line="46" pos:column="77"/></literal></expr></else></ternary><operator pos:line="46" pos:column="77">)<pos:position pos:line="46" pos:column="78"/></operator>
				  <operator pos:line="47" pos:column="35">+<pos:position pos:line="47" pos:column="36"/></operator> <literal type="number" pos:line="47" pos:column="37">1<pos:position pos:line="47" pos:column="38"/></literal> <operator pos:line="47" pos:column="39">+<pos:position pos:line="47" pos:column="40"/></operator> <call><name pos:line="47" pos:column="41">strlen<pos:position pos:line="47" pos:column="47"/></name> <argument_list pos:line="47" pos:column="48">(<argument><expr><name pos:line="47" pos:column="49">filename<pos:position pos:line="47" pos:column="57"/></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call> <operator pos:line="47" pos:column="59">+<pos:position pos:line="47" pos:column="60"/></operator> <literal type="number" pos:line="47" pos:column="61">1<pos:position pos:line="47" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">abs_filename<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">==<pos:position pos:line="49" pos:column="22"/></operator> <name pos:line="49" pos:column="23">NULL<pos:position pos:line="49" pos:column="27"/></name></expr>)<pos:position pos:line="49" pos:column="28"/></condition><then pos:line="49" pos:column="28">
    <block type="pseudo"><return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">NULL<pos:position pos:line="50" pos:column="16"/></name></expr>;<pos:position pos:line="50" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="52" pos:column="3">retval<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <name pos:line="52" pos:column="12">NULL<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="53" pos:column="3">last<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <name pos:line="53" pos:column="10">NULL<pos:position pos:line="53" pos:column="14"/></name></expr>;<pos:position pos:line="53" pos:column="15"/></expr_stmt>

  <comment type="block" pos:line="55" pos:column="3">/* Construct file name.  */</comment>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">memcpy<pos:position pos:line="56" pos:column="9"/></name> <argument_list pos:line="56" pos:column="10">(<argument><expr><name pos:line="56" pos:column="11">abs_filename<pos:position pos:line="56" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="25">dirlist<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="34">dirlist_len<pos:position pos:line="56" pos:column="45"/></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">__argz_stringify<pos:position pos:line="57" pos:column="19"/></name> <argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">abs_filename<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="35">dirlist_len<pos:position pos:line="57" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="48">PATH_SEPARATOR<pos:position pos:line="57" pos:column="62"/></name></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><name pos:line="58" pos:column="3">cp<pos:position pos:line="58" pos:column="5"/></name> <operator pos:line="58" pos:column="6">=<pos:position pos:line="58" pos:column="7"/></operator> <name pos:line="58" pos:column="8">abs_filename<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">+<pos:position pos:line="58" pos:column="22"/></operator> <operator pos:line="58" pos:column="23">(<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="24">dirlist_len<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">-<pos:position pos:line="58" pos:column="37"/></operator> <literal type="number" pos:line="58" pos:column="38">1<pos:position pos:line="58" pos:column="39"/></literal><operator pos:line="58" pos:column="39">)<pos:position pos:line="58" pos:column="40"/></operator></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="59" pos:column="3">*<pos:position pos:line="59" pos:column="4"/></operator><name pos:line="59" pos:column="4">cp<pos:position pos:line="59" pos:column="6"/></name><operator pos:line="59" pos:column="6">++<pos:position pos:line="59" pos:column="8"/></operator> <operator pos:line="59" pos:column="9">=<pos:position pos:line="59" pos:column="10"/></operator> <literal type="char" pos:line="59" pos:column="11">'/'<pos:position pos:line="59" pos:column="14"/></literal></expr>;<pos:position pos:line="59" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="60" pos:column="3">cp<pos:position pos:line="60" pos:column="5"/></name> <operator pos:line="60" pos:column="6">=<pos:position pos:line="60" pos:column="7"/></operator> <call><name pos:line="60" pos:column="8">stpcpy<pos:position pos:line="60" pos:column="14"/></name> <argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">cp<pos:position pos:line="60" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="20">language<pos:position pos:line="60" pos:column="28"/></name></expr></argument>)<pos:position pos:line="60" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>

  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><operator pos:line="62" pos:column="7">(<pos:position pos:line="62" pos:column="8"/></operator><name pos:line="62" pos:column="8">mask<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">&amp;<pos:position pos:line="62" pos:column="18"/></operator> <name pos:line="62" pos:column="15">TERRITORY<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">)<pos:position pos:line="62" pos:column="25"/></operator> <operator pos:line="62" pos:column="26">!=<pos:position pos:line="62" pos:column="28"/></operator> <literal type="number" pos:line="62" pos:column="29">0<pos:position pos:line="62" pos:column="30"/></literal></expr>)<pos:position pos:line="62" pos:column="31"/></condition><then pos:line="62" pos:column="31">
    <block pos:line="63" pos:column="5">{
      <expr_stmt><expr><operator pos:line="64" pos:column="7">*<pos:position pos:line="64" pos:column="8"/></operator><name pos:line="64" pos:column="8">cp<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">++<pos:position pos:line="64" pos:column="12"/></operator> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <literal type="char" pos:line="64" pos:column="15">'_'<pos:position pos:line="64" pos:column="18"/></literal></expr>;<pos:position pos:line="64" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="65" pos:column="7">cp<pos:position pos:line="65" pos:column="9"/></name> <operator pos:line="65" pos:column="10">=<pos:position pos:line="65" pos:column="11"/></operator> <call><name pos:line="65" pos:column="12">stpcpy<pos:position pos:line="65" pos:column="18"/></name> <argument_list pos:line="65" pos:column="19">(<argument><expr><name pos:line="65" pos:column="20">cp<pos:position pos:line="65" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="24">territory<pos:position pos:line="65" pos:column="33"/></name></expr></argument>)<pos:position pos:line="65" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><operator pos:line="67" pos:column="7">(<pos:position pos:line="67" pos:column="8"/></operator><name pos:line="67" pos:column="8">mask<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">&amp;<pos:position pos:line="67" pos:column="18"/></operator> <name pos:line="67" pos:column="15">XPG_CODESET<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">)<pos:position pos:line="67" pos:column="27"/></operator> <operator pos:line="67" pos:column="28">!=<pos:position pos:line="67" pos:column="30"/></operator> <literal type="number" pos:line="67" pos:column="31">0<pos:position pos:line="67" pos:column="32"/></literal></expr>)<pos:position pos:line="67" pos:column="33"/></condition><then pos:line="67" pos:column="33">
    <block pos:line="68" pos:column="5">{
      <expr_stmt><expr><operator pos:line="69" pos:column="7">*<pos:position pos:line="69" pos:column="8"/></operator><name pos:line="69" pos:column="8">cp<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">++<pos:position pos:line="69" pos:column="12"/></operator> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <literal type="char" pos:line="69" pos:column="15">'.'<pos:position pos:line="69" pos:column="18"/></literal></expr>;<pos:position pos:line="69" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="70" pos:column="7">cp<pos:position pos:line="70" pos:column="9"/></name> <operator pos:line="70" pos:column="10">=<pos:position pos:line="70" pos:column="11"/></operator> <call><name pos:line="70" pos:column="12">stpcpy<pos:position pos:line="70" pos:column="18"/></name> <argument_list pos:line="70" pos:column="19">(<argument><expr><name pos:line="70" pos:column="20">cp<pos:position pos:line="70" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="24">codeset<pos:position pos:line="70" pos:column="31"/></name></expr></argument>)<pos:position pos:line="70" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><operator pos:line="72" pos:column="7">(<pos:position pos:line="72" pos:column="8"/></operator><name pos:line="72" pos:column="8">mask<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">&amp;<pos:position pos:line="72" pos:column="18"/></operator> <name pos:line="72" pos:column="15">XPG_NORM_CODESET<pos:position pos:line="72" pos:column="31"/></name><operator pos:line="72" pos:column="31">)<pos:position pos:line="72" pos:column="32"/></operator> <operator pos:line="72" pos:column="33">!=<pos:position pos:line="72" pos:column="35"/></operator> <literal type="number" pos:line="72" pos:column="36">0<pos:position pos:line="72" pos:column="37"/></literal></expr>)<pos:position pos:line="72" pos:column="38"/></condition><then pos:line="72" pos:column="38">
    <block pos:line="73" pos:column="5">{
      <expr_stmt><expr><operator pos:line="74" pos:column="7">*<pos:position pos:line="74" pos:column="8"/></operator><name pos:line="74" pos:column="8">cp<pos:position pos:line="74" pos:column="10"/></name><operator pos:line="74" pos:column="10">++<pos:position pos:line="74" pos:column="12"/></operator> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <literal type="char" pos:line="74" pos:column="15">'.'<pos:position pos:line="74" pos:column="18"/></literal></expr>;<pos:position pos:line="74" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="75" pos:column="7">cp<pos:position pos:line="75" pos:column="9"/></name> <operator pos:line="75" pos:column="10">=<pos:position pos:line="75" pos:column="11"/></operator> <call><name pos:line="75" pos:column="12">stpcpy<pos:position pos:line="75" pos:column="18"/></name> <argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">cp<pos:position pos:line="75" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="24">normalized_codeset<pos:position pos:line="75" pos:column="42"/></name></expr></argument>)<pos:position pos:line="75" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><operator pos:line="77" pos:column="7">(<pos:position pos:line="77" pos:column="8"/></operator><name pos:line="77" pos:column="8">mask<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">&amp;<pos:position pos:line="77" pos:column="18"/></operator> <operator pos:line="77" pos:column="15">(<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="16">XPG_MODIFIER<pos:position pos:line="77" pos:column="28"/></name> <operator pos:line="77" pos:column="29">|<pos:position pos:line="77" pos:column="30"/></operator> <name pos:line="77" pos:column="31">CEN_AUDIENCE<pos:position pos:line="77" pos:column="43"/></name><operator pos:line="77" pos:column="43">)<pos:position pos:line="77" pos:column="44"/></operator><operator pos:line="77" pos:column="44">)<pos:position pos:line="77" pos:column="45"/></operator> <operator pos:line="77" pos:column="46">!=<pos:position pos:line="77" pos:column="48"/></operator> <literal type="number" pos:line="77" pos:column="49">0<pos:position pos:line="77" pos:column="50"/></literal></expr>)<pos:position pos:line="77" pos:column="51"/></condition><then pos:line="77" pos:column="51">
    <block pos:line="78" pos:column="5">{
      <comment type="block" pos:line="79" pos:column="7">/* This component can be part of both syntaces but has different
	 leading characters.  For CEN we use `+', else `@'.  */</comment>
      <expr_stmt><expr><operator pos:line="81" pos:column="7">*<pos:position pos:line="81" pos:column="8"/></operator><name pos:line="81" pos:column="8">cp<pos:position pos:line="81" pos:column="10"/></name><operator pos:line="81" pos:column="10">++<pos:position pos:line="81" pos:column="12"/></operator> <operator pos:line="81" pos:column="13">=<pos:position pos:line="81" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="81" pos:column="15">(<pos:position pos:line="81" pos:column="16"/></operator><name pos:line="81" pos:column="16">mask<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">&amp;<pos:position pos:line="81" pos:column="26"/></operator> <name pos:line="81" pos:column="23">CEN_AUDIENCE<pos:position pos:line="81" pos:column="35"/></name><operator pos:line="81" pos:column="35">)<pos:position pos:line="81" pos:column="36"/></operator> <operator pos:line="81" pos:column="37">!=<pos:position pos:line="81" pos:column="39"/></operator> <literal type="number" pos:line="81" pos:column="40">0<pos:position pos:line="81" pos:column="41"/></literal></expr> ?<pos:position pos:line="81" pos:column="43"/></condition><then pos:line="81" pos:column="43"> <expr><literal type="char" pos:line="81" pos:column="44">'+'<pos:position pos:line="81" pos:column="47"/></literal></expr> <pos:position pos:line="81" pos:column="48"/></then><else pos:line="81" pos:column="48">: <expr><literal type="char" pos:line="81" pos:column="50">'@'<pos:position pos:line="81" pos:column="53"/></literal></expr></else></ternary></expr>;<pos:position pos:line="81" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name pos:line="82" pos:column="7">cp<pos:position pos:line="82" pos:column="9"/></name> <operator pos:line="82" pos:column="10">=<pos:position pos:line="82" pos:column="11"/></operator> <call><name pos:line="82" pos:column="12">stpcpy<pos:position pos:line="82" pos:column="18"/></name> <argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">cp<pos:position pos:line="82" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="24">modifier<pos:position pos:line="82" pos:column="32"/></name></expr></argument>)<pos:position pos:line="82" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>
  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><operator pos:line="84" pos:column="7">(<pos:position pos:line="84" pos:column="8"/></operator><name pos:line="84" pos:column="8">mask<pos:position pos:line="84" pos:column="12"/></name> <operator pos:line="84" pos:column="13">&amp;<pos:position pos:line="84" pos:column="18"/></operator> <name pos:line="84" pos:column="15">CEN_SPECIAL<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">)<pos:position pos:line="84" pos:column="27"/></operator> <operator pos:line="84" pos:column="28">!=<pos:position pos:line="84" pos:column="30"/></operator> <literal type="number" pos:line="84" pos:column="31">0<pos:position pos:line="84" pos:column="32"/></literal></expr>)<pos:position pos:line="84" pos:column="33"/></condition><then pos:line="84" pos:column="33">
    <block pos:line="85" pos:column="5">{
      <expr_stmt><expr><operator pos:line="86" pos:column="7">*<pos:position pos:line="86" pos:column="8"/></operator><name pos:line="86" pos:column="8">cp<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">++<pos:position pos:line="86" pos:column="12"/></operator> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <literal type="char" pos:line="86" pos:column="15">'+'<pos:position pos:line="86" pos:column="18"/></literal></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="87" pos:column="7">cp<pos:position pos:line="87" pos:column="9"/></name> <operator pos:line="87" pos:column="10">=<pos:position pos:line="87" pos:column="11"/></operator> <call><name pos:line="87" pos:column="12">stpcpy<pos:position pos:line="87" pos:column="18"/></name> <argument_list pos:line="87" pos:column="19">(<argument><expr><name pos:line="87" pos:column="20">cp<pos:position pos:line="87" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="24">special<pos:position pos:line="87" pos:column="31"/></name></expr></argument>)<pos:position pos:line="87" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>
  <if pos:line="89" pos:column="3">if <condition pos:line="89" pos:column="6">(<expr><operator pos:line="89" pos:column="7">(<pos:position pos:line="89" pos:column="8"/></operator><name pos:line="89" pos:column="8">mask<pos:position pos:line="89" pos:column="12"/></name> <operator pos:line="89" pos:column="13">&amp;<pos:position pos:line="89" pos:column="18"/></operator> <operator pos:line="89" pos:column="15">(<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="16">CEN_SPONSOR<pos:position pos:line="89" pos:column="27"/></name> <operator pos:line="89" pos:column="28">|<pos:position pos:line="89" pos:column="29"/></operator> <name pos:line="89" pos:column="30">CEN_REVISION<pos:position pos:line="89" pos:column="42"/></name><operator pos:line="89" pos:column="42">)<pos:position pos:line="89" pos:column="43"/></operator><operator pos:line="89" pos:column="43">)<pos:position pos:line="89" pos:column="44"/></operator> <operator pos:line="89" pos:column="45">!=<pos:position pos:line="89" pos:column="47"/></operator> <literal type="number" pos:line="89" pos:column="48">0<pos:position pos:line="89" pos:column="49"/></literal></expr>)<pos:position pos:line="89" pos:column="50"/></condition><then pos:line="89" pos:column="50">
    <block pos:line="90" pos:column="5">{
      <expr_stmt><expr><operator pos:line="91" pos:column="7">*<pos:position pos:line="91" pos:column="8"/></operator><name pos:line="91" pos:column="8">cp<pos:position pos:line="91" pos:column="10"/></name><operator pos:line="91" pos:column="10">++<pos:position pos:line="91" pos:column="12"/></operator> <operator pos:line="91" pos:column="13">=<pos:position pos:line="91" pos:column="14"/></operator> <literal type="char" pos:line="91" pos:column="15">','<pos:position pos:line="91" pos:column="18"/></literal></expr>;<pos:position pos:line="91" pos:column="19"/></expr_stmt>
      <if pos:line="92" pos:column="7">if <condition pos:line="92" pos:column="10">(<expr><operator pos:line="92" pos:column="11">(<pos:position pos:line="92" pos:column="12"/></operator><name pos:line="92" pos:column="12">mask<pos:position pos:line="92" pos:column="16"/></name> <operator pos:line="92" pos:column="17">&amp;<pos:position pos:line="92" pos:column="22"/></operator> <name pos:line="92" pos:column="19">CEN_SPONSOR<pos:position pos:line="92" pos:column="30"/></name><operator pos:line="92" pos:column="30">)<pos:position pos:line="92" pos:column="31"/></operator> <operator pos:line="92" pos:column="32">!=<pos:position pos:line="92" pos:column="34"/></operator> <literal type="number" pos:line="92" pos:column="35">0<pos:position pos:line="92" pos:column="36"/></literal></expr>)<pos:position pos:line="92" pos:column="37"/></condition><then pos:line="92" pos:column="37">
	<block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="9">cp<pos:position pos:line="93" pos:column="11"/></name> <operator pos:line="93" pos:column="12">=<pos:position pos:line="93" pos:column="13"/></operator> <call><name pos:line="93" pos:column="14">stpcpy<pos:position pos:line="93" pos:column="20"/></name> <argument_list pos:line="93" pos:column="21">(<argument><expr><name pos:line="93" pos:column="22">cp<pos:position pos:line="93" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="26">sponsor<pos:position pos:line="93" pos:column="33"/></name></expr></argument>)<pos:position pos:line="93" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt></block></then></if>
      <if pos:line="94" pos:column="7">if <condition pos:line="94" pos:column="10">(<expr><operator pos:line="94" pos:column="11">(<pos:position pos:line="94" pos:column="12"/></operator><name pos:line="94" pos:column="12">mask<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">&amp;<pos:position pos:line="94" pos:column="22"/></operator> <name pos:line="94" pos:column="19">CEN_REVISION<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">)<pos:position pos:line="94" pos:column="32"/></operator> <operator pos:line="94" pos:column="33">!=<pos:position pos:line="94" pos:column="35"/></operator> <literal type="number" pos:line="94" pos:column="36">0<pos:position pos:line="94" pos:column="37"/></literal></expr>)<pos:position pos:line="94" pos:column="38"/></condition><then pos:line="94" pos:column="38">
	<block pos:line="95" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="96" pos:column="11">*<pos:position pos:line="96" pos:column="12"/></operator><name pos:line="96" pos:column="12">cp<pos:position pos:line="96" pos:column="14"/></name><operator pos:line="96" pos:column="14">++<pos:position pos:line="96" pos:column="16"/></operator> <operator pos:line="96" pos:column="17">=<pos:position pos:line="96" pos:column="18"/></operator> <literal type="char" pos:line="96" pos:column="19">'_'<pos:position pos:line="96" pos:column="22"/></literal></expr>;<pos:position pos:line="96" pos:column="23"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="97" pos:column="11">cp<pos:position pos:line="97" pos:column="13"/></name> <operator pos:line="97" pos:column="14">=<pos:position pos:line="97" pos:column="15"/></operator> <call><name pos:line="97" pos:column="16">stpcpy<pos:position pos:line="97" pos:column="22"/></name> <argument_list pos:line="97" pos:column="23">(<argument><expr><name pos:line="97" pos:column="24">cp<pos:position pos:line="97" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="28">revision<pos:position pos:line="97" pos:column="36"/></name></expr></argument>)<pos:position pos:line="97" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

  <expr_stmt><expr><operator pos:line="101" pos:column="3">*<pos:position pos:line="101" pos:column="4"/></operator><name pos:line="101" pos:column="4">cp<pos:position pos:line="101" pos:column="6"/></name><operator pos:line="101" pos:column="6">++<pos:position pos:line="101" pos:column="8"/></operator> <operator pos:line="101" pos:column="9">=<pos:position pos:line="101" pos:column="10"/></operator> <literal type="char" pos:line="101" pos:column="11">'/'<pos:position pos:line="101" pos:column="14"/></literal></expr>;<pos:position pos:line="101" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="102" pos:column="3">stpcpy<pos:position pos:line="102" pos:column="9"/></name> <argument_list pos:line="102" pos:column="10">(<argument><expr><name pos:line="102" pos:column="11">cp<pos:position pos:line="102" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="15">filename<pos:position pos:line="102" pos:column="23"/></name></expr></argument>)<pos:position pos:line="102" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="25"/></expr_stmt>

  <comment type="block" pos:line="104" pos:column="3">/* Look in list of already loaded domains whether it is already
     available.  */</comment>
  <expr_stmt><expr><name pos:line="106" pos:column="3">last<pos:position pos:line="106" pos:column="7"/></name> <operator pos:line="106" pos:column="8">=<pos:position pos:line="106" pos:column="9"/></operator> <name pos:line="106" pos:column="10">NULL<pos:position pos:line="106" pos:column="14"/></name></expr>;<pos:position pos:line="106" pos:column="15"/></expr_stmt>
  <for pos:line="107" pos:column="3">for <control pos:line="107" pos:column="7">(<init><expr><name pos:line="107" pos:column="8">retval<pos:position pos:line="107" pos:column="14"/></name> <operator pos:line="107" pos:column="15">=<pos:position pos:line="107" pos:column="16"/></operator> <operator pos:line="107" pos:column="17">*<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="18">l10nfile_list<pos:position pos:line="107" pos:column="31"/></name></expr>;<pos:position pos:line="107" pos:column="32"/></init> <condition><expr><name pos:line="107" pos:column="33">retval<pos:position pos:line="107" pos:column="39"/></name> <operator pos:line="107" pos:column="40">!=<pos:position pos:line="107" pos:column="42"/></operator> <name pos:line="107" pos:column="43">NULL<pos:position pos:line="107" pos:column="47"/></name></expr>;<pos:position pos:line="107" pos:column="48"/></condition> <incr><expr><name pos:line="107" pos:column="49">retval<pos:position pos:line="107" pos:column="55"/></name> <operator pos:line="107" pos:column="56">=<pos:position pos:line="107" pos:column="57"/></operator> <name><name pos:line="107" pos:column="58">retval<pos:position pos:line="107" pos:column="64"/></name><operator pos:line="107" pos:column="64">-&gt;<pos:position pos:line="107" pos:column="69"/></operator><name pos:line="107" pos:column="66">next<pos:position pos:line="107" pos:column="70"/></name></name></expr></incr>)<pos:position pos:line="107" pos:column="71"/></control>
    <block type="pseudo"><if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><name><name pos:line="108" pos:column="9">retval<pos:position pos:line="108" pos:column="15"/></name><operator pos:line="108" pos:column="15">-&gt;<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="17">filename<pos:position pos:line="108" pos:column="25"/></name></name> <operator pos:line="108" pos:column="26">!=<pos:position pos:line="108" pos:column="28"/></operator> <name pos:line="108" pos:column="29">NULL<pos:position pos:line="108" pos:column="33"/></name></expr>)<pos:position pos:line="108" pos:column="34"/></condition><then pos:line="108" pos:column="34">
      <block pos:line="109" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="110" pos:column="9">int<pos:position pos:line="110" pos:column="12"/></name></type> <name pos:line="110" pos:column="13">compare<pos:position pos:line="110" pos:column="20"/></name> <init pos:line="110" pos:column="21">= <expr><call><name pos:line="110" pos:column="23">strcmp<pos:position pos:line="110" pos:column="29"/></name> <argument_list pos:line="110" pos:column="30">(<argument><expr><name><name pos:line="110" pos:column="31">retval<pos:position pos:line="110" pos:column="37"/></name><operator pos:line="110" pos:column="37">-&gt;<pos:position pos:line="110" pos:column="42"/></operator><name pos:line="110" pos:column="39">filename<pos:position pos:line="110" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="49">abs_filename<pos:position pos:line="110" pos:column="61"/></name></expr></argument>)<pos:position pos:line="110" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="110" pos:column="63"/></decl_stmt>
	<if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name pos:line="111" pos:column="13">compare<pos:position pos:line="111" pos:column="20"/></name> <operator pos:line="111" pos:column="21">==<pos:position pos:line="111" pos:column="23"/></operator> <literal type="number" pos:line="111" pos:column="24">0<pos:position pos:line="111" pos:column="25"/></literal></expr>)<pos:position pos:line="111" pos:column="26"/></condition><then pos:line="111" pos:column="26">
	  <comment type="block" pos:line="112" pos:column="11">/* We found it!  */</comment>
	  <block type="pseudo"><break pos:line="113" pos:column="11">break;<pos:position pos:line="113" pos:column="17"/></break></block></then></if>
	<if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name pos:line="114" pos:column="13">compare<pos:position pos:line="114" pos:column="20"/></name> <operator pos:line="114" pos:column="21">&lt;<pos:position pos:line="114" pos:column="25"/></operator> <literal type="number" pos:line="114" pos:column="23">0<pos:position pos:line="114" pos:column="24"/></literal></expr>)<pos:position pos:line="114" pos:column="25"/></condition><then pos:line="114" pos:column="25">
	  <block pos:line="115" pos:column="11">{
	    <comment type="block" pos:line="116" pos:column="13">/* It's not in the list.  */</comment>
	    <expr_stmt><expr><name pos:line="117" pos:column="13">retval<pos:position pos:line="117" pos:column="19"/></name> <operator pos:line="117" pos:column="20">=<pos:position pos:line="117" pos:column="21"/></operator> <name pos:line="117" pos:column="22">NULL<pos:position pos:line="117" pos:column="26"/></name></expr>;<pos:position pos:line="117" pos:column="27"/></expr_stmt>
	    <break pos:line="118" pos:column="13">break;<pos:position pos:line="118" pos:column="19"/></break>
	  }<pos:position pos:line="119" pos:column="12"/></block></then></if>

	<expr_stmt><expr><name pos:line="121" pos:column="9">last<pos:position pos:line="121" pos:column="13"/></name> <operator pos:line="121" pos:column="14">=<pos:position pos:line="121" pos:column="15"/></operator> <name pos:line="121" pos:column="16">retval<pos:position pos:line="121" pos:column="22"/></name></expr>;<pos:position pos:line="121" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="122" pos:column="8"/></block></then></if></block></for>

  <if pos:line="124" pos:column="3">if <condition pos:line="124" pos:column="6">(<expr><name pos:line="124" pos:column="7">retval<pos:position pos:line="124" pos:column="13"/></name> <operator pos:line="124" pos:column="14">!=<pos:position pos:line="124" pos:column="16"/></operator> <name pos:line="124" pos:column="17">NULL<pos:position pos:line="124" pos:column="21"/></name> <operator pos:line="124" pos:column="22">||<pos:position pos:line="124" pos:column="24"/></operator> <name pos:line="124" pos:column="25">do_allocate<pos:position pos:line="124" pos:column="36"/></name> <operator pos:line="124" pos:column="37">==<pos:position pos:line="124" pos:column="39"/></operator> <literal type="number" pos:line="124" pos:column="40">0<pos:position pos:line="124" pos:column="41"/></literal></expr>)<pos:position pos:line="124" pos:column="42"/></condition><then pos:line="124" pos:column="42">
    <block pos:line="125" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="126" pos:column="7">free<pos:position pos:line="126" pos:column="11"/></name> <argument_list pos:line="126" pos:column="12">(<argument><expr><name pos:line="126" pos:column="13">abs_filename<pos:position pos:line="126" pos:column="25"/></name></expr></argument>)<pos:position pos:line="126" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="27"/></expr_stmt>
      <return pos:line="127" pos:column="7">return <expr><name pos:line="127" pos:column="14">retval<pos:position pos:line="127" pos:column="20"/></name></expr>;<pos:position pos:line="127" pos:column="21"/></return>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="130" pos:column="3">retval<pos:position pos:line="130" pos:column="9"/></name> <operator pos:line="130" pos:column="10">=<pos:position pos:line="130" pos:column="11"/></operator> <operator pos:line="130" pos:column="12">(<pos:position pos:line="130" pos:column="13"/></operator>struct <name pos:line="130" pos:column="20">loaded_l10nfile<pos:position pos:line="130" pos:column="35"/></name> <operator pos:line="130" pos:column="36">*<pos:position pos:line="130" pos:column="37"/></operator><operator pos:line="130" pos:column="37">)<pos:position pos:line="130" pos:column="38"/></operator>
    <call><name pos:line="131" pos:column="5">malloc<pos:position pos:line="131" pos:column="11"/></name> <argument_list pos:line="131" pos:column="12">(<argument><expr><sizeof pos:line="131" pos:column="13">sizeof <argument_list pos:line="131" pos:column="20">(<argument><expr><operator pos:line="131" pos:column="21">*<pos:position pos:line="131" pos:column="22"/></operator><name pos:line="131" pos:column="22">retval<pos:position pos:line="131" pos:column="28"/></name></expr></argument>)<pos:position pos:line="131" pos:column="29"/></argument_list></sizeof> <operator pos:line="131" pos:column="30">+<pos:position pos:line="131" pos:column="31"/></operator> <operator pos:line="131" pos:column="32">(<pos:position pos:line="131" pos:column="33"/></operator><call><name pos:line="131" pos:column="33">__argz_count<pos:position pos:line="131" pos:column="45"/></name> <argument_list pos:line="131" pos:column="46">(<argument><expr><name pos:line="131" pos:column="47">dirlist<pos:position pos:line="131" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="56">dirlist_len<pos:position pos:line="131" pos:column="67"/></name></expr></argument>)<pos:position pos:line="131" pos:column="68"/></argument_list></call>
				<operator pos:line="132" pos:column="33">*<pos:position pos:line="132" pos:column="34"/></operator> <operator pos:line="132" pos:column="35">(<pos:position pos:line="132" pos:column="36"/></operator><literal type="number" pos:line="132" pos:column="36">1<pos:position pos:line="132" pos:column="37"/></literal> <operator pos:line="132" pos:column="38">&lt;&lt;<pos:position pos:line="132" pos:column="46"/></operator> <call><name pos:line="132" pos:column="41">pop<pos:position pos:line="132" pos:column="44"/></name> <argument_list pos:line="132" pos:column="45">(<argument><expr><name pos:line="132" pos:column="46">mask<pos:position pos:line="132" pos:column="50"/></name></expr></argument>)<pos:position pos:line="132" pos:column="51"/></argument_list></call><operator pos:line="132" pos:column="51">)<pos:position pos:line="132" pos:column="52"/></operator>
				<operator pos:line="133" pos:column="33">*<pos:position pos:line="133" pos:column="34"/></operator> <sizeof pos:line="133" pos:column="35">sizeof <argument_list pos:line="133" pos:column="42">(<argument><expr pos:line="133" pos:column="43">struct <name pos:line="133" pos:column="50">loaded_l10nfile<pos:position pos:line="133" pos:column="65"/></name> <operator pos:line="133" pos:column="66">*<pos:position pos:line="133" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="133" pos:column="68"/></argument_list></sizeof><operator pos:line="133" pos:column="68">)<pos:position pos:line="133" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="133" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="71"/></expr_stmt>
  <if pos:line="134" pos:column="3">if <condition pos:line="134" pos:column="6">(<expr><name pos:line="134" pos:column="7">retval<pos:position pos:line="134" pos:column="13"/></name> <operator pos:line="134" pos:column="14">==<pos:position pos:line="134" pos:column="16"/></operator> <name pos:line="134" pos:column="17">NULL<pos:position pos:line="134" pos:column="21"/></name></expr>)<pos:position pos:line="134" pos:column="22"/></condition><then pos:line="134" pos:column="22">
    <block type="pseudo"><return pos:line="135" pos:column="5">return <expr><name pos:line="135" pos:column="12">NULL<pos:position pos:line="135" pos:column="16"/></name></expr>;<pos:position pos:line="135" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="137" pos:column="3">retval<pos:position pos:line="137" pos:column="9"/></name><operator pos:line="137" pos:column="9">-&gt;<pos:position pos:line="137" pos:column="14"/></operator><name pos:line="137" pos:column="11">filename<pos:position pos:line="137" pos:column="19"/></name></name> <operator pos:line="137" pos:column="20">=<pos:position pos:line="137" pos:column="21"/></operator> <name pos:line="137" pos:column="22">abs_filename<pos:position pos:line="137" pos:column="34"/></name></expr>;<pos:position pos:line="137" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="138" pos:column="3">retval<pos:position pos:line="138" pos:column="9"/></name><operator pos:line="138" pos:column="9">-&gt;<pos:position pos:line="138" pos:column="14"/></operator><name pos:line="138" pos:column="11">decided<pos:position pos:line="138" pos:column="18"/></name></name> <operator pos:line="138" pos:column="19">=<pos:position pos:line="138" pos:column="20"/></operator> <operator pos:line="138" pos:column="21">(<pos:position pos:line="138" pos:column="22"/></operator><call><name pos:line="138" pos:column="22">__argz_count<pos:position pos:line="138" pos:column="34"/></name> <argument_list pos:line="138" pos:column="35">(<argument><expr><name pos:line="138" pos:column="36">dirlist<pos:position pos:line="138" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="45">dirlist_len<pos:position pos:line="138" pos:column="56"/></name></expr></argument>)<pos:position pos:line="138" pos:column="57"/></argument_list></call> <operator pos:line="138" pos:column="58">!=<pos:position pos:line="138" pos:column="60"/></operator> <literal type="number" pos:line="138" pos:column="61">1<pos:position pos:line="138" pos:column="62"/></literal>
		     <operator pos:line="139" pos:column="22">||<pos:position pos:line="139" pos:column="24"/></operator> <operator pos:line="139" pos:column="25">(<pos:position pos:line="139" pos:column="26"/></operator><operator pos:line="139" pos:column="26">(<pos:position pos:line="139" pos:column="27"/></operator><name pos:line="139" pos:column="27">mask<pos:position pos:line="139" pos:column="31"/></name> <operator pos:line="139" pos:column="32">&amp;<pos:position pos:line="139" pos:column="37"/></operator> <name pos:line="139" pos:column="34">XPG_CODESET<pos:position pos:line="139" pos:column="45"/></name><operator pos:line="139" pos:column="45">)<pos:position pos:line="139" pos:column="46"/></operator> <operator pos:line="139" pos:column="47">!=<pos:position pos:line="139" pos:column="49"/></operator> <literal type="number" pos:line="139" pos:column="50">0<pos:position pos:line="139" pos:column="51"/></literal>
			 <operator pos:line="140" pos:column="26">&amp;&amp;<pos:position pos:line="140" pos:column="36"/></operator> <operator pos:line="140" pos:column="29">(<pos:position pos:line="140" pos:column="30"/></operator><name pos:line="140" pos:column="30">mask<pos:position pos:line="140" pos:column="34"/></name> <operator pos:line="140" pos:column="35">&amp;<pos:position pos:line="140" pos:column="40"/></operator> <name pos:line="140" pos:column="37">XPG_NORM_CODESET<pos:position pos:line="140" pos:column="53"/></name><operator pos:line="140" pos:column="53">)<pos:position pos:line="140" pos:column="54"/></operator> <operator pos:line="140" pos:column="55">!=<pos:position pos:line="140" pos:column="57"/></operator> <literal type="number" pos:line="140" pos:column="58">0<pos:position pos:line="140" pos:column="59"/></literal><operator pos:line="140" pos:column="59">)<pos:position pos:line="140" pos:column="60"/></operator><operator pos:line="140" pos:column="60">)<pos:position pos:line="140" pos:column="61"/></operator></expr>;<pos:position pos:line="140" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="141" pos:column="3">retval<pos:position pos:line="141" pos:column="9"/></name><operator pos:line="141" pos:column="9">-&gt;<pos:position pos:line="141" pos:column="14"/></operator><name pos:line="141" pos:column="11">data<pos:position pos:line="141" pos:column="15"/></name></name> <operator pos:line="141" pos:column="16">=<pos:position pos:line="141" pos:column="17"/></operator> <name pos:line="141" pos:column="18">NULL<pos:position pos:line="141" pos:column="22"/></name></expr>;<pos:position pos:line="141" pos:column="23"/></expr_stmt>

  <if pos:line="143" pos:column="3">if <condition pos:line="143" pos:column="6">(<expr><name pos:line="143" pos:column="7">last<pos:position pos:line="143" pos:column="11"/></name> <operator pos:line="143" pos:column="12">==<pos:position pos:line="143" pos:column="14"/></operator> <name pos:line="143" pos:column="15">NULL<pos:position pos:line="143" pos:column="19"/></name></expr>)<pos:position pos:line="143" pos:column="20"/></condition><then pos:line="143" pos:column="20">
    <block pos:line="144" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="145" pos:column="7">retval<pos:position pos:line="145" pos:column="13"/></name><operator pos:line="145" pos:column="13">-&gt;<pos:position pos:line="145" pos:column="18"/></operator><name pos:line="145" pos:column="15">next<pos:position pos:line="145" pos:column="19"/></name></name> <operator pos:line="145" pos:column="20">=<pos:position pos:line="145" pos:column="21"/></operator> <operator pos:line="145" pos:column="22">*<pos:position pos:line="145" pos:column="23"/></operator><name pos:line="145" pos:column="23">l10nfile_list<pos:position pos:line="145" pos:column="36"/></name></expr>;<pos:position pos:line="145" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="146" pos:column="7">*<pos:position pos:line="146" pos:column="8"/></operator><name pos:line="146" pos:column="8">l10nfile_list<pos:position pos:line="146" pos:column="21"/></name> <operator pos:line="146" pos:column="22">=<pos:position pos:line="146" pos:column="23"/></operator> <name pos:line="146" pos:column="24">retval<pos:position pos:line="146" pos:column="30"/></name></expr>;<pos:position pos:line="146" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="147" pos:column="6"/></block></then>
  <else pos:line="148" pos:column="3">else
    <block pos:line="149" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="150" pos:column="7">retval<pos:position pos:line="150" pos:column="13"/></name><operator pos:line="150" pos:column="13">-&gt;<pos:position pos:line="150" pos:column="18"/></operator><name pos:line="150" pos:column="15">next<pos:position pos:line="150" pos:column="19"/></name></name> <operator pos:line="150" pos:column="20">=<pos:position pos:line="150" pos:column="21"/></operator> <name><name pos:line="150" pos:column="22">last<pos:position pos:line="150" pos:column="26"/></name><operator pos:line="150" pos:column="26">-&gt;<pos:position pos:line="150" pos:column="31"/></operator><name pos:line="150" pos:column="28">next<pos:position pos:line="150" pos:column="32"/></name></name></expr>;<pos:position pos:line="150" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="151" pos:column="7">last<pos:position pos:line="151" pos:column="11"/></name><operator pos:line="151" pos:column="11">-&gt;<pos:position pos:line="151" pos:column="16"/></operator><name pos:line="151" pos:column="13">next<pos:position pos:line="151" pos:column="17"/></name></name> <operator pos:line="151" pos:column="18">=<pos:position pos:line="151" pos:column="19"/></operator> <name pos:line="151" pos:column="20">retval<pos:position pos:line="151" pos:column="26"/></name></expr>;<pos:position pos:line="151" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="152" pos:column="6"/></block></else></if>

  <expr_stmt><expr><name pos:line="154" pos:column="3">entries<pos:position pos:line="154" pos:column="10"/></name> <operator pos:line="154" pos:column="11">=<pos:position pos:line="154" pos:column="12"/></operator> <literal type="number" pos:line="154" pos:column="13">0<pos:position pos:line="154" pos:column="14"/></literal></expr>;<pos:position pos:line="154" pos:column="15"/></expr_stmt>
  <comment type="block" pos:line="155" pos:column="3">/* If the DIRLIST is a real list the RETVAL entry corresponds not to
     a real file.  So we have to use the DIRLIST separation mechanism
     of the inner loop.  */</comment>
  <expr_stmt><expr><name pos:line="158" pos:column="3">cnt<pos:position pos:line="158" pos:column="6"/></name> <operator pos:line="158" pos:column="7">=<pos:position pos:line="158" pos:column="8"/></operator> <ternary><condition><expr><call><name pos:line="158" pos:column="9">__argz_count<pos:position pos:line="158" pos:column="21"/></name> <argument_list pos:line="158" pos:column="22">(<argument><expr><name pos:line="158" pos:column="23">dirlist<pos:position pos:line="158" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="32">dirlist_len<pos:position pos:line="158" pos:column="43"/></name></expr></argument>)<pos:position pos:line="158" pos:column="44"/></argument_list></call> <operator pos:line="158" pos:column="45">==<pos:position pos:line="158" pos:column="47"/></operator> <literal type="number" pos:line="158" pos:column="48">1<pos:position pos:line="158" pos:column="49"/></literal></expr> ?<pos:position pos:line="158" pos:column="51"/></condition><then pos:line="158" pos:column="51"> <expr><name pos:line="158" pos:column="52">mask<pos:position pos:line="158" pos:column="56"/></name> <operator pos:line="158" pos:column="57">-<pos:position pos:line="158" pos:column="58"/></operator> <literal type="number" pos:line="158" pos:column="59">1<pos:position pos:line="158" pos:column="60"/></literal></expr> <pos:position pos:line="158" pos:column="61"/></then><else pos:line="158" pos:column="61">: <expr><name pos:line="158" pos:column="63">mask<pos:position pos:line="158" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="158" pos:column="68"/></expr_stmt>
  <for pos:line="159" pos:column="3">for <control pos:line="159" pos:column="7">(<init pos:line="159" pos:column="8">;<pos:position pos:line="159" pos:column="9"/></init> <condition><expr><name pos:line="159" pos:column="10">cnt<pos:position pos:line="159" pos:column="13"/></name> <operator pos:line="159" pos:column="14">&gt;=<pos:position pos:line="159" pos:column="19"/></operator> <literal type="number" pos:line="159" pos:column="17">0<pos:position pos:line="159" pos:column="18"/></literal></expr>;<pos:position pos:line="159" pos:column="19"/></condition> <incr><expr><operator pos:line="159" pos:column="20">--<pos:position pos:line="159" pos:column="22"/></operator><name pos:line="159" pos:column="22">cnt<pos:position pos:line="159" pos:column="25"/></name></expr></incr>)<pos:position pos:line="159" pos:column="26"/></control>
    <block type="pseudo"><if pos:line="160" pos:column="5">if <condition pos:line="160" pos:column="8">(<expr><operator pos:line="160" pos:column="9">(<pos:position pos:line="160" pos:column="10"/></operator><name pos:line="160" pos:column="10">cnt<pos:position pos:line="160" pos:column="13"/></name> <operator pos:line="160" pos:column="14">&amp;<pos:position pos:line="160" pos:column="19"/></operator> <operator pos:line="160" pos:column="16">~<pos:position pos:line="160" pos:column="17"/></operator><name pos:line="160" pos:column="17">mask<pos:position pos:line="160" pos:column="21"/></name><operator pos:line="160" pos:column="21">)<pos:position pos:line="160" pos:column="22"/></operator> <operator pos:line="160" pos:column="23">==<pos:position pos:line="160" pos:column="25"/></operator> <literal type="number" pos:line="160" pos:column="26">0<pos:position pos:line="160" pos:column="27"/></literal>
	<operator pos:line="161" pos:column="9">&amp;&amp;<pos:position pos:line="161" pos:column="19"/></operator> <operator pos:line="161" pos:column="12">(<pos:position pos:line="161" pos:column="13"/></operator><operator pos:line="161" pos:column="13">(<pos:position pos:line="161" pos:column="14"/></operator><name pos:line="161" pos:column="14">cnt<pos:position pos:line="161" pos:column="17"/></name> <operator pos:line="161" pos:column="18">&amp;<pos:position pos:line="161" pos:column="23"/></operator> <name pos:line="161" pos:column="20">CEN_SPECIFIC<pos:position pos:line="161" pos:column="32"/></name><operator pos:line="161" pos:column="32">)<pos:position pos:line="161" pos:column="33"/></operator> <operator pos:line="161" pos:column="34">==<pos:position pos:line="161" pos:column="36"/></operator> <literal type="number" pos:line="161" pos:column="37">0<pos:position pos:line="161" pos:column="38"/></literal> <operator pos:line="161" pos:column="39">||<pos:position pos:line="161" pos:column="41"/></operator> <operator pos:line="161" pos:column="42">(<pos:position pos:line="161" pos:column="43"/></operator><name pos:line="161" pos:column="43">cnt<pos:position pos:line="161" pos:column="46"/></name> <operator pos:line="161" pos:column="47">&amp;<pos:position pos:line="161" pos:column="52"/></operator> <name pos:line="161" pos:column="49">XPG_SPECIFIC<pos:position pos:line="161" pos:column="61"/></name><operator pos:line="161" pos:column="61">)<pos:position pos:line="161" pos:column="62"/></operator> <operator pos:line="161" pos:column="63">==<pos:position pos:line="161" pos:column="65"/></operator> <literal type="number" pos:line="161" pos:column="66">0<pos:position pos:line="161" pos:column="67"/></literal><operator pos:line="161" pos:column="67">)<pos:position pos:line="161" pos:column="68"/></operator>
	<operator pos:line="162" pos:column="9">&amp;&amp;<pos:position pos:line="162" pos:column="19"/></operator> <operator pos:line="162" pos:column="12">(<pos:position pos:line="162" pos:column="13"/></operator><operator pos:line="162" pos:column="13">(<pos:position pos:line="162" pos:column="14"/></operator><name pos:line="162" pos:column="14">cnt<pos:position pos:line="162" pos:column="17"/></name> <operator pos:line="162" pos:column="18">&amp;<pos:position pos:line="162" pos:column="23"/></operator> <name pos:line="162" pos:column="20">XPG_CODESET<pos:position pos:line="162" pos:column="31"/></name><operator pos:line="162" pos:column="31">)<pos:position pos:line="162" pos:column="32"/></operator> <operator pos:line="162" pos:column="33">==<pos:position pos:line="162" pos:column="35"/></operator> <literal type="number" pos:line="162" pos:column="36">0<pos:position pos:line="162" pos:column="37"/></literal> <operator pos:line="162" pos:column="38">||<pos:position pos:line="162" pos:column="40"/></operator> <operator pos:line="162" pos:column="41">(<pos:position pos:line="162" pos:column="42"/></operator><name pos:line="162" pos:column="42">cnt<pos:position pos:line="162" pos:column="45"/></name> <operator pos:line="162" pos:column="46">&amp;<pos:position pos:line="162" pos:column="51"/></operator> <name pos:line="162" pos:column="48">XPG_NORM_CODESET<pos:position pos:line="162" pos:column="64"/></name><operator pos:line="162" pos:column="64">)<pos:position pos:line="162" pos:column="65"/></operator> <operator pos:line="162" pos:column="66">==<pos:position pos:line="162" pos:column="68"/></operator> <literal type="number" pos:line="162" pos:column="69">0<pos:position pos:line="162" pos:column="70"/></literal><operator pos:line="162" pos:column="70">)<pos:position pos:line="162" pos:column="71"/></operator></expr>)<pos:position pos:line="162" pos:column="72"/></condition><then pos:line="162" pos:column="72">
      <block pos:line="163" pos:column="7">{
	<comment type="block" pos:line="164" pos:column="9">/* Iterate over all elements of the DIRLIST.  */</comment>
	<decl_stmt><decl><type><name pos:line="165" pos:column="9">char<pos:position pos:line="165" pos:column="13"/></name> <modifier pos:line="165" pos:column="14">*<pos:position pos:line="165" pos:column="15"/></modifier></type><name pos:line="165" pos:column="15">dir<pos:position pos:line="165" pos:column="18"/></name> <init pos:line="165" pos:column="19">= <expr><name pos:line="165" pos:column="21">NULL<pos:position pos:line="165" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="165" pos:column="26"/></decl_stmt>

	<while pos:line="167" pos:column="9">while <condition pos:line="167" pos:column="15">(<expr><operator pos:line="167" pos:column="16">(<pos:position pos:line="167" pos:column="17"/></operator><name pos:line="167" pos:column="17">dir<pos:position pos:line="167" pos:column="20"/></name> <operator pos:line="167" pos:column="21">=<pos:position pos:line="167" pos:column="22"/></operator> <call><name pos:line="167" pos:column="23">__argz_next<pos:position pos:line="167" pos:column="34"/></name> <argument_list pos:line="167" pos:column="35">(<argument><expr><operator pos:line="167" pos:column="36">(<pos:position pos:line="167" pos:column="37"/></operator><name pos:line="167" pos:column="37">char<pos:position pos:line="167" pos:column="41"/></name> <operator pos:line="167" pos:column="42">*<pos:position pos:line="167" pos:column="43"/></operator><operator pos:line="167" pos:column="43">)<pos:position pos:line="167" pos:column="44"/></operator> <name pos:line="167" pos:column="45">dirlist<pos:position pos:line="167" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="54">dirlist_len<pos:position pos:line="167" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="67">dir<pos:position pos:line="167" pos:column="70"/></name></expr></argument>)<pos:position pos:line="167" pos:column="71"/></argument_list></call><operator pos:line="167" pos:column="71">)<pos:position pos:line="167" pos:column="72"/></operator>
	       <operator pos:line="168" pos:column="16">!=<pos:position pos:line="168" pos:column="18"/></operator> <name pos:line="168" pos:column="19">NULL<pos:position pos:line="168" pos:column="23"/></name></expr>)<pos:position pos:line="168" pos:column="24"/></condition>
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="169" pos:column="11">retval<pos:position pos:line="169" pos:column="17"/></name><operator pos:line="169" pos:column="17">-&gt;<pos:position pos:line="169" pos:column="22"/></operator><name pos:line="169" pos:column="19">successor<pos:position pos:line="169" pos:column="28"/></name><index pos:line="169" pos:column="28">[<expr><name pos:line="169" pos:column="29">entries<pos:position pos:line="169" pos:column="36"/></name><operator pos:line="169" pos:column="36">++<pos:position pos:line="169" pos:column="38"/></operator></expr>]<pos:position pos:line="169" pos:column="39"/></index></name>
	    <operator pos:line="170" pos:column="13">=<pos:position pos:line="170" pos:column="14"/></operator> <call><name pos:line="170" pos:column="15">_nl_make_l10nflist<pos:position pos:line="170" pos:column="33"/></name> <argument_list pos:line="170" pos:column="34">(<argument><expr><name pos:line="170" pos:column="35">l10nfile_list<pos:position pos:line="170" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="50">dir<pos:position pos:line="170" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="170" pos:column="55">strlen<pos:position pos:line="170" pos:column="61"/></name> <argument_list pos:line="170" pos:column="62">(<argument><expr><name pos:line="170" pos:column="63">dir<pos:position pos:line="170" pos:column="66"/></name></expr></argument>)<pos:position pos:line="170" pos:column="67"/></argument_list></call> <operator pos:line="170" pos:column="68">+<pos:position pos:line="170" pos:column="69"/></operator> <literal type="number" pos:line="170" pos:column="70">1<pos:position pos:line="170" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="73">cnt<pos:position pos:line="170" pos:column="76"/></name></expr></argument>,
				  <argument><expr><name pos:line="171" pos:column="35">language<pos:position pos:line="171" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="45">territory<pos:position pos:line="171" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="56">codeset<pos:position pos:line="171" pos:column="63"/></name></expr></argument>,
				  <argument><expr><name pos:line="172" pos:column="35">normalized_codeset<pos:position pos:line="172" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="55">modifier<pos:position pos:line="172" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="65">special<pos:position pos:line="172" pos:column="72"/></name></expr></argument>,
				  <argument><expr><name pos:line="173" pos:column="35">sponsor<pos:position pos:line="173" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="44">revision<pos:position pos:line="173" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="54">filename<pos:position pos:line="173" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="173" pos:column="64">1<pos:position pos:line="173" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="67"/></expr_stmt></block></while>
      }<pos:position pos:line="174" pos:column="8"/></block></then></if></block></for>
  <expr_stmt><expr><name><name pos:line="175" pos:column="3">retval<pos:position pos:line="175" pos:column="9"/></name><operator pos:line="175" pos:column="9">-&gt;<pos:position pos:line="175" pos:column="14"/></operator><name pos:line="175" pos:column="11">successor<pos:position pos:line="175" pos:column="20"/></name><index pos:line="175" pos:column="20">[<expr><name pos:line="175" pos:column="21">entries<pos:position pos:line="175" pos:column="28"/></name></expr>]<pos:position pos:line="175" pos:column="29"/></index></name> <operator pos:line="175" pos:column="30">=<pos:position pos:line="175" pos:column="31"/></operator> <name pos:line="175" pos:column="32">NULL<pos:position pos:line="175" pos:column="36"/></name></expr>;<pos:position pos:line="175" pos:column="37"/></expr_stmt>

  <return pos:line="177" pos:column="3">return <expr><name pos:line="177" pos:column="10">retval<pos:position pos:line="177" pos:column="16"/></name></expr>;<pos:position pos:line="177" pos:column="17"/></return>
}<pos:position pos:line="178" pos:column="2"/></block></unit>

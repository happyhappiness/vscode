<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_670_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">url_ciss_tostring<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">ciss_url_t<pos:position pos:line="1" pos:column="34"/></name><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type> <name pos:line="1" pos:column="36">ciss<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">dest<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">size_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">len<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">flags<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">long<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">l<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">ciss<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">scheme<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">==<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">U_UNKNOWN<pos:position pos:line="5" pos:column="32"/></name></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">snprintf<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">dest<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">len<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="24">"%s:"<pos:position pos:line="8" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="31">mutt_getnamebyvalue<pos:position pos:line="8" pos:column="50"/></name> <argument_list pos:line="8" pos:column="51">(<argument><expr><name><name pos:line="8" pos:column="52">ciss<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">-&gt;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="58">scheme<pos:position pos:line="8" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="66">UrlMap<pos:position pos:line="8" pos:column="72"/></name></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">ciss<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">host<pos:position pos:line="10" pos:column="17"/></name></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18">
  <block pos:line="11" pos:column="3">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">flags<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&amp;<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="19">U_PATH<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">)<pos:position pos:line="12" pos:column="26"/></operator></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">safe_strcat<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">dest<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">len<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"//"<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="14" pos:column="5">len<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">-=<pos:position pos:line="14" pos:column="11"/></operator> <operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">l<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">strlen<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">dest<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call><operator pos:line="14" pos:column="30">)<pos:position pos:line="14" pos:column="31"/></operator></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt> <expr_stmt><expr><name pos:line="14" pos:column="33">dest<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">+=<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">l<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">ciss<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">user<pos:position pos:line="16" pos:column="19"/></name></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20">
    <block pos:line="17" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="18" pos:column="7">char<pos:position pos:line="18" pos:column="11"/></name></type> <name><name pos:line="18" pos:column="12">u<pos:position pos:line="18" pos:column="13"/></name><index pos:line="18" pos:column="13">[<expr><name pos:line="18" pos:column="14">STRING<pos:position pos:line="18" pos:column="20"/></name></expr>]<pos:position pos:line="18" pos:column="21"/></index></name></decl>;<pos:position pos:line="18" pos:column="22"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">url_pct_encode<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">u<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="26">sizeof <argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">u<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="38">ciss<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">user<pos:position pos:line="19" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>

      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">flags<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">&amp;<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="19">U_DECODE_PASSWD<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">&amp;&amp;<pos:position pos:line="21" pos:column="45"/></operator> <name><name pos:line="21" pos:column="38">ciss<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">pass<pos:position pos:line="21" pos:column="48"/></name></name></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49">
      <block pos:line="22" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">char<pos:position pos:line="23" pos:column="13"/></name></type> <name><name pos:line="23" pos:column="14">p<pos:position pos:line="23" pos:column="15"/></name><index pos:line="23" pos:column="15">[<expr><name pos:line="23" pos:column="16">STRING<pos:position pos:line="23" pos:column="22"/></name></expr>]<pos:position pos:line="23" pos:column="23"/></index></name></decl>;<pos:position pos:line="23" pos:column="24"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">url_pct_encode<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">p<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="28">sizeof <argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">p<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="40">ciss<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">pass<pos:position pos:line="24" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">snprintf<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">dest<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="25">len<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="30">"%s:%s@"<pos:position pos:line="25" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">u<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">p<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="26" pos:column="8"/></block></then>
      <else pos:line="27" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="9">snprintf<pos:position pos:line="28" pos:column="17"/></name> <argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">dest<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="25">len<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="30">"%s@"<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">u<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt></block></else></if>

      <expr_stmt><expr><name pos:line="30" pos:column="7">len<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">-=<pos:position pos:line="30" pos:column="13"/></operator> <operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">l<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <call><name pos:line="30" pos:column="19">strlen<pos:position pos:line="30" pos:column="25"/></name> <argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">dest<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call><operator pos:line="30" pos:column="32">)<pos:position pos:line="30" pos:column="33"/></operator></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt> <expr_stmt><expr><name pos:line="30" pos:column="35">dest<pos:position pos:line="30" pos:column="39"/></name> <operator pos:line="30" pos:column="40">+=<pos:position pos:line="30" pos:column="42"/></operator> <name pos:line="30" pos:column="43">l<pos:position pos:line="30" pos:column="44"/></name></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">strchr<pos:position pos:line="33" pos:column="15"/></name> <argument_list pos:line="33" pos:column="16">(<argument><expr><name><name pos:line="33" pos:column="17">ciss<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">host<pos:position pos:line="33" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="33" pos:column="29">':'<pos:position pos:line="33" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">snprintf<pos:position pos:line="34" pos:column="15"/></name> <argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">dest<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">len<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="28">"[%s]"<pos:position pos:line="34" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="36">ciss<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">host<pos:position pos:line="34" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt></block></then>
    <else pos:line="35" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="7">snprintf<pos:position pos:line="36" pos:column="15"/></name> <argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">dest<pos:position pos:line="36" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="23">len<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="28">"%s"<pos:position pos:line="36" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="34">ciss<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">host<pos:position pos:line="36" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">len<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">-=<pos:position pos:line="38" pos:column="11"/></operator> <operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">l<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <call><name pos:line="38" pos:column="17">strlen<pos:position pos:line="38" pos:column="23"/></name> <argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">dest<pos:position pos:line="38" pos:column="29"/></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call><operator pos:line="38" pos:column="30">)<pos:position pos:line="38" pos:column="31"/></operator></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt> <expr_stmt><expr><name pos:line="38" pos:column="33">dest<pos:position pos:line="38" pos:column="37"/></name> <operator pos:line="38" pos:column="38">+=<pos:position pos:line="38" pos:column="40"/></operator> <name pos:line="38" pos:column="41">l<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">ciss<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">port<pos:position pos:line="40" pos:column="19"/></name></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="7">snprintf<pos:position pos:line="41" pos:column="15"/></name> <argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">dest<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="23">len<pos:position pos:line="41" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="28">":%hu/"<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="37">ciss<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">port<pos:position pos:line="41" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt></block></then>
    <else pos:line="42" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="7">snprintf<pos:position pos:line="43" pos:column="15"/></name> <argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">dest<pos:position pos:line="43" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="23">len<pos:position pos:line="43" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="28">"/"<pos:position pos:line="43" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt></block></else></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name><name pos:line="46" pos:column="7">ciss<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">path<pos:position pos:line="46" pos:column="17"/></name></name></expr>)<pos:position pos:line="46" pos:column="18"/></condition><then pos:line="46" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="5">safe_strcat<pos:position pos:line="47" pos:column="16"/></name> <argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">dest<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="24">len<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="29">ciss<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">-&gt;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="35">path<pos:position pos:line="47" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt></block></then></if>

  <return pos:line="49" pos:column="3">return <expr><literal type="number" pos:line="49" pos:column="10">0<pos:position pos:line="49" pos:column="11"/></literal></expr>;<pos:position pos:line="49" pos:column="12"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

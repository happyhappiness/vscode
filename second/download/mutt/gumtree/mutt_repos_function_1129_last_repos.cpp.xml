<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1129_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pop_fetch_message<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">CONTEXT<pos:position pos:line="1" pos:column="38"/></name><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type> <name pos:line="1" pos:column="40">ctx<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">MESSAGE<pos:position pos:line="1" pos:column="52"/></name><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="54">msg<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">msgno<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">void<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">uidl<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">LONG_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">path<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><name pos:line="6" pos:column="13">_POSIX_PATH_MAX<pos:position pos:line="6" pos:column="28"/></name></expr>]<pos:position pos:line="6" pos:column="29"/></index></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">progress_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">progressbar<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">POP_DATA<pos:position pos:line="8" pos:column="11"/></name> <modifier pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></modifier></type><name pos:line="8" pos:column="13">pop_data<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">POP_DATA<pos:position pos:line="8" pos:column="33"/></name> <operator pos:line="8" pos:column="34">*<pos:position pos:line="8" pos:column="35"/></operator><operator pos:line="8" pos:column="35">)<pos:position pos:line="8" pos:column="36"/></operator><name><name pos:line="8" pos:column="36">ctx<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">data<pos:position pos:line="8" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">POP_CACHE<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">cache<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">HEADER<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">h<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><name><name pos:line="10" pos:column="15">ctx<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">hdrs<pos:position pos:line="10" pos:column="24"/></name><index pos:line="10" pos:column="24">[<expr><name pos:line="10" pos:column="25">msgno<pos:position pos:line="10" pos:column="30"/></name></expr>]<pos:position pos:line="10" pos:column="31"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">short<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">bcache<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><literal type="number" pos:line="11" pos:column="27">1<pos:position pos:line="11" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>

  <comment type="block" pos:line="13" pos:column="3">/* see if we already have the message in body cache */</comment>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><operator pos:line="14" pos:column="7">(<pos:position pos:line="14" pos:column="8"/></operator><name><name pos:line="14" pos:column="8">msg<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">fp<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">mutt_bcache_get<pos:position pos:line="14" pos:column="33"/></name> <argument_list pos:line="14" pos:column="34">(<argument><expr><name><name pos:line="14" pos:column="35">pop_data<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">bcache<pos:position pos:line="14" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="53">h<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">data<pos:position pos:line="14" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call><operator pos:line="14" pos:column="61">)<pos:position pos:line="14" pos:column="62"/></operator></expr>)<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/*
   * see if we already have the message in our cache in
   * case $message_cachedir is unset
   */</comment>
  <expr_stmt><expr><name pos:line="21" pos:column="3">cache<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <operator pos:line="21" pos:column="11">&amp;<pos:position pos:line="21" pos:column="16"/></operator><name><name pos:line="21" pos:column="12">pop_data<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">cache<pos:position pos:line="21" pos:column="27"/></name><index pos:line="21" pos:column="27">[<expr><name><name pos:line="21" pos:column="28">h<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">index<pos:position pos:line="21" pos:column="36"/></name></name> <operator pos:line="21" pos:column="37">%<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">POP_CACHE_LEN<pos:position pos:line="21" pos:column="52"/></name></expr>]<pos:position pos:line="21" pos:column="53"/></index></name></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">cache<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">path<pos:position pos:line="23" pos:column="18"/></name></name></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19">
  <block pos:line="24" pos:column="3">{
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">cache<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">index<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">==<pos:position pos:line="25" pos:column="24"/></operator> <name><name pos:line="25" pos:column="25">h<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">index<pos:position pos:line="25" pos:column="33"/></name></name></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34">
    <block pos:line="26" pos:column="5">{
      <comment type="block" pos:line="27" pos:column="7">/* yes, so just return a pointer to the message */</comment>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">msg<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">fp<pos:position pos:line="28" pos:column="14"/></name></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">fopen<pos:position pos:line="28" pos:column="22"/></name> <argument_list pos:line="28" pos:column="23">(<argument><expr><name><name pos:line="28" pos:column="24">cache<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">path<pos:position pos:line="28" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="37">"r"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name><name pos:line="29" pos:column="11">msg<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">fp<pos:position pos:line="29" pos:column="18"/></name></name></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19">
	<block type="pseudo"><return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return></block></then></if>
      
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">mutt_perror<pos:position pos:line="32" pos:column="18"/></name> <argument_list pos:line="32" pos:column="19">(<argument><expr><name><name pos:line="32" pos:column="20">cache<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">path<pos:position pos:line="32" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">mutt_sleep<pos:position pos:line="33" pos:column="17"/></name> <argument_list pos:line="33" pos:column="18">(<argument><expr><literal type="number" pos:line="33" pos:column="19">2<pos:position pos:line="33" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>
      <return pos:line="34" pos:column="7">return <expr><operator pos:line="34" pos:column="14">-<pos:position pos:line="34" pos:column="15"/></operator><literal type="number" pos:line="34" pos:column="15">1<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then>
    <else pos:line="36" pos:column="5">else
    <block pos:line="37" pos:column="5">{
      <comment type="block" pos:line="38" pos:column="7">/* clear the previous entry */</comment>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">unlink<pos:position pos:line="39" pos:column="13"/></name> <argument_list pos:line="39" pos:column="14">(<argument><expr><name><name pos:line="39" pos:column="15">cache<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">path<pos:position pos:line="39" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">FREE<pos:position pos:line="40" pos:column="11"/></name> <argument_list pos:line="40" pos:column="12">(<argument><expr><operator pos:line="40" pos:column="13">&amp;<pos:position pos:line="40" pos:column="18"/></operator><name><name pos:line="40" pos:column="14">cache<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">path<pos:position pos:line="40" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <macro><name pos:line="44" pos:column="3">FOREVER<pos:position pos:line="44" pos:column="10"/></name></macro>
  <block pos:line="45" pos:column="3">{
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">pop_reconnect<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">ctx<pos:position pos:line="46" pos:column="27"/></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call> <operator pos:line="46" pos:column="29">&lt;<pos:position pos:line="46" pos:column="33"/></operator> <literal type="number" pos:line="46" pos:column="31">0<pos:position pos:line="46" pos:column="32"/></literal></expr>)<pos:position pos:line="46" pos:column="33"/></condition><then pos:line="46" pos:column="33">
      <block type="pseudo"><return pos:line="47" pos:column="7">return <expr><operator pos:line="47" pos:column="14">-<pos:position pos:line="47" pos:column="15"/></operator><literal type="number" pos:line="47" pos:column="15">1<pos:position pos:line="47" pos:column="16"/></literal></expr>;<pos:position pos:line="47" pos:column="17"/></return></block></then></if>

    <comment type="block" pos:line="49" pos:column="5">/* verify that massage index is correct */</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">h<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">refno<pos:position pos:line="50" pos:column="17"/></name></name> <operator pos:line="50" pos:column="18">&lt;<pos:position pos:line="50" pos:column="22"/></operator> <literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal></expr>)<pos:position pos:line="50" pos:column="22"/></condition><then pos:line="50" pos:column="22">
    <block pos:line="51" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="52" pos:column="7">mutt_error<pos:position pos:line="52" pos:column="17"/></name></type> <name pos:line="52" pos:column="18">_<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><literal type="string" pos:line="52" pos:column="20">"The message index is incorrect. Try reopening the mailbox."<pos:position pos:line="52" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="81"/></argument_list></decl>;<pos:position pos:line="52" pos:column="82"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">mutt_sleep<pos:position pos:line="53" pos:column="17"/></name> <argument_list pos:line="53" pos:column="18">(<argument><expr><literal type="number" pos:line="53" pos:column="19">2<pos:position pos:line="53" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>
      <return pos:line="54" pos:column="7">return <expr><operator pos:line="54" pos:column="14">-<pos:position pos:line="54" pos:column="15"/></operator><literal type="number" pos:line="54" pos:column="15">1<pos:position pos:line="54" pos:column="16"/></literal></expr>;<pos:position pos:line="54" pos:column="17"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="57" pos:column="5">mutt_progress_init<pos:position pos:line="57" pos:column="23"/></name> <argument_list pos:line="57" pos:column="24">(<argument><expr><operator pos:line="57" pos:column="25">&amp;<pos:position pos:line="57" pos:column="30"/></operator><name pos:line="57" pos:column="26">progressbar<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="39">_<pos:position pos:line="57" pos:column="40"/></name><argument_list pos:line="57" pos:column="40">(<argument><expr><literal type="string" pos:line="57" pos:column="41">"Fetching message..."<pos:position pos:line="57" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="58" pos:column="25">MUTT_PROGRESS_SIZE<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="45">NetInc<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="53">h<pos:position pos:line="58" pos:column="54"/></name><operator pos:line="58" pos:column="54">-&gt;<pos:position pos:line="58" pos:column="59"/></operator><name pos:line="58" pos:column="56">content<pos:position pos:line="58" pos:column="63"/></name><operator pos:line="58" pos:column="63">-&gt;<pos:position pos:line="58" pos:column="68"/></operator><name pos:line="58" pos:column="65">length<pos:position pos:line="58" pos:column="71"/></name></name> <operator pos:line="58" pos:column="72">+<pos:position pos:line="58" pos:column="73"/></operator> <name><name pos:line="58" pos:column="74">h<pos:position pos:line="58" pos:column="75"/></name><operator pos:line="58" pos:column="75">-&gt;<pos:position pos:line="58" pos:column="80"/></operator><name pos:line="58" pos:column="77">content<pos:position pos:line="58" pos:column="84"/></name><operator pos:line="58" pos:column="84">-&gt;<pos:position pos:line="58" pos:column="89"/></operator><name pos:line="58" pos:column="86">offset<pos:position pos:line="58" pos:column="92"/></name></name> <operator pos:line="58" pos:column="93">-<pos:position pos:line="58" pos:column="94"/></operator> <literal type="number" pos:line="58" pos:column="95">1<pos:position pos:line="58" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="98"/></expr_stmt>

    <comment type="block" pos:line="60" pos:column="5">/* see if we can put in body cache; use our cache as fallback */</comment>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">!<pos:position pos:line="61" pos:column="10"/></operator><operator pos:line="61" pos:column="10">(<pos:position pos:line="61" pos:column="11"/></operator><name><name pos:line="61" pos:column="11">msg<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">fp<pos:position pos:line="61" pos:column="18"/></name></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <call><name pos:line="61" pos:column="21">mutt_bcache_put<pos:position pos:line="61" pos:column="36"/></name> <argument_list pos:line="61" pos:column="37">(<argument><expr><name><name pos:line="61" pos:column="38">pop_data<pos:position pos:line="61" pos:column="46"/></name><operator pos:line="61" pos:column="46">-&gt;<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="48">bcache<pos:position pos:line="61" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="56">h<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">-&gt;<pos:position pos:line="61" pos:column="62"/></operator><name pos:line="61" pos:column="59">data<pos:position pos:line="61" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="65">1<pos:position pos:line="61" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="67"/></argument_list></call><operator pos:line="61" pos:column="67">)<pos:position pos:line="61" pos:column="68"/></operator></expr>)<pos:position pos:line="61" pos:column="69"/></condition><then pos:line="61" pos:column="69">
    <block pos:line="62" pos:column="5">{
      <comment type="block" pos:line="63" pos:column="7">/* no */</comment>
      <expr_stmt><expr><name pos:line="64" pos:column="7">bcache<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <literal type="number" pos:line="64" pos:column="16">0<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">mutt_mktemp<pos:position pos:line="65" pos:column="18"/></name> <argument_list pos:line="65" pos:column="19">(<argument><expr><name pos:line="65" pos:column="20">path<pos:position pos:line="65" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="26">sizeof <argument_list pos:line="65" pos:column="33">(<argument><expr><name pos:line="65" pos:column="34">path<pos:position pos:line="65" pos:column="38"/></name></expr></argument>)<pos:position pos:line="65" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
      <if pos:line="66" pos:column="7">if <condition pos:line="66" pos:column="10">(<expr><operator pos:line="66" pos:column="11">!<pos:position pos:line="66" pos:column="12"/></operator><operator pos:line="66" pos:column="12">(<pos:position pos:line="66" pos:column="13"/></operator><name><name pos:line="66" pos:column="13">msg<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">fp<pos:position pos:line="66" pos:column="20"/></name></name> <operator pos:line="66" pos:column="21">=<pos:position pos:line="66" pos:column="22"/></operator> <call><name pos:line="66" pos:column="23">safe_fopen<pos:position pos:line="66" pos:column="33"/></name> <argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">path<pos:position pos:line="66" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="41">"w+"<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="46"/></argument_list></call><operator pos:line="66" pos:column="46">)<pos:position pos:line="66" pos:column="47"/></operator></expr>)<pos:position pos:line="66" pos:column="48"/></condition><then pos:line="66" pos:column="48">
      <block pos:line="67" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">mutt_perror<pos:position pos:line="68" pos:column="20"/></name> <argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">path<pos:position pos:line="68" pos:column="26"/></name></expr></argument>)<pos:position pos:line="68" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">mutt_sleep<pos:position pos:line="69" pos:column="19"/></name> <argument_list pos:line="69" pos:column="20">(<argument><expr><literal type="number" pos:line="69" pos:column="21">2<pos:position pos:line="69" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt>
	<return pos:line="70" pos:column="9">return <expr><operator pos:line="70" pos:column="16">-<pos:position pos:line="70" pos:column="17"/></operator><literal type="number" pos:line="70" pos:column="17">1<pos:position pos:line="70" pos:column="18"/></literal></expr>;<pos:position pos:line="70" pos:column="19"/></return>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="74" pos:column="5">snprintf<pos:position pos:line="74" pos:column="13"/></name> <argument_list pos:line="74" pos:column="14">(<argument><expr><name pos:line="74" pos:column="15">buf<pos:position pos:line="74" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="20">sizeof <argument_list pos:line="74" pos:column="27">(<argument><expr><name pos:line="74" pos:column="28">buf<pos:position pos:line="74" pos:column="31"/></name></expr></argument>)<pos:position pos:line="74" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="34">"RETR %d\r\n"<pos:position pos:line="74" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="49">h<pos:position pos:line="74" pos:column="50"/></name><operator pos:line="74" pos:column="50">-&gt;<pos:position pos:line="74" pos:column="55"/></operator><name pos:line="74" pos:column="52">refno<pos:position pos:line="74" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name pos:line="76" pos:column="5">ret<pos:position pos:line="76" pos:column="8"/></name> <operator pos:line="76" pos:column="9">=<pos:position pos:line="76" pos:column="10"/></operator> <call><name pos:line="76" pos:column="11">pop_fetch_data<pos:position pos:line="76" pos:column="25"/></name> <argument_list pos:line="76" pos:column="26">(<argument><expr><name pos:line="76" pos:column="27">pop_data<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">buf<pos:position pos:line="76" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="42">&amp;<pos:position pos:line="76" pos:column="47"/></operator><name pos:line="76" pos:column="43">progressbar<pos:position pos:line="76" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="56">fetch_message<pos:position pos:line="76" pos:column="69"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="71">msg<pos:position pos:line="76" pos:column="74"/></name><operator pos:line="76" pos:column="74">-&gt;<pos:position pos:line="76" pos:column="79"/></operator><name pos:line="76" pos:column="76">fp<pos:position pos:line="76" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="80"/></expr_stmt>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name pos:line="77" pos:column="9">ret<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">==<pos:position pos:line="77" pos:column="15"/></operator> <literal type="number" pos:line="77" pos:column="16">0<pos:position pos:line="77" pos:column="17"/></literal></expr>)<pos:position pos:line="77" pos:column="18"/></condition><then pos:line="77" pos:column="18">
      <block type="pseudo"><break pos:line="78" pos:column="7">break;<pos:position pos:line="78" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="80" pos:column="5">safe_fclose<pos:position pos:line="80" pos:column="16"/></name> <argument_list pos:line="80" pos:column="17">(<argument><expr><operator pos:line="80" pos:column="18">&amp;<pos:position pos:line="80" pos:column="23"/></operator><name><name pos:line="80" pos:column="19">msg<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">-&gt;<pos:position pos:line="80" pos:column="27"/></operator><name pos:line="80" pos:column="24">fp<pos:position pos:line="80" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="82" pos:column="5">/* if RETR failed (e.g. connection closed), be sure to remove either
     * the file in bcache or from POP's own cache since the next iteration
     * of the loop will re-attempt to put() the message */</comment>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><operator pos:line="85" pos:column="9">!<pos:position pos:line="85" pos:column="10"/></operator><name pos:line="85" pos:column="10">bcache<pos:position pos:line="85" pos:column="16"/></name></expr>)<pos:position pos:line="85" pos:column="17"/></condition><then pos:line="85" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="7">unlink<pos:position pos:line="86" pos:column="13"/></name> <argument_list pos:line="86" pos:column="14">(<argument><expr><name pos:line="86" pos:column="15">path<pos:position pos:line="86" pos:column="19"/></name></expr></argument>)<pos:position pos:line="86" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="21"/></expr_stmt></block></then></if>

    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">ret<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">==<pos:position pos:line="88" pos:column="15"/></operator> <operator pos:line="88" pos:column="16">-<pos:position pos:line="88" pos:column="17"/></operator><literal type="number" pos:line="88" pos:column="17">2<pos:position pos:line="88" pos:column="18"/></literal></expr>)<pos:position pos:line="88" pos:column="19"/></condition><then pos:line="88" pos:column="19">
    <block pos:line="89" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">mutt_error<pos:position pos:line="90" pos:column="17"/></name> <argument_list pos:line="90" pos:column="18">(<argument><expr><literal type="string" pos:line="90" pos:column="19">"%s"<pos:position pos:line="90" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="25">pop_data<pos:position pos:line="90" pos:column="33"/></name><operator pos:line="90" pos:column="33">-&gt;<pos:position pos:line="90" pos:column="38"/></operator><name pos:line="90" pos:column="35">err_msg<pos:position pos:line="90" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">mutt_sleep<pos:position pos:line="91" pos:column="17"/></name> <argument_list pos:line="91" pos:column="18">(<argument><expr><literal type="number" pos:line="91" pos:column="19">2<pos:position pos:line="91" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="22"/></expr_stmt>
      <return pos:line="92" pos:column="7">return <expr><operator pos:line="92" pos:column="14">-<pos:position pos:line="92" pos:column="15"/></operator><literal type="number" pos:line="92" pos:column="15">1<pos:position pos:line="92" pos:column="16"/></literal></expr>;<pos:position pos:line="92" pos:column="17"/></return>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">ret<pos:position pos:line="95" pos:column="12"/></name> <operator pos:line="95" pos:column="13">==<pos:position pos:line="95" pos:column="15"/></operator> <operator pos:line="95" pos:column="16">-<pos:position pos:line="95" pos:column="17"/></operator><literal type="number" pos:line="95" pos:column="17">3<pos:position pos:line="95" pos:column="18"/></literal></expr>)<pos:position pos:line="95" pos:column="19"/></condition><then pos:line="95" pos:column="19">
    <block pos:line="96" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="97" pos:column="7">mutt_error<pos:position pos:line="97" pos:column="17"/></name></type> <name pos:line="97" pos:column="18">_<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><literal type="string" pos:line="97" pos:column="20">"Can't write message to temporary file!"<pos:position pos:line="97" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="61"/></argument_list></decl>;<pos:position pos:line="97" pos:column="62"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="98" pos:column="7">mutt_sleep<pos:position pos:line="98" pos:column="17"/></name> <argument_list pos:line="98" pos:column="18">(<argument><expr><literal type="number" pos:line="98" pos:column="19">2<pos:position pos:line="98" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="22"/></expr_stmt>
      <return pos:line="99" pos:column="7">return <expr><operator pos:line="99" pos:column="14">-<pos:position pos:line="99" pos:column="15"/></operator><literal type="number" pos:line="99" pos:column="15">1<pos:position pos:line="99" pos:column="16"/></literal></expr>;<pos:position pos:line="99" pos:column="17"/></return>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
  }<pos:position pos:line="101" pos:column="4"/></block>

  <comment type="block" pos:line="103" pos:column="3">/* Update the header information.  Previously, we only downloaded a
   * portion of the headers, those required for the main display.
   */</comment>
  <if pos:line="106" pos:column="3">if <condition pos:line="106" pos:column="6">(<expr><name pos:line="106" pos:column="7">bcache<pos:position pos:line="106" pos:column="13"/></name></expr>)<pos:position pos:line="106" pos:column="14"/></condition><then pos:line="106" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="5">mutt_bcache_commit<pos:position pos:line="107" pos:column="23"/></name> <argument_list pos:line="107" pos:column="24">(<argument><expr><name><name pos:line="107" pos:column="25">pop_data<pos:position pos:line="107" pos:column="33"/></name><operator pos:line="107" pos:column="33">-&gt;<pos:position pos:line="107" pos:column="38"/></operator><name pos:line="107" pos:column="35">bcache<pos:position pos:line="107" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="43">h<pos:position pos:line="107" pos:column="44"/></name><operator pos:line="107" pos:column="44">-&gt;<pos:position pos:line="107" pos:column="49"/></operator><name pos:line="107" pos:column="46">data<pos:position pos:line="107" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="52"/></expr_stmt></block></then>
  <else pos:line="108" pos:column="3">else
  <block pos:line="109" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="110" pos:column="5">cache<pos:position pos:line="110" pos:column="10"/></name><operator pos:line="110" pos:column="10">-&gt;<pos:position pos:line="110" pos:column="15"/></operator><name pos:line="110" pos:column="12">index<pos:position pos:line="110" pos:column="17"/></name></name> <operator pos:line="110" pos:column="18">=<pos:position pos:line="110" pos:column="19"/></operator> <name><name pos:line="110" pos:column="20">h<pos:position pos:line="110" pos:column="21"/></name><operator pos:line="110" pos:column="21">-&gt;<pos:position pos:line="110" pos:column="26"/></operator><name pos:line="110" pos:column="23">index<pos:position pos:line="110" pos:column="28"/></name></name></expr>;<pos:position pos:line="110" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="111" pos:column="5">cache<pos:position pos:line="111" pos:column="10"/></name><operator pos:line="111" pos:column="10">-&gt;<pos:position pos:line="111" pos:column="15"/></operator><name pos:line="111" pos:column="12">path<pos:position pos:line="111" pos:column="16"/></name></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <call><name pos:line="111" pos:column="19">safe_strdup<pos:position pos:line="111" pos:column="30"/></name> <argument_list pos:line="111" pos:column="31">(<argument><expr><name pos:line="111" pos:column="32">path<pos:position pos:line="111" pos:column="36"/></name></expr></argument>)<pos:position pos:line="111" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="112" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="113" pos:column="3">rewind<pos:position pos:line="113" pos:column="9"/></name> <argument_list pos:line="113" pos:column="10">(<argument><expr><name><name pos:line="113" pos:column="11">msg<pos:position pos:line="113" pos:column="14"/></name><operator pos:line="113" pos:column="14">-&gt;<pos:position pos:line="113" pos:column="19"/></operator><name pos:line="113" pos:column="16">fp<pos:position pos:line="113" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="114" pos:column="3">uidl<pos:position pos:line="114" pos:column="7"/></name> <operator pos:line="114" pos:column="8">=<pos:position pos:line="114" pos:column="9"/></operator> <name><name pos:line="114" pos:column="10">h<pos:position pos:line="114" pos:column="11"/></name><operator pos:line="114" pos:column="11">-&gt;<pos:position pos:line="114" pos:column="16"/></operator><name pos:line="114" pos:column="13">data<pos:position pos:line="114" pos:column="17"/></name></name></expr>;<pos:position pos:line="114" pos:column="18"/></expr_stmt>

  <comment type="block" pos:line="116" pos:column="3">/* we replace envelop, key in subj_hash has to be updated as well */</comment>
  <if pos:line="117" pos:column="3">if <condition pos:line="117" pos:column="6">(<expr><name><name pos:line="117" pos:column="7">ctx<pos:position pos:line="117" pos:column="10"/></name><operator pos:line="117" pos:column="10">-&gt;<pos:position pos:line="117" pos:column="15"/></operator><name pos:line="117" pos:column="12">subj_hash<pos:position pos:line="117" pos:column="21"/></name></name> <operator pos:line="117" pos:column="22">&amp;&amp;<pos:position pos:line="117" pos:column="32"/></operator> <name><name pos:line="117" pos:column="25">h<pos:position pos:line="117" pos:column="26"/></name><operator pos:line="117" pos:column="26">-&gt;<pos:position pos:line="117" pos:column="31"/></operator><name pos:line="117" pos:column="28">env<pos:position pos:line="117" pos:column="31"/></name><operator pos:line="117" pos:column="31">-&gt;<pos:position pos:line="117" pos:column="36"/></operator><name pos:line="117" pos:column="33">real_subj<pos:position pos:line="117" pos:column="42"/></name></name></expr>)<pos:position pos:line="117" pos:column="43"/></condition><then pos:line="117" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="5">hash_delete<pos:position pos:line="118" pos:column="16"/></name> <argument_list pos:line="118" pos:column="17">(<argument><expr><name><name pos:line="118" pos:column="18">ctx<pos:position pos:line="118" pos:column="21"/></name><operator pos:line="118" pos:column="21">-&gt;<pos:position pos:line="118" pos:column="26"/></operator><name pos:line="118" pos:column="23">subj_hash<pos:position pos:line="118" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="34">h<pos:position pos:line="118" pos:column="35"/></name><operator pos:line="118" pos:column="35">-&gt;<pos:position pos:line="118" pos:column="40"/></operator><name pos:line="118" pos:column="37">env<pos:position pos:line="118" pos:column="40"/></name><operator pos:line="118" pos:column="40">-&gt;<pos:position pos:line="118" pos:column="45"/></operator><name pos:line="118" pos:column="42">real_subj<pos:position pos:line="118" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="53">h<pos:position pos:line="118" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="56">NULL<pos:position pos:line="118" pos:column="60"/></name></expr></argument>)<pos:position pos:line="118" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="62"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="119" pos:column="3">mutt_label_hash_remove<pos:position pos:line="119" pos:column="25"/></name> <argument_list pos:line="119" pos:column="26">(<argument><expr><name pos:line="119" pos:column="27">ctx<pos:position pos:line="119" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="32">h<pos:position pos:line="119" pos:column="33"/></name></expr></argument>)<pos:position pos:line="119" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="120" pos:column="3">mutt_free_envelope<pos:position pos:line="120" pos:column="21"/></name> <argument_list pos:line="120" pos:column="22">(<argument><expr><operator pos:line="120" pos:column="23">&amp;<pos:position pos:line="120" pos:column="28"/></operator><name><name pos:line="120" pos:column="24">h<pos:position pos:line="120" pos:column="25"/></name><operator pos:line="120" pos:column="25">-&gt;<pos:position pos:line="120" pos:column="30"/></operator><name pos:line="120" pos:column="27">env<pos:position pos:line="120" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="121" pos:column="3">h<pos:position pos:line="121" pos:column="4"/></name><operator pos:line="121" pos:column="4">-&gt;<pos:position pos:line="121" pos:column="9"/></operator><name pos:line="121" pos:column="6">env<pos:position pos:line="121" pos:column="9"/></name></name> <operator pos:line="121" pos:column="10">=<pos:position pos:line="121" pos:column="11"/></operator> <call><name pos:line="121" pos:column="12">mutt_read_rfc822_header<pos:position pos:line="121" pos:column="35"/></name> <argument_list pos:line="121" pos:column="36">(<argument><expr><name><name pos:line="121" pos:column="37">msg<pos:position pos:line="121" pos:column="40"/></name><operator pos:line="121" pos:column="40">-&gt;<pos:position pos:line="121" pos:column="45"/></operator><name pos:line="121" pos:column="42">fp<pos:position pos:line="121" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="46">h<pos:position pos:line="121" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="49">0<pos:position pos:line="121" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="52">0<pos:position pos:line="121" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="55"/></expr_stmt>
  <if pos:line="122" pos:column="3">if <condition pos:line="122" pos:column="6">(<expr><name><name pos:line="122" pos:column="7">ctx<pos:position pos:line="122" pos:column="10"/></name><operator pos:line="122" pos:column="10">-&gt;<pos:position pos:line="122" pos:column="15"/></operator><name pos:line="122" pos:column="12">subj_hash<pos:position pos:line="122" pos:column="21"/></name></name> <operator pos:line="122" pos:column="22">&amp;&amp;<pos:position pos:line="122" pos:column="32"/></operator> <name><name pos:line="122" pos:column="25">h<pos:position pos:line="122" pos:column="26"/></name><operator pos:line="122" pos:column="26">-&gt;<pos:position pos:line="122" pos:column="31"/></operator><name pos:line="122" pos:column="28">env<pos:position pos:line="122" pos:column="31"/></name><operator pos:line="122" pos:column="31">-&gt;<pos:position pos:line="122" pos:column="36"/></operator><name pos:line="122" pos:column="33">real_subj<pos:position pos:line="122" pos:column="42"/></name></name></expr>)<pos:position pos:line="122" pos:column="43"/></condition><then pos:line="122" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="5">hash_insert<pos:position pos:line="123" pos:column="16"/></name> <argument_list pos:line="123" pos:column="17">(<argument><expr><name><name pos:line="123" pos:column="18">ctx<pos:position pos:line="123" pos:column="21"/></name><operator pos:line="123" pos:column="21">-&gt;<pos:position pos:line="123" pos:column="26"/></operator><name pos:line="123" pos:column="23">subj_hash<pos:position pos:line="123" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="34">h<pos:position pos:line="123" pos:column="35"/></name><operator pos:line="123" pos:column="35">-&gt;<pos:position pos:line="123" pos:column="40"/></operator><name pos:line="123" pos:column="37">env<pos:position pos:line="123" pos:column="40"/></name><operator pos:line="123" pos:column="40">-&gt;<pos:position pos:line="123" pos:column="45"/></operator><name pos:line="123" pos:column="42">real_subj<pos:position pos:line="123" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="53">h<pos:position pos:line="123" pos:column="54"/></name></expr></argument>)<pos:position pos:line="123" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="56"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="124" pos:column="3">mutt_label_hash_add<pos:position pos:line="124" pos:column="22"/></name> <argument_list pos:line="124" pos:column="23">(<argument><expr><name pos:line="124" pos:column="24">ctx<pos:position pos:line="124" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="29">h<pos:position pos:line="124" pos:column="30"/></name></expr></argument>)<pos:position pos:line="124" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="126" pos:column="3">h<pos:position pos:line="126" pos:column="4"/></name><operator pos:line="126" pos:column="4">-&gt;<pos:position pos:line="126" pos:column="9"/></operator><name pos:line="126" pos:column="6">data<pos:position pos:line="126" pos:column="10"/></name></name> <operator pos:line="126" pos:column="11">=<pos:position pos:line="126" pos:column="12"/></operator> <name pos:line="126" pos:column="13">uidl<pos:position pos:line="126" pos:column="17"/></name></expr>;<pos:position pos:line="126" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="127" pos:column="3">h<pos:position pos:line="127" pos:column="4"/></name><operator pos:line="127" pos:column="4">-&gt;<pos:position pos:line="127" pos:column="9"/></operator><name pos:line="127" pos:column="6">lines<pos:position pos:line="127" pos:column="11"/></name></name> <operator pos:line="127" pos:column="12">=<pos:position pos:line="127" pos:column="13"/></operator> <literal type="number" pos:line="127" pos:column="14">0<pos:position pos:line="127" pos:column="15"/></literal></expr>;<pos:position pos:line="127" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="128" pos:column="3">fgets<pos:position pos:line="128" pos:column="8"/></name> <argument_list pos:line="128" pos:column="9">(<argument><expr><name pos:line="128" pos:column="10">buf<pos:position pos:line="128" pos:column="13"/></name></expr></argument>, <argument><expr><sizeof pos:line="128" pos:column="15">sizeof <argument_list pos:line="128" pos:column="22">(<argument><expr><name pos:line="128" pos:column="23">buf<pos:position pos:line="128" pos:column="26"/></name></expr></argument>)<pos:position pos:line="128" pos:column="27"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="29">msg<pos:position pos:line="128" pos:column="32"/></name><operator pos:line="128" pos:column="32">-&gt;<pos:position pos:line="128" pos:column="37"/></operator><name pos:line="128" pos:column="34">fp<pos:position pos:line="128" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="38"/></expr_stmt>
  <while pos:line="129" pos:column="3">while <condition pos:line="129" pos:column="9">(<expr><operator pos:line="129" pos:column="10">!<pos:position pos:line="129" pos:column="11"/></operator><call><name pos:line="129" pos:column="11">feof<pos:position pos:line="129" pos:column="15"/></name> <argument_list pos:line="129" pos:column="16">(<argument><expr><name><name pos:line="129" pos:column="17">msg<pos:position pos:line="129" pos:column="20"/></name><operator pos:line="129" pos:column="20">-&gt;<pos:position pos:line="129" pos:column="25"/></operator><name pos:line="129" pos:column="22">fp<pos:position pos:line="129" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="26"/></condition>
  <block pos:line="130" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="131" pos:column="5">ctx<pos:position pos:line="131" pos:column="8"/></name><operator pos:line="131" pos:column="8">-&gt;<pos:position pos:line="131" pos:column="13"/></operator><name pos:line="131" pos:column="10">hdrs<pos:position pos:line="131" pos:column="14"/></name><index pos:line="131" pos:column="14">[<expr><name pos:line="131" pos:column="15">msgno<pos:position pos:line="131" pos:column="20"/></name></expr>]<pos:position pos:line="131" pos:column="21"/></index></name><operator pos:line="131" pos:column="21">-&gt;<pos:position pos:line="131" pos:column="26"/></operator><name pos:line="131" pos:column="23">lines<pos:position pos:line="131" pos:column="28"/></name><operator pos:line="131" pos:column="28">++<pos:position pos:line="131" pos:column="30"/></operator></expr>;<pos:position pos:line="131" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">fgets<pos:position pos:line="132" pos:column="10"/></name> <argument_list pos:line="132" pos:column="11">(<argument><expr><name pos:line="132" pos:column="12">buf<pos:position pos:line="132" pos:column="15"/></name></expr></argument>, <argument><expr><sizeof pos:line="132" pos:column="17">sizeof <argument_list pos:line="132" pos:column="24">(<argument><expr><name pos:line="132" pos:column="25">buf<pos:position pos:line="132" pos:column="28"/></name></expr></argument>)<pos:position pos:line="132" pos:column="29"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="31">msg<pos:position pos:line="132" pos:column="34"/></name><operator pos:line="132" pos:column="34">-&gt;<pos:position pos:line="132" pos:column="39"/></operator><name pos:line="132" pos:column="36">fp<pos:position pos:line="132" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="133" pos:column="4"/></block></while>

  <expr_stmt><expr><name><name pos:line="135" pos:column="3">h<pos:position pos:line="135" pos:column="4"/></name><operator pos:line="135" pos:column="4">-&gt;<pos:position pos:line="135" pos:column="9"/></operator><name pos:line="135" pos:column="6">content<pos:position pos:line="135" pos:column="13"/></name><operator pos:line="135" pos:column="13">-&gt;<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="15">length<pos:position pos:line="135" pos:column="21"/></name></name> <operator pos:line="135" pos:column="22">=<pos:position pos:line="135" pos:column="23"/></operator> <call><name pos:line="135" pos:column="24">ftello<pos:position pos:line="135" pos:column="30"/></name> <argument_list pos:line="135" pos:column="31">(<argument><expr><name><name pos:line="135" pos:column="32">msg<pos:position pos:line="135" pos:column="35"/></name><operator pos:line="135" pos:column="35">-&gt;<pos:position pos:line="135" pos:column="40"/></operator><name pos:line="135" pos:column="37">fp<pos:position pos:line="135" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="40"/></argument_list></call> <operator pos:line="135" pos:column="41">-<pos:position pos:line="135" pos:column="42"/></operator> <name><name pos:line="135" pos:column="43">h<pos:position pos:line="135" pos:column="44"/></name><operator pos:line="135" pos:column="44">-&gt;<pos:position pos:line="135" pos:column="49"/></operator><name pos:line="135" pos:column="46">content<pos:position pos:line="135" pos:column="53"/></name><operator pos:line="135" pos:column="53">-&gt;<pos:position pos:line="135" pos:column="58"/></operator><name pos:line="135" pos:column="55">offset<pos:position pos:line="135" pos:column="61"/></name></name></expr>;<pos:position pos:line="135" pos:column="62"/></expr_stmt>

  <comment type="block" pos:line="137" pos:column="3">/* This needs to be done in case this is a multipart message */</comment>
  <if pos:line="138" pos:column="3">if <condition pos:line="138" pos:column="6">(<expr><operator pos:line="138" pos:column="7">!<pos:position pos:line="138" pos:column="8"/></operator><name pos:line="138" pos:column="8">WithCrypto<pos:position pos:line="138" pos:column="18"/></name></expr>)<pos:position pos:line="138" pos:column="19"/></condition><then pos:line="138" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="139" pos:column="5">h<pos:position pos:line="139" pos:column="6"/></name><operator pos:line="139" pos:column="6">-&gt;<pos:position pos:line="139" pos:column="11"/></operator><name pos:line="139" pos:column="8">security<pos:position pos:line="139" pos:column="16"/></name></name> <operator pos:line="139" pos:column="17">=<pos:position pos:line="139" pos:column="18"/></operator> <call><name pos:line="139" pos:column="19">crypt_query<pos:position pos:line="139" pos:column="30"/></name> <argument_list pos:line="139" pos:column="31">(<argument><expr><name><name pos:line="139" pos:column="32">h<pos:position pos:line="139" pos:column="33"/></name><operator pos:line="139" pos:column="33">-&gt;<pos:position pos:line="139" pos:column="38"/></operator><name pos:line="139" pos:column="35">content<pos:position pos:line="139" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="139" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="44"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="141" pos:column="3">mutt_clear_error<pos:position pos:line="141" pos:column="19"/></name><argument_list pos:line="141" pos:column="19">()<pos:position pos:line="141" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="142" pos:column="3">rewind<pos:position pos:line="142" pos:column="9"/></name> <argument_list pos:line="142" pos:column="10">(<argument><expr><name><name pos:line="142" pos:column="11">msg<pos:position pos:line="142" pos:column="14"/></name><operator pos:line="142" pos:column="14">-&gt;<pos:position pos:line="142" pos:column="19"/></operator><name pos:line="142" pos:column="16">fp<pos:position pos:line="142" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="20"/></expr_stmt>

  <return pos:line="144" pos:column="3">return <expr><literal type="number" pos:line="144" pos:column="10">0<pos:position pos:line="144" pos:column="11"/></literal></expr>;<pos:position pos:line="144" pos:column="12"/></return>
}<pos:position pos:line="145" pos:column="2"/></block></function></unit>

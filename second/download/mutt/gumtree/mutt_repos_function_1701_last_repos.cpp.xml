<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1701_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">smtp_data<pos:position pos:line="2" pos:column="10"/></name> <parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">CONNECTION<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">conn<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">msgfile<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><literal type="number" pos:line="4" pos:column="12">1024<pos:position pos:line="4" pos:column="16"/></literal></expr>]<pos:position pos:line="4" pos:column="17"/></index></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fp<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">progress_t<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">progress<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">stat<pos:position pos:line="7" pos:column="14"/></name></name></type> <name pos:line="7" pos:column="15">st<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">r<pos:position pos:line="8" pos:column="8"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="10">term<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">buflen<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">fp<pos:position pos:line="11" pos:column="5"/></name> <operator pos:line="11" pos:column="6">=<pos:position pos:line="11" pos:column="7"/></operator> <call><name pos:line="11" pos:column="8">fopen<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">msgfile<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="24">"r"<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">fp<pos:position pos:line="12" pos:column="10"/></name></expr>)<pos:position pos:line="12" pos:column="11"/></condition><then pos:line="12" pos:column="11">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">mutt_error<pos:position pos:line="14" pos:column="15"/></name> <argument_list pos:line="14" pos:column="16">(<argument><expr><call><name pos:line="14" pos:column="17">_<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><literal type="string" pos:line="14" pos:column="19">"SMTP session failed: unable to open %s"<pos:position pos:line="14" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="62">msgfile<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="71"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">-<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">stat<pos:position pos:line="17" pos:column="7"/></name> <argument_list pos:line="17" pos:column="8">(<argument><expr><name pos:line="17" pos:column="9">msgfile<pos:position pos:line="17" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="18">&amp;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="19">st<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">unlink<pos:position pos:line="18" pos:column="9"/></name> <argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">msgfile<pos:position pos:line="18" pos:column="18"/></name></expr></argument>)<pos:position pos:line="18" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">mutt_progress_init<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><operator pos:line="19" pos:column="23">&amp;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="24">progress<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="34">_<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><literal type="string" pos:line="19" pos:column="36">"Sending message..."<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">MUTT_PROGRESS_SIZE<pos:position pos:line="19" pos:column="77"/></name></expr></argument>,
                      <argument><expr><name pos:line="20" pos:column="23">NetInc<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="31">st<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">st_size<pos:position pos:line="20" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">snprintf<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">buf<pos:position pos:line="22" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="18">sizeof <argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">buf<pos:position pos:line="22" pos:column="29"/></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="32">"DATA\r\n"<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><call><name pos:line="23" pos:column="7">mutt_socket_write<pos:position pos:line="23" pos:column="24"/></name> <argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">conn<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">buf<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call> <operator pos:line="23" pos:column="37">==<pos:position pos:line="23" pos:column="39"/></operator> <operator pos:line="23" pos:column="40">-<pos:position pos:line="23" pos:column="41"/></operator><literal type="number" pos:line="23" pos:column="41">1<pos:position pos:line="23" pos:column="42"/></literal></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43">
  <block pos:line="24" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">safe_fclose<pos:position pos:line="25" pos:column="16"/></name> <argument_list pos:line="25" pos:column="17">(<argument><expr><operator pos:line="25" pos:column="18">&amp;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="19">fp<pos:position pos:line="25" pos:column="21"/></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">smtp_err_write<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><operator pos:line="28" pos:column="7">(<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">r<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <call><name pos:line="28" pos:column="12">smtp_get_resp<pos:position pos:line="28" pos:column="25"/></name> <argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">conn<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call><operator pos:line="28" pos:column="32">)<pos:position pos:line="28" pos:column="33"/></operator></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34">
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">safe_fclose<pos:position pos:line="30" pos:column="16"/></name> <argument_list pos:line="30" pos:column="17">(<argument><expr><operator pos:line="30" pos:column="18">&amp;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="19">fp<pos:position pos:line="30" pos:column="21"/></name></expr></argument>)<pos:position pos:line="30" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">r<pos:position pos:line="31" pos:column="13"/></name></expr>;<pos:position pos:line="31" pos:column="14"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <while pos:line="34" pos:column="3">while <condition pos:line="34" pos:column="9">(<expr><call><name pos:line="34" pos:column="10">fgets<pos:position pos:line="34" pos:column="15"/></name> <argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">buf<pos:position pos:line="34" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="22">sizeof <argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">buf<pos:position pos:line="34" pos:column="33"/></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></sizeof> <operator pos:line="34" pos:column="35">-<pos:position pos:line="34" pos:column="36"/></operator> <literal type="number" pos:line="34" pos:column="37">1<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">fp<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="44"/></condition>
  <block pos:line="35" pos:column="3">{
    <expr_stmt><expr><name pos:line="36" pos:column="5">buflen<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">mutt_strlen<pos:position pos:line="36" pos:column="25"/></name> <argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">buf<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">term<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">buflen<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">&amp;&amp;<pos:position pos:line="37" pos:column="29"/></operator> <name><name pos:line="37" pos:column="22">buf<pos:position pos:line="37" pos:column="25"/></name><index pos:line="37" pos:column="25">[<expr><name pos:line="37" pos:column="26">buflen<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-<pos:position pos:line="37" pos:column="33"/></operator><literal type="number" pos:line="37" pos:column="33">1<pos:position pos:line="37" pos:column="34"/></literal></expr>]<pos:position pos:line="37" pos:column="35"/></index></name> <operator pos:line="37" pos:column="36">==<pos:position pos:line="37" pos:column="38"/></operator> <literal type="char" pos:line="37" pos:column="39">'\n'<pos:position pos:line="37" pos:column="43"/></literal></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">term<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">&amp;&amp;<pos:position pos:line="38" pos:column="24"/></operator> <operator pos:line="38" pos:column="17">(<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">buflen<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">==<pos:position pos:line="38" pos:column="27"/></operator> <literal type="number" pos:line="38" pos:column="28">1<pos:position pos:line="38" pos:column="29"/></literal> <operator pos:line="38" pos:column="30">||<pos:position pos:line="38" pos:column="32"/></operator> <name><name pos:line="38" pos:column="33">buf<pos:position pos:line="38" pos:column="36"/></name><index pos:line="38" pos:column="36">[<expr><name pos:line="38" pos:column="37">buflen<pos:position pos:line="38" pos:column="43"/></name> <operator pos:line="38" pos:column="44">-<pos:position pos:line="38" pos:column="45"/></operator> <literal type="number" pos:line="38" pos:column="46">2<pos:position pos:line="38" pos:column="47"/></literal></expr>]<pos:position pos:line="38" pos:column="48"/></index></name> <operator pos:line="38" pos:column="49">!=<pos:position pos:line="38" pos:column="51"/></operator> <literal type="char" pos:line="38" pos:column="52">'\r'<pos:position pos:line="38" pos:column="56"/></literal><operator pos:line="38" pos:column="56">)<pos:position pos:line="38" pos:column="57"/></operator></expr>)<pos:position pos:line="38" pos:column="58"/></condition><then pos:line="38" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="7">snprintf<pos:position pos:line="39" pos:column="15"/></name> <argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">buf<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">+<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">buflen<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">-<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="35">sizeof <argument_list pos:line="39" pos:column="42">(<argument><expr><name pos:line="39" pos:column="43">buf<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></sizeof> <operator pos:line="39" pos:column="48">-<pos:position pos:line="39" pos:column="49"/></operator> <name pos:line="39" pos:column="50">buflen<pos:position pos:line="39" pos:column="56"/></name> <operator pos:line="39" pos:column="57">+<pos:position pos:line="39" pos:column="58"/></operator> <literal type="number" pos:line="39" pos:column="59">1<pos:position pos:line="39" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="62">"\r\n"<pos:position pos:line="39" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt></block></then></if>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">buf<pos:position pos:line="40" pos:column="12"/></name><index pos:line="40" pos:column="12">[<expr><literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal></expr>]<pos:position pos:line="40" pos:column="15"/></index></name> <operator pos:line="40" pos:column="16">==<pos:position pos:line="40" pos:column="18"/></operator> <literal type="char" pos:line="40" pos:column="19">'.'<pos:position pos:line="40" pos:column="22"/></literal></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23">
    <block pos:line="41" pos:column="5">{
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><call><name pos:line="42" pos:column="11">mutt_socket_write_d<pos:position pos:line="42" pos:column="30"/></name> <argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">conn<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="38">"."<pos:position pos:line="42" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="43">-<pos:position pos:line="42" pos:column="44"/></operator><literal type="number" pos:line="42" pos:column="44">1<pos:position pos:line="42" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="47">MUTT_SOCK_LOG_FULL<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call> <operator pos:line="42" pos:column="67">==<pos:position pos:line="42" pos:column="69"/></operator> <operator pos:line="42" pos:column="70">-<pos:position pos:line="42" pos:column="71"/></operator><literal type="number" pos:line="42" pos:column="71">1<pos:position pos:line="42" pos:column="72"/></literal></expr>)<pos:position pos:line="42" pos:column="73"/></condition><then pos:line="42" pos:column="73">
      <block pos:line="43" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">safe_fclose<pos:position pos:line="44" pos:column="20"/></name> <argument_list pos:line="44" pos:column="21">(<argument><expr><operator pos:line="44" pos:column="22">&amp;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="23">fp<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">smtp_err_write<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></return>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">mutt_socket_write_d<pos:position pos:line="48" pos:column="28"/></name> <argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">conn<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="36">buf<pos:position pos:line="48" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="41">-<pos:position pos:line="48" pos:column="42"/></operator><literal type="number" pos:line="48" pos:column="42">1<pos:position pos:line="48" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="45">MUTT_SOCK_LOG_FULL<pos:position pos:line="48" pos:column="63"/></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call> <operator pos:line="48" pos:column="65">==<pos:position pos:line="48" pos:column="67"/></operator> <operator pos:line="48" pos:column="68">-<pos:position pos:line="48" pos:column="69"/></operator><literal type="number" pos:line="48" pos:column="69">1<pos:position pos:line="48" pos:column="70"/></literal></expr>)<pos:position pos:line="48" pos:column="71"/></condition><then pos:line="48" pos:column="71">
    <block pos:line="49" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">safe_fclose<pos:position pos:line="50" pos:column="18"/></name> <argument_list pos:line="50" pos:column="19">(<argument><expr><operator pos:line="50" pos:column="20">&amp;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="21">fp<pos:position pos:line="50" pos:column="23"/></name></expr></argument>)<pos:position pos:line="50" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>
      <return pos:line="51" pos:column="7">return <expr><name pos:line="51" pos:column="14">smtp_err_write<pos:position pos:line="51" pos:column="28"/></name></expr>;<pos:position pos:line="51" pos:column="29"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">mutt_progress_update<pos:position pos:line="53" pos:column="25"/></name> <argument_list pos:line="53" pos:column="26">(<argument><expr><operator pos:line="53" pos:column="27">&amp;<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="28">progress<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="38">ftell<pos:position pos:line="53" pos:column="43"/></name> <argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">fp<pos:position pos:line="53" pos:column="47"/></name></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="53" pos:column="50">-<pos:position pos:line="53" pos:column="51"/></operator><literal type="number" pos:line="53" pos:column="51">1<pos:position pos:line="53" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="54" pos:column="4"/></block></while>
  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><operator pos:line="55" pos:column="7">!<pos:position pos:line="55" pos:column="8"/></operator><name pos:line="55" pos:column="8">term<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">&amp;&amp;<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="16">buflen<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">&amp;&amp;<pos:position pos:line="55" pos:column="33"/></operator>
      <call><name pos:line="56" pos:column="7">mutt_socket_write_d<pos:position pos:line="56" pos:column="26"/></name> <argument_list pos:line="56" pos:column="27">(<argument><expr><name pos:line="56" pos:column="28">conn<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="34">"\r\n"<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="42">-<pos:position pos:line="56" pos:column="43"/></operator><literal type="number" pos:line="56" pos:column="43">1<pos:position pos:line="56" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">MUTT_SOCK_LOG_FULL<pos:position pos:line="56" pos:column="64"/></name></expr></argument>)<pos:position pos:line="56" pos:column="65"/></argument_list></call> <operator pos:line="56" pos:column="66">==<pos:position pos:line="56" pos:column="68"/></operator> <operator pos:line="56" pos:column="69">-<pos:position pos:line="56" pos:column="70"/></operator><literal type="number" pos:line="56" pos:column="70">1<pos:position pos:line="56" pos:column="71"/></literal></expr>)<pos:position pos:line="56" pos:column="72"/></condition><then pos:line="56" pos:column="72">
  <block pos:line="57" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">safe_fclose<pos:position pos:line="58" pos:column="16"/></name> <argument_list pos:line="58" pos:column="17">(<argument><expr><operator pos:line="58" pos:column="18">&amp;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="19">fp<pos:position pos:line="58" pos:column="21"/></name></expr></argument>)<pos:position pos:line="58" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt>
    <return pos:line="59" pos:column="5">return <expr><name pos:line="59" pos:column="12">smtp_err_write<pos:position pos:line="59" pos:column="26"/></name></expr>;<pos:position pos:line="59" pos:column="27"/></return>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">safe_fclose<pos:position pos:line="61" pos:column="14"/></name> <argument_list pos:line="61" pos:column="15">(<argument><expr><operator pos:line="61" pos:column="16">&amp;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="17">fp<pos:position pos:line="61" pos:column="19"/></name></expr></argument>)<pos:position pos:line="61" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="21"/></expr_stmt>

  <comment type="block" pos:line="63" pos:column="3">/* terminate the message body */</comment>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><call><name pos:line="64" pos:column="7">mutt_socket_write<pos:position pos:line="64" pos:column="24"/></name> <argument_list pos:line="64" pos:column="25">(<argument><expr><name pos:line="64" pos:column="26">conn<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="32">".\r\n"<pos:position pos:line="64" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="40"/></argument_list></call> <operator pos:line="64" pos:column="41">==<pos:position pos:line="64" pos:column="43"/></operator> <operator pos:line="64" pos:column="44">-<pos:position pos:line="64" pos:column="45"/></operator><literal type="number" pos:line="64" pos:column="45">1<pos:position pos:line="64" pos:column="46"/></literal></expr>)<pos:position pos:line="64" pos:column="47"/></condition><then pos:line="64" pos:column="47">
    <block type="pseudo"><return pos:line="65" pos:column="5">return <expr><name pos:line="65" pos:column="12">smtp_err_write<pos:position pos:line="65" pos:column="26"/></name></expr>;<pos:position pos:line="65" pos:column="27"/></return></block></then></if>

  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><operator pos:line="67" pos:column="7">(<pos:position pos:line="67" pos:column="8"/></operator><name pos:line="67" pos:column="8">r<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">=<pos:position pos:line="67" pos:column="11"/></operator> <call><name pos:line="67" pos:column="12">smtp_get_resp<pos:position pos:line="67" pos:column="25"/></name> <argument_list pos:line="67" pos:column="26">(<argument><expr><name pos:line="67" pos:column="27">conn<pos:position pos:line="67" pos:column="31"/></name></expr></argument>)<pos:position pos:line="67" pos:column="32"/></argument_list></call><operator pos:line="67" pos:column="32">)<pos:position pos:line="67" pos:column="33"/></operator></expr>)<pos:position pos:line="67" pos:column="34"/></condition><then pos:line="67" pos:column="34">
    <block type="pseudo"><return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">r<pos:position pos:line="68" pos:column="13"/></name></expr>;<pos:position pos:line="68" pos:column="14"/></return></block></then></if>

  <return pos:line="70" pos:column="3">return <expr><literal type="number" pos:line="70" pos:column="10">0<pos:position pos:line="70" pos:column="11"/></literal></expr>;<pos:position pos:line="70" pos:column="12"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

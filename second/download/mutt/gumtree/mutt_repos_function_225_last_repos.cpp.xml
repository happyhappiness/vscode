<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_225_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_pipe_message<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">HEADER<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">h<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><name pos:line="3" pos:column="15">LONG_STRING<pos:position pos:line="3" pos:column="26"/></name></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="5" pos:column="3">buffer<pos:position pos:line="5" pos:column="9"/></name><index pos:line="5" pos:column="9">[<expr><literal type="number" pos:line="5" pos:column="10">0<pos:position pos:line="5" pos:column="11"/></literal></expr>]<pos:position pos:line="5" pos:column="12"/></index></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">mutt_get_field<pos:position pos:line="6" pos:column="21"/></name> <argument_list pos:line="6" pos:column="22">(<argument><expr><call><name pos:line="6" pos:column="23">_<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><literal type="string" pos:line="6" pos:column="25">"Pipe to command: "<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="47">buffer<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="55">sizeof <argument_list pos:line="6" pos:column="62">(<argument><expr><name pos:line="6" pos:column="63">buffer<pos:position pos:line="6" pos:column="69"/></name></expr></argument>)<pos:position pos:line="6" pos:column="70"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="6" pos:column="72">MUTT_CMD<pos:position pos:line="6" pos:column="80"/></name></expr></argument>)<pos:position pos:line="6" pos:column="81"/></argument_list></call>
      <operator pos:line="7" pos:column="7">!=<pos:position pos:line="7" pos:column="9"/></operator> <literal type="number" pos:line="7" pos:column="10">0<pos:position pos:line="7" pos:column="11"/></literal> <operator pos:line="7" pos:column="12">||<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">!<pos:position pos:line="7" pos:column="16"/></operator><name><name pos:line="7" pos:column="16">buffer<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[<expr><literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
    <block type="pseudo"><return pos:line="8" pos:column="5">return;<pos:position pos:line="8" pos:column="12"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">mutt_expand_path<pos:position pos:line="10" pos:column="19"/></name> <argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">buffer<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="29">sizeof <argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">buffer<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">_mutt_pipe_message<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">h<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="26">buffer<pos:position pos:line="11" pos:column="32"/></name></expr></argument>,
		      <argument><expr><call><name pos:line="12" pos:column="23">option<pos:position pos:line="12" pos:column="29"/></name> <argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">OPTPIPEDECODE<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr></argument>,
		      <argument><expr><literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr></argument>, 
		      <argument><expr><call><name pos:line="14" pos:column="23">option<pos:position pos:line="14" pos:column="29"/></name> <argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">OPTPIPESPLIT<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr></argument>,
		      <argument><expr><name pos:line="15" pos:column="23">PipeSep<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

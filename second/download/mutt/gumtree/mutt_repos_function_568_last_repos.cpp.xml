<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_568_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">socket_preconnect<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">save_errno<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">mutt_strlen<pos:position pos:line="6" pos:column="18"/></name> <argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">Preconnect<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32">
  <block pos:line="7" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">dprint<pos:position pos:line="8" pos:column="11"/></name> <argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="number" pos:line="8" pos:column="13">2<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">debugfile<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">,<pos:position pos:line="8" pos:column="27"/></operator> <literal type="string" pos:line="8" pos:column="28">"Executing preconnect: %s\n"<pos:position pos:line="8" pos:column="56"/></literal><operator pos:line="8" pos:column="56">,<pos:position pos:line="8" pos:column="57"/></operator> <name pos:line="8" pos:column="58">Preconnect<pos:position pos:line="8" pos:column="68"/></name><operator pos:line="8" pos:column="68">)<pos:position pos:line="8" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">rc<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <call><name pos:line="9" pos:column="10">mutt_system<pos:position pos:line="9" pos:column="21"/></name> <argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">Preconnect<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">dprint<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="number" pos:line="10" pos:column="13">2<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">debugfile<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">,<pos:position pos:line="10" pos:column="27"/></operator> <literal type="string" pos:line="10" pos:column="28">"Preconnect result: %d\n"<pos:position pos:line="10" pos:column="53"/></literal><operator pos:line="10" pos:column="53">,<pos:position pos:line="10" pos:column="54"/></operator> <name pos:line="10" pos:column="55">rc<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">rc<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">save_errno<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">errno<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">mutt_perror<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><call><name pos:line="14" pos:column="20">_<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><literal type="string" pos:line="14" pos:column="22">"Preconnect command failed."<pos:position pos:line="14" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">mutt_sleep<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><literal type="number" pos:line="15" pos:column="19">1<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
      
      <return pos:line="17" pos:column="7">return <expr><name pos:line="17" pos:column="14">save_errno<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <return pos:line="21" pos:column="3">return <expr><literal type="number" pos:line="21" pos:column="10">0<pos:position pos:line="21" pos:column="11"/></literal></expr>;<pos:position pos:line="21" pos:column="12"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

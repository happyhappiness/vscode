<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1548_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mhs_write_one_sequence<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">FILE<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type> <name pos:line="1" pos:column="44">fp<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="48">struct<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">mh_sequences<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">mhs<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
				    <parameter><decl><type><name pos:line="2" pos:column="37">short<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">f<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">tag<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">first<pos:position pos:line="5" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="14">last<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">fprintf<pos:position pos:line="6" pos:column="10"/></name> <argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">fp<pos:position pos:line="6" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="16">"%s:"<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">tag<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">first<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <operator pos:line="8" pos:column="11">-<pos:position pos:line="8" pos:column="12"/></operator><literal type="number" pos:line="8" pos:column="12">1<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">last<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">-<pos:position pos:line="9" pos:column="11"/></operator><literal type="number" pos:line="9" pos:column="11">1<pos:position pos:line="9" pos:column="12"/></literal></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init><expr><name pos:line="11" pos:column="8">i<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></init> <condition><expr><name pos:line="11" pos:column="15">i<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&lt;=<pos:position pos:line="11" pos:column="22"/></operator> <name><name pos:line="11" pos:column="20">mhs<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">max<pos:position pos:line="11" pos:column="28"/></name></name></expr>;<pos:position pos:line="11" pos:column="29"/></condition> <incr><expr><name pos:line="11" pos:column="30">i<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">++<pos:position pos:line="11" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="34"/></control>
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><call><name pos:line="13" pos:column="10">mhs_check<pos:position pos:line="13" pos:column="19"/></name> <argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">mhs<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">i<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call> <operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="31">f<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">)<pos:position pos:line="13" pos:column="33"/></operator></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34">
    <block pos:line="14" pos:column="5">{
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">first<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&lt;<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">first<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">i<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt></block></then>
      <else pos:line="17" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">last<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">i<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt></block></else></if>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name pos:line="20" pos:column="14">first<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&gt;=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
    <block pos:line="21" pos:column="5">{
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name pos:line="22" pos:column="11">last<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">&lt;<pos:position pos:line="22" pos:column="20"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">fprintf<pos:position pos:line="23" pos:column="16"/></name> <argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">fp<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="22">" %d"<pos:position pos:line="23" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="29">first<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt></block></then>
      <else pos:line="24" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="9">fprintf<pos:position pos:line="25" pos:column="16"/></name> <argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">fp<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="22">" %d-%d"<pos:position pos:line="25" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">first<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">last<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt></block></else></if>

      <expr_stmt><expr><name pos:line="27" pos:column="7">first<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <operator pos:line="27" pos:column="15">-<pos:position pos:line="27" pos:column="16"/></operator><literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="28" pos:column="7">last<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <operator pos:line="28" pos:column="14">-<pos:position pos:line="28" pos:column="15"/></operator><literal type="number" pos:line="28" pos:column="15">1<pos:position pos:line="28" pos:column="16"/></literal></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="30" pos:column="4"/></block></for>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">first<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">&gt;=<pos:position pos:line="32" pos:column="18"/></operator> <literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>)<pos:position pos:line="32" pos:column="18"/></condition><then pos:line="32" pos:column="18">
  <block pos:line="33" pos:column="3">{
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">last<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">&lt;<pos:position pos:line="34" pos:column="18"/></operator> <literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>)<pos:position pos:line="34" pos:column="18"/></condition><then pos:line="34" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="7">fprintf<pos:position pos:line="35" pos:column="14"/></name> <argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">fp<pos:position pos:line="35" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="20">" %d"<pos:position pos:line="35" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="27">first<pos:position pos:line="35" pos:column="32"/></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt></block></then>
    <else pos:line="36" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="7">fprintf<pos:position pos:line="37" pos:column="14"/></name> <argument_list pos:line="37" pos:column="15">(<argument><expr><name pos:line="37" pos:column="16">fp<pos:position pos:line="37" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="20">" %d-%d"<pos:position pos:line="37" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="30">first<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">last<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt></block></else></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">fputc<pos:position pos:line="40" pos:column="8"/></name> <argument_list pos:line="40" pos:column="9">(<argument><expr><literal type="char" pos:line="40" pos:column="10">'\n'<pos:position pos:line="40" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="16">fp<pos:position pos:line="40" pos:column="18"/></name></expr></argument>)<pos:position pos:line="40" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

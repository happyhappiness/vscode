<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_513_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_parse_part<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">FILE<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">fp<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">BODY<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">b<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">bound<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

  <switch pos:line="5" pos:column="3">switch <condition pos:line="5" pos:column="10">(<expr><name><name pos:line="5" pos:column="11">b<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">type<pos:position pos:line="5" pos:column="18"/></name></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition>
  <block pos:line="6" pos:column="3">{
    <case pos:line="7" pos:column="5">case <expr><name pos:line="7" pos:column="10">TYPEMULTIPART<pos:position pos:line="7" pos:column="23"/></name></expr>:<pos:position pos:line="7" pos:column="24"/></case>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">SUN_ATTACHMENT<pos:position pos:line="8" pos:column="22"/></name></cpp:ifdef>
      <if pos:line="9" pos:column="7">if <condition pos:line="9" pos:column="10">( <expr><operator pos:line="9" pos:column="12">!<pos:position pos:line="9" pos:column="13"/></operator><call><name pos:line="9" pos:column="13">ascii_strcasecmp<pos:position pos:line="9" pos:column="29"/></name> <argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">b<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">subtype<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="43">"x-sun-attachment"<pos:position pos:line="9" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr> )<pos:position pos:line="9" pos:column="64"/></condition><then pos:line="9" pos:column="64">
          <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="11">bound<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <literal type="string" pos:line="10" pos:column="19">"--------"<pos:position pos:line="10" pos:column="29"/></literal></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt></block></then>
      <else pos:line="11" pos:column="7">else
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
          <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="11">bound<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <call><name pos:line="13" pos:column="19">mutt_get_parameter<pos:position pos:line="13" pos:column="37"/></name> <argument_list pos:line="13" pos:column="38">(<argument><expr><literal type="string" pos:line="13" pos:column="39">"boundary"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="51">b<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">-&gt;<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="54">parameter<pos:position pos:line="13" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt></block></else></if>

      <expr_stmt><expr><call><name pos:line="15" pos:column="7">fseeko<pos:position pos:line="15" pos:column="13"/></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">fp<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="19">b<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">offset<pos:position pos:line="15" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">SEEK_SET<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">b<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">parts<pos:position pos:line="16" pos:column="15"/></name></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator>  <call><name pos:line="16" pos:column="19">mutt_parse_multipart<pos:position pos:line="16" pos:column="39"/></name> <argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">fp<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">bound<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, 
					<argument><expr><name><name pos:line="17" pos:column="41">b<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">offset<pos:position pos:line="17" pos:column="50"/></name></name> <operator pos:line="17" pos:column="51">+<pos:position pos:line="17" pos:column="52"/></operator> <name><name pos:line="17" pos:column="53">b<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">length<pos:position pos:line="17" pos:column="62"/></name></name></expr></argument>,
					<argument><expr><call><name pos:line="18" pos:column="41">ascii_strcasecmp<pos:position pos:line="18" pos:column="57"/></name> <argument_list pos:line="18" pos:column="58">(<argument><expr><literal type="string" pos:line="18" pos:column="59">"digest"<pos:position pos:line="18" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="69">b<pos:position pos:line="18" pos:column="70"/></name><operator pos:line="18" pos:column="70">-&gt;<pos:position pos:line="18" pos:column="75"/></operator><name pos:line="18" pos:column="72">subtype<pos:position pos:line="18" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call> <operator pos:line="18" pos:column="81">==<pos:position pos:line="18" pos:column="83"/></operator> <literal type="number" pos:line="18" pos:column="84">0<pos:position pos:line="18" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="87"/></expr_stmt>
      <break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break>

    <case pos:line="21" pos:column="5">case <expr><name pos:line="21" pos:column="10">TYPEMESSAGE<pos:position pos:line="21" pos:column="21"/></name></expr>:<pos:position pos:line="21" pos:column="22"/></case>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name><name pos:line="22" pos:column="11">b<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">subtype<pos:position pos:line="22" pos:column="21"/></name></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
      <block pos:line="23" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">fseeko<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">fp<pos:position pos:line="24" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="21">b<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">offset<pos:position pos:line="24" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="32">SEEK_SET<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">mutt_is_message_type<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name><name pos:line="25" pos:column="34">b<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">type<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="43">b<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">subtype<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="55"/></condition><then pos:line="25" pos:column="55">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="11">b<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">parts<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">mutt_parse_messageRFC822<pos:position pos:line="26" pos:column="46"/></name> <argument_list pos:line="26" pos:column="47">(<argument><expr><name pos:line="26" pos:column="48">fp<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">b<pos:position pos:line="26" pos:column="53"/></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt></block></then>
	<elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if <condition pos:line="27" pos:column="17">(<expr><call><name pos:line="27" pos:column="18">ascii_strcasecmp<pos:position pos:line="27" pos:column="34"/></name> <argument_list pos:line="27" pos:column="35">(<argument><expr><name><name pos:line="27" pos:column="36">b<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">subtype<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="48">"external-body"<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call> <operator pos:line="27" pos:column="65">==<pos:position pos:line="27" pos:column="67"/></operator> <literal type="number" pos:line="27" pos:column="68">0<pos:position pos:line="27" pos:column="69"/></literal></expr>)<pos:position pos:line="27" pos:column="70"/></condition><then pos:line="27" pos:column="70">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="11">b<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">parts<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <call><name pos:line="28" pos:column="22">mutt_read_mime_header<pos:position pos:line="28" pos:column="43"/></name> <argument_list pos:line="28" pos:column="44">(<argument><expr><name pos:line="28" pos:column="45">fp<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="49">0<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt></block></then></if></elseif>
	<else pos:line="29" pos:column="9">else
	  <block type="pseudo"><return pos:line="30" pos:column="11">return;<pos:position pos:line="30" pos:column="18"/></return></block></else></if>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
      <break pos:line="32" pos:column="7">break;<pos:position pos:line="32" pos:column="13"/></break>

    <default pos:line="34" pos:column="5">default:<pos:position pos:line="34" pos:column="13"/></default>
      <return pos:line="35" pos:column="7">return;<pos:position pos:line="35" pos:column="14"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></switch>

  <comment type="block" pos:line="38" pos:column="3">/* try to recover from parsing error */</comment>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">!<pos:position pos:line="39" pos:column="8"/></operator><name><name pos:line="39" pos:column="8">b<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">parts<pos:position pos:line="39" pos:column="16"/></name></name></expr>)<pos:position pos:line="39" pos:column="17"/></condition><then pos:line="39" pos:column="17">
  <block pos:line="40" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">b<pos:position pos:line="41" pos:column="6"/></name><operator pos:line="41" pos:column="6">-&gt;<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="8">type<pos:position pos:line="41" pos:column="12"/></name></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name pos:line="41" pos:column="15">TYPETEXT<pos:position pos:line="41" pos:column="23"/></name></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">mutt_str_replace<pos:position pos:line="42" pos:column="21"/></name> <argument_list pos:line="42" pos:column="22">(<argument><expr><operator pos:line="42" pos:column="23">&amp;<pos:position pos:line="42" pos:column="28"/></operator><name><name pos:line="42" pos:column="24">b<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">-&gt;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="27">subtype<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="36">"plain"<pos:position pos:line="42" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_60.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dotlock_file<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">fd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">retry<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">r<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">flags<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">DL_FL_USEPRIV<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">|<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="31">DL_FL_RETRY<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">retry<pos:position pos:line="6" pos:column="12"/></name></expr>)<pos:position pos:line="6" pos:column="13"/></condition><then pos:line="6" pos:column="13"> <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="14">retry<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <literal type="number" pos:line="6" pos:column="22">1<pos:position pos:line="6" pos:column="23"/></literal></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt></block></then></if>

<label><name pos:line="8" pos:column="1">retry_lock<pos:position pos:line="8" pos:column="11"/></name>:<pos:position pos:line="8" pos:column="12"/></label>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">r<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">invoke_dotlock<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">path<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">fd<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">flags<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">retry<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call><operator pos:line="9" pos:column="50">)<pos:position pos:line="9" pos:column="51"/></operator> <operator pos:line="9" pos:column="52">==<pos:position pos:line="9" pos:column="54"/></operator> <name pos:line="9" pos:column="55">DL_EX_EXIST<pos:position pos:line="9" pos:column="66"/></name></expr>)<pos:position pos:line="9" pos:column="67"/></condition><then pos:line="9" pos:column="67">
  <block pos:line="10" pos:column="3">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">option<pos:position pos:line="11" pos:column="16"/></name> <argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">OPTNOCURSES<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31">
    <block pos:line="12" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="13" pos:column="7">char<pos:position pos:line="13" pos:column="11"/></name></type> <name><name pos:line="13" pos:column="12">msg<pos:position pos:line="13" pos:column="15"/></name><index pos:line="13" pos:column="15">[<expr><name pos:line="13" pos:column="16">LONG_STRING<pos:position pos:line="13" pos:column="27"/></name></expr>]<pos:position pos:line="13" pos:column="28"/></index></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
      
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">snprintf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">msg<pos:position pos:line="15" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="21">sizeof<argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">msg<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="34">_<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><literal type="string" pos:line="15" pos:column="36">"Lock count exceeded, remove lock for %s?"<pos:position pos:line="15" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr></argument>,
	       <argument><expr><name pos:line="16" pos:column="16">path<pos:position pos:line="16" pos:column="20"/></name></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
      <if pos:line="17" pos:column="7">if<condition pos:line="17" pos:column="9">(<expr><name pos:line="17" pos:column="10">retry<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">&amp;&amp;<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="19">mutt_yesorno<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">msg<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="37">1<pos:position pos:line="17" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call> <operator pos:line="17" pos:column="40">==<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="43">1<pos:position pos:line="17" pos:column="44"/></literal></expr>)<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45">
      <block pos:line="18" pos:column="7">{
	<expr_stmt><expr><name pos:line="19" pos:column="9">flags<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">|=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">DL_FL_FORCE<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">retry<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">--<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">mutt_clear_error<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">()<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
	<goto pos:line="22" pos:column="9">goto <name pos:line="22" pos:column="14">retry_lock<pos:position pos:line="22" pos:column="24"/></name>;<pos:position pos:line="22" pos:column="25"/></goto>
      }<pos:position pos:line="23" pos:column="8"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then> 
    <else pos:line="25" pos:column="5">else
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">mutt_error<pos:position pos:line="27" pos:column="17"/></name> <argument_list pos:line="27" pos:column="18">( <argument><expr><call><name pos:line="27" pos:column="20">_<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><literal type="string" pos:line="27" pos:column="22">"Can't dotlock %s.\n"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">path<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
  <return pos:line="30" pos:column="3">return <expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><ternary><condition><expr><name pos:line="30" pos:column="11">r<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">==<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">DL_EX_OK<pos:position pos:line="30" pos:column="24"/></name></expr> ?<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26"> <expr><literal type="number" pos:line="30" pos:column="27">0<pos:position pos:line="30" pos:column="28"/></literal></expr> <pos:position pos:line="30" pos:column="29"/></then><else pos:line="30" pos:column="29">: <expr><operator pos:line="30" pos:column="31">-<pos:position pos:line="30" pos:column="32"/></operator><literal type="number" pos:line="30" pos:column="32">1<pos:position pos:line="30" pos:column="33"/></literal></expr></else></ternary><operator pos:line="30" pos:column="33">)<pos:position pos:line="30" pos:column="34"/></operator></expr>;<pos:position pos:line="30" pos:column="35"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_168_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_str_replace<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier><modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">p<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">FREE<pos:position pos:line="3" pos:column="7"/></name> <argument_list pos:line="3" pos:column="8">(<argument><expr><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name></expr></argument>)<pos:position pos:line="3" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="12"/></expr_stmt>		<comment type="block" pos:line="3" pos:column="25">/* __FREE_CHECKED__ */</comment>
  <expr_stmt><expr><operator pos:line="4" pos:column="3">*<pos:position pos:line="4" pos:column="4"/></operator><name pos:line="4" pos:column="4">p<pos:position pos:line="4" pos:column="5"/></name> <operator pos:line="4" pos:column="6">=<pos:position pos:line="4" pos:column="7"/></operator> <call><name pos:line="4" pos:column="8">safe_strdup<pos:position pos:line="4" pos:column="19"/></name> <argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">s<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

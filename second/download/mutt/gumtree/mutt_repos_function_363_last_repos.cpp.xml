<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_363_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_parse_bind<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">BUFFER<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">buf<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">BUFFER<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">unsigned<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">long<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">BUFFER<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">err<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">binding_t<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">bindings<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><name pos:line="3" pos:column="38">NULL<pos:position pos:line="3" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">key<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name><name pos:line="5" pos:column="7">menu<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><sizeof pos:line="5" pos:column="12">sizeof<argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">Menus<pos:position pos:line="5" pos:column="24"/></name></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></sizeof><operator pos:line="5" pos:column="25">/<pos:position pos:line="5" pos:column="26"/></operator><sizeof pos:line="5" pos:column="26">sizeof<argument_list pos:line="5" pos:column="32">(<argument><expr pos:line="5" pos:column="33">struct <name pos:line="5" pos:column="40">mapping_t<pos:position pos:line="5" pos:column="49"/></name></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></sizeof><operator pos:line="5" pos:column="50">-<pos:position pos:line="5" pos:column="51"/></operator><literal type="number" pos:line="5" pos:column="51">1<pos:position pos:line="5" pos:column="52"/></literal></expr>]<pos:position pos:line="5" pos:column="53"/></index></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="55">r<pos:position pos:line="5" pos:column="56"/></name> <init pos:line="5" pos:column="57">= <expr><literal type="number" pos:line="5" pos:column="59">0<pos:position pos:line="5" pos:column="60"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="62">nummenus<pos:position pos:line="5" pos:column="70"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="72">i<pos:position pos:line="5" pos:column="73"/></name></decl>;<pos:position pos:line="5" pos:column="74"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">key<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">parse_keymap<pos:position pos:line="7" pos:column="26"/></name> <argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">menu<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">s<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="37">sizeof <argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">menu<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></sizeof><operator pos:line="7" pos:column="50">/<pos:position pos:line="7" pos:column="51"/></operator><sizeof pos:line="7" pos:column="51">sizeof <argument_list pos:line="7" pos:column="58">(<argument><expr><name><name pos:line="7" pos:column="59">menu<pos:position pos:line="7" pos:column="63"/></name><index pos:line="7" pos:column="63">[<expr><literal type="number" pos:line="7" pos:column="64">0<pos:position pos:line="7" pos:column="65"/></literal></expr>]<pos:position pos:line="7" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></sizeof></expr></argument>,
			   <argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="29">nummenus<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">err<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator> <operator pos:line="8" pos:column="45">==<pos:position pos:line="8" pos:column="47"/></operator> <name pos:line="8" pos:column="48">NULL<pos:position pos:line="8" pos:column="52"/></name></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return></block></then></if>

  <comment type="block" pos:line="11" pos:column="3">/* function to execute */</comment>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">mutt_extract_token<pos:position pos:line="12" pos:column="21"/></name> <argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">buf<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">s<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="31">0<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">MoreArgs<pos:position pos:line="13" pos:column="15"/></name> <argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">s<pos:position pos:line="13" pos:column="18"/></name></expr></argument>)<pos:position pos:line="13" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">strfcpy<pos:position pos:line="15" pos:column="12"/></name> <argument_list pos:line="15" pos:column="13">(<argument><expr><name><name pos:line="15" pos:column="14">err<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">data<pos:position pos:line="15" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="25">_<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><literal type="string" pos:line="15" pos:column="27">"bind: too many arguments"<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="56">err<pos:position pos:line="15" pos:column="59"/></name><operator pos:line="15" pos:column="59">-&gt;<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="61">dsize<pos:position pos:line="15" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">r<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <operator pos:line="16" pos:column="9">-<pos:position pos:line="16" pos:column="10"/></operator><literal type="number" pos:line="16" pos:column="10">1<pos:position pos:line="16" pos:column="11"/></literal></expr>;<pos:position pos:line="16" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then>
  <elseif pos:line="18" pos:column="3">else <if pos:line="18" pos:column="8">if <condition pos:line="18" pos:column="11">(<expr><call><name pos:line="18" pos:column="12">ascii_strcasecmp<pos:position pos:line="18" pos:column="28"/></name> <argument_list pos:line="18" pos:column="29">(<argument><expr><literal type="string" pos:line="18" pos:column="30">"noop"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="38">buf<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">data<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call> <operator pos:line="18" pos:column="49">==<pos:position pos:line="18" pos:column="51"/></operator> <literal type="number" pos:line="18" pos:column="52">0<pos:position pos:line="18" pos:column="53"/></literal></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54">
  <block pos:line="19" pos:column="3">{
    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">i<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <literal type="number" pos:line="20" pos:column="14">0<pos:position pos:line="20" pos:column="15"/></literal></expr>;<pos:position pos:line="20" pos:column="16"/></init> <condition><expr><name pos:line="20" pos:column="17">i<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&lt;<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="21">nummenus<pos:position pos:line="20" pos:column="29"/></name></expr>;<pos:position pos:line="20" pos:column="30"/></condition> <incr><expr><operator pos:line="20" pos:column="31">++<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">i<pos:position pos:line="20" pos:column="34"/></name></expr></incr>)<pos:position pos:line="20" pos:column="35"/></control>
    <block pos:line="21" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">km_bindkey<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">key<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="24">menu<pos:position pos:line="22" pos:column="28"/></name><index pos:line="22" pos:column="28">[<expr><name pos:line="22" pos:column="29">i<pos:position pos:line="22" pos:column="30"/></name></expr>]<pos:position pos:line="22" pos:column="31"/></index></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="33">OP_NULL<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt> <comment type="block" pos:line="22" pos:column="43">/* the `unbind' command */</comment>
    }<pos:position pos:line="23" pos:column="6"/></block></for>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if></elseif>
  <else pos:line="25" pos:column="3">else
  <block pos:line="26" pos:column="3">{
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><expr><name pos:line="27" pos:column="10">i<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></init> <condition><expr><name pos:line="27" pos:column="17">i<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&lt;<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="21">nummenus<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></condition> <incr><expr><operator pos:line="27" pos:column="31">++<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">i<pos:position pos:line="27" pos:column="34"/></name></expr></incr>)<pos:position pos:line="27" pos:column="35"/></control>
    <block pos:line="28" pos:column="5">{
      <comment type="block" pos:line="29" pos:column="7">/* First check the "generic" list of commands */</comment>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name><name pos:line="30" pos:column="11">menu<pos:position pos:line="30" pos:column="15"/></name><index pos:line="30" pos:column="15">[<expr><name pos:line="30" pos:column="16">i<pos:position pos:line="30" pos:column="17"/></name></expr>]<pos:position pos:line="30" pos:column="18"/></index></name> <operator pos:line="30" pos:column="19">==<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">MENU_PAGER<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">||<pos:position pos:line="30" pos:column="35"/></operator> <name><name pos:line="30" pos:column="36">menu<pos:position pos:line="30" pos:column="40"/></name><index pos:line="30" pos:column="40">[<expr><name pos:line="30" pos:column="41">i<pos:position pos:line="30" pos:column="42"/></name></expr>]<pos:position pos:line="30" pos:column="43"/></index></name> <operator pos:line="30" pos:column="44">==<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="47">MENU_EDITOR<pos:position pos:line="30" pos:column="58"/></name> <operator pos:line="30" pos:column="59">||<pos:position pos:line="30" pos:column="61"/></operator>
      <name><name pos:line="31" pos:column="7">menu<pos:position pos:line="31" pos:column="11"/></name><index pos:line="31" pos:column="11">[<expr><name pos:line="31" pos:column="12">i<pos:position pos:line="31" pos:column="13"/></name></expr>]<pos:position pos:line="31" pos:column="14"/></index></name> <operator pos:line="31" pos:column="15">==<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">MENU_GENERIC<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">||<pos:position pos:line="31" pos:column="33"/></operator>
	  <call><name pos:line="32" pos:column="11">try_bind<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">key<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="26">menu<pos:position pos:line="32" pos:column="30"/></name><index pos:line="32" pos:column="30">[<expr><name pos:line="32" pos:column="31">i<pos:position pos:line="32" pos:column="32"/></name></expr>]<pos:position pos:line="32" pos:column="33"/></index></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="35">buf<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">data<pos:position pos:line="32" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">OpGeneric<pos:position pos:line="32" pos:column="55"/></name></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call> <operator pos:line="32" pos:column="57">!=<pos:position pos:line="32" pos:column="59"/></operator> <literal type="number" pos:line="32" pos:column="60">0<pos:position pos:line="32" pos:column="61"/></literal></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62">
      <block pos:line="33" pos:column="7">{
        <comment type="block" pos:line="34" pos:column="9">/* Now check the menu-specific list of commands (if they exist) */</comment>
        <expr_stmt><expr><name pos:line="35" pos:column="9">bindings<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">km_get_table<pos:position pos:line="35" pos:column="32"/></name> <argument_list pos:line="35" pos:column="33">(<argument><expr><name><name pos:line="35" pos:column="34">menu<pos:position pos:line="35" pos:column="38"/></name><index pos:line="35" pos:column="38">[<expr><name pos:line="35" pos:column="39">i<pos:position pos:line="35" pos:column="40"/></name></expr>]<pos:position pos:line="35" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">bindings<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">&amp;&amp;<pos:position pos:line="36" pos:column="32"/></operator> <call><name pos:line="36" pos:column="25">try_bind<pos:position pos:line="36" pos:column="33"/></name> <argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">key<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="40">menu<pos:position pos:line="36" pos:column="44"/></name><index pos:line="36" pos:column="44">[<expr><name pos:line="36" pos:column="45">i<pos:position pos:line="36" pos:column="46"/></name></expr>]<pos:position pos:line="36" pos:column="47"/></index></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="49">buf<pos:position pos:line="36" pos:column="52"/></name><operator pos:line="36" pos:column="52">-&gt;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="54">data<pos:position pos:line="36" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="60">bindings<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call> <operator pos:line="36" pos:column="70">!=<pos:position pos:line="36" pos:column="72"/></operator> <literal type="number" pos:line="36" pos:column="73">0<pos:position pos:line="36" pos:column="74"/></literal></expr>)<pos:position pos:line="36" pos:column="75"/></condition><then pos:line="36" pos:column="75">
        <block pos:line="37" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="38" pos:column="11">snprintf<pos:position pos:line="38" pos:column="19"/></name> <argument_list pos:line="38" pos:column="20">(<argument><expr><name><name pos:line="38" pos:column="21">err<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">data<pos:position pos:line="38" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="32">err<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">dsize<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="44">_<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><literal type="string" pos:line="38" pos:column="46">"%s: no such function in map"<pos:position pos:line="38" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="78">buf<pos:position pos:line="38" pos:column="81"/></name><operator pos:line="38" pos:column="81">-&gt;<pos:position pos:line="38" pos:column="86"/></operator><name pos:line="38" pos:column="83">data<pos:position pos:line="38" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="89"/></expr_stmt>
          <expr_stmt><expr><name pos:line="39" pos:column="11">r<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <operator pos:line="39" pos:column="15">-<pos:position pos:line="39" pos:column="16"/></operator><literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></for>
  }<pos:position pos:line="43" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">FREE<pos:position pos:line="44" pos:column="7"/></name> <argument_list pos:line="44" pos:column="8">(<argument><expr><operator pos:line="44" pos:column="9">&amp;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="10">key<pos:position pos:line="44" pos:column="13"/></name></expr></argument>)<pos:position pos:line="44" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="15"/></expr_stmt>
  <return pos:line="45" pos:column="3">return <expr><operator pos:line="45" pos:column="10">(<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">r<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">)<pos:position pos:line="45" pos:column="13"/></operator></expr>;<pos:position pos:line="45" pos:column="14"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

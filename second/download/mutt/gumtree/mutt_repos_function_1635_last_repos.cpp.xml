<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1635_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">close_mailbox<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">CONTEXT<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">ctx<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">ctx<pos:position pos:line="4" pos:column="11"/></name></expr>)<pos:position pos:line="4" pos:column="12"/></condition><then pos:line="4" pos:column="12">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">COMPRESS_INFO<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">ci<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name><name pos:line="7" pos:column="23">ctx<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">compress_info<pos:position pos:line="7" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">ci<pos:position pos:line="8" pos:column="10"/></name></expr>)<pos:position pos:line="8" pos:column="11"/></condition><then pos:line="8" pos:column="11">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></return></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">mx_ops<pos:position pos:line="11" pos:column="16"/></name></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">ops<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><name><name pos:line="11" pos:column="24">ci<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">child_ops<pos:position pos:line="11" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">ops<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><call><name><name pos:line="15" pos:column="3">ops<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">close<pos:position pos:line="15" pos:column="13"/></name></name> <argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">ctx<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* sync has already been called, so we only need to delete some files */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name><name pos:line="18" pos:column="8">ctx<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">append<pos:position pos:line="18" pos:column="19"/></name></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20">
  <block pos:line="19" pos:column="3">{
    <comment type="block" pos:line="20" pos:column="5">/* If the file was removed, remove the compressed folder too */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><call><name pos:line="21" pos:column="10">access<pos:position pos:line="21" pos:column="16"/></name> <argument_list pos:line="21" pos:column="17">(<argument><expr><name><name pos:line="21" pos:column="18">ctx<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">path<pos:position pos:line="21" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="29">F_OK<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call> <operator pos:line="21" pos:column="35">!=<pos:position pos:line="21" pos:column="37"/></operator> <literal type="number" pos:line="21" pos:column="38">0<pos:position pos:line="21" pos:column="39"/></literal><operator pos:line="21" pos:column="39">)<pos:position pos:line="21" pos:column="40"/></operator> <operator pos:line="21" pos:column="41">&amp;&amp;<pos:position pos:line="21" pos:column="51"/></operator> <operator pos:line="21" pos:column="44">!<pos:position pos:line="21" pos:column="45"/></operator><call><name pos:line="21" pos:column="45">option<pos:position pos:line="21" pos:column="51"/></name> <argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">OPTSAVEEMPTY<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="67"/></condition><then pos:line="21" pos:column="67">
    <block pos:line="22" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">remove<pos:position pos:line="23" pos:column="13"/></name> <argument_list pos:line="23" pos:column="14">(<argument><expr><name><name pos:line="23" pos:column="15">ctx<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">realpath<pos:position pos:line="23" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">remove<pos:position pos:line="27" pos:column="13"/></name> <argument_list pos:line="27" pos:column="14">(<argument><expr><name><name pos:line="27" pos:column="15">ctx<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">path<pos:position pos:line="27" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>

    <return pos:line="30" pos:column="5">return <expr><literal type="number" pos:line="30" pos:column="12">0<pos:position pos:line="30" pos:column="13"/></literal></expr>;<pos:position pos:line="30" pos:column="14"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><specifier pos:line="33" pos:column="3">const<pos:position pos:line="33" pos:column="8"/></specifier> <name pos:line="33" pos:column="9">char<pos:position pos:line="33" pos:column="13"/></name> <modifier pos:line="33" pos:column="14">*<pos:position pos:line="33" pos:column="15"/></modifier></type><name pos:line="33" pos:column="15">append<pos:position pos:line="33" pos:column="21"/></name></decl>;<pos:position pos:line="33" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="34" pos:column="3">const<pos:position pos:line="34" pos:column="8"/></specifier> <name pos:line="34" pos:column="9">char<pos:position pos:line="34" pos:column="13"/></name> <modifier pos:line="34" pos:column="14">*<pos:position pos:line="34" pos:column="15"/></modifier></type><name pos:line="34" pos:column="15">msg<pos:position pos:line="34" pos:column="18"/></name></decl>;<pos:position pos:line="34" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="36" pos:column="3">/* The file exists and we can append */</comment>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><operator pos:line="37" pos:column="7">(<pos:position pos:line="37" pos:column="8"/></operator><call><name pos:line="37" pos:column="8">access<pos:position pos:line="37" pos:column="14"/></name> <argument_list pos:line="37" pos:column="15">(<argument><expr><name><name pos:line="37" pos:column="16">ctx<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">realpath<pos:position pos:line="37" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="31">F_OK<pos:position pos:line="37" pos:column="35"/></name></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call> <operator pos:line="37" pos:column="37">==<pos:position pos:line="37" pos:column="39"/></operator> <literal type="number" pos:line="37" pos:column="40">0<pos:position pos:line="37" pos:column="41"/></literal><operator pos:line="37" pos:column="41">)<pos:position pos:line="37" pos:column="42"/></operator> <operator pos:line="37" pos:column="43">&amp;&amp;<pos:position pos:line="37" pos:column="53"/></operator> <name><name pos:line="37" pos:column="46">ci<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">-&gt;<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="50">append<pos:position pos:line="37" pos:column="56"/></name></name></expr>)<pos:position pos:line="37" pos:column="57"/></condition><then pos:line="37" pos:column="57">
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">append<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <name><name pos:line="39" pos:column="14">ci<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">append<pos:position pos:line="39" pos:column="24"/></name></name></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">msg<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <call><name pos:line="40" pos:column="11">_<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><literal type="string" pos:line="40" pos:column="13">"Compressed-appending to %s..."<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then>
  <else pos:line="42" pos:column="3">else
  <block pos:line="43" pos:column="3">{
    <expr_stmt><expr><name pos:line="44" pos:column="5">append<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name><name pos:line="44" pos:column="14">ci<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">close<pos:position pos:line="44" pos:column="23"/></name></name></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">msg<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <call><name pos:line="45" pos:column="11">_<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><literal type="string" pos:line="45" pos:column="13">"Compressing %s..."<pos:position pos:line="45" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></else></if>

  <decl_stmt><decl><type><name pos:line="48" pos:column="3">int<pos:position pos:line="48" pos:column="6"/></name></type> <name pos:line="48" pos:column="7">rc<pos:position pos:line="48" pos:column="9"/></name> <init pos:line="48" pos:column="10">= <expr><call><name pos:line="48" pos:column="12">execute_command<pos:position pos:line="48" pos:column="27"/></name> <argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">ctx<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">append<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">msg<pos:position pos:line="48" pos:column="45"/></name></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="48" pos:column="47"/></decl_stmt>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">rc<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">==<pos:position pos:line="49" pos:column="12"/></operator> <literal type="number" pos:line="49" pos:column="13">0<pos:position pos:line="49" pos:column="14"/></literal></expr>)<pos:position pos:line="49" pos:column="15"/></condition><then pos:line="49" pos:column="15">
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">mutt_any_key_to_continue<pos:position pos:line="51" pos:column="29"/></name> <argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">NULL<pos:position pos:line="51" pos:column="35"/></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">mutt_error<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><call><name pos:line="52" pos:column="17">_<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><literal type="string" pos:line="52" pos:column="19">"Error. Preserving temporary file: %s"<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="60">ctx<pos:position pos:line="52" pos:column="63"/></name><operator pos:line="52" pos:column="63">-&gt;<pos:position pos:line="52" pos:column="68"/></operator><name pos:line="52" pos:column="65">path<pos:position pos:line="52" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></then>
  <else pos:line="54" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="5">remove<pos:position pos:line="55" pos:column="11"/></name> <argument_list pos:line="55" pos:column="12">(<argument><expr><name><name pos:line="55" pos:column="13">ctx<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">path<pos:position pos:line="55" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="57" pos:column="3">unlock_realpath<pos:position pos:line="57" pos:column="18"/></name> <argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">ctx<pos:position pos:line="57" pos:column="23"/></name></expr></argument>)<pos:position pos:line="57" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt>

  <return pos:line="59" pos:column="3">return <expr><literal type="number" pos:line="59" pos:column="10">0<pos:position pos:line="59" pos:column="11"/></literal></expr>;<pos:position pos:line="59" pos:column="12"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_152.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_fast_trash<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">CONTEXT<pos:position pos:line="1" pos:column="29"/></name><modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type> <name pos:line="1" pos:column="31">ctx<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type> <name pos:line="1" pos:column="42">dest<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">mbox<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">LONG_STRING<pos:position pos:line="4" pos:column="24"/></name></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">mmbox<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><name pos:line="5" pos:column="14">LONG_STRING<pos:position pos:line="5" pos:column="25"/></name></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">prompt<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">LONG_STRING<pos:position pos:line="6" pos:column="26"/></name></expr>]<pos:position pos:line="6" pos:column="27"/></index></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">rc<pos:position pos:line="7" pos:column="9"/></name></decl>;<pos:position pos:line="7" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">IMAP_MBOX<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">mx<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">triedcreate<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">idata<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">IMAP_DATA<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator> <name><name pos:line="11" pos:column="24">ctx<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">data<pos:position pos:line="11" pos:column="33"/></name></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><call><name pos:line="13" pos:column="7">imap_parse_path<pos:position pos:line="13" pos:column="22"/></name> <argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">dest<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="30">&amp;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="31">mx<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35">
  <block pos:line="14" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">dprint<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">debugfile<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">,<pos:position pos:line="15" pos:column="27"/></operator> <literal type="string" pos:line="15" pos:column="28">"imap_fast_trash: bad destination %s\n"<pos:position pos:line="15" pos:column="67"/></literal><operator pos:line="15" pos:column="67">,<pos:position pos:line="15" pos:column="68"/></operator> <name pos:line="15" pos:column="69">dest<pos:position pos:line="15" pos:column="73"/></name><operator pos:line="15" pos:column="73">)<pos:position pos:line="15" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="76"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* check that the save-to folder is in the same account */</comment>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">!<pos:position pos:line="20" pos:column="8"/></operator><call><name pos:line="20" pos:column="8">mutt_account_match<pos:position pos:line="20" pos:column="26"/></name> <argument_list pos:line="20" pos:column="27">(<argument><expr><operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator><operator pos:line="20" pos:column="29">(<pos:position pos:line="20" pos:column="30"/></operator><name><name pos:line="20" pos:column="30">CTX_DATA<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">conn<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">account<pos:position pos:line="20" pos:column="53"/></name></name><operator pos:line="20" pos:column="53">)<pos:position pos:line="20" pos:column="54"/></operator></expr></argument>, <argument><expr><operator pos:line="20" pos:column="56">&amp;<pos:position pos:line="20" pos:column="61"/></operator><operator pos:line="20" pos:column="57">(<pos:position pos:line="20" pos:column="58"/></operator><name><name pos:line="20" pos:column="58">mx<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">.<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="61">account<pos:position pos:line="20" pos:column="68"/></name></name><operator pos:line="20" pos:column="68">)<pos:position pos:line="20" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="71"/></condition><then pos:line="20" pos:column="71">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">dprint<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><literal type="number" pos:line="22" pos:column="13">3<pos:position pos:line="22" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">debugfile<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">,<pos:position pos:line="22" pos:column="27"/></operator> <literal type="string" pos:line="22" pos:column="28">"imap_fast_trash: %s not same server as %s\n"<pos:position pos:line="22" pos:column="73"/></literal><operator pos:line="22" pos:column="73">,<pos:position pos:line="22" pos:column="74"/></operator>
      <name pos:line="23" pos:column="7">dest<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">,<pos:position pos:line="23" pos:column="12"/></operator> <name><name pos:line="23" pos:column="13">ctx<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">path<pos:position pos:line="23" pos:column="22"/></name></name><operator pos:line="23" pos:column="22">)<pos:position pos:line="23" pos:column="23"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><literal type="number" pos:line="24" pos:column="12">1<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></return>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">imap_fix_path<pos:position pos:line="27" pos:column="16"/></name> <argument_list pos:line="27" pos:column="17">(<argument><expr><name pos:line="27" pos:column="18">idata<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="25">mx<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">mbox<pos:position pos:line="27" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">mbox<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="40">sizeof <argument_list pos:line="27" pos:column="47">(<argument><expr><name pos:line="27" pos:column="48">mbox<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="55"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><operator pos:line="28" pos:column="7">!<pos:position pos:line="28" pos:column="8"/></operator><operator pos:line="28" pos:column="8">*<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">mbox<pos:position pos:line="28" pos:column="13"/></name></expr>)<pos:position pos:line="28" pos:column="14"/></condition><then pos:line="28" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">strfcpy<pos:position pos:line="29" pos:column="12"/></name> <argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">mbox<pos:position pos:line="29" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="20">"INBOX"<pos:position pos:line="29" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="29">sizeof <argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">mbox<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">imap_munge_mbox_name<pos:position pos:line="30" pos:column="23"/></name> <argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">idata<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="32">mmbox<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="39">sizeof <argument_list pos:line="30" pos:column="46">(<argument><expr><name pos:line="30" pos:column="47">mmbox<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">mbox<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>

  <comment type="block" pos:line="32" pos:column="3">/* loop in case of TRYCREATE */</comment>
  <do pos:line="33" pos:column="3">do
  <block pos:line="34" pos:column="3">{
    <expr_stmt><expr><name pos:line="35" pos:column="5">rc<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">imap_exec_msgset<pos:position pos:line="35" pos:column="26"/></name> <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">idata<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="35">"UID COPY"<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">mmbox<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">MUTT_TRASH<pos:position pos:line="35" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="66">0<pos:position pos:line="35" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="69">0<pos:position pos:line="35" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="72"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">rc<pos:position pos:line="36" pos:column="12"/></name></expr>)<pos:position pos:line="36" pos:column="13"/></condition><then pos:line="36" pos:column="13">
    <block pos:line="37" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">dprint<pos:position pos:line="38" pos:column="13"/></name> <argument_list pos:line="38" pos:column="14">(<argument><expr><literal type="number" pos:line="38" pos:column="15">1<pos:position pos:line="38" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="18">(<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">debugfile<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">,<pos:position pos:line="38" pos:column="29"/></operator> <literal type="string" pos:line="38" pos:column="30">"imap_fast_trash: No messages to trash\n"<pos:position pos:line="38" pos:column="71"/></literal><operator pos:line="38" pos:column="71">)<pos:position pos:line="38" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><name pos:line="39" pos:column="7">rc<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <operator pos:line="39" pos:column="12">-<pos:position pos:line="39" pos:column="13"/></operator><literal type="number" pos:line="39" pos:column="13">1<pos:position pos:line="39" pos:column="14"/></literal></expr>;<pos:position pos:line="39" pos:column="15"/></expr_stmt>
      <goto pos:line="40" pos:column="7">goto <name pos:line="40" pos:column="12">out<pos:position pos:line="40" pos:column="15"/></name>;<pos:position pos:line="40" pos:column="16"/></goto>
    }<pos:position pos:line="41" pos:column="6"/></block></then>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><name pos:line="42" pos:column="14">rc<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">&lt;<pos:position pos:line="42" pos:column="21"/></operator> <literal type="number" pos:line="42" pos:column="19">0<pos:position pos:line="42" pos:column="20"/></literal></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21">
    <block pos:line="43" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">dprint<pos:position pos:line="44" pos:column="13"/></name> <argument_list pos:line="44" pos:column="14">(<argument><expr><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="44" pos:column="18">(<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">debugfile<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">,<pos:position pos:line="44" pos:column="29"/></operator> <literal type="string" pos:line="44" pos:column="30">"could not queue copy\n"<pos:position pos:line="44" pos:column="54"/></literal><operator pos:line="44" pos:column="54">)<pos:position pos:line="44" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
      <goto pos:line="45" pos:column="7">goto <name pos:line="45" pos:column="12">out<pos:position pos:line="45" pos:column="15"/></name>;<pos:position pos:line="45" pos:column="16"/></goto>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if></elseif>
    <else pos:line="47" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="7">mutt_message<pos:position pos:line="48" pos:column="19"/></name> <argument_list pos:line="48" pos:column="20">(<argument><expr><call><name pos:line="48" pos:column="21">_<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><literal type="string" pos:line="48" pos:column="23">"Copying %d messages to %s..."<pos:position pos:line="48" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">rc<pos:position pos:line="48" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="60">mbox<pos:position pos:line="48" pos:column="64"/></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="50" pos:column="5">/* let's get it on */</comment>
    <expr_stmt><expr><name pos:line="51" pos:column="5">rc<pos:position pos:line="51" pos:column="7"/></name> <operator pos:line="51" pos:column="8">=<pos:position pos:line="51" pos:column="9"/></operator> <call><name pos:line="51" pos:column="10">imap_exec<pos:position pos:line="51" pos:column="19"/></name> <argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">idata<pos:position pos:line="51" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="28">NULL<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="34">IMAP_CMD_FAIL_OK<pos:position pos:line="51" pos:column="50"/></name></expr></argument>)<pos:position pos:line="51" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="52"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">rc<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">==<pos:position pos:line="52" pos:column="14"/></operator> <operator pos:line="52" pos:column="15">-<pos:position pos:line="52" pos:column="16"/></operator><literal type="number" pos:line="52" pos:column="16">2<pos:position pos:line="52" pos:column="17"/></literal></expr>)<pos:position pos:line="52" pos:column="18"/></condition><then pos:line="52" pos:column="18">
    <block pos:line="53" pos:column="5">{
      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><name pos:line="54" pos:column="11">triedcreate<pos:position pos:line="54" pos:column="22"/></name></expr>)<pos:position pos:line="54" pos:column="23"/></condition><then pos:line="54" pos:column="23">
      <block pos:line="55" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">dprint<pos:position pos:line="56" pos:column="15"/></name> <argument_list pos:line="56" pos:column="16">(<argument><expr><literal type="number" pos:line="56" pos:column="17">1<pos:position pos:line="56" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="56" pos:column="20">(<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="21">debugfile<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">,<pos:position pos:line="56" pos:column="31"/></operator> <literal type="string" pos:line="56" pos:column="32">"Already tried to create mailbox %s\n"<pos:position pos:line="56" pos:column="70"/></literal><operator pos:line="56" pos:column="70">,<pos:position pos:line="56" pos:column="71"/></operator> <name pos:line="56" pos:column="72">mbox<pos:position pos:line="56" pos:column="76"/></name><operator pos:line="56" pos:column="76">)<pos:position pos:line="56" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="56" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="79"/></expr_stmt>
        <break pos:line="57" pos:column="9">break;<pos:position pos:line="57" pos:column="15"/></break>
      }<pos:position pos:line="58" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="59" pos:column="7">/* bail out if command failed for reasons other than nonexistent target */</comment>
      <if pos:line="60" pos:column="7">if <condition pos:line="60" pos:column="10">(<expr><call><name pos:line="60" pos:column="11">ascii_strncasecmp<pos:position pos:line="60" pos:column="28"/></name> <argument_list pos:line="60" pos:column="29">(<argument><expr><call><name pos:line="60" pos:column="30">imap_get_qualifier<pos:position pos:line="60" pos:column="48"/></name> <argument_list pos:line="60" pos:column="49">(<argument><expr><name><name pos:line="60" pos:column="50">idata<pos:position pos:line="60" pos:column="55"/></name><operator pos:line="60" pos:column="55">-&gt;<pos:position pos:line="60" pos:column="60"/></operator><name pos:line="60" pos:column="57">buf<pos:position pos:line="60" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="63">"[TRYCREATE]"<pos:position pos:line="60" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="78">11<pos:position pos:line="60" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="82"/></condition><then pos:line="60" pos:column="82">
        <block type="pseudo"><break pos:line="61" pos:column="9">break;<pos:position pos:line="61" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">dprint<pos:position pos:line="62" pos:column="13"/></name> <argument_list pos:line="62" pos:column="14">(<argument><expr><literal type="number" pos:line="62" pos:column="15">3<pos:position pos:line="62" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="18">(<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">debugfile<pos:position pos:line="62" pos:column="28"/></name><operator pos:line="62" pos:column="28">,<pos:position pos:line="62" pos:column="29"/></operator> <literal type="string" pos:line="62" pos:column="30">"imap_fast_trash: server suggests TRYCREATE\n"<pos:position pos:line="62" pos:column="76"/></literal><operator pos:line="62" pos:column="76">)<pos:position pos:line="62" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="62" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">snprintf<pos:position pos:line="63" pos:column="15"/></name> <argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">prompt<pos:position pos:line="63" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="63" pos:column="25">sizeof <argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">prompt<pos:position pos:line="63" pos:column="39"/></name></expr></argument>)<pos:position pos:line="63" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="42">_<pos:position pos:line="63" pos:column="43"/></name><argument_list pos:line="63" pos:column="43">(<argument><expr><literal type="string" pos:line="63" pos:column="44">"Create %s?"<pos:position pos:line="63" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="59">mbox<pos:position pos:line="63" pos:column="63"/></name></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><call><name pos:line="64" pos:column="11">option<pos:position pos:line="64" pos:column="17"/></name> <argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">OPTCONFIRMCREATE<pos:position pos:line="64" pos:column="35"/></name></expr></argument>)<pos:position pos:line="64" pos:column="36"/></argument_list></call> <operator pos:line="64" pos:column="37">&amp;&amp;<pos:position pos:line="64" pos:column="47"/></operator> <call><name pos:line="64" pos:column="40">mutt_yesorno<pos:position pos:line="64" pos:column="52"/></name> <argument_list pos:line="64" pos:column="53">(<argument><expr><name pos:line="64" pos:column="54">prompt<pos:position pos:line="64" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="62">1<pos:position pos:line="64" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call> <operator pos:line="64" pos:column="65">&lt;<pos:position pos:line="64" pos:column="69"/></operator> <literal type="number" pos:line="64" pos:column="67">1<pos:position pos:line="64" pos:column="68"/></literal></expr>)<pos:position pos:line="64" pos:column="69"/></condition><then pos:line="64" pos:column="69">
      <block pos:line="65" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">mutt_clear_error<pos:position pos:line="66" pos:column="25"/></name> <argument_list pos:line="66" pos:column="26">()<pos:position pos:line="66" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt>
        <goto pos:line="67" pos:column="9">goto <name pos:line="67" pos:column="14">out<pos:position pos:line="67" pos:column="17"/></name>;<pos:position pos:line="67" pos:column="18"/></goto>
      }<pos:position pos:line="68" pos:column="8"/></block></then></if>
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><call><name pos:line="69" pos:column="11">imap_create_mailbox<pos:position pos:line="69" pos:column="30"/></name> <argument_list pos:line="69" pos:column="31">(<argument><expr><name pos:line="69" pos:column="32">idata<pos:position pos:line="69" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="39">mbox<pos:position pos:line="69" pos:column="43"/></name></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></call> <operator pos:line="69" pos:column="45">&lt;<pos:position pos:line="69" pos:column="49"/></operator> <literal type="number" pos:line="69" pos:column="47">0<pos:position pos:line="69" pos:column="48"/></literal></expr>)<pos:position pos:line="69" pos:column="49"/></condition><then pos:line="69" pos:column="49">
        <block type="pseudo"><break pos:line="70" pos:column="9">break;<pos:position pos:line="70" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="71" pos:column="7">triedcreate<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <literal type="number" pos:line="71" pos:column="21">1<pos:position pos:line="71" pos:column="22"/></literal></expr>;<pos:position pos:line="71" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>
  }<pos:position pos:line="73" pos:column="4"/></block>
  while <condition pos:line="74" pos:column="9">(<expr><name pos:line="74" pos:column="10">rc<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">==<pos:position pos:line="74" pos:column="15"/></operator> <operator pos:line="74" pos:column="16">-<pos:position pos:line="74" pos:column="17"/></operator><literal type="number" pos:line="74" pos:column="17">2<pos:position pos:line="74" pos:column="18"/></literal></expr>)<pos:position pos:line="74" pos:column="19"/></condition>;<pos:position pos:line="74" pos:column="20"/></do>

  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name pos:line="76" pos:column="7">rc<pos:position pos:line="76" pos:column="9"/></name> <operator pos:line="76" pos:column="10">!=<pos:position pos:line="76" pos:column="12"/></operator> <literal type="number" pos:line="76" pos:column="13">0<pos:position pos:line="76" pos:column="14"/></literal></expr>)<pos:position pos:line="76" pos:column="15"/></condition><then pos:line="76" pos:column="15">
  <block pos:line="77" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">imap_error<pos:position pos:line="78" pos:column="15"/></name> <argument_list pos:line="78" pos:column="16">(<argument><expr><literal type="string" pos:line="78" pos:column="17">"imap_fast_trash"<pos:position pos:line="78" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="36">idata<pos:position pos:line="78" pos:column="41"/></name><operator pos:line="78" pos:column="41">-&gt;<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="43">buf<pos:position pos:line="78" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="48"/></expr_stmt>
    <goto pos:line="79" pos:column="5">goto <name pos:line="79" pos:column="10">out<pos:position pos:line="79" pos:column="13"/></name>;<pos:position pos:line="79" pos:column="14"/></goto>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="82" pos:column="3">rc<pos:position pos:line="82" pos:column="5"/></name> <operator pos:line="82" pos:column="6">=<pos:position pos:line="82" pos:column="7"/></operator> <literal type="number" pos:line="82" pos:column="8">0<pos:position pos:line="82" pos:column="9"/></literal></expr>;<pos:position pos:line="82" pos:column="10"/></expr_stmt>

 <label><name pos:line="84" pos:column="2">out<pos:position pos:line="84" pos:column="5"/></name>:<pos:position pos:line="84" pos:column="6"/></label>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">FREE<pos:position pos:line="85" pos:column="7"/></name> <argument_list pos:line="85" pos:column="8">(<argument><expr><operator pos:line="85" pos:column="9">&amp;<pos:position pos:line="85" pos:column="14"/></operator><name><name pos:line="85" pos:column="10">mx<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">.<pos:position pos:line="85" pos:column="13"/></operator><name pos:line="85" pos:column="13">mbox<pos:position pos:line="85" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="19"/></expr_stmt>

  <return pos:line="87" pos:column="3">return <expr><ternary><condition><expr><name pos:line="87" pos:column="10">rc<pos:position pos:line="87" pos:column="12"/></name> <operator pos:line="87" pos:column="13">&lt;<pos:position pos:line="87" pos:column="17"/></operator> <literal type="number" pos:line="87" pos:column="15">0<pos:position pos:line="87" pos:column="16"/></literal></expr> ?<pos:position pos:line="87" pos:column="18"/></condition><then pos:line="87" pos:column="18"> <expr><operator pos:line="87" pos:column="19">-<pos:position pos:line="87" pos:column="20"/></operator><literal type="number" pos:line="87" pos:column="20">1<pos:position pos:line="87" pos:column="21"/></literal></expr> <pos:position pos:line="87" pos:column="22"/></then><else pos:line="87" pos:column="22">: <expr><name pos:line="87" pos:column="24">rc<pos:position pos:line="87" pos:column="26"/></name></expr></else></ternary></expr>;<pos:position pos:line="87" pos:column="27"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1174_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">print_indent<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">ql<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">STATE<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">s<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">add_suffix<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">wid<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">s<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">prefix<pos:position pos:line="6" pos:column="16"/></name></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17">
  <block pos:line="7" pos:column="3">{
    <comment type="block" pos:line="8" pos:column="5">/* use given prefix only for format=fixed replies to format=flowed,
     * for format=flowed replies to format=flowed, use '&gt;' indentation
     */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">option<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">OPTTEXTFLOWED<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="7">ql<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">++<pos:position pos:line="12" pos:column="11"/></operator></expr>;<pos:position pos:line="12" pos:column="12"/></expr_stmt></block></then>
    <else pos:line="13" pos:column="5">else
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">state_puts<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><name><name pos:line="15" pos:column="19">s<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">prefix<pos:position pos:line="15" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">s<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="16" pos:column="7">wid<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">mutt_strwidth<pos:position pos:line="16" pos:column="26"/></name> <argument_list pos:line="16" pos:column="27">(<argument><expr><name><name pos:line="16" pos:column="28">s<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">prefix<pos:position pos:line="16" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><expr><name pos:line="19" pos:column="8">i<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></init> <condition><expr><name pos:line="19" pos:column="15">i<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&lt;<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="19">ql<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></condition> <incr><expr><name pos:line="19" pos:column="23">i<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">++<pos:position pos:line="19" pos:column="26"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="27"/></control>
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">state_putc<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><literal type="char" pos:line="21" pos:column="17">'&gt;'<pos:position pos:line="21" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="22">s<pos:position pos:line="21" pos:column="23"/></name></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">space_quotes<pos:position pos:line="22" pos:column="21"/></name> <argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">s<pos:position pos:line="22" pos:column="24"/></name></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr> )<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="7">state_putc<pos:position pos:line="23" pos:column="17"/></name> <argument_list pos:line="23" pos:column="18">(<argument><expr><literal type="char" pos:line="23" pos:column="19">' '<pos:position pos:line="23" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="24">s<pos:position pos:line="23" pos:column="25"/></name></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt></block></then></if>
  }<pos:position pos:line="24" pos:column="4"/></block></for>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">add_suffix<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">state_putc<pos:position pos:line="26" pos:column="15"/></name> <argument_list pos:line="26" pos:column="16">(<argument><expr><literal type="char" pos:line="26" pos:column="17">' '<pos:position pos:line="26" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="22">s<pos:position pos:line="26" pos:column="23"/></name></expr></argument>)<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><call><name pos:line="28" pos:column="7">space_quotes<pos:position pos:line="28" pos:column="19"/></name> <argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">s<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="5">ql<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">*=<pos:position pos:line="29" pos:column="10"/></operator> <literal type="number" pos:line="29" pos:column="11">2<pos:position pos:line="29" pos:column="12"/></literal></expr>;<pos:position pos:line="29" pos:column="13"/></expr_stmt></block></then></if>

  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">ql<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">+<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">add_suffix<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">+<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">wid<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1765_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_spam_list<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">BUFFER<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buf<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">BUFFER<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">s<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">unsigned<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">long<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">data<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="73">BUFFER<pos:position pos:line="1" pos:column="79"/></name> <modifier pos:line="1" pos:column="80">*<pos:position pos:line="1" pos:column="81"/></modifier></type><name pos:line="1" pos:column="81">err<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">BUFFER<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">templ<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">mutt_buffer_init<pos:position pos:line="5" pos:column="19"/></name> <argument_list pos:line="5" pos:column="20">(<argument><expr><operator pos:line="5" pos:column="21">&amp;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="22">templ<pos:position pos:line="5" pos:column="27"/></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Insist on at least one parameter */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><call><name pos:line="8" pos:column="8">MoreArgs<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">s<pos:position pos:line="8" pos:column="18"/></name></expr></argument>)<pos:position pos:line="8" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
  <block pos:line="9" pos:column="3">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">MUTT_SPAM<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">strfcpy<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">err<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">data<pos:position pos:line="11" pos:column="24"/></name></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="26">_<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><literal type="string" pos:line="11" pos:column="28">"spam: no matching pattern"<pos:position pos:line="11" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="58">err<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">-&gt;<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="63">dsize<pos:position pos:line="11" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></expr_stmt></block></then>
    <else pos:line="12" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">strfcpy<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">err<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">data<pos:position pos:line="13" pos:column="24"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="26">_<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><literal type="string" pos:line="13" pos:column="28">"nospam: no matching pattern"<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="60">err<pos:position pos:line="13" pos:column="63"/></name><operator pos:line="13" pos:column="63">-&gt;<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="65">dsize<pos:position pos:line="13" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt></block></else></if>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="17" pos:column="3">/* Extract the first token, a regexp */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">mutt_extract_token<pos:position pos:line="18" pos:column="21"/></name> <argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">buf<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">s<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>

  <comment type="block" pos:line="20" pos:column="3">/* data should be either MUTT_SPAM or MUTT_NOSPAM. MUTT_SPAM is for spam commands. */</comment>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">data<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">==<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">MUTT_SPAM<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
  <block pos:line="22" pos:column="3">{
    <comment type="block" pos:line="23" pos:column="5">/* If there's a second parameter, it's a template for the spam tag. */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">MoreArgs<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">s<pos:position pos:line="24" pos:column="19"/></name></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21">
    <block pos:line="25" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">mutt_extract_token<pos:position pos:line="26" pos:column="25"/></name> <argument_list pos:line="26" pos:column="26">(<argument><expr><operator pos:line="26" pos:column="27">&amp;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="28">templ<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">s<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="38">0<pos:position pos:line="26" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>

      <comment type="block" pos:line="28" pos:column="7">/* Add to the spam list. */</comment>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><call><name pos:line="29" pos:column="11">add_to_replace_list<pos:position pos:line="29" pos:column="30"/></name> <argument_list pos:line="29" pos:column="31">(<argument><expr><operator pos:line="29" pos:column="32">&amp;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="33">SpamList<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="43">buf<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">-&gt;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="48">data<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="54">templ<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">.<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="60">data<pos:position pos:line="29" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="66">err<pos:position pos:line="29" pos:column="69"/></name></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call> <operator pos:line="29" pos:column="71">!=<pos:position pos:line="29" pos:column="73"/></operator> <literal type="number" pos:line="29" pos:column="74">0<pos:position pos:line="29" pos:column="75"/></literal></expr>)<pos:position pos:line="29" pos:column="76"/></condition><then pos:line="29" pos:column="76"> <block pos:line="29" pos:column="77">{
	  <expr_stmt><expr><call><name pos:line="30" pos:column="11">FREE<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><operator pos:line="30" pos:column="16">&amp;<pos:position pos:line="30" pos:column="21"/></operator><name><name pos:line="30" pos:column="17">templ<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">.<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">data<pos:position pos:line="30" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
          <return pos:line="31" pos:column="11">return <expr><operator pos:line="31" pos:column="18">-<pos:position pos:line="31" pos:column="19"/></operator><literal type="number" pos:line="31" pos:column="19">1<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></return>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">FREE<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><operator pos:line="33" pos:column="12">&amp;<pos:position pos:line="33" pos:column="17"/></operator><name><name pos:line="33" pos:column="13">templ<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">.<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">data<pos:position pos:line="33" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then>

    <comment type="block" pos:line="36" pos:column="5">/* If not, try to remove from the nospam list. */</comment>
    <else pos:line="37" pos:column="5">else
    <block pos:line="38" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">mutt_remove_from_rx_list<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><operator pos:line="39" pos:column="32">&amp;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="33">NoSpamList<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="45">buf<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">data<pos:position pos:line="39" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>

    <return pos:line="42" pos:column="5">return <expr><literal type="number" pos:line="42" pos:column="12">0<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then>

  <comment type="block" pos:line="45" pos:column="3">/* MUTT_NOSPAM is for nospam commands. */</comment>
  <elseif pos:line="46" pos:column="3">else <if pos:line="46" pos:column="8">if <condition pos:line="46" pos:column="11">(<expr><name pos:line="46" pos:column="12">data<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">==<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">MUTT_NOSPAM<pos:position pos:line="46" pos:column="31"/></name></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32">
  <block pos:line="47" pos:column="3">{
    <comment type="block" pos:line="48" pos:column="5">/* nospam only ever has one parameter. */</comment>

    <comment type="block" pos:line="50" pos:column="5">/* "*" is a special case. */</comment>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><call><name pos:line="51" pos:column="10">mutt_strcmp<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><name><name pos:line="51" pos:column="22">buf<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">data<pos:position pos:line="51" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="33">"*"<pos:position pos:line="51" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="38"/></condition><then pos:line="51" pos:column="38">
    <block pos:line="52" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">mutt_free_replace_list<pos:position pos:line="53" pos:column="29"/></name> <argument_list pos:line="53" pos:column="30">(<argument><expr><operator pos:line="53" pos:column="31">&amp;<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="32">SpamList<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">mutt_free_rx_list<pos:position pos:line="54" pos:column="24"/></name> <argument_list pos:line="54" pos:column="25">(<argument><expr><operator pos:line="54" pos:column="26">&amp;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="27">NoSpamList<pos:position pos:line="54" pos:column="37"/></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
      <return pos:line="55" pos:column="7">return <expr><literal type="number" pos:line="55" pos:column="14">0<pos:position pos:line="55" pos:column="15"/></literal></expr>;<pos:position pos:line="55" pos:column="16"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="58" pos:column="5">/* If it's on the spam list, just remove it. */</comment>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><call><name pos:line="59" pos:column="9">remove_from_replace_list<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><operator pos:line="59" pos:column="34">&amp;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="35">SpamList<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="45">buf<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">-&gt;<pos:position pos:line="59" pos:column="53"/></operator><name pos:line="59" pos:column="50">data<pos:position pos:line="59" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="55"/></argument_list></call> <operator pos:line="59" pos:column="56">!=<pos:position pos:line="59" pos:column="58"/></operator> <literal type="number" pos:line="59" pos:column="59">0<pos:position pos:line="59" pos:column="60"/></literal></expr>)<pos:position pos:line="59" pos:column="61"/></condition><then pos:line="59" pos:column="61">
      <block type="pseudo"><return pos:line="60" pos:column="7">return <expr><literal type="number" pos:line="60" pos:column="14">0<pos:position pos:line="60" pos:column="15"/></literal></expr>;<pos:position pos:line="60" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* Otherwise, add it to the nospam list. */</comment>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><call><name pos:line="63" pos:column="9">mutt_add_to_rx_list<pos:position pos:line="63" pos:column="28"/></name> <argument_list pos:line="63" pos:column="29">(<argument><expr><operator pos:line="63" pos:column="30">&amp;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="31">NoSpamList<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="43">buf<pos:position pos:line="63" pos:column="46"/></name><operator pos:line="63" pos:column="46">-&gt;<pos:position pos:line="63" pos:column="51"/></operator><name pos:line="63" pos:column="48">data<pos:position pos:line="63" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="54">REG_ICASE<pos:position pos:line="63" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="65">err<pos:position pos:line="63" pos:column="68"/></name></expr></argument>)<pos:position pos:line="63" pos:column="69"/></argument_list></call> <operator pos:line="63" pos:column="70">!=<pos:position pos:line="63" pos:column="72"/></operator> <literal type="number" pos:line="63" pos:column="73">0<pos:position pos:line="63" pos:column="74"/></literal></expr>)<pos:position pos:line="63" pos:column="75"/></condition><then pos:line="63" pos:column="75">
      <block type="pseudo"><return pos:line="64" pos:column="7">return <expr><operator pos:line="64" pos:column="14">-<pos:position pos:line="64" pos:column="15"/></operator><literal type="number" pos:line="64" pos:column="15">1<pos:position pos:line="64" pos:column="16"/></literal></expr>;<pos:position pos:line="64" pos:column="17"/></return></block></then></if>

    <return pos:line="66" pos:column="5">return <expr><literal type="number" pos:line="66" pos:column="12">0<pos:position pos:line="66" pos:column="13"/></literal></expr>;<pos:position pos:line="66" pos:column="14"/></return>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if></elseif></if>

  <comment type="block" pos:line="69" pos:column="3">/* This should not happen. */</comment>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">strfcpy<pos:position pos:line="70" pos:column="10"/></name><argument_list pos:line="70" pos:column="10">(<argument><expr><name><name pos:line="70" pos:column="11">err<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">-&gt;<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="16">data<pos:position pos:line="70" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="22">"This is no good at all."<pos:position pos:line="70" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="49">err<pos:position pos:line="70" pos:column="52"/></name><operator pos:line="70" pos:column="52">-&gt;<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="54">dsize<pos:position pos:line="70" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="61"/></expr_stmt>
  <return pos:line="71" pos:column="3">return <expr><operator pos:line="71" pos:column="10">-<pos:position pos:line="71" pos:column="11"/></operator><literal type="number" pos:line="71" pos:column="11">1<pos:position pos:line="71" pos:column="12"/></literal></expr>;<pos:position pos:line="71" pos:column="13"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

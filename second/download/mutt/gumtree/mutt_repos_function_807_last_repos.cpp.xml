<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_807_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_header_padding<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">void<pos:position pos:line="1" pos:column="38"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">short<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">done<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">done<pos:position pos:line="6" pos:column="11"/></name></expr>)<pos:position pos:line="6" pos:column="12"/></condition><then pos:line="6" pos:column="12">
    <block type="pseudo"><return pos:line="7" pos:column="5">return;<pos:position pos:line="7" pos:column="12"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="8" pos:column="3">done<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <literal type="number" pos:line="8" pos:column="10">1<pos:position pos:line="8" pos:column="11"/></literal></expr>;<pos:position pos:line="8" pos:column="12"/></expr_stmt>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><expr><name pos:line="10" pos:column="8">i<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></init> <condition><expr><name pos:line="10" pos:column="15">i<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&lt;=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="20">HDR_CRYPT<pos:position pos:line="10" pos:column="29"/></name></expr>;<pos:position pos:line="10" pos:column="30"/></condition> <incr><expr><name pos:line="10" pos:column="31">i<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">++<pos:position pos:line="10" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="35"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">calc_header_width_padding<pos:position pos:line="11" pos:column="30"/></name> <argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">i<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="35">_<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name><name pos:line="11" pos:column="37">Prompts<pos:position pos:line="11" pos:column="44"/></name><index pos:line="11" pos:column="44">[<expr><name pos:line="11" pos:column="45">i<pos:position pos:line="11" pos:column="46"/></name></expr>]<pos:position pos:line="11" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="50">1<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt></block></for>

  <comment type="block" pos:line="13" pos:column="3">/* Don't include "Sign as: " in the MaxHeaderWidth calculation.  It
   * doesn't show up by default, and so can make the indentation of
   * the other fields look funny. */</comment>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">calc_header_width_padding<pos:position pos:line="16" pos:column="28"/></name> <argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">HDR_CRYPTINFO<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="45">_<pos:position pos:line="16" pos:column="46"/></name><argument_list pos:line="16" pos:column="46">(<argument><expr><name><name pos:line="16" pos:column="47">Prompts<pos:position pos:line="16" pos:column="54"/></name><index pos:line="16" pos:column="54">[<expr><name pos:line="16" pos:column="55">HDR_CRYPTINFO<pos:position pos:line="16" pos:column="68"/></name></expr>]<pos:position pos:line="16" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="72">0<pos:position pos:line="16" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><expr><name pos:line="18" pos:column="8">i<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></init> <condition><expr><name pos:line="18" pos:column="15">i<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&lt;=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="20">HDR_CRYPTINFO<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></condition> <incr><expr><name pos:line="18" pos:column="35">i<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">++<pos:position pos:line="18" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="39"/></control>
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">HeaderPadding<pos:position pos:line="20" pos:column="18"/></name><index pos:line="20" pos:column="18">[<expr><name pos:line="20" pos:column="19">i<pos:position pos:line="20" pos:column="20"/></name></expr>]<pos:position pos:line="20" pos:column="21"/></index></name> <operator pos:line="20" pos:column="22">+=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">MaxHeaderWidth<pos:position pos:line="20" pos:column="39"/></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">HeaderPadding<pos:position pos:line="21" pos:column="22"/></name><index pos:line="21" pos:column="22">[<expr><name pos:line="21" pos:column="23">i<pos:position pos:line="21" pos:column="24"/></name></expr>]<pos:position pos:line="21" pos:column="25"/></index></name> <operator pos:line="21" pos:column="26">&lt;<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="28">0<pos:position pos:line="21" pos:column="29"/></literal></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="7">HeaderPadding<pos:position pos:line="22" pos:column="20"/></name><index pos:line="22" pos:column="20">[<expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name></expr>]<pos:position pos:line="22" pos:column="23"/></index></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt></block></then></if>
  }<pos:position pos:line="23" pos:column="4"/></block></for>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_507_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_check_encoding<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">c<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">ascii_strncasecmp<pos:position pos:line="3" pos:column="24"/></name> <argument_list pos:line="3" pos:column="25">(<argument><expr><literal type="string" pos:line="3" pos:column="26">"7bit"<pos:position pos:line="3" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="34">c<pos:position pos:line="3" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="37">sizeof <argument_list pos:line="3" pos:column="44">(<argument><expr><literal type="string" pos:line="3" pos:column="45">"7bit"<pos:position pos:line="3" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></sizeof><operator pos:line="3" pos:column="52">-<pos:position pos:line="3" pos:column="53"/></operator><literal type="number" pos:line="3" pos:column="53">1<pos:position pos:line="3" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="55"/></argument_list></call> <operator pos:line="3" pos:column="56">==<pos:position pos:line="3" pos:column="58"/></operator> <literal type="number" pos:line="3" pos:column="59">0<pos:position pos:line="3" pos:column="60"/></literal></expr>)<pos:position pos:line="3" pos:column="61"/></condition><then pos:line="3" pos:column="61">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">ENC7BIT<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">)<pos:position pos:line="4" pos:column="21"/></operator></expr>;<pos:position pos:line="4" pos:column="22"/></return></block></then>
  <elseif pos:line="5" pos:column="3">else <if pos:line="5" pos:column="8">if <condition pos:line="5" pos:column="11">(<expr><call><name pos:line="5" pos:column="12">ascii_strncasecmp<pos:position pos:line="5" pos:column="29"/></name> <argument_list pos:line="5" pos:column="30">(<argument><expr><literal type="string" pos:line="5" pos:column="31">"8bit"<pos:position pos:line="5" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="39">c<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="42">sizeof <argument_list pos:line="5" pos:column="49">(<argument><expr><literal type="string" pos:line="5" pos:column="50">"8bit"<pos:position pos:line="5" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></sizeof><operator pos:line="5" pos:column="57">-<pos:position pos:line="5" pos:column="58"/></operator><literal type="number" pos:line="5" pos:column="58">1<pos:position pos:line="5" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call> <operator pos:line="5" pos:column="61">==<pos:position pos:line="5" pos:column="63"/></operator> <literal type="number" pos:line="5" pos:column="64">0<pos:position pos:line="5" pos:column="65"/></literal></expr>)<pos:position pos:line="5" pos:column="66"/></condition><then pos:line="5" pos:column="66">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">ENC8BIT<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">)<pos:position pos:line="6" pos:column="21"/></operator></expr>;<pos:position pos:line="6" pos:column="22"/></return></block></then></if></elseif>
  <elseif pos:line="7" pos:column="3">else <if pos:line="7" pos:column="8">if <condition pos:line="7" pos:column="11">(<expr><call><name pos:line="7" pos:column="12">ascii_strncasecmp<pos:position pos:line="7" pos:column="29"/></name> <argument_list pos:line="7" pos:column="30">(<argument><expr><literal type="string" pos:line="7" pos:column="31">"binary"<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">c<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="44">sizeof <argument_list pos:line="7" pos:column="51">(<argument><expr><literal type="string" pos:line="7" pos:column="52">"binary"<pos:position pos:line="7" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></sizeof><operator pos:line="7" pos:column="61">-<pos:position pos:line="7" pos:column="62"/></operator><literal type="number" pos:line="7" pos:column="62">1<pos:position pos:line="7" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call> <operator pos:line="7" pos:column="65">==<pos:position pos:line="7" pos:column="67"/></operator> <literal type="number" pos:line="7" pos:column="68">0<pos:position pos:line="7" pos:column="69"/></literal></expr>)<pos:position pos:line="7" pos:column="70"/></condition><then pos:line="7" pos:column="70">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">ENCBINARY<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator></expr>;<pos:position pos:line="8" pos:column="24"/></return></block></then></if></elseif>
  <elseif pos:line="9" pos:column="3">else <if pos:line="9" pos:column="8">if <condition pos:line="9" pos:column="11">(<expr><call><name pos:line="9" pos:column="12">ascii_strncasecmp<pos:position pos:line="9" pos:column="29"/></name> <argument_list pos:line="9" pos:column="30">(<argument><expr><literal type="string" pos:line="9" pos:column="31">"quoted-printable"<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">c<pos:position pos:line="9" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="54">sizeof <argument_list pos:line="9" pos:column="61">(<argument><expr><literal type="string" pos:line="9" pos:column="62">"quoted-printable"<pos:position pos:line="9" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="81"/></argument_list></sizeof><operator pos:line="9" pos:column="81">-<pos:position pos:line="9" pos:column="82"/></operator><literal type="number" pos:line="9" pos:column="82">1<pos:position pos:line="9" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="84"/></argument_list></call> <operator pos:line="9" pos:column="85">==<pos:position pos:line="9" pos:column="87"/></operator> <literal type="number" pos:line="9" pos:column="88">0<pos:position pos:line="9" pos:column="89"/></literal></expr>)<pos:position pos:line="9" pos:column="90"/></condition><then pos:line="9" pos:column="90">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">ENCQUOTEDPRINTABLE<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator></expr>;<pos:position pos:line="10" pos:column="33"/></return></block></then></if></elseif>
  <elseif pos:line="11" pos:column="3">else <if pos:line="11" pos:column="8">if <condition pos:line="11" pos:column="11">(<expr><call><name pos:line="11" pos:column="12">ascii_strncasecmp<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><literal type="string" pos:line="11" pos:column="31">"base64"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="41">c<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="44">sizeof<argument_list pos:line="11" pos:column="50">(<argument><expr><literal type="string" pos:line="11" pos:column="51">"base64"<pos:position pos:line="11" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></sizeof><operator pos:line="11" pos:column="60">-<pos:position pos:line="11" pos:column="61"/></operator><literal type="number" pos:line="11" pos:column="61">1<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call> <operator pos:line="11" pos:column="64">==<pos:position pos:line="11" pos:column="66"/></operator> <literal type="number" pos:line="11" pos:column="67">0<pos:position pos:line="11" pos:column="68"/></literal></expr>)<pos:position pos:line="11" pos:column="69"/></condition><then pos:line="11" pos:column="69">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">ENCBASE64<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator></expr>;<pos:position pos:line="12" pos:column="24"/></return></block></then></if></elseif>
  <elseif pos:line="13" pos:column="3">else <if pos:line="13" pos:column="8">if <condition pos:line="13" pos:column="11">(<expr><call><name pos:line="13" pos:column="12">ascii_strncasecmp<pos:position pos:line="13" pos:column="29"/></name> <argument_list pos:line="13" pos:column="30">(<argument><expr><literal type="string" pos:line="13" pos:column="31">"x-uuencode"<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">c<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="48">sizeof<argument_list pos:line="13" pos:column="54">(<argument><expr><literal type="string" pos:line="13" pos:column="55">"x-uuencode"<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></sizeof><operator pos:line="13" pos:column="68">-<pos:position pos:line="13" pos:column="69"/></operator><literal type="number" pos:line="13" pos:column="69">1<pos:position pos:line="13" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call> <operator pos:line="13" pos:column="72">==<pos:position pos:line="13" pos:column="74"/></operator> <literal type="number" pos:line="13" pos:column="75">0<pos:position pos:line="13" pos:column="76"/></literal></expr>)<pos:position pos:line="13" pos:column="77"/></condition><then pos:line="13" pos:column="77">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">ENCUUENCODED<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">)<pos:position pos:line="14" pos:column="26"/></operator></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if></elseif>
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">SUN_ATTACHMENT<pos:position pos:line="15" pos:column="22"/></name></cpp:ifdef>
  <elseif pos:line="16" pos:column="3">else <if pos:line="16" pos:column="8">if <condition pos:line="16" pos:column="11">(<expr><call><name pos:line="16" pos:column="12">ascii_strncasecmp<pos:position pos:line="16" pos:column="29"/></name> <argument_list pos:line="16" pos:column="30">(<argument><expr><literal type="string" pos:line="16" pos:column="31">"uuencode"<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">c<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="46">sizeof<argument_list pos:line="16" pos:column="52">(<argument><expr><literal type="string" pos:line="16" pos:column="53">"uuencode"<pos:position pos:line="16" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></sizeof><operator pos:line="16" pos:column="64">-<pos:position pos:line="16" pos:column="65"/></operator><literal type="number" pos:line="16" pos:column="65">1<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call> <operator pos:line="16" pos:column="68">==<pos:position pos:line="16" pos:column="70"/></operator> <literal type="number" pos:line="16" pos:column="71">0<pos:position pos:line="16" pos:column="72"/></literal></expr>)<pos:position pos:line="16" pos:column="73"/></condition><then pos:line="16" pos:column="73">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">ENCUUENCODED<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">)<pos:position pos:line="17" pos:column="26"/></operator></expr>;<pos:position pos:line="17" pos:column="27"/></return></block></then></if></elseif>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
  <else pos:line="19" pos:column="3">else
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">ENCOTHER<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">)<pos:position pos:line="20" pos:column="22"/></operator></expr>;<pos:position pos:line="20" pos:column="23"/></return></block></else></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_872_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">mutt_copy_hdr<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">FILE<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">in<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">FILE<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">out<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">LOFF_T<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">off_start<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">LOFF_T<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">off_end<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">int<pos:position pos:line="2" pos:column="74"/></name></type> <name pos:line="2" pos:column="75">flags<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
	       <parameter><decl><type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">prefix<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="35"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">from<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">this_is_from<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ignore<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">buf<pos:position pos:line="8" pos:column="11"/></name><index pos:line="8" pos:column="11">[<expr><name pos:line="8" pos:column="12">LONG_STRING<pos:position pos:line="8" pos:column="23"/></name></expr>]<pos:position pos:line="8" pos:column="24"/></index></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt> <comment type="block" pos:line="8" pos:column="26">/* should be long enough to get most fields in one pass */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">nl<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">LIST<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">t<pos:position pos:line="10" pos:column="10"/></name></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier><modifier pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></modifier></type><name pos:line="11" pos:column="10">headers<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">hdr_count<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">x<pos:position pos:line="13" pos:column="8"/></name></decl>;<pos:position pos:line="13" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">this_one<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><name pos:line="14" pos:column="20">NULL<pos:position pos:line="14" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">size_t<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">this_one_len<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">int<pos:position pos:line="16" pos:column="6"/></name></type> <name pos:line="16" pos:column="7">error<pos:position pos:line="16" pos:column="12"/></name></decl>;<pos:position pos:line="16" pos:column="13"/></decl_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">ftello<pos:position pos:line="18" pos:column="13"/></name> <argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">in<pos:position pos:line="18" pos:column="17"/></name></expr></argument>)<pos:position pos:line="18" pos:column="18"/></argument_list></call> <operator pos:line="18" pos:column="19">!=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">off_start<pos:position pos:line="18" pos:column="31"/></name></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">fseeko<pos:position pos:line="19" pos:column="11"/></name> <argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">in<pos:position pos:line="19" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="17">off_start<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="21" pos:column="3">buf<pos:position pos:line="21" pos:column="6"/></name><index pos:line="21" pos:column="6">[<expr><literal type="number" pos:line="21" pos:column="7">0<pos:position pos:line="21" pos:column="8"/></literal></expr>]<pos:position pos:line="21" pos:column="9"/></index></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <literal type="char" pos:line="21" pos:column="12">'\n'<pos:position pos:line="21" pos:column="16"/></literal></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">buf<pos:position pos:line="22" pos:column="6"/></name><index pos:line="22" pos:column="6">[<expr><literal type="number" pos:line="22" pos:column="7">1<pos:position pos:line="22" pos:column="8"/></literal></expr>]<pos:position pos:line="22" pos:column="9"/></index></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <literal type="number" pos:line="22" pos:column="12">0<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">(<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">flags<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">&amp;<pos:position pos:line="24" pos:column="19"/></operator> <operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">CH_REORDER<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">|<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">CH_WEED<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">|<pos:position pos:line="24" pos:column="39"/></operator> <name pos:line="24" pos:column="40">CH_MIME<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">|<pos:position pos:line="24" pos:column="49"/></operator> <name pos:line="24" pos:column="50">CH_DECODE<pos:position pos:line="24" pos:column="59"/></name> <operator pos:line="24" pos:column="60">|<pos:position pos:line="24" pos:column="61"/></operator> <name pos:line="24" pos:column="62">CH_PREFIX<pos:position pos:line="24" pos:column="71"/></name> <operator pos:line="24" pos:column="72">|<pos:position pos:line="24" pos:column="73"/></operator> <name pos:line="24" pos:column="74">CH_WEED_DELIVERED<pos:position pos:line="24" pos:column="91"/></name><operator pos:line="24" pos:column="91">)<pos:position pos:line="24" pos:column="92"/></operator><operator pos:line="24" pos:column="92">)<pos:position pos:line="24" pos:column="93"/></operator> <operator pos:line="24" pos:column="94">==<pos:position pos:line="24" pos:column="96"/></operator> <literal type="number" pos:line="24" pos:column="97">0<pos:position pos:line="24" pos:column="98"/></literal></expr>)<pos:position pos:line="24" pos:column="99"/></condition><then pos:line="24" pos:column="99">
  <block pos:line="25" pos:column="3">{
    <comment type="block" pos:line="26" pos:column="5">/* Without these flags to complicate things
     * we can do a more efficient line to line copying
     */</comment>
    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><call><name pos:line="29" pos:column="12">ftello<pos:position pos:line="29" pos:column="18"/></name> <argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">in<pos:position pos:line="29" pos:column="22"/></name></expr></argument>)<pos:position pos:line="29" pos:column="23"/></argument_list></call> <operator pos:line="29" pos:column="24">&lt;<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="26">off_end<pos:position pos:line="29" pos:column="33"/></name></expr>)<pos:position pos:line="29" pos:column="34"/></condition>
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><name pos:line="31" pos:column="7">nl<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">strchr<pos:position pos:line="31" pos:column="18"/></name> <argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">buf<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="31" pos:column="25">'\n'<pos:position pos:line="31" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>

      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><operator pos:line="33" pos:column="11">(<pos:position pos:line="33" pos:column="12"/></operator><call><name pos:line="33" pos:column="12">fgets<pos:position pos:line="33" pos:column="17"/></name> <argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">buf<pos:position pos:line="33" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="24">sizeof <argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">buf<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">in<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call><operator pos:line="33" pos:column="41">)<pos:position pos:line="33" pos:column="42"/></operator> <operator pos:line="33" pos:column="43">==<pos:position pos:line="33" pos:column="45"/></operator> <name pos:line="33" pos:column="46">NULL<pos:position pos:line="33" pos:column="50"/></name></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51">
	<block type="pseudo"><break pos:line="34" pos:column="9">break;<pos:position pos:line="34" pos:column="15"/></break></block></then></if>

      <comment type="block" pos:line="36" pos:column="7">/* Is it the beginning of a header? */</comment>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name pos:line="37" pos:column="11">nl<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">&amp;&amp;<pos:position pos:line="37" pos:column="24"/></operator> <name><name pos:line="37" pos:column="17">buf<pos:position pos:line="37" pos:column="20"/></name><index pos:line="37" pos:column="20">[<expr><literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr>]<pos:position pos:line="37" pos:column="23"/></index></name> <operator pos:line="37" pos:column="24">!=<pos:position pos:line="37" pos:column="26"/></operator> <literal type="char" pos:line="37" pos:column="27">' '<pos:position pos:line="37" pos:column="30"/></literal> <operator pos:line="37" pos:column="31">&amp;&amp;<pos:position pos:line="37" pos:column="41"/></operator> <name><name pos:line="37" pos:column="34">buf<pos:position pos:line="37" pos:column="37"/></name><index pos:line="37" pos:column="37">[<expr><literal type="number" pos:line="37" pos:column="38">0<pos:position pos:line="37" pos:column="39"/></literal></expr>]<pos:position pos:line="37" pos:column="40"/></index></name> <operator pos:line="37" pos:column="41">!=<pos:position pos:line="37" pos:column="43"/></operator> <literal type="char" pos:line="37" pos:column="44">'\t'<pos:position pos:line="37" pos:column="48"/></literal></expr>)<pos:position pos:line="37" pos:column="49"/></condition><then pos:line="37" pos:column="49">
      <block pos:line="38" pos:column="7">{
	<expr_stmt><expr><name pos:line="39" pos:column="9">ignore<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">from<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">&amp;&amp;<pos:position pos:line="40" pos:column="29"/></operator> <call><name pos:line="40" pos:column="22">mutt_strncmp<pos:position pos:line="40" pos:column="34"/></name> <argument_list pos:line="40" pos:column="35">(<argument><expr><literal type="string" pos:line="40" pos:column="36">"From "<pos:position pos:line="40" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">buf<pos:position pos:line="40" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="50">5<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call> <operator pos:line="40" pos:column="53">==<pos:position pos:line="40" pos:column="55"/></operator> <literal type="number" pos:line="40" pos:column="56">0<pos:position pos:line="40" pos:column="57"/></literal></expr>)<pos:position pos:line="40" pos:column="58"/></condition><then pos:line="40" pos:column="58">
	<block pos:line="41" pos:column="9">{
	  <if pos:line="42" pos:column="11">if <condition pos:line="42" pos:column="14">(<expr><operator pos:line="42" pos:column="15">(<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="16">flags<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">&amp;<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="24">CH_FROM<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">)<pos:position pos:line="42" pos:column="32"/></operator> <operator pos:line="42" pos:column="33">==<pos:position pos:line="42" pos:column="35"/></operator> <literal type="number" pos:line="42" pos:column="36">0<pos:position pos:line="42" pos:column="37"/></literal></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38">
	    <block type="pseudo"><continue pos:line="43" pos:column="13">continue;<pos:position pos:line="43" pos:column="22"/></continue></block></then></if>
	  <expr_stmt><expr><name pos:line="44" pos:column="11">from<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">1<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then>
	<elseif pos:line="46" pos:column="9">else <if pos:line="46" pos:column="14">if <condition pos:line="46" pos:column="17">(<expr><name pos:line="46" pos:column="18">flags<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">&amp;<pos:position pos:line="46" pos:column="29"/></operator> <operator pos:line="46" pos:column="26">(<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">CH_NOQFROM<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">)<pos:position pos:line="46" pos:column="38"/></operator> <operator pos:line="46" pos:column="39">&amp;&amp;<pos:position pos:line="46" pos:column="49"/></operator>
			<call><name pos:line="47" pos:column="25">ascii_strncasecmp<pos:position pos:line="47" pos:column="42"/></name> <argument_list pos:line="47" pos:column="43">(<argument><expr><literal type="string" pos:line="47" pos:column="44">"&gt;From "<pos:position pos:line="47" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="54">buf<pos:position pos:line="47" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="59">6<pos:position pos:line="47" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call> <operator pos:line="47" pos:column="62">==<pos:position pos:line="47" pos:column="64"/></operator> <literal type="number" pos:line="47" pos:column="65">0<pos:position pos:line="47" pos:column="66"/></literal></expr>)<pos:position pos:line="47" pos:column="67"/></condition><then pos:line="47" pos:column="67">
		<block type="pseudo"><continue pos:line="48" pos:column="17">continue;<pos:position pos:line="48" pos:column="26"/></continue></block></then></if></elseif>

	<elseif pos:line="50" pos:column="9">else <if pos:line="50" pos:column="14">if <condition pos:line="50" pos:column="17">(<expr><name><name pos:line="50" pos:column="18">buf<pos:position pos:line="50" pos:column="21"/></name><index pos:line="50" pos:column="21">[<expr><literal type="number" pos:line="50" pos:column="22">0<pos:position pos:line="50" pos:column="23"/></literal></expr>]<pos:position pos:line="50" pos:column="24"/></index></name> <operator pos:line="50" pos:column="25">==<pos:position pos:line="50" pos:column="27"/></operator> <literal type="char" pos:line="50" pos:column="28">'\n'<pos:position pos:line="50" pos:column="32"/></literal> <operator pos:line="50" pos:column="33">||<pos:position pos:line="50" pos:column="35"/></operator> <operator pos:line="50" pos:column="36">(<pos:position pos:line="50" pos:column="37"/></operator><name><name pos:line="50" pos:column="37">buf<pos:position pos:line="50" pos:column="40"/></name><index pos:line="50" pos:column="40">[<expr><literal type="number" pos:line="50" pos:column="41">0<pos:position pos:line="50" pos:column="42"/></literal></expr>]<pos:position pos:line="50" pos:column="43"/></index></name> <operator pos:line="50" pos:column="44">==<pos:position pos:line="50" pos:column="46"/></operator> <literal type="char" pos:line="50" pos:column="47">'\r'<pos:position pos:line="50" pos:column="51"/></literal> <operator pos:line="50" pos:column="52">&amp;&amp;<pos:position pos:line="50" pos:column="62"/></operator> <name><name pos:line="50" pos:column="55">buf<pos:position pos:line="50" pos:column="58"/></name><index pos:line="50" pos:column="58">[<expr><literal type="number" pos:line="50" pos:column="59">1<pos:position pos:line="50" pos:column="60"/></literal></expr>]<pos:position pos:line="50" pos:column="61"/></index></name> <operator pos:line="50" pos:column="62">==<pos:position pos:line="50" pos:column="64"/></operator> <literal type="char" pos:line="50" pos:column="65">'\n'<pos:position pos:line="50" pos:column="69"/></literal><operator pos:line="50" pos:column="69">)<pos:position pos:line="50" pos:column="70"/></operator></expr>)<pos:position pos:line="50" pos:column="71"/></condition><then pos:line="50" pos:column="71">
	  <block type="pseudo"><break pos:line="51" pos:column="11">break;<pos:position pos:line="51" pos:column="17"/></break></block></then></if></elseif></if> <comment type="block" pos:line="51" pos:column="18">/* end of header */</comment>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">(<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">flags<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">&amp;<pos:position pos:line="53" pos:column="25"/></operator> <operator pos:line="53" pos:column="22">(<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">CH_UPDATE<pos:position pos:line="53" pos:column="32"/></name> <operator pos:line="53" pos:column="33">|<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="35">CH_XMIT<pos:position pos:line="53" pos:column="42"/></name> <operator pos:line="53" pos:column="43">|<pos:position pos:line="53" pos:column="44"/></operator> <name pos:line="53" pos:column="45">CH_NOSTATUS<pos:position pos:line="53" pos:column="56"/></name><operator pos:line="53" pos:column="56">)<pos:position pos:line="53" pos:column="57"/></operator><operator pos:line="53" pos:column="57">)<pos:position pos:line="53" pos:column="58"/></operator> <operator pos:line="53" pos:column="59">&amp;&amp;<pos:position pos:line="53" pos:column="69"/></operator>
	    <operator pos:line="54" pos:column="13">(<pos:position pos:line="54" pos:column="14"/></operator><call><name pos:line="54" pos:column="14">ascii_strncasecmp<pos:position pos:line="54" pos:column="31"/></name> <argument_list pos:line="54" pos:column="32">(<argument><expr><literal type="string" pos:line="54" pos:column="33">"Status:"<pos:position pos:line="54" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">buf<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="49">7<pos:position pos:line="54" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call> <operator pos:line="54" pos:column="52">==<pos:position pos:line="54" pos:column="54"/></operator> <literal type="number" pos:line="54" pos:column="55">0<pos:position pos:line="54" pos:column="56"/></literal> <operator pos:line="54" pos:column="57">||<pos:position pos:line="54" pos:column="59"/></operator>
	     <call><name pos:line="55" pos:column="14">ascii_strncasecmp<pos:position pos:line="55" pos:column="31"/></name> <argument_list pos:line="55" pos:column="32">(<argument><expr><literal type="string" pos:line="55" pos:column="33">"X-Status:"<pos:position pos:line="55" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="46">buf<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="51">9<pos:position pos:line="55" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call> <operator pos:line="55" pos:column="54">==<pos:position pos:line="55" pos:column="56"/></operator> <literal type="number" pos:line="55" pos:column="57">0<pos:position pos:line="55" pos:column="58"/></literal><operator pos:line="55" pos:column="58">)<pos:position pos:line="55" pos:column="59"/></operator></expr>)<pos:position pos:line="55" pos:column="60"/></condition><then pos:line="55" pos:column="60">
	  <block type="pseudo"><continue pos:line="56" pos:column="11">continue;<pos:position pos:line="56" pos:column="20"/></continue></block></then></if>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">flags<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">&amp;<pos:position pos:line="57" pos:column="25"/></operator> <operator pos:line="57" pos:column="22">(<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">CH_UPDATE_LEN<pos:position pos:line="57" pos:column="36"/></name> <operator pos:line="57" pos:column="37">|<pos:position pos:line="57" pos:column="38"/></operator> <name pos:line="57" pos:column="39">CH_XMIT<pos:position pos:line="57" pos:column="46"/></name> <operator pos:line="57" pos:column="47">|<pos:position pos:line="57" pos:column="48"/></operator> <name pos:line="57" pos:column="49">CH_NOLEN<pos:position pos:line="57" pos:column="57"/></name><operator pos:line="57" pos:column="57">)<pos:position pos:line="57" pos:column="58"/></operator><operator pos:line="57" pos:column="58">)<pos:position pos:line="57" pos:column="59"/></operator> <operator pos:line="57" pos:column="60">&amp;&amp;<pos:position pos:line="57" pos:column="70"/></operator>
	    <operator pos:line="58" pos:column="13">(<pos:position pos:line="58" pos:column="14"/></operator><call><name pos:line="58" pos:column="14">ascii_strncasecmp<pos:position pos:line="58" pos:column="31"/></name> <argument_list pos:line="58" pos:column="32">(<argument><expr><literal type="string" pos:line="58" pos:column="33">"Content-Length:"<pos:position pos:line="58" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="52">buf<pos:position pos:line="58" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="57">15<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="60"/></argument_list></call> <operator pos:line="58" pos:column="61">==<pos:position pos:line="58" pos:column="63"/></operator> <literal type="number" pos:line="58" pos:column="64">0<pos:position pos:line="58" pos:column="65"/></literal> <operator pos:line="58" pos:column="66">||<pos:position pos:line="58" pos:column="68"/></operator>
	     <call><name pos:line="59" pos:column="14">ascii_strncasecmp<pos:position pos:line="59" pos:column="31"/></name> <argument_list pos:line="59" pos:column="32">(<argument><expr><literal type="string" pos:line="59" pos:column="33">"Lines:"<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="43">buf<pos:position pos:line="59" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="48">6<pos:position pos:line="59" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="50"/></argument_list></call> <operator pos:line="59" pos:column="51">==<pos:position pos:line="59" pos:column="53"/></operator> <literal type="number" pos:line="59" pos:column="54">0<pos:position pos:line="59" pos:column="55"/></literal><operator pos:line="59" pos:column="55">)<pos:position pos:line="59" pos:column="56"/></operator></expr>)<pos:position pos:line="59" pos:column="57"/></condition><then pos:line="59" pos:column="57">
	  <block type="pseudo"><continue pos:line="60" pos:column="11">continue;<pos:position pos:line="60" pos:column="20"/></continue></block></then></if>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">(<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">flags<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">&amp;<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="22">CH_UPDATE_REFS<pos:position pos:line="61" pos:column="36"/></name><operator pos:line="61" pos:column="36">)<pos:position pos:line="61" pos:column="37"/></operator> <operator pos:line="61" pos:column="38">&amp;&amp;<pos:position pos:line="61" pos:column="48"/></operator>
	    <call><name pos:line="62" pos:column="13">ascii_strncasecmp<pos:position pos:line="62" pos:column="30"/></name> <argument_list pos:line="62" pos:column="31">(<argument><expr><literal type="string" pos:line="62" pos:column="32">"References:"<pos:position pos:line="62" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="47">buf<pos:position pos:line="62" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="52">11<pos:position pos:line="62" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call> <operator pos:line="62" pos:column="56">==<pos:position pos:line="62" pos:column="58"/></operator> <literal type="number" pos:line="62" pos:column="59">0<pos:position pos:line="62" pos:column="60"/></literal></expr>)<pos:position pos:line="62" pos:column="61"/></condition><then pos:line="62" pos:column="61">
	  <block type="pseudo"><continue pos:line="63" pos:column="11">continue;<pos:position pos:line="63" pos:column="20"/></continue></block></then></if>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">(<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">flags<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">&amp;<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="22">CH_UPDATE_IRT<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">)<pos:position pos:line="64" pos:column="36"/></operator> <operator pos:line="64" pos:column="37">&amp;&amp;<pos:position pos:line="64" pos:column="47"/></operator>
	    <call><name pos:line="65" pos:column="13">ascii_strncasecmp<pos:position pos:line="65" pos:column="30"/></name> <argument_list pos:line="65" pos:column="31">(<argument><expr><literal type="string" pos:line="65" pos:column="32">"In-Reply-To:"<pos:position pos:line="65" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="48">buf<pos:position pos:line="65" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="53">12<pos:position pos:line="65" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call> <operator pos:line="65" pos:column="57">==<pos:position pos:line="65" pos:column="59"/></operator> <literal type="number" pos:line="65" pos:column="60">0<pos:position pos:line="65" pos:column="61"/></literal></expr>)<pos:position pos:line="65" pos:column="62"/></condition><then pos:line="65" pos:column="62">
	  <block type="pseudo"><continue pos:line="66" pos:column="11">continue;<pos:position pos:line="66" pos:column="20"/></continue></block></then></if>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">flags<pos:position pos:line="67" pos:column="18"/></name> <operator pos:line="67" pos:column="19">&amp;<pos:position pos:line="67" pos:column="24"/></operator> <name pos:line="67" pos:column="21">CH_UPDATE_LABEL<pos:position pos:line="67" pos:column="36"/></name> <operator pos:line="67" pos:column="37">&amp;&amp;<pos:position pos:line="67" pos:column="47"/></operator>
            <call><name pos:line="68" pos:column="13">ascii_strncasecmp<pos:position pos:line="68" pos:column="30"/></name> <argument_list pos:line="68" pos:column="31">(<argument><expr><literal type="string" pos:line="68" pos:column="32">"X-Label:"<pos:position pos:line="68" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="44">buf<pos:position pos:line="68" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="49">8<pos:position pos:line="68" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="51"/></argument_list></call> <operator pos:line="68" pos:column="52">==<pos:position pos:line="68" pos:column="54"/></operator> <literal type="number" pos:line="68" pos:column="55">0<pos:position pos:line="68" pos:column="56"/></literal></expr>)<pos:position pos:line="68" pos:column="57"/></condition><then pos:line="68" pos:column="57">
          <block type="pseudo"><continue pos:line="69" pos:column="11">continue;<pos:position pos:line="69" pos:column="20"/></continue></block></then></if>

	<expr_stmt><expr><name pos:line="71" pos:column="9">ignore<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <literal type="number" pos:line="71" pos:column="18">0<pos:position pos:line="71" pos:column="19"/></literal></expr>;<pos:position pos:line="71" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="72" pos:column="8"/></block></then></if>

      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><operator pos:line="74" pos:column="11">!<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="12">ignore<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">&amp;&amp;<pos:position pos:line="74" pos:column="29"/></operator> <call><name pos:line="74" pos:column="22">fputs<pos:position pos:line="74" pos:column="27"/></name> <argument_list pos:line="74" pos:column="28">(<argument><expr><name pos:line="74" pos:column="29">buf<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="34">out<pos:position pos:line="74" pos:column="37"/></name></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call> <operator pos:line="74" pos:column="39">==<pos:position pos:line="74" pos:column="41"/></operator> <name pos:line="74" pos:column="42">EOF<pos:position pos:line="74" pos:column="45"/></name></expr>)<pos:position pos:line="74" pos:column="46"/></condition><then pos:line="74" pos:column="46">
	<block type="pseudo"><return pos:line="75" pos:column="9">return <expr><operator pos:line="75" pos:column="16">(<pos:position pos:line="75" pos:column="17"/></operator><operator pos:line="75" pos:column="17">-<pos:position pos:line="75" pos:column="18"/></operator><literal type="number" pos:line="75" pos:column="18">1<pos:position pos:line="75" pos:column="19"/></literal><operator pos:line="75" pos:column="19">)<pos:position pos:line="75" pos:column="20"/></operator></expr>;<pos:position pos:line="75" pos:column="21"/></return></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></while>
    <return pos:line="77" pos:column="5">return <expr><literal type="number" pos:line="77" pos:column="12">0<pos:position pos:line="77" pos:column="13"/></literal></expr>;<pos:position pos:line="77" pos:column="14"/></return>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="80" pos:column="3">hdr_count<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">=<pos:position pos:line="80" pos:column="14"/></operator> <literal type="number" pos:line="80" pos:column="15">1<pos:position pos:line="80" pos:column="16"/></literal></expr>;<pos:position pos:line="80" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="81" pos:column="3">x<pos:position pos:line="81" pos:column="4"/></name> <operator pos:line="81" pos:column="5">=<pos:position pos:line="81" pos:column="6"/></operator> <literal type="number" pos:line="81" pos:column="7">0<pos:position pos:line="81" pos:column="8"/></literal></expr>;<pos:position pos:line="81" pos:column="9"/></expr_stmt>
  <expr_stmt><expr><name pos:line="82" pos:column="3">error<pos:position pos:line="82" pos:column="8"/></name> <operator pos:line="82" pos:column="9">=<pos:position pos:line="82" pos:column="10"/></operator> <name pos:line="82" pos:column="11">FALSE<pos:position pos:line="82" pos:column="16"/></name></expr>;<pos:position pos:line="82" pos:column="17"/></expr_stmt>

  <comment type="block" pos:line="84" pos:column="3">/* We are going to read and collect the headers in an array
   * so we are able to do re-ordering.
   * First count the number of entries in the array
   */</comment>
  <if pos:line="88" pos:column="3">if <condition pos:line="88" pos:column="6">(<expr><name pos:line="88" pos:column="7">flags<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">&amp;<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="15">CH_REORDER<pos:position pos:line="88" pos:column="25"/></name></expr>)<pos:position pos:line="88" pos:column="26"/></condition><then pos:line="88" pos:column="26">
  <block pos:line="89" pos:column="3">{
    <for pos:line="90" pos:column="5">for <control pos:line="90" pos:column="9">(<init><expr><name pos:line="90" pos:column="10">t<pos:position pos:line="90" pos:column="11"/></name> <operator pos:line="90" pos:column="12">=<pos:position pos:line="90" pos:column="13"/></operator> <name pos:line="90" pos:column="14">HeaderOrderList<pos:position pos:line="90" pos:column="29"/></name></expr>;<pos:position pos:line="90" pos:column="30"/></init> <condition><expr><name pos:line="90" pos:column="31">t<pos:position pos:line="90" pos:column="32"/></name></expr>;<pos:position pos:line="90" pos:column="33"/></condition> <incr><expr><name pos:line="90" pos:column="34">t<pos:position pos:line="90" pos:column="35"/></name> <operator pos:line="90" pos:column="36">=<pos:position pos:line="90" pos:column="37"/></operator> <name><name pos:line="90" pos:column="38">t<pos:position pos:line="90" pos:column="39"/></name><operator pos:line="90" pos:column="39">-&gt;<pos:position pos:line="90" pos:column="44"/></operator><name pos:line="90" pos:column="41">next<pos:position pos:line="90" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="90" pos:column="46"/></control>
    <block pos:line="91" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">dprint<pos:position pos:line="92" pos:column="13"/></name><argument_list pos:line="92" pos:column="13">(<argument><expr><literal type="number" pos:line="92" pos:column="14">3<pos:position pos:line="92" pos:column="15"/></literal></expr></argument>, <argument><expr><operator pos:line="92" pos:column="17">(<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="18">debugfile<pos:position pos:line="92" pos:column="27"/></name><operator pos:line="92" pos:column="27">,<pos:position pos:line="92" pos:column="28"/></operator> <literal type="string" pos:line="92" pos:column="29">"Reorder list: %s\n"<pos:position pos:line="92" pos:column="49"/></literal><operator pos:line="92" pos:column="49">,<pos:position pos:line="92" pos:column="50"/></operator> <name><name pos:line="92" pos:column="51">t<pos:position pos:line="92" pos:column="52"/></name><operator pos:line="92" pos:column="52">-&gt;<pos:position pos:line="92" pos:column="57"/></operator><name pos:line="92" pos:column="54">data<pos:position pos:line="92" pos:column="58"/></name></name><operator pos:line="92" pos:column="58">)<pos:position pos:line="92" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="92" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><name pos:line="93" pos:column="7">hdr_count<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">++<pos:position pos:line="93" pos:column="18"/></operator></expr>;<pos:position pos:line="93" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></for>
  }<pos:position pos:line="95" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="97" pos:column="3">dprint<pos:position pos:line="97" pos:column="9"/></name> <argument_list pos:line="97" pos:column="10">(<argument><expr><literal type="number" pos:line="97" pos:column="11">1<pos:position pos:line="97" pos:column="12"/></literal></expr></argument>, <argument><expr><operator pos:line="97" pos:column="14">(<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="15">debugfile<pos:position pos:line="97" pos:column="24"/></name><operator pos:line="97" pos:column="24">,<pos:position pos:line="97" pos:column="25"/></operator> <literal type="string" pos:line="97" pos:column="26">"WEED is %s\n"<pos:position pos:line="97" pos:column="40"/></literal><operator pos:line="97" pos:column="40">,<pos:position pos:line="97" pos:column="41"/></operator> <ternary><condition><expr><operator pos:line="97" pos:column="42">(<pos:position pos:line="97" pos:column="43"/></operator><name pos:line="97" pos:column="43">flags<pos:position pos:line="97" pos:column="48"/></name> <operator pos:line="97" pos:column="49">&amp;<pos:position pos:line="97" pos:column="54"/></operator> <name pos:line="97" pos:column="51">CH_WEED<pos:position pos:line="97" pos:column="58"/></name><operator pos:line="97" pos:column="58">)<pos:position pos:line="97" pos:column="59"/></operator></expr> ?<pos:position pos:line="97" pos:column="61"/></condition><then pos:line="97" pos:column="61"> <expr><literal type="string" pos:line="97" pos:column="62">"Set"<pos:position pos:line="97" pos:column="67"/></literal></expr> <pos:position pos:line="97" pos:column="68"/></then><else pos:line="97" pos:column="68">: <expr><literal type="string" pos:line="97" pos:column="70">"Not"<pos:position pos:line="97" pos:column="75"/></literal></expr></else></ternary><operator pos:line="97" pos:column="75">)<pos:position pos:line="97" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="97" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="78"/></expr_stmt>

  <expr_stmt><expr><name pos:line="99" pos:column="3">headers<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">=<pos:position pos:line="99" pos:column="12"/></operator> <call><name pos:line="99" pos:column="13">safe_calloc<pos:position pos:line="99" pos:column="24"/></name> <argument_list pos:line="99" pos:column="25">(<argument><expr><name pos:line="99" pos:column="26">hdr_count<pos:position pos:line="99" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="37">sizeof <argument_list pos:line="99" pos:column="44">(<argument><expr><name pos:line="99" pos:column="45">char<pos:position pos:line="99" pos:column="49"/></name> <operator pos:line="99" pos:column="50">*<pos:position pos:line="99" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="99" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="54"/></expr_stmt>

  <comment type="block" pos:line="101" pos:column="3">/* Read all the headers into the array */</comment>
  <while pos:line="102" pos:column="3">while <condition pos:line="102" pos:column="9">(<expr><call><name pos:line="102" pos:column="10">ftello<pos:position pos:line="102" pos:column="16"/></name> <argument_list pos:line="102" pos:column="17">(<argument><expr><name pos:line="102" pos:column="18">in<pos:position pos:line="102" pos:column="20"/></name></expr></argument>)<pos:position pos:line="102" pos:column="21"/></argument_list></call> <operator pos:line="102" pos:column="22">&lt;<pos:position pos:line="102" pos:column="26"/></operator> <name pos:line="102" pos:column="24">off_end<pos:position pos:line="102" pos:column="31"/></name></expr>)<pos:position pos:line="102" pos:column="32"/></condition>
  <block pos:line="103" pos:column="3">{
    <expr_stmt><expr><name pos:line="104" pos:column="5">nl<pos:position pos:line="104" pos:column="7"/></name> <operator pos:line="104" pos:column="8">=<pos:position pos:line="104" pos:column="9"/></operator> <call><name pos:line="104" pos:column="10">strchr<pos:position pos:line="104" pos:column="16"/></name> <argument_list pos:line="104" pos:column="17">(<argument><expr><name pos:line="104" pos:column="18">buf<pos:position pos:line="104" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="104" pos:column="23">'\n'<pos:position pos:line="104" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="106" pos:column="5">/* Read a line */</comment>
    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><operator pos:line="107" pos:column="9">(<pos:position pos:line="107" pos:column="10"/></operator><call><name pos:line="107" pos:column="10">fgets<pos:position pos:line="107" pos:column="15"/></name> <argument_list pos:line="107" pos:column="16">(<argument><expr><name pos:line="107" pos:column="17">buf<pos:position pos:line="107" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="22">sizeof <argument_list pos:line="107" pos:column="29">(<argument><expr><name pos:line="107" pos:column="30">buf<pos:position pos:line="107" pos:column="33"/></name></expr></argument>)<pos:position pos:line="107" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="107" pos:column="36">in<pos:position pos:line="107" pos:column="38"/></name></expr></argument>)<pos:position pos:line="107" pos:column="39"/></argument_list></call><operator pos:line="107" pos:column="39">)<pos:position pos:line="107" pos:column="40"/></operator> <operator pos:line="107" pos:column="41">==<pos:position pos:line="107" pos:column="43"/></operator> <name pos:line="107" pos:column="44">NULL<pos:position pos:line="107" pos:column="48"/></name></expr>)<pos:position pos:line="107" pos:column="49"/></condition><then pos:line="107" pos:column="49">
      <block type="pseudo"><break pos:line="108" pos:column="7">break;<pos:position pos:line="108" pos:column="13"/></break></block></then></if>

    <comment type="block" pos:line="110" pos:column="5">/* Is it the beginning of a header? */</comment>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name pos:line="111" pos:column="9">nl<pos:position pos:line="111" pos:column="11"/></name> <operator pos:line="111" pos:column="12">&amp;&amp;<pos:position pos:line="111" pos:column="22"/></operator> <name><name pos:line="111" pos:column="15">buf<pos:position pos:line="111" pos:column="18"/></name><index pos:line="111" pos:column="18">[<expr><literal type="number" pos:line="111" pos:column="19">0<pos:position pos:line="111" pos:column="20"/></literal></expr>]<pos:position pos:line="111" pos:column="21"/></index></name> <operator pos:line="111" pos:column="22">!=<pos:position pos:line="111" pos:column="24"/></operator> <literal type="char" pos:line="111" pos:column="25">' '<pos:position pos:line="111" pos:column="28"/></literal> <operator pos:line="111" pos:column="29">&amp;&amp;<pos:position pos:line="111" pos:column="39"/></operator> <name><name pos:line="111" pos:column="32">buf<pos:position pos:line="111" pos:column="35"/></name><index pos:line="111" pos:column="35">[<expr><literal type="number" pos:line="111" pos:column="36">0<pos:position pos:line="111" pos:column="37"/></literal></expr>]<pos:position pos:line="111" pos:column="38"/></index></name> <operator pos:line="111" pos:column="39">!=<pos:position pos:line="111" pos:column="41"/></operator> <literal type="char" pos:line="111" pos:column="42">'\t'<pos:position pos:line="111" pos:column="46"/></literal></expr>)<pos:position pos:line="111" pos:column="47"/></condition><then pos:line="111" pos:column="47">
    <block pos:line="112" pos:column="5">{
      <comment type="block" pos:line="113" pos:column="7">/* Do we have anything pending? */</comment>
      <if pos:line="114" pos:column="7">if <condition pos:line="114" pos:column="10">(<expr><name pos:line="114" pos:column="11">this_one<pos:position pos:line="114" pos:column="19"/></name></expr>)<pos:position pos:line="114" pos:column="20"/></condition><then pos:line="114" pos:column="20">
      <block pos:line="115" pos:column="7">{
	<if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">flags<pos:position pos:line="116" pos:column="18"/></name> <operator pos:line="116" pos:column="19">&amp;<pos:position pos:line="116" pos:column="24"/></operator> <name pos:line="116" pos:column="21">CH_DECODE<pos:position pos:line="116" pos:column="30"/></name></expr>)<pos:position pos:line="116" pos:column="31"/></condition><then pos:line="116" pos:column="31"> 
	<block pos:line="117" pos:column="9">{
	  <if pos:line="118" pos:column="11">if <condition pos:line="118" pos:column="14">(<expr><operator pos:line="118" pos:column="15">!<pos:position pos:line="118" pos:column="16"/></operator><call><name pos:line="118" pos:column="16">address_header_decode<pos:position pos:line="118" pos:column="37"/></name> <argument_list pos:line="118" pos:column="38">(<argument><expr><operator pos:line="118" pos:column="39">&amp;<pos:position pos:line="118" pos:column="44"/></operator><name pos:line="118" pos:column="40">this_one<pos:position pos:line="118" pos:column="48"/></name></expr></argument>)<pos:position pos:line="118" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="50"/></condition><then pos:line="118" pos:column="50">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="13">rfc2047_decode<pos:position pos:line="119" pos:column="27"/></name> <argument_list pos:line="119" pos:column="28">(<argument><expr><operator pos:line="119" pos:column="29">&amp;<pos:position pos:line="119" pos:column="34"/></operator><name pos:line="119" pos:column="30">this_one<pos:position pos:line="119" pos:column="38"/></name></expr></argument>)<pos:position pos:line="119" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="40"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><name pos:line="120" pos:column="11">this_one_len<pos:position pos:line="120" pos:column="23"/></name> <operator pos:line="120" pos:column="24">=<pos:position pos:line="120" pos:column="25"/></operator> <call><name pos:line="120" pos:column="26">mutt_strlen<pos:position pos:line="120" pos:column="37"/></name> <argument_list pos:line="120" pos:column="38">(<argument><expr><name pos:line="120" pos:column="39">this_one<pos:position pos:line="120" pos:column="47"/></name></expr></argument>)<pos:position pos:line="120" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="121" pos:column="10"/></block></then></if>

	<if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><operator pos:line="123" pos:column="13">!<pos:position pos:line="123" pos:column="14"/></operator><name><name pos:line="123" pos:column="14">headers<pos:position pos:line="123" pos:column="21"/></name><index pos:line="123" pos:column="21">[<expr><name pos:line="123" pos:column="22">x<pos:position pos:line="123" pos:column="23"/></name></expr>]<pos:position pos:line="123" pos:column="24"/></index></name></expr>)<pos:position pos:line="123" pos:column="25"/></condition><then pos:line="123" pos:column="25">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="11">headers<pos:position pos:line="124" pos:column="18"/></name><index pos:line="124" pos:column="18">[<expr><name pos:line="124" pos:column="19">x<pos:position pos:line="124" pos:column="20"/></name></expr>]<pos:position pos:line="124" pos:column="21"/></index></name> <operator pos:line="124" pos:column="22">=<pos:position pos:line="124" pos:column="23"/></operator> <name pos:line="124" pos:column="24">this_one<pos:position pos:line="124" pos:column="32"/></name></expr>;<pos:position pos:line="124" pos:column="33"/></expr_stmt></block></then>
	<else pos:line="125" pos:column="9">else 
	<block pos:line="126" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="127" pos:column="11">int<pos:position pos:line="127" pos:column="14"/></name></type> <name pos:line="127" pos:column="15">hlen<pos:position pos:line="127" pos:column="19"/></name> <init pos:line="127" pos:column="20">= <expr><call><name pos:line="127" pos:column="22">mutt_strlen<pos:position pos:line="127" pos:column="33"/></name> <argument_list pos:line="127" pos:column="34">(<argument><expr><name><name pos:line="127" pos:column="35">headers<pos:position pos:line="127" pos:column="42"/></name><index pos:line="127" pos:column="42">[<expr><name pos:line="127" pos:column="43">x<pos:position pos:line="127" pos:column="44"/></name></expr>]<pos:position pos:line="127" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="127" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="127" pos:column="47"/></decl_stmt>

	  <expr_stmt><expr><call><name pos:line="129" pos:column="11">safe_realloc<pos:position pos:line="129" pos:column="23"/></name> <argument_list pos:line="129" pos:column="24">(<argument><expr><operator pos:line="129" pos:column="25">&amp;<pos:position pos:line="129" pos:column="30"/></operator><name><name pos:line="129" pos:column="26">headers<pos:position pos:line="129" pos:column="33"/></name><index pos:line="129" pos:column="33">[<expr><name pos:line="129" pos:column="34">x<pos:position pos:line="129" pos:column="35"/></name></expr>]<pos:position pos:line="129" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="38">hlen<pos:position pos:line="129" pos:column="42"/></name> <operator pos:line="129" pos:column="43">+<pos:position pos:line="129" pos:column="44"/></operator> <name pos:line="129" pos:column="45">this_one_len<pos:position pos:line="129" pos:column="57"/></name> <operator pos:line="129" pos:column="58">+<pos:position pos:line="129" pos:column="59"/></operator> <sizeof pos:line="129" pos:column="60">sizeof <argument_list pos:line="129" pos:column="67">(<argument><expr><name pos:line="129" pos:column="68">char<pos:position pos:line="129" pos:column="72"/></name></expr></argument>)<pos:position pos:line="129" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="129" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="75"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="130" pos:column="11">strcat<pos:position pos:line="130" pos:column="17"/></name> <argument_list pos:line="130" pos:column="18">(<argument><expr><name><name pos:line="130" pos:column="19">headers<pos:position pos:line="130" pos:column="26"/></name><index pos:line="130" pos:column="26">[<expr><name pos:line="130" pos:column="27">x<pos:position pos:line="130" pos:column="28"/></name></expr>]<pos:position pos:line="130" pos:column="29"/></index></name> <operator pos:line="130" pos:column="30">+<pos:position pos:line="130" pos:column="31"/></operator> <name pos:line="130" pos:column="32">hlen<pos:position pos:line="130" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="38">this_one<pos:position pos:line="130" pos:column="46"/></name></expr></argument>)<pos:position pos:line="130" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="48"/></expr_stmt> <comment type="block" pos:line="130" pos:column="49">/* __STRCAT_CHECKED__ */</comment>
	  <expr_stmt><expr><call><name pos:line="131" pos:column="11">FREE<pos:position pos:line="131" pos:column="15"/></name> <argument_list pos:line="131" pos:column="16">(<argument><expr><operator pos:line="131" pos:column="17">&amp;<pos:position pos:line="131" pos:column="22"/></operator><name pos:line="131" pos:column="18">this_one<pos:position pos:line="131" pos:column="26"/></name></expr></argument>)<pos:position pos:line="131" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="132" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="134" pos:column="9">this_one<pos:position pos:line="134" pos:column="17"/></name> <operator pos:line="134" pos:column="18">=<pos:position pos:line="134" pos:column="19"/></operator> <name pos:line="134" pos:column="20">NULL<pos:position pos:line="134" pos:column="24"/></name></expr>;<pos:position pos:line="134" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="135" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="137" pos:column="7">ignore<pos:position pos:line="137" pos:column="13"/></name> <operator pos:line="137" pos:column="14">=<pos:position pos:line="137" pos:column="15"/></operator> <literal type="number" pos:line="137" pos:column="16">1<pos:position pos:line="137" pos:column="17"/></literal></expr>;<pos:position pos:line="137" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="138" pos:column="7">this_is_from<pos:position pos:line="138" pos:column="19"/></name> <operator pos:line="138" pos:column="20">=<pos:position pos:line="138" pos:column="21"/></operator> <literal type="number" pos:line="138" pos:column="22">0<pos:position pos:line="138" pos:column="23"/></literal></expr>;<pos:position pos:line="138" pos:column="24"/></expr_stmt>
      <if pos:line="139" pos:column="7">if <condition pos:line="139" pos:column="10">(<expr><operator pos:line="139" pos:column="11">!<pos:position pos:line="139" pos:column="12"/></operator><name pos:line="139" pos:column="12">from<pos:position pos:line="139" pos:column="16"/></name> <operator pos:line="139" pos:column="17">&amp;&amp;<pos:position pos:line="139" pos:column="27"/></operator> <call><name pos:line="139" pos:column="20">mutt_strncmp<pos:position pos:line="139" pos:column="32"/></name> <argument_list pos:line="139" pos:column="33">(<argument><expr><literal type="string" pos:line="139" pos:column="34">"From "<pos:position pos:line="139" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="43">buf<pos:position pos:line="139" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="48">5<pos:position pos:line="139" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="50"/></argument_list></call> <operator pos:line="139" pos:column="51">==<pos:position pos:line="139" pos:column="53"/></operator> <literal type="number" pos:line="139" pos:column="54">0<pos:position pos:line="139" pos:column="55"/></literal></expr>)<pos:position pos:line="139" pos:column="56"/></condition><then pos:line="139" pos:column="56">
      <block pos:line="140" pos:column="7">{
	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><operator pos:line="141" pos:column="13">(<pos:position pos:line="141" pos:column="14"/></operator><name pos:line="141" pos:column="14">flags<pos:position pos:line="141" pos:column="19"/></name> <operator pos:line="141" pos:column="20">&amp;<pos:position pos:line="141" pos:column="25"/></operator> <name pos:line="141" pos:column="22">CH_FROM<pos:position pos:line="141" pos:column="29"/></name><operator pos:line="141" pos:column="29">)<pos:position pos:line="141" pos:column="30"/></operator> <operator pos:line="141" pos:column="31">==<pos:position pos:line="141" pos:column="33"/></operator> <literal type="number" pos:line="141" pos:column="34">0<pos:position pos:line="141" pos:column="35"/></literal></expr>)<pos:position pos:line="141" pos:column="36"/></condition><then pos:line="141" pos:column="36">
	  <block type="pseudo"><continue pos:line="142" pos:column="11">continue;<pos:position pos:line="142" pos:column="20"/></continue></block></then></if>
	<expr_stmt><expr><name pos:line="143" pos:column="9">this_is_from<pos:position pos:line="143" pos:column="21"/></name> <operator pos:line="143" pos:column="22">=<pos:position pos:line="143" pos:column="23"/></operator> <name pos:line="143" pos:column="24">from<pos:position pos:line="143" pos:column="28"/></name> <operator pos:line="143" pos:column="29">=<pos:position pos:line="143" pos:column="30"/></operator> <literal type="number" pos:line="143" pos:column="31">1<pos:position pos:line="143" pos:column="32"/></literal></expr>;<pos:position pos:line="143" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="144" pos:column="8"/></block></then>
      <elseif pos:line="145" pos:column="7">else <if pos:line="145" pos:column="12">if <condition pos:line="145" pos:column="15">(<expr><name><name pos:line="145" pos:column="16">buf<pos:position pos:line="145" pos:column="19"/></name><index pos:line="145" pos:column="19">[<expr><literal type="number" pos:line="145" pos:column="20">0<pos:position pos:line="145" pos:column="21"/></literal></expr>]<pos:position pos:line="145" pos:column="22"/></index></name> <operator pos:line="145" pos:column="23">==<pos:position pos:line="145" pos:column="25"/></operator> <literal type="char" pos:line="145" pos:column="26">'\n'<pos:position pos:line="145" pos:column="30"/></literal> <operator pos:line="145" pos:column="31">||<pos:position pos:line="145" pos:column="33"/></operator> <operator pos:line="145" pos:column="34">(<pos:position pos:line="145" pos:column="35"/></operator><name><name pos:line="145" pos:column="35">buf<pos:position pos:line="145" pos:column="38"/></name><index pos:line="145" pos:column="38">[<expr><literal type="number" pos:line="145" pos:column="39">0<pos:position pos:line="145" pos:column="40"/></literal></expr>]<pos:position pos:line="145" pos:column="41"/></index></name> <operator pos:line="145" pos:column="42">==<pos:position pos:line="145" pos:column="44"/></operator> <literal type="char" pos:line="145" pos:column="45">'\r'<pos:position pos:line="145" pos:column="49"/></literal> <operator pos:line="145" pos:column="50">&amp;&amp;<pos:position pos:line="145" pos:column="60"/></operator> <name><name pos:line="145" pos:column="53">buf<pos:position pos:line="145" pos:column="56"/></name><index pos:line="145" pos:column="56">[<expr><literal type="number" pos:line="145" pos:column="57">1<pos:position pos:line="145" pos:column="58"/></literal></expr>]<pos:position pos:line="145" pos:column="59"/></index></name> <operator pos:line="145" pos:column="60">==<pos:position pos:line="145" pos:column="62"/></operator> <literal type="char" pos:line="145" pos:column="63">'\n'<pos:position pos:line="145" pos:column="67"/></literal><operator pos:line="145" pos:column="67">)<pos:position pos:line="145" pos:column="68"/></operator></expr>)<pos:position pos:line="145" pos:column="69"/></condition><then pos:line="145" pos:column="69">
	<block type="pseudo"><break pos:line="146" pos:column="9">break;<pos:position pos:line="146" pos:column="15"/></break></block></then></if></elseif></if> <comment type="block" pos:line="146" pos:column="16">/* end of header */</comment>

      <comment type="block" pos:line="148" pos:column="7">/* note: CH_FROM takes precedence over header weeding. */</comment>
      <if pos:line="149" pos:column="7">if <condition pos:line="149" pos:column="10">(<expr><operator pos:line="149" pos:column="11">!<pos:position pos:line="149" pos:column="12"/></operator><operator pos:line="149" pos:column="12">(<pos:position pos:line="149" pos:column="13"/></operator><operator pos:line="149" pos:column="13">(<pos:position pos:line="149" pos:column="14"/></operator><name pos:line="149" pos:column="14">flags<pos:position pos:line="149" pos:column="19"/></name> <operator pos:line="149" pos:column="20">&amp;<pos:position pos:line="149" pos:column="25"/></operator> <name pos:line="149" pos:column="22">CH_FROM<pos:position pos:line="149" pos:column="29"/></name><operator pos:line="149" pos:column="29">)<pos:position pos:line="149" pos:column="30"/></operator> <operator pos:line="149" pos:column="31">&amp;&amp;<pos:position pos:line="149" pos:column="41"/></operator> <operator pos:line="149" pos:column="34">(<pos:position pos:line="149" pos:column="35"/></operator><name pos:line="149" pos:column="35">flags<pos:position pos:line="149" pos:column="40"/></name> <operator pos:line="149" pos:column="41">&amp;<pos:position pos:line="149" pos:column="46"/></operator> <name pos:line="149" pos:column="43">CH_FORCE_FROM<pos:position pos:line="149" pos:column="56"/></name><operator pos:line="149" pos:column="56">)<pos:position pos:line="149" pos:column="57"/></operator> <operator pos:line="149" pos:column="58">&amp;&amp;<pos:position pos:line="149" pos:column="68"/></operator> <name pos:line="149" pos:column="61">this_is_from<pos:position pos:line="149" pos:column="73"/></name><operator pos:line="149" pos:column="73">)<pos:position pos:line="149" pos:column="74"/></operator> <operator pos:line="149" pos:column="75">&amp;&amp;<pos:position pos:line="149" pos:column="85"/></operator>
	  <operator pos:line="150" pos:column="11">(<pos:position pos:line="150" pos:column="12"/></operator><name pos:line="150" pos:column="12">flags<pos:position pos:line="150" pos:column="17"/></name> <operator pos:line="150" pos:column="18">&amp;<pos:position pos:line="150" pos:column="23"/></operator> <name pos:line="150" pos:column="20">CH_WEED<pos:position pos:line="150" pos:column="27"/></name><operator pos:line="150" pos:column="27">)<pos:position pos:line="150" pos:column="28"/></operator> <operator pos:line="150" pos:column="29">&amp;&amp;<pos:position pos:line="150" pos:column="39"/></operator>
	  <call><name pos:line="151" pos:column="11">mutt_matches_ignore<pos:position pos:line="151" pos:column="30"/></name> <argument_list pos:line="151" pos:column="31">(<argument><expr><name pos:line="151" pos:column="32">buf<pos:position pos:line="151" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="37">Ignore<pos:position pos:line="151" pos:column="43"/></name></expr></argument>)<pos:position pos:line="151" pos:column="44"/></argument_list></call> <operator pos:line="151" pos:column="45">&amp;&amp;<pos:position pos:line="151" pos:column="55"/></operator>
	  <operator pos:line="152" pos:column="11">!<pos:position pos:line="152" pos:column="12"/></operator><call><name pos:line="152" pos:column="12">mutt_matches_ignore<pos:position pos:line="152" pos:column="31"/></name> <argument_list pos:line="152" pos:column="32">(<argument><expr><name pos:line="152" pos:column="33">buf<pos:position pos:line="152" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="38">UnIgnore<pos:position pos:line="152" pos:column="46"/></name></expr></argument>)<pos:position pos:line="152" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="48"/></condition><then pos:line="152" pos:column="48">
	<block type="pseudo"><continue pos:line="153" pos:column="9">continue;<pos:position pos:line="153" pos:column="18"/></continue></block></then></if>
      <if pos:line="154" pos:column="7">if <condition pos:line="154" pos:column="10">(<expr><operator pos:line="154" pos:column="11">(<pos:position pos:line="154" pos:column="12"/></operator><name pos:line="154" pos:column="12">flags<pos:position pos:line="154" pos:column="17"/></name> <operator pos:line="154" pos:column="18">&amp;<pos:position pos:line="154" pos:column="23"/></operator> <name pos:line="154" pos:column="20">CH_WEED_DELIVERED<pos:position pos:line="154" pos:column="37"/></name><operator pos:line="154" pos:column="37">)<pos:position pos:line="154" pos:column="38"/></operator> <operator pos:line="154" pos:column="39">&amp;&amp;<pos:position pos:line="154" pos:column="49"/></operator>
	  <call><name pos:line="155" pos:column="11">ascii_strncasecmp<pos:position pos:line="155" pos:column="28"/></name> <argument_list pos:line="155" pos:column="29">(<argument><expr><literal type="string" pos:line="155" pos:column="30">"Delivered-To:"<pos:position pos:line="155" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="47">buf<pos:position pos:line="155" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="155" pos:column="52">13<pos:position pos:line="155" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="55"/></argument_list></call> <operator pos:line="155" pos:column="56">==<pos:position pos:line="155" pos:column="58"/></operator> <literal type="number" pos:line="155" pos:column="59">0<pos:position pos:line="155" pos:column="60"/></literal></expr>)<pos:position pos:line="155" pos:column="61"/></condition><then pos:line="155" pos:column="61">
	<block type="pseudo"><continue pos:line="156" pos:column="9">continue;<pos:position pos:line="156" pos:column="18"/></continue></block></then></if>
      <if pos:line="157" pos:column="7">if <condition pos:line="157" pos:column="10">(<expr><operator pos:line="157" pos:column="11">(<pos:position pos:line="157" pos:column="12"/></operator><name pos:line="157" pos:column="12">flags<pos:position pos:line="157" pos:column="17"/></name> <operator pos:line="157" pos:column="18">&amp;<pos:position pos:line="157" pos:column="23"/></operator> <operator pos:line="157" pos:column="20">(<pos:position pos:line="157" pos:column="21"/></operator><name pos:line="157" pos:column="21">CH_UPDATE<pos:position pos:line="157" pos:column="30"/></name> <operator pos:line="157" pos:column="31">|<pos:position pos:line="157" pos:column="32"/></operator> <name pos:line="157" pos:column="33">CH_XMIT<pos:position pos:line="157" pos:column="40"/></name> <operator pos:line="157" pos:column="41">|<pos:position pos:line="157" pos:column="42"/></operator> <name pos:line="157" pos:column="43">CH_NOSTATUS<pos:position pos:line="157" pos:column="54"/></name><operator pos:line="157" pos:column="54">)<pos:position pos:line="157" pos:column="55"/></operator><operator pos:line="157" pos:column="55">)<pos:position pos:line="157" pos:column="56"/></operator> <operator pos:line="157" pos:column="57">&amp;&amp;<pos:position pos:line="157" pos:column="67"/></operator>
	  <operator pos:line="158" pos:column="11">(<pos:position pos:line="158" pos:column="12"/></operator><call><name pos:line="158" pos:column="12">ascii_strncasecmp<pos:position pos:line="158" pos:column="29"/></name> <argument_list pos:line="158" pos:column="30">(<argument><expr><literal type="string" pos:line="158" pos:column="31">"Status:"<pos:position pos:line="158" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="42">buf<pos:position pos:line="158" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="158" pos:column="47">7<pos:position pos:line="158" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="49"/></argument_list></call> <operator pos:line="158" pos:column="50">==<pos:position pos:line="158" pos:column="52"/></operator> <literal type="number" pos:line="158" pos:column="53">0<pos:position pos:line="158" pos:column="54"/></literal> <operator pos:line="158" pos:column="55">||<pos:position pos:line="158" pos:column="57"/></operator>
	   <call><name pos:line="159" pos:column="12">ascii_strncasecmp<pos:position pos:line="159" pos:column="29"/></name> <argument_list pos:line="159" pos:column="30">(<argument><expr><literal type="string" pos:line="159" pos:column="31">"X-Status:"<pos:position pos:line="159" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="44">buf<pos:position pos:line="159" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="159" pos:column="49">9<pos:position pos:line="159" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="51"/></argument_list></call> <operator pos:line="159" pos:column="52">==<pos:position pos:line="159" pos:column="54"/></operator> <literal type="number" pos:line="159" pos:column="55">0<pos:position pos:line="159" pos:column="56"/></literal><operator pos:line="159" pos:column="56">)<pos:position pos:line="159" pos:column="57"/></operator></expr>)<pos:position pos:line="159" pos:column="58"/></condition><then pos:line="159" pos:column="58">
	<block type="pseudo"><continue pos:line="160" pos:column="9">continue;<pos:position pos:line="160" pos:column="18"/></continue></block></then></if>
      <if pos:line="161" pos:column="7">if <condition pos:line="161" pos:column="10">(<expr><operator pos:line="161" pos:column="11">(<pos:position pos:line="161" pos:column="12"/></operator><name pos:line="161" pos:column="12">flags<pos:position pos:line="161" pos:column="17"/></name> <operator pos:line="161" pos:column="18">&amp;<pos:position pos:line="161" pos:column="23"/></operator> <operator pos:line="161" pos:column="20">(<pos:position pos:line="161" pos:column="21"/></operator><name pos:line="161" pos:column="21">CH_UPDATE_LEN<pos:position pos:line="161" pos:column="34"/></name> <operator pos:line="161" pos:column="35">|<pos:position pos:line="161" pos:column="36"/></operator> <name pos:line="161" pos:column="37">CH_XMIT<pos:position pos:line="161" pos:column="44"/></name> <operator pos:line="161" pos:column="45">|<pos:position pos:line="161" pos:column="46"/></operator> <name pos:line="161" pos:column="47">CH_NOLEN<pos:position pos:line="161" pos:column="55"/></name><operator pos:line="161" pos:column="55">)<pos:position pos:line="161" pos:column="56"/></operator><operator pos:line="161" pos:column="56">)<pos:position pos:line="161" pos:column="57"/></operator> <operator pos:line="161" pos:column="58">&amp;&amp;<pos:position pos:line="161" pos:column="68"/></operator>
	  <operator pos:line="162" pos:column="11">(<pos:position pos:line="162" pos:column="12"/></operator><call><name pos:line="162" pos:column="12">ascii_strncasecmp<pos:position pos:line="162" pos:column="29"/></name> <argument_list pos:line="162" pos:column="30">(<argument><expr><literal type="string" pos:line="162" pos:column="31">"Content-Length:"<pos:position pos:line="162" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="50">buf<pos:position pos:line="162" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="162" pos:column="55">15<pos:position pos:line="162" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="58"/></argument_list></call> <operator pos:line="162" pos:column="59">==<pos:position pos:line="162" pos:column="61"/></operator> <literal type="number" pos:line="162" pos:column="62">0<pos:position pos:line="162" pos:column="63"/></literal> <operator pos:line="162" pos:column="64">||<pos:position pos:line="162" pos:column="66"/></operator>
	   <call><name pos:line="163" pos:column="12">ascii_strncasecmp<pos:position pos:line="163" pos:column="29"/></name> <argument_list pos:line="163" pos:column="30">(<argument><expr><literal type="string" pos:line="163" pos:column="31">"Lines:"<pos:position pos:line="163" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="41">buf<pos:position pos:line="163" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="46">6<pos:position pos:line="163" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="48"/></argument_list></call> <operator pos:line="163" pos:column="49">==<pos:position pos:line="163" pos:column="51"/></operator> <literal type="number" pos:line="163" pos:column="52">0<pos:position pos:line="163" pos:column="53"/></literal><operator pos:line="163" pos:column="53">)<pos:position pos:line="163" pos:column="54"/></operator></expr>)<pos:position pos:line="163" pos:column="55"/></condition><then pos:line="163" pos:column="55">
	<block type="pseudo"><continue pos:line="164" pos:column="9">continue;<pos:position pos:line="164" pos:column="18"/></continue></block></then></if>
      <if pos:line="165" pos:column="7">if <condition pos:line="165" pos:column="10">(<expr><operator pos:line="165" pos:column="11">(<pos:position pos:line="165" pos:column="12"/></operator><name pos:line="165" pos:column="12">flags<pos:position pos:line="165" pos:column="17"/></name> <operator pos:line="165" pos:column="18">&amp;<pos:position pos:line="165" pos:column="23"/></operator> <name pos:line="165" pos:column="20">CH_MIME<pos:position pos:line="165" pos:column="27"/></name><operator pos:line="165" pos:column="27">)<pos:position pos:line="165" pos:column="28"/></operator> <operator pos:line="165" pos:column="29">&amp;&amp;<pos:position pos:line="165" pos:column="39"/></operator>
	  <operator pos:line="166" pos:column="11">(<pos:position pos:line="166" pos:column="12"/></operator><operator pos:line="166" pos:column="12">(<pos:position pos:line="166" pos:column="13"/></operator><call><name pos:line="166" pos:column="13">ascii_strncasecmp<pos:position pos:line="166" pos:column="30"/></name> <argument_list pos:line="166" pos:column="31">(<argument><expr><literal type="string" pos:line="166" pos:column="32">"content-"<pos:position pos:line="166" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="44">buf<pos:position pos:line="166" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="49">8<pos:position pos:line="166" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="51"/></argument_list></call> <operator pos:line="166" pos:column="52">==<pos:position pos:line="166" pos:column="54"/></operator> <literal type="number" pos:line="166" pos:column="55">0<pos:position pos:line="166" pos:column="56"/></literal> <operator pos:line="166" pos:column="57">&amp;&amp;<pos:position pos:line="166" pos:column="67"/></operator>
	    <operator pos:line="167" pos:column="13">(<pos:position pos:line="167" pos:column="14"/></operator><call><name pos:line="167" pos:column="14">ascii_strncasecmp<pos:position pos:line="167" pos:column="31"/></name> <argument_list pos:line="167" pos:column="32">(<argument><expr><literal type="string" pos:line="167" pos:column="33">"transfer-encoding:"<pos:position pos:line="167" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="55">buf<pos:position pos:line="167" pos:column="58"/></name> <operator pos:line="167" pos:column="59">+<pos:position pos:line="167" pos:column="60"/></operator> <literal type="number" pos:line="167" pos:column="61">8<pos:position pos:line="167" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="64">18<pos:position pos:line="167" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="67"/></argument_list></call> <operator pos:line="167" pos:column="68">==<pos:position pos:line="167" pos:column="70"/></operator> <literal type="number" pos:line="167" pos:column="71">0<pos:position pos:line="167" pos:column="72"/></literal> <operator pos:line="167" pos:column="73">||<pos:position pos:line="167" pos:column="75"/></operator>
	     <call><name pos:line="168" pos:column="14">ascii_strncasecmp<pos:position pos:line="168" pos:column="31"/></name> <argument_list pos:line="168" pos:column="32">(<argument><expr><literal type="string" pos:line="168" pos:column="33">"type:"<pos:position pos:line="168" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="42">buf<pos:position pos:line="168" pos:column="45"/></name> <operator pos:line="168" pos:column="46">+<pos:position pos:line="168" pos:column="47"/></operator> <literal type="number" pos:line="168" pos:column="48">8<pos:position pos:line="168" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="51">5<pos:position pos:line="168" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="53"/></argument_list></call> <operator pos:line="168" pos:column="54">==<pos:position pos:line="168" pos:column="56"/></operator> <literal type="number" pos:line="168" pos:column="57">0<pos:position pos:line="168" pos:column="58"/></literal><operator pos:line="168" pos:column="58">)<pos:position pos:line="168" pos:column="59"/></operator><operator pos:line="168" pos:column="59">)<pos:position pos:line="168" pos:column="60"/></operator> <operator pos:line="168" pos:column="61">||<pos:position pos:line="168" pos:column="63"/></operator>
	   <call><name pos:line="169" pos:column="12">ascii_strncasecmp<pos:position pos:line="169" pos:column="29"/></name> <argument_list pos:line="169" pos:column="30">(<argument><expr><literal type="string" pos:line="169" pos:column="31">"mime-version:"<pos:position pos:line="169" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="169" pos:column="48">buf<pos:position pos:line="169" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="53">13<pos:position pos:line="169" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="56"/></argument_list></call> <operator pos:line="169" pos:column="57">==<pos:position pos:line="169" pos:column="59"/></operator> <literal type="number" pos:line="169" pos:column="60">0<pos:position pos:line="169" pos:column="61"/></literal><operator pos:line="169" pos:column="61">)<pos:position pos:line="169" pos:column="62"/></operator></expr>)<pos:position pos:line="169" pos:column="63"/></condition><then pos:line="169" pos:column="63">
	<block type="pseudo"><continue pos:line="170" pos:column="9">continue;<pos:position pos:line="170" pos:column="18"/></continue></block></then></if>
      <if pos:line="171" pos:column="7">if <condition pos:line="171" pos:column="10">(<expr><operator pos:line="171" pos:column="11">(<pos:position pos:line="171" pos:column="12"/></operator><name pos:line="171" pos:column="12">flags<pos:position pos:line="171" pos:column="17"/></name> <operator pos:line="171" pos:column="18">&amp;<pos:position pos:line="171" pos:column="23"/></operator> <name pos:line="171" pos:column="20">CH_UPDATE_REFS<pos:position pos:line="171" pos:column="34"/></name><operator pos:line="171" pos:column="34">)<pos:position pos:line="171" pos:column="35"/></operator> <operator pos:line="171" pos:column="36">&amp;&amp;<pos:position pos:line="171" pos:column="46"/></operator>
	  <call><name pos:line="172" pos:column="11">ascii_strncasecmp<pos:position pos:line="172" pos:column="28"/></name> <argument_list pos:line="172" pos:column="29">(<argument><expr><literal type="string" pos:line="172" pos:column="30">"References:"<pos:position pos:line="172" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="172" pos:column="45">buf<pos:position pos:line="172" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="50">11<pos:position pos:line="172" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="53"/></argument_list></call> <operator pos:line="172" pos:column="54">==<pos:position pos:line="172" pos:column="56"/></operator> <literal type="number" pos:line="172" pos:column="57">0<pos:position pos:line="172" pos:column="58"/></literal></expr>)<pos:position pos:line="172" pos:column="59"/></condition><then pos:line="172" pos:column="59">
	<block type="pseudo"><continue pos:line="173" pos:column="9">continue;<pos:position pos:line="173" pos:column="18"/></continue></block></then></if>
      <if pos:line="174" pos:column="7">if <condition pos:line="174" pos:column="10">(<expr><operator pos:line="174" pos:column="11">(<pos:position pos:line="174" pos:column="12"/></operator><name pos:line="174" pos:column="12">flags<pos:position pos:line="174" pos:column="17"/></name> <operator pos:line="174" pos:column="18">&amp;<pos:position pos:line="174" pos:column="23"/></operator> <name pos:line="174" pos:column="20">CH_UPDATE_IRT<pos:position pos:line="174" pos:column="33"/></name><operator pos:line="174" pos:column="33">)<pos:position pos:line="174" pos:column="34"/></operator> <operator pos:line="174" pos:column="35">&amp;&amp;<pos:position pos:line="174" pos:column="45"/></operator>
	  <call><name pos:line="175" pos:column="11">ascii_strncasecmp<pos:position pos:line="175" pos:column="28"/></name> <argument_list pos:line="175" pos:column="29">(<argument><expr><literal type="string" pos:line="175" pos:column="30">"In-Reply-To:"<pos:position pos:line="175" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="175" pos:column="46">buf<pos:position pos:line="175" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="175" pos:column="51">12<pos:position pos:line="175" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="54"/></argument_list></call> <operator pos:line="175" pos:column="55">==<pos:position pos:line="175" pos:column="57"/></operator> <literal type="number" pos:line="175" pos:column="58">0<pos:position pos:line="175" pos:column="59"/></literal></expr>)<pos:position pos:line="175" pos:column="60"/></condition><then pos:line="175" pos:column="60">
	<block type="pseudo"><continue pos:line="176" pos:column="9">continue;<pos:position pos:line="176" pos:column="18"/></continue></block></then></if>

      <comment type="block" pos:line="178" pos:column="7">/* Find x -- the array entry where this header is to be saved */</comment>
      <if pos:line="179" pos:column="7">if <condition pos:line="179" pos:column="10">(<expr><name pos:line="179" pos:column="11">flags<pos:position pos:line="179" pos:column="16"/></name> <operator pos:line="179" pos:column="17">&amp;<pos:position pos:line="179" pos:column="22"/></operator> <name pos:line="179" pos:column="19">CH_REORDER<pos:position pos:line="179" pos:column="29"/></name></expr>)<pos:position pos:line="179" pos:column="30"/></condition><then pos:line="179" pos:column="30">
      <block pos:line="180" pos:column="7">{
	<for pos:line="181" pos:column="9">for <control pos:line="181" pos:column="13">(<init><expr><name pos:line="181" pos:column="14">t<pos:position pos:line="181" pos:column="15"/></name> <operator pos:line="181" pos:column="16">=<pos:position pos:line="181" pos:column="17"/></operator> <name pos:line="181" pos:column="18">HeaderOrderList<pos:position pos:line="181" pos:column="33"/></name></expr><operator pos:line="181" pos:column="33">,<pos:position pos:line="181" pos:column="34"/></operator> <expr><name pos:line="181" pos:column="35">x<pos:position pos:line="181" pos:column="36"/></name> <operator pos:line="181" pos:column="37">=<pos:position pos:line="181" pos:column="38"/></operator> <literal type="number" pos:line="181" pos:column="39">0<pos:position pos:line="181" pos:column="40"/></literal></expr> ;<pos:position pos:line="181" pos:column="42"/></init> <condition><expr><operator pos:line="181" pos:column="43">(<pos:position pos:line="181" pos:column="44"/></operator><name pos:line="181" pos:column="44">t<pos:position pos:line="181" pos:column="45"/></name><operator pos:line="181" pos:column="45">)<pos:position pos:line="181" pos:column="46"/></operator></expr> ;<pos:position pos:line="181" pos:column="48"/></condition> <incr><expr><name pos:line="181" pos:column="49">t<pos:position pos:line="181" pos:column="50"/></name> <operator pos:line="181" pos:column="51">=<pos:position pos:line="181" pos:column="52"/></operator> <name><name pos:line="181" pos:column="53">t<pos:position pos:line="181" pos:column="54"/></name><operator pos:line="181" pos:column="54">-&gt;<pos:position pos:line="181" pos:column="59"/></operator><name pos:line="181" pos:column="56">next<pos:position pos:line="181" pos:column="60"/></name></name></expr><operator pos:line="181" pos:column="60">,<pos:position pos:line="181" pos:column="61"/></operator> <expr><name pos:line="181" pos:column="62">x<pos:position pos:line="181" pos:column="63"/></name><operator pos:line="181" pos:column="63">++<pos:position pos:line="181" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="181" pos:column="66"/></control>
	<block pos:line="182" pos:column="9">{
	  <if pos:line="183" pos:column="11">if <condition pos:line="183" pos:column="14">(<expr><operator pos:line="183" pos:column="15">!<pos:position pos:line="183" pos:column="16"/></operator><call><name pos:line="183" pos:column="16">ascii_strncasecmp<pos:position pos:line="183" pos:column="33"/></name> <argument_list pos:line="183" pos:column="34">(<argument><expr><name pos:line="183" pos:column="35">buf<pos:position pos:line="183" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="183" pos:column="40">t<pos:position pos:line="183" pos:column="41"/></name><operator pos:line="183" pos:column="41">-&gt;<pos:position pos:line="183" pos:column="46"/></operator><name pos:line="183" pos:column="43">data<pos:position pos:line="183" pos:column="47"/></name></name></expr></argument>, <argument><expr><call><name pos:line="183" pos:column="49">mutt_strlen<pos:position pos:line="183" pos:column="60"/></name> <argument_list pos:line="183" pos:column="61">(<argument><expr><name><name pos:line="183" pos:column="62">t<pos:position pos:line="183" pos:column="63"/></name><operator pos:line="183" pos:column="63">-&gt;<pos:position pos:line="183" pos:column="68"/></operator><name pos:line="183" pos:column="65">data<pos:position pos:line="183" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="183" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="183" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="183" pos:column="72"/></condition><then pos:line="183" pos:column="72">
	  <block pos:line="184" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="185" pos:column="13">dprint<pos:position pos:line="185" pos:column="19"/></name><argument_list pos:line="185" pos:column="19">(<argument><expr><literal type="number" pos:line="185" pos:column="20">2<pos:position pos:line="185" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="185" pos:column="23">(<pos:position pos:line="185" pos:column="24"/></operator><name pos:line="185" pos:column="24">debugfile<pos:position pos:line="185" pos:column="33"/></name><operator pos:line="185" pos:column="33">,<pos:position pos:line="185" pos:column="34"/></operator> <literal type="string" pos:line="185" pos:column="35">"Reorder: %s matches %s\n"<pos:position pos:line="185" pos:column="61"/></literal><operator pos:line="185" pos:column="61">,<pos:position pos:line="185" pos:column="62"/></operator> <name><name pos:line="185" pos:column="63">t<pos:position pos:line="185" pos:column="64"/></name><operator pos:line="185" pos:column="64">-&gt;<pos:position pos:line="185" pos:column="69"/></operator><name pos:line="185" pos:column="66">data<pos:position pos:line="185" pos:column="70"/></name></name><operator pos:line="185" pos:column="70">,<pos:position pos:line="185" pos:column="71"/></operator> <name pos:line="185" pos:column="72">buf<pos:position pos:line="185" pos:column="75"/></name><operator pos:line="185" pos:column="75">)<pos:position pos:line="185" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="185" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="78"/></expr_stmt>
	    <break pos:line="186" pos:column="13">break;<pos:position pos:line="186" pos:column="19"/></break>
	  }<pos:position pos:line="187" pos:column="12"/></block></then></if>
	}<pos:position pos:line="188" pos:column="10"/></block></for>
      }<pos:position pos:line="189" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="191" pos:column="7">ignore<pos:position pos:line="191" pos:column="13"/></name> <operator pos:line="191" pos:column="14">=<pos:position pos:line="191" pos:column="15"/></operator> <literal type="number" pos:line="191" pos:column="16">0<pos:position pos:line="191" pos:column="17"/></literal></expr>;<pos:position pos:line="191" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="192" pos:column="6"/></block></then></if> <comment type="block" pos:line="192" pos:column="7">/* If beginning of header */</comment>

    <if pos:line="194" pos:column="5">if <condition pos:line="194" pos:column="8">(<expr><operator pos:line="194" pos:column="9">!<pos:position pos:line="194" pos:column="10"/></operator><name pos:line="194" pos:column="10">ignore<pos:position pos:line="194" pos:column="16"/></name></expr>)<pos:position pos:line="194" pos:column="17"/></condition><then pos:line="194" pos:column="17">
    <block pos:line="195" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="196" pos:column="7">dprint<pos:position pos:line="196" pos:column="13"/></name> <argument_list pos:line="196" pos:column="14">(<argument><expr><literal type="number" pos:line="196" pos:column="15">2<pos:position pos:line="196" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="196" pos:column="18">(<pos:position pos:line="196" pos:column="19"/></operator><name pos:line="196" pos:column="19">debugfile<pos:position pos:line="196" pos:column="28"/></name><operator pos:line="196" pos:column="28">,<pos:position pos:line="196" pos:column="29"/></operator> <literal type="string" pos:line="196" pos:column="30">"Reorder: x = %d; hdr_count = %d\n"<pos:position pos:line="196" pos:column="65"/></literal><operator pos:line="196" pos:column="65">,<pos:position pos:line="196" pos:column="66"/></operator> <name pos:line="196" pos:column="67">x<pos:position pos:line="196" pos:column="68"/></name><operator pos:line="196" pos:column="68">,<pos:position pos:line="196" pos:column="69"/></operator> <name pos:line="196" pos:column="70">hdr_count<pos:position pos:line="196" pos:column="79"/></name><operator pos:line="196" pos:column="79">)<pos:position pos:line="196" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="196" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="82"/></expr_stmt>
      <if pos:line="197" pos:column="7">if <condition pos:line="197" pos:column="10">(<expr><operator pos:line="197" pos:column="11">!<pos:position pos:line="197" pos:column="12"/></operator><name pos:line="197" pos:column="12">this_one<pos:position pos:line="197" pos:column="20"/></name></expr>)<pos:position pos:line="197" pos:column="21"/></condition><then pos:line="197" pos:column="21"> <block pos:line="197" pos:column="22">{
	<expr_stmt><expr><name pos:line="198" pos:column="9">this_one<pos:position pos:line="198" pos:column="17"/></name> <operator pos:line="198" pos:column="18">=<pos:position pos:line="198" pos:column="19"/></operator> <call><name pos:line="198" pos:column="20">safe_strdup<pos:position pos:line="198" pos:column="31"/></name> <argument_list pos:line="198" pos:column="32">(<argument><expr><name pos:line="198" pos:column="33">buf<pos:position pos:line="198" pos:column="36"/></name></expr></argument>)<pos:position pos:line="198" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="199" pos:column="9">this_one_len<pos:position pos:line="199" pos:column="21"/></name> <operator pos:line="199" pos:column="22">=<pos:position pos:line="199" pos:column="23"/></operator> <call><name pos:line="199" pos:column="24">mutt_strlen<pos:position pos:line="199" pos:column="35"/></name> <argument_list pos:line="199" pos:column="36">(<argument><expr><name pos:line="199" pos:column="37">this_one<pos:position pos:line="199" pos:column="45"/></name></expr></argument>)<pos:position pos:line="199" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="47"/></expr_stmt>
      }<pos:position pos:line="200" pos:column="8"/></block></then> <else pos:line="200" pos:column="9">else <block pos:line="200" pos:column="14">{
	<decl_stmt><decl><type><name pos:line="201" pos:column="9">int<pos:position pos:line="201" pos:column="12"/></name></type> <name pos:line="201" pos:column="13">blen<pos:position pos:line="201" pos:column="17"/></name> <init pos:line="201" pos:column="18">= <expr><call><name pos:line="201" pos:column="20">mutt_strlen<pos:position pos:line="201" pos:column="31"/></name> <argument_list pos:line="201" pos:column="32">(<argument><expr><name pos:line="201" pos:column="33">buf<pos:position pos:line="201" pos:column="36"/></name></expr></argument>)<pos:position pos:line="201" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="201" pos:column="38"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="203" pos:column="9">safe_realloc<pos:position pos:line="203" pos:column="21"/></name> <argument_list pos:line="203" pos:column="22">(<argument><expr><operator pos:line="203" pos:column="23">&amp;<pos:position pos:line="203" pos:column="28"/></operator><name pos:line="203" pos:column="24">this_one<pos:position pos:line="203" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="34">this_one_len<pos:position pos:line="203" pos:column="46"/></name> <operator pos:line="203" pos:column="47">+<pos:position pos:line="203" pos:column="48"/></operator> <name pos:line="203" pos:column="49">blen<pos:position pos:line="203" pos:column="53"/></name> <operator pos:line="203" pos:column="54">+<pos:position pos:line="203" pos:column="55"/></operator> <sizeof pos:line="203" pos:column="56">sizeof <argument_list pos:line="203" pos:column="63">(<argument><expr><name pos:line="203" pos:column="64">char<pos:position pos:line="203" pos:column="68"/></name></expr></argument>)<pos:position pos:line="203" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="203" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="204" pos:column="9">strcat<pos:position pos:line="204" pos:column="15"/></name> <argument_list pos:line="204" pos:column="16">(<argument><expr><name pos:line="204" pos:column="17">this_one<pos:position pos:line="204" pos:column="25"/></name> <operator pos:line="204" pos:column="26">+<pos:position pos:line="204" pos:column="27"/></operator> <name pos:line="204" pos:column="28">this_one_len<pos:position pos:line="204" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="42">buf<pos:position pos:line="204" pos:column="45"/></name></expr></argument>)<pos:position pos:line="204" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="47"/></expr_stmt> <comment type="block" pos:line="204" pos:column="48">/* __STRCAT_CHECKED__ */</comment>
	<expr_stmt><expr><name pos:line="205" pos:column="9">this_one_len<pos:position pos:line="205" pos:column="21"/></name> <operator pos:line="205" pos:column="22">+=<pos:position pos:line="205" pos:column="24"/></operator> <name pos:line="205" pos:column="25">blen<pos:position pos:line="205" pos:column="29"/></name></expr>;<pos:position pos:line="205" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="206" pos:column="8"/></block></else></if>
    }<pos:position pos:line="207" pos:column="6"/></block></then></if>
  }<pos:position pos:line="208" pos:column="4"/></block></while> <comment type="block" pos:line="208" pos:column="5">/* while (ftello (in) &lt; off_end) */</comment>

  <comment type="block" pos:line="210" pos:column="3">/* Do we have anything pending?  -- XXX, same code as in above in the loop. */</comment>
  <if pos:line="211" pos:column="3">if <condition pos:line="211" pos:column="6">(<expr><name pos:line="211" pos:column="7">this_one<pos:position pos:line="211" pos:column="15"/></name></expr>)<pos:position pos:line="211" pos:column="16"/></condition><then pos:line="211" pos:column="16">
  <block pos:line="212" pos:column="3">{
    <if pos:line="213" pos:column="5">if <condition pos:line="213" pos:column="8">(<expr><name pos:line="213" pos:column="9">flags<pos:position pos:line="213" pos:column="14"/></name> <operator pos:line="213" pos:column="15">&amp;<pos:position pos:line="213" pos:column="20"/></operator> <name pos:line="213" pos:column="17">CH_DECODE<pos:position pos:line="213" pos:column="26"/></name></expr>)<pos:position pos:line="213" pos:column="27"/></condition><then pos:line="213" pos:column="27"> 
    <block pos:line="214" pos:column="5">{
      <if pos:line="215" pos:column="7">if <condition pos:line="215" pos:column="10">(<expr><operator pos:line="215" pos:column="11">!<pos:position pos:line="215" pos:column="12"/></operator><call><name pos:line="215" pos:column="12">address_header_decode<pos:position pos:line="215" pos:column="33"/></name> <argument_list pos:line="215" pos:column="34">(<argument><expr><operator pos:line="215" pos:column="35">&amp;<pos:position pos:line="215" pos:column="40"/></operator><name pos:line="215" pos:column="36">this_one<pos:position pos:line="215" pos:column="44"/></name></expr></argument>)<pos:position pos:line="215" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="215" pos:column="46"/></condition><then pos:line="215" pos:column="46">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="216" pos:column="9">rfc2047_decode<pos:position pos:line="216" pos:column="23"/></name> <argument_list pos:line="216" pos:column="24">(<argument><expr><operator pos:line="216" pos:column="25">&amp;<pos:position pos:line="216" pos:column="30"/></operator><name pos:line="216" pos:column="26">this_one<pos:position pos:line="216" pos:column="34"/></name></expr></argument>)<pos:position pos:line="216" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="36"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="217" pos:column="7">this_one_len<pos:position pos:line="217" pos:column="19"/></name> <operator pos:line="217" pos:column="20">=<pos:position pos:line="217" pos:column="21"/></operator> <call><name pos:line="217" pos:column="22">mutt_strlen<pos:position pos:line="217" pos:column="33"/></name> <argument_list pos:line="217" pos:column="34">(<argument><expr><name pos:line="217" pos:column="35">this_one<pos:position pos:line="217" pos:column="43"/></name></expr></argument>)<pos:position pos:line="217" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="218" pos:column="6"/></block></then></if>
    
    <if pos:line="220" pos:column="5">if <condition pos:line="220" pos:column="8">(<expr><operator pos:line="220" pos:column="9">!<pos:position pos:line="220" pos:column="10"/></operator><name><name pos:line="220" pos:column="10">headers<pos:position pos:line="220" pos:column="17"/></name><index pos:line="220" pos:column="17">[<expr><name pos:line="220" pos:column="18">x<pos:position pos:line="220" pos:column="19"/></name></expr>]<pos:position pos:line="220" pos:column="20"/></index></name></expr>)<pos:position pos:line="220" pos:column="21"/></condition><then pos:line="220" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="221" pos:column="7">headers<pos:position pos:line="221" pos:column="14"/></name><index pos:line="221" pos:column="14">[<expr><name pos:line="221" pos:column="15">x<pos:position pos:line="221" pos:column="16"/></name></expr>]<pos:position pos:line="221" pos:column="17"/></index></name> <operator pos:line="221" pos:column="18">=<pos:position pos:line="221" pos:column="19"/></operator> <name pos:line="221" pos:column="20">this_one<pos:position pos:line="221" pos:column="28"/></name></expr>;<pos:position pos:line="221" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="222" pos:column="5">else 
    <block pos:line="223" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="224" pos:column="7">int<pos:position pos:line="224" pos:column="10"/></name></type> <name pos:line="224" pos:column="11">hlen<pos:position pos:line="224" pos:column="15"/></name> <init pos:line="224" pos:column="16">= <expr><call><name pos:line="224" pos:column="18">mutt_strlen<pos:position pos:line="224" pos:column="29"/></name> <argument_list pos:line="224" pos:column="30">(<argument><expr><name><name pos:line="224" pos:column="31">headers<pos:position pos:line="224" pos:column="38"/></name><index pos:line="224" pos:column="38">[<expr><name pos:line="224" pos:column="39">x<pos:position pos:line="224" pos:column="40"/></name></expr>]<pos:position pos:line="224" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="224" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="224" pos:column="43"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="226" pos:column="7">safe_realloc<pos:position pos:line="226" pos:column="19"/></name> <argument_list pos:line="226" pos:column="20">(<argument><expr><operator pos:line="226" pos:column="21">&amp;<pos:position pos:line="226" pos:column="26"/></operator><name><name pos:line="226" pos:column="22">headers<pos:position pos:line="226" pos:column="29"/></name><index pos:line="226" pos:column="29">[<expr><name pos:line="226" pos:column="30">x<pos:position pos:line="226" pos:column="31"/></name></expr>]<pos:position pos:line="226" pos:column="32"/></index></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="34">hlen<pos:position pos:line="226" pos:column="38"/></name> <operator pos:line="226" pos:column="39">+<pos:position pos:line="226" pos:column="40"/></operator> <name pos:line="226" pos:column="41">this_one_len<pos:position pos:line="226" pos:column="53"/></name> <operator pos:line="226" pos:column="54">+<pos:position pos:line="226" pos:column="55"/></operator> <sizeof pos:line="226" pos:column="56">sizeof <argument_list pos:line="226" pos:column="63">(<argument><expr><name pos:line="226" pos:column="64">char<pos:position pos:line="226" pos:column="68"/></name></expr></argument>)<pos:position pos:line="226" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="226" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="227" pos:column="7">strcat<pos:position pos:line="227" pos:column="13"/></name> <argument_list pos:line="227" pos:column="14">(<argument><expr><name><name pos:line="227" pos:column="15">headers<pos:position pos:line="227" pos:column="22"/></name><index pos:line="227" pos:column="22">[<expr><name pos:line="227" pos:column="23">x<pos:position pos:line="227" pos:column="24"/></name></expr>]<pos:position pos:line="227" pos:column="25"/></index></name> <operator pos:line="227" pos:column="26">+<pos:position pos:line="227" pos:column="27"/></operator> <name pos:line="227" pos:column="28">hlen<pos:position pos:line="227" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="34">this_one<pos:position pos:line="227" pos:column="42"/></name></expr></argument>)<pos:position pos:line="227" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="44"/></expr_stmt> <comment type="block" pos:line="227" pos:column="45">/* __STRCAT_CHECKED__ */</comment>
      <expr_stmt><expr><call><name pos:line="228" pos:column="7">FREE<pos:position pos:line="228" pos:column="11"/></name> <argument_list pos:line="228" pos:column="12">(<argument><expr><operator pos:line="228" pos:column="13">&amp;<pos:position pos:line="228" pos:column="18"/></operator><name pos:line="228" pos:column="14">this_one<pos:position pos:line="228" pos:column="22"/></name></expr></argument>)<pos:position pos:line="228" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="229" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="231" pos:column="5">this_one<pos:position pos:line="231" pos:column="13"/></name> <operator pos:line="231" pos:column="14">=<pos:position pos:line="231" pos:column="15"/></operator> <name pos:line="231" pos:column="16">NULL<pos:position pos:line="231" pos:column="20"/></name></expr>;<pos:position pos:line="231" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="232" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="234" pos:column="3">/* Now output the headers in order */</comment>
  <for pos:line="235" pos:column="3">for <control pos:line="235" pos:column="7">(<init><expr><name pos:line="235" pos:column="8">x<pos:position pos:line="235" pos:column="9"/></name> <operator pos:line="235" pos:column="10">=<pos:position pos:line="235" pos:column="11"/></operator> <literal type="number" pos:line="235" pos:column="12">0<pos:position pos:line="235" pos:column="13"/></literal></expr>;<pos:position pos:line="235" pos:column="14"/></init> <condition><expr><name pos:line="235" pos:column="15">x<pos:position pos:line="235" pos:column="16"/></name> <operator pos:line="235" pos:column="17">&lt;<pos:position pos:line="235" pos:column="21"/></operator> <name pos:line="235" pos:column="19">hdr_count<pos:position pos:line="235" pos:column="28"/></name></expr>;<pos:position pos:line="235" pos:column="29"/></condition> <incr><expr><name pos:line="235" pos:column="30">x<pos:position pos:line="235" pos:column="31"/></name><operator pos:line="235" pos:column="31">++<pos:position pos:line="235" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="235" pos:column="34"/></control>
  <block pos:line="236" pos:column="3">{
    <if pos:line="237" pos:column="5">if <condition pos:line="237" pos:column="8">(<expr><name><name pos:line="237" pos:column="9">headers<pos:position pos:line="237" pos:column="16"/></name><index pos:line="237" pos:column="16">[<expr><name pos:line="237" pos:column="17">x<pos:position pos:line="237" pos:column="18"/></name></expr>]<pos:position pos:line="237" pos:column="19"/></index></name></expr>)<pos:position pos:line="237" pos:column="20"/></condition><then pos:line="237" pos:column="20">
    <block pos:line="238" pos:column="5">{
<cpp:if pos:line="239" pos:column="1">#<cpp:directive pos:line="239" pos:column="2">if<pos:position pos:line="239" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="239" pos:column="5">0<pos:position pos:line="239" pos:column="6"/></literal></expr></cpp:if>
      if (flags &amp; CH_DECODE)
	rfc2047_decode (&amp;headers[x]);
<cpp:endif pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">endif<pos:position pos:line="242" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="244" pos:column="7">/* We couldn't do the prefixing when reading because RFC 2047
       * decoding may have concatenated lines.
       */</comment>
      
      <if pos:line="248" pos:column="7">if <condition pos:line="248" pos:column="10">(<expr><name pos:line="248" pos:column="11">flags<pos:position pos:line="248" pos:column="16"/></name> <operator pos:line="248" pos:column="17">&amp;<pos:position pos:line="248" pos:column="22"/></operator> <operator pos:line="248" pos:column="19">(<pos:position pos:line="248" pos:column="20"/></operator><name pos:line="248" pos:column="20">CH_DECODE<pos:position pos:line="248" pos:column="29"/></name><operator pos:line="248" pos:column="29">|<pos:position pos:line="248" pos:column="30"/></operator><name pos:line="248" pos:column="30">CH_PREFIX<pos:position pos:line="248" pos:column="39"/></name><operator pos:line="248" pos:column="39">)<pos:position pos:line="248" pos:column="40"/></operator></expr>)<pos:position pos:line="248" pos:column="41"/></condition><then pos:line="248" pos:column="41">
      <block pos:line="249" pos:column="7">{
	<if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><call><name pos:line="250" pos:column="13">mutt_write_one_header<pos:position pos:line="250" pos:column="34"/></name> <argument_list pos:line="250" pos:column="35">(<argument><expr><name pos:line="250" pos:column="36">out<pos:position pos:line="250" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="250" pos:column="41">0<pos:position pos:line="250" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="250" pos:column="44">headers<pos:position pos:line="250" pos:column="51"/></name><index pos:line="250" pos:column="51">[<expr><name pos:line="250" pos:column="52">x<pos:position pos:line="250" pos:column="53"/></name></expr>]<pos:position pos:line="250" pos:column="54"/></index></name></expr></argument>, 
				   <argument><expr><ternary><condition><expr><name pos:line="251" pos:column="36">flags<pos:position pos:line="251" pos:column="41"/></name> <operator pos:line="251" pos:column="42">&amp;<pos:position pos:line="251" pos:column="47"/></operator> <name pos:line="251" pos:column="44">CH_PREFIX<pos:position pos:line="251" pos:column="53"/></name></expr> ?<pos:position pos:line="251" pos:column="55"/></condition><then pos:line="251" pos:column="55"> <expr><name pos:line="251" pos:column="56">prefix<pos:position pos:line="251" pos:column="62"/></name></expr> <pos:position pos:line="251" pos:column="63"/></then><else pos:line="251" pos:column="63">: <expr><literal type="number" pos:line="251" pos:column="65">0<pos:position pos:line="251" pos:column="66"/></literal></expr></else></ternary></expr></argument>,
                                   <argument><expr><call><name pos:line="252" pos:column="36">mutt_window_wrap_cols<pos:position pos:line="252" pos:column="57"/></name> <argument_list pos:line="252" pos:column="58">(<argument><expr><name pos:line="252" pos:column="59">MuttIndexWindow<pos:position pos:line="252" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="76">Wrap<pos:position pos:line="252" pos:column="80"/></name></expr></argument>)<pos:position pos:line="252" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="252" pos:column="83">flags<pos:position pos:line="252" pos:column="88"/></name></expr></argument>)<pos:position pos:line="252" pos:column="89"/></argument_list></call> <operator pos:line="252" pos:column="90">==<pos:position pos:line="252" pos:column="92"/></operator> <operator pos:line="252" pos:column="93">-<pos:position pos:line="252" pos:column="94"/></operator><literal type="number" pos:line="252" pos:column="94">1<pos:position pos:line="252" pos:column="95"/></literal></expr>)<pos:position pos:line="252" pos:column="96"/></condition><then pos:line="252" pos:column="96">
	<block pos:line="253" pos:column="9">{
	  <expr_stmt><expr><name pos:line="254" pos:column="11">error<pos:position pos:line="254" pos:column="16"/></name> <operator pos:line="254" pos:column="17">=<pos:position pos:line="254" pos:column="18"/></operator> <name pos:line="254" pos:column="19">TRUE<pos:position pos:line="254" pos:column="23"/></name></expr>;<pos:position pos:line="254" pos:column="24"/></expr_stmt>
	  <break pos:line="255" pos:column="11">break;<pos:position pos:line="255" pos:column="17"/></break>
	}<pos:position pos:line="256" pos:column="10"/></block></then></if>
      }<pos:position pos:line="257" pos:column="8"/></block></then>
      <else pos:line="258" pos:column="7">else
      <block pos:line="259" pos:column="7">{      
	<if pos:line="260" pos:column="9">if <condition pos:line="260" pos:column="12">(<expr><call><name pos:line="260" pos:column="13">fputs<pos:position pos:line="260" pos:column="18"/></name> <argument_list pos:line="260" pos:column="19">(<argument><expr><name><name pos:line="260" pos:column="20">headers<pos:position pos:line="260" pos:column="27"/></name><index pos:line="260" pos:column="27">[<expr><name pos:line="260" pos:column="28">x<pos:position pos:line="260" pos:column="29"/></name></expr>]<pos:position pos:line="260" pos:column="30"/></index></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="32">out<pos:position pos:line="260" pos:column="35"/></name></expr></argument>)<pos:position pos:line="260" pos:column="36"/></argument_list></call> <operator pos:line="260" pos:column="37">==<pos:position pos:line="260" pos:column="39"/></operator> <name pos:line="260" pos:column="40">EOF<pos:position pos:line="260" pos:column="43"/></name></expr>)<pos:position pos:line="260" pos:column="44"/></condition><then pos:line="260" pos:column="44">
	<block pos:line="261" pos:column="9">{
	  <expr_stmt><expr><name pos:line="262" pos:column="11">error<pos:position pos:line="262" pos:column="16"/></name> <operator pos:line="262" pos:column="17">=<pos:position pos:line="262" pos:column="18"/></operator> <name pos:line="262" pos:column="19">TRUE<pos:position pos:line="262" pos:column="23"/></name></expr>;<pos:position pos:line="262" pos:column="24"/></expr_stmt>
	  <break pos:line="263" pos:column="11">break;<pos:position pos:line="263" pos:column="17"/></break>
	}<pos:position pos:line="264" pos:column="10"/></block></then></if>
      }<pos:position pos:line="265" pos:column="8"/></block></else></if>
    }<pos:position pos:line="266" pos:column="6"/></block></then></if>
  }<pos:position pos:line="267" pos:column="4"/></block></for>

  <comment type="block" pos:line="269" pos:column="3">/* Free in a separate loop to be sure that all headers are freed
   * in case of error. */</comment>
  <for pos:line="271" pos:column="3">for <control pos:line="271" pos:column="7">(<init><expr><name pos:line="271" pos:column="8">x<pos:position pos:line="271" pos:column="9"/></name> <operator pos:line="271" pos:column="10">=<pos:position pos:line="271" pos:column="11"/></operator> <literal type="number" pos:line="271" pos:column="12">0<pos:position pos:line="271" pos:column="13"/></literal></expr>;<pos:position pos:line="271" pos:column="14"/></init> <condition><expr><name pos:line="271" pos:column="15">x<pos:position pos:line="271" pos:column="16"/></name> <operator pos:line="271" pos:column="17">&lt;<pos:position pos:line="271" pos:column="21"/></operator> <name pos:line="271" pos:column="19">hdr_count<pos:position pos:line="271" pos:column="28"/></name></expr>;<pos:position pos:line="271" pos:column="29"/></condition> <incr><expr><name pos:line="271" pos:column="30">x<pos:position pos:line="271" pos:column="31"/></name><operator pos:line="271" pos:column="31">++<pos:position pos:line="271" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="271" pos:column="34"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="272" pos:column="5">FREE<pos:position pos:line="272" pos:column="9"/></name> <argument_list pos:line="272" pos:column="10">(<argument><expr><operator pos:line="272" pos:column="11">&amp;<pos:position pos:line="272" pos:column="16"/></operator><name><name pos:line="272" pos:column="12">headers<pos:position pos:line="272" pos:column="19"/></name><index pos:line="272" pos:column="19">[<expr><name pos:line="272" pos:column="20">x<pos:position pos:line="272" pos:column="21"/></name></expr>]<pos:position pos:line="272" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="272" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="24"/></expr_stmt></block></for>
  <expr_stmt><expr><call><name pos:line="273" pos:column="3">FREE<pos:position pos:line="273" pos:column="7"/></name> <argument_list pos:line="273" pos:column="8">(<argument><expr><operator pos:line="273" pos:column="9">&amp;<pos:position pos:line="273" pos:column="14"/></operator><name pos:line="273" pos:column="10">headers<pos:position pos:line="273" pos:column="17"/></name></expr></argument>)<pos:position pos:line="273" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="19"/></expr_stmt>

  <if pos:line="275" pos:column="3">if <condition pos:line="275" pos:column="6">(<expr><name pos:line="275" pos:column="7">error<pos:position pos:line="275" pos:column="12"/></name></expr>)<pos:position pos:line="275" pos:column="13"/></condition><then pos:line="275" pos:column="13">
    <block type="pseudo"><return pos:line="276" pos:column="5">return <expr><operator pos:line="276" pos:column="12">(<pos:position pos:line="276" pos:column="13"/></operator><operator pos:line="276" pos:column="13">-<pos:position pos:line="276" pos:column="14"/></operator><literal type="number" pos:line="276" pos:column="14">1<pos:position pos:line="276" pos:column="15"/></literal><operator pos:line="276" pos:column="15">)<pos:position pos:line="276" pos:column="16"/></operator></expr>;<pos:position pos:line="276" pos:column="17"/></return></block></then></if>
  <return pos:line="277" pos:column="3">return <expr><operator pos:line="277" pos:column="10">(<pos:position pos:line="277" pos:column="11"/></operator><literal type="number" pos:line="277" pos:column="11">0<pos:position pos:line="277" pos:column="12"/></literal><operator pos:line="277" pos:column="12">)<pos:position pos:line="277" pos:column="13"/></operator></expr>;<pos:position pos:line="277" pos:column="14"/></return>
}<pos:position pos:line="278" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1462_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BUFFER<pos:position pos:line="1" pos:column="7"/></name> <modifier pos:line="1" pos:column="8">*<pos:position pos:line="1" pos:column="9"/></modifier></type><name pos:line="1" pos:column="9">mutt_buffer_from<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">seed<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list> <block pos:line="1" pos:column="39">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">BUFFER<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier></type><name pos:line="2" pos:column="11">b<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">seed<pos:position pos:line="4" pos:column="12"/></name></expr>)<pos:position pos:line="4" pos:column="13"/></condition><then pos:line="4" pos:column="13">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">NULL<pos:position pos:line="5" pos:column="16"/></name></expr>;<pos:position pos:line="5" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="7" pos:column="3">b<pos:position pos:line="7" pos:column="4"/></name> <operator pos:line="7" pos:column="5">=<pos:position pos:line="7" pos:column="6"/></operator> <call><name pos:line="7" pos:column="7">mutt_buffer_new<pos:position pos:line="7" pos:column="22"/></name> <argument_list pos:line="7" pos:column="23">()<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">b<pos:position pos:line="8" pos:column="4"/></name><operator pos:line="8" pos:column="4">-&gt;<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="6">data<pos:position pos:line="8" pos:column="10"/></name></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <call><name pos:line="8" pos:column="13">safe_strdup<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">seed<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">b<pos:position pos:line="9" pos:column="4"/></name><operator pos:line="9" pos:column="4">-&gt;<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="6">dsize<pos:position pos:line="9" pos:column="11"/></name></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">mutt_strlen<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">seed<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">b<pos:position pos:line="10" pos:column="4"/></name><operator pos:line="10" pos:column="4">-&gt;<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="6">dptr<pos:position pos:line="10" pos:column="10"/></name></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">char<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></operator><operator pos:line="10" pos:column="20">)<pos:position pos:line="10" pos:column="21"/></operator> <name><name pos:line="10" pos:column="22">b<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">data<pos:position pos:line="10" pos:column="29"/></name></name> <operator pos:line="10" pos:column="30">+<pos:position pos:line="10" pos:column="31"/></operator> <name><name pos:line="10" pos:column="32">b<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">dsize<pos:position pos:line="10" pos:column="40"/></name></name></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">b<pos:position pos:line="11" pos:column="11"/></name></expr>;<pos:position pos:line="11" pos:column="12"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1278_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CONTENT<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type><name pos:line="1" pos:column="10">mutt_get_content_info<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">fname<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">BODY<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">b<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">CONTENT<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">info<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CONTENT_STATE<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">state<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fp<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">fromcode<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">tocode<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">buffer<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><literal type="number" pos:line="8" pos:column="15">100<pos:position pos:line="8" pos:column="18"/></literal></expr>]<pos:position pos:line="8" pos:column="19"/></index></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name></type> <name><name pos:line="9" pos:column="8">chsbuf<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><name pos:line="9" pos:column="15">STRING<pos:position pos:line="9" pos:column="21"/></name></expr>]<pos:position pos:line="9" pos:column="22"/></index></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">r<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="12" pos:column="3">struct<pos:position pos:line="12" pos:column="9"/></name> <name pos:line="12" pos:column="10">stat<pos:position pos:line="12" pos:column="14"/></name></name></type> <name pos:line="12" pos:column="15">sb<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><name pos:line="14" pos:column="6">b<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">&amp;&amp;<pos:position pos:line="14" pos:column="18"/></operator> <operator pos:line="14" pos:column="11">!<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">fname<pos:position pos:line="14" pos:column="17"/></name></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="19">fname<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <name><name pos:line="14" pos:column="27">b<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">filename<pos:position pos:line="14" pos:column="38"/></name></name></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">stat<pos:position pos:line="16" pos:column="11"/></name> <argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">fname<pos:position pos:line="16" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="20">&amp;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="21">sb<pos:position pos:line="16" pos:column="23"/></name></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <operator pos:line="16" pos:column="28">-<pos:position pos:line="16" pos:column="29"/></operator><literal type="number" pos:line="16" pos:column="29">1<pos:position pos:line="16" pos:column="30"/></literal></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">mutt_error<pos:position pos:line="18" pos:column="15"/></name> <argument_list pos:line="18" pos:column="16">(<argument><expr><call><name pos:line="18" pos:column="17">_<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><literal type="string" pos:line="18" pos:column="19">"Can't stat %s: %s"<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">fname<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="48">strerror<pos:position pos:line="18" pos:column="56"/></name> <argument_list pos:line="18" pos:column="57">(<argument><expr><name pos:line="18" pos:column="58">errno<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><call><name pos:line="22" pos:column="8">S_ISREG<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name><name pos:line="22" pos:column="16">sb<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">st_mode<pos:position pos:line="22" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">mutt_error<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><call><name pos:line="24" pos:column="17">_<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><literal type="string" pos:line="24" pos:column="19">"%s isn't a regular file."<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">fname<pos:position pos:line="24" pos:column="53"/></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">NULL<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><operator pos:line="28" pos:column="7">(<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">fp<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">fopen<pos:position pos:line="28" pos:column="18"/></name> <argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">fname<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="27">"r"<pos:position pos:line="28" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call><operator pos:line="28" pos:column="31">)<pos:position pos:line="28" pos:column="32"/></operator> <operator pos:line="28" pos:column="33">==<pos:position pos:line="28" pos:column="35"/></operator> <name pos:line="28" pos:column="36">NULL<pos:position pos:line="28" pos:column="40"/></name></expr>)<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41">
  <block pos:line="29" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">dprint<pos:position pos:line="30" pos:column="11"/></name> <argument_list pos:line="30" pos:column="12">(<argument><expr><literal type="number" pos:line="30" pos:column="13">1<pos:position pos:line="30" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">debugfile<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">,<pos:position pos:line="30" pos:column="27"/></operator> <literal type="string" pos:line="30" pos:column="28">"mutt_get_content_info: %s: %s (errno %d).\n"<pos:position pos:line="30" pos:column="73"/></literal><operator pos:line="30" pos:column="73">,<pos:position pos:line="30" pos:column="74"/></operator>
		<name pos:line="31" pos:column="17">fname<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">,<pos:position pos:line="31" pos:column="23"/></operator> <call><name pos:line="31" pos:column="24">strerror<pos:position pos:line="31" pos:column="32"/></name> <argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">errno<pos:position pos:line="31" pos:column="39"/></name></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call><operator pos:line="31" pos:column="40">,<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="42">errno<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">)<pos:position pos:line="31" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">NULL<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">)<pos:position pos:line="32" pos:column="18"/></operator></expr>;<pos:position pos:line="32" pos:column="19"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="35" pos:column="3">info<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">safe_calloc<pos:position pos:line="35" pos:column="21"/></name> <argument_list pos:line="35" pos:column="22">(<argument><expr><literal type="number" pos:line="35" pos:column="23">1<pos:position pos:line="35" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="26">sizeof <argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">CONTENT<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">memset<pos:position pos:line="36" pos:column="9"/></name> <argument_list pos:line="36" pos:column="10">(<argument><expr><operator pos:line="36" pos:column="11">&amp;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="12">state<pos:position pos:line="36" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="22">sizeof <argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">state<pos:position pos:line="36" pos:column="35"/></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">b<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">!=<pos:position pos:line="38" pos:column="11"/></operator> <name pos:line="38" pos:column="12">NULL<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">&amp;&amp;<pos:position pos:line="38" pos:column="27"/></operator> <name><name pos:line="38" pos:column="20">b<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">type<pos:position pos:line="38" pos:column="27"/></name></name> <operator pos:line="38" pos:column="28">==<pos:position pos:line="38" pos:column="30"/></operator> <name pos:line="38" pos:column="31">TYPETEXT<pos:position pos:line="38" pos:column="39"/></name> <operator pos:line="38" pos:column="40">&amp;&amp;<pos:position pos:line="38" pos:column="50"/></operator> <operator pos:line="38" pos:column="43">(<pos:position pos:line="38" pos:column="44"/></operator><operator pos:line="38" pos:column="44">!<pos:position pos:line="38" pos:column="45"/></operator><name><name pos:line="38" pos:column="45">b<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">-&gt;<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="48">noconv<pos:position pos:line="38" pos:column="54"/></name></name> <operator pos:line="38" pos:column="55">&amp;&amp;<pos:position pos:line="38" pos:column="65"/></operator> <operator pos:line="38" pos:column="58">!<pos:position pos:line="38" pos:column="59"/></operator><name><name pos:line="38" pos:column="59">b<pos:position pos:line="38" pos:column="60"/></name><operator pos:line="38" pos:column="60">-&gt;<pos:position pos:line="38" pos:column="65"/></operator><name pos:line="38" pos:column="62">force_charset<pos:position pos:line="38" pos:column="75"/></name></name><operator pos:line="38" pos:column="75">)<pos:position pos:line="38" pos:column="76"/></operator></expr>)<pos:position pos:line="38" pos:column="77"/></condition><then pos:line="38" pos:column="77">
  <block pos:line="39" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">char<pos:position pos:line="40" pos:column="9"/></name> <modifier pos:line="40" pos:column="10">*<pos:position pos:line="40" pos:column="11"/></modifier></type><name pos:line="40" pos:column="11">chs<pos:position pos:line="40" pos:column="14"/></name> <init pos:line="40" pos:column="15">= <expr><call><name pos:line="40" pos:column="17">mutt_get_parameter<pos:position pos:line="40" pos:column="35"/></name> <argument_list pos:line="40" pos:column="36">(<argument><expr><literal type="string" pos:line="40" pos:column="37">"charset"<pos:position pos:line="40" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="48">b<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">parameter<pos:position pos:line="40" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">char<pos:position pos:line="41" pos:column="9"/></name> <modifier pos:line="41" pos:column="10">*<pos:position pos:line="41" pos:column="11"/></modifier></type><name pos:line="41" pos:column="11">fchs<pos:position pos:line="41" pos:column="15"/></name> <init pos:line="41" pos:column="16">= <expr><ternary><condition><expr><name><name pos:line="41" pos:column="18">b<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">-&gt;<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="21">use_disp<pos:position pos:line="41" pos:column="29"/></name></name></expr> ?<pos:position pos:line="41" pos:column="31"/></condition><then pos:line="41" pos:column="31"> <expr><operator pos:line="41" pos:column="32">(<pos:position pos:line="41" pos:column="33"/></operator><ternary><condition><expr><operator pos:line="41" pos:column="33">(<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="34">AttachCharset<pos:position pos:line="41" pos:column="47"/></name> <operator pos:line="41" pos:column="48">&amp;&amp;<pos:position pos:line="41" pos:column="58"/></operator> <operator pos:line="41" pos:column="51">*<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="52">AttachCharset<pos:position pos:line="41" pos:column="65"/></name><operator pos:line="41" pos:column="65">)<pos:position pos:line="41" pos:column="66"/></operator></expr> ?<pos:position pos:line="41" pos:column="68"/></condition><then pos:line="41" pos:column="68">
                                <expr><name pos:line="42" pos:column="33">AttachCharset<pos:position pos:line="42" pos:column="46"/></name></expr> <pos:position pos:line="42" pos:column="47"/></then><else pos:line="42" pos:column="47">: <expr><name pos:line="42" pos:column="49">Charset<pos:position pos:line="42" pos:column="56"/></name></expr></else></ternary><operator pos:line="42" pos:column="56">)<pos:position pos:line="42" pos:column="57"/></operator></expr> <pos:position pos:line="42" pos:column="58"/></then><else pos:line="42" pos:column="58">: <expr><name pos:line="42" pos:column="60">Charset<pos:position pos:line="42" pos:column="67"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="42" pos:column="68"/></decl_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">Charset<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">&amp;&amp;<pos:position pos:line="43" pos:column="27"/></operator> <operator pos:line="43" pos:column="20">(<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="21">chs<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">||<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="28">SendCharset<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">)<pos:position pos:line="43" pos:column="40"/></operator> <operator pos:line="43" pos:column="41">&amp;&amp;<pos:position pos:line="43" pos:column="51"/></operator>
        <call><name pos:line="44" pos:column="9">convert_file_from_to<pos:position pos:line="44" pos:column="29"/></name> <argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">fp<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="35">fchs<pos:position pos:line="44" pos:column="39"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="44" pos:column="41">chs<pos:position pos:line="44" pos:column="44"/></name></expr> ?<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46"> <expr><name pos:line="44" pos:column="47">chs<pos:position pos:line="44" pos:column="50"/></name></expr> <pos:position pos:line="44" pos:column="51"/></then><else pos:line="44" pos:column="51">: <expr><name pos:line="44" pos:column="53">SendCharset<pos:position pos:line="44" pos:column="64"/></name></expr></else></ternary></expr></argument>,
                              <argument><expr><operator pos:line="45" pos:column="31">&amp;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="32">fromcode<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="42">&amp;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="43">tocode<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="51">info<pos:position pos:line="45" pos:column="55"/></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call> <operator pos:line="45" pos:column="57">!=<pos:position pos:line="45" pos:column="59"/></operator> <call pos:line="45" pos:column="60">(<name pos:line="45" pos:column="61">size_t<pos:position pos:line="45" pos:column="67"/></name>)<argument_list pos:line="45" pos:column="68">(<argument><expr><operator pos:line="45" pos:column="69">-<pos:position pos:line="45" pos:column="70"/></operator><literal type="number" pos:line="45" pos:column="70">1<pos:position pos:line="45" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="73"/></condition><then pos:line="45" pos:column="73">
    <block pos:line="46" pos:column="5">{
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><operator pos:line="47" pos:column="11">!<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="12">chs<pos:position pos:line="47" pos:column="15"/></name></expr>)<pos:position pos:line="47" pos:column="16"/></condition><then pos:line="47" pos:column="16">
      <block pos:line="48" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">mutt_canonical_charset<pos:position pos:line="49" pos:column="31"/></name> <argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">chsbuf<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="41">sizeof <argument_list pos:line="49" pos:column="48">(<argument><expr><name pos:line="49" pos:column="49">chsbuf<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="49" pos:column="58">tocode<pos:position pos:line="49" pos:column="64"/></name></expr></argument>)<pos:position pos:line="49" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">mutt_set_parameter<pos:position pos:line="50" pos:column="27"/></name> <argument_list pos:line="50" pos:column="28">(<argument><expr><literal type="string" pos:line="50" pos:column="29">"charset"<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="40">chsbuf<pos:position pos:line="50" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="48">&amp;<pos:position pos:line="50" pos:column="53"/></operator><name><name pos:line="50" pos:column="49">b<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">-&gt;<pos:position pos:line="50" pos:column="55"/></operator><name pos:line="50" pos:column="52">parameter<pos:position pos:line="50" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">FREE<pos:position pos:line="52" pos:column="11"/></name> <argument_list pos:line="52" pos:column="12">(<argument><expr><operator pos:line="52" pos:column="13">&amp;<pos:position pos:line="52" pos:column="18"/></operator><name><name pos:line="52" pos:column="14">b<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">-&gt;<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="17">charset<pos:position pos:line="52" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="53" pos:column="7">b<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">charset<pos:position pos:line="53" pos:column="17"/></name></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <name pos:line="53" pos:column="20">fromcode<pos:position pos:line="53" pos:column="28"/></name></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">FREE<pos:position pos:line="54" pos:column="11"/></name> <argument_list pos:line="54" pos:column="12">(<argument><expr><operator pos:line="54" pos:column="13">&amp;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="14">tocode<pos:position pos:line="54" pos:column="20"/></name></expr></argument>)<pos:position pos:line="54" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">safe_fclose<pos:position pos:line="55" pos:column="18"/></name> <argument_list pos:line="55" pos:column="19">(<argument><expr><operator pos:line="55" pos:column="20">&amp;<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="21">fp<pos:position pos:line="55" pos:column="23"/></name></expr></argument>)<pos:position pos:line="55" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>
      <return pos:line="56" pos:column="7">return <expr><name pos:line="56" pos:column="14">info<pos:position pos:line="56" pos:column="18"/></name></expr>;<pos:position pos:line="56" pos:column="19"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="60" pos:column="3">rewind<pos:position pos:line="60" pos:column="9"/></name> <argument_list pos:line="60" pos:column="10">(<argument><expr><name pos:line="60" pos:column="11">fp<pos:position pos:line="60" pos:column="13"/></name></expr></argument>)<pos:position pos:line="60" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="15"/></expr_stmt>
  <while pos:line="61" pos:column="3">while <condition pos:line="61" pos:column="9">(<expr><operator pos:line="61" pos:column="10">(<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="11">r<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <call><name pos:line="61" pos:column="15">fread<pos:position pos:line="61" pos:column="20"/></name> <argument_list pos:line="61" pos:column="21">(<argument><expr><name pos:line="61" pos:column="22">buffer<pos:position pos:line="61" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="30">1<pos:position pos:line="61" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="33">sizeof<argument_list pos:line="61" pos:column="39">(<argument><expr><name pos:line="61" pos:column="40">buffer<pos:position pos:line="61" pos:column="46"/></name></expr></argument>)<pos:position pos:line="61" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="61" pos:column="49">fp<pos:position pos:line="61" pos:column="51"/></name></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></call><operator pos:line="61" pos:column="52">)<pos:position pos:line="61" pos:column="53"/></operator></expr>)<pos:position pos:line="61" pos:column="54"/></condition>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="5">update_content_info<pos:position pos:line="62" pos:column="24"/></name> <argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">info<pos:position pos:line="62" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="32">&amp;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="33">state<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="40">buffer<pos:position pos:line="62" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="48">r<pos:position pos:line="62" pos:column="49"/></name></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="51"/></expr_stmt></block></while>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">update_content_info<pos:position pos:line="63" pos:column="22"/></name> <argument_list pos:line="63" pos:column="23">(<argument><expr><name pos:line="63" pos:column="24">info<pos:position pos:line="63" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="30">&amp;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="31">state<pos:position pos:line="63" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="38">0<pos:position pos:line="63" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="41">0<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="65" pos:column="3">safe_fclose<pos:position pos:line="65" pos:column="14"/></name> <argument_list pos:line="65" pos:column="15">(<argument><expr><operator pos:line="65" pos:column="16">&amp;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="17">fp<pos:position pos:line="65" pos:column="19"/></name></expr></argument>)<pos:position pos:line="65" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="21"/></expr_stmt>

  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name pos:line="67" pos:column="7">b<pos:position pos:line="67" pos:column="8"/></name> <operator pos:line="67" pos:column="9">!=<pos:position pos:line="67" pos:column="11"/></operator> <name pos:line="67" pos:column="12">NULL<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">&amp;&amp;<pos:position pos:line="67" pos:column="27"/></operator> <name><name pos:line="67" pos:column="20">b<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">type<pos:position pos:line="67" pos:column="27"/></name></name> <operator pos:line="67" pos:column="28">==<pos:position pos:line="67" pos:column="30"/></operator> <name pos:line="67" pos:column="31">TYPETEXT<pos:position pos:line="67" pos:column="39"/></name> <operator pos:line="67" pos:column="40">&amp;&amp;<pos:position pos:line="67" pos:column="50"/></operator> <operator pos:line="67" pos:column="43">(<pos:position pos:line="67" pos:column="44"/></operator><operator pos:line="67" pos:column="44">!<pos:position pos:line="67" pos:column="45"/></operator><name><name pos:line="67" pos:column="45">b<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">-&gt;<pos:position pos:line="67" pos:column="51"/></operator><name pos:line="67" pos:column="48">noconv<pos:position pos:line="67" pos:column="54"/></name></name> <operator pos:line="67" pos:column="55">&amp;&amp;<pos:position pos:line="67" pos:column="65"/></operator> <operator pos:line="67" pos:column="58">!<pos:position pos:line="67" pos:column="59"/></operator><name><name pos:line="67" pos:column="59">b<pos:position pos:line="67" pos:column="60"/></name><operator pos:line="67" pos:column="60">-&gt;<pos:position pos:line="67" pos:column="65"/></operator><name pos:line="67" pos:column="62">force_charset<pos:position pos:line="67" pos:column="75"/></name></name><operator pos:line="67" pos:column="75">)<pos:position pos:line="67" pos:column="76"/></operator></expr>)<pos:position pos:line="67" pos:column="77"/></condition><then pos:line="67" pos:column="77">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="5">mutt_set_parameter<pos:position pos:line="68" pos:column="23"/></name> <argument_list pos:line="68" pos:column="24">(<argument><expr><literal type="string" pos:line="68" pos:column="25">"charset"<pos:position pos:line="68" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="68" pos:column="36">(<pos:position pos:line="68" pos:column="37"/></operator><ternary><condition><expr><operator pos:line="68" pos:column="37">!<pos:position pos:line="68" pos:column="38"/></operator><name><name pos:line="68" pos:column="38">info<pos:position pos:line="68" pos:column="42"/></name><operator pos:line="68" pos:column="42">-&gt;<pos:position pos:line="68" pos:column="47"/></operator><name pos:line="68" pos:column="44">hibin<pos:position pos:line="68" pos:column="49"/></name></name></expr> ?<pos:position pos:line="68" pos:column="51"/></condition><then pos:line="68" pos:column="51"> <expr><literal type="string" pos:line="68" pos:column="52">"us-ascii"<pos:position pos:line="68" pos:column="62"/></literal></expr> <pos:position pos:line="68" pos:column="63"/></then><else pos:line="68" pos:column="63">:
				    <expr><ternary><condition><expr><name pos:line="69" pos:column="37">Charset<pos:position pos:line="69" pos:column="44"/></name>  <operator pos:line="69" pos:column="46">&amp;&amp;<pos:position pos:line="69" pos:column="56"/></operator> <operator pos:line="69" pos:column="49">!<pos:position pos:line="69" pos:column="50"/></operator><call><name pos:line="69" pos:column="50">mutt_is_us_ascii<pos:position pos:line="69" pos:column="66"/></name> <argument_list pos:line="69" pos:column="67">(<argument><expr><name pos:line="69" pos:column="68">Charset<pos:position pos:line="69" pos:column="75"/></name></expr></argument>)<pos:position pos:line="69" pos:column="76"/></argument_list></call></expr> ?<pos:position pos:line="69" pos:column="78"/></condition><then pos:line="69" pos:column="78"> <expr><name pos:line="69" pos:column="79">Charset<pos:position pos:line="69" pos:column="86"/></name></expr> <pos:position pos:line="69" pos:column="87"/></then><else pos:line="69" pos:column="87">: <expr><literal type="string" pos:line="69" pos:column="89">"unknown-8bit"<pos:position pos:line="69" pos:column="103"/></literal></expr></else></ternary></expr></else></ternary><operator pos:line="69" pos:column="103">)<pos:position pos:line="69" pos:column="104"/></operator></expr></argument>,
			<argument><expr><operator pos:line="70" pos:column="25">&amp;<pos:position pos:line="70" pos:column="30"/></operator><name><name pos:line="70" pos:column="26">b<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">-&gt;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="29">parameter<pos:position pos:line="70" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="40"/></expr_stmt></block></then></if>

  <return pos:line="72" pos:column="3">return <expr><name pos:line="72" pos:column="10">info<pos:position pos:line="72" pos:column="14"/></name></expr>;<pos:position pos:line="72" pos:column="15"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

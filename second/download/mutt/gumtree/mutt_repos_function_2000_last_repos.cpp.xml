<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2000_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_copy_messages<pos:position pos:line="1" pos:column="23"/></name> <argument_list pos:line="1" pos:column="24">(<argument><expr><name pos:line="1" pos:column="25">CONTEXT<pos:position pos:line="1" pos:column="32"/></name><operator pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></operator> <name pos:line="1" pos:column="34">ctx<pos:position pos:line="1" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="39">HEADER<pos:position pos:line="1" pos:column="45"/></name><operator pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></operator> <name pos:line="1" pos:column="47">h<pos:position pos:line="1" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name><operator pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></operator> <name pos:line="1" pos:column="56">dest<pos:position pos:line="1" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name> <operator pos:line="1" pos:column="66">delete<pos:position pos:line="1" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="1" pos:column="73"/></argument_list>
<argument_list pos:line="2" pos:column="1">{
  <argument><expr><name pos:line="3" pos:column="3">IMAP_DATA<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></operator> <name pos:line="3" pos:column="14">idata<pos:position pos:line="3" pos:column="19"/></name></expr></argument>;
  <argument><expr><name pos:line="4" pos:column="3">BUFFER<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">cmd<pos:position pos:line="4" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="15">sync_cmd<pos:position pos:line="4" pos:column="23"/></name></expr></argument>;
  <argument><expr><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <name><name pos:line="5" pos:column="8">mbox<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">LONG_STRING<pos:position pos:line="5" pos:column="24"/></name></expr>]<pos:position pos:line="5" pos:column="25"/></index></name></expr></argument>;
  <argument><expr><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <name><name pos:line="6" pos:column="8">mmbox<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">LONG_STRING<pos:position pos:line="6" pos:column="25"/></name></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></expr></argument>;
  <argument><expr><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <name><name pos:line="7" pos:column="8">prompt<pos:position pos:line="7" pos:column="14"/></name><index pos:line="7" pos:column="14">[<expr><name pos:line="7" pos:column="15">LONG_STRING<pos:position pos:line="7" pos:column="26"/></name></expr>]<pos:position pos:line="7" pos:column="27"/></index></name></expr></argument>;
  <argument><expr><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name> <name pos:line="8" pos:column="7">rc<pos:position pos:line="8" pos:column="9"/></name></expr></argument>;
  <argument><expr><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name> <name pos:line="9" pos:column="7">n<pos:position pos:line="9" pos:column="8"/></name></expr></argument>;
  <argument><expr><name pos:line="10" pos:column="3">IMAP_MBOX<pos:position pos:line="10" pos:column="12"/></name> <name pos:line="10" pos:column="13">mx<pos:position pos:line="10" pos:column="15"/></name></expr></argument>;
  <argument><expr><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name> <name pos:line="11" pos:column="7">err_continue<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">MUTT_NO<pos:position pos:line="11" pos:column="29"/></name></expr></argument>;
  <argument><expr><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name> <name pos:line="12" pos:column="7">triedcreate<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>;

  <argument><expr><name pos:line="14" pos:column="3">idata<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <operator pos:line="14" pos:column="11">(<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">IMAP_DATA<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><operator pos:line="14" pos:column="22">)<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="24">ctx<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">data<pos:position pos:line="14" pos:column="33"/></name></name></expr></argument>;

  if <argument><expr><operator pos:line="16" pos:column="6">(<pos:position pos:line="16" pos:column="7"/></operator><call><name pos:line="16" pos:column="7">imap_parse_path<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">dest<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="30">&amp;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="31">mx<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call><operator pos:line="16" pos:column="34">)<pos:position pos:line="16" pos:column="35"/></operator>
  <block pos:line="17" pos:column="3">{
    <expr><call><name pos:line="18" pos:column="5">dprint<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">debugfile<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">,<pos:position pos:line="18" pos:column="27"/></operator> <literal type="string" pos:line="18" pos:column="28">"imap_copy_messages: bad destination %s\n"<pos:position pos:line="18" pos:column="70"/></literal><operator pos:line="18" pos:column="70">,<pos:position pos:line="18" pos:column="71"/></operator> <name pos:line="18" pos:column="72">dest<pos:position pos:line="18" pos:column="76"/></name><operator pos:line="18" pos:column="76">)<pos:position pos:line="18" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">-<pos:position pos:line="19" pos:column="13"/></operator><literal type="number" pos:line="19" pos:column="13">1<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></expr></argument>

  <comment type="block" pos:line="22" pos:column="3">/* check that the save-to folder is in the same account */</comment>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">!<pos:position pos:line="23" pos:column="8"/></operator><call><name pos:line="23" pos:column="8">mutt_account_match<pos:position pos:line="23" pos:column="26"/></name> <argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><operator pos:line="23" pos:column="29">(<pos:position pos:line="23" pos:column="30"/></operator><name><name pos:line="23" pos:column="30">CTX_DATA<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">conn<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-&gt;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="46">account<pos:position pos:line="23" pos:column="53"/></name></name><operator pos:line="23" pos:column="53">)<pos:position pos:line="23" pos:column="54"/></operator></expr></argument>, <argument><expr><operator pos:line="23" pos:column="56">&amp;<pos:position pos:line="23" pos:column="61"/></operator><operator pos:line="23" pos:column="57">(<pos:position pos:line="23" pos:column="58"/></operator><name><name pos:line="23" pos:column="58">mx<pos:position pos:line="23" pos:column="60"/></name><operator pos:line="23" pos:column="60">.<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="61">account<pos:position pos:line="23" pos:column="68"/></name></name><operator pos:line="23" pos:column="68">)<pos:position pos:line="23" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="71"/></condition><then pos:line="23" pos:column="71">
  <expr_stmt><expr><block pos:line="24" pos:column="3">{
    <expr><call><name pos:line="25" pos:column="5">dprint<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">(<argument><expr><literal type="number" pos:line="25" pos:column="13">3<pos:position pos:line="25" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="16">(<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">debugfile<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">,<pos:position pos:line="25" pos:column="27"/></operator> <literal type="string" pos:line="25" pos:column="28">"imap_copy_messages: %s not same server as %s\n"<pos:position pos:line="25" pos:column="76"/></literal><operator pos:line="25" pos:column="76">,<pos:position pos:line="25" pos:column="77"/></operator>
      <name pos:line="26" pos:column="7">dest<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">,<pos:position pos:line="26" pos:column="12"/></operator> <name><name pos:line="26" pos:column="13">ctx<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">path<pos:position pos:line="26" pos:column="22"/></name></name><operator pos:line="26" pos:column="22">)<pos:position pos:line="26" pos:column="23"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></block></expr></expr_stmt></then></if></argument_list></decl></decl_stmt>
    <return pos:line="27" pos:column="5">return <expr><literal type="number" pos:line="27" pos:column="12">1<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></return>
  }

  if <expr_stmt><expr><operator pos:line="30" pos:column="6">(<pos:position pos:line="30" pos:column="7"/></operator><name pos:line="30" pos:column="7">h<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">&amp;&amp;<pos:position pos:line="30" pos:column="19"/></operator> <name><name pos:line="30" pos:column="12">h<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">attach_del<pos:position pos:line="30" pos:column="25"/></name></name><operator pos:line="30" pos:column="25">)<pos:position pos:line="30" pos:column="26"/></operator>
  <block pos:line="31" pos:column="3">{
    <expr><call><name pos:line="32" pos:column="5">dprint<pos:position pos:line="32" pos:column="11"/></name> <argument_list pos:line="32" pos:column="12">(<argument><expr><literal type="number" pos:line="32" pos:column="13">3<pos:position pos:line="32" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">debugfile<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">,<pos:position pos:line="32" pos:column="27"/></operator> <literal type="string" pos:line="32" pos:column="28">"imap_copy_messages: Message contains attachments to be deleted\n"<pos:position pos:line="32" pos:column="94"/></literal><operator pos:line="32" pos:column="94">)<pos:position pos:line="32" pos:column="95"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="96"/></argument_list></call></expr>;
    <return pos:line="33" pos:column="5">return <expr><literal type="number" pos:line="33" pos:column="12">1<pos:position pos:line="33" pos:column="13"/></literal></expr>;<pos:position pos:line="33" pos:column="14"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></expr></expr_stmt>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">imap_fix_path<pos:position pos:line="36" pos:column="16"/></name> <argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">idata<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="25">mx<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">.<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">mbox<pos:position pos:line="36" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">mbox<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="40">sizeof <argument_list pos:line="36" pos:column="47">(<argument><expr><name pos:line="36" pos:column="48">mbox<pos:position pos:line="36" pos:column="52"/></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><operator pos:line="37" pos:column="7">!<pos:position pos:line="37" pos:column="8"/></operator><operator pos:line="37" pos:column="8">*<pos:position pos:line="37" pos:column="9"/></operator><name pos:line="37" pos:column="9">mbox<pos:position pos:line="37" pos:column="13"/></name></expr>)<pos:position pos:line="37" pos:column="14"/></condition><then pos:line="37" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="5">strfcpy<pos:position pos:line="38" pos:column="12"/></name> <argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">mbox<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="20">"INBOX"<pos:position pos:line="38" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="29">sizeof <argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">mbox<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">imap_munge_mbox_name<pos:position pos:line="39" pos:column="23"/></name> <argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">idata<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">mmbox<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="39">sizeof <argument_list pos:line="39" pos:column="46">(<argument><expr><name pos:line="39" pos:column="47">mmbox<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="39" pos:column="55">mbox<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>

  <comment type="block" pos:line="41" pos:column="3">/* loop in case of TRYCREATE */</comment>
  <do pos:line="42" pos:column="3">do
  <block pos:line="43" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">mutt_buffer_init<pos:position pos:line="44" pos:column="21"/></name> <argument_list pos:line="44" pos:column="22">(<argument><expr><operator pos:line="44" pos:column="23">&amp;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="24">sync_cmd<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">mutt_buffer_init<pos:position pos:line="45" pos:column="21"/></name> <argument_list pos:line="45" pos:column="22">(<argument><expr><operator pos:line="45" pos:column="23">&amp;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="24">cmd<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/* Null HEADER* means copy tagged messages */</comment>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">!<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">h<pos:position pos:line="48" pos:column="11"/></name></expr>)<pos:position pos:line="48" pos:column="12"/></condition><then pos:line="48" pos:column="12">
    <block pos:line="49" pos:column="5">{
      <comment type="block" pos:line="50" pos:column="7">/* if any messages have attachments to delete, fall through to FETCH
       * and APPEND. TODO: Copy what we can with COPY, fall through for the
       * remainder. */</comment>
      <for pos:line="53" pos:column="7">for <control pos:line="53" pos:column="11">(<init><expr><name pos:line="53" pos:column="12">n<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></init> <condition><expr><name pos:line="53" pos:column="19">n<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">&lt;<pos:position pos:line="53" pos:column="25"/></operator> <name><name pos:line="53" pos:column="23">ctx<pos:position pos:line="53" pos:column="26"/></name><operator pos:line="53" pos:column="26">-&gt;<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="28">msgcount<pos:position pos:line="53" pos:column="36"/></name></name></expr>;<pos:position pos:line="53" pos:column="37"/></condition> <incr><expr><name pos:line="53" pos:column="38">n<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">++<pos:position pos:line="53" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="53" pos:column="42"/></control>
      <block pos:line="54" pos:column="7">{
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">ctx<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">hdrs<pos:position pos:line="55" pos:column="22"/></name><index pos:line="55" pos:column="22">[<expr><name pos:line="55" pos:column="23">n<pos:position pos:line="55" pos:column="24"/></name></expr>]<pos:position pos:line="55" pos:column="25"/></index></name><operator pos:line="55" pos:column="25">-&gt;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="27">tagged<pos:position pos:line="55" pos:column="33"/></name> <operator pos:line="55" pos:column="34">&amp;&amp;<pos:position pos:line="55" pos:column="44"/></operator> <name><name pos:line="55" pos:column="37">ctx<pos:position pos:line="55" pos:column="40"/></name><operator pos:line="55" pos:column="40">-&gt;<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="42">hdrs<pos:position pos:line="55" pos:column="46"/></name><index pos:line="55" pos:column="46">[<expr><name pos:line="55" pos:column="47">n<pos:position pos:line="55" pos:column="48"/></name></expr>]<pos:position pos:line="55" pos:column="49"/></index></name><operator pos:line="55" pos:column="49">-&gt;<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="51">attach_del<pos:position pos:line="55" pos:column="61"/></name></expr>)<pos:position pos:line="55" pos:column="62"/></condition><then pos:line="55" pos:column="62">
        <block pos:line="56" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="57" pos:column="11">dprint<pos:position pos:line="57" pos:column="17"/></name> <argument_list pos:line="57" pos:column="18">(<argument><expr><literal type="number" pos:line="57" pos:column="19">3<pos:position pos:line="57" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="22">(<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">debugfile<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">,<pos:position pos:line="57" pos:column="33"/></operator> <literal type="string" pos:line="57" pos:column="34">"imap_copy_messages: Message contains attachments to be deleted\n"<pos:position pos:line="57" pos:column="100"/></literal><operator pos:line="57" pos:column="100">)<pos:position pos:line="57" pos:column="101"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="103"/></expr_stmt>
          <return pos:line="58" pos:column="11">return <expr><literal type="number" pos:line="58" pos:column="18">1<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>

        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">ctx<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">hdrs<pos:position pos:line="61" pos:column="22"/></name><index pos:line="61" pos:column="22">[<expr><name pos:line="61" pos:column="23">n<pos:position pos:line="61" pos:column="24"/></name></expr>]<pos:position pos:line="61" pos:column="25"/></index></name><operator pos:line="61" pos:column="25">-&gt;<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="27">tagged<pos:position pos:line="61" pos:column="33"/></name> <operator pos:line="61" pos:column="34">&amp;&amp;<pos:position pos:line="61" pos:column="44"/></operator> <name><name pos:line="61" pos:column="37">ctx<pos:position pos:line="61" pos:column="40"/></name><operator pos:line="61" pos:column="40">-&gt;<pos:position pos:line="61" pos:column="45"/></operator><name pos:line="61" pos:column="42">hdrs<pos:position pos:line="61" pos:column="46"/></name><index pos:line="61" pos:column="46">[<expr><name pos:line="61" pos:column="47">n<pos:position pos:line="61" pos:column="48"/></name></expr>]<pos:position pos:line="61" pos:column="49"/></index></name><operator pos:line="61" pos:column="49">-&gt;<pos:position pos:line="61" pos:column="54"/></operator><name pos:line="61" pos:column="51">active<pos:position pos:line="61" pos:column="57"/></name> <operator pos:line="61" pos:column="58">&amp;&amp;<pos:position pos:line="61" pos:column="68"/></operator>
            <name><name pos:line="62" pos:column="13">ctx<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">-&gt;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="18">hdrs<pos:position pos:line="62" pos:column="22"/></name><index pos:line="62" pos:column="22">[<expr><name pos:line="62" pos:column="23">n<pos:position pos:line="62" pos:column="24"/></name></expr>]<pos:position pos:line="62" pos:column="25"/></index></name><operator pos:line="62" pos:column="25">-&gt;<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="27">changed<pos:position pos:line="62" pos:column="34"/></name></expr>)<pos:position pos:line="62" pos:column="35"/></condition><then pos:line="62" pos:column="35">
        <block pos:line="63" pos:column="9">{
          <expr_stmt><expr><name pos:line="64" pos:column="11">rc<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <call><name pos:line="64" pos:column="16">imap_sync_message_for_copy<pos:position pos:line="64" pos:column="42"/></name> <argument_list pos:line="64" pos:column="43">(<argument><expr><name pos:line="64" pos:column="44">idata<pos:position pos:line="64" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="51">ctx<pos:position pos:line="64" pos:column="54"/></name><operator pos:line="64" pos:column="54">-&gt;<pos:position pos:line="64" pos:column="59"/></operator><name pos:line="64" pos:column="56">hdrs<pos:position pos:line="64" pos:column="60"/></name><index pos:line="64" pos:column="60">[<expr><name pos:line="64" pos:column="61">n<pos:position pos:line="64" pos:column="62"/></name></expr>]<pos:position pos:line="64" pos:column="63"/></index></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="65">&amp;<pos:position pos:line="64" pos:column="70"/></operator><name pos:line="64" pos:column="66">sync_cmd<pos:position pos:line="64" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="76">&amp;<pos:position pos:line="64" pos:column="81"/></operator><name pos:line="64" pos:column="77">err_continue<pos:position pos:line="64" pos:column="89"/></name></expr></argument>)<pos:position pos:line="64" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="91"/></expr_stmt>
          <if pos:line="65" pos:column="11">if <condition pos:line="65" pos:column="14">(<expr><name pos:line="65" pos:column="15">rc<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">&lt;<pos:position pos:line="65" pos:column="22"/></operator> <literal type="number" pos:line="65" pos:column="20">0<pos:position pos:line="65" pos:column="21"/></literal></expr>)<pos:position pos:line="65" pos:column="22"/></condition><then pos:line="65" pos:column="22">
          <block pos:line="66" pos:column="11">{
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">dprint<pos:position pos:line="67" pos:column="19"/></name> <argument_list pos:line="67" pos:column="20">(<argument><expr><literal type="number" pos:line="67" pos:column="21">1<pos:position pos:line="67" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="24">(<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="25">debugfile<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">,<pos:position pos:line="67" pos:column="35"/></operator> <literal type="string" pos:line="67" pos:column="36">"imap_copy_messages: could not sync\n"<pos:position pos:line="67" pos:column="74"/></literal><operator pos:line="67" pos:column="74">)<pos:position pos:line="67" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="77"/></expr_stmt>
            <goto pos:line="68" pos:column="13">goto <name pos:line="68" pos:column="18">out<pos:position pos:line="68" pos:column="21"/></name>;<pos:position pos:line="68" pos:column="22"/></goto>
          }<pos:position pos:line="69" pos:column="12"/></block></then></if>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
      }<pos:position pos:line="71" pos:column="8"/></block></for>

      <expr_stmt><expr><name pos:line="73" pos:column="7">rc<pos:position pos:line="73" pos:column="9"/></name> <operator pos:line="73" pos:column="10">=<pos:position pos:line="73" pos:column="11"/></operator> <call><name pos:line="73" pos:column="12">imap_exec_msgset<pos:position pos:line="73" pos:column="28"/></name> <argument_list pos:line="73" pos:column="29">(<argument><expr><name pos:line="73" pos:column="30">idata<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="37">"UID COPY"<pos:position pos:line="73" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="49">mmbox<pos:position pos:line="73" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="56">MUTT_TAG<pos:position pos:line="73" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="66">0<pos:position pos:line="73" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="69">0<pos:position pos:line="73" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="72"/></expr_stmt>
      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><operator pos:line="74" pos:column="11">!<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="12">rc<pos:position pos:line="74" pos:column="14"/></name></expr>)<pos:position pos:line="74" pos:column="15"/></condition><then pos:line="74" pos:column="15">
      <block pos:line="75" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">dprint<pos:position pos:line="76" pos:column="15"/></name> <argument_list pos:line="76" pos:column="16">(<argument><expr><literal type="number" pos:line="76" pos:column="17">1<pos:position pos:line="76" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="76" pos:column="20">(<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="21">debugfile<pos:position pos:line="76" pos:column="30"/></name><operator pos:line="76" pos:column="30">,<pos:position pos:line="76" pos:column="31"/></operator> <literal type="string" pos:line="76" pos:column="32">"imap_copy_messages: No messages tagged\n"<pos:position pos:line="76" pos:column="74"/></literal><operator pos:line="76" pos:column="74">)<pos:position pos:line="76" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name pos:line="77" pos:column="9">rc<pos:position pos:line="77" pos:column="11"/></name> <operator pos:line="77" pos:column="12">=<pos:position pos:line="77" pos:column="13"/></operator> <operator pos:line="77" pos:column="14">-<pos:position pos:line="77" pos:column="15"/></operator><literal type="number" pos:line="77" pos:column="15">1<pos:position pos:line="77" pos:column="16"/></literal></expr>;<pos:position pos:line="77" pos:column="17"/></expr_stmt>
        <goto pos:line="78" pos:column="9">goto <name pos:line="78" pos:column="14">out<pos:position pos:line="78" pos:column="17"/></name>;<pos:position pos:line="78" pos:column="18"/></goto>
      }<pos:position pos:line="79" pos:column="8"/></block></then>
      <elseif pos:line="80" pos:column="7">else <if pos:line="80" pos:column="12">if <condition pos:line="80" pos:column="15">(<expr><name pos:line="80" pos:column="16">rc<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">&lt;<pos:position pos:line="80" pos:column="23"/></operator> <literal type="number" pos:line="80" pos:column="21">0<pos:position pos:line="80" pos:column="22"/></literal></expr>)<pos:position pos:line="80" pos:column="23"/></condition><then pos:line="80" pos:column="23">
      <block pos:line="81" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">dprint<pos:position pos:line="82" pos:column="15"/></name> <argument_list pos:line="82" pos:column="16">(<argument><expr><literal type="number" pos:line="82" pos:column="17">1<pos:position pos:line="82" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="20">(<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="21">debugfile<pos:position pos:line="82" pos:column="30"/></name><operator pos:line="82" pos:column="30">,<pos:position pos:line="82" pos:column="31"/></operator> <literal type="string" pos:line="82" pos:column="32">"could not queue copy\n"<pos:position pos:line="82" pos:column="56"/></literal><operator pos:line="82" pos:column="56">)<pos:position pos:line="82" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="82" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="59"/></expr_stmt>
        <goto pos:line="83" pos:column="9">goto <name pos:line="83" pos:column="14">out<pos:position pos:line="83" pos:column="17"/></name>;<pos:position pos:line="83" pos:column="18"/></goto>
      }<pos:position pos:line="84" pos:column="8"/></block></then></if></elseif>
      <else pos:line="85" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="9">mutt_message<pos:position pos:line="86" pos:column="21"/></name> <argument_list pos:line="86" pos:column="22">(<argument><expr><call><name pos:line="86" pos:column="23">_<pos:position pos:line="86" pos:column="24"/></name><argument_list pos:line="86" pos:column="24">(<argument><expr><literal type="string" pos:line="86" pos:column="25">"Copying %d messages to %s..."<pos:position pos:line="86" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="86" pos:column="58">rc<pos:position pos:line="86" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="62">mbox<pos:position pos:line="86" pos:column="66"/></name></expr></argument>)<pos:position pos:line="86" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="68"/></expr_stmt></block></else></if>
    }<pos:position pos:line="87" pos:column="6"/></block></then>
    <else pos:line="88" pos:column="5">else
    <block pos:line="89" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="90" pos:column="7">mutt_message<pos:position pos:line="90" pos:column="19"/></name> <argument_list pos:line="90" pos:column="20">(<argument><expr><call><name pos:line="90" pos:column="21">_<pos:position pos:line="90" pos:column="22"/></name><argument_list pos:line="90" pos:column="22">(<argument><expr><literal type="string" pos:line="90" pos:column="23">"Copying message %d to %s..."<pos:position pos:line="90" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="55">h<pos:position pos:line="90" pos:column="56"/></name><operator pos:line="90" pos:column="56">-&gt;<pos:position pos:line="90" pos:column="61"/></operator><name pos:line="90" pos:column="58">index<pos:position pos:line="90" pos:column="63"/></name></name><operator pos:line="90" pos:column="63">+<pos:position pos:line="90" pos:column="64"/></operator><literal type="number" pos:line="90" pos:column="64">1<pos:position pos:line="90" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="67">mbox<pos:position pos:line="90" pos:column="71"/></name></expr></argument>)<pos:position pos:line="90" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="73"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">mutt_buffer_printf<pos:position pos:line="91" pos:column="25"/></name> <argument_list pos:line="91" pos:column="26">(<argument><expr><operator pos:line="91" pos:column="27">&amp;<pos:position pos:line="91" pos:column="32"/></operator><name pos:line="91" pos:column="28">cmd<pos:position pos:line="91" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="33">"UID COPY %u %s"<pos:position pos:line="91" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="91" pos:column="51">HEADER_DATA<pos:position pos:line="91" pos:column="62"/></name> <argument_list pos:line="91" pos:column="63">(<argument><expr><name pos:line="91" pos:column="64">h<pos:position pos:line="91" pos:column="65"/></name></expr></argument>)<pos:position pos:line="91" pos:column="66"/></argument_list></call><operator pos:line="91" pos:column="66">-&gt;<pos:position pos:line="91" pos:column="71"/></operator><name pos:line="91" pos:column="68">uid<pos:position pos:line="91" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="73">mmbox<pos:position pos:line="91" pos:column="78"/></name></expr></argument>)<pos:position pos:line="91" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="80"/></expr_stmt>

      <if pos:line="93" pos:column="7">if <condition pos:line="93" pos:column="10">(<expr><name><name pos:line="93" pos:column="11">h<pos:position pos:line="93" pos:column="12"/></name><operator pos:line="93" pos:column="12">-&gt;<pos:position pos:line="93" pos:column="17"/></operator><name pos:line="93" pos:column="14">active<pos:position pos:line="93" pos:column="20"/></name></name> <operator pos:line="93" pos:column="21">&amp;&amp;<pos:position pos:line="93" pos:column="31"/></operator> <name><name pos:line="93" pos:column="24">h<pos:position pos:line="93" pos:column="25"/></name><operator pos:line="93" pos:column="25">-&gt;<pos:position pos:line="93" pos:column="30"/></operator><name pos:line="93" pos:column="27">changed<pos:position pos:line="93" pos:column="34"/></name></name></expr>)<pos:position pos:line="93" pos:column="35"/></condition><then pos:line="93" pos:column="35">
      <block pos:line="94" pos:column="7">{
        <expr_stmt><expr><name pos:line="95" pos:column="9">rc<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">=<pos:position pos:line="95" pos:column="13"/></operator> <call><name pos:line="95" pos:column="14">imap_sync_message_for_copy<pos:position pos:line="95" pos:column="40"/></name> <argument_list pos:line="95" pos:column="41">(<argument><expr><name pos:line="95" pos:column="42">idata<pos:position pos:line="95" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="49">h<pos:position pos:line="95" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="52">&amp;<pos:position pos:line="95" pos:column="57"/></operator><name pos:line="95" pos:column="53">sync_cmd<pos:position pos:line="95" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="63">&amp;<pos:position pos:line="95" pos:column="68"/></operator><name pos:line="95" pos:column="64">err_continue<pos:position pos:line="95" pos:column="76"/></name></expr></argument>)<pos:position pos:line="95" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="78"/></expr_stmt>
        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">rc<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">&lt;<pos:position pos:line="96" pos:column="20"/></operator> <literal type="number" pos:line="96" pos:column="18">0<pos:position pos:line="96" pos:column="19"/></literal></expr>)<pos:position pos:line="96" pos:column="20"/></condition><then pos:line="96" pos:column="20">
        <block pos:line="97" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="98" pos:column="11">dprint<pos:position pos:line="98" pos:column="17"/></name> <argument_list pos:line="98" pos:column="18">(<argument><expr><literal type="number" pos:line="98" pos:column="19">1<pos:position pos:line="98" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="98" pos:column="22">(<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="23">debugfile<pos:position pos:line="98" pos:column="32"/></name><operator pos:line="98" pos:column="32">,<pos:position pos:line="98" pos:column="33"/></operator> <literal type="string" pos:line="98" pos:column="34">"imap_copy_messages: could not sync\n"<pos:position pos:line="98" pos:column="72"/></literal><operator pos:line="98" pos:column="72">)<pos:position pos:line="98" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="98" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="75"/></expr_stmt>
          <goto pos:line="99" pos:column="11">goto <name pos:line="99" pos:column="16">out<pos:position pos:line="99" pos:column="19"/></name>;<pos:position pos:line="99" pos:column="20"/></goto>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if>
      }<pos:position pos:line="101" pos:column="8"/></block></then></if>
      <if pos:line="102" pos:column="7">if <condition pos:line="102" pos:column="10">(<expr><operator pos:line="102" pos:column="11">(<pos:position pos:line="102" pos:column="12"/></operator><name pos:line="102" pos:column="12">rc<pos:position pos:line="102" pos:column="14"/></name> <operator pos:line="102" pos:column="15">=<pos:position pos:line="102" pos:column="16"/></operator> <call><name pos:line="102" pos:column="17">imap_exec<pos:position pos:line="102" pos:column="26"/></name> <argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">idata<pos:position pos:line="102" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="35">cmd<pos:position pos:line="102" pos:column="38"/></name><operator pos:line="102" pos:column="38">.<pos:position pos:line="102" pos:column="39"/></operator><name pos:line="102" pos:column="39">data<pos:position pos:line="102" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="45">IMAP_CMD_QUEUE<pos:position pos:line="102" pos:column="59"/></name></expr></argument>)<pos:position pos:line="102" pos:column="60"/></argument_list></call><operator pos:line="102" pos:column="60">)<pos:position pos:line="102" pos:column="61"/></operator> <operator pos:line="102" pos:column="62">&lt;<pos:position pos:line="102" pos:column="66"/></operator> <literal type="number" pos:line="102" pos:column="64">0<pos:position pos:line="102" pos:column="65"/></literal></expr>)<pos:position pos:line="102" pos:column="66"/></condition><then pos:line="102" pos:column="66">
      <block pos:line="103" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">dprint<pos:position pos:line="104" pos:column="15"/></name> <argument_list pos:line="104" pos:column="16">(<argument><expr><literal type="number" pos:line="104" pos:column="17">1<pos:position pos:line="104" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="104" pos:column="20">(<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="21">debugfile<pos:position pos:line="104" pos:column="30"/></name><operator pos:line="104" pos:column="30">,<pos:position pos:line="104" pos:column="31"/></operator> <literal type="string" pos:line="104" pos:column="32">"could not queue copy\n"<pos:position pos:line="104" pos:column="56"/></literal><operator pos:line="104" pos:column="56">)<pos:position pos:line="104" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="104" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="59"/></expr_stmt>
        <goto pos:line="105" pos:column="9">goto <name pos:line="105" pos:column="14">out<pos:position pos:line="105" pos:column="17"/></name>;<pos:position pos:line="105" pos:column="18"/></goto>
      }<pos:position pos:line="106" pos:column="8"/></block></then></if>
    }<pos:position pos:line="107" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="109" pos:column="5">/* let's get it on */</comment>
    <expr_stmt><expr><name pos:line="110" pos:column="5">rc<pos:position pos:line="110" pos:column="7"/></name> <operator pos:line="110" pos:column="8">=<pos:position pos:line="110" pos:column="9"/></operator> <call><name pos:line="110" pos:column="10">imap_exec<pos:position pos:line="110" pos:column="19"/></name> <argument_list pos:line="110" pos:column="20">(<argument><expr><name pos:line="110" pos:column="21">idata<pos:position pos:line="110" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="28">NULL<pos:position pos:line="110" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="34">IMAP_CMD_FAIL_OK<pos:position pos:line="110" pos:column="50"/></name></expr></argument>)<pos:position pos:line="110" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="52"/></expr_stmt>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name pos:line="111" pos:column="9">rc<pos:position pos:line="111" pos:column="11"/></name> <operator pos:line="111" pos:column="12">==<pos:position pos:line="111" pos:column="14"/></operator> <operator pos:line="111" pos:column="15">-<pos:position pos:line="111" pos:column="16"/></operator><literal type="number" pos:line="111" pos:column="16">2<pos:position pos:line="111" pos:column="17"/></literal></expr>)<pos:position pos:line="111" pos:column="18"/></condition><then pos:line="111" pos:column="18">
    <block pos:line="112" pos:column="5">{
      <if pos:line="113" pos:column="7">if <condition pos:line="113" pos:column="10">(<expr><name pos:line="113" pos:column="11">triedcreate<pos:position pos:line="113" pos:column="22"/></name></expr>)<pos:position pos:line="113" pos:column="23"/></condition><then pos:line="113" pos:column="23">
      <block pos:line="114" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="115" pos:column="9">dprint<pos:position pos:line="115" pos:column="15"/></name> <argument_list pos:line="115" pos:column="16">(<argument><expr><literal type="number" pos:line="115" pos:column="17">1<pos:position pos:line="115" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="115" pos:column="20">(<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="21">debugfile<pos:position pos:line="115" pos:column="30"/></name><operator pos:line="115" pos:column="30">,<pos:position pos:line="115" pos:column="31"/></operator> <literal type="string" pos:line="115" pos:column="32">"Already tried to create mailbox %s\n"<pos:position pos:line="115" pos:column="70"/></literal><operator pos:line="115" pos:column="70">,<pos:position pos:line="115" pos:column="71"/></operator> <name pos:line="115" pos:column="72">mbox<pos:position pos:line="115" pos:column="76"/></name><operator pos:line="115" pos:column="76">)<pos:position pos:line="115" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="115" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="79"/></expr_stmt>
        <break pos:line="116" pos:column="9">break;<pos:position pos:line="116" pos:column="15"/></break>
      }<pos:position pos:line="117" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="118" pos:column="7">/* bail out if command failed for reasons other than nonexistent target */</comment>
      <if pos:line="119" pos:column="7">if <condition pos:line="119" pos:column="10">(<expr><call><name pos:line="119" pos:column="11">ascii_strncasecmp<pos:position pos:line="119" pos:column="28"/></name> <argument_list pos:line="119" pos:column="29">(<argument><expr><call><name pos:line="119" pos:column="30">imap_get_qualifier<pos:position pos:line="119" pos:column="48"/></name> <argument_list pos:line="119" pos:column="49">(<argument><expr><name><name pos:line="119" pos:column="50">idata<pos:position pos:line="119" pos:column="55"/></name><operator pos:line="119" pos:column="55">-&gt;<pos:position pos:line="119" pos:column="60"/></operator><name pos:line="119" pos:column="57">buf<pos:position pos:line="119" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="63">"[TRYCREATE]"<pos:position pos:line="119" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="78">11<pos:position pos:line="119" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="82"/></condition><then pos:line="119" pos:column="82">
        <block type="pseudo"><break pos:line="120" pos:column="9">break;<pos:position pos:line="120" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><call><name pos:line="121" pos:column="7">dprint<pos:position pos:line="121" pos:column="13"/></name> <argument_list pos:line="121" pos:column="14">(<argument><expr><literal type="number" pos:line="121" pos:column="15">3<pos:position pos:line="121" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="121" pos:column="18">(<pos:position pos:line="121" pos:column="19"/></operator><name pos:line="121" pos:column="19">debugfile<pos:position pos:line="121" pos:column="28"/></name><operator pos:line="121" pos:column="28">,<pos:position pos:line="121" pos:column="29"/></operator> <literal type="string" pos:line="121" pos:column="30">"imap_copy_messages: server suggests TRYCREATE\n"<pos:position pos:line="121" pos:column="79"/></literal><operator pos:line="121" pos:column="79">)<pos:position pos:line="121" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="121" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="82"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="122" pos:column="7">snprintf<pos:position pos:line="122" pos:column="15"/></name> <argument_list pos:line="122" pos:column="16">(<argument><expr><name pos:line="122" pos:column="17">prompt<pos:position pos:line="122" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="122" pos:column="25">sizeof <argument_list pos:line="122" pos:column="32">(<argument><expr><name pos:line="122" pos:column="33">prompt<pos:position pos:line="122" pos:column="39"/></name></expr></argument>)<pos:position pos:line="122" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="122" pos:column="42">_<pos:position pos:line="122" pos:column="43"/></name><argument_list pos:line="122" pos:column="43">(<argument><expr><literal type="string" pos:line="122" pos:column="44">"Create %s?"<pos:position pos:line="122" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="122" pos:column="59">mbox<pos:position pos:line="122" pos:column="63"/></name></expr></argument>)<pos:position pos:line="122" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="65"/></expr_stmt>
      <if pos:line="123" pos:column="7">if <condition pos:line="123" pos:column="10">(<expr><call><name pos:line="123" pos:column="11">option<pos:position pos:line="123" pos:column="17"/></name> <argument_list pos:line="123" pos:column="18">(<argument><expr><name pos:line="123" pos:column="19">OPTCONFIRMCREATE<pos:position pos:line="123" pos:column="35"/></name></expr></argument>)<pos:position pos:line="123" pos:column="36"/></argument_list></call> <operator pos:line="123" pos:column="37">&amp;&amp;<pos:position pos:line="123" pos:column="47"/></operator> <call><name pos:line="123" pos:column="40">mutt_yesorno<pos:position pos:line="123" pos:column="52"/></name> <argument_list pos:line="123" pos:column="53">(<argument><expr><name pos:line="123" pos:column="54">prompt<pos:position pos:line="123" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="62">1<pos:position pos:line="123" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="64"/></argument_list></call> <operator pos:line="123" pos:column="65">&lt;<pos:position pos:line="123" pos:column="69"/></operator> <literal type="number" pos:line="123" pos:column="67">1<pos:position pos:line="123" pos:column="68"/></literal></expr>)<pos:position pos:line="123" pos:column="69"/></condition><then pos:line="123" pos:column="69">
      <block pos:line="124" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="125" pos:column="9">mutt_clear_error<pos:position pos:line="125" pos:column="25"/></name> <argument_list pos:line="125" pos:column="26">()<pos:position pos:line="125" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="29"/></expr_stmt>
        <goto pos:line="126" pos:column="9">goto <name pos:line="126" pos:column="14">out<pos:position pos:line="126" pos:column="17"/></name>;<pos:position pos:line="126" pos:column="18"/></goto>
      }<pos:position pos:line="127" pos:column="8"/></block></then></if>
      <if pos:line="128" pos:column="7">if <condition pos:line="128" pos:column="10">(<expr><call><name pos:line="128" pos:column="11">imap_create_mailbox<pos:position pos:line="128" pos:column="30"/></name> <argument_list pos:line="128" pos:column="31">(<argument><expr><name pos:line="128" pos:column="32">idata<pos:position pos:line="128" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="39">mbox<pos:position pos:line="128" pos:column="43"/></name></expr></argument>)<pos:position pos:line="128" pos:column="44"/></argument_list></call> <operator pos:line="128" pos:column="45">&lt;<pos:position pos:line="128" pos:column="49"/></operator> <literal type="number" pos:line="128" pos:column="47">0<pos:position pos:line="128" pos:column="48"/></literal></expr>)<pos:position pos:line="128" pos:column="49"/></condition><then pos:line="128" pos:column="49">
        <block type="pseudo"><break pos:line="129" pos:column="9">break;<pos:position pos:line="129" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="130" pos:column="7">triedcreate<pos:position pos:line="130" pos:column="18"/></name> <operator pos:line="130" pos:column="19">=<pos:position pos:line="130" pos:column="20"/></operator> <literal type="number" pos:line="130" pos:column="21">1<pos:position pos:line="130" pos:column="22"/></literal></expr>;<pos:position pos:line="130" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if>
  }<pos:position pos:line="132" pos:column="4"/></block>
  while <condition pos:line="133" pos:column="9">(<expr><name pos:line="133" pos:column="10">rc<pos:position pos:line="133" pos:column="12"/></name> <operator pos:line="133" pos:column="13">==<pos:position pos:line="133" pos:column="15"/></operator> <operator pos:line="133" pos:column="16">-<pos:position pos:line="133" pos:column="17"/></operator><literal type="number" pos:line="133" pos:column="17">2<pos:position pos:line="133" pos:column="18"/></literal></expr>)<pos:position pos:line="133" pos:column="19"/></condition>;<pos:position pos:line="133" pos:column="20"/></do>

  <if pos:line="135" pos:column="3">if <condition pos:line="135" pos:column="6">(<expr><name pos:line="135" pos:column="7">rc<pos:position pos:line="135" pos:column="9"/></name> <operator pos:line="135" pos:column="10">!=<pos:position pos:line="135" pos:column="12"/></operator> <literal type="number" pos:line="135" pos:column="13">0<pos:position pos:line="135" pos:column="14"/></literal></expr>)<pos:position pos:line="135" pos:column="15"/></condition><then pos:line="135" pos:column="15">
  <block pos:line="136" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="137" pos:column="5">imap_error<pos:position pos:line="137" pos:column="15"/></name> <argument_list pos:line="137" pos:column="16">(<argument><expr><literal type="string" pos:line="137" pos:column="17">"imap_copy_messages"<pos:position pos:line="137" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="39">idata<pos:position pos:line="137" pos:column="44"/></name><operator pos:line="137" pos:column="44">-&gt;<pos:position pos:line="137" pos:column="49"/></operator><name pos:line="137" pos:column="46">buf<pos:position pos:line="137" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="51"/></expr_stmt>
    <goto pos:line="138" pos:column="5">goto <name pos:line="138" pos:column="10">out<pos:position pos:line="138" pos:column="13"/></name>;<pos:position pos:line="138" pos:column="14"/></goto>
  }<pos:position pos:line="139" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="141" pos:column="3">/* cleanup */</comment>
  <if pos:line="142" pos:column="3">if <condition pos:line="142" pos:column="6">(<expr><operator pos:line="142" pos:column="7">delete<pos:position pos:line="142" pos:column="13"/></operator></expr>)<pos:position pos:line="142" pos:column="14"/></condition><then pos:line="142" pos:column="14">
  <block pos:line="143" pos:column="3">{
    <if pos:line="144" pos:column="5">if <condition pos:line="144" pos:column="8">(<expr><operator pos:line="144" pos:column="9">!<pos:position pos:line="144" pos:column="10"/></operator><name pos:line="144" pos:column="10">h<pos:position pos:line="144" pos:column="11"/></name></expr>)<pos:position pos:line="144" pos:column="12"/></condition><then pos:line="144" pos:column="12">
      <block type="pseudo"><for pos:line="145" pos:column="7">for <control pos:line="145" pos:column="11">(<init><expr><name pos:line="145" pos:column="12">n<pos:position pos:line="145" pos:column="13"/></name> <operator pos:line="145" pos:column="14">=<pos:position pos:line="145" pos:column="15"/></operator> <literal type="number" pos:line="145" pos:column="16">0<pos:position pos:line="145" pos:column="17"/></literal></expr>;<pos:position pos:line="145" pos:column="18"/></init> <condition><expr><name pos:line="145" pos:column="19">n<pos:position pos:line="145" pos:column="20"/></name> <operator pos:line="145" pos:column="21">&lt;<pos:position pos:line="145" pos:column="25"/></operator> <name><name pos:line="145" pos:column="23">ctx<pos:position pos:line="145" pos:column="26"/></name><operator pos:line="145" pos:column="26">-&gt;<pos:position pos:line="145" pos:column="31"/></operator><name pos:line="145" pos:column="28">msgcount<pos:position pos:line="145" pos:column="36"/></name></name></expr>;<pos:position pos:line="145" pos:column="37"/></condition> <incr><expr><name pos:line="145" pos:column="38">n<pos:position pos:line="145" pos:column="39"/></name><operator pos:line="145" pos:column="39">++<pos:position pos:line="145" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="145" pos:column="42"/></control>
      <block pos:line="146" pos:column="7">{
        <if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name><name pos:line="147" pos:column="13">ctx<pos:position pos:line="147" pos:column="16"/></name><operator pos:line="147" pos:column="16">-&gt;<pos:position pos:line="147" pos:column="21"/></operator><name pos:line="147" pos:column="18">hdrs<pos:position pos:line="147" pos:column="22"/></name><index pos:line="147" pos:column="22">[<expr><name pos:line="147" pos:column="23">n<pos:position pos:line="147" pos:column="24"/></name></expr>]<pos:position pos:line="147" pos:column="25"/></index></name><operator pos:line="147" pos:column="25">-&gt;<pos:position pos:line="147" pos:column="30"/></operator><name pos:line="147" pos:column="27">tagged<pos:position pos:line="147" pos:column="33"/></name></expr>)<pos:position pos:line="147" pos:column="34"/></condition><then pos:line="147" pos:column="34">
        <block pos:line="148" pos:column="9">{
          <expr_stmt><expr><call><name pos:line="149" pos:column="11">mutt_set_flag<pos:position pos:line="149" pos:column="24"/></name> <argument_list pos:line="149" pos:column="25">(<argument><expr><name pos:line="149" pos:column="26">ctx<pos:position pos:line="149" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="31">ctx<pos:position pos:line="149" pos:column="34"/></name><operator pos:line="149" pos:column="34">-&gt;<pos:position pos:line="149" pos:column="39"/></operator><name pos:line="149" pos:column="36">hdrs<pos:position pos:line="149" pos:column="40"/></name><index pos:line="149" pos:column="40">[<expr><name pos:line="149" pos:column="41">n<pos:position pos:line="149" pos:column="42"/></name></expr>]<pos:position pos:line="149" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="45">MUTT_DELETE<pos:position pos:line="149" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="149" pos:column="58">1<pos:position pos:line="149" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="61"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="150" pos:column="11">mutt_set_flag<pos:position pos:line="150" pos:column="24"/></name> <argument_list pos:line="150" pos:column="25">(<argument><expr><name pos:line="150" pos:column="26">ctx<pos:position pos:line="150" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="31">ctx<pos:position pos:line="150" pos:column="34"/></name><operator pos:line="150" pos:column="34">-&gt;<pos:position pos:line="150" pos:column="39"/></operator><name pos:line="150" pos:column="36">hdrs<pos:position pos:line="150" pos:column="40"/></name><index pos:line="150" pos:column="40">[<expr><name pos:line="150" pos:column="41">n<pos:position pos:line="150" pos:column="42"/></name></expr>]<pos:position pos:line="150" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="45">MUTT_PURGE<pos:position pos:line="150" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="57">1<pos:position pos:line="150" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="60"/></expr_stmt>
          <if pos:line="151" pos:column="11">if <condition pos:line="151" pos:column="14">(<expr><call><name pos:line="151" pos:column="15">option<pos:position pos:line="151" pos:column="21"/></name> <argument_list pos:line="151" pos:column="22">(<argument><expr><name pos:line="151" pos:column="23">OPTDELETEUNTAG<pos:position pos:line="151" pos:column="37"/></name></expr></argument>)<pos:position pos:line="151" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="39"/></condition><then pos:line="151" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="13">mutt_set_flag<pos:position pos:line="152" pos:column="26"/></name> <argument_list pos:line="152" pos:column="27">(<argument><expr><name pos:line="152" pos:column="28">ctx<pos:position pos:line="152" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="152" pos:column="33">ctx<pos:position pos:line="152" pos:column="36"/></name><operator pos:line="152" pos:column="36">-&gt;<pos:position pos:line="152" pos:column="41"/></operator><name pos:line="152" pos:column="38">hdrs<pos:position pos:line="152" pos:column="42"/></name><index pos:line="152" pos:column="42">[<expr><name pos:line="152" pos:column="43">n<pos:position pos:line="152" pos:column="44"/></name></expr>]<pos:position pos:line="152" pos:column="45"/></index></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="47">MUTT_TAG<pos:position pos:line="152" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="57">0<pos:position pos:line="152" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="60"/></expr_stmt></block></then></if>
        }<pos:position pos:line="153" pos:column="10"/></block></then></if>
      }<pos:position pos:line="154" pos:column="8"/></block></for></block></then>
    <else pos:line="155" pos:column="5">else
    <block pos:line="156" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="157" pos:column="7">mutt_set_flag<pos:position pos:line="157" pos:column="20"/></name> <argument_list pos:line="157" pos:column="21">(<argument><expr><name pos:line="157" pos:column="22">ctx<pos:position pos:line="157" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="27">h<pos:position pos:line="157" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="30">MUTT_DELETE<pos:position pos:line="157" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="43">1<pos:position pos:line="157" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="158" pos:column="7">mutt_set_flag<pos:position pos:line="158" pos:column="20"/></name> <argument_list pos:line="158" pos:column="21">(<argument><expr><name pos:line="158" pos:column="22">ctx<pos:position pos:line="158" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="27">h<pos:position pos:line="158" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="30">MUTT_PURGE<pos:position pos:line="158" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="158" pos:column="42">1<pos:position pos:line="158" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="45"/></expr_stmt>
      <if pos:line="159" pos:column="7">if <condition pos:line="159" pos:column="10">(<expr><call><name pos:line="159" pos:column="11">option<pos:position pos:line="159" pos:column="17"/></name> <argument_list pos:line="159" pos:column="18">(<argument><expr><name pos:line="159" pos:column="19">OPTDELETEUNTAG<pos:position pos:line="159" pos:column="33"/></name></expr></argument>)<pos:position pos:line="159" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="159" pos:column="35"/></condition><then pos:line="159" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="9">mutt_set_flag<pos:position pos:line="160" pos:column="22"/></name> <argument_list pos:line="160" pos:column="23">(<argument><expr><name pos:line="160" pos:column="24">ctx<pos:position pos:line="160" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="29">h<pos:position pos:line="160" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="32">MUTT_TAG<pos:position pos:line="160" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="42">0<pos:position pos:line="160" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="45"/></expr_stmt></block></then></if>
    }<pos:position pos:line="161" pos:column="6"/></block></else></if>
  }<pos:position pos:line="162" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="164" pos:column="3">rc<pos:position pos:line="164" pos:column="5"/></name> <operator pos:line="164" pos:column="6">=<pos:position pos:line="164" pos:column="7"/></operator> <literal type="number" pos:line="164" pos:column="8">0<pos:position pos:line="164" pos:column="9"/></literal></expr>;<pos:position pos:line="164" pos:column="10"/></expr_stmt>

 <label><name pos:line="166" pos:column="2">out<pos:position pos:line="166" pos:column="5"/></name>:<pos:position pos:line="166" pos:column="6"/></label>
  <if pos:line="167" pos:column="3">if <condition pos:line="167" pos:column="6">(<expr><name><name pos:line="167" pos:column="7">cmd<pos:position pos:line="167" pos:column="10"/></name><operator pos:line="167" pos:column="10">.<pos:position pos:line="167" pos:column="11"/></operator><name pos:line="167" pos:column="11">data<pos:position pos:line="167" pos:column="15"/></name></name></expr>)<pos:position pos:line="167" pos:column="16"/></condition><then pos:line="167" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="5">FREE<pos:position pos:line="168" pos:column="9"/></name> <argument_list pos:line="168" pos:column="10">(<argument><expr><operator pos:line="168" pos:column="11">&amp;<pos:position pos:line="168" pos:column="16"/></operator><name><name pos:line="168" pos:column="12">cmd<pos:position pos:line="168" pos:column="15"/></name><operator pos:line="168" pos:column="15">.<pos:position pos:line="168" pos:column="16"/></operator><name pos:line="168" pos:column="16">data<pos:position pos:line="168" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="22"/></expr_stmt></block></then></if>
  <if pos:line="169" pos:column="3">if <condition pos:line="169" pos:column="6">(<expr><name><name pos:line="169" pos:column="7">sync_cmd<pos:position pos:line="169" pos:column="15"/></name><operator pos:line="169" pos:column="15">.<pos:position pos:line="169" pos:column="16"/></operator><name pos:line="169" pos:column="16">data<pos:position pos:line="169" pos:column="20"/></name></name></expr>)<pos:position pos:line="169" pos:column="21"/></condition><then pos:line="169" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="170" pos:column="5">FREE<pos:position pos:line="170" pos:column="9"/></name> <argument_list pos:line="170" pos:column="10">(<argument><expr><operator pos:line="170" pos:column="11">&amp;<pos:position pos:line="170" pos:column="16"/></operator><name><name pos:line="170" pos:column="12">sync_cmd<pos:position pos:line="170" pos:column="20"/></name><operator pos:line="170" pos:column="20">.<pos:position pos:line="170" pos:column="21"/></operator><name pos:line="170" pos:column="21">data<pos:position pos:line="170" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="27"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="171" pos:column="3">FREE<pos:position pos:line="171" pos:column="7"/></name> <argument_list pos:line="171" pos:column="8">(<argument><expr><operator pos:line="171" pos:column="9">&amp;<pos:position pos:line="171" pos:column="14"/></operator><name><name pos:line="171" pos:column="10">mx<pos:position pos:line="171" pos:column="12"/></name><operator pos:line="171" pos:column="12">.<pos:position pos:line="171" pos:column="13"/></operator><name pos:line="171" pos:column="13">mbox<pos:position pos:line="171" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="171" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="19"/></expr_stmt>

  <return pos:line="173" pos:column="3">return <expr><ternary><condition><expr><name pos:line="173" pos:column="10">rc<pos:position pos:line="173" pos:column="12"/></name> <operator pos:line="173" pos:column="13">&lt;<pos:position pos:line="173" pos:column="17"/></operator> <literal type="number" pos:line="173" pos:column="15">0<pos:position pos:line="173" pos:column="16"/></literal></expr> ?<pos:position pos:line="173" pos:column="18"/></condition><then pos:line="173" pos:column="18"> <expr><operator pos:line="173" pos:column="19">-<pos:position pos:line="173" pos:column="20"/></operator><literal type="number" pos:line="173" pos:column="20">1<pos:position pos:line="173" pos:column="21"/></literal></expr> <pos:position pos:line="173" pos:column="22"/></then><else pos:line="173" pos:column="22">: <expr><name pos:line="173" pos:column="24">rc<pos:position pos:line="173" pos:column="26"/></name></expr></else></ternary></expr>;<pos:position pos:line="173" pos:column="27"/></return>
}</unit>

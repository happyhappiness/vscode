<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_90.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">print_val<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">FILE<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">fp<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">pfx<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">value<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">flags<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">size_t<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">col<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <while pos:line="4" pos:column="3">while <condition pos:line="4" pos:column="9">(<expr><name pos:line="4" pos:column="10">value<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">&amp;&amp;<pos:position pos:line="4" pos:column="26"/></operator> <operator pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">value<pos:position pos:line="4" pos:column="25"/></name></expr>)<pos:position pos:line="4" pos:column="26"/></condition>
  <block pos:line="5" pos:column="3">{
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">fputc<pos:position pos:line="6" pos:column="14"/></name> <argument_list pos:line="6" pos:column="15">(<argument><expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">value<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">fp<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call> <operator pos:line="6" pos:column="28">==<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="31">EOF<pos:position pos:line="6" pos:column="34"/></name></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
      <block type="pseudo"><return pos:line="7" pos:column="7">return <expr><operator pos:line="7" pos:column="14">-<pos:position pos:line="7" pos:column="15"/></operator><literal type="number" pos:line="7" pos:column="15">1<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>
    <comment type="block" pos:line="8" pos:column="5">/* corner-case: break words longer than 998 chars by force,
     * mandated by RfC5322 */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">flags<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&amp;<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="19">CH_DISPLAY<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="31">&amp;&amp;<pos:position pos:line="10" pos:column="41"/></operator> <operator pos:line="10" pos:column="34">++<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">col<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">&gt;=<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="43">998<pos:position pos:line="10" pos:column="46"/></literal></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47">
    <block pos:line="11" pos:column="5">{
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><call><name pos:line="12" pos:column="11">fputs<pos:position pos:line="12" pos:column="16"/></name> <argument_list pos:line="12" pos:column="17">(<argument><expr><literal type="string" pos:line="12" pos:column="18">"\n "<pos:position pos:line="12" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="25">fp<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call> <operator pos:line="12" pos:column="29">&lt;<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="31">0<pos:position pos:line="12" pos:column="32"/></literal></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
	<block type="pseudo"><return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">-<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="14" pos:column="7">col<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">value<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <literal type="char" pos:line="16" pos:column="19">'\n'<pos:position pos:line="16" pos:column="23"/></literal></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
    <block pos:line="17" pos:column="5">{
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><operator pos:line="18" pos:column="11">*<pos:position pos:line="18" pos:column="12"/></operator><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">value<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">+<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="21">1<pos:position pos:line="18" pos:column="22"/></literal><operator pos:line="18" pos:column="22">)<pos:position pos:line="18" pos:column="23"/></operator> <operator pos:line="18" pos:column="24">&amp;&amp;<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="27">pfx<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">&amp;&amp;<pos:position pos:line="18" pos:column="41"/></operator> <operator pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">pfx<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">&amp;&amp;<pos:position pos:line="18" pos:column="49"/></operator> <call><name pos:line="18" pos:column="42">fputs<pos:position pos:line="18" pos:column="47"/></name> <argument_list pos:line="18" pos:column="48">(<argument><expr><name pos:line="18" pos:column="49">pfx<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">fp<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call> <operator pos:line="18" pos:column="58">==<pos:position pos:line="18" pos:column="60"/></operator> <name pos:line="18" pos:column="61">EOF<pos:position pos:line="18" pos:column="64"/></name></expr>)<pos:position pos:line="18" pos:column="65"/></condition><then pos:line="18" pos:column="65">
	<block type="pseudo"><return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">-<pos:position pos:line="19" pos:column="17"/></operator><literal type="number" pos:line="19" pos:column="17">1<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></return></block></then></if>
      <comment type="block" pos:line="20" pos:column="7">/* for display, turn folding spaces into folding tabs */</comment>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><operator pos:line="21" pos:column="11">(<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">flags<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">&amp;<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="20">CH_DISPLAY<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">)<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="32">&amp;&amp;<pos:position pos:line="21" pos:column="42"/></operator> <operator pos:line="21" pos:column="35">(<pos:position pos:line="21" pos:column="36"/></operator><operator pos:line="21" pos:column="36">*<pos:position pos:line="21" pos:column="37"/></operator><operator pos:line="21" pos:column="37">(<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">value<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">+<pos:position pos:line="21" pos:column="45"/></operator> <literal type="number" pos:line="21" pos:column="46">1<pos:position pos:line="21" pos:column="47"/></literal><operator pos:line="21" pos:column="47">)<pos:position pos:line="21" pos:column="48"/></operator> <operator pos:line="21" pos:column="49">==<pos:position pos:line="21" pos:column="51"/></operator> <literal type="char" pos:line="21" pos:column="52">' '<pos:position pos:line="21" pos:column="55"/></literal> <operator pos:line="21" pos:column="56">||<pos:position pos:line="21" pos:column="58"/></operator> <operator pos:line="21" pos:column="59">*<pos:position pos:line="21" pos:column="60"/></operator><operator pos:line="21" pos:column="60">(<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="61">value<pos:position pos:line="21" pos:column="66"/></name> <operator pos:line="21" pos:column="67">+<pos:position pos:line="21" pos:column="68"/></operator> <literal type="number" pos:line="21" pos:column="69">1<pos:position pos:line="21" pos:column="70"/></literal><operator pos:line="21" pos:column="70">)<pos:position pos:line="21" pos:column="71"/></operator> <operator pos:line="21" pos:column="72">==<pos:position pos:line="21" pos:column="74"/></operator> <literal type="char" pos:line="21" pos:column="75">'\t'<pos:position pos:line="21" pos:column="79"/></literal><operator pos:line="21" pos:column="79">)<pos:position pos:line="21" pos:column="80"/></operator></expr>)<pos:position pos:line="21" pos:column="81"/></condition><then pos:line="21" pos:column="81">
      <block pos:line="22" pos:column="7">{
	<expr_stmt><expr><name pos:line="23" pos:column="9">value<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">++<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
	<while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><operator pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">value<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&amp;&amp;<pos:position pos:line="24" pos:column="33"/></operator> <operator pos:line="24" pos:column="26">(<pos:position pos:line="24" pos:column="27"/></operator><operator pos:line="24" pos:column="27">*<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">value<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">==<pos:position pos:line="24" pos:column="36"/></operator> <literal type="char" pos:line="24" pos:column="37">' '<pos:position pos:line="24" pos:column="40"/></literal> <operator pos:line="24" pos:column="41">||<pos:position pos:line="24" pos:column="43"/></operator> <operator pos:line="24" pos:column="44">*<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="45">value<pos:position pos:line="24" pos:column="50"/></name> <operator pos:line="24" pos:column="51">==<pos:position pos:line="24" pos:column="53"/></operator> <literal type="char" pos:line="24" pos:column="54">'\t'<pos:position pos:line="24" pos:column="58"/></literal><operator pos:line="24" pos:column="58">)<pos:position pos:line="24" pos:column="59"/></operator></expr>)<pos:position pos:line="24" pos:column="60"/></condition>
	  <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="11">value<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">++<pos:position pos:line="25" pos:column="18"/></operator></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt></block></while>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">fputc<pos:position pos:line="26" pos:column="18"/></name> <argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="char" pos:line="26" pos:column="20">'\t'<pos:position pos:line="26" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="26">fp<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call> <operator pos:line="26" pos:column="30">==<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="33">EOF<pos:position pos:line="26" pos:column="36"/></name></expr>)<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37">
	  <block type="pseudo"><return pos:line="27" pos:column="11">return <expr><operator pos:line="27" pos:column="18">-<pos:position pos:line="27" pos:column="19"/></operator><literal type="number" pos:line="27" pos:column="19">1<pos:position pos:line="27" pos:column="20"/></literal></expr>;<pos:position pos:line="27" pos:column="21"/></return></block></then></if>
	<continue pos:line="28" pos:column="9">continue;<pos:position pos:line="28" pos:column="18"/></continue>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="31" pos:column="5">value<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">++<pos:position pos:line="31" pos:column="12"/></operator></expr>;<pos:position pos:line="31" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></while>
  <return pos:line="33" pos:column="3">return <expr><literal type="number" pos:line="33" pos:column="10">0<pos:position pos:line="33" pos:column="11"/></literal></expr>;<pos:position pos:line="33" pos:column="12"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

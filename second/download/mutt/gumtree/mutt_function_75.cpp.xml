<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_75.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <block pos:line="1" pos:column="33">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier><modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">opts<pos:position pos:line="2" pos:column="20"/></name></decl>, <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier><modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="24">opt<pos:position pos:line="2" pos:column="27"/></name></decl>, <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="30">pfx<pos:position pos:line="2" pos:column="33"/></name></decl>;<pos:position pos:line="2" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">opts<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">=<pos:position pos:line="5" pos:column="15"/></operator> <call><name pos:line="5" pos:column="16">malloc<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><literal type="number" pos:line="5" pos:column="24">2<pos:position pos:line="5" pos:column="25"/></literal> <operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="28">argc<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">+<pos:position pos:line="5" pos:column="34"/></operator> <literal type="number" pos:line="5" pos:column="35">1<pos:position pos:line="5" pos:column="36"/></literal><operator pos:line="5" pos:column="36">)<pos:position pos:line="5" pos:column="37"/></operator> <operator pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></operator> <sizeof pos:line="5" pos:column="40">sizeof <argument_list pos:line="5" pos:column="47">(<argument><expr><operator pos:line="5" pos:column="48">*<pos:position pos:line="5" pos:column="49"/></operator> <name pos:line="5" pos:column="50">opts<pos:position pos:line="5" pos:column="54"/></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="57"/></expr_stmt>	<comment type="block" pos:line="5" pos:column="65">/* __MEM_CHECKED__ */</comment>
	<if pos:line="6" pos:column="9">if<condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">!<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">opts<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18"> <block pos:line="6" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">perror<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name><name pos:line="7" pos:column="24">argv<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">exit<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><literal type="number" pos:line="8" pos:column="22">2<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">argc<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&lt;<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="20">2<pos:position pos:line="11" pos:column="21"/></literal></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
	<block pos:line="12" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="13" pos:column="11">fprintf<pos:position pos:line="13" pos:column="18"/></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">stderr<pos:position pos:line="13" pos:column="26"/></name></expr></argument>,
		   <argument><expr><literal type="string" pos:line="14" pos:column="20">"Command line usage: %s [flags] -- prefix [recipients]\n"<pos:position pos:line="14" pos:column="77"/></literal></expr></argument>,
		   <argument><expr><name><name pos:line="15" pos:column="20">argv<pos:position pos:line="15" pos:column="24"/></name><index pos:line="15" pos:column="24">[<expr><literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr>]<pos:position pos:line="15" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
	  <return pos:line="16" pos:column="11">return <expr><literal type="number" pos:line="16" pos:column="18">1<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">opt<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">opts<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">opt<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">++<pos:position pos:line="20" pos:column="15"/></operator> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name><name pos:line="20" pos:column="18">argv<pos:position pos:line="20" pos:column="22"/></name><index pos:line="20" pos:column="22">[<expr><literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal></expr>]<pos:position pos:line="20" pos:column="25"/></index></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">pfx<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">NULL<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>

	<for pos:line="23" pos:column="9">for<control pos:line="23" pos:column="12">(<init><expr><name pos:line="23" pos:column="13">i<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <literal type="number" pos:line="23" pos:column="17">2<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></init> <condition><expr><name pos:line="23" pos:column="20">i<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">&lt;<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="24">argc<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></condition> <incr/>)<pos:position pos:line="23" pos:column="31"/></control> <block pos:line="23" pos:column="32">{
		<if pos:line="24" pos:column="17">if<condition pos:line="24" pos:column="19">(<expr><operator pos:line="24" pos:column="20">!<pos:position pos:line="24" pos:column="21"/></operator><call><name pos:line="24" pos:column="21">strcmp<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name><name pos:line="24" pos:column="28">argv<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><name pos:line="24" pos:column="33">i<pos:position pos:line="24" pos:column="34"/></name></expr>]<pos:position pos:line="24" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="37">"--"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43"> <block pos:line="24" pos:column="44">{
			<expr_stmt><expr><name pos:line="25" pos:column="25">i<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">+=<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="30">2<pos:position pos:line="25" pos:column="31"/></literal></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
			<if pos:line="26" pos:column="25">if<condition pos:line="26" pos:column="27">(<expr><name pos:line="26" pos:column="28">i<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">&gt;<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="32">argc<pos:position pos:line="26" pos:column="36"/></name></expr>)<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37"> <block pos:line="26" pos:column="38">{
				<expr_stmt><expr><call><name pos:line="27" pos:column="33">fprintf<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">stderr<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="49">"Command line usage: %s [flags] -- prefix [recipients]\n"<pos:position pos:line="27" pos:column="106"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="108">argv<pos:position pos:line="27" pos:column="112"/></name><index pos:line="27" pos:column="112">[<expr><literal type="number" pos:line="27" pos:column="113">0<pos:position pos:line="27" pos:column="114"/></literal></expr>]<pos:position pos:line="27" pos:column="115"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="117"/></expr_stmt>
				<return pos:line="28" pos:column="33">return <expr><literal type="number" pos:line="28" pos:column="40">1<pos:position pos:line="28" pos:column="41"/></literal></expr>;<pos:position pos:line="28" pos:column="42"/></return>
			}<pos:position pos:line="29" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="30" pos:column="25">pfx<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <name><name pos:line="30" pos:column="31">argv<pos:position pos:line="30" pos:column="35"/></name><index pos:line="30" pos:column="35">[<expr><name pos:line="30" pos:column="36">i<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">-<pos:position pos:line="30" pos:column="38"/></operator><literal type="number" pos:line="30" pos:column="38">1<pos:position pos:line="30" pos:column="39"/></literal></expr>]<pos:position pos:line="30" pos:column="40"/></index></name></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<if pos:line="32" pos:column="17">if<condition pos:line="32" pos:column="19">(<expr><name pos:line="32" pos:column="20">pfx<pos:position pos:line="32" pos:column="23"/></name></expr>)<pos:position pos:line="32" pos:column="24"/></condition><then pos:line="32" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="33" pos:column="25">*<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">opt<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">++<pos:position pos:line="33" pos:column="31"/></operator> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <name pos:line="33" pos:column="34">pfx<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">opt<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">++<pos:position pos:line="34" pos:column="23"/></operator> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <name><name pos:line="34" pos:column="26">argv<pos:position pos:line="34" pos:column="30"/></name><index pos:line="34" pos:column="30">[<expr><name pos:line="34" pos:column="31">i<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">++<pos:position pos:line="34" pos:column="34"/></operator></expr>]<pos:position pos:line="34" pos:column="35"/></index></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></for>
	<expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">opt<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">NULL<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="38" pos:column="9">execvp<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name><name pos:line="38" pos:column="16">opts<pos:position pos:line="38" pos:column="20"/></name><index pos:line="38" pos:column="20">[<expr><literal type="number" pos:line="38" pos:column="21">0<pos:position pos:line="38" pos:column="22"/></literal></expr>]<pos:position pos:line="38" pos:column="23"/></index></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="25">opts<pos:position pos:line="38" pos:column="29"/></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">perror<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name><name pos:line="39" pos:column="16">argv<pos:position pos:line="39" pos:column="20"/></name><index pos:line="39" pos:column="20">[<expr><literal type="number" pos:line="39" pos:column="21">0<pos:position pos:line="39" pos:column="22"/></literal></expr>]<pos:position pos:line="39" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
	<return pos:line="40" pos:column="9">return <expr><literal type="number" pos:line="40" pos:column="16">2<pos:position pos:line="40" pos:column="17"/></literal></expr>;<pos:position pos:line="40" pos:column="18"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

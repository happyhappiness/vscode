<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2093_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_parse_path<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name><modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type> <name pos:line="1" pos:column="34">path<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">IMAP_MBOX<pos:position pos:line="1" pos:column="49"/></name><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type> <name pos:line="1" pos:column="51">mx<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">unsigned<pos:position pos:line="3" pos:column="18"/></name> <name pos:line="3" pos:column="19">short<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">ImapPort<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><literal type="number" pos:line="3" pos:column="36">0<pos:position pos:line="3" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">unsigned<pos:position pos:line="4" pos:column="18"/></name> <name pos:line="4" pos:column="19">short<pos:position pos:line="4" pos:column="24"/></name></type> <name pos:line="4" pos:column="25">ImapsPort<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><literal type="number" pos:line="4" pos:column="37">0<pos:position pos:line="4" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">servent<pos:position pos:line="5" pos:column="17"/></name></name><modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type> <name pos:line="5" pos:column="19">service<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">tmp<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><literal type="number" pos:line="6" pos:column="12">128<pos:position pos:line="6" pos:column="15"/></literal></expr>]<pos:position pos:line="6" pos:column="16"/></index></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">ciss_url_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">url<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">c<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">n<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">ImapPort<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">service<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">getservbyname<pos:position pos:line="13" pos:column="28"/></name> <argument_list pos:line="13" pos:column="29">(<argument><expr><literal type="string" pos:line="13" pos:column="30">"imap"<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="38">"tcp"<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">service<pos:position pos:line="14" pos:column="16"/></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="7">ImapPort<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">ntohs<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><name><name pos:line="15" pos:column="25">service<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">s_port<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt></block></then>
    <else pos:line="16" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="7">ImapPort<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">IMAP_PORT<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">dprint<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><literal type="number" pos:line="18" pos:column="13">3<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">debugfile<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">,<pos:position pos:line="18" pos:column="27"/></operator> <literal type="string" pos:line="18" pos:column="28">"Using default IMAP port %d\n"<pos:position pos:line="18" pos:column="58"/></literal><operator pos:line="18" pos:column="58">,<pos:position pos:line="18" pos:column="59"/></operator> <name pos:line="18" pos:column="60">ImapPort<pos:position pos:line="18" pos:column="68"/></name><operator pos:line="18" pos:column="68">)<pos:position pos:line="18" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">!<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">ImapsPort<pos:position pos:line="20" pos:column="17"/></name></expr>)<pos:position pos:line="20" pos:column="18"/></condition><then pos:line="20" pos:column="18">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><name pos:line="22" pos:column="5">service<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">getservbyname<pos:position pos:line="22" pos:column="28"/></name> <argument_list pos:line="22" pos:column="29">(<argument><expr><literal type="string" pos:line="22" pos:column="30">"imaps"<pos:position pos:line="22" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"tcp"<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">service<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">ImapsPort<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">ntohs<pos:position pos:line="24" pos:column="24"/></name> <argument_list pos:line="24" pos:column="25">(<argument><expr><name><name pos:line="24" pos:column="26">service<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">s_port<pos:position pos:line="24" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt></block></then>
    <else pos:line="25" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="7">ImapsPort<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">IMAP_SSL_PORT<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">dprint<pos:position pos:line="27" pos:column="11"/></name> <argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="number" pos:line="27" pos:column="13">3<pos:position pos:line="27" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">debugfile<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">,<pos:position pos:line="27" pos:column="27"/></operator> <literal type="string" pos:line="27" pos:column="28">"Using default IMAPS port %d\n"<pos:position pos:line="27" pos:column="59"/></literal><operator pos:line="27" pos:column="59">,<pos:position pos:line="27" pos:column="60"/></operator> <name pos:line="27" pos:column="61">ImapsPort<pos:position pos:line="27" pos:column="70"/></name><operator pos:line="27" pos:column="70">)<pos:position pos:line="27" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* Defaults */</comment>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">memset<pos:position pos:line="31" pos:column="9"/></name><argument_list pos:line="31" pos:column="9">(<argument><expr><operator pos:line="31" pos:column="10">&amp;<pos:position pos:line="31" pos:column="15"/></operator><name><name pos:line="31" pos:column="11">mx<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">account<pos:position pos:line="31" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="27">sizeof<argument_list pos:line="31" pos:column="33">(<argument><expr><name><name pos:line="31" pos:column="34">mx<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">account<pos:position pos:line="31" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">mx<pos:position pos:line="32" pos:column="5"/></name><operator pos:line="32" pos:column="5">-&gt;<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="7">account<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">port<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">ImapPort<pos:position pos:line="32" pos:column="30"/></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">mx<pos:position pos:line="33" pos:column="5"/></name><operator pos:line="33" pos:column="5">-&gt;<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="7">account<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">type<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">MUTT_ACCT_TYPE_IMAP<pos:position pos:line="33" pos:column="41"/></name></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name pos:line="35" pos:column="3">c<pos:position pos:line="35" pos:column="4"/></name> <operator pos:line="35" pos:column="5">=<pos:position pos:line="35" pos:column="6"/></operator> <call><name pos:line="35" pos:column="7">safe_strdup<pos:position pos:line="35" pos:column="18"/></name> <argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">path<pos:position pos:line="35" pos:column="24"/></name></expr></argument>)<pos:position pos:line="35" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">url_parse_ciss<pos:position pos:line="36" pos:column="17"/></name> <argument_list pos:line="36" pos:column="18">(<argument><expr><operator pos:line="36" pos:column="19">&amp;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="20">url<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="25">c<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name><name pos:line="37" pos:column="7">url<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">.<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="11">scheme<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">==<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">U_IMAP<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">||<pos:position pos:line="37" pos:column="30"/></operator> <name><name pos:line="37" pos:column="31">url<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">.<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">scheme<pos:position pos:line="37" pos:column="41"/></name></name> <operator pos:line="37" pos:column="42">==<pos:position pos:line="37" pos:column="44"/></operator> <name pos:line="37" pos:column="45">U_IMAPS<pos:position pos:line="37" pos:column="52"/></name></expr>)<pos:position pos:line="37" pos:column="53"/></condition><then pos:line="37" pos:column="53">
  <block pos:line="38" pos:column="3">{
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><call><name pos:line="39" pos:column="9">mutt_account_fromurl<pos:position pos:line="39" pos:column="29"/></name> <argument_list pos:line="39" pos:column="30">(<argument><expr><operator pos:line="39" pos:column="31">&amp;<pos:position pos:line="39" pos:column="36"/></operator><name><name pos:line="39" pos:column="32">mx<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">account<pos:position pos:line="39" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="45">&amp;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="46">url<pos:position pos:line="39" pos:column="49"/></name></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call> <operator pos:line="39" pos:column="51">&lt;<pos:position pos:line="39" pos:column="55"/></operator> <literal type="number" pos:line="39" pos:column="53">0<pos:position pos:line="39" pos:column="54"/></literal> <operator pos:line="39" pos:column="55">||<pos:position pos:line="39" pos:column="57"/></operator> <operator pos:line="39" pos:column="58">!<pos:position pos:line="39" pos:column="59"/></operator><operator pos:line="39" pos:column="59">*<pos:position pos:line="39" pos:column="60"/></operator><name><name pos:line="39" pos:column="60">mx<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">-&gt;<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="64">account<pos:position pos:line="39" pos:column="71"/></name><operator pos:line="39" pos:column="71">.<pos:position pos:line="39" pos:column="72"/></operator><name pos:line="39" pos:column="72">host<pos:position pos:line="39" pos:column="76"/></name></name></expr>)<pos:position pos:line="39" pos:column="77"/></condition><then pos:line="39" pos:column="77">
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">FREE<pos:position pos:line="41" pos:column="11"/></name> <argument_list pos:line="41" pos:column="12">(<argument><expr><operator pos:line="41" pos:column="13">&amp;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="14">c<pos:position pos:line="41" pos:column="15"/></name></expr></argument>)<pos:position pos:line="41" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="17"/></expr_stmt>
      <return pos:line="42" pos:column="7">return <expr><operator pos:line="42" pos:column="14">-<pos:position pos:line="42" pos:column="15"/></operator><literal type="number" pos:line="42" pos:column="15">1<pos:position pos:line="42" pos:column="16"/></literal></expr>;<pos:position pos:line="42" pos:column="17"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="45" pos:column="5">mx<pos:position pos:line="45" pos:column="7"/></name><operator pos:line="45" pos:column="7">-&gt;<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="9">mbox<pos:position pos:line="45" pos:column="13"/></name></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name pos:line="45" pos:column="16">safe_strdup<pos:position pos:line="45" pos:column="27"/></name> <argument_list pos:line="45" pos:column="28">(<argument><expr><name><name pos:line="45" pos:column="29">url<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">.<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">path<pos:position pos:line="45" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">url<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">.<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="13">scheme<pos:position pos:line="47" pos:column="19"/></name></name> <operator pos:line="47" pos:column="20">==<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">U_IMAPS<pos:position pos:line="47" pos:column="30"/></name></expr>)<pos:position pos:line="47" pos:column="31"/></condition><then pos:line="47" pos:column="31">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="7">mx<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">account<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">.<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">flags<pos:position pos:line="48" pos:column="24"/></name></name> <operator pos:line="48" pos:column="25">|=<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="28">MUTT_ACCT_SSL<pos:position pos:line="48" pos:column="41"/></name></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="50" pos:column="5">FREE<pos:position pos:line="50" pos:column="9"/></name> <argument_list pos:line="50" pos:column="10">(<argument><expr><operator pos:line="50" pos:column="11">&amp;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="12">c<pos:position pos:line="50" pos:column="13"/></name></expr></argument>)<pos:position pos:line="50" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then>
  <comment type="block" pos:line="52" pos:column="3">/* old PINE-compatibility code */</comment>
  <else pos:line="53" pos:column="3">else
  <block pos:line="54" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">FREE<pos:position pos:line="55" pos:column="9"/></name> <argument_list pos:line="55" pos:column="10">(<argument><expr><operator pos:line="55" pos:column="11">&amp;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="12">c<pos:position pos:line="55" pos:column="13"/></name></expr></argument>)<pos:position pos:line="55" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="15"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">sscanf<pos:position pos:line="56" pos:column="15"/></name> <argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">path<pos:position pos:line="56" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="23">"{%127[^}]}"<pos:position pos:line="56" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="37">tmp<pos:position pos:line="56" pos:column="40"/></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call> <operator pos:line="56" pos:column="42">!=<pos:position pos:line="56" pos:column="44"/></operator> <literal type="number" pos:line="56" pos:column="45">1<pos:position pos:line="56" pos:column="46"/></literal></expr>)<pos:position pos:line="56" pos:column="47"/></condition><then pos:line="56" pos:column="47">
      <block type="pseudo"><return pos:line="57" pos:column="7">return <expr><operator pos:line="57" pos:column="14">-<pos:position pos:line="57" pos:column="15"/></operator><literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="59" pos:column="5">c<pos:position pos:line="59" pos:column="6"/></name> <operator pos:line="59" pos:column="7">=<pos:position pos:line="59" pos:column="8"/></operator> <call><name pos:line="59" pos:column="9">strchr<pos:position pos:line="59" pos:column="15"/></name> <argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">path<pos:position pos:line="59" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="59" pos:column="23">'}'<pos:position pos:line="59" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">!<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">c<pos:position pos:line="60" pos:column="11"/></name></expr>)<pos:position pos:line="60" pos:column="12"/></condition><then pos:line="60" pos:column="12">
      <block type="pseudo"><return pos:line="61" pos:column="7">return <expr><operator pos:line="61" pos:column="14">-<pos:position pos:line="61" pos:column="15"/></operator><literal type="number" pos:line="61" pos:column="15">1<pos:position pos:line="61" pos:column="16"/></literal></expr>;<pos:position pos:line="61" pos:column="17"/></return></block></then>
    <else pos:line="62" pos:column="5">else
      <comment type="block" pos:line="63" pos:column="7">/* walk past closing '}' */</comment>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="7">mx<pos:position pos:line="64" pos:column="9"/></name><operator pos:line="64" pos:column="9">-&gt;<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="11">mbox<pos:position pos:line="64" pos:column="15"/></name></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <call><name pos:line="64" pos:column="18">safe_strdup<pos:position pos:line="64" pos:column="29"/></name> <argument_list pos:line="64" pos:column="30">(<argument><expr><name pos:line="64" pos:column="31">c<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">+<pos:position pos:line="64" pos:column="33"/></operator><literal type="number" pos:line="64" pos:column="33">1<pos:position pos:line="64" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="36"/></expr_stmt></block></else></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">(<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">c<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <call><name pos:line="66" pos:column="14">strrchr<pos:position pos:line="66" pos:column="21"/></name> <argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">tmp<pos:position pos:line="66" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="66" pos:column="28">'@'<pos:position pos:line="66" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="32"/></argument_list></call><operator pos:line="66" pos:column="32">)<pos:position pos:line="66" pos:column="33"/></operator></expr>)<pos:position pos:line="66" pos:column="34"/></condition><then pos:line="66" pos:column="34">
    <block pos:line="67" pos:column="5">{
      <expr_stmt><expr><operator pos:line="68" pos:column="7">*<pos:position pos:line="68" pos:column="8"/></operator><name pos:line="68" pos:column="8">c<pos:position pos:line="68" pos:column="9"/></name> <operator pos:line="68" pos:column="10">=<pos:position pos:line="68" pos:column="11"/></operator> <literal type="char" pos:line="68" pos:column="12">'\0'<pos:position pos:line="68" pos:column="16"/></literal></expr>;<pos:position pos:line="68" pos:column="17"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">strfcpy<pos:position pos:line="69" pos:column="14"/></name> <argument_list pos:line="69" pos:column="15">(<argument><expr><name><name pos:line="69" pos:column="16">mx<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">-&gt;<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="20">account<pos:position pos:line="69" pos:column="27"/></name><operator pos:line="69" pos:column="27">.<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="28">user<pos:position pos:line="69" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="34">tmp<pos:position pos:line="69" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="39">sizeof <argument_list pos:line="69" pos:column="46">(<argument><expr><name><name pos:line="69" pos:column="47">mx<pos:position pos:line="69" pos:column="49"/></name><operator pos:line="69" pos:column="49">-&gt;<pos:position pos:line="69" pos:column="54"/></operator><name pos:line="69" pos:column="51">account<pos:position pos:line="69" pos:column="58"/></name><operator pos:line="69" pos:column="58">.<pos:position pos:line="69" pos:column="59"/></operator><name pos:line="69" pos:column="59">user<pos:position pos:line="69" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="69" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">strfcpy<pos:position pos:line="70" pos:column="14"/></name> <argument_list pos:line="70" pos:column="15">(<argument><expr><name pos:line="70" pos:column="16">tmp<pos:position pos:line="70" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="21">c<pos:position pos:line="70" pos:column="22"/></name><operator pos:line="70" pos:column="22">+<pos:position pos:line="70" pos:column="23"/></operator><literal type="number" pos:line="70" pos:column="23">1<pos:position pos:line="70" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="26">sizeof <argument_list pos:line="70" pos:column="33">(<argument><expr><name pos:line="70" pos:column="34">tmp<pos:position pos:line="70" pos:column="37"/></name></expr></argument>)<pos:position pos:line="70" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="71" pos:column="7">mx<pos:position pos:line="71" pos:column="9"/></name><operator pos:line="71" pos:column="9">-&gt;<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="11">account<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">.<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="19">flags<pos:position pos:line="71" pos:column="24"/></name></name> <operator pos:line="71" pos:column="25">|=<pos:position pos:line="71" pos:column="27"/></operator> <name pos:line="71" pos:column="28">MUTT_ACCT_USER<pos:position pos:line="71" pos:column="42"/></name></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><operator pos:line="74" pos:column="9">(<pos:position pos:line="74" pos:column="10"/></operator><name pos:line="74" pos:column="10">n<pos:position pos:line="74" pos:column="11"/></name> <operator pos:line="74" pos:column="12">=<pos:position pos:line="74" pos:column="13"/></operator> <call><name pos:line="74" pos:column="14">sscanf<pos:position pos:line="74" pos:column="20"/></name> <argument_list pos:line="74" pos:column="21">(<argument><expr><name pos:line="74" pos:column="22">tmp<pos:position pos:line="74" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="27">"%127[^:/]%127s"<pos:position pos:line="74" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="45">mx<pos:position pos:line="74" pos:column="47"/></name><operator pos:line="74" pos:column="47">-&gt;<pos:position pos:line="74" pos:column="52"/></operator><name pos:line="74" pos:column="49">account<pos:position pos:line="74" pos:column="56"/></name><operator pos:line="74" pos:column="56">.<pos:position pos:line="74" pos:column="57"/></operator><name pos:line="74" pos:column="57">host<pos:position pos:line="74" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="63">tmp<pos:position pos:line="74" pos:column="66"/></name></expr></argument>)<pos:position pos:line="74" pos:column="67"/></argument_list></call><operator pos:line="74" pos:column="67">)<pos:position pos:line="74" pos:column="68"/></operator> <operator pos:line="74" pos:column="69">&lt;<pos:position pos:line="74" pos:column="73"/></operator> <literal type="number" pos:line="74" pos:column="71">1<pos:position pos:line="74" pos:column="72"/></literal></expr>)<pos:position pos:line="74" pos:column="73"/></condition><then pos:line="74" pos:column="73">
    <block pos:line="75" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">dprint<pos:position pos:line="76" pos:column="13"/></name> <argument_list pos:line="76" pos:column="14">(<argument><expr><literal type="number" pos:line="76" pos:column="15">1<pos:position pos:line="76" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="76" pos:column="18">(<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="19">debugfile<pos:position pos:line="76" pos:column="28"/></name><operator pos:line="76" pos:column="28">,<pos:position pos:line="76" pos:column="29"/></operator> <literal type="string" pos:line="76" pos:column="30">"imap_parse_path: NULL host in %s\n"<pos:position pos:line="76" pos:column="66"/></literal><operator pos:line="76" pos:column="66">,<pos:position pos:line="76" pos:column="67"/></operator> <name pos:line="76" pos:column="68">path<pos:position pos:line="76" pos:column="72"/></name><operator pos:line="76" pos:column="72">)<pos:position pos:line="76" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="76" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="75"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="77" pos:column="7">FREE<pos:position pos:line="77" pos:column="11"/></name> <argument_list pos:line="77" pos:column="12">(<argument><expr><operator pos:line="77" pos:column="13">&amp;<pos:position pos:line="77" pos:column="18"/></operator><name><name pos:line="77" pos:column="14">mx<pos:position pos:line="77" pos:column="16"/></name><operator pos:line="77" pos:column="16">-&gt;<pos:position pos:line="77" pos:column="21"/></operator><name pos:line="77" pos:column="18">mbox<pos:position pos:line="77" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="24"/></expr_stmt>
      <return pos:line="78" pos:column="7">return <expr><operator pos:line="78" pos:column="14">-<pos:position pos:line="78" pos:column="15"/></operator><literal type="number" pos:line="78" pos:column="15">1<pos:position pos:line="78" pos:column="16"/></literal></expr>;<pos:position pos:line="78" pos:column="17"/></return>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name pos:line="81" pos:column="9">n<pos:position pos:line="81" pos:column="10"/></name> <operator pos:line="81" pos:column="11">&gt;<pos:position pos:line="81" pos:column="15"/></operator> <literal type="number" pos:line="81" pos:column="13">1<pos:position pos:line="81" pos:column="14"/></literal></expr>)<pos:position pos:line="81" pos:column="15"/></condition><then pos:line="81" pos:column="15"> <block pos:line="81" pos:column="16">{
      <if pos:line="82" pos:column="7">if <condition pos:line="82" pos:column="10">(<expr><call><name pos:line="82" pos:column="11">sscanf<pos:position pos:line="82" pos:column="17"/></name> <argument_list pos:line="82" pos:column="18">(<argument><expr><name pos:line="82" pos:column="19">tmp<pos:position pos:line="82" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="24">":%hu%127s"<pos:position pos:line="82" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="37">&amp;<pos:position pos:line="82" pos:column="42"/></operator><operator pos:line="82" pos:column="38">(<pos:position pos:line="82" pos:column="39"/></operator><name><name pos:line="82" pos:column="39">mx<pos:position pos:line="82" pos:column="41"/></name><operator pos:line="82" pos:column="41">-&gt;<pos:position pos:line="82" pos:column="46"/></operator><name pos:line="82" pos:column="43">account<pos:position pos:line="82" pos:column="50"/></name><operator pos:line="82" pos:column="50">.<pos:position pos:line="82" pos:column="51"/></operator><name pos:line="82" pos:column="51">port<pos:position pos:line="82" pos:column="55"/></name></name><operator pos:line="82" pos:column="55">)<pos:position pos:line="82" pos:column="56"/></operator></expr></argument>, <argument><expr><name pos:line="82" pos:column="58">tmp<pos:position pos:line="82" pos:column="61"/></name></expr></argument>)<pos:position pos:line="82" pos:column="62"/></argument_list></call> <operator pos:line="82" pos:column="63">&gt;=<pos:position pos:line="82" pos:column="68"/></operator> <literal type="number" pos:line="82" pos:column="66">1<pos:position pos:line="82" pos:column="67"/></literal></expr>)<pos:position pos:line="82" pos:column="68"/></condition><then pos:line="82" pos:column="68">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="83" pos:column="9">mx<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">account<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">.<pos:position pos:line="83" pos:column="21"/></operator><name pos:line="83" pos:column="21">flags<pos:position pos:line="83" pos:column="26"/></name></name> <operator pos:line="83" pos:column="27">|=<pos:position pos:line="83" pos:column="29"/></operator> <name pos:line="83" pos:column="30">MUTT_ACCT_PORT<pos:position pos:line="83" pos:column="44"/></name></expr>;<pos:position pos:line="83" pos:column="45"/></expr_stmt></block></then></if>
      <if pos:line="84" pos:column="7">if <condition pos:line="84" pos:column="10">(<expr><call><name pos:line="84" pos:column="11">sscanf<pos:position pos:line="84" pos:column="17"/></name> <argument_list pos:line="84" pos:column="18">(<argument><expr><name pos:line="84" pos:column="19">tmp<pos:position pos:line="84" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="24">"/%s"<pos:position pos:line="84" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="31">tmp<pos:position pos:line="84" pos:column="34"/></name></expr></argument>)<pos:position pos:line="84" pos:column="35"/></argument_list></call> <operator pos:line="84" pos:column="36">==<pos:position pos:line="84" pos:column="38"/></operator> <literal type="number" pos:line="84" pos:column="39">1<pos:position pos:line="84" pos:column="40"/></literal></expr>)<pos:position pos:line="84" pos:column="41"/></condition><then pos:line="84" pos:column="41">
      <block pos:line="85" pos:column="7">{
	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><operator pos:line="86" pos:column="13">!<pos:position pos:line="86" pos:column="14"/></operator><call><name pos:line="86" pos:column="14">ascii_strncmp<pos:position pos:line="86" pos:column="27"/></name> <argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">tmp<pos:position pos:line="86" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="34">"ssl"<pos:position pos:line="86" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="41">3<pos:position pos:line="86" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="44"/></condition><then pos:line="86" pos:column="44">
	  <block type="pseudo"><expr_stmt><expr><name><name pos:line="87" pos:column="11">mx<pos:position pos:line="87" pos:column="13"/></name><operator pos:line="87" pos:column="13">-&gt;<pos:position pos:line="87" pos:column="18"/></operator><name pos:line="87" pos:column="15">account<pos:position pos:line="87" pos:column="22"/></name><operator pos:line="87" pos:column="22">.<pos:position pos:line="87" pos:column="23"/></operator><name pos:line="87" pos:column="23">flags<pos:position pos:line="87" pos:column="28"/></name></name> <operator pos:line="87" pos:column="29">|=<pos:position pos:line="87" pos:column="31"/></operator> <name pos:line="87" pos:column="32">MUTT_ACCT_SSL<pos:position pos:line="87" pos:column="45"/></name></expr>;<pos:position pos:line="87" pos:column="46"/></expr_stmt></block></then>
	<else pos:line="88" pos:column="9">else
	<block pos:line="89" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="90" pos:column="11">dprint<pos:position pos:line="90" pos:column="17"/></name> <argument_list pos:line="90" pos:column="18">(<argument><expr><literal type="number" pos:line="90" pos:column="19">1<pos:position pos:line="90" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="90" pos:column="22">(<pos:position pos:line="90" pos:column="23"/></operator><name pos:line="90" pos:column="23">debugfile<pos:position pos:line="90" pos:column="32"/></name><operator pos:line="90" pos:column="32">,<pos:position pos:line="90" pos:column="33"/></operator> <literal type="string" pos:line="90" pos:column="34">"imap_parse_path: Unknown connection type in %s\n"<pos:position pos:line="90" pos:column="84"/></literal><operator pos:line="90" pos:column="84">,<pos:position pos:line="90" pos:column="85"/></operator> <name pos:line="90" pos:column="86">path<pos:position pos:line="90" pos:column="90"/></name><operator pos:line="90" pos:column="90">)<pos:position pos:line="90" pos:column="91"/></operator></expr></argument>)<pos:position pos:line="90" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="93"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="91" pos:column="11">FREE<pos:position pos:line="91" pos:column="15"/></name> <argument_list pos:line="91" pos:column="16">(<argument><expr><operator pos:line="91" pos:column="17">&amp;<pos:position pos:line="91" pos:column="22"/></operator><name><name pos:line="91" pos:column="18">mx<pos:position pos:line="91" pos:column="20"/></name><operator pos:line="91" pos:column="20">-&gt;<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="22">mbox<pos:position pos:line="91" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="28"/></expr_stmt>
	  <return pos:line="92" pos:column="11">return <expr><operator pos:line="92" pos:column="18">-<pos:position pos:line="92" pos:column="19"/></operator><literal type="number" pos:line="92" pos:column="19">1<pos:position pos:line="92" pos:column="20"/></literal></expr>;<pos:position pos:line="92" pos:column="21"/></return>
	}<pos:position pos:line="93" pos:column="10"/></block></else></if>
      }<pos:position pos:line="94" pos:column="8"/></block></then></if>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>
  }<pos:position pos:line="96" pos:column="4"/></block></else></if>

  <if pos:line="98" pos:column="3">if <condition pos:line="98" pos:column="6">(<expr><operator pos:line="98" pos:column="7">(<pos:position pos:line="98" pos:column="8"/></operator><name><name pos:line="98" pos:column="8">mx<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">-&gt;<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="12">account<pos:position pos:line="98" pos:column="19"/></name><operator pos:line="98" pos:column="19">.<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="20">flags<pos:position pos:line="98" pos:column="25"/></name></name> <operator pos:line="98" pos:column="26">&amp;<pos:position pos:line="98" pos:column="31"/></operator> <name pos:line="98" pos:column="28">MUTT_ACCT_SSL<pos:position pos:line="98" pos:column="41"/></name><operator pos:line="98" pos:column="41">)<pos:position pos:line="98" pos:column="42"/></operator> <operator pos:line="98" pos:column="43">&amp;&amp;<pos:position pos:line="98" pos:column="53"/></operator> <operator pos:line="98" pos:column="46">!<pos:position pos:line="98" pos:column="47"/></operator><operator pos:line="98" pos:column="47">(<pos:position pos:line="98" pos:column="48"/></operator><name><name pos:line="98" pos:column="48">mx<pos:position pos:line="98" pos:column="50"/></name><operator pos:line="98" pos:column="50">-&gt;<pos:position pos:line="98" pos:column="55"/></operator><name pos:line="98" pos:column="52">account<pos:position pos:line="98" pos:column="59"/></name><operator pos:line="98" pos:column="59">.<pos:position pos:line="98" pos:column="60"/></operator><name pos:line="98" pos:column="60">flags<pos:position pos:line="98" pos:column="65"/></name></name> <operator pos:line="98" pos:column="66">&amp;<pos:position pos:line="98" pos:column="71"/></operator> <name pos:line="98" pos:column="68">MUTT_ACCT_PORT<pos:position pos:line="98" pos:column="82"/></name><operator pos:line="98" pos:column="82">)<pos:position pos:line="98" pos:column="83"/></operator></expr>)<pos:position pos:line="98" pos:column="84"/></condition><then pos:line="98" pos:column="84">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="99" pos:column="5">mx<pos:position pos:line="99" pos:column="7"/></name><operator pos:line="99" pos:column="7">-&gt;<pos:position pos:line="99" pos:column="12"/></operator><name pos:line="99" pos:column="9">account<pos:position pos:line="99" pos:column="16"/></name><operator pos:line="99" pos:column="16">.<pos:position pos:line="99" pos:column="17"/></operator><name pos:line="99" pos:column="17">port<pos:position pos:line="99" pos:column="21"/></name></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <name pos:line="99" pos:column="24">ImapsPort<pos:position pos:line="99" pos:column="33"/></name></expr>;<pos:position pos:line="99" pos:column="34"/></expr_stmt></block></then></if>

  <return pos:line="101" pos:column="3">return <expr><literal type="number" pos:line="101" pos:column="10">0<pos:position pos:line="101" pos:column="11"/></literal></expr>;<pos:position pos:line="101" pos:column="12"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

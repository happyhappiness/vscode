<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_395_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_num_postponed<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">force<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">stat<pos:position pos:line="3" pos:column="14"/></name></name></type> <name pos:line="3" pos:column="15">st<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">CONTEXT<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">ctx<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><name pos:line="6" pos:column="10">time_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">LastModify<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="7" pos:column="3">static<pos:position pos:line="7" pos:column="9"/></specifier> <type><name pos:line="7" pos:column="10">char<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">OldPostponed<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">UpdateNumPostponed<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">UpdateNumPostponed<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">force<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">mutt_strcmp<pos:position pos:line="15" pos:column="18"/></name> <argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">Postponed<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">OldPostponed<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">FREE<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><operator pos:line="17" pos:column="11">&amp;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="12">OldPostponed<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">OldPostponed<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <call><name pos:line="18" pos:column="20">safe_strdup<pos:position pos:line="18" pos:column="31"/></name> <argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">Postponed<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">LastModify<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">force<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <literal type="number" pos:line="20" pos:column="13">1<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">!<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">Postponed<pos:position pos:line="23" pos:column="17"/></name></expr>)<pos:position pos:line="23" pos:column="18"/></condition><then pos:line="23" pos:column="18">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></return></block></then></if>

<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">USE_IMAP<pos:position pos:line="26" pos:column="16"/></name></cpp:ifdef>
  <comment type="block" pos:line="27" pos:column="3">/* LastModify is useless for IMAP */</comment>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><call><name pos:line="28" pos:column="7">mx_is_imap<pos:position pos:line="28" pos:column="17"/></name> <argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">Postponed<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
  <block pos:line="29" pos:column="3">{
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">force<pos:position pos:line="30" pos:column="14"/></name></expr>)<pos:position pos:line="30" pos:column="15"/></condition><then pos:line="30" pos:column="15">
    <block pos:line="31" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="32" pos:column="7">short<pos:position pos:line="32" pos:column="12"/></name></type> <name pos:line="32" pos:column="13">newpc<pos:position pos:line="32" pos:column="18"/></name></decl>;<pos:position pos:line="32" pos:column="19"/></decl_stmt>

      <expr_stmt><expr><name pos:line="34" pos:column="7">newpc<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">imap_status<pos:position pos:line="34" pos:column="26"/></name> <argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">Postponed<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="39">0<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><name pos:line="35" pos:column="11">newpc<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">&gt;=<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="20">0<pos:position pos:line="35" pos:column="21"/></literal></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22">
      <block pos:line="36" pos:column="7">{
	<expr_stmt><expr><name pos:line="37" pos:column="9">PostCount<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">newpc<pos:position pos:line="37" pos:column="26"/></name></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">dprint<pos:position pos:line="38" pos:column="15"/></name> <argument_list pos:line="38" pos:column="16">(<argument><expr><literal type="number" pos:line="38" pos:column="17">3<pos:position pos:line="38" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="20">(<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">debugfile<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">,<pos:position pos:line="38" pos:column="31"/></operator> <literal type="string" pos:line="38" pos:column="32">"mutt_num_postponed: %d postponed IMAP messages found.\n"<pos:position pos:line="38" pos:column="89"/></literal><operator pos:line="38" pos:column="89">,<pos:position pos:line="38" pos:column="90"/></operator> <name pos:line="38" pos:column="91">PostCount<pos:position pos:line="38" pos:column="100"/></name><operator pos:line="38" pos:column="100">)<pos:position pos:line="38" pos:column="101"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="103"/></expr_stmt>
      }<pos:position pos:line="39" pos:column="8"/></block></then>
      <else pos:line="40" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="9">dprint<pos:position pos:line="41" pos:column="15"/></name> <argument_list pos:line="41" pos:column="16">(<argument><expr><literal type="number" pos:line="41" pos:column="17">3<pos:position pos:line="41" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="20">(<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">debugfile<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">,<pos:position pos:line="41" pos:column="31"/></operator> <literal type="string" pos:line="41" pos:column="32">"mutt_num_postponed: using old IMAP postponed count.\n"<pos:position pos:line="41" pos:column="87"/></literal><operator pos:line="41" pos:column="87">)<pos:position pos:line="41" pos:column="88"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="90"/></expr_stmt></block></else></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">PostCount<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><call><name pos:line="47" pos:column="7">stat<pos:position pos:line="47" pos:column="11"/></name> <argument_list pos:line="47" pos:column="12">(<argument><expr><name pos:line="47" pos:column="13">Postponed<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="24">&amp;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="25">st<pos:position pos:line="47" pos:column="27"/></name></expr></argument>)<pos:position pos:line="47" pos:column="28"/></argument_list></call> <operator pos:line="47" pos:column="29">==<pos:position pos:line="47" pos:column="31"/></operator> <operator pos:line="47" pos:column="32">-<pos:position pos:line="47" pos:column="33"/></operator><literal type="number" pos:line="47" pos:column="33">1<pos:position pos:line="47" pos:column="34"/></literal></expr>)<pos:position pos:line="47" pos:column="35"/></condition><then pos:line="47" pos:column="35">
  <block pos:line="48" pos:column="3">{
     <expr_stmt><expr><name pos:line="49" pos:column="6">PostCount<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <literal type="number" pos:line="49" pos:column="18">0<pos:position pos:line="49" pos:column="19"/></literal></expr>;<pos:position pos:line="49" pos:column="20"/></expr_stmt>
     <expr_stmt><expr><name pos:line="50" pos:column="6">LastModify<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <literal type="number" pos:line="50" pos:column="19">0<pos:position pos:line="50" pos:column="20"/></literal></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
     <return pos:line="51" pos:column="6">return <expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><literal type="number" pos:line="51" pos:column="14">0<pos:position pos:line="51" pos:column="15"/></literal><operator pos:line="51" pos:column="15">)<pos:position pos:line="51" pos:column="16"/></operator></expr>;<pos:position pos:line="51" pos:column="17"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><call><name pos:line="54" pos:column="7">S_ISDIR<pos:position pos:line="54" pos:column="14"/></name> <argument_list pos:line="54" pos:column="15">(<argument><expr><name><name pos:line="54" pos:column="16">st<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">.<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="19">st_mode<pos:position pos:line="54" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="28"/></condition><then pos:line="54" pos:column="28">
  <block pos:line="55" pos:column="3">{
    <comment type="block" pos:line="56" pos:column="5">/* if we have a maildir mailbox, we need to stat the "new" dir */</comment>

    <decl_stmt><decl><type><name pos:line="58" pos:column="5">char<pos:position pos:line="58" pos:column="9"/></name></type> <name><name pos:line="58" pos:column="10">buf<pos:position pos:line="58" pos:column="13"/></name><index pos:line="58" pos:column="13">[<expr><name pos:line="58" pos:column="14">_POSIX_PATH_MAX<pos:position pos:line="58" pos:column="29"/></name></expr>]<pos:position pos:line="58" pos:column="30"/></index></name></decl>;<pos:position pos:line="58" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">snprintf<pos:position pos:line="60" pos:column="13"/></name> <argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">buf<pos:position pos:line="60" pos:column="18"/></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="20">sizeof <argument_list pos:line="60" pos:column="27">(<argument><expr><name pos:line="60" pos:column="28">buf<pos:position pos:line="60" pos:column="31"/></name></expr></argument>)<pos:position pos:line="60" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="34">"%s/new"<pos:position pos:line="60" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="44">Postponed<pos:position pos:line="60" pos:column="53"/></name></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="55"/></expr_stmt>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><call><name pos:line="61" pos:column="9">access<pos:position pos:line="61" pos:column="15"/></name> <argument_list pos:line="61" pos:column="16">(<argument><expr><name pos:line="61" pos:column="17">buf<pos:position pos:line="61" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="22">F_OK<pos:position pos:line="61" pos:column="26"/></name></expr></argument>)<pos:position pos:line="61" pos:column="27"/></argument_list></call> <operator pos:line="61" pos:column="28">==<pos:position pos:line="61" pos:column="30"/></operator> <literal type="number" pos:line="61" pos:column="31">0<pos:position pos:line="61" pos:column="32"/></literal> <operator pos:line="61" pos:column="33">&amp;&amp;<pos:position pos:line="61" pos:column="43"/></operator> <call><name pos:line="61" pos:column="36">stat<pos:position pos:line="61" pos:column="40"/></name> <argument_list pos:line="61" pos:column="41">(<argument><expr><name pos:line="61" pos:column="42">buf<pos:position pos:line="61" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="47">&amp;<pos:position pos:line="61" pos:column="52"/></operator><name pos:line="61" pos:column="48">st<pos:position pos:line="61" pos:column="50"/></name></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call> <operator pos:line="61" pos:column="52">==<pos:position pos:line="61" pos:column="54"/></operator> <operator pos:line="61" pos:column="55">-<pos:position pos:line="61" pos:column="56"/></operator><literal type="number" pos:line="61" pos:column="56">1<pos:position pos:line="61" pos:column="57"/></literal></expr>)<pos:position pos:line="61" pos:column="58"/></condition><then pos:line="61" pos:column="58">
    <block pos:line="62" pos:column="5">{
      <expr_stmt><expr><name pos:line="63" pos:column="7">PostCount<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <literal type="number" pos:line="63" pos:column="19">0<pos:position pos:line="63" pos:column="20"/></literal></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="64" pos:column="7">LastModify<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">=<pos:position pos:line="64" pos:column="19"/></operator> <literal type="number" pos:line="64" pos:column="20">0<pos:position pos:line="64" pos:column="21"/></literal></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>
      <return pos:line="65" pos:column="7">return <expr><literal type="number" pos:line="65" pos:column="14">0<pos:position pos:line="65" pos:column="15"/></literal></expr>;<pos:position pos:line="65" pos:column="16"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name pos:line="69" pos:column="7">LastModify<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">&lt;<pos:position pos:line="69" pos:column="22"/></operator> <name><name pos:line="69" pos:column="20">st<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">.<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="23">st_mtime<pos:position pos:line="69" pos:column="31"/></name></name></expr>)<pos:position pos:line="69" pos:column="32"/></condition><then pos:line="69" pos:column="32">
  <block pos:line="70" pos:column="3">{
    <expr_stmt><expr><name pos:line="71" pos:column="5">LastModify<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <name><name pos:line="71" pos:column="18">st<pos:position pos:line="71" pos:column="20"/></name><operator pos:line="71" pos:column="20">.<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="21">st_mtime<pos:position pos:line="71" pos:column="29"/></name></name></expr>;<pos:position pos:line="71" pos:column="30"/></expr_stmt>

    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><call><name pos:line="73" pos:column="9">access<pos:position pos:line="73" pos:column="15"/></name> <argument_list pos:line="73" pos:column="16">(<argument><expr><name pos:line="73" pos:column="17">Postponed<pos:position pos:line="73" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="28">R_OK<pos:position pos:line="73" pos:column="32"/></name> <operator pos:line="73" pos:column="33">|<pos:position pos:line="73" pos:column="34"/></operator> <name pos:line="73" pos:column="35">F_OK<pos:position pos:line="73" pos:column="39"/></name></expr></argument>)<pos:position pos:line="73" pos:column="40"/></argument_list></call> <operator pos:line="73" pos:column="41">!=<pos:position pos:line="73" pos:column="43"/></operator> <literal type="number" pos:line="73" pos:column="44">0<pos:position pos:line="73" pos:column="45"/></literal></expr>)<pos:position pos:line="73" pos:column="46"/></condition><then pos:line="73" pos:column="46">
      <block type="pseudo"><return pos:line="74" pos:column="7">return <expr><operator pos:line="74" pos:column="14">(<pos:position pos:line="74" pos:column="15"/></operator><name pos:line="74" pos:column="15">PostCount<pos:position pos:line="74" pos:column="24"/></name> <operator pos:line="74" pos:column="25">=<pos:position pos:line="74" pos:column="26"/></operator> <literal type="number" pos:line="74" pos:column="27">0<pos:position pos:line="74" pos:column="28"/></literal><operator pos:line="74" pos:column="28">)<pos:position pos:line="74" pos:column="29"/></operator></expr>;<pos:position pos:line="74" pos:column="30"/></return></block></then></if>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><call><name pos:line="75" pos:column="9">mx_open_mailbox<pos:position pos:line="75" pos:column="24"/></name> <argument_list pos:line="75" pos:column="25">(<argument><expr><name pos:line="75" pos:column="26">Postponed<pos:position pos:line="75" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="37">MUTT_NOSORT<pos:position pos:line="75" pos:column="48"/></name> <operator pos:line="75" pos:column="49">|<pos:position pos:line="75" pos:column="50"/></operator> <name pos:line="75" pos:column="51">MUTT_QUIET<pos:position pos:line="75" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="63">&amp;<pos:position pos:line="75" pos:column="68"/></operator><name pos:line="75" pos:column="64">ctx<pos:position pos:line="75" pos:column="67"/></name></expr></argument>)<pos:position pos:line="75" pos:column="68"/></argument_list></call> <operator pos:line="75" pos:column="69">==<pos:position pos:line="75" pos:column="71"/></operator> <name pos:line="75" pos:column="72">NULL<pos:position pos:line="75" pos:column="76"/></name></expr>)<pos:position pos:line="75" pos:column="77"/></condition><then pos:line="75" pos:column="77">
      <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="7">PostCount<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">=<pos:position pos:line="76" pos:column="18"/></operator> <literal type="number" pos:line="76" pos:column="19">0<pos:position pos:line="76" pos:column="20"/></literal></expr>;<pos:position pos:line="76" pos:column="21"/></expr_stmt></block></then>
    <else pos:line="77" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="7">PostCount<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <name><name pos:line="78" pos:column="19">ctx<pos:position pos:line="78" pos:column="22"/></name><operator pos:line="78" pos:column="22">.<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="23">msgcount<pos:position pos:line="78" pos:column="31"/></name></name></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">mx_fastclose_mailbox<pos:position pos:line="79" pos:column="25"/></name> <argument_list pos:line="79" pos:column="26">(<argument><expr><operator pos:line="79" pos:column="27">&amp;<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="28">ctx<pos:position pos:line="79" pos:column="31"/></name></expr></argument>)<pos:position pos:line="79" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <return pos:line="82" pos:column="3">return <expr><operator pos:line="82" pos:column="10">(<pos:position pos:line="82" pos:column="11"/></operator><name pos:line="82" pos:column="11">PostCount<pos:position pos:line="82" pos:column="20"/></name><operator pos:line="82" pos:column="20">)<pos:position pos:line="82" pos:column="21"/></operator></expr>;<pos:position pos:line="82" pos:column="22"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

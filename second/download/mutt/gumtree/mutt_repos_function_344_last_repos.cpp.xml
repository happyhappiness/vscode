<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_344_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">km_bind<pos:position pos:line="1" pos:column="13"/></name> <parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">char<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">s<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">menu<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">op<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">macro<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">descr<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">keymap_t<pos:position pos:line="3" pos:column="18"/></name></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">map<pos:position pos:line="3" pos:column="23"/></name></decl>, <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="26">tmp<pos:position pos:line="3" pos:column="29"/></name></decl>, <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="32">last<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><name pos:line="3" pos:column="39">NULL<pos:position pos:line="3" pos:column="43"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="46">next<pos:position pos:line="3" pos:column="50"/></name></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">keycode_t<pos:position pos:line="4" pos:column="12"/></name></type> <name><name pos:line="4" pos:column="13">buf<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">MAX_SEQ<pos:position pos:line="4" pos:column="24"/></name></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">len<pos:position pos:line="5" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="12">pos<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="21">lastpos<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">len<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">parsekeys<pos:position pos:line="7" pos:column="18"/></name> <argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">s<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">buf<pos:position pos:line="7" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="28">MAX_SEQ<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="9" pos:column="3">map<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">allocKeys<pos:position pos:line="9" pos:column="18"/></name> <argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">len<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">buf<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">map<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">op<pos:position pos:line="10" pos:column="10"/></name></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">op<pos:position pos:line="10" pos:column="15"/></name></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">map<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">macro<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">safe_strdup<pos:position pos:line="11" pos:column="27"/></name> <argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">macro<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">map<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">descr<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">safe_strdup<pos:position pos:line="12" pos:column="27"/></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">descr<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">tmp<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <name><name pos:line="14" pos:column="9">Keymaps<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><name pos:line="14" pos:column="17">menu<pos:position pos:line="14" pos:column="21"/></name></expr>]<pos:position pos:line="14" pos:column="22"/></index></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>

  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><name pos:line="16" pos:column="10">tmp<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition>
  <block pos:line="17" pos:column="3">{
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">pos<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">&gt;=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="16">len<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">||<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">pos<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&gt;=<pos:position pos:line="18" pos:column="32"/></operator> <name><name pos:line="18" pos:column="30">tmp<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">len<pos:position pos:line="18" pos:column="38"/></name></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
    <block pos:line="19" pos:column="5">{
      <comment type="block" pos:line="20" pos:column="7">/* map and tmp match, but have different lengths, so overwrite */</comment>
      <do pos:line="21" pos:column="7">do
      <block pos:line="22" pos:column="7">{
	<expr_stmt><expr><name pos:line="23" pos:column="9">len<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name><name pos:line="23" pos:column="15">tmp<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">eq<pos:position pos:line="23" pos:column="22"/></name></name></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">next<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name><name pos:line="24" pos:column="16">tmp<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">next<pos:position pos:line="24" pos:column="25"/></name></name></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">FREE<pos:position pos:line="25" pos:column="13"/></name> <argument_list pos:line="25" pos:column="14">(<argument><expr><operator pos:line="25" pos:column="15">&amp;<pos:position pos:line="25" pos:column="20"/></operator><name><name pos:line="25" pos:column="16">tmp<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">macro<pos:position pos:line="25" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">FREE<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><operator pos:line="26" pos:column="15">&amp;<pos:position pos:line="26" pos:column="20"/></operator><name><name pos:line="26" pos:column="16">tmp<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">keys<pos:position pos:line="26" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">FREE<pos:position pos:line="27" pos:column="13"/></name> <argument_list pos:line="27" pos:column="14">(<argument><expr><operator pos:line="27" pos:column="15">&amp;<pos:position pos:line="27" pos:column="20"/></operator><name><name pos:line="27" pos:column="16">tmp<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">-&gt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">descr<pos:position pos:line="27" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">FREE<pos:position pos:line="28" pos:column="13"/></name> <argument_list pos:line="28" pos:column="14">(<argument><expr><operator pos:line="28" pos:column="15">&amp;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="16">tmp<pos:position pos:line="28" pos:column="19"/></name></expr></argument>)<pos:position pos:line="28" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="29" pos:column="9">tmp<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">next<pos:position pos:line="29" pos:column="19"/></name></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="30" pos:column="8"/></block>
      while <condition pos:line="31" pos:column="13">(<expr><name pos:line="31" pos:column="14">tmp<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&amp;&amp;<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="21">len<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">&gt;=<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="28">pos<pos:position pos:line="31" pos:column="31"/></name></expr>)<pos:position pos:line="31" pos:column="32"/></condition>;<pos:position pos:line="31" pos:column="33"/></do>
      <expr_stmt><expr><name><name pos:line="32" pos:column="7">map<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">eq<pos:position pos:line="32" pos:column="14"/></name></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <name pos:line="32" pos:column="17">len<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
      <break pos:line="33" pos:column="7">break;<pos:position pos:line="33" pos:column="13"/></break>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><name><name pos:line="35" pos:column="14">buf<pos:position pos:line="35" pos:column="17"/></name><index pos:line="35" pos:column="17">[<expr><name pos:line="35" pos:column="18">pos<pos:position pos:line="35" pos:column="21"/></name></expr>]<pos:position pos:line="35" pos:column="22"/></index></name> <operator pos:line="35" pos:column="23">==<pos:position pos:line="35" pos:column="25"/></operator> <name><name pos:line="35" pos:column="26">tmp<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">keys<pos:position pos:line="35" pos:column="35"/></name><index pos:line="35" pos:column="35">[<expr><name pos:line="35" pos:column="36">pos<pos:position pos:line="35" pos:column="39"/></name></expr>]<pos:position pos:line="35" pos:column="40"/></index></name></expr>)<pos:position pos:line="35" pos:column="41"/></condition><then pos:line="35" pos:column="41">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">pos<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">++<pos:position pos:line="36" pos:column="12"/></operator></expr>;<pos:position pos:line="36" pos:column="13"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><name><name pos:line="37" pos:column="14">buf<pos:position pos:line="37" pos:column="17"/></name><index pos:line="37" pos:column="17">[<expr><name pos:line="37" pos:column="18">pos<pos:position pos:line="37" pos:column="21"/></name></expr>]<pos:position pos:line="37" pos:column="22"/></index></name> <operator pos:line="37" pos:column="23">&lt;<pos:position pos:line="37" pos:column="27"/></operator> <name><name pos:line="37" pos:column="25">tmp<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">keys<pos:position pos:line="37" pos:column="34"/></name><index pos:line="37" pos:column="34">[<expr><name pos:line="37" pos:column="35">pos<pos:position pos:line="37" pos:column="38"/></name></expr>]<pos:position pos:line="37" pos:column="39"/></index></name></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40">
    <block pos:line="38" pos:column="5">{
      <comment type="block" pos:line="39" pos:column="7">/* found location to insert between last and tmp */</comment>
      <expr_stmt><expr><name><name pos:line="40" pos:column="7">map<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">eq<pos:position pos:line="40" pos:column="14"/></name></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <name pos:line="40" pos:column="17">pos<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>
      <break pos:line="41" pos:column="7">break;<pos:position pos:line="41" pos:column="13"/></break>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if></elseif>
    <else pos:line="43" pos:column="5">else <comment type="block" pos:line="43" pos:column="10">/* buf[pos] &gt; tmp-&gt;keys[pos] */</comment>
    <block pos:line="44" pos:column="5">{
      <expr_stmt><expr><name pos:line="45" pos:column="7">last<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <name pos:line="45" pos:column="14">tmp<pos:position pos:line="45" pos:column="17"/></name></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">lastpos<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">pos<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><name pos:line="47" pos:column="11">pos<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">&gt;<pos:position pos:line="47" pos:column="19"/></operator> <name><name pos:line="47" pos:column="17">tmp<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">eq<pos:position pos:line="47" pos:column="24"/></name></name></expr>)<pos:position pos:line="47" pos:column="25"/></condition><then pos:line="47" pos:column="25">
	<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="9">pos<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <name><name pos:line="48" pos:column="15">tmp<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">eq<pos:position pos:line="48" pos:column="22"/></name></name></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="49" pos:column="7">tmp<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <name><name pos:line="49" pos:column="13">tmp<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">next<pos:position pos:line="49" pos:column="22"/></name></name></expr>;<pos:position pos:line="49" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></else></if>
  }<pos:position pos:line="51" pos:column="4"/></block></while>

  <expr_stmt><expr><name><name pos:line="53" pos:column="3">map<pos:position pos:line="53" pos:column="6"/></name><operator pos:line="53" pos:column="6">-&gt;<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="8">next<pos:position pos:line="53" pos:column="12"/></name></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <name pos:line="53" pos:column="15">tmp<pos:position pos:line="53" pos:column="18"/></name></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">last<pos:position pos:line="54" pos:column="11"/></name></expr>)<pos:position pos:line="54" pos:column="12"/></condition><then pos:line="54" pos:column="12">
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">last<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">next<pos:position pos:line="56" pos:column="15"/></name></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">map<pos:position pos:line="56" pos:column="21"/></name></expr>;<pos:position pos:line="56" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">last<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">eq<pos:position pos:line="57" pos:column="13"/></name></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <name pos:line="57" pos:column="16">lastpos<pos:position pos:line="57" pos:column="23"/></name></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then>
  <else pos:line="59" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="5">Keymaps<pos:position pos:line="60" pos:column="12"/></name><index pos:line="60" pos:column="12">[<expr><name pos:line="60" pos:column="13">menu<pos:position pos:line="60" pos:column="17"/></name></expr>]<pos:position pos:line="60" pos:column="18"/></index></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <name pos:line="60" pos:column="21">map<pos:position pos:line="60" pos:column="24"/></name></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt></block></else></if>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

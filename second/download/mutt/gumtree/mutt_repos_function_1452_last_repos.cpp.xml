<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1452_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">state_prefix_putc<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">c<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">STATE<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name><name pos:line="3" pos:column="7">s<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">-&gt;<pos:position pos:line="3" pos:column="13"/></operator><name pos:line="3" pos:column="10">flags<pos:position pos:line="3" pos:column="15"/></name></name> <operator pos:line="3" pos:column="16">&amp;<pos:position pos:line="3" pos:column="21"/></operator> <name pos:line="3" pos:column="18">MUTT_PENDINGPREFIX<pos:position pos:line="3" pos:column="36"/></name></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37">
  <block pos:line="4" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">state_reset_prefix<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">s<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">prefix<pos:position pos:line="6" pos:column="18"/></name></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="7">state_puts<pos:position pos:line="7" pos:column="17"/></name> <argument_list pos:line="7" pos:column="18">(<argument><expr><name><name pos:line="7" pos:column="19">s<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">prefix<pos:position pos:line="7" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">s<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt></block></then></if>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">state_putc<pos:position pos:line="10" pos:column="13"/></name> <argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">c<pos:position pos:line="10" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="18">s<pos:position pos:line="10" pos:column="19"/></name></expr></argument>)<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">c<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">==<pos:position pos:line="12" pos:column="11"/></operator> <literal type="char" pos:line="12" pos:column="12">'\n'<pos:position pos:line="12" pos:column="16"/></literal></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">state_set_prefix<pos:position pos:line="13" pos:column="21"/></name> <argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">s<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

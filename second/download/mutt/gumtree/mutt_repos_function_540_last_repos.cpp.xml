<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_540_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mx_fastclose_mailbox<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">CONTEXT<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">ctx<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">utimbuf<pos:position pos:line="4" pos:column="17"/></name></name></type> <name pos:line="4" pos:column="18">ut<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><operator pos:line="6" pos:column="6">!<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">ctx<pos:position pos:line="6" pos:column="10"/></name></expr>)<pos:position pos:line="6" pos:column="11"/></condition><then pos:line="6" pos:column="11"> 
    <block type="pseudo"><return pos:line="7" pos:column="5">return;<pos:position pos:line="7" pos:column="12"/></return></block></then></if>

  <comment type="block" pos:line="9" pos:column="3">/* fix up the times so buffy won't get confused */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">ctx<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">peekonly<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">&amp;&amp;<pos:position pos:line="10" pos:column="31"/></operator> <name><name pos:line="10" pos:column="24">ctx<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">path<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">&amp;&amp;<pos:position pos:line="10" pos:column="44"/></operator> <operator pos:line="10" pos:column="37">(<pos:position pos:line="10" pos:column="38"/></operator><name><name pos:line="10" pos:column="38">ctx<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">mtime<pos:position pos:line="10" pos:column="48"/></name></name> <operator pos:line="10" pos:column="49">&gt;<pos:position pos:line="10" pos:column="53"/></operator> <name><name pos:line="10" pos:column="51">ctx<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">-&gt;<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="56">atime<pos:position pos:line="10" pos:column="61"/></name></name><operator pos:line="10" pos:column="61">)<pos:position pos:line="10" pos:column="62"/></operator></expr>)<pos:position pos:line="10" pos:column="63"/></condition><then pos:line="10" pos:column="63"> <block pos:line="10" pos:column="64">{
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">ut<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">actime<pos:position pos:line="11" pos:column="14"/></name></name>  <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name><name pos:line="11" pos:column="18">ctx<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">atime<pos:position pos:line="11" pos:column="28"/></name></name></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">ut<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">.<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">modtime<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name><name pos:line="12" pos:column="18">ctx<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">mtime<pos:position pos:line="12" pos:column="28"/></name></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">utime<pos:position pos:line="13" pos:column="10"/></name> <argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">ctx<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">path<pos:position pos:line="13" pos:column="21"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">ut<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="16" pos:column="3">/* never announce that a mailbox we've just left has new mail. #3290
   * XXX: really belongs in mx_close_mailbox, but this is a nice hook point */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name><name pos:line="18" pos:column="8">ctx<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">peekonly<pos:position pos:line="18" pos:column="21"/></name></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_buffy_setnotified<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name><name pos:line="19" pos:column="28">ctx<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">path<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt></block></then></if>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name><name pos:line="21" pos:column="7">ctx<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">mx_ops<pos:position pos:line="21" pos:column="18"/></name></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="22" pos:column="5">ctx<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">mx_ops<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">close<pos:position pos:line="22" pos:column="23"/></name></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">ctx<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">USE_COMPRESSED<pos:position pos:line="24" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">mutt_free_compress_info<pos:position pos:line="25" pos:column="26"/></name> <argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">ctx<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="26" pos:column="8">/* USE_COMPRESSED */</comment>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name><name pos:line="28" pos:column="7">ctx<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">subj_hash<pos:position pos:line="28" pos:column="21"/></name></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">hash_destroy<pos:position pos:line="29" pos:column="17"/></name> <argument_list pos:line="29" pos:column="18">(<argument><expr><operator pos:line="29" pos:column="19">&amp;<pos:position pos:line="29" pos:column="24"/></operator><name><name pos:line="29" pos:column="20">ctx<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">subj_hash<pos:position pos:line="29" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="36">NULL<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt></block></then></if>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name><name pos:line="30" pos:column="7">ctx<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">id_hash<pos:position pos:line="30" pos:column="19"/></name></name></expr>)<pos:position pos:line="30" pos:column="20"/></condition><then pos:line="30" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">hash_destroy<pos:position pos:line="31" pos:column="17"/></name> <argument_list pos:line="31" pos:column="18">(<argument><expr><operator pos:line="31" pos:column="19">&amp;<pos:position pos:line="31" pos:column="24"/></operator><name><name pos:line="31" pos:column="20">ctx<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">id_hash<pos:position pos:line="31" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">NULL<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">hash_destroy<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">(<argument><expr><operator pos:line="32" pos:column="17">&amp;<pos:position pos:line="32" pos:column="22"/></operator><name><name pos:line="32" pos:column="18">ctx<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">label_hash<pos:position pos:line="32" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">NULL<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">mutt_clear_threads<pos:position pos:line="33" pos:column="21"/></name> <argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">ctx<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
  <for pos:line="34" pos:column="3">for <control pos:line="34" pos:column="7">(<init><expr><name pos:line="34" pos:column="8">i<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <literal type="number" pos:line="34" pos:column="12">0<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></init> <condition><expr><name pos:line="34" pos:column="15">i<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">&lt;<pos:position pos:line="34" pos:column="21"/></operator> <name><name pos:line="34" pos:column="19">ctx<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">msgcount<pos:position pos:line="34" pos:column="32"/></name></name></expr>;<pos:position pos:line="34" pos:column="33"/></condition> <incr><expr><name pos:line="34" pos:column="34">i<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">++<pos:position pos:line="34" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="38"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="5">mutt_free_header<pos:position pos:line="35" pos:column="21"/></name> <argument_list pos:line="35" pos:column="22">(<argument><expr><operator pos:line="35" pos:column="23">&amp;<pos:position pos:line="35" pos:column="28"/></operator><name><name pos:line="35" pos:column="24">ctx<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">hdrs<pos:position pos:line="35" pos:column="33"/></name><index pos:line="35" pos:column="33">[<expr><name pos:line="35" pos:column="34">i<pos:position pos:line="35" pos:column="35"/></name></expr>]<pos:position pos:line="35" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt></block></for>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">FREE<pos:position pos:line="36" pos:column="7"/></name> <argument_list pos:line="36" pos:column="8">(<argument><expr><operator pos:line="36" pos:column="9">&amp;<pos:position pos:line="36" pos:column="14"/></operator><name><name pos:line="36" pos:column="10">ctx<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">hdrs<pos:position pos:line="36" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">FREE<pos:position pos:line="37" pos:column="7"/></name> <argument_list pos:line="37" pos:column="8">(<argument><expr><operator pos:line="37" pos:column="9">&amp;<pos:position pos:line="37" pos:column="14"/></operator><name><name pos:line="37" pos:column="10">ctx<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">v2r<pos:position pos:line="37" pos:column="18"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">FREE<pos:position pos:line="38" pos:column="7"/></name> <argument_list pos:line="38" pos:column="8">(<argument><expr><operator pos:line="38" pos:column="9">&amp;<pos:position pos:line="38" pos:column="14"/></operator><name><name pos:line="38" pos:column="10">ctx<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">path<pos:position pos:line="38" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">FREE<pos:position pos:line="39" pos:column="7"/></name> <argument_list pos:line="39" pos:column="8">(<argument><expr><operator pos:line="39" pos:column="9">&amp;<pos:position pos:line="39" pos:column="14"/></operator><name><name pos:line="39" pos:column="10">ctx<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">realpath<pos:position pos:line="39" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">FREE<pos:position pos:line="40" pos:column="7"/></name> <argument_list pos:line="40" pos:column="8">(<argument><expr><operator pos:line="40" pos:column="9">&amp;<pos:position pos:line="40" pos:column="14"/></operator><name><name pos:line="40" pos:column="10">ctx<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">pattern<pos:position pos:line="40" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name><name pos:line="41" pos:column="7">ctx<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">limit_pattern<pos:position pos:line="41" pos:column="25"/></name></name></expr>)<pos:position pos:line="41" pos:column="26"/></condition><then pos:line="41" pos:column="26"> 
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="5">mutt_pattern_free<pos:position pos:line="42" pos:column="22"/></name> <argument_list pos:line="42" pos:column="23">(<argument><expr><operator pos:line="42" pos:column="24">&amp;<pos:position pos:line="42" pos:column="29"/></operator><name><name pos:line="42" pos:column="25">ctx<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">limit_pattern<pos:position pos:line="42" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">safe_fclose<pos:position pos:line="43" pos:column="14"/></name> <argument_list pos:line="43" pos:column="15">(<argument><expr><operator pos:line="43" pos:column="16">&amp;<pos:position pos:line="43" pos:column="21"/></operator><name><name pos:line="43" pos:column="17">ctx<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">fp<pos:position pos:line="43" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">memset<pos:position pos:line="44" pos:column="9"/></name> <argument_list pos:line="44" pos:column="10">(<argument><expr><name pos:line="44" pos:column="11">ctx<pos:position pos:line="44" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="19">sizeof <argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">CONTEXT<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

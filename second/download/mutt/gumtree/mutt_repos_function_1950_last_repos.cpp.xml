<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1950_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">yylex<pos:position pos:line="2" pos:column="6"/></name> <argument_list pos:line="2" pos:column="7">(<argument><expr><name pos:line="2" pos:column="8">lval<pos:position pos:line="2" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="14">pexp<pos:position pos:line="2" pos:column="18"/></name></expr></argument>)<pos:position pos:line="2" pos:column="19"/></argument_list>
     <name pos:line="3" pos:column="6">YYSTYPE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><name pos:line="3" pos:column="15">lval<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="4" pos:column="6">const<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">pexp<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">exp<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">pexp<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">result<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><literal type="number" pos:line="9" pos:column="10">1<pos:position pos:line="9" pos:column="11"/></literal></expr>)<pos:position pos:line="9" pos:column="12"/></condition>
    <block pos:line="10" pos:column="5">{
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><name><name pos:line="11" pos:column="11">exp<pos:position pos:line="11" pos:column="14"/></name><index pos:line="11" pos:column="14">[<expr><literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal></expr>]<pos:position pos:line="11" pos:column="17"/></index></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <literal type="char" pos:line="11" pos:column="21">'\0'<pos:position pos:line="11" pos:column="25"/></literal></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
	<block pos:line="12" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="13" pos:column="11">*<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">pexp<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">exp<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
	  <return pos:line="14" pos:column="11">return <expr><name pos:line="14" pos:column="18">YYEOF<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name><name pos:line="17" pos:column="11">exp<pos:position pos:line="17" pos:column="14"/></name><index pos:line="17" pos:column="14">[<expr><literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr>]<pos:position pos:line="17" pos:column="17"/></index></name> <operator pos:line="17" pos:column="18">!=<pos:position pos:line="17" pos:column="20"/></operator> <literal type="char" pos:line="17" pos:column="21">' '<pos:position pos:line="17" pos:column="24"/></literal> <operator pos:line="17" pos:column="25">&amp;&amp;<pos:position pos:line="17" pos:column="35"/></operator> <name><name pos:line="17" pos:column="28">exp<pos:position pos:line="17" pos:column="31"/></name><index pos:line="17" pos:column="31">[<expr><literal type="number" pos:line="17" pos:column="32">0<pos:position pos:line="17" pos:column="33"/></literal></expr>]<pos:position pos:line="17" pos:column="34"/></index></name> <operator pos:line="17" pos:column="35">!=<pos:position pos:line="17" pos:column="37"/></operator> <literal type="char" pos:line="17" pos:column="38">'\t'<pos:position pos:line="17" pos:column="42"/></literal></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
	<block type="pseudo"><break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><operator pos:line="20" pos:column="7">++<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">exp<pos:position pos:line="20" pos:column="12"/></name></expr>;<pos:position pos:line="20" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></while>

  <expr_stmt><expr><name pos:line="23" pos:column="3">result<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <operator pos:line="23" pos:column="12">*<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">exp<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">++<pos:position pos:line="23" pos:column="18"/></operator></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
  <switch pos:line="24" pos:column="3">switch <condition pos:line="24" pos:column="10">(<expr><name pos:line="24" pos:column="11">result<pos:position pos:line="24" pos:column="17"/></name></expr>)<pos:position pos:line="24" pos:column="18"/></condition>
    <block pos:line="25" pos:column="5">{
    <case pos:line="26" pos:column="5">case <expr><literal type="char" pos:line="26" pos:column="10">'0'<pos:position pos:line="26" pos:column="13"/></literal></expr>:<pos:position pos:line="26" pos:column="14"/></case> <case pos:line="26" pos:column="15">case <expr><literal type="char" pos:line="26" pos:column="20">'1'<pos:position pos:line="26" pos:column="23"/></literal></expr>:<pos:position pos:line="26" pos:column="24"/></case> <case pos:line="26" pos:column="25">case <expr><literal type="char" pos:line="26" pos:column="30">'2'<pos:position pos:line="26" pos:column="33"/></literal></expr>:<pos:position pos:line="26" pos:column="34"/></case> <case pos:line="26" pos:column="35">case <expr><literal type="char" pos:line="26" pos:column="40">'3'<pos:position pos:line="26" pos:column="43"/></literal></expr>:<pos:position pos:line="26" pos:column="44"/></case> <case pos:line="26" pos:column="45">case <expr><literal type="char" pos:line="26" pos:column="50">'4'<pos:position pos:line="26" pos:column="53"/></literal></expr>:<pos:position pos:line="26" pos:column="54"/></case>
    <case pos:line="27" pos:column="5">case <expr><literal type="char" pos:line="27" pos:column="10">'5'<pos:position pos:line="27" pos:column="13"/></literal></expr>:<pos:position pos:line="27" pos:column="14"/></case> <case pos:line="27" pos:column="15">case <expr><literal type="char" pos:line="27" pos:column="20">'6'<pos:position pos:line="27" pos:column="23"/></literal></expr>:<pos:position pos:line="27" pos:column="24"/></case> <case pos:line="27" pos:column="25">case <expr><literal type="char" pos:line="27" pos:column="30">'7'<pos:position pos:line="27" pos:column="33"/></literal></expr>:<pos:position pos:line="27" pos:column="34"/></case> <case pos:line="27" pos:column="35">case <expr><literal type="char" pos:line="27" pos:column="40">'8'<pos:position pos:line="27" pos:column="43"/></literal></expr>:<pos:position pos:line="27" pos:column="44"/></case> <case pos:line="27" pos:column="45">case <expr><literal type="char" pos:line="27" pos:column="50">'9'<pos:position pos:line="27" pos:column="53"/></literal></expr>:<pos:position pos:line="27" pos:column="54"/></case>
      <block pos:line="28" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="29" pos:column="9">unsigned<pos:position pos:line="29" pos:column="17"/></name> <name pos:line="29" pos:column="18">long<pos:position pos:line="29" pos:column="22"/></name> <name pos:line="29" pos:column="23">int<pos:position pos:line="29" pos:column="26"/></name></type> <name pos:line="29" pos:column="27">n<pos:position pos:line="29" pos:column="28"/></name> <init pos:line="29" pos:column="29">= <expr><name pos:line="29" pos:column="31">result<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">-<pos:position pos:line="29" pos:column="39"/></operator> <literal type="char" pos:line="29" pos:column="40">'0'<pos:position pos:line="29" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="44"/></decl_stmt>
	<while pos:line="30" pos:column="9">while <condition pos:line="30" pos:column="15">(<expr><name><name pos:line="30" pos:column="16">exp<pos:position pos:line="30" pos:column="19"/></name><index pos:line="30" pos:column="19">[<expr><literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr>]<pos:position pos:line="30" pos:column="22"/></index></name> <operator pos:line="30" pos:column="23">&gt;=<pos:position pos:line="30" pos:column="28"/></operator> <literal type="char" pos:line="30" pos:column="26">'0'<pos:position pos:line="30" pos:column="29"/></literal> <operator pos:line="30" pos:column="30">&amp;&amp;<pos:position pos:line="30" pos:column="40"/></operator> <name><name pos:line="30" pos:column="33">exp<pos:position pos:line="30" pos:column="36"/></name><index pos:line="30" pos:column="36">[<expr><literal type="number" pos:line="30" pos:column="37">0<pos:position pos:line="30" pos:column="38"/></literal></expr>]<pos:position pos:line="30" pos:column="39"/></index></name> <operator pos:line="30" pos:column="40">&lt;=<pos:position pos:line="30" pos:column="45"/></operator> <literal type="char" pos:line="30" pos:column="43">'9'<pos:position pos:line="30" pos:column="46"/></literal></expr>)<pos:position pos:line="30" pos:column="47"/></condition>
	  <block pos:line="31" pos:column="11">{
	    <expr_stmt><expr><name pos:line="32" pos:column="13">n<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">*=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">10<pos:position pos:line="32" pos:column="20"/></literal></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="33" pos:column="13">n<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">+=<pos:position pos:line="33" pos:column="17"/></operator> <name><name pos:line="33" pos:column="18">exp<pos:position pos:line="33" pos:column="21"/></name><index pos:line="33" pos:column="21">[<expr><literal type="number" pos:line="33" pos:column="22">0<pos:position pos:line="33" pos:column="23"/></literal></expr>]<pos:position pos:line="33" pos:column="24"/></index></name> <operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator> <literal type="char" pos:line="33" pos:column="27">'0'<pos:position pos:line="33" pos:column="30"/></literal></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">exp<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
	  }<pos:position pos:line="35" pos:column="12"/></block></while>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">lval<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">num<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name pos:line="36" pos:column="21">n<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="37" pos:column="9">result<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">NUMBER<pos:position pos:line="37" pos:column="24"/></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="38" pos:column="8"/></block>
      <break pos:line="39" pos:column="7">break;<pos:position pos:line="39" pos:column="13"/></break>

    <case pos:line="41" pos:column="5">case <expr><literal type="char" pos:line="41" pos:column="10">'='<pos:position pos:line="41" pos:column="13"/></literal></expr>:<pos:position pos:line="41" pos:column="14"/></case>
      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name><name pos:line="42" pos:column="11">exp<pos:position pos:line="42" pos:column="14"/></name><index pos:line="42" pos:column="14">[<expr><literal type="number" pos:line="42" pos:column="15">0<pos:position pos:line="42" pos:column="16"/></literal></expr>]<pos:position pos:line="42" pos:column="17"/></index></name> <operator pos:line="42" pos:column="18">==<pos:position pos:line="42" pos:column="20"/></operator> <literal type="char" pos:line="42" pos:column="21">'='<pos:position pos:line="42" pos:column="24"/></literal></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
	<block pos:line="43" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="44" pos:column="11">++<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="13">exp<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="45" pos:column="11">lval<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">op<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">equal<pos:position pos:line="45" pos:column="27"/></name></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="46" pos:column="11">result<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">EQUOP2<pos:position pos:line="46" pos:column="26"/></name></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></then>
      <else pos:line="48" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="9">result<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <name pos:line="49" pos:column="18">YYERRCODE<pos:position pos:line="49" pos:column="27"/></name></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt></block></else></if>
      <break pos:line="50" pos:column="7">break;<pos:position pos:line="50" pos:column="13"/></break>

    <case pos:line="52" pos:column="5">case <expr><literal type="char" pos:line="52" pos:column="10">'!'<pos:position pos:line="52" pos:column="13"/></literal></expr>:<pos:position pos:line="52" pos:column="14"/></case>
      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><name><name pos:line="53" pos:column="11">exp<pos:position pos:line="53" pos:column="14"/></name><index pos:line="53" pos:column="14">[<expr><literal type="number" pos:line="53" pos:column="15">0<pos:position pos:line="53" pos:column="16"/></literal></expr>]<pos:position pos:line="53" pos:column="17"/></index></name> <operator pos:line="53" pos:column="18">==<pos:position pos:line="53" pos:column="20"/></operator> <literal type="char" pos:line="53" pos:column="21">'='<pos:position pos:line="53" pos:column="24"/></literal></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25">
	<block pos:line="54" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="55" pos:column="11">++<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">exp<pos:position pos:line="55" pos:column="16"/></name></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="56" pos:column="11">lval<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">op<pos:position pos:line="56" pos:column="19"/></name></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <name pos:line="56" pos:column="22">not_equal<pos:position pos:line="56" pos:column="31"/></name></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="57" pos:column="11">result<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <name pos:line="57" pos:column="20">EQUOP2<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>
      <break pos:line="59" pos:column="7">break;<pos:position pos:line="59" pos:column="13"/></break>

    <case pos:line="61" pos:column="5">case <expr><literal type="char" pos:line="61" pos:column="10">'&amp;'<pos:position pos:line="61" pos:column="17"/></literal></expr>:<pos:position pos:line="61" pos:column="14"/></case>
    <case pos:line="62" pos:column="5">case <expr><literal type="char" pos:line="62" pos:column="10">'|'<pos:position pos:line="62" pos:column="13"/></literal></expr>:<pos:position pos:line="62" pos:column="14"/></case>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><name><name pos:line="63" pos:column="11">exp<pos:position pos:line="63" pos:column="14"/></name><index pos:line="63" pos:column="14">[<expr><literal type="number" pos:line="63" pos:column="15">0<pos:position pos:line="63" pos:column="16"/></literal></expr>]<pos:position pos:line="63" pos:column="17"/></index></name> <operator pos:line="63" pos:column="18">==<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="21">result<pos:position pos:line="63" pos:column="27"/></name></expr>)<pos:position pos:line="63" pos:column="28"/></condition><then pos:line="63" pos:column="28">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="64" pos:column="9">++<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="11">exp<pos:position pos:line="64" pos:column="14"/></name></expr>;<pos:position pos:line="64" pos:column="15"/></expr_stmt></block></then>
      <else pos:line="65" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="9">result<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <name pos:line="66" pos:column="18">YYERRCODE<pos:position pos:line="66" pos:column="27"/></name></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt></block></else></if>
      <break pos:line="67" pos:column="7">break;<pos:position pos:line="67" pos:column="13"/></break>

    <case pos:line="69" pos:column="5">case <expr><literal type="char" pos:line="69" pos:column="10">'&lt;'<pos:position pos:line="69" pos:column="16"/></literal></expr>:<pos:position pos:line="69" pos:column="14"/></case>
      <if pos:line="70" pos:column="7">if <condition pos:line="70" pos:column="10">(<expr><name><name pos:line="70" pos:column="11">exp<pos:position pos:line="70" pos:column="14"/></name><index pos:line="70" pos:column="14">[<expr><literal type="number" pos:line="70" pos:column="15">0<pos:position pos:line="70" pos:column="16"/></literal></expr>]<pos:position pos:line="70" pos:column="17"/></index></name> <operator pos:line="70" pos:column="18">==<pos:position pos:line="70" pos:column="20"/></operator> <literal type="char" pos:line="70" pos:column="21">'='<pos:position pos:line="70" pos:column="24"/></literal></expr>)<pos:position pos:line="70" pos:column="25"/></condition><then pos:line="70" pos:column="25">
	<block pos:line="71" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="72" pos:column="11">++<pos:position pos:line="72" pos:column="13"/></operator><name pos:line="72" pos:column="13">exp<pos:position pos:line="72" pos:column="16"/></name></expr>;<pos:position pos:line="72" pos:column="17"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="73" pos:column="11">lval<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">op<pos:position pos:line="73" pos:column="19"/></name></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <name pos:line="73" pos:column="22">less_or_equal<pos:position pos:line="73" pos:column="35"/></name></expr>;<pos:position pos:line="73" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="74" pos:column="10"/></block></then>
      <else pos:line="75" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="76" pos:column="9">lval<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">op<pos:position pos:line="76" pos:column="17"/></name></name> <operator pos:line="76" pos:column="18">=<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="20">less_than<pos:position pos:line="76" pos:column="29"/></name></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name pos:line="77" pos:column="7">result<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">=<pos:position pos:line="77" pos:column="15"/></operator> <name pos:line="77" pos:column="16">CMPOP2<pos:position pos:line="77" pos:column="22"/></name></expr>;<pos:position pos:line="77" pos:column="23"/></expr_stmt>
      <break pos:line="78" pos:column="7">break;<pos:position pos:line="78" pos:column="13"/></break>

    <case pos:line="80" pos:column="5">case <expr><literal type="char" pos:line="80" pos:column="10">'&gt;'<pos:position pos:line="80" pos:column="16"/></literal></expr>:<pos:position pos:line="80" pos:column="14"/></case>
      <if pos:line="81" pos:column="7">if <condition pos:line="81" pos:column="10">(<expr><name><name pos:line="81" pos:column="11">exp<pos:position pos:line="81" pos:column="14"/></name><index pos:line="81" pos:column="14">[<expr><literal type="number" pos:line="81" pos:column="15">0<pos:position pos:line="81" pos:column="16"/></literal></expr>]<pos:position pos:line="81" pos:column="17"/></index></name> <operator pos:line="81" pos:column="18">==<pos:position pos:line="81" pos:column="20"/></operator> <literal type="char" pos:line="81" pos:column="21">'='<pos:position pos:line="81" pos:column="24"/></literal></expr>)<pos:position pos:line="81" pos:column="25"/></condition><then pos:line="81" pos:column="25">
	<block pos:line="82" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="83" pos:column="11">++<pos:position pos:line="83" pos:column="13"/></operator><name pos:line="83" pos:column="13">exp<pos:position pos:line="83" pos:column="16"/></name></expr>;<pos:position pos:line="83" pos:column="17"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="84" pos:column="11">lval<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">op<pos:position pos:line="84" pos:column="19"/></name></name> <operator pos:line="84" pos:column="20">=<pos:position pos:line="84" pos:column="21"/></operator> <name pos:line="84" pos:column="22">greater_or_equal<pos:position pos:line="84" pos:column="38"/></name></expr>;<pos:position pos:line="84" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="85" pos:column="10"/></block></then>
      <else pos:line="86" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="87" pos:column="9">lval<pos:position pos:line="87" pos:column="13"/></name><operator pos:line="87" pos:column="13">-&gt;<pos:position pos:line="87" pos:column="18"/></operator><name pos:line="87" pos:column="15">op<pos:position pos:line="87" pos:column="17"/></name></name> <operator pos:line="87" pos:column="18">=<pos:position pos:line="87" pos:column="19"/></operator> <name pos:line="87" pos:column="20">greater_than<pos:position pos:line="87" pos:column="32"/></name></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name pos:line="88" pos:column="7">result<pos:position pos:line="88" pos:column="13"/></name> <operator pos:line="88" pos:column="14">=<pos:position pos:line="88" pos:column="15"/></operator> <name pos:line="88" pos:column="16">CMPOP2<pos:position pos:line="88" pos:column="22"/></name></expr>;<pos:position pos:line="88" pos:column="23"/></expr_stmt>
      <break pos:line="89" pos:column="7">break;<pos:position pos:line="89" pos:column="13"/></break>

    <case pos:line="91" pos:column="5">case <expr><literal type="char" pos:line="91" pos:column="10">'*'<pos:position pos:line="91" pos:column="13"/></literal></expr>:<pos:position pos:line="91" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="92" pos:column="7">lval<pos:position pos:line="92" pos:column="11"/></name><operator pos:line="92" pos:column="11">-&gt;<pos:position pos:line="92" pos:column="16"/></operator><name pos:line="92" pos:column="13">op<pos:position pos:line="92" pos:column="15"/></name></name> <operator pos:line="92" pos:column="16">=<pos:position pos:line="92" pos:column="17"/></operator> <name pos:line="92" pos:column="18">mult<pos:position pos:line="92" pos:column="22"/></name></expr>;<pos:position pos:line="92" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="93" pos:column="7">result<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <name pos:line="93" pos:column="16">MULOP2<pos:position pos:line="93" pos:column="22"/></name></expr>;<pos:position pos:line="93" pos:column="23"/></expr_stmt>
      <break pos:line="94" pos:column="7">break;<pos:position pos:line="94" pos:column="13"/></break>

    <case pos:line="96" pos:column="5">case <expr><literal type="char" pos:line="96" pos:column="10">'/'<pos:position pos:line="96" pos:column="13"/></literal></expr>:<pos:position pos:line="96" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="97" pos:column="7">lval<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">-&gt;<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="13">op<pos:position pos:line="97" pos:column="15"/></name></name> <operator pos:line="97" pos:column="16">=<pos:position pos:line="97" pos:column="17"/></operator> <name pos:line="97" pos:column="18">divide<pos:position pos:line="97" pos:column="24"/></name></expr>;<pos:position pos:line="97" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="98" pos:column="7">result<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">=<pos:position pos:line="98" pos:column="15"/></operator> <name pos:line="98" pos:column="16">MULOP2<pos:position pos:line="98" pos:column="22"/></name></expr>;<pos:position pos:line="98" pos:column="23"/></expr_stmt>
      <break pos:line="99" pos:column="7">break;<pos:position pos:line="99" pos:column="13"/></break>

    <case pos:line="101" pos:column="5">case <expr><literal type="char" pos:line="101" pos:column="10">'%'<pos:position pos:line="101" pos:column="13"/></literal></expr>:<pos:position pos:line="101" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="102" pos:column="7">lval<pos:position pos:line="102" pos:column="11"/></name><operator pos:line="102" pos:column="11">-&gt;<pos:position pos:line="102" pos:column="16"/></operator><name pos:line="102" pos:column="13">op<pos:position pos:line="102" pos:column="15"/></name></name> <operator pos:line="102" pos:column="16">=<pos:position pos:line="102" pos:column="17"/></operator> <name pos:line="102" pos:column="18">module<pos:position pos:line="102" pos:column="24"/></name></expr>;<pos:position pos:line="102" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="103" pos:column="7">result<pos:position pos:line="103" pos:column="13"/></name> <operator pos:line="103" pos:column="14">=<pos:position pos:line="103" pos:column="15"/></operator> <name pos:line="103" pos:column="16">MULOP2<pos:position pos:line="103" pos:column="22"/></name></expr>;<pos:position pos:line="103" pos:column="23"/></expr_stmt>
      <break pos:line="104" pos:column="7">break;<pos:position pos:line="104" pos:column="13"/></break>

    <case pos:line="106" pos:column="5">case <expr><literal type="char" pos:line="106" pos:column="10">'+'<pos:position pos:line="106" pos:column="13"/></literal></expr>:<pos:position pos:line="106" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="107" pos:column="7">lval<pos:position pos:line="107" pos:column="11"/></name><operator pos:line="107" pos:column="11">-&gt;<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="13">op<pos:position pos:line="107" pos:column="15"/></name></name> <operator pos:line="107" pos:column="16">=<pos:position pos:line="107" pos:column="17"/></operator> <name pos:line="107" pos:column="18">plus<pos:position pos:line="107" pos:column="22"/></name></expr>;<pos:position pos:line="107" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="108" pos:column="7">result<pos:position pos:line="108" pos:column="13"/></name> <operator pos:line="108" pos:column="14">=<pos:position pos:line="108" pos:column="15"/></operator> <name pos:line="108" pos:column="16">ADDOP2<pos:position pos:line="108" pos:column="22"/></name></expr>;<pos:position pos:line="108" pos:column="23"/></expr_stmt>
      <break pos:line="109" pos:column="7">break;<pos:position pos:line="109" pos:column="13"/></break>

    <case pos:line="111" pos:column="5">case <expr><literal type="char" pos:line="111" pos:column="10">'-'<pos:position pos:line="111" pos:column="13"/></literal></expr>:<pos:position pos:line="111" pos:column="14"/></case>
      <expr_stmt><expr><name><name pos:line="112" pos:column="7">lval<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">-&gt;<pos:position pos:line="112" pos:column="16"/></operator><name pos:line="112" pos:column="13">op<pos:position pos:line="112" pos:column="15"/></name></name> <operator pos:line="112" pos:column="16">=<pos:position pos:line="112" pos:column="17"/></operator> <name pos:line="112" pos:column="18">minus<pos:position pos:line="112" pos:column="23"/></name></expr>;<pos:position pos:line="112" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="113" pos:column="7">result<pos:position pos:line="113" pos:column="13"/></name> <operator pos:line="113" pos:column="14">=<pos:position pos:line="113" pos:column="15"/></operator> <name pos:line="113" pos:column="16">ADDOP2<pos:position pos:line="113" pos:column="22"/></name></expr>;<pos:position pos:line="113" pos:column="23"/></expr_stmt>
      <break pos:line="114" pos:column="7">break;<pos:position pos:line="114" pos:column="13"/></break>

    <case pos:line="116" pos:column="5">case <expr><literal type="char" pos:line="116" pos:column="10">'n'<pos:position pos:line="116" pos:column="13"/></literal></expr>:<pos:position pos:line="116" pos:column="14"/></case>
    <case pos:line="117" pos:column="5">case <expr><literal type="char" pos:line="117" pos:column="10">'?'<pos:position pos:line="117" pos:column="13"/></literal></expr>:<pos:position pos:line="117" pos:column="14"/></case>
    <case pos:line="118" pos:column="5">case <expr><literal type="char" pos:line="118" pos:column="10">':'<pos:position pos:line="118" pos:column="13"/></literal></expr>:<pos:position pos:line="118" pos:column="14"/></case>
    <case pos:line="119" pos:column="5">case <expr><literal type="char" pos:line="119" pos:column="10">'('<pos:position pos:line="119" pos:column="13"/></literal></expr>:<pos:position pos:line="119" pos:column="14"/></case>
    <case pos:line="120" pos:column="5">case <expr><literal type="char" pos:line="120" pos:column="10">')'<pos:position pos:line="120" pos:column="13"/></literal></expr>:<pos:position pos:line="120" pos:column="14"/></case>
      <comment type="block" pos:line="121" pos:column="7">/* Nothing, just return the character.  */</comment>
      <break pos:line="122" pos:column="7">break;<pos:position pos:line="122" pos:column="13"/></break>

    <case pos:line="124" pos:column="5">case <expr><literal type="char" pos:line="124" pos:column="10">';'<pos:position pos:line="124" pos:column="13"/></literal></expr>:<pos:position pos:line="124" pos:column="14"/></case>
    <case pos:line="125" pos:column="5">case <expr><literal type="char" pos:line="125" pos:column="10">'\n'<pos:position pos:line="125" pos:column="14"/></literal></expr>:<pos:position pos:line="125" pos:column="15"/></case>
    <case pos:line="126" pos:column="5">case <expr><literal type="char" pos:line="126" pos:column="10">'\0'<pos:position pos:line="126" pos:column="14"/></literal></expr>:<pos:position pos:line="126" pos:column="15"/></case>
      <comment type="block" pos:line="127" pos:column="7">/* Be safe and let the user call this function again.  */</comment>
      <expr_stmt><expr><operator pos:line="128" pos:column="7">--<pos:position pos:line="128" pos:column="9"/></operator><name pos:line="128" pos:column="9">exp<pos:position pos:line="128" pos:column="12"/></name></expr>;<pos:position pos:line="128" pos:column="13"/></expr_stmt>
      <expr_stmt><expr><name pos:line="129" pos:column="7">result<pos:position pos:line="129" pos:column="13"/></name> <operator pos:line="129" pos:column="14">=<pos:position pos:line="129" pos:column="15"/></operator> <name pos:line="129" pos:column="16">YYEOF<pos:position pos:line="129" pos:column="21"/></name></expr>;<pos:position pos:line="129" pos:column="22"/></expr_stmt>
      <break pos:line="130" pos:column="7">break;<pos:position pos:line="130" pos:column="13"/></break>

    <default pos:line="132" pos:column="5">default:<pos:position pos:line="132" pos:column="13"/></default>
      <expr_stmt><expr><name pos:line="133" pos:column="7">result<pos:position pos:line="133" pos:column="13"/></name> <operator pos:line="133" pos:column="14">=<pos:position pos:line="133" pos:column="15"/></operator> <name pos:line="133" pos:column="16">YYERRCODE<pos:position pos:line="133" pos:column="25"/></name></expr>;<pos:position pos:line="133" pos:column="26"/></expr_stmt>
<cpp:if pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">if<pos:position pos:line="134" pos:column="4"/></cpp:directive> <expr><name pos:line="134" pos:column="5">YYDEBUG<pos:position pos:line="134" pos:column="12"/></name> <operator pos:line="134" pos:column="13">!=<pos:position pos:line="134" pos:column="15"/></operator> <literal type="number" pos:line="134" pos:column="16">0<pos:position pos:line="134" pos:column="17"/></literal></expr></cpp:if>
      <expr_stmt><expr><operator pos:line="135" pos:column="7">--<pos:position pos:line="135" pos:column="9"/></operator><name pos:line="135" pos:column="9">exp<pos:position pos:line="135" pos:column="12"/></name></expr>;<pos:position pos:line="135" pos:column="13"/></expr_stmt>
<cpp:endif pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">endif<pos:position pos:line="136" pos:column="7"/></cpp:directive></cpp:endif>
      <break pos:line="137" pos:column="7">break;<pos:position pos:line="137" pos:column="13"/></break>
    }<pos:position pos:line="138" pos:column="6"/></block></switch>

  <expr_stmt><expr><operator pos:line="140" pos:column="3">*<pos:position pos:line="140" pos:column="4"/></operator><name pos:line="140" pos:column="4">pexp<pos:position pos:line="140" pos:column="8"/></name> <operator pos:line="140" pos:column="9">=<pos:position pos:line="140" pos:column="10"/></operator> <name pos:line="140" pos:column="11">exp<pos:position pos:line="140" pos:column="14"/></name></expr>;<pos:position pos:line="140" pos:column="15"/></expr_stmt>

  <return pos:line="142" pos:column="3">return <expr><name pos:line="142" pos:column="10">result<pos:position pos:line="142" pos:column="16"/></name></expr>;<pos:position pos:line="142" pos:column="17"/></return>
}<pos:position pos:line="143" pos:column="2"/></block></unit>

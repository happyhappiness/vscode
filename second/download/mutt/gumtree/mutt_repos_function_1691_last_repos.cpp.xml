<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1691_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pgpring_find_candidates<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ringfile<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name><name pos:line="1" pos:column="66">hints<pos:position pos:line="1" pos:column="71"/></name><index pos:line="1" pos:column="71">[]<pos:position pos:line="1" pos:column="73"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="75">int<pos:position pos:line="1" pos:column="78"/></name></type> <name pos:line="1" pos:column="79">nhints<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">rfp<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">HAVE_FGETPOS<pos:position pos:line="4" pos:column="20"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">fpos_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">pos<pos:position pos:line="5" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="15">keypos<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
<cpp:else pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">else<pos:position pos:line="6" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">LOFF_T<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">pos<pos:position pos:line="7" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="15">keypos<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">unsigned<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name> <modifier pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></modifier></type><name pos:line="10" pos:column="18">buff<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">unsigned<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">pt<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">l<pos:position pos:line="12" pos:column="11"/></name> <init pos:line="12" pos:column="12">= <expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">short<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">err<pos:position pos:line="14" pos:column="12"/></name> <init pos:line="14" pos:column="13">= <expr><literal type="number" pos:line="14" pos:column="15">0<pos:position pos:line="14" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>
  
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">rfp<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">fopen<pos:position pos:line="16" pos:column="19"/></name> <argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">ringfile<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="31">"r"<pos:position pos:line="16" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call><operator pos:line="16" pos:column="35">)<pos:position pos:line="16" pos:column="36"/></operator> <operator pos:line="16" pos:column="37">==<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="40">NULL<pos:position pos:line="16" pos:column="44"/></name></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45">
  <block pos:line="17" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">error_buf<pos:position pos:line="18" pos:column="20"/></name></decl>;<pos:position pos:line="18" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">size_t<pos:position pos:line="19" pos:column="11"/></name></type> <name pos:line="19" pos:column="12">error_buf_len<pos:position pos:line="19" pos:column="25"/></name></decl>;<pos:position pos:line="19" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">error_buf_len<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <sizeof pos:line="21" pos:column="21">sizeof <argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"fopen: "<pos:position pos:line="21" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></sizeof> <operator pos:line="21" pos:column="40">-<pos:position pos:line="21" pos:column="41"/></operator> <literal type="number" pos:line="21" pos:column="42">1<pos:position pos:line="21" pos:column="43"/></literal> <operator pos:line="21" pos:column="44">+<pos:position pos:line="21" pos:column="45"/></operator> <call><name pos:line="21" pos:column="46">strlen<pos:position pos:line="21" pos:column="52"/></name> <argument_list pos:line="21" pos:column="53">(<argument><expr><name pos:line="21" pos:column="54">ringfile<pos:position pos:line="21" pos:column="62"/></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call> <operator pos:line="21" pos:column="64">+<pos:position pos:line="21" pos:column="65"/></operator> <literal type="number" pos:line="21" pos:column="66">1<pos:position pos:line="21" pos:column="67"/></literal></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">error_buf<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">safe_malloc<pos:position pos:line="22" pos:column="28"/></name> <argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">error_buf_len<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">snprintf<pos:position pos:line="23" pos:column="13"/></name> <argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">error_buf<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">error_buf_len<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="41">"fopen: %s"<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">ringfile<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">perror<pos:position pos:line="24" pos:column="11"/></name> <argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">error_buf<pos:position pos:line="24" pos:column="22"/></name></expr></argument>)<pos:position pos:line="24" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">FREE<pos:position pos:line="25" pos:column="9"/></name> <argument_list pos:line="25" pos:column="10">(<argument><expr><operator pos:line="25" pos:column="11">&amp;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="12">error_buf<pos:position pos:line="25" pos:column="21"/></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <return pos:line="26" pos:column="5">return;<pos:position pos:line="26" pos:column="12"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">FGETPOS<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">rfp<pos:position pos:line="29" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="29" pos:column="15">pos<pos:position pos:line="29" pos:column="18"/></name></expr></argument>)<pos:position pos:line="29" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">FGETPOS<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">rfp<pos:position pos:line="30" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="30" pos:column="15">keypos<pos:position pos:line="30" pos:column="21"/></name></expr></argument>)<pos:position pos:line="30" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>

  <while pos:line="32" pos:column="3">while <condition pos:line="32" pos:column="9">(<expr><operator pos:line="32" pos:column="10">!<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">err<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">&amp;&amp;<pos:position pos:line="32" pos:column="25"/></operator> <operator pos:line="32" pos:column="18">(<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">buff<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <call><name pos:line="32" pos:column="26">pgp_read_packet<pos:position pos:line="32" pos:column="41"/></name> <argument_list pos:line="32" pos:column="42">(<argument><expr><name pos:line="32" pos:column="43">rfp<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="48">&amp;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="49">l<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call><operator pos:line="32" pos:column="51">)<pos:position pos:line="32" pos:column="52"/></operator> <operator pos:line="32" pos:column="53">!=<pos:position pos:line="32" pos:column="55"/></operator> <name pos:line="32" pos:column="56">NULL<pos:position pos:line="32" pos:column="60"/></name></expr>)<pos:position pos:line="32" pos:column="61"/></condition>
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><name pos:line="34" pos:column="5">pt<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <name><name pos:line="34" pos:column="10">buff<pos:position pos:line="34" pos:column="14"/></name><index pos:line="34" pos:column="14">[<expr><literal type="number" pos:line="34" pos:column="15">0<pos:position pos:line="34" pos:column="16"/></literal></expr>]<pos:position pos:line="34" pos:column="17"/></index></name> <operator pos:line="34" pos:column="18">&amp;<pos:position pos:line="34" pos:column="23"/></operator> <literal type="number" pos:line="34" pos:column="20">0x3f<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">l<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">&lt;<pos:position pos:line="36" pos:column="15"/></operator> <literal type="number" pos:line="36" pos:column="13">1<pos:position pos:line="36" pos:column="14"/></literal></expr>)<pos:position pos:line="36" pos:column="15"/></condition><then pos:line="36" pos:column="15">
      <block type="pseudo"><continue pos:line="37" pos:column="7">continue;<pos:position pos:line="37" pos:column="16"/></continue></block></then></if>
    
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">pt<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">==<pos:position pos:line="39" pos:column="15"/></operator> <name pos:line="39" pos:column="16">PT_SECKEY<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">)<pos:position pos:line="39" pos:column="26"/></operator> <operator pos:line="39" pos:column="27">||<pos:position pos:line="39" pos:column="29"/></operator> <operator pos:line="39" pos:column="30">(<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">pt<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">==<pos:position pos:line="39" pos:column="36"/></operator> <name pos:line="39" pos:column="37">PT_PUBKEY<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">)<pos:position pos:line="39" pos:column="47"/></operator></expr>)<pos:position pos:line="39" pos:column="48"/></condition><then pos:line="39" pos:column="48">
    <block pos:line="40" pos:column="5">{
      <expr_stmt><expr><name pos:line="41" pos:column="7">keypos<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">pos<pos:position pos:line="41" pos:column="19"/></name></expr>;<pos:position pos:line="41" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><name pos:line="43" pos:column="14">pt<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">==<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="20">PT_NAME<pos:position pos:line="43" pos:column="27"/></name></expr>)<pos:position pos:line="43" pos:column="28"/></condition><then pos:line="43" pos:column="28">
    <block pos:line="44" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="45" pos:column="7">char<pos:position pos:line="45" pos:column="11"/></name> <modifier pos:line="45" pos:column="12">*<pos:position pos:line="45" pos:column="13"/></modifier></type><name pos:line="45" pos:column="13">tmp<pos:position pos:line="45" pos:column="16"/></name> <init pos:line="45" pos:column="17">= <expr><call><name pos:line="45" pos:column="19">safe_malloc<pos:position pos:line="45" pos:column="30"/></name> <argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">l<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="35"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="47" pos:column="7">memcpy<pos:position pos:line="47" pos:column="13"/></name> <argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">tmp<pos:position pos:line="47" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="20">buff<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">+<pos:position pos:line="47" pos:column="26"/></operator> <literal type="number" pos:line="47" pos:column="27">1<pos:position pos:line="47" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="30">l<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">-<pos:position pos:line="47" pos:column="33"/></operator> <literal type="number" pos:line="47" pos:column="34">1<pos:position pos:line="47" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="48" pos:column="7">tmp<pos:position pos:line="48" pos:column="10"/></name><index pos:line="48" pos:column="10">[<expr><name pos:line="48" pos:column="11">l<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">-<pos:position pos:line="48" pos:column="14"/></operator> <literal type="number" pos:line="48" pos:column="15">1<pos:position pos:line="48" pos:column="16"/></literal></expr>]<pos:position pos:line="48" pos:column="17"/></index></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <literal type="char" pos:line="48" pos:column="20">'\0'<pos:position pos:line="48" pos:column="24"/></literal></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>

      <comment type="block" pos:line="50" pos:column="7">/* mutt_decode_utf8_string (tmp, chs); */</comment>

      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><call><name pos:line="52" pos:column="11">pgpring_string_matches_hint<pos:position pos:line="52" pos:column="38"/></name> <argument_list pos:line="52" pos:column="39">(<argument><expr><name pos:line="52" pos:column="40">tmp<pos:position pos:line="52" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="45">hints<pos:position pos:line="52" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="52">nhints<pos:position pos:line="52" pos:column="58"/></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="60"/></condition><then pos:line="52" pos:column="60">
      <block pos:line="53" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="54" pos:column="9">pgp_key_t<pos:position pos:line="54" pos:column="18"/></name></type> <name pos:line="54" pos:column="19">p<pos:position pos:line="54" pos:column="20"/></name></decl>;<pos:position pos:line="54" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">FSETPOS<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">rfp<pos:position pos:line="56" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="22">keypos<pos:position pos:line="56" pos:column="28"/></name></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>

	<comment type="block" pos:line="58" pos:column="9">/* Not bailing out here would lead us into an endless loop. */</comment>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">(<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">p<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <call><name pos:line="60" pos:column="18">pgp_parse_keyblock<pos:position pos:line="60" pos:column="36"/></name> <argument_list pos:line="60" pos:column="37">(<argument><expr><name pos:line="60" pos:column="38">rfp<pos:position pos:line="60" pos:column="41"/></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call><operator pos:line="60" pos:column="42">)<pos:position pos:line="60" pos:column="43"/></operator> <operator pos:line="60" pos:column="44">==<pos:position pos:line="60" pos:column="46"/></operator> <name pos:line="60" pos:column="47">NULL<pos:position pos:line="60" pos:column="51"/></name></expr>)<pos:position pos:line="60" pos:column="52"/></condition><then pos:line="60" pos:column="52">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="11">err<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">=<pos:position pos:line="61" pos:column="16"/></operator> <literal type="number" pos:line="61" pos:column="17">1<pos:position pos:line="61" pos:column="18"/></literal></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt></block></then></if>
	
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">pgpring_dump_keyblock<pos:position pos:line="63" pos:column="30"/></name> <argument_list pos:line="63" pos:column="31">(<argument><expr><name pos:line="63" pos:column="32">p<pos:position pos:line="63" pos:column="33"/></name></expr></argument>)<pos:position pos:line="63" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">pgp_free_key<pos:position pos:line="64" pos:column="21"/></name> <argument_list pos:line="64" pos:column="22">(<argument><expr><operator pos:line="64" pos:column="23">&amp;<pos:position pos:line="64" pos:column="28"/></operator><name pos:line="64" pos:column="24">p<pos:position pos:line="64" pos:column="25"/></name></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="65" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="67" pos:column="7">FREE<pos:position pos:line="67" pos:column="11"/></name> <argument_list pos:line="67" pos:column="12">(<argument><expr><operator pos:line="67" pos:column="13">&amp;<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="14">tmp<pos:position pos:line="67" pos:column="17"/></name></expr></argument>)<pos:position pos:line="67" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="70" pos:column="5">FGETPOS<pos:position pos:line="70" pos:column="12"/></name><argument_list pos:line="70" pos:column="12">(<argument><expr><name pos:line="70" pos:column="13">rfp<pos:position pos:line="70" pos:column="16"/></name></expr></argument>,<argument><expr><name pos:line="70" pos:column="17">pos<pos:position pos:line="70" pos:column="20"/></name></expr></argument>)<pos:position pos:line="70" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="73" pos:column="3">safe_fclose<pos:position pos:line="73" pos:column="14"/></name> <argument_list pos:line="73" pos:column="15">(<argument><expr><operator pos:line="73" pos:column="16">&amp;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="17">rfp<pos:position pos:line="73" pos:column="20"/></name></expr></argument>)<pos:position pos:line="73" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="22"/></expr_stmt>

}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

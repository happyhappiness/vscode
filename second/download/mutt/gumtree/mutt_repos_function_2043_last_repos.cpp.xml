<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2043_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">imap_delete_mailbox<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">CONTEXT<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">ctx<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">IMAP_MBOX<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">mx<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LONG_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="26">mbox<pos:position pos:line="3" pos:column="30"/></name><index pos:line="3" pos:column="30">[<expr><name pos:line="3" pos:column="31">LONG_STRING<pos:position pos:line="3" pos:column="42"/></name></expr>]<pos:position pos:line="3" pos:column="43"/></index></name></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">IMAP_DATA<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">idata<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">ctx<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">||<pos:position pos:line="6" pos:column="14"/></operator> <operator pos:line="6" pos:column="15">!<pos:position pos:line="6" pos:column="16"/></operator><name><name pos:line="6" pos:column="16">ctx<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">data<pos:position pos:line="6" pos:column="25"/></name></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26"> <block pos:line="6" pos:column="27">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">idata<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">imap_conn_find<pos:position pos:line="7" pos:column="33"/></name> <argument_list pos:line="7" pos:column="34">(<argument><expr><operator pos:line="7" pos:column="35">&amp;<pos:position pos:line="7" pos:column="40"/></operator><name><name pos:line="7" pos:column="36">mx<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">.<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">account<pos:position pos:line="7" pos:column="46"/></name></name></expr></argument>,
          <argument><expr><ternary><condition><expr><call><name pos:line="8" pos:column="11">option<pos:position pos:line="8" pos:column="17"/></name> <argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">OPTIMAPPASSIVE<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr> ?<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36"> <expr><name pos:line="8" pos:column="37">MUTT_IMAP_CONN_NONEW<pos:position pos:line="8" pos:column="57"/></name></expr> <pos:position pos:line="8" pos:column="58"/></then><else pos:line="8" pos:column="58">: <expr><literal type="number" pos:line="8" pos:column="60">0<pos:position pos:line="8" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call><operator pos:line="8" pos:column="62">)<pos:position pos:line="8" pos:column="63"/></operator></expr>)<pos:position pos:line="8" pos:column="64"/></condition><then pos:line="8" pos:column="64">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">FREE<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><operator pos:line="10" pos:column="13">&amp;<pos:position pos:line="10" pos:column="18"/></operator><name><name pos:line="10" pos:column="14">mx<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">mbox<pos:position pos:line="10" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
      <return pos:line="11" pos:column="7">return <expr><operator pos:line="11" pos:column="14">-<pos:position pos:line="11" pos:column="15"/></operator><literal type="number" pos:line="11" pos:column="15">1<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then> <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">idata<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name><name pos:line="14" pos:column="13">ctx<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">data<pos:position pos:line="14" pos:column="22"/></name></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">imap_munge_mbox_name<pos:position pos:line="17" pos:column="23"/></name> <argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">idata<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">mbox<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="38">sizeof <argument_list pos:line="17" pos:column="45">(<argument><expr><name pos:line="17" pos:column="46">mbox<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="53">mx<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">.<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="56">mbox<pos:position pos:line="17" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">snprintf<pos:position pos:line="18" pos:column="11"/></name> <argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">buf<pos:position pos:line="18" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="18">sizeof <argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">buf<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="32">"DELETE %s"<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">mbox<pos:position pos:line="18" pos:column="49"/></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><call><name pos:line="20" pos:column="7">imap_exec<pos:position pos:line="20" pos:column="16"/></name> <argument_list pos:line="20" pos:column="17">(<argument><expr><operator pos:line="20" pos:column="18">(<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">IMAP_DATA<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">*<pos:position pos:line="20" pos:column="29"/></operator><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">idata<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">buf<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="43">0<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call> <operator pos:line="20" pos:column="46">!=<pos:position pos:line="20" pos:column="48"/></operator> <literal type="number" pos:line="20" pos:column="49">0<pos:position pos:line="20" pos:column="50"/></literal></expr>)<pos:position pos:line="20" pos:column="51"/></condition><then pos:line="20" pos:column="51">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">-<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></return></block></then></if>

  <return pos:line="23" pos:column="3">return <expr><literal type="number" pos:line="23" pos:column="10">0<pos:position pos:line="23" pos:column="11"/></literal></expr>;<pos:position pos:line="23" pos:column="12"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

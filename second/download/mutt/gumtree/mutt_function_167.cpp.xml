<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_167.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">mutt_copy_header<pos:position pos:line="2" pos:column="17"/></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">FILE<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">in<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">HEADER<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">h<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">FILE<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">out<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">flags<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="62">const<pos:position pos:line="2" pos:column="67"/></specifier> <name pos:line="2" pos:column="68">char<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">prefix<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">SHORT_STRING<pos:position pos:line="4" pos:column="27"/></name></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">h<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">env<pos:position pos:line="6" pos:column="13"/></name></name></expr>)<pos:position pos:line="6" pos:column="14"/></condition><then pos:line="6" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">flags<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">|=<pos:position pos:line="7" pos:column="13"/></operator> <operator pos:line="7" pos:column="14">(<pos:position pos:line="7" pos:column="15"/></operator><ternary><condition><expr><name><name pos:line="7" pos:column="15">h<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">env<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">irt_changed<pos:position pos:line="7" pos:column="34"/></name></name></expr> ?<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <expr><name pos:line="7" pos:column="37">CH_UPDATE_IRT<pos:position pos:line="7" pos:column="50"/></name></expr> <pos:position pos:line="7" pos:column="51"/></then><else pos:line="7" pos:column="51">: <expr><literal type="number" pos:line="7" pos:column="53">0<pos:position pos:line="7" pos:column="54"/></literal></expr></else></ternary><operator pos:line="7" pos:column="54">)<pos:position pos:line="7" pos:column="55"/></operator>
      <operator pos:line="8" pos:column="7">|<pos:position pos:line="8" pos:column="8"/></operator> <operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="8" pos:column="10">h<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">env<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">refs_changed<pos:position pos:line="8" pos:column="30"/></name></name></expr> ?<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32"> <expr><name pos:line="8" pos:column="33">CH_UPDATE_REFS<pos:position pos:line="8" pos:column="47"/></name></expr> <pos:position pos:line="8" pos:column="48"/></then><else pos:line="8" pos:column="48">: <expr><literal type="number" pos:line="8" pos:column="50">0<pos:position pos:line="8" pos:column="51"/></literal></expr></else></ternary><operator pos:line="8" pos:column="51">)<pos:position pos:line="8" pos:column="52"/></operator></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt></block></then></if>
  
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">mutt_copy_hdr<pos:position pos:line="10" pos:column="20"/></name> <argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">in<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="26">out<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="31">h<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">offset<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="42">h<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">content<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">offset<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">flags<pos:position pos:line="10" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="69">prefix<pos:position pos:line="10" pos:column="75"/></name></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call> <operator pos:line="10" pos:column="77">==<pos:position pos:line="10" pos:column="79"/></operator> <operator pos:line="10" pos:column="80">-<pos:position pos:line="10" pos:column="81"/></operator><literal type="number" pos:line="10" pos:column="81">1<pos:position pos:line="10" pos:column="82"/></literal></expr>)<pos:position pos:line="10" pos:column="83"/></condition><then pos:line="10" pos:column="83">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">1<pos:position pos:line="11" pos:column="14"/></literal></expr>;<pos:position pos:line="11" pos:column="15"/></return></block></then></if>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">flags<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">&amp;<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="15">CH_TXTPLAIN<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27">
  <block pos:line="14" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name></type> <name><name pos:line="15" pos:column="10">chsbuf<pos:position pos:line="15" pos:column="16"/></name><index pos:line="15" pos:column="16">[<expr><name pos:line="15" pos:column="17">SHORT_STRING<pos:position pos:line="15" pos:column="29"/></name></expr>]<pos:position pos:line="15" pos:column="30"/></index></name></decl>;<pos:position pos:line="15" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fputs<pos:position pos:line="16" pos:column="10"/></name> <argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="string" pos:line="16" pos:column="12">"MIME-Version: 1.0\n"<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">out<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">fputs<pos:position pos:line="17" pos:column="10"/></name> <argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="string" pos:line="17" pos:column="12">"Content-Transfer-Encoding: 8bit\n"<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">out<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">fputs<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"Content-Type: text/plain; charset="<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">out<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">mutt_canonical_charset<pos:position pos:line="19" pos:column="27"/></name> <argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">chsbuf<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="37">sizeof <argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">chsbuf<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="19" pos:column="54">Charset<pos:position pos:line="19" pos:column="61"/></name></expr> ?<pos:position pos:line="19" pos:column="63"/></condition><then pos:line="19" pos:column="63"> <expr><name pos:line="19" pos:column="64">Charset<pos:position pos:line="19" pos:column="71"/></name></expr> <pos:position pos:line="19" pos:column="72"/></then><else pos:line="19" pos:column="72">: <expr><literal type="string" pos:line="19" pos:column="74">"us-ascii"<pos:position pos:line="19" pos:column="84"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="19" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="86"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">rfc822_cat<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">buffer<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="24">sizeof<argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">buffer<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">chsbuf<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">MimeSpecials<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">fputs<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><name pos:line="21" pos:column="11">buffer<pos:position pos:line="21" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="19">out<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">fputc<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="char" pos:line="22" pos:column="11">'\n'<pos:position pos:line="22" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="17">out<pos:position pos:line="22" pos:column="20"/></name></expr></argument>)<pos:position pos:line="22" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">(<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">flags<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">&amp;<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="16">CH_UPDATE_IRT<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator> <operator pos:line="25" pos:column="31">&amp;&amp;<pos:position pos:line="25" pos:column="41"/></operator> <name><name pos:line="25" pos:column="34">h<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">env<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">in_reply_to<pos:position pos:line="25" pos:column="53"/></name></name></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54">
  <block pos:line="26" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">LIST<pos:position pos:line="27" pos:column="9"/></name> <modifier pos:line="27" pos:column="10">*<pos:position pos:line="27" pos:column="11"/></modifier></type><name pos:line="27" pos:column="11">listp<pos:position pos:line="27" pos:column="16"/></name> <init pos:line="27" pos:column="17">= <expr><name><name pos:line="27" pos:column="19">h<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">env<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">in_reply_to<pos:position pos:line="27" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">fputs<pos:position pos:line="28" pos:column="10"/></name> <argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="string" pos:line="28" pos:column="12">"In-Reply-To:"<pos:position pos:line="28" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="28">out<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init pos:line="29" pos:column="10">;<pos:position pos:line="29" pos:column="11"/></init> <condition><expr><name pos:line="29" pos:column="12">listp<pos:position pos:line="29" pos:column="17"/></name></expr>;<pos:position pos:line="29" pos:column="18"/></condition> <incr><expr><name pos:line="29" pos:column="19">listp<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <name><name pos:line="29" pos:column="27">listp<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">-&gt;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="34">next<pos:position pos:line="29" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="29" pos:column="39"/></control>
    <block pos:line="30" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">fputc<pos:position pos:line="31" pos:column="12"/></name> <argument_list pos:line="31" pos:column="13">(<argument><expr><literal type="char" pos:line="31" pos:column="14">' '<pos:position pos:line="31" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="19">out<pos:position pos:line="31" pos:column="22"/></name></expr></argument>)<pos:position pos:line="31" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="32" pos:column="7">fputs<pos:position pos:line="32" pos:column="12"/></name> <argument_list pos:line="32" pos:column="13">(<argument><expr><name><name pos:line="32" pos:column="14">listp<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">data<pos:position pos:line="32" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="27">out<pos:position pos:line="32" pos:column="30"/></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">fputc<pos:position pos:line="34" pos:column="10"/></name> <argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="char" pos:line="34" pos:column="12">'\n'<pos:position pos:line="34" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="18">out<pos:position pos:line="34" pos:column="21"/></name></expr></argument>)<pos:position pos:line="34" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><operator pos:line="37" pos:column="7">(<pos:position pos:line="37" pos:column="8"/></operator><name pos:line="37" pos:column="8">flags<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">&amp;<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="16">CH_UPDATE_REFS<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">)<pos:position pos:line="37" pos:column="31"/></operator> <operator pos:line="37" pos:column="32">&amp;&amp;<pos:position pos:line="37" pos:column="42"/></operator> <name><name pos:line="37" pos:column="35">h<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">env<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">references<pos:position pos:line="37" pos:column="53"/></name></name></expr>)<pos:position pos:line="37" pos:column="54"/></condition><then pos:line="37" pos:column="54">
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">fputs<pos:position pos:line="39" pos:column="10"/></name> <argument_list pos:line="39" pos:column="11">(<argument><expr><literal type="string" pos:line="39" pos:column="12">"References:"<pos:position pos:line="39" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="27">out<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">mutt_write_references<pos:position pos:line="40" pos:column="26"/></name> <argument_list pos:line="40" pos:column="27">(<argument><expr><name><name pos:line="40" pos:column="28">h<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">env<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">references<pos:position pos:line="40" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">out<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="53">0<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">fputc<pos:position pos:line="41" pos:column="10"/></name> <argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="char" pos:line="41" pos:column="12">'\n'<pos:position pos:line="41" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="18">out<pos:position pos:line="41" pos:column="21"/></name></expr></argument>)<pos:position pos:line="41" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><operator pos:line="44" pos:column="7">(<pos:position pos:line="44" pos:column="8"/></operator><name pos:line="44" pos:column="8">flags<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">&amp;<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="16">CH_UPDATE<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">)<pos:position pos:line="44" pos:column="26"/></operator> <operator pos:line="44" pos:column="27">&amp;&amp;<pos:position pos:line="44" pos:column="37"/></operator> <operator pos:line="44" pos:column="30">(<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="31">flags<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">&amp;<pos:position pos:line="44" pos:column="42"/></operator> <name pos:line="44" pos:column="39">CH_NOSTATUS<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">)<pos:position pos:line="44" pos:column="51"/></operator> <operator pos:line="44" pos:column="52">==<pos:position pos:line="44" pos:column="54"/></operator> <literal type="number" pos:line="44" pos:column="55">0<pos:position pos:line="44" pos:column="56"/></literal></expr>)<pos:position pos:line="44" pos:column="57"/></condition><then pos:line="44" pos:column="57">
  <block pos:line="45" pos:column="3">{
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name><name pos:line="46" pos:column="9">h<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">old<pos:position pos:line="46" pos:column="15"/></name></name> <operator pos:line="46" pos:column="16">||<pos:position pos:line="46" pos:column="18"/></operator> <name><name pos:line="46" pos:column="19">h<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">read<pos:position pos:line="46" pos:column="26"/></name></name></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">fputs<pos:position pos:line="48" pos:column="12"/></name> <argument_list pos:line="48" pos:column="13">(<argument><expr><literal type="string" pos:line="48" pos:column="14">"Status: "<pos:position pos:line="48" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="26">out<pos:position pos:line="48" pos:column="29"/></name></expr></argument>)<pos:position pos:line="48" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name><name pos:line="49" pos:column="11">h<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">read<pos:position pos:line="49" pos:column="18"/></name></name></expr>)<pos:position pos:line="49" pos:column="19"/></condition><then pos:line="49" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="9">fputs<pos:position pos:line="50" pos:column="14"/></name> <argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="string" pos:line="50" pos:column="16">"RO"<pos:position pos:line="50" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="22">out<pos:position pos:line="50" pos:column="25"/></name></expr></argument>)<pos:position pos:line="50" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt></block></then>
      <elseif pos:line="51" pos:column="7">else <if pos:line="51" pos:column="12">if <condition pos:line="51" pos:column="15">(<expr><name><name pos:line="51" pos:column="16">h<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">old<pos:position pos:line="51" pos:column="22"/></name></name></expr>)<pos:position pos:line="51" pos:column="23"/></condition><then pos:line="51" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="9">fputc<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="char" pos:line="52" pos:column="16">'O'<pos:position pos:line="52" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="21">out<pos:position pos:line="52" pos:column="24"/></name></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt></block></then></if></elseif></if>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">fputc<pos:position pos:line="53" pos:column="12"/></name> <argument_list pos:line="53" pos:column="13">(<argument><expr><literal type="char" pos:line="53" pos:column="14">'\n'<pos:position pos:line="53" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="20">out<pos:position pos:line="53" pos:column="23"/></name></expr></argument>)<pos:position pos:line="53" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">h<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">-&gt;<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="12">flagged<pos:position pos:line="56" pos:column="19"/></name></name> <operator pos:line="56" pos:column="20">||<pos:position pos:line="56" pos:column="22"/></operator> <name><name pos:line="56" pos:column="23">h<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">replied<pos:position pos:line="56" pos:column="33"/></name></name></expr>)<pos:position pos:line="56" pos:column="34"/></condition><then pos:line="56" pos:column="34">
    <block pos:line="57" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">fputs<pos:position pos:line="58" pos:column="12"/></name> <argument_list pos:line="58" pos:column="13">(<argument><expr><literal type="string" pos:line="58" pos:column="14">"X-Status: "<pos:position pos:line="58" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="28">out<pos:position pos:line="58" pos:column="31"/></name></expr></argument>)<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>
      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><name><name pos:line="59" pos:column="11">h<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">-&gt;<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="14">replied<pos:position pos:line="59" pos:column="21"/></name></name></expr>)<pos:position pos:line="59" pos:column="22"/></condition><then pos:line="59" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="9">fputc<pos:position pos:line="60" pos:column="14"/></name> <argument_list pos:line="60" pos:column="15">(<argument><expr><literal type="char" pos:line="60" pos:column="16">'A'<pos:position pos:line="60" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="21">out<pos:position pos:line="60" pos:column="24"/></name></expr></argument>)<pos:position pos:line="60" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt></block></then></if>
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><name><name pos:line="61" pos:column="11">h<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">flagged<pos:position pos:line="61" pos:column="21"/></name></name></expr>)<pos:position pos:line="61" pos:column="22"/></condition><then pos:line="61" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="9">fputc<pos:position pos:line="62" pos:column="14"/></name> <argument_list pos:line="62" pos:column="15">(<argument><expr><literal type="char" pos:line="62" pos:column="16">'F'<pos:position pos:line="62" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="21">out<pos:position pos:line="62" pos:column="24"/></name></expr></argument>)<pos:position pos:line="62" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="63" pos:column="7">fputc<pos:position pos:line="63" pos:column="12"/></name> <argument_list pos:line="63" pos:column="13">(<argument><expr><literal type="char" pos:line="63" pos:column="14">'\n'<pos:position pos:line="63" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="20">out<pos:position pos:line="63" pos:column="23"/></name></expr></argument>)<pos:position pos:line="63" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>

  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><name pos:line="67" pos:column="7">flags<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">&amp;<pos:position pos:line="67" pos:column="18"/></operator> <name pos:line="67" pos:column="15">CH_UPDATE_LEN<pos:position pos:line="67" pos:column="28"/></name> <operator pos:line="67" pos:column="29">&amp;&amp;<pos:position pos:line="67" pos:column="39"/></operator>
      <operator pos:line="68" pos:column="7">(<pos:position pos:line="68" pos:column="8"/></operator><name pos:line="68" pos:column="8">flags<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">&amp;<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="16">CH_NOLEN<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">)<pos:position pos:line="68" pos:column="25"/></operator> <operator pos:line="68" pos:column="26">==<pos:position pos:line="68" pos:column="28"/></operator> <literal type="number" pos:line="68" pos:column="29">0<pos:position pos:line="68" pos:column="30"/></literal></expr>)<pos:position pos:line="68" pos:column="31"/></condition><then pos:line="68" pos:column="31">
  <block pos:line="69" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">fprintf<pos:position pos:line="70" pos:column="12"/></name> <argument_list pos:line="70" pos:column="13">(<argument><expr><name pos:line="70" pos:column="14">out<pos:position pos:line="70" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="19">"Content-Length: "<pos:position pos:line="70" pos:column="37"/></literal> <name pos:line="70" pos:column="38">OFF_T_FMT<pos:position pos:line="70" pos:column="47"/></name> <literal type="string" pos:line="70" pos:column="48">"\n"<pos:position pos:line="70" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="54">h<pos:position pos:line="70" pos:column="55"/></name><operator pos:line="70" pos:column="55">-&gt;<pos:position pos:line="70" pos:column="60"/></operator><name pos:line="70" pos:column="57">content<pos:position pos:line="70" pos:column="64"/></name><operator pos:line="70" pos:column="64">-&gt;<pos:position pos:line="70" pos:column="69"/></operator><name pos:line="70" pos:column="66">length<pos:position pos:line="70" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="74"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name><name pos:line="71" pos:column="9">h<pos:position pos:line="71" pos:column="10"/></name><operator pos:line="71" pos:column="10">-&gt;<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="12">lines<pos:position pos:line="71" pos:column="17"/></name></name> <operator pos:line="71" pos:column="18">!=<pos:position pos:line="71" pos:column="20"/></operator> <literal type="number" pos:line="71" pos:column="21">0<pos:position pos:line="71" pos:column="22"/></literal> <operator pos:line="71" pos:column="23">||<pos:position pos:line="71" pos:column="25"/></operator> <name><name pos:line="71" pos:column="26">h<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">-&gt;<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="29">content<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">-&gt;<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="38">length<pos:position pos:line="71" pos:column="44"/></name></name> <operator pos:line="71" pos:column="45">==<pos:position pos:line="71" pos:column="47"/></operator> <literal type="number" pos:line="71" pos:column="48">0<pos:position pos:line="71" pos:column="49"/></literal></expr>)<pos:position pos:line="71" pos:column="50"/></condition><then pos:line="71" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="7">fprintf<pos:position pos:line="72" pos:column="14"/></name> <argument_list pos:line="72" pos:column="15">(<argument><expr><name pos:line="72" pos:column="16">out<pos:position pos:line="72" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="21">"Lines: %d\n"<pos:position pos:line="72" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="36">h<pos:position pos:line="72" pos:column="37"/></name><operator pos:line="72" pos:column="37">-&gt;<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="39">lines<pos:position pos:line="72" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="46"/></expr_stmt></block></then></if>
  }<pos:position pos:line="73" pos:column="4"/></block></then></if>

  <if pos:line="75" pos:column="3">if <condition pos:line="75" pos:column="6">(<expr><name pos:line="75" pos:column="7">flags<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">&amp;<pos:position pos:line="75" pos:column="18"/></operator> <name pos:line="75" pos:column="15">CH_UPDATE_LABEL<pos:position pos:line="75" pos:column="30"/></name></expr>)<pos:position pos:line="75" pos:column="31"/></condition><then pos:line="75" pos:column="31">
  <block pos:line="76" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">h<pos:position pos:line="77" pos:column="6"/></name><operator pos:line="77" pos:column="6">-&gt;<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="8">xlabel_changed<pos:position pos:line="77" pos:column="22"/></name></name> <operator pos:line="77" pos:column="23">=<pos:position pos:line="77" pos:column="24"/></operator> <literal type="number" pos:line="77" pos:column="25">0<pos:position pos:line="77" pos:column="26"/></literal></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name><name pos:line="78" pos:column="9">h<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">-&gt;<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="12">env<pos:position pos:line="78" pos:column="15"/></name><operator pos:line="78" pos:column="15">-&gt;<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="17">x_label<pos:position pos:line="78" pos:column="24"/></name></name> <operator pos:line="78" pos:column="25">!=<pos:position pos:line="78" pos:column="27"/></operator> <name pos:line="78" pos:column="28">NULL<pos:position pos:line="78" pos:column="32"/></name></expr>)<pos:position pos:line="78" pos:column="33"/></condition><then pos:line="78" pos:column="33">
      <block type="pseudo"><if pos:line="79" pos:column="7">if <condition pos:line="79" pos:column="10">(<expr><call><name pos:line="79" pos:column="11">fprintf<pos:position pos:line="79" pos:column="18"/></name><argument_list pos:line="79" pos:column="18">(<argument><expr><name pos:line="79" pos:column="19">out<pos:position pos:line="79" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="24">"X-Label: %s\n"<pos:position pos:line="79" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="41">h<pos:position pos:line="79" pos:column="42"/></name><operator pos:line="79" pos:column="42">-&gt;<pos:position pos:line="79" pos:column="47"/></operator><name pos:line="79" pos:column="44">env<pos:position pos:line="79" pos:column="47"/></name><operator pos:line="79" pos:column="47">-&gt;<pos:position pos:line="79" pos:column="52"/></operator><name pos:line="79" pos:column="49">x_label<pos:position pos:line="79" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="57"/></argument_list></call> <operator pos:line="79" pos:column="58">!=<pos:position pos:line="79" pos:column="60"/></operator>
		  <literal type="number" pos:line="80" pos:column="19">10<pos:position pos:line="80" pos:column="21"/></literal> <operator pos:line="80" pos:column="22">+<pos:position pos:line="80" pos:column="23"/></operator> <call><name pos:line="80" pos:column="24">strlen<pos:position pos:line="80" pos:column="30"/></name><argument_list pos:line="80" pos:column="30">(<argument><expr><name><name pos:line="80" pos:column="31">h<pos:position pos:line="80" pos:column="32"/></name><operator pos:line="80" pos:column="32">-&gt;<pos:position pos:line="80" pos:column="37"/></operator><name pos:line="80" pos:column="34">env<pos:position pos:line="80" pos:column="37"/></name><operator pos:line="80" pos:column="37">-&gt;<pos:position pos:line="80" pos:column="42"/></operator><name pos:line="80" pos:column="39">x_label<pos:position pos:line="80" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="48"/></condition><then pos:line="80" pos:column="48">
        <block type="pseudo"><return pos:line="81" pos:column="9">return <expr><operator pos:line="81" pos:column="16">-<pos:position pos:line="81" pos:column="17"/></operator><literal type="number" pos:line="81" pos:column="17">1<pos:position pos:line="81" pos:column="18"/></literal></expr>;<pos:position pos:line="81" pos:column="19"/></return></block></then></if></block></then></if>
  }<pos:position pos:line="82" pos:column="4"/></block></then></if>

  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><operator pos:line="84" pos:column="7">(<pos:position pos:line="84" pos:column="8"/></operator><name pos:line="84" pos:column="8">flags<pos:position pos:line="84" pos:column="13"/></name> <operator pos:line="84" pos:column="14">&amp;<pos:position pos:line="84" pos:column="19"/></operator> <name pos:line="84" pos:column="16">CH_NONEWLINE<pos:position pos:line="84" pos:column="28"/></name><operator pos:line="84" pos:column="28">)<pos:position pos:line="84" pos:column="29"/></operator> <operator pos:line="84" pos:column="30">==<pos:position pos:line="84" pos:column="32"/></operator> <literal type="number" pos:line="84" pos:column="33">0<pos:position pos:line="84" pos:column="34"/></literal></expr>)<pos:position pos:line="84" pos:column="35"/></condition><then pos:line="84" pos:column="35">
  <block pos:line="85" pos:column="3">{
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name pos:line="86" pos:column="9">flags<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">&amp;<pos:position pos:line="86" pos:column="20"/></operator> <name pos:line="86" pos:column="17">CH_PREFIX<pos:position pos:line="86" pos:column="26"/></name></expr>)<pos:position pos:line="86" pos:column="27"/></condition><then pos:line="86" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="7">fputs<pos:position pos:line="87" pos:column="12"/></name><argument_list pos:line="87" pos:column="12">(<argument><expr><name pos:line="87" pos:column="13">prefix<pos:position pos:line="87" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="21">out<pos:position pos:line="87" pos:column="24"/></name></expr></argument>)<pos:position pos:line="87" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">fputc<pos:position pos:line="88" pos:column="10"/></name> <argument_list pos:line="88" pos:column="11">(<argument><expr><literal type="char" pos:line="88" pos:column="12">'\n'<pos:position pos:line="88" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="18">out<pos:position pos:line="88" pos:column="21"/></name></expr></argument>)<pos:position pos:line="88" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="23"/></expr_stmt> <comment type="block" pos:line="88" pos:column="24">/* add header terminator */</comment>
  }<pos:position pos:line="89" pos:column="4"/></block></then></if>

  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><call><name pos:line="91" pos:column="7">ferror<pos:position pos:line="91" pos:column="13"/></name> <argument_list pos:line="91" pos:column="14">(<argument><expr><name pos:line="91" pos:column="15">out<pos:position pos:line="91" pos:column="18"/></name></expr></argument>)<pos:position pos:line="91" pos:column="19"/></argument_list></call> <operator pos:line="91" pos:column="20">||<pos:position pos:line="91" pos:column="22"/></operator> <call><name pos:line="91" pos:column="23">feof<pos:position pos:line="91" pos:column="27"/></name> <argument_list pos:line="91" pos:column="28">(<argument><expr><name pos:line="91" pos:column="29">out<pos:position pos:line="91" pos:column="32"/></name></expr></argument>)<pos:position pos:line="91" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="34"/></condition><then pos:line="91" pos:column="34">
    <block type="pseudo"><return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">-<pos:position pos:line="92" pos:column="13"/></operator><literal type="number" pos:line="92" pos:column="13">1<pos:position pos:line="92" pos:column="14"/></literal></expr>;<pos:position pos:line="92" pos:column="15"/></return></block></then></if>
  
  <return pos:line="94" pos:column="3">return <expr><literal type="number" pos:line="94" pos:column="10">0<pos:position pos:line="94" pos:column="11"/></literal></expr>;<pos:position pos:line="94" pos:column="12"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

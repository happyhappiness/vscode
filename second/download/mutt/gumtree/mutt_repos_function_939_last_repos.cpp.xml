<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_939_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">mutt_iconv<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">iconv_t<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">cd<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">ICONV_CONST<pos:position pos:line="1" pos:column="43"/></name> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">inbuf<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">size_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">inbytesleft<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier><modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">outbuf<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">size_t<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">outbytesleft<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="3" pos:column="20">ICONV_CONST<pos:position pos:line="3" pos:column="31"/></name> <name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier><modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">inrepls<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="48">const<pos:position pos:line="3" pos:column="53"/></specifier> <name pos:line="3" pos:column="54">char<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">outrepl<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="68"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">ret<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">ret1<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">ICONV_CONST<pos:position pos:line="6" pos:column="14"/></name> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ib<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><operator pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">inbuf<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">ibl<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><operator pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">inbytesleft<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">ob<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><operator pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">outbuf<pos:position pos:line="8" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">obl<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><operator pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">outbytesleft<pos:position pos:line="9" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

  <for pos:line="11" pos:column="3">for <control pos:line="11" pos:column="7">(<init pos:line="11" pos:column="8">;<pos:position pos:line="11" pos:column="9"/></init><condition pos:line="11" pos:column="9">;<pos:position pos:line="11" pos:column="10"/></condition><incr/>)<pos:position pos:line="11" pos:column="11"/></control>
  <block pos:line="12" pos:column="3">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">ret1<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">iconv<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">cd<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="24">ib<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="29">ibl<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="34">&amp;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="35">ob<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="40">obl<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">ret1<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">!=<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">size_t<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">)<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="7">ret<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">+=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">ret1<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt></block></then></if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">ibl<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">&amp;&amp;<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="16">obl<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&amp;&amp;<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="23">errno<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">==<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">EILSEQ<pos:position pos:line="16" pos:column="38"/></name></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39">
    <block pos:line="17" pos:column="5">{
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><name pos:line="18" pos:column="11">inrepls<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
      <block pos:line="19" pos:column="7">{
	<comment type="block" pos:line="20" pos:column="9">/* Try replacing the input */</comment>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">ICONV_CONST<pos:position pos:line="21" pos:column="20"/></name> <name pos:line="21" pos:column="21">char<pos:position pos:line="21" pos:column="25"/></name> <modifier pos:line="21" pos:column="26">*<pos:position pos:line="21" pos:column="27"/></modifier><modifier pos:line="21" pos:column="27">*<pos:position pos:line="21" pos:column="28"/></modifier></type><name pos:line="21" pos:column="28">t<pos:position pos:line="21" pos:column="29"/></name></decl>;<pos:position pos:line="21" pos:column="30"/></decl_stmt>
	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">t<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">inrepls<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></init> <condition><expr><operator pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">t<pos:position pos:line="22" pos:column="29"/></name></expr>;<pos:position pos:line="22" pos:column="30"/></condition> <incr><expr><name pos:line="22" pos:column="31">t<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">++<pos:position pos:line="22" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="35"/></control>
	<block pos:line="23" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="24" pos:column="11">ICONV_CONST<pos:position pos:line="24" pos:column="22"/></name> <name pos:line="24" pos:column="23">char<pos:position pos:line="24" pos:column="27"/></name> <modifier pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></modifier></type><name pos:line="24" pos:column="29">ib1<pos:position pos:line="24" pos:column="32"/></name> <init pos:line="24" pos:column="33">= <expr><operator pos:line="24" pos:column="35">*<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">t<pos:position pos:line="24" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="38"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="25" pos:column="11">size_t<pos:position pos:line="25" pos:column="17"/></name></type> <name pos:line="25" pos:column="18">ibl1<pos:position pos:line="25" pos:column="22"/></name> <init pos:line="25" pos:column="23">= <expr><call><name pos:line="25" pos:column="25">strlen<pos:position pos:line="25" pos:column="31"/></name> <argument_list pos:line="25" pos:column="32">(<argument><expr><operator pos:line="25" pos:column="33">*<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">t<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="37"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="26" pos:column="11">char<pos:position pos:line="26" pos:column="15"/></name> <modifier pos:line="26" pos:column="16">*<pos:position pos:line="26" pos:column="17"/></modifier></type><name pos:line="26" pos:column="17">ob1<pos:position pos:line="26" pos:column="20"/></name> <init pos:line="26" pos:column="21">= <expr><name pos:line="26" pos:column="23">ob<pos:position pos:line="26" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="26"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="27" pos:column="11">size_t<pos:position pos:line="27" pos:column="17"/></name></type> <name pos:line="27" pos:column="18">obl1<pos:position pos:line="27" pos:column="22"/></name> <init pos:line="27" pos:column="23">= <expr><name pos:line="27" pos:column="25">obl<pos:position pos:line="27" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="29"/></decl_stmt>
	  <expr_stmt><expr><call><name pos:line="28" pos:column="11">iconv<pos:position pos:line="28" pos:column="16"/></name> <argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">cd<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="22">&amp;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="23">ib1<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="28">&amp;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="29">ibl1<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="35">&amp;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="36">ob1<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="41">&amp;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="42">obl1<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
	  <if pos:line="29" pos:column="11">if <condition pos:line="29" pos:column="14">(<expr><operator pos:line="29" pos:column="15">!<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">ibl1<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21">
	  <block pos:line="30" pos:column="11">{
	    <expr_stmt><expr><operator pos:line="31" pos:column="13">++<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">ib<pos:position pos:line="31" pos:column="17"/></name></expr><operator pos:line="31" pos:column="17">,<pos:position pos:line="31" pos:column="18"/></operator> <expr><operator pos:line="31" pos:column="19">--<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">ibl<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="32" pos:column="13">ob<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">ob1<pos:position pos:line="32" pos:column="21"/></name></expr><operator pos:line="32" pos:column="21">,<pos:position pos:line="32" pos:column="22"/></operator> <expr><name pos:line="32" pos:column="23">obl<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">obl1<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">ret<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
	    <break pos:line="34" pos:column="13">break;<pos:position pos:line="34" pos:column="19"/></break>
	  }<pos:position pos:line="35" pos:column="12"/></block></then></if>
	}<pos:position pos:line="36" pos:column="10"/></block></for>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">*<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">t<pos:position pos:line="37" pos:column="15"/></name></expr>)<pos:position pos:line="37" pos:column="16"/></condition><then pos:line="37" pos:column="16">
	  <block type="pseudo"><continue pos:line="38" pos:column="11">continue;<pos:position pos:line="38" pos:column="20"/></continue></block></then></if>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="40" pos:column="7">/* Replace the output */</comment>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><operator pos:line="41" pos:column="11">!<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">outrepl<pos:position pos:line="41" pos:column="19"/></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20">
	<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">outrepl<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <literal type="string" pos:line="42" pos:column="19">"?"<pos:position pos:line="42" pos:column="22"/></literal></expr>;<pos:position pos:line="42" pos:column="23"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">iconv<pos:position pos:line="43" pos:column="12"/></name> <argument_list pos:line="43" pos:column="13">(<argument><expr><name pos:line="43" pos:column="14">cd<pos:position pos:line="43" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="18">0<pos:position pos:line="43" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="21">0<pos:position pos:line="43" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">ob<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="29">&amp;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="30">obl<pos:position pos:line="43" pos:column="33"/></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
      <if pos:line="44" pos:column="7">if <condition pos:line="44" pos:column="10">(<expr><name pos:line="44" pos:column="11">obl<pos:position pos:line="44" pos:column="14"/></name></expr>)<pos:position pos:line="44" pos:column="15"/></condition><then pos:line="44" pos:column="15">
      <block pos:line="45" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="46" pos:column="9">int<pos:position pos:line="46" pos:column="12"/></name></type> <name pos:line="46" pos:column="13">n<pos:position pos:line="46" pos:column="14"/></name> <init pos:line="46" pos:column="15">= <expr><call><name pos:line="46" pos:column="17">strlen<pos:position pos:line="46" pos:column="23"/></name> <argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">outrepl<pos:position pos:line="46" pos:column="32"/></name></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="34"/></decl_stmt>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">n<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">&gt;<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="17">obl<pos:position pos:line="47" pos:column="20"/></name></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21">
	<block pos:line="48" pos:column="9">{
	  <expr_stmt><expr><name pos:line="49" pos:column="11">outrepl<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <literal type="string" pos:line="49" pos:column="21">"?"<pos:position pos:line="49" pos:column="24"/></literal></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="50" pos:column="11">n<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <literal type="number" pos:line="50" pos:column="15">1<pos:position pos:line="50" pos:column="16"/></literal></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">memcpy<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">ob<pos:position pos:line="52" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="21">outrepl<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="30">n<pos:position pos:line="52" pos:column="31"/></name></expr></argument>)<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="53" pos:column="9">++<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="11">ib<pos:position pos:line="53" pos:column="13"/></name></expr><operator pos:line="53" pos:column="13">,<pos:position pos:line="53" pos:column="14"/></operator> <expr><operator pos:line="53" pos:column="15">--<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">ibl<pos:position pos:line="53" pos:column="20"/></name></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="54" pos:column="9">ob<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">+=<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">n<pos:position pos:line="54" pos:column="16"/></name></expr><operator pos:line="54" pos:column="16">,<pos:position pos:line="54" pos:column="17"/></operator> <expr><name pos:line="54" pos:column="18">obl<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">-=<pos:position pos:line="54" pos:column="24"/></operator> <name pos:line="54" pos:column="25">n<pos:position pos:line="54" pos:column="26"/></name></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="55" pos:column="9">++<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">ret<pos:position pos:line="55" pos:column="14"/></name></expr>;<pos:position pos:line="55" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">iconv<pos:position pos:line="56" pos:column="14"/></name> <argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">cd<pos:position pos:line="56" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="20">0<pos:position pos:line="56" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="23">0<pos:position pos:line="56" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="26">0<pos:position pos:line="56" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="29">0<pos:position pos:line="56" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt> <comment type="block" pos:line="56" pos:column="33">/* for good measure */</comment>
	<continue pos:line="57" pos:column="9">continue;<pos:position pos:line="57" pos:column="18"/></continue>
      }<pos:position pos:line="58" pos:column="8"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="60" pos:column="5">*<pos:position pos:line="60" pos:column="6"/></operator><name pos:line="60" pos:column="6">inbuf<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <name pos:line="60" pos:column="14">ib<pos:position pos:line="60" pos:column="16"/></name></expr><operator pos:line="60" pos:column="16">,<pos:position pos:line="60" pos:column="17"/></operator> <expr><operator pos:line="60" pos:column="18">*<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="19">inbytesleft<pos:position pos:line="60" pos:column="30"/></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">ibl<pos:position pos:line="60" pos:column="36"/></name></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="61" pos:column="5">*<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">outbuf<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <name pos:line="61" pos:column="15">ob<pos:position pos:line="61" pos:column="17"/></name></expr><operator pos:line="61" pos:column="17">,<pos:position pos:line="61" pos:column="18"/></operator> <expr><operator pos:line="61" pos:column="19">*<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">outbytesleft<pos:position pos:line="61" pos:column="32"/></name> <operator pos:line="61" pos:column="33">=<pos:position pos:line="61" pos:column="34"/></operator> <name pos:line="61" pos:column="35">obl<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">ret<pos:position pos:line="62" pos:column="15"/></name></expr>;<pos:position pos:line="62" pos:column="16"/></return>
  }<pos:position pos:line="63" pos:column="4"/></block></for>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

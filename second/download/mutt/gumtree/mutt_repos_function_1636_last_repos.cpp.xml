<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1636_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">check_mailbox<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">CONTEXT<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">ctx<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">index_hint<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">ctx<pos:position pos:line="4" pos:column="11"/></name></expr>)<pos:position pos:line="4" pos:column="12"/></condition><then pos:line="4" pos:column="12">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">COMPRESS_INFO<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">ci<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name><name pos:line="7" pos:column="23">ctx<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">compress_info<pos:position pos:line="7" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">ci<pos:position pos:line="8" pos:column="10"/></name></expr>)<pos:position pos:line="8" pos:column="11"/></condition><then pos:line="8" pos:column="11">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></return></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="11" pos:column="3">struct<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">mx_ops<pos:position pos:line="11" pos:column="16"/></name></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">ops<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><name><name pos:line="11" pos:column="24">ci<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">child_ops<pos:position pos:line="11" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">ops<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">size<pos:position pos:line="15" pos:column="11"/></name> <init pos:line="15" pos:column="12">= <expr><call><name pos:line="15" pos:column="14">get_size<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><name><name pos:line="15" pos:column="24">ctx<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">realpath<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="39"/></decl_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">size<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">==<pos:position pos:line="16" pos:column="14"/></operator> <name><name pos:line="16" pos:column="15">ci<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">size<pos:position pos:line="16" pos:column="23"/></name></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return></block></then></if>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><call><name pos:line="19" pos:column="8">lock_realpath<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">ctx<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="31"/></condition><then pos:line="19" pos:column="31">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">mutt_error<pos:position pos:line="21" pos:column="15"/></name> <argument_list pos:line="21" pos:column="16">(<argument><expr><call><name pos:line="21" pos:column="17">_<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><literal type="string" pos:line="21" pos:column="19">"Unable to lock mailbox!"<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">-<pos:position pos:line="22" pos:column="13"/></operator><literal type="number" pos:line="22" pos:column="13">1<pos:position pos:line="22" pos:column="14"/></literal></expr>;<pos:position pos:line="22" pos:column="15"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="25" pos:column="3">int<pos:position pos:line="25" pos:column="6"/></name></type> <name pos:line="25" pos:column="7">rc<pos:position pos:line="25" pos:column="9"/></name> <init pos:line="25" pos:column="10">= <expr><call><name pos:line="25" pos:column="12">execute_command<pos:position pos:line="25" pos:column="27"/></name> <argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">ctx<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="34">ci<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">open<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="44">_<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><literal type="string" pos:line="25" pos:column="46">"Decompressing %s"<pos:position pos:line="25" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="67"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">store_size<pos:position pos:line="26" pos:column="13"/></name> <argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">ctx<pos:position pos:line="26" pos:column="18"/></name></expr></argument>)<pos:position pos:line="26" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">unlock_realpath<pos:position pos:line="27" pos:column="18"/></name> <argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">ctx<pos:position pos:line="27" pos:column="23"/></name></expr></argument>)<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">rc<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">==<pos:position pos:line="28" pos:column="12"/></operator> <literal type="number" pos:line="28" pos:column="13">0<pos:position pos:line="28" pos:column="14"/></literal></expr>)<pos:position pos:line="28" pos:column="15"/></condition><then pos:line="28" pos:column="15">
    <block type="pseudo"><return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">-<pos:position pos:line="29" pos:column="13"/></operator><literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal></expr>;<pos:position pos:line="29" pos:column="15"/></return></block></then></if>

  <return pos:line="31" pos:column="3">return <expr><call><name><name pos:line="31" pos:column="10">ops<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">check<pos:position pos:line="31" pos:column="20"/></name></name> <argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">ctx<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="27">index_hint<pos:position pos:line="31" pos:column="37"/></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

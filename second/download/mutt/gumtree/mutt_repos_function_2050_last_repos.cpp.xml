<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2050_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">imap_close_connection<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">IMAP_DATA<pos:position pos:line="1" pos:column="37"/></name><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type> <name pos:line="1" pos:column="39">idata<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name><name pos:line="3" pos:column="7">idata<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">state<pos:position pos:line="3" pos:column="19"/></name></name> <operator pos:line="3" pos:column="20">!=<pos:position pos:line="3" pos:column="22"/></operator> <name pos:line="3" pos:column="23">IMAP_DISCONNECTED<pos:position pos:line="3" pos:column="40"/></name></expr>)<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41">
  <block pos:line="4" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">mutt_socket_close<pos:position pos:line="5" pos:column="22"/></name> <argument_list pos:line="5" pos:column="23">(<argument><expr><name><name pos:line="5" pos:column="24">idata<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">conn<pos:position pos:line="5" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">idata<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">state<pos:position pos:line="6" pos:column="17"/></name></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">IMAP_DISCONNECTED<pos:position pos:line="6" pos:column="37"/></name></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">idata<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">seqno<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name><name pos:line="8" pos:column="18">idata<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">nextcmd<pos:position pos:line="8" pos:column="32"/></name></name> <operator pos:line="8" pos:column="33">=<pos:position pos:line="8" pos:column="34"/></operator> <name><name pos:line="8" pos:column="35">idata<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">lastcmd<pos:position pos:line="8" pos:column="49"/></name></name> <operator pos:line="8" pos:column="50">=<pos:position pos:line="8" pos:column="51"/></operator> <name><name pos:line="8" pos:column="52">idata<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">status<pos:position pos:line="8" pos:column="65"/></name></name> <operator pos:line="8" pos:column="66">=<pos:position pos:line="8" pos:column="67"/></operator> <literal type="number" pos:line="8" pos:column="68">0<pos:position pos:line="8" pos:column="69"/></literal></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memset<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">idata<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">cmds<pos:position pos:line="9" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="27">sizeof <argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">IMAP_COMMAND<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></sizeof> <operator pos:line="9" pos:column="49">*<pos:position pos:line="9" pos:column="50"/></operator> <name><name pos:line="9" pos:column="51">idata<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">-&gt;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="58">cmdslots<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

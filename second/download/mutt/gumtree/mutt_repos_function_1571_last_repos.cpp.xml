<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1571_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mh_read_dir<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">CONTEXT<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">ctx<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">subdir<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">maildir<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">md<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">mh_sequences<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">mhs<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">maildir<pos:position pos:line="5" pos:column="17"/></name></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">last<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">mh_data<pos:position pos:line="6" pos:column="17"/></name></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">data<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">count<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name></type> <name><name pos:line="8" pos:column="8">msgbuf<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><name pos:line="8" pos:column="15">STRING<pos:position pos:line="8" pos:column="21"/></name></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">progress_t<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">progress<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">memset<pos:position pos:line="11" pos:column="9"/></name> <argument_list pos:line="11" pos:column="10">(<argument><expr><operator pos:line="11" pos:column="11">&amp;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="12">mhs<pos:position pos:line="11" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="20">sizeof <argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">mhs<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name><name pos:line="12" pos:column="8">ctx<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">quiet<pos:position pos:line="12" pos:column="18"/></name></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">snprintf<pos:position pos:line="14" pos:column="13"/></name> <argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">msgbuf<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="23">sizeof <argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">msgbuf<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="40">_<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><literal type="string" pos:line="14" pos:column="42">"Scanning %s..."<pos:position pos:line="14" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="61">ctx<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">-&gt;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="66">path<pos:position pos:line="14" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">mutt_progress_init<pos:position pos:line="15" pos:column="23"/></name> <argument_list pos:line="15" pos:column="24">(<argument><expr><operator pos:line="15" pos:column="25">&amp;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="26">progress<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">msgbuf<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">MUTT_PROGRESS_MSG<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="63">ReadInc<pos:position pos:line="15" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="72">0<pos:position pos:line="15" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name><name pos:line="18" pos:column="8">ctx<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">data<pos:position pos:line="18" pos:column="17"/></name></name></expr>)<pos:position pos:line="18" pos:column="18"/></condition><then pos:line="18" pos:column="18">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">ctx<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">data<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">safe_calloc<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><sizeof pos:line="20" pos:column="29">sizeof <argument_list pos:line="20" pos:column="36">(<argument><expr pos:line="20" pos:column="37">struct <name pos:line="20" pos:column="44">mh_data<pos:position pos:line="20" pos:column="51"/></name></expr></argument>)<pos:position pos:line="20" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="54">1<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="22" pos:column="3">data<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <call><name pos:line="22" pos:column="10">mh_data<pos:position pos:line="22" pos:column="17"/></name> <argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">ctx<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">maildir_update_mtime<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">ctx<pos:position pos:line="24" pos:column="28"/></name></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name pos:line="26" pos:column="3">md<pos:position pos:line="26" pos:column="5"/></name> <operator pos:line="26" pos:column="6">=<pos:position pos:line="26" pos:column="7"/></operator> <name pos:line="26" pos:column="8">NULL<pos:position pos:line="26" pos:column="12"/></name></expr>;<pos:position pos:line="26" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="27" pos:column="3">last<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <operator pos:line="27" pos:column="10">&amp;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="11">md<pos:position pos:line="27" pos:column="13"/></name></expr>;<pos:position pos:line="27" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="28" pos:column="3">count<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <literal type="number" pos:line="28" pos:column="11">0<pos:position pos:line="28" pos:column="12"/></literal></expr>;<pos:position pos:line="28" pos:column="13"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><call><name pos:line="29" pos:column="7">maildir_parse_dir<pos:position pos:line="29" pos:column="24"/></name> <argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">ctx<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="31">&amp;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="32">last<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">subdir<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="46">&amp;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="47">count<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="54">&amp;<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="55">progress<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call> <operator pos:line="29" pos:column="65">==<pos:position pos:line="29" pos:column="67"/></operator> <operator pos:line="29" pos:column="68">-<pos:position pos:line="29" pos:column="69"/></operator><literal type="number" pos:line="29" pos:column="69">1<pos:position pos:line="29" pos:column="70"/></literal></expr>)<pos:position pos:line="29" pos:column="71"/></condition><then pos:line="29" pos:column="71">
    <block type="pseudo"><return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">-<pos:position pos:line="30" pos:column="13"/></operator><literal type="number" pos:line="30" pos:column="13">1<pos:position pos:line="30" pos:column="14"/></literal></expr>;<pos:position pos:line="30" pos:column="15"/></return></block></then></if>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">!<pos:position pos:line="32" pos:column="8"/></operator><name><name pos:line="32" pos:column="8">ctx<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">quiet<pos:position pos:line="32" pos:column="18"/></name></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19">
  <block pos:line="33" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">snprintf<pos:position pos:line="34" pos:column="13"/></name> <argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">msgbuf<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="23">sizeof <argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">msgbuf<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="40">_<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><literal type="string" pos:line="34" pos:column="42">"Reading %s..."<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="60">ctx<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">-&gt;<pos:position pos:line="34" pos:column="68"/></operator><name pos:line="34" pos:column="65">path<pos:position pos:line="34" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">mutt_progress_init<pos:position pos:line="35" pos:column="23"/></name> <argument_list pos:line="35" pos:column="24">(<argument><expr><operator pos:line="35" pos:column="25">&amp;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="26">progress<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="36">msgbuf<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">MUTT_PROGRESS_MSG<pos:position pos:line="35" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="63">ReadInc<pos:position pos:line="35" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="72">count<pos:position pos:line="35" pos:column="77"/></name></expr></argument>)<pos:position pos:line="35" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="79"/></expr_stmt>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">maildir_delayed_parsing<pos:position pos:line="37" pos:column="26"/></name> <argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">ctx<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="33">&amp;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="34">md<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="38">&amp;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="39">progress<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name><name pos:line="39" pos:column="7">ctx<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">magic<pos:position pos:line="39" pos:column="17"/></name></name> <operator pos:line="39" pos:column="18">==<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">MUTT_MH<pos:position pos:line="39" pos:column="28"/></name></expr>)<pos:position pos:line="39" pos:column="29"/></condition><then pos:line="39" pos:column="29">
  <block pos:line="40" pos:column="3">{
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">mh_read_sequences<pos:position pos:line="41" pos:column="26"/></name> <argument_list pos:line="41" pos:column="27">(<argument><expr><operator pos:line="41" pos:column="28">&amp;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="29">mhs<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="34">ctx<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">path<pos:position pos:line="41" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call> <operator pos:line="41" pos:column="45">&lt;<pos:position pos:line="41" pos:column="49"/></operator> <literal type="number" pos:line="41" pos:column="47">0<pos:position pos:line="41" pos:column="48"/></literal></expr>)<pos:position pos:line="41" pos:column="49"/></condition><then pos:line="41" pos:column="49">
    <block pos:line="42" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">maildir_free_maildir<pos:position pos:line="43" pos:column="27"/></name> <argument_list pos:line="43" pos:column="28">(<argument><expr><operator pos:line="43" pos:column="29">&amp;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="30">md<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
      <return pos:line="44" pos:column="7">return <expr><operator pos:line="44" pos:column="14">-<pos:position pos:line="44" pos:column="15"/></operator><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr>;<pos:position pos:line="44" pos:column="17"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">mh_update_maildir<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">md<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="28">&amp;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="29">mhs<pos:position pos:line="46" pos:column="32"/></name></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">mhs_free_sequences<pos:position pos:line="47" pos:column="23"/></name> <argument_list pos:line="47" pos:column="24">(<argument><expr><operator pos:line="47" pos:column="25">&amp;<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="26">mhs<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">maildir_move_to_context<pos:position pos:line="50" pos:column="26"/></name> <argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">ctx<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="33">&amp;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="34">md<pos:position pos:line="50" pos:column="36"/></name></expr></argument>)<pos:position pos:line="50" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>

  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><operator pos:line="52" pos:column="7">!<pos:position pos:line="52" pos:column="8"/></operator><name><name pos:line="52" pos:column="8">data<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">-&gt;<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="14">mh_umask<pos:position pos:line="52" pos:column="22"/></name></name></expr>)<pos:position pos:line="52" pos:column="23"/></condition><then pos:line="52" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="5">data<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">mh_umask<pos:position pos:line="53" pos:column="19"/></name></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">mh_umask<pos:position pos:line="53" pos:column="30"/></name> <argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">ctx<pos:position pos:line="53" pos:column="35"/></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt></block></then></if>

  <return pos:line="55" pos:column="3">return <expr><literal type="number" pos:line="55" pos:column="10">0<pos:position pos:line="55" pos:column="11"/></literal></expr>;<pos:position pos:line="55" pos:column="12"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

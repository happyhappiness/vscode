<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_717_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">data_object_to_tempfile<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">gpgme_data_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">data<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">tempf<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">FILE<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier><modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">ret_fp<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">err<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">tempfb<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="30"/></name></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">FILE<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fp<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">nread<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">tempf<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">mutt_mktemp<pos:position pos:line="10" pos:column="18"/></name> <argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">tempfb<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="28">sizeof <argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">tempfb<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="11" pos:column="7">tempf<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">tempfb<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">fp<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">safe_fopen<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">tempf<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="13" pos:column="32">tempf<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">==<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="41">tempfb<pos:position pos:line="13" pos:column="47"/></name></expr> ?<pos:position pos:line="13" pos:column="49"/></condition><then pos:line="13" pos:column="49"> <expr><literal type="string" pos:line="13" pos:column="50">"w+"<pos:position pos:line="13" pos:column="54"/></literal></expr> <pos:position pos:line="13" pos:column="55"/></then><else pos:line="13" pos:column="55">: <expr><literal type="string" pos:line="13" pos:column="57">"a+"<pos:position pos:line="13" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call><operator pos:line="13" pos:column="62">)<pos:position pos:line="13" pos:column="63"/></operator> <operator pos:line="13" pos:column="64">==<pos:position pos:line="13" pos:column="66"/></operator> <name pos:line="13" pos:column="67">NULL<pos:position pos:line="13" pos:column="71"/></name></expr>)<pos:position pos:line="13" pos:column="72"/></condition><then pos:line="13" pos:column="72">
    <block pos:line="14" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">mutt_perror<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">_<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"Can't create temporary file"<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></decl>;<pos:position pos:line="15" pos:column="52"/></decl_stmt>
      <return pos:line="16" pos:column="7">return <expr><name pos:line="16" pos:column="14">NULL<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="19" pos:column="3">err<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><ternary><condition><expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><call><name pos:line="19" pos:column="11">gpgme_data_seek<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">data<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="34">0<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="37">SEEK_SET<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call> <operator pos:line="19" pos:column="47">==<pos:position pos:line="19" pos:column="49"/></operator> <operator pos:line="19" pos:column="50">-<pos:position pos:line="19" pos:column="51"/></operator><literal type="number" pos:line="19" pos:column="51">1<pos:position pos:line="19" pos:column="52"/></literal><operator pos:line="19" pos:column="52">)<pos:position pos:line="19" pos:column="53"/></operator></expr>
         ?<pos:position pos:line="20" pos:column="11"/></condition><then pos:line="20" pos:column="11"> <expr><call><name pos:line="20" pos:column="12">gpgme_error_from_errno<pos:position pos:line="20" pos:column="34"/></name> <argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">errno<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr> <pos:position pos:line="20" pos:column="43"/></then><else pos:line="20" pos:column="43">: <expr><literal type="number" pos:line="20" pos:column="45">0<pos:position pos:line="20" pos:column="46"/></literal></expr></else></ternary><operator pos:line="20" pos:column="46">)<pos:position pos:line="20" pos:column="47"/></operator></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">err<pos:position pos:line="21" pos:column="11"/></name></expr>)<pos:position pos:line="21" pos:column="12"/></condition><then pos:line="21" pos:column="12">
    <block pos:line="22" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="23" pos:column="7">char<pos:position pos:line="23" pos:column="11"/></name></type> <name><name pos:line="23" pos:column="12">buf<pos:position pos:line="23" pos:column="15"/></name><index pos:line="23" pos:column="15">[<expr><literal type="number" pos:line="23" pos:column="16">4096<pos:position pos:line="23" pos:column="20"/></literal></expr>]<pos:position pos:line="23" pos:column="21"/></index></name></decl>;<pos:position pos:line="23" pos:column="22"/></decl_stmt>

      <while pos:line="25" pos:column="7">while <condition pos:line="25" pos:column="13">(<expr><operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">nread<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">gpgme_data_read<pos:position pos:line="25" pos:column="38"/></name> <argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">data<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">buf<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="51">sizeof <argument_list pos:line="25" pos:column="58">(<argument><expr><name pos:line="25" pos:column="59">buf<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call><operator pos:line="25" pos:column="64">)<pos:position pos:line="25" pos:column="65"/></operator></expr>)<pos:position pos:line="25" pos:column="66"/></condition>
        <block pos:line="26" pos:column="9">{
          <if pos:line="27" pos:column="11">if <condition pos:line="27" pos:column="14">(<expr><call><name pos:line="27" pos:column="15">fwrite<pos:position pos:line="27" pos:column="21"/></name> <argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">buf<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">nread<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="35">1<pos:position pos:line="27" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">fp<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call> <operator pos:line="27" pos:column="42">!=<pos:position pos:line="27" pos:column="44"/></operator> <literal type="number" pos:line="27" pos:column="45">1<pos:position pos:line="27" pos:column="46"/></literal></expr>)<pos:position pos:line="27" pos:column="47"/></condition><then pos:line="27" pos:column="47">
            <block pos:line="28" pos:column="13">{
              <expr_stmt><expr><call><name pos:line="29" pos:column="15">mutt_perror<pos:position pos:line="29" pos:column="26"/></name> <argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">tempf<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="30" pos:column="15">safe_fclose<pos:position pos:line="30" pos:column="26"/></name> <argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="29">fp<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
              <expr_stmt><expr><call><name pos:line="31" pos:column="15">unlink<pos:position pos:line="31" pos:column="21"/></name> <argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">tempf<pos:position pos:line="31" pos:column="28"/></name></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
              <return pos:line="32" pos:column="15">return <expr><name pos:line="32" pos:column="22">NULL<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></return>
            }<pos:position pos:line="33" pos:column="14"/></block></then></if>
        }<pos:position pos:line="34" pos:column="10"/></block></while>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">ret_fp<pos:position pos:line="36" pos:column="13"/></name></expr>)<pos:position pos:line="36" pos:column="14"/></condition><then pos:line="36" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="5">rewind<pos:position pos:line="37" pos:column="11"/></name> <argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">fp<pos:position pos:line="37" pos:column="15"/></name></expr></argument>)<pos:position pos:line="37" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="17"/></expr_stmt></block></then>
  <else pos:line="38" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="5">safe_fclose<pos:position pos:line="39" pos:column="16"/></name> <argument_list pos:line="39" pos:column="17">(<argument><expr><operator pos:line="39" pos:column="18">&amp;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="19">fp<pos:position pos:line="39" pos:column="21"/></name></expr></argument>)<pos:position pos:line="39" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt></block></else></if>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">nread<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">==<pos:position pos:line="40" pos:column="15"/></operator> <operator pos:line="40" pos:column="16">-<pos:position pos:line="40" pos:column="17"/></operator><literal type="number" pos:line="40" pos:column="17">1<pos:position pos:line="40" pos:column="18"/></literal></expr>)<pos:position pos:line="40" pos:column="19"/></condition><then pos:line="40" pos:column="19">
    <block pos:line="41" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">mutt_error<pos:position pos:line="42" pos:column="17"/></name> <argument_list pos:line="42" pos:column="18">(<argument><expr><call><name pos:line="42" pos:column="19">_<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><literal type="string" pos:line="42" pos:column="21">"error reading data object: %s\n"<pos:position pos:line="42" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="57">gpgme_strerror<pos:position pos:line="42" pos:column="71"/></name> <argument_list pos:line="42" pos:column="72">(<argument><expr><name pos:line="42" pos:column="73">err<pos:position pos:line="42" pos:column="76"/></name></expr></argument>)<pos:position pos:line="42" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="79"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">unlink<pos:position pos:line="43" pos:column="13"/></name> <argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">tempf<pos:position pos:line="43" pos:column="20"/></name></expr></argument>)<pos:position pos:line="43" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">safe_fclose<pos:position pos:line="44" pos:column="18"/></name> <argument_list pos:line="44" pos:column="19">(<argument><expr><operator pos:line="44" pos:column="20">&amp;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="21">fp<pos:position pos:line="44" pos:column="23"/></name></expr></argument>)<pos:position pos:line="44" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt>
      <return pos:line="45" pos:column="7">return <expr><name pos:line="45" pos:column="14">NULL<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">ret_fp<pos:position pos:line="47" pos:column="13"/></name></expr>)<pos:position pos:line="47" pos:column="14"/></condition><then pos:line="47" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="48" pos:column="5">*<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">ret_fp<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <name pos:line="48" pos:column="15">fp<pos:position pos:line="48" pos:column="17"/></name></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt></block></then></if>
  <return pos:line="49" pos:column="3">return <expr><call><name pos:line="49" pos:column="10">safe_strdup<pos:position pos:line="49" pos:column="21"/></name> <argument_list pos:line="49" pos:column="22">(<argument><expr><name pos:line="49" pos:column="23">tempf<pos:position pos:line="49" pos:column="28"/></name></expr></argument>)<pos:position pos:line="49" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="30"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

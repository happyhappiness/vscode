<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1948_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">yyparse<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><name pos:line="2" pos:column="9">YYPARSE_PARAM_ARG<pos:position pos:line="2" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
     <name pos:line="3" pos:column="6">YYPARSE_PARAM_DECL<pos:position pos:line="3" pos:column="24"/></name>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">register<pos:position pos:line="5" pos:column="11"/></specifier> <name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">yystate<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">register<pos:position pos:line="6" pos:column="11"/></specifier> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">yyn<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">register<pos:position pos:line="7" pos:column="11"/></specifier> <name pos:line="7" pos:column="12">short<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">yyssp<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">register<pos:position pos:line="8" pos:column="11"/></specifier> <name pos:line="8" pos:column="12">YYSTYPE<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">yyvsp<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">yyerrstatus<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>	<comment type="block" pos:line="9" pos:column="25">/*  number of tokens to shift before error messages enabled */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">yychar1<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>		<comment type="block" pos:line="10" pos:column="33">/*  lookahead token as an internal (translated) token number */</comment>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">short<pos:position pos:line="12" pos:column="8"/></name></type>	<name><name pos:line="12" pos:column="9">yyssa<pos:position pos:line="12" pos:column="14"/></name><index pos:line="12" pos:column="14">[<expr><name pos:line="12" pos:column="15">YYINITDEPTH<pos:position pos:line="12" pos:column="26"/></name></expr>]<pos:position pos:line="12" pos:column="27"/></index></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>	<comment type="block" pos:line="12" pos:column="33">/*  the state stack			*/</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">YYSTYPE<pos:position pos:line="13" pos:column="10"/></name></type> <name><name pos:line="13" pos:column="11">yyvsa<pos:position pos:line="13" pos:column="16"/></name><index pos:line="13" pos:column="16">[<expr><name pos:line="13" pos:column="17">YYINITDEPTH<pos:position pos:line="13" pos:column="28"/></name></expr>]<pos:position pos:line="13" pos:column="29"/></index></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>	<comment type="block" pos:line="13" pos:column="33">/*  the semantic value stack		*/</comment>

  <decl_stmt><decl><type><name pos:line="15" pos:column="3">short<pos:position pos:line="15" pos:column="8"/></name> <modifier pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></modifier></type><name pos:line="15" pos:column="10">yyss<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><name pos:line="15" pos:column="17">yyssa<pos:position pos:line="15" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>		<comment type="block" pos:line="15" pos:column="33">/*  refer to the stacks thru separate pointers */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">YYSTYPE<pos:position pos:line="16" pos:column="10"/></name> <modifier pos:line="16" pos:column="11">*<pos:position pos:line="16" pos:column="12"/></modifier></type><name pos:line="16" pos:column="12">yyvs<pos:position pos:line="16" pos:column="16"/></name> <init pos:line="16" pos:column="17">= <expr><name pos:line="16" pos:column="19">yyvsa<pos:position pos:line="16" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>	<comment type="block" pos:line="16" pos:column="33">/*  to allow yyoverflow to reallocate them elsewhere */</comment>

<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">YYLSP_NEEDED<pos:position pos:line="18" pos:column="20"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">YYLTYPE<pos:position pos:line="19" pos:column="10"/></name></type> <name><name pos:line="19" pos:column="11">yylsa<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><name pos:line="19" pos:column="17">YYINITDEPTH<pos:position pos:line="19" pos:column="28"/></name></expr>]<pos:position pos:line="19" pos:column="29"/></index></name></decl>;<pos:position pos:line="19" pos:column="30"/></decl_stmt>	<comment type="block" pos:line="19" pos:column="33">/*  the location stack			*/</comment>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">YYLTYPE<pos:position pos:line="20" pos:column="10"/></name> <modifier pos:line="20" pos:column="11">*<pos:position pos:line="20" pos:column="12"/></modifier></type><name pos:line="20" pos:column="12">yyls<pos:position pos:line="20" pos:column="16"/></name> <init pos:line="20" pos:column="17">= <expr><name pos:line="20" pos:column="19">yylsa<pos:position pos:line="20" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">YYLTYPE<pos:position pos:line="21" pos:column="10"/></name> <modifier pos:line="21" pos:column="11">*<pos:position pos:line="21" pos:column="12"/></modifier></type><name pos:line="21" pos:column="12">yylsp<pos:position pos:line="21" pos:column="17"/></name></decl>;<pos:position pos:line="21" pos:column="18"/></decl_stmt>

<cpp:define pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">define<pos:position pos:line="23" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="23" pos:column="9">YYPOPSTACK<pos:position pos:line="23" pos:column="19"/></name></cpp:macro>   <cpp:value pos:line="23" pos:column="22">(yyvsp--, yyssp--, yylsp--)<pos:position pos:line="23" pos:column="49"/></cpp:value></cpp:define>
<cpp:else pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">else<pos:position pos:line="24" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">define<pos:position pos:line="25" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="25" pos:column="9">YYPOPSTACK<pos:position pos:line="25" pos:column="19"/></name></cpp:macro>   <cpp:value pos:line="25" pos:column="22">(yyvsp--, yyssp--)<pos:position pos:line="25" pos:column="40"/></cpp:value></cpp:define>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

  <decl_stmt><decl><type><name pos:line="28" pos:column="3">int<pos:position pos:line="28" pos:column="6"/></name></type> <name pos:line="28" pos:column="7">yystacksize<pos:position pos:line="28" pos:column="18"/></name> <init pos:line="28" pos:column="19">= <expr><name pos:line="28" pos:column="21">YYINITDEPTH<pos:position pos:line="28" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">int<pos:position pos:line="29" pos:column="6"/></name></type> <name pos:line="29" pos:column="7">yyfree_stacks<pos:position pos:line="29" pos:column="20"/></name> <init pos:line="29" pos:column="21">= <expr><literal type="number" pos:line="29" pos:column="23">0<pos:position pos:line="29" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="25"/></decl_stmt>

<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">YYPURE<pos:position pos:line="31" pos:column="14"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="32" pos:column="3">int<pos:position pos:line="32" pos:column="6"/></name></type> <name pos:line="32" pos:column="7">yychar<pos:position pos:line="32" pos:column="13"/></name></decl>;<pos:position pos:line="32" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="33" pos:column="3">YYSTYPE<pos:position pos:line="33" pos:column="10"/></name></type> <name pos:line="33" pos:column="11">yylval<pos:position pos:line="33" pos:column="17"/></name></decl>;<pos:position pos:line="33" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="34" pos:column="3">int<pos:position pos:line="34" pos:column="6"/></name></type> <name pos:line="34" pos:column="7">yynerrs<pos:position pos:line="34" pos:column="14"/></name></decl>;<pos:position pos:line="34" pos:column="15"/></decl_stmt>
<cpp:ifdef pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">ifdef<pos:position pos:line="35" pos:column="7"/></cpp:directive> <name pos:line="35" pos:column="8">YYLSP_NEEDED<pos:position pos:line="35" pos:column="20"/></name></cpp:ifdef>
  <decl_stmt><decl><type><name pos:line="36" pos:column="3">YYLTYPE<pos:position pos:line="36" pos:column="10"/></name></type> <name pos:line="36" pos:column="11">yylloc<pos:position pos:line="36" pos:column="17"/></name></decl>;<pos:position pos:line="36" pos:column="18"/></decl_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>

  <decl_stmt><decl><type><name pos:line="40" pos:column="3">YYSTYPE<pos:position pos:line="40" pos:column="10"/></name></type> <name pos:line="40" pos:column="11">yyval<pos:position pos:line="40" pos:column="16"/></name></decl>;<pos:position pos:line="40" pos:column="17"/></decl_stmt>		<comment type="block" pos:line="40" pos:column="33">/*  the variable used to return		*/</comment>
				<comment type="block" pos:line="41" pos:column="33">/*  semantic values from the action	*/</comment>
				<comment type="block" pos:line="42" pos:column="33">/*  routines				*/</comment>

  <decl_stmt><decl><type><name pos:line="44" pos:column="3">int<pos:position pos:line="44" pos:column="6"/></name></type> <name pos:line="44" pos:column="7">yylen<pos:position pos:line="44" pos:column="12"/></name></decl>;<pos:position pos:line="44" pos:column="13"/></decl_stmt>

<cpp:if pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">if<pos:position pos:line="46" pos:column="4"/></cpp:directive> <expr><name pos:line="46" pos:column="5">YYDEBUG<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">!=<pos:position pos:line="46" pos:column="15"/></operator> <literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr></cpp:if>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">yydebug<pos:position pos:line="47" pos:column="14"/></name></expr>)<pos:position pos:line="47" pos:column="15"/></condition><then pos:line="47" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="5">fprintf<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">stderr<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="21">"Starting parse\n"<pos:position pos:line="48" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt></block></then></if>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="51" pos:column="3">yystate<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <literal type="number" pos:line="51" pos:column="13">0<pos:position pos:line="51" pos:column="14"/></literal></expr>;<pos:position pos:line="51" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="52" pos:column="3">yyerrstatus<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <literal type="number" pos:line="52" pos:column="17">0<pos:position pos:line="52" pos:column="18"/></literal></expr>;<pos:position pos:line="52" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="53" pos:column="3">yynerrs<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <literal type="number" pos:line="53" pos:column="13">0<pos:position pos:line="53" pos:column="14"/></literal></expr>;<pos:position pos:line="53" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="54" pos:column="3">yychar<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">=<pos:position pos:line="54" pos:column="11"/></operator> <name pos:line="54" pos:column="12">YYEMPTY<pos:position pos:line="54" pos:column="19"/></name></expr>;<pos:position pos:line="54" pos:column="20"/></expr_stmt>		<comment type="block" pos:line="54" pos:column="33">/* Cause a token to be read.  */</comment>

  <comment type="block" pos:line="56" pos:column="3">/* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */</comment>

  <expr_stmt><expr><name pos:line="61" pos:column="3">yyssp<pos:position pos:line="61" pos:column="8"/></name> <operator pos:line="61" pos:column="9">=<pos:position pos:line="61" pos:column="10"/></operator> <name pos:line="61" pos:column="11">yyss<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">-<pos:position pos:line="61" pos:column="17"/></operator> <literal type="number" pos:line="61" pos:column="18">1<pos:position pos:line="61" pos:column="19"/></literal></expr>;<pos:position pos:line="61" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="62" pos:column="3">yyvsp<pos:position pos:line="62" pos:column="8"/></name> <operator pos:line="62" pos:column="9">=<pos:position pos:line="62" pos:column="10"/></operator> <name pos:line="62" pos:column="11">yyvs<pos:position pos:line="62" pos:column="15"/></name></expr>;<pos:position pos:line="62" pos:column="16"/></expr_stmt>
<cpp:ifdef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifdef<pos:position pos:line="63" pos:column="7"/></cpp:directive> <name pos:line="63" pos:column="8">YYLSP_NEEDED<pos:position pos:line="63" pos:column="20"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="64" pos:column="3">yylsp<pos:position pos:line="64" pos:column="8"/></name> <operator pos:line="64" pos:column="9">=<pos:position pos:line="64" pos:column="10"/></operator> <name pos:line="64" pos:column="11">yyls<pos:position pos:line="64" pos:column="15"/></name></expr>;<pos:position pos:line="64" pos:column="16"/></expr_stmt>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="67" pos:column="1">/* Push a new state, which is found in  yystate  .  */</comment>
<comment type="block" pos:line="68" pos:column="1">/* In all cases, when you get here, the value and location stacks
   have just been pushed. so pushing a state here evens the stacks.  */</comment>
<label><name pos:line="70" pos:column="1">yynewstate<pos:position pos:line="70" pos:column="11"/></name>:<pos:position pos:line="70" pos:column="12"/></label>

  <expr_stmt><expr><operator pos:line="72" pos:column="3">*<pos:position pos:line="72" pos:column="4"/></operator><operator pos:line="72" pos:column="4">++<pos:position pos:line="72" pos:column="6"/></operator><name pos:line="72" pos:column="6">yyssp<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <name pos:line="72" pos:column="14">yystate<pos:position pos:line="72" pos:column="21"/></name></expr>;<pos:position pos:line="72" pos:column="22"/></expr_stmt>

  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">yyssp<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">&gt;=<pos:position pos:line="74" pos:column="18"/></operator> <name pos:line="74" pos:column="16">yyss<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">+<pos:position pos:line="74" pos:column="22"/></operator> <name pos:line="74" pos:column="23">yystacksize<pos:position pos:line="74" pos:column="34"/></name> <operator pos:line="74" pos:column="35">-<pos:position pos:line="74" pos:column="36"/></operator> <literal type="number" pos:line="74" pos:column="37">1<pos:position pos:line="74" pos:column="38"/></literal></expr>)<pos:position pos:line="74" pos:column="39"/></condition><then pos:line="74" pos:column="39">
    <block pos:line="75" pos:column="5">{
      <comment type="block" pos:line="76" pos:column="7">/* Give user a chance to reallocate the stack */</comment>
      <comment type="block" pos:line="77" pos:column="7">/* Use copies of these so that the &amp;'s don't force the real ones into memory. */</comment>
      <decl_stmt><decl><type><name pos:line="78" pos:column="7">YYSTYPE<pos:position pos:line="78" pos:column="14"/></name> <modifier pos:line="78" pos:column="15">*<pos:position pos:line="78" pos:column="16"/></modifier></type><name pos:line="78" pos:column="16">yyvs1<pos:position pos:line="78" pos:column="21"/></name> <init pos:line="78" pos:column="22">= <expr><name pos:line="78" pos:column="24">yyvs<pos:position pos:line="78" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="78" pos:column="29"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="79" pos:column="7">short<pos:position pos:line="79" pos:column="12"/></name> <modifier pos:line="79" pos:column="13">*<pos:position pos:line="79" pos:column="14"/></modifier></type><name pos:line="79" pos:column="14">yyss1<pos:position pos:line="79" pos:column="19"/></name> <init pos:line="79" pos:column="20">= <expr><name pos:line="79" pos:column="22">yyss<pos:position pos:line="79" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="79" pos:column="27"/></decl_stmt>
<cpp:ifdef pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">ifdef<pos:position pos:line="80" pos:column="7"/></cpp:directive> <name pos:line="80" pos:column="8">YYLSP_NEEDED<pos:position pos:line="80" pos:column="20"/></name></cpp:ifdef>
      <decl_stmt><decl><type><name pos:line="81" pos:column="7">YYLTYPE<pos:position pos:line="81" pos:column="14"/></name> <modifier pos:line="81" pos:column="15">*<pos:position pos:line="81" pos:column="16"/></modifier></type><name pos:line="81" pos:column="16">yyls1<pos:position pos:line="81" pos:column="21"/></name> <init pos:line="81" pos:column="22">= <expr><name pos:line="81" pos:column="24">yyls<pos:position pos:line="81" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="81" pos:column="29"/></decl_stmt>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>

      <comment type="block" pos:line="84" pos:column="7">/* Get the current used size of the three stacks, in elements.  */</comment>
      <decl_stmt><decl><type><name pos:line="85" pos:column="7">int<pos:position pos:line="85" pos:column="10"/></name></type> <name pos:line="85" pos:column="11">size<pos:position pos:line="85" pos:column="15"/></name> <init pos:line="85" pos:column="16">= <expr><name pos:line="85" pos:column="18">yyssp<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">-<pos:position pos:line="85" pos:column="25"/></operator> <name pos:line="85" pos:column="26">yyss<pos:position pos:line="85" pos:column="30"/></name> <operator pos:line="85" pos:column="31">+<pos:position pos:line="85" pos:column="32"/></operator> <literal type="number" pos:line="85" pos:column="33">1<pos:position pos:line="85" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="85" pos:column="35"/></decl_stmt>

<cpp:ifdef pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">ifdef<pos:position pos:line="87" pos:column="7"/></cpp:directive> <name pos:line="87" pos:column="8">yyoverflow<pos:position pos:line="87" pos:column="18"/></name></cpp:ifdef>
      <comment type="block" pos:line="88" pos:column="7">/* Each stack pointer address is followed by the size of
	 the data in use in that stack, in bytes.  */</comment>
<cpp:ifdef pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">ifdef<pos:position pos:line="90" pos:column="7"/></cpp:directive> <name pos:line="90" pos:column="8">YYLSP_NEEDED<pos:position pos:line="90" pos:column="20"/></name></cpp:ifdef>
      <comment type="block" pos:line="91" pos:column="7">/* This used to be a conditional around just the two extra args,
	 but that might be undefined if yyoverflow is a macro.  */</comment>
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">yyoverflow<pos:position pos:line="93" pos:column="17"/></name><argument_list pos:line="93" pos:column="17">(<argument><expr><literal type="string" pos:line="93" pos:column="18">"parser stack overflow"<pos:position pos:line="93" pos:column="41"/></literal></expr></argument>,
		 <argument><expr><operator pos:line="94" pos:column="18">&amp;<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="19">yyss1<pos:position pos:line="94" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="26">size<pos:position pos:line="94" pos:column="30"/></name> <operator pos:line="94" pos:column="31">*<pos:position pos:line="94" pos:column="32"/></operator> <sizeof pos:line="94" pos:column="33">sizeof <argument_list pos:line="94" pos:column="40">(<argument><expr><operator pos:line="94" pos:column="41">*<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="42">yyssp<pos:position pos:line="94" pos:column="47"/></name></expr></argument>)<pos:position pos:line="94" pos:column="48"/></argument_list></sizeof></expr></argument>,
		 <argument><expr><operator pos:line="95" pos:column="18">&amp;<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="19">yyvs1<pos:position pos:line="95" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="26">size<pos:position pos:line="95" pos:column="30"/></name> <operator pos:line="95" pos:column="31">*<pos:position pos:line="95" pos:column="32"/></operator> <sizeof pos:line="95" pos:column="33">sizeof <argument_list pos:line="95" pos:column="40">(<argument><expr><operator pos:line="95" pos:column="41">*<pos:position pos:line="95" pos:column="42"/></operator><name pos:line="95" pos:column="42">yyvsp<pos:position pos:line="95" pos:column="47"/></name></expr></argument>)<pos:position pos:line="95" pos:column="48"/></argument_list></sizeof></expr></argument>,
		 <argument><expr><operator pos:line="96" pos:column="18">&amp;<pos:position pos:line="96" pos:column="23"/></operator><name pos:line="96" pos:column="19">yyls1<pos:position pos:line="96" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="26">size<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">*<pos:position pos:line="96" pos:column="32"/></operator> <sizeof pos:line="96" pos:column="33">sizeof <argument_list pos:line="96" pos:column="40">(<argument><expr><operator pos:line="96" pos:column="41">*<pos:position pos:line="96" pos:column="42"/></operator><name pos:line="96" pos:column="42">yylsp<pos:position pos:line="96" pos:column="47"/></name></expr></argument>)<pos:position pos:line="96" pos:column="48"/></argument_list></sizeof></expr></argument>,
		 <argument><expr><operator pos:line="97" pos:column="18">&amp;<pos:position pos:line="97" pos:column="23"/></operator><name pos:line="97" pos:column="19">yystacksize<pos:position pos:line="97" pos:column="30"/></name></expr></argument>)<pos:position pos:line="97" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="32"/></expr_stmt>
<cpp:else pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">else<pos:position pos:line="98" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="99" pos:column="7">yyoverflow<pos:position pos:line="99" pos:column="17"/></name><argument_list pos:line="99" pos:column="17">(<argument><expr><literal type="string" pos:line="99" pos:column="18">"parser stack overflow"<pos:position pos:line="99" pos:column="41"/></literal></expr></argument>,
		 <argument><expr><operator pos:line="100" pos:column="18">&amp;<pos:position pos:line="100" pos:column="23"/></operator><name pos:line="100" pos:column="19">yyss1<pos:position pos:line="100" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="26">size<pos:position pos:line="100" pos:column="30"/></name> <operator pos:line="100" pos:column="31">*<pos:position pos:line="100" pos:column="32"/></operator> <sizeof pos:line="100" pos:column="33">sizeof <argument_list pos:line="100" pos:column="40">(<argument><expr><operator pos:line="100" pos:column="41">*<pos:position pos:line="100" pos:column="42"/></operator><name pos:line="100" pos:column="42">yyssp<pos:position pos:line="100" pos:column="47"/></name></expr></argument>)<pos:position pos:line="100" pos:column="48"/></argument_list></sizeof></expr></argument>,
		 <argument><expr><operator pos:line="101" pos:column="18">&amp;<pos:position pos:line="101" pos:column="23"/></operator><name pos:line="101" pos:column="19">yyvs1<pos:position pos:line="101" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="26">size<pos:position pos:line="101" pos:column="30"/></name> <operator pos:line="101" pos:column="31">*<pos:position pos:line="101" pos:column="32"/></operator> <sizeof pos:line="101" pos:column="33">sizeof <argument_list pos:line="101" pos:column="40">(<argument><expr><operator pos:line="101" pos:column="41">*<pos:position pos:line="101" pos:column="42"/></operator><name pos:line="101" pos:column="42">yyvsp<pos:position pos:line="101" pos:column="47"/></name></expr></argument>)<pos:position pos:line="101" pos:column="48"/></argument_list></sizeof></expr></argument>,
		 <argument><expr><operator pos:line="102" pos:column="18">&amp;<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="19">yystacksize<pos:position pos:line="102" pos:column="30"/></name></expr></argument>)<pos:position pos:line="102" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">endif<pos:position pos:line="103" pos:column="7"/></cpp:directive></cpp:endif>

      <expr_stmt><expr><name pos:line="105" pos:column="7">yyss<pos:position pos:line="105" pos:column="11"/></name> <operator pos:line="105" pos:column="12">=<pos:position pos:line="105" pos:column="13"/></operator> <name pos:line="105" pos:column="14">yyss1<pos:position pos:line="105" pos:column="19"/></name></expr>;<pos:position pos:line="105" pos:column="20"/></expr_stmt> <expr_stmt><expr><name pos:line="105" pos:column="21">yyvs<pos:position pos:line="105" pos:column="25"/></name> <operator pos:line="105" pos:column="26">=<pos:position pos:line="105" pos:column="27"/></operator> <name pos:line="105" pos:column="28">yyvs1<pos:position pos:line="105" pos:column="33"/></name></expr>;<pos:position pos:line="105" pos:column="34"/></expr_stmt>
<cpp:ifdef pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">ifdef<pos:position pos:line="106" pos:column="7"/></cpp:directive> <name pos:line="106" pos:column="8">YYLSP_NEEDED<pos:position pos:line="106" pos:column="20"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="107" pos:column="7">yyls<pos:position pos:line="107" pos:column="11"/></name> <operator pos:line="107" pos:column="12">=<pos:position pos:line="107" pos:column="13"/></operator> <name pos:line="107" pos:column="14">yyls1<pos:position pos:line="107" pos:column="19"/></name></expr>;<pos:position pos:line="107" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">else<pos:position pos:line="109" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="109" pos:column="7">/* no yyoverflow */</comment>
      <comment type="block" pos:line="110" pos:column="7">/* Extend the stack our own way.  */</comment>
      <if pos:line="111" pos:column="7">if <condition pos:line="111" pos:column="10">(<expr><name pos:line="111" pos:column="11">yystacksize<pos:position pos:line="111" pos:column="22"/></name> <operator pos:line="111" pos:column="23">&gt;=<pos:position pos:line="111" pos:column="28"/></operator> <name pos:line="111" pos:column="26">YYMAXDEPTH<pos:position pos:line="111" pos:column="36"/></name></expr>)<pos:position pos:line="111" pos:column="37"/></condition><then pos:line="111" pos:column="37">
	<block pos:line="112" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="113" pos:column="11">yyerror<pos:position pos:line="113" pos:column="18"/></name><argument_list pos:line="113" pos:column="18">(<argument><expr><literal type="string" pos:line="113" pos:column="19">"parser stack overflow"<pos:position pos:line="113" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="44"/></expr_stmt>
	  <if pos:line="114" pos:column="11">if <condition pos:line="114" pos:column="14">(<expr><name pos:line="114" pos:column="15">yyfree_stacks<pos:position pos:line="114" pos:column="28"/></name></expr>)<pos:position pos:line="114" pos:column="29"/></condition><then pos:line="114" pos:column="29">
	    <block pos:line="115" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="116" pos:column="15">free<pos:position pos:line="116" pos:column="19"/></name> <argument_list pos:line="116" pos:column="20">(<argument><expr><name pos:line="116" pos:column="21">yyss<pos:position pos:line="116" pos:column="25"/></name></expr></argument>)<pos:position pos:line="116" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="27"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="117" pos:column="15">free<pos:position pos:line="117" pos:column="19"/></name> <argument_list pos:line="117" pos:column="20">(<argument><expr><name pos:line="117" pos:column="21">yyvs<pos:position pos:line="117" pos:column="25"/></name></expr></argument>)<pos:position pos:line="117" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="27"/></expr_stmt>
<cpp:ifdef pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">ifdef<pos:position pos:line="118" pos:column="7"/></cpp:directive> <name pos:line="118" pos:column="8">YYLSP_NEEDED<pos:position pos:line="118" pos:column="20"/></name></cpp:ifdef>
	      <expr_stmt><expr><call><name pos:line="119" pos:column="15">free<pos:position pos:line="119" pos:column="19"/></name> <argument_list pos:line="119" pos:column="20">(<argument><expr><name pos:line="119" pos:column="21">yyls<pos:position pos:line="119" pos:column="25"/></name></expr></argument>)<pos:position pos:line="119" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif<pos:position pos:line="120" pos:column="7"/></cpp:directive></cpp:endif>
	    }<pos:position pos:line="121" pos:column="14"/></block></then></if>
	  <return pos:line="122" pos:column="11">return <expr><literal type="number" pos:line="122" pos:column="18">2<pos:position pos:line="122" pos:column="19"/></literal></expr>;<pos:position pos:line="122" pos:column="20"/></return>
	}<pos:position pos:line="123" pos:column="10"/></block></then></if>
      <expr_stmt><expr><name pos:line="124" pos:column="7">yystacksize<pos:position pos:line="124" pos:column="18"/></name> <operator pos:line="124" pos:column="19">*=<pos:position pos:line="124" pos:column="21"/></operator> <literal type="number" pos:line="124" pos:column="22">2<pos:position pos:line="124" pos:column="23"/></literal></expr>;<pos:position pos:line="124" pos:column="24"/></expr_stmt>
      <if pos:line="125" pos:column="7">if <condition pos:line="125" pos:column="10">(<expr><name pos:line="125" pos:column="11">yystacksize<pos:position pos:line="125" pos:column="22"/></name> <operator pos:line="125" pos:column="23">&gt;<pos:position pos:line="125" pos:column="27"/></operator> <name pos:line="125" pos:column="25">YYMAXDEPTH<pos:position pos:line="125" pos:column="35"/></name></expr>)<pos:position pos:line="125" pos:column="36"/></condition><then pos:line="125" pos:column="36">
	<block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="9">yystacksize<pos:position pos:line="126" pos:column="20"/></name> <operator pos:line="126" pos:column="21">=<pos:position pos:line="126" pos:column="22"/></operator> <name pos:line="126" pos:column="23">YYMAXDEPTH<pos:position pos:line="126" pos:column="33"/></name></expr>;<pos:position pos:line="126" pos:column="34"/></expr_stmt></block></then></if>
<cpp:ifndef pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">ifndef<pos:position pos:line="127" pos:column="8"/></cpp:directive> <name pos:line="127" pos:column="9">YYSTACK_USE_ALLOCA<pos:position pos:line="127" pos:column="27"/></name></cpp:ifndef>
      <expr_stmt><expr><name pos:line="128" pos:column="7">yyfree_stacks<pos:position pos:line="128" pos:column="20"/></name> <operator pos:line="128" pos:column="21">=<pos:position pos:line="128" pos:column="22"/></operator> <literal type="number" pos:line="128" pos:column="23">1<pos:position pos:line="128" pos:column="24"/></literal></expr>;<pos:position pos:line="128" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">endif<pos:position pos:line="129" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><name pos:line="130" pos:column="7">yyss<pos:position pos:line="130" pos:column="11"/></name> <operator pos:line="130" pos:column="12">=<pos:position pos:line="130" pos:column="13"/></operator> <operator pos:line="130" pos:column="14">(<pos:position pos:line="130" pos:column="15"/></operator><name pos:line="130" pos:column="15">short<pos:position pos:line="130" pos:column="20"/></name> <operator pos:line="130" pos:column="21">*<pos:position pos:line="130" pos:column="22"/></operator><operator pos:line="130" pos:column="22">)<pos:position pos:line="130" pos:column="23"/></operator> <call><name pos:line="130" pos:column="24">YYSTACK_ALLOC<pos:position pos:line="130" pos:column="37"/></name> <argument_list pos:line="130" pos:column="38">(<argument><expr><name pos:line="130" pos:column="39">yystacksize<pos:position pos:line="130" pos:column="50"/></name> <operator pos:line="130" pos:column="51">*<pos:position pos:line="130" pos:column="52"/></operator> <sizeof pos:line="130" pos:column="53">sizeof <argument_list pos:line="130" pos:column="60">(<argument><expr><operator pos:line="130" pos:column="61">*<pos:position pos:line="130" pos:column="62"/></operator><name pos:line="130" pos:column="62">yyssp<pos:position pos:line="130" pos:column="67"/></name></expr></argument>)<pos:position pos:line="130" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="130" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="131" pos:column="7">__yy_memcpy<pos:position pos:line="131" pos:column="18"/></name> <argument_list pos:line="131" pos:column="19">(<argument><expr><operator pos:line="131" pos:column="20">(<pos:position pos:line="131" pos:column="21"/></operator><name pos:line="131" pos:column="21">char<pos:position pos:line="131" pos:column="25"/></name> <operator pos:line="131" pos:column="26">*<pos:position pos:line="131" pos:column="27"/></operator><operator pos:line="131" pos:column="27">)<pos:position pos:line="131" pos:column="28"/></operator><name pos:line="131" pos:column="28">yyss<pos:position pos:line="131" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="34">(<pos:position pos:line="131" pos:column="35"/></operator><name pos:line="131" pos:column="35">char<pos:position pos:line="131" pos:column="39"/></name> <operator pos:line="131" pos:column="40">*<pos:position pos:line="131" pos:column="41"/></operator><operator pos:line="131" pos:column="41">)<pos:position pos:line="131" pos:column="42"/></operator><name pos:line="131" pos:column="42">yyss1<pos:position pos:line="131" pos:column="47"/></name></expr></argument>,
		   <argument><expr><name pos:line="132" pos:column="20">size<pos:position pos:line="132" pos:column="24"/></name> <operator pos:line="132" pos:column="25">*<pos:position pos:line="132" pos:column="26"/></operator> <operator pos:line="132" pos:column="27">(<pos:position pos:line="132" pos:column="28"/></operator><name pos:line="132" pos:column="28">unsigned<pos:position pos:line="132" pos:column="36"/></name> <name pos:line="132" pos:column="37">int<pos:position pos:line="132" pos:column="40"/></name><operator pos:line="132" pos:column="40">)<pos:position pos:line="132" pos:column="41"/></operator> <sizeof pos:line="132" pos:column="42">sizeof <argument_list pos:line="132" pos:column="49">(<argument><expr><operator pos:line="132" pos:column="50">*<pos:position pos:line="132" pos:column="51"/></operator><name pos:line="132" pos:column="51">yyssp<pos:position pos:line="132" pos:column="56"/></name></expr></argument>)<pos:position pos:line="132" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="132" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><name pos:line="133" pos:column="7">yyvs<pos:position pos:line="133" pos:column="11"/></name> <operator pos:line="133" pos:column="12">=<pos:position pos:line="133" pos:column="13"/></operator> <operator pos:line="133" pos:column="14">(<pos:position pos:line="133" pos:column="15"/></operator><name pos:line="133" pos:column="15">YYSTYPE<pos:position pos:line="133" pos:column="22"/></name> <operator pos:line="133" pos:column="23">*<pos:position pos:line="133" pos:column="24"/></operator><operator pos:line="133" pos:column="24">)<pos:position pos:line="133" pos:column="25"/></operator> <call><name pos:line="133" pos:column="26">YYSTACK_ALLOC<pos:position pos:line="133" pos:column="39"/></name> <argument_list pos:line="133" pos:column="40">(<argument><expr><name pos:line="133" pos:column="41">yystacksize<pos:position pos:line="133" pos:column="52"/></name> <operator pos:line="133" pos:column="53">*<pos:position pos:line="133" pos:column="54"/></operator> <sizeof pos:line="133" pos:column="55">sizeof <argument_list pos:line="133" pos:column="62">(<argument><expr><operator pos:line="133" pos:column="63">*<pos:position pos:line="133" pos:column="64"/></operator><name pos:line="133" pos:column="64">yyvsp<pos:position pos:line="133" pos:column="69"/></name></expr></argument>)<pos:position pos:line="133" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="133" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="134" pos:column="7">__yy_memcpy<pos:position pos:line="134" pos:column="18"/></name> <argument_list pos:line="134" pos:column="19">(<argument><expr><operator pos:line="134" pos:column="20">(<pos:position pos:line="134" pos:column="21"/></operator><name pos:line="134" pos:column="21">char<pos:position pos:line="134" pos:column="25"/></name> <operator pos:line="134" pos:column="26">*<pos:position pos:line="134" pos:column="27"/></operator><operator pos:line="134" pos:column="27">)<pos:position pos:line="134" pos:column="28"/></operator><name pos:line="134" pos:column="28">yyvs<pos:position pos:line="134" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="34">(<pos:position pos:line="134" pos:column="35"/></operator><name pos:line="134" pos:column="35">char<pos:position pos:line="134" pos:column="39"/></name> <operator pos:line="134" pos:column="40">*<pos:position pos:line="134" pos:column="41"/></operator><operator pos:line="134" pos:column="41">)<pos:position pos:line="134" pos:column="42"/></operator><name pos:line="134" pos:column="42">yyvs1<pos:position pos:line="134" pos:column="47"/></name></expr></argument>,
		   <argument><expr><name pos:line="135" pos:column="20">size<pos:position pos:line="135" pos:column="24"/></name> <operator pos:line="135" pos:column="25">*<pos:position pos:line="135" pos:column="26"/></operator> <operator pos:line="135" pos:column="27">(<pos:position pos:line="135" pos:column="28"/></operator><name pos:line="135" pos:column="28">unsigned<pos:position pos:line="135" pos:column="36"/></name> <name pos:line="135" pos:column="37">int<pos:position pos:line="135" pos:column="40"/></name><operator pos:line="135" pos:column="40">)<pos:position pos:line="135" pos:column="41"/></operator> <sizeof pos:line="135" pos:column="42">sizeof <argument_list pos:line="135" pos:column="49">(<argument><expr><operator pos:line="135" pos:column="50">*<pos:position pos:line="135" pos:column="51"/></operator><name pos:line="135" pos:column="51">yyvsp<pos:position pos:line="135" pos:column="56"/></name></expr></argument>)<pos:position pos:line="135" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="135" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="59"/></expr_stmt>
<cpp:ifdef pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">ifdef<pos:position pos:line="136" pos:column="7"/></cpp:directive> <name pos:line="136" pos:column="8">YYLSP_NEEDED<pos:position pos:line="136" pos:column="20"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="137" pos:column="7">yyls<pos:position pos:line="137" pos:column="11"/></name> <operator pos:line="137" pos:column="12">=<pos:position pos:line="137" pos:column="13"/></operator> <operator pos:line="137" pos:column="14">(<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="15">YYLTYPE<pos:position pos:line="137" pos:column="22"/></name> <operator pos:line="137" pos:column="23">*<pos:position pos:line="137" pos:column="24"/></operator><operator pos:line="137" pos:column="24">)<pos:position pos:line="137" pos:column="25"/></operator> <call><name pos:line="137" pos:column="26">YYSTACK_ALLOC<pos:position pos:line="137" pos:column="39"/></name> <argument_list pos:line="137" pos:column="40">(<argument><expr><name pos:line="137" pos:column="41">yystacksize<pos:position pos:line="137" pos:column="52"/></name> <operator pos:line="137" pos:column="53">*<pos:position pos:line="137" pos:column="54"/></operator> <sizeof pos:line="137" pos:column="55">sizeof <argument_list pos:line="137" pos:column="62">(<argument><expr><operator pos:line="137" pos:column="63">*<pos:position pos:line="137" pos:column="64"/></operator><name pos:line="137" pos:column="64">yylsp<pos:position pos:line="137" pos:column="69"/></name></expr></argument>)<pos:position pos:line="137" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="137" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="138" pos:column="7">__yy_memcpy<pos:position pos:line="138" pos:column="18"/></name> <argument_list pos:line="138" pos:column="19">(<argument><expr><operator pos:line="138" pos:column="20">(<pos:position pos:line="138" pos:column="21"/></operator><name pos:line="138" pos:column="21">char<pos:position pos:line="138" pos:column="25"/></name> <operator pos:line="138" pos:column="26">*<pos:position pos:line="138" pos:column="27"/></operator><operator pos:line="138" pos:column="27">)<pos:position pos:line="138" pos:column="28"/></operator><name pos:line="138" pos:column="28">yyls<pos:position pos:line="138" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="138" pos:column="34">(<pos:position pos:line="138" pos:column="35"/></operator><name pos:line="138" pos:column="35">char<pos:position pos:line="138" pos:column="39"/></name> <operator pos:line="138" pos:column="40">*<pos:position pos:line="138" pos:column="41"/></operator><operator pos:line="138" pos:column="41">)<pos:position pos:line="138" pos:column="42"/></operator><name pos:line="138" pos:column="42">yyls1<pos:position pos:line="138" pos:column="47"/></name></expr></argument>,
		   <argument><expr><name pos:line="139" pos:column="20">size<pos:position pos:line="139" pos:column="24"/></name> <operator pos:line="139" pos:column="25">*<pos:position pos:line="139" pos:column="26"/></operator> <operator pos:line="139" pos:column="27">(<pos:position pos:line="139" pos:column="28"/></operator><name pos:line="139" pos:column="28">unsigned<pos:position pos:line="139" pos:column="36"/></name> <name pos:line="139" pos:column="37">int<pos:position pos:line="139" pos:column="40"/></name><operator pos:line="139" pos:column="40">)<pos:position pos:line="139" pos:column="41"/></operator> <sizeof pos:line="139" pos:column="42">sizeof <argument_list pos:line="139" pos:column="49">(<argument><expr><operator pos:line="139" pos:column="50">*<pos:position pos:line="139" pos:column="51"/></operator><name pos:line="139" pos:column="51">yylsp<pos:position pos:line="139" pos:column="56"/></name></expr></argument>)<pos:position pos:line="139" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="139" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">endif<pos:position pos:line="140" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">endif<pos:position pos:line="141" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="141" pos:column="8">/* no yyoverflow */</comment>

      <expr_stmt><expr><name pos:line="143" pos:column="7">yyssp<pos:position pos:line="143" pos:column="12"/></name> <operator pos:line="143" pos:column="13">=<pos:position pos:line="143" pos:column="14"/></operator> <name pos:line="143" pos:column="15">yyss<pos:position pos:line="143" pos:column="19"/></name> <operator pos:line="143" pos:column="20">+<pos:position pos:line="143" pos:column="21"/></operator> <name pos:line="143" pos:column="22">size<pos:position pos:line="143" pos:column="26"/></name> <operator pos:line="143" pos:column="27">-<pos:position pos:line="143" pos:column="28"/></operator> <literal type="number" pos:line="143" pos:column="29">1<pos:position pos:line="143" pos:column="30"/></literal></expr>;<pos:position pos:line="143" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="144" pos:column="7">yyvsp<pos:position pos:line="144" pos:column="12"/></name> <operator pos:line="144" pos:column="13">=<pos:position pos:line="144" pos:column="14"/></operator> <name pos:line="144" pos:column="15">yyvs<pos:position pos:line="144" pos:column="19"/></name> <operator pos:line="144" pos:column="20">+<pos:position pos:line="144" pos:column="21"/></operator> <name pos:line="144" pos:column="22">size<pos:position pos:line="144" pos:column="26"/></name> <operator pos:line="144" pos:column="27">-<pos:position pos:line="144" pos:column="28"/></operator> <literal type="number" pos:line="144" pos:column="29">1<pos:position pos:line="144" pos:column="30"/></literal></expr>;<pos:position pos:line="144" pos:column="31"/></expr_stmt>
<cpp:ifdef pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">ifdef<pos:position pos:line="145" pos:column="7"/></cpp:directive> <name pos:line="145" pos:column="8">YYLSP_NEEDED<pos:position pos:line="145" pos:column="20"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="146" pos:column="7">yylsp<pos:position pos:line="146" pos:column="12"/></name> <operator pos:line="146" pos:column="13">=<pos:position pos:line="146" pos:column="14"/></operator> <name pos:line="146" pos:column="15">yyls<pos:position pos:line="146" pos:column="19"/></name> <operator pos:line="146" pos:column="20">+<pos:position pos:line="146" pos:column="21"/></operator> <name pos:line="146" pos:column="22">size<pos:position pos:line="146" pos:column="26"/></name> <operator pos:line="146" pos:column="27">-<pos:position pos:line="146" pos:column="28"/></operator> <literal type="number" pos:line="146" pos:column="29">1<pos:position pos:line="146" pos:column="30"/></literal></expr>;<pos:position pos:line="146" pos:column="31"/></expr_stmt>
<cpp:endif pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">endif<pos:position pos:line="147" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="149" pos:column="1">#<cpp:directive pos:line="149" pos:column="2">if<pos:position pos:line="149" pos:column="4"/></cpp:directive> <expr><name pos:line="149" pos:column="5">YYDEBUG<pos:position pos:line="149" pos:column="12"/></name> <operator pos:line="149" pos:column="13">!=<pos:position pos:line="149" pos:column="15"/></operator> <literal type="number" pos:line="149" pos:column="16">0<pos:position pos:line="149" pos:column="17"/></literal></expr></cpp:if>
      <if pos:line="150" pos:column="7">if <condition pos:line="150" pos:column="10">(<expr><name pos:line="150" pos:column="11">yydebug<pos:position pos:line="150" pos:column="18"/></name></expr>)<pos:position pos:line="150" pos:column="19"/></condition><then pos:line="150" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="151" pos:column="9">fprintf<pos:position pos:line="151" pos:column="16"/></name><argument_list pos:line="151" pos:column="16">(<argument><expr><name pos:line="151" pos:column="17">stderr<pos:position pos:line="151" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="25">"Stack size increased to %d\n"<pos:position pos:line="151" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="151" pos:column="57">yystacksize<pos:position pos:line="151" pos:column="68"/></name></expr></argument>)<pos:position pos:line="151" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="70"/></expr_stmt></block></then></if>
<cpp:endif pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">endif<pos:position pos:line="152" pos:column="7"/></cpp:directive></cpp:endif>

      <if pos:line="154" pos:column="7">if <condition pos:line="154" pos:column="10">(<expr><name pos:line="154" pos:column="11">yyssp<pos:position pos:line="154" pos:column="16"/></name> <operator pos:line="154" pos:column="17">&gt;=<pos:position pos:line="154" pos:column="22"/></operator> <name pos:line="154" pos:column="20">yyss<pos:position pos:line="154" pos:column="24"/></name> <operator pos:line="154" pos:column="25">+<pos:position pos:line="154" pos:column="26"/></operator> <name pos:line="154" pos:column="27">yystacksize<pos:position pos:line="154" pos:column="38"/></name> <operator pos:line="154" pos:column="39">-<pos:position pos:line="154" pos:column="40"/></operator> <literal type="number" pos:line="154" pos:column="41">1<pos:position pos:line="154" pos:column="42"/></literal></expr>)<pos:position pos:line="154" pos:column="43"/></condition><then pos:line="154" pos:column="43">
	<block type="pseudo"><expr_stmt><expr><name pos:line="155" pos:column="9">YYABORT<pos:position pos:line="155" pos:column="16"/></name></expr>;<pos:position pos:line="155" pos:column="17"/></expr_stmt></block></then></if>
    }<pos:position pos:line="156" pos:column="6"/></block></then></if>

<cpp:if pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">if<pos:position pos:line="158" pos:column="4"/></cpp:directive> <expr><name pos:line="158" pos:column="5">YYDEBUG<pos:position pos:line="158" pos:column="12"/></name> <operator pos:line="158" pos:column="13">!=<pos:position pos:line="158" pos:column="15"/></operator> <literal type="number" pos:line="158" pos:column="16">0<pos:position pos:line="158" pos:column="17"/></literal></expr></cpp:if>
  <if pos:line="159" pos:column="3">if <condition pos:line="159" pos:column="6">(<expr><name pos:line="159" pos:column="7">yydebug<pos:position pos:line="159" pos:column="14"/></name></expr>)<pos:position pos:line="159" pos:column="15"/></condition><then pos:line="159" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="5">fprintf<pos:position pos:line="160" pos:column="12"/></name><argument_list pos:line="160" pos:column="12">(<argument><expr><name pos:line="160" pos:column="13">stderr<pos:position pos:line="160" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="21">"Entering state %d\n"<pos:position pos:line="160" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="44">yystate<pos:position pos:line="160" pos:column="51"/></name></expr></argument>)<pos:position pos:line="160" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="53"/></expr_stmt></block></then></if>
<cpp:endif pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">endif<pos:position pos:line="161" pos:column="7"/></cpp:directive></cpp:endif>

  <goto pos:line="163" pos:column="3">goto <name pos:line="163" pos:column="8">yybackup<pos:position pos:line="163" pos:column="16"/></name>;<pos:position pos:line="163" pos:column="17"/></goto>
 <label><name pos:line="164" pos:column="2">yybackup<pos:position pos:line="164" pos:column="10"/></name>:<pos:position pos:line="164" pos:column="11"/></label>

<comment type="block" pos:line="166" pos:column="1">/* Do appropriate processing given the current state.  */</comment>
<comment type="block" pos:line="167" pos:column="1">/* Read a lookahead token if we need one and don't already have one.  */</comment>
<comment type="block" pos:line="168" pos:column="1">/* yyresume: */</comment>

  <comment type="block" pos:line="170" pos:column="3">/* First try to decide what to do without reference to lookahead token.  */</comment>

  <expr_stmt><expr><name pos:line="172" pos:column="3">yyn<pos:position pos:line="172" pos:column="6"/></name> <operator pos:line="172" pos:column="7">=<pos:position pos:line="172" pos:column="8"/></operator> <name><name pos:line="172" pos:column="9">yypact<pos:position pos:line="172" pos:column="15"/></name><index pos:line="172" pos:column="15">[<expr><name pos:line="172" pos:column="16">yystate<pos:position pos:line="172" pos:column="23"/></name></expr>]<pos:position pos:line="172" pos:column="24"/></index></name></expr>;<pos:position pos:line="172" pos:column="25"/></expr_stmt>
  <if pos:line="173" pos:column="3">if <condition pos:line="173" pos:column="6">(<expr><name pos:line="173" pos:column="7">yyn<pos:position pos:line="173" pos:column="10"/></name> <operator pos:line="173" pos:column="11">==<pos:position pos:line="173" pos:column="13"/></operator> <name pos:line="173" pos:column="14">YYFLAG<pos:position pos:line="173" pos:column="20"/></name></expr>)<pos:position pos:line="173" pos:column="21"/></condition><then pos:line="173" pos:column="21">
    <block type="pseudo"><goto pos:line="174" pos:column="5">goto <name pos:line="174" pos:column="10">yydefault<pos:position pos:line="174" pos:column="19"/></name>;<pos:position pos:line="174" pos:column="20"/></goto></block></then></if>

  <comment type="block" pos:line="176" pos:column="3">/* Not known =&gt; get a lookahead token if don't already have one.  */</comment>

  <comment type="block" pos:line="178" pos:column="3">/* yychar is either YYEMPTY or YYEOF
     or a valid token in external form.  */</comment>

  <if pos:line="181" pos:column="3">if <condition pos:line="181" pos:column="6">(<expr><name pos:line="181" pos:column="7">yychar<pos:position pos:line="181" pos:column="13"/></name> <operator pos:line="181" pos:column="14">==<pos:position pos:line="181" pos:column="16"/></operator> <name pos:line="181" pos:column="17">YYEMPTY<pos:position pos:line="181" pos:column="24"/></name></expr>)<pos:position pos:line="181" pos:column="25"/></condition><then pos:line="181" pos:column="25">
    <block pos:line="182" pos:column="5">{
<cpp:if pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">if<pos:position pos:line="183" pos:column="4"/></cpp:directive> <expr><name pos:line="183" pos:column="5">YYDEBUG<pos:position pos:line="183" pos:column="12"/></name> <operator pos:line="183" pos:column="13">!=<pos:position pos:line="183" pos:column="15"/></operator> <literal type="number" pos:line="183" pos:column="16">0<pos:position pos:line="183" pos:column="17"/></literal></expr></cpp:if>
      <if pos:line="184" pos:column="7">if <condition pos:line="184" pos:column="10">(<expr><name pos:line="184" pos:column="11">yydebug<pos:position pos:line="184" pos:column="18"/></name></expr>)<pos:position pos:line="184" pos:column="19"/></condition><then pos:line="184" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="9">fprintf<pos:position pos:line="185" pos:column="16"/></name><argument_list pos:line="185" pos:column="16">(<argument><expr><name pos:line="185" pos:column="17">stderr<pos:position pos:line="185" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="25">"Reading a token: "<pos:position pos:line="185" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="46"/></expr_stmt></block></then></if>
<cpp:endif pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">endif<pos:position pos:line="186" pos:column="7"/></cpp:directive></cpp:endif>
      <expr_stmt><expr><name pos:line="187" pos:column="7">yychar<pos:position pos:line="187" pos:column="13"/></name> <operator pos:line="187" pos:column="14">=<pos:position pos:line="187" pos:column="15"/></operator> <name pos:line="187" pos:column="16">YYLEX<pos:position pos:line="187" pos:column="21"/></name></expr>;<pos:position pos:line="187" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="188" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="190" pos:column="3">/* Convert token to internal form (in yychar1) for indexing tables with */</comment>

  <if pos:line="192" pos:column="3">if <condition pos:line="192" pos:column="6">(<expr><name pos:line="192" pos:column="7">yychar<pos:position pos:line="192" pos:column="13"/></name> <operator pos:line="192" pos:column="14">&lt;=<pos:position pos:line="192" pos:column="19"/></operator> <literal type="number" pos:line="192" pos:column="17">0<pos:position pos:line="192" pos:column="18"/></literal></expr>)<pos:position pos:line="192" pos:column="19"/></condition><then pos:line="192" pos:column="19">		<comment type="block" pos:line="192" pos:column="33">/* This means end of input. */</comment>
    <block pos:line="193" pos:column="5">{
      <expr_stmt><expr><name pos:line="194" pos:column="7">yychar1<pos:position pos:line="194" pos:column="14"/></name> <operator pos:line="194" pos:column="15">=<pos:position pos:line="194" pos:column="16"/></operator> <literal type="number" pos:line="194" pos:column="17">0<pos:position pos:line="194" pos:column="18"/></literal></expr>;<pos:position pos:line="194" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="195" pos:column="7">yychar<pos:position pos:line="195" pos:column="13"/></name> <operator pos:line="195" pos:column="14">=<pos:position pos:line="195" pos:column="15"/></operator> <name pos:line="195" pos:column="16">YYEOF<pos:position pos:line="195" pos:column="21"/></name></expr>;<pos:position pos:line="195" pos:column="22"/></expr_stmt>		<comment type="block" pos:line="195" pos:column="33">/* Don't call YYLEX any more */</comment>

<cpp:if pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">if<pos:position pos:line="197" pos:column="4"/></cpp:directive> <expr><name pos:line="197" pos:column="5">YYDEBUG<pos:position pos:line="197" pos:column="12"/></name> <operator pos:line="197" pos:column="13">!=<pos:position pos:line="197" pos:column="15"/></operator> <literal type="number" pos:line="197" pos:column="16">0<pos:position pos:line="197" pos:column="17"/></literal></expr></cpp:if>
      <if pos:line="198" pos:column="7">if <condition pos:line="198" pos:column="10">(<expr><name pos:line="198" pos:column="11">yydebug<pos:position pos:line="198" pos:column="18"/></name></expr>)<pos:position pos:line="198" pos:column="19"/></condition><then pos:line="198" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="199" pos:column="9">fprintf<pos:position pos:line="199" pos:column="16"/></name><argument_list pos:line="199" pos:column="16">(<argument><expr><name pos:line="199" pos:column="17">stderr<pos:position pos:line="199" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="25">"Now at end of input.\n"<pos:position pos:line="199" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="200" pos:column="1">#<cpp:directive pos:line="200" pos:column="2">endif<pos:position pos:line="200" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="201" pos:column="6"/></block></then>
  <else pos:line="202" pos:column="3">else
    <block pos:line="203" pos:column="5">{
      <expr_stmt><expr><name pos:line="204" pos:column="7">yychar1<pos:position pos:line="204" pos:column="14"/></name> <operator pos:line="204" pos:column="15">=<pos:position pos:line="204" pos:column="16"/></operator> <call><name pos:line="204" pos:column="17">YYTRANSLATE<pos:position pos:line="204" pos:column="28"/></name><argument_list pos:line="204" pos:column="28">(<argument><expr><name pos:line="204" pos:column="29">yychar<pos:position pos:line="204" pos:column="35"/></name></expr></argument>)<pos:position pos:line="204" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="37"/></expr_stmt>

<cpp:if pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">if<pos:position pos:line="206" pos:column="4"/></cpp:directive> <expr><name pos:line="206" pos:column="5">YYDEBUG<pos:position pos:line="206" pos:column="12"/></name> <operator pos:line="206" pos:column="13">!=<pos:position pos:line="206" pos:column="15"/></operator> <literal type="number" pos:line="206" pos:column="16">0<pos:position pos:line="206" pos:column="17"/></literal></expr></cpp:if>
      <if pos:line="207" pos:column="7">if <condition pos:line="207" pos:column="10">(<expr><name pos:line="207" pos:column="11">yydebug<pos:position pos:line="207" pos:column="18"/></name></expr>)<pos:position pos:line="207" pos:column="19"/></condition><then pos:line="207" pos:column="19">
	<block pos:line="208" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="209" pos:column="11">fprintf<pos:position pos:line="209" pos:column="18"/></name> <argument_list pos:line="209" pos:column="19">(<argument><expr><name pos:line="209" pos:column="20">stderr<pos:position pos:line="209" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="209" pos:column="28">"Next token is %d (%s"<pos:position pos:line="209" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="209" pos:column="52">yychar<pos:position pos:line="209" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="60">yytname<pos:position pos:line="209" pos:column="67"/></name><index pos:line="209" pos:column="67">[<expr><name pos:line="209" pos:column="68">yychar1<pos:position pos:line="209" pos:column="75"/></name></expr>]<pos:position pos:line="209" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="209" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="78"/></expr_stmt>
	  <comment type="block" pos:line="210" pos:column="11">/* Give the individual parser a way to print the precise meaning
	     of a token, for further debugging info.  */</comment>
<cpp:ifdef pos:line="212" pos:column="1">#<cpp:directive pos:line="212" pos:column="2">ifdef<pos:position pos:line="212" pos:column="7"/></cpp:directive> <name pos:line="212" pos:column="8">YYPRINT<pos:position pos:line="212" pos:column="15"/></name></cpp:ifdef>
	  <expr_stmt><expr><call><name pos:line="213" pos:column="11">YYPRINT<pos:position pos:line="213" pos:column="18"/></name> <argument_list pos:line="213" pos:column="19">(<argument><expr><name pos:line="213" pos:column="20">stderr<pos:position pos:line="213" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="28">yychar<pos:position pos:line="213" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="36">yylval<pos:position pos:line="213" pos:column="42"/></name></expr></argument>)<pos:position pos:line="213" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="214" pos:column="1">#<cpp:directive pos:line="214" pos:column="2">endif<pos:position pos:line="214" pos:column="7"/></cpp:directive></cpp:endif>
	  <expr_stmt><expr><call><name pos:line="215" pos:column="11">fprintf<pos:position pos:line="215" pos:column="18"/></name> <argument_list pos:line="215" pos:column="19">(<argument><expr><name pos:line="215" pos:column="20">stderr<pos:position pos:line="215" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="28">")\n"<pos:position pos:line="215" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="216" pos:column="10"/></block></then></if>
<cpp:endif pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">endif<pos:position pos:line="217" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="218" pos:column="6"/></block></else></if>

  <expr_stmt><expr><name pos:line="220" pos:column="3">yyn<pos:position pos:line="220" pos:column="6"/></name> <operator pos:line="220" pos:column="7">+=<pos:position pos:line="220" pos:column="9"/></operator> <name pos:line="220" pos:column="10">yychar1<pos:position pos:line="220" pos:column="17"/></name></expr>;<pos:position pos:line="220" pos:column="18"/></expr_stmt>
  <if pos:line="221" pos:column="3">if <condition pos:line="221" pos:column="6">(<expr><name><name pos:line="221" pos:column="7">yyn<pos:position pos:line="221" pos:column="10"/></name> <argument_list type="generic" pos:line="221" pos:column="11">&lt; <argument><expr><literal type="number" pos:line="221" pos:column="13">0<pos:position pos:line="221" pos:column="14"/></literal> <operator pos:line="221" pos:column="15">||<pos:position pos:line="221" pos:column="17"/></operator> <name pos:line="221" pos:column="18">yyn<pos:position pos:line="221" pos:column="21"/></name></expr></argument> &gt;<pos:position pos:line="221" pos:column="26"/></argument_list></name> <name pos:line="221" pos:column="24">YYLAST<pos:position pos:line="221" pos:column="30"/></name> <operator pos:line="221" pos:column="31">||<pos:position pos:line="221" pos:column="33"/></operator> <name><name pos:line="221" pos:column="34">yycheck<pos:position pos:line="221" pos:column="41"/></name><index pos:line="221" pos:column="41">[<expr><name pos:line="221" pos:column="42">yyn<pos:position pos:line="221" pos:column="45"/></name></expr>]<pos:position pos:line="221" pos:column="46"/></index></name> <operator pos:line="221" pos:column="47">!=<pos:position pos:line="221" pos:column="49"/></operator> <name pos:line="221" pos:column="50">yychar1<pos:position pos:line="221" pos:column="57"/></name></expr>)<pos:position pos:line="221" pos:column="58"/></condition><then pos:line="221" pos:column="58">
    <block type="pseudo"><goto pos:line="222" pos:column="5">goto <name pos:line="222" pos:column="10">yydefault<pos:position pos:line="222" pos:column="19"/></name>;<pos:position pos:line="222" pos:column="20"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="224" pos:column="3">yyn<pos:position pos:line="224" pos:column="6"/></name> <operator pos:line="224" pos:column="7">=<pos:position pos:line="224" pos:column="8"/></operator> <name><name pos:line="224" pos:column="9">yytable<pos:position pos:line="224" pos:column="16"/></name><index pos:line="224" pos:column="16">[<expr><name pos:line="224" pos:column="17">yyn<pos:position pos:line="224" pos:column="20"/></name></expr>]<pos:position pos:line="224" pos:column="21"/></index></name></expr>;<pos:position pos:line="224" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="226" pos:column="3">/* yyn is what to do for this token type in this state.
     Negative =&gt; reduce, -yyn is rule number.
     Positive =&gt; shift, yyn is new state.
       New state is final state =&gt; don't bother to shift,
       just return success.
     0, or most negative number =&gt; error.  */</comment>

  <if pos:line="233" pos:column="3">if <condition pos:line="233" pos:column="6">(<expr><name pos:line="233" pos:column="7">yyn<pos:position pos:line="233" pos:column="10"/></name> <operator pos:line="233" pos:column="11">&lt;<pos:position pos:line="233" pos:column="15"/></operator> <literal type="number" pos:line="233" pos:column="13">0<pos:position pos:line="233" pos:column="14"/></literal></expr>)<pos:position pos:line="233" pos:column="15"/></condition><then pos:line="233" pos:column="15">
    <block pos:line="234" pos:column="5">{
      <if pos:line="235" pos:column="7">if <condition pos:line="235" pos:column="10">(<expr><name pos:line="235" pos:column="11">yyn<pos:position pos:line="235" pos:column="14"/></name> <operator pos:line="235" pos:column="15">==<pos:position pos:line="235" pos:column="17"/></operator> <name pos:line="235" pos:column="18">YYFLAG<pos:position pos:line="235" pos:column="24"/></name></expr>)<pos:position pos:line="235" pos:column="25"/></condition><then pos:line="235" pos:column="25">
	<block type="pseudo"><goto pos:line="236" pos:column="9">goto <name pos:line="236" pos:column="14">yyerrlab<pos:position pos:line="236" pos:column="22"/></name>;<pos:position pos:line="236" pos:column="23"/></goto></block></then></if>
      <expr_stmt><expr><name pos:line="237" pos:column="7">yyn<pos:position pos:line="237" pos:column="10"/></name> <operator pos:line="237" pos:column="11">=<pos:position pos:line="237" pos:column="12"/></operator> <operator pos:line="237" pos:column="13">-<pos:position pos:line="237" pos:column="14"/></operator><name pos:line="237" pos:column="14">yyn<pos:position pos:line="237" pos:column="17"/></name></expr>;<pos:position pos:line="237" pos:column="18"/></expr_stmt>
      <goto pos:line="238" pos:column="7">goto <name pos:line="238" pos:column="12">yyreduce<pos:position pos:line="238" pos:column="20"/></name>;<pos:position pos:line="238" pos:column="21"/></goto>
    }<pos:position pos:line="239" pos:column="6"/></block></then>
  <elseif pos:line="240" pos:column="3">else <if pos:line="240" pos:column="8">if <condition pos:line="240" pos:column="11">(<expr><name pos:line="240" pos:column="12">yyn<pos:position pos:line="240" pos:column="15"/></name> <operator pos:line="240" pos:column="16">==<pos:position pos:line="240" pos:column="18"/></operator> <literal type="number" pos:line="240" pos:column="19">0<pos:position pos:line="240" pos:column="20"/></literal></expr>)<pos:position pos:line="240" pos:column="21"/></condition><then pos:line="240" pos:column="21">
    <block type="pseudo"><goto pos:line="241" pos:column="5">goto <name pos:line="241" pos:column="10">yyerrlab<pos:position pos:line="241" pos:column="18"/></name>;<pos:position pos:line="241" pos:column="19"/></goto></block></then></if></elseif></if>

  <if pos:line="243" pos:column="3">if <condition pos:line="243" pos:column="6">(<expr><name pos:line="243" pos:column="7">yyn<pos:position pos:line="243" pos:column="10"/></name> <operator pos:line="243" pos:column="11">==<pos:position pos:line="243" pos:column="13"/></operator> <name pos:line="243" pos:column="14">YYFINAL<pos:position pos:line="243" pos:column="21"/></name></expr>)<pos:position pos:line="243" pos:column="22"/></condition><then pos:line="243" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="244" pos:column="5">YYACCEPT<pos:position pos:line="244" pos:column="13"/></name></expr>;<pos:position pos:line="244" pos:column="14"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="246" pos:column="3">/* Shift the lookahead token.  */</comment>

<cpp:if pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">if<pos:position pos:line="248" pos:column="4"/></cpp:directive> <expr><name pos:line="248" pos:column="5">YYDEBUG<pos:position pos:line="248" pos:column="12"/></name> <operator pos:line="248" pos:column="13">!=<pos:position pos:line="248" pos:column="15"/></operator> <literal type="number" pos:line="248" pos:column="16">0<pos:position pos:line="248" pos:column="17"/></literal></expr></cpp:if>
  <if pos:line="249" pos:column="3">if <condition pos:line="249" pos:column="6">(<expr><name pos:line="249" pos:column="7">yydebug<pos:position pos:line="249" pos:column="14"/></name></expr>)<pos:position pos:line="249" pos:column="15"/></condition><then pos:line="249" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="250" pos:column="5">fprintf<pos:position pos:line="250" pos:column="12"/></name><argument_list pos:line="250" pos:column="12">(<argument><expr><name pos:line="250" pos:column="13">stderr<pos:position pos:line="250" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="21">"Shifting token %d (%s), "<pos:position pos:line="250" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="250" pos:column="49">yychar<pos:position pos:line="250" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="250" pos:column="57">yytname<pos:position pos:line="250" pos:column="64"/></name><index pos:line="250" pos:column="64">[<expr><name pos:line="250" pos:column="65">yychar1<pos:position pos:line="250" pos:column="72"/></name></expr>]<pos:position pos:line="250" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="250" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="75"/></expr_stmt></block></then></if>
<cpp:endif pos:line="251" pos:column="1">#<cpp:directive pos:line="251" pos:column="2">endif<pos:position pos:line="251" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="253" pos:column="3">/* Discard the token being shifted unless it is eof.  */</comment>
  <if pos:line="254" pos:column="3">if <condition pos:line="254" pos:column="6">(<expr><name pos:line="254" pos:column="7">yychar<pos:position pos:line="254" pos:column="13"/></name> <operator pos:line="254" pos:column="14">!=<pos:position pos:line="254" pos:column="16"/></operator> <name pos:line="254" pos:column="17">YYEOF<pos:position pos:line="254" pos:column="22"/></name></expr>)<pos:position pos:line="254" pos:column="23"/></condition><then pos:line="254" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="255" pos:column="5">yychar<pos:position pos:line="255" pos:column="11"/></name> <operator pos:line="255" pos:column="12">=<pos:position pos:line="255" pos:column="13"/></operator> <name pos:line="255" pos:column="14">YYEMPTY<pos:position pos:line="255" pos:column="21"/></name></expr>;<pos:position pos:line="255" pos:column="22"/></expr_stmt></block></then></if>

  <expr_stmt><expr><operator pos:line="257" pos:column="3">*<pos:position pos:line="257" pos:column="4"/></operator><operator pos:line="257" pos:column="4">++<pos:position pos:line="257" pos:column="6"/></operator><name pos:line="257" pos:column="6">yyvsp<pos:position pos:line="257" pos:column="11"/></name> <operator pos:line="257" pos:column="12">=<pos:position pos:line="257" pos:column="13"/></operator> <name pos:line="257" pos:column="14">yylval<pos:position pos:line="257" pos:column="20"/></name></expr>;<pos:position pos:line="257" pos:column="21"/></expr_stmt>
<cpp:ifdef pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">ifdef<pos:position pos:line="258" pos:column="7"/></cpp:directive> <name pos:line="258" pos:column="8">YYLSP_NEEDED<pos:position pos:line="258" pos:column="20"/></name></cpp:ifdef>
  <expr_stmt><expr><operator pos:line="259" pos:column="3">*<pos:position pos:line="259" pos:column="4"/></operator><operator pos:line="259" pos:column="4">++<pos:position pos:line="259" pos:column="6"/></operator><name pos:line="259" pos:column="6">yylsp<pos:position pos:line="259" pos:column="11"/></name> <operator pos:line="259" pos:column="12">=<pos:position pos:line="259" pos:column="13"/></operator> <name pos:line="259" pos:column="14">yylloc<pos:position pos:line="259" pos:column="20"/></name></expr>;<pos:position pos:line="259" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="260" pos:column="1">#<cpp:directive pos:line="260" pos:column="2">endif<pos:position pos:line="260" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="262" pos:column="3">/* count tokens shifted since error; after three, turn off error status.  */</comment>
  <if pos:line="263" pos:column="3">if <condition pos:line="263" pos:column="6">(<expr><name pos:line="263" pos:column="7">yyerrstatus<pos:position pos:line="263" pos:column="18"/></name></expr>)<pos:position pos:line="263" pos:column="19"/></condition><then pos:line="263" pos:column="19"> <block type="pseudo"><expr_stmt><expr><name pos:line="263" pos:column="20">yyerrstatus<pos:position pos:line="263" pos:column="31"/></name><operator pos:line="263" pos:column="31">--<pos:position pos:line="263" pos:column="33"/></operator></expr>;<pos:position pos:line="263" pos:column="34"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="265" pos:column="3">yystate<pos:position pos:line="265" pos:column="10"/></name> <operator pos:line="265" pos:column="11">=<pos:position pos:line="265" pos:column="12"/></operator> <name pos:line="265" pos:column="13">yyn<pos:position pos:line="265" pos:column="16"/></name></expr>;<pos:position pos:line="265" pos:column="17"/></expr_stmt>
  <goto pos:line="266" pos:column="3">goto <name pos:line="266" pos:column="8">yynewstate<pos:position pos:line="266" pos:column="18"/></name>;<pos:position pos:line="266" pos:column="19"/></goto>

<comment type="block" pos:line="268" pos:column="1">/* Do the default action for the current state.  */</comment>
<label><name pos:line="269" pos:column="1">yydefault<pos:position pos:line="269" pos:column="10"/></name>:<pos:position pos:line="269" pos:column="11"/></label>

  <expr_stmt><expr><name pos:line="271" pos:column="3">yyn<pos:position pos:line="271" pos:column="6"/></name> <operator pos:line="271" pos:column="7">=<pos:position pos:line="271" pos:column="8"/></operator> <name><name pos:line="271" pos:column="9">yydefact<pos:position pos:line="271" pos:column="17"/></name><index pos:line="271" pos:column="17">[<expr><name pos:line="271" pos:column="18">yystate<pos:position pos:line="271" pos:column="25"/></name></expr>]<pos:position pos:line="271" pos:column="26"/></index></name></expr>;<pos:position pos:line="271" pos:column="27"/></expr_stmt>
  <if pos:line="272" pos:column="3">if <condition pos:line="272" pos:column="6">(<expr><name pos:line="272" pos:column="7">yyn<pos:position pos:line="272" pos:column="10"/></name> <operator pos:line="272" pos:column="11">==<pos:position pos:line="272" pos:column="13"/></operator> <literal type="number" pos:line="272" pos:column="14">0<pos:position pos:line="272" pos:column="15"/></literal></expr>)<pos:position pos:line="272" pos:column="16"/></condition><then pos:line="272" pos:column="16">
    <block type="pseudo"><goto pos:line="273" pos:column="5">goto <name pos:line="273" pos:column="10">yyerrlab<pos:position pos:line="273" pos:column="18"/></name>;<pos:position pos:line="273" pos:column="19"/></goto></block></then></if>

<comment type="block" pos:line="275" pos:column="1">/* Do a reduction.  yyn is the number of a rule to reduce with.  */</comment>
<label><name pos:line="276" pos:column="1">yyreduce<pos:position pos:line="276" pos:column="9"/></name>:<pos:position pos:line="276" pos:column="10"/></label>
  <expr_stmt><expr><name pos:line="277" pos:column="3">yylen<pos:position pos:line="277" pos:column="8"/></name> <operator pos:line="277" pos:column="9">=<pos:position pos:line="277" pos:column="10"/></operator> <name><name pos:line="277" pos:column="11">yyr2<pos:position pos:line="277" pos:column="15"/></name><index pos:line="277" pos:column="15">[<expr><name pos:line="277" pos:column="16">yyn<pos:position pos:line="277" pos:column="19"/></name></expr>]<pos:position pos:line="277" pos:column="20"/></index></name></expr>;<pos:position pos:line="277" pos:column="21"/></expr_stmt>
  <if pos:line="278" pos:column="3">if <condition pos:line="278" pos:column="6">(<expr><name pos:line="278" pos:column="7">yylen<pos:position pos:line="278" pos:column="12"/></name> <operator pos:line="278" pos:column="13">&gt;<pos:position pos:line="278" pos:column="17"/></operator> <literal type="number" pos:line="278" pos:column="15">0<pos:position pos:line="278" pos:column="16"/></literal></expr>)<pos:position pos:line="278" pos:column="17"/></condition><then pos:line="278" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="279" pos:column="5">yyval<pos:position pos:line="279" pos:column="10"/></name> <operator pos:line="279" pos:column="11">=<pos:position pos:line="279" pos:column="12"/></operator> <name><name pos:line="279" pos:column="13">yyvsp<pos:position pos:line="279" pos:column="18"/></name><index pos:line="279" pos:column="18">[<expr><literal type="number" pos:line="279" pos:column="19">1<pos:position pos:line="279" pos:column="20"/></literal><operator pos:line="279" pos:column="20">-<pos:position pos:line="279" pos:column="21"/></operator><name pos:line="279" pos:column="21">yylen<pos:position pos:line="279" pos:column="26"/></name></expr>]<pos:position pos:line="279" pos:column="27"/></index></name></expr>;<pos:position pos:line="279" pos:column="28"/></expr_stmt></block></then></if> <comment type="block" pos:line="279" pos:column="29">/* implement default value of the action */</comment>

<cpp:if pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">if<pos:position pos:line="281" pos:column="4"/></cpp:directive> <expr><name pos:line="281" pos:column="5">YYDEBUG<pos:position pos:line="281" pos:column="12"/></name> <operator pos:line="281" pos:column="13">!=<pos:position pos:line="281" pos:column="15"/></operator> <literal type="number" pos:line="281" pos:column="16">0<pos:position pos:line="281" pos:column="17"/></literal></expr></cpp:if>
  <if pos:line="282" pos:column="3">if <condition pos:line="282" pos:column="6">(<expr><name pos:line="282" pos:column="7">yydebug<pos:position pos:line="282" pos:column="14"/></name></expr>)<pos:position pos:line="282" pos:column="15"/></condition><then pos:line="282" pos:column="15">
    <block pos:line="283" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="284" pos:column="7">int<pos:position pos:line="284" pos:column="10"/></name></type> <name pos:line="284" pos:column="11">i<pos:position pos:line="284" pos:column="12"/></name></decl>;<pos:position pos:line="284" pos:column="13"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="286" pos:column="7">fprintf<pos:position pos:line="286" pos:column="14"/></name> <argument_list pos:line="286" pos:column="15">(<argument><expr><name pos:line="286" pos:column="16">stderr<pos:position pos:line="286" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="24">"Reducing via rule %d (line %d), "<pos:position pos:line="286" pos:column="58"/></literal></expr></argument>,
	       <argument><expr><name pos:line="287" pos:column="16">yyn<pos:position pos:line="287" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="21">yyrline<pos:position pos:line="287" pos:column="28"/></name><index pos:line="287" pos:column="28">[<expr><name pos:line="287" pos:column="29">yyn<pos:position pos:line="287" pos:column="32"/></name></expr>]<pos:position pos:line="287" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="287" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="35"/></expr_stmt>

      <comment type="block" pos:line="289" pos:column="7">/* Print the symbols being reduced, and their result.  */</comment>
      <for pos:line="290" pos:column="7">for <control pos:line="290" pos:column="11">(<init><expr><name pos:line="290" pos:column="12">i<pos:position pos:line="290" pos:column="13"/></name> <operator pos:line="290" pos:column="14">=<pos:position pos:line="290" pos:column="15"/></operator> <name><name pos:line="290" pos:column="16">yyprhs<pos:position pos:line="290" pos:column="22"/></name><index pos:line="290" pos:column="22">[<expr><name pos:line="290" pos:column="23">yyn<pos:position pos:line="290" pos:column="26"/></name></expr>]<pos:position pos:line="290" pos:column="27"/></index></name></expr>;<pos:position pos:line="290" pos:column="28"/></init> <condition><expr><name><name pos:line="290" pos:column="29">yyrhs<pos:position pos:line="290" pos:column="34"/></name><index pos:line="290" pos:column="34">[<expr><name pos:line="290" pos:column="35">i<pos:position pos:line="290" pos:column="36"/></name></expr>]<pos:position pos:line="290" pos:column="37"/></index></name> <operator pos:line="290" pos:column="38">&gt;<pos:position pos:line="290" pos:column="42"/></operator> <literal type="number" pos:line="290" pos:column="40">0<pos:position pos:line="290" pos:column="41"/></literal></expr>;<pos:position pos:line="290" pos:column="42"/></condition> <incr><expr><name pos:line="290" pos:column="43">i<pos:position pos:line="290" pos:column="44"/></name><operator pos:line="290" pos:column="44">++<pos:position pos:line="290" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="290" pos:column="47"/></control>
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="291" pos:column="9">fprintf<pos:position pos:line="291" pos:column="16"/></name> <argument_list pos:line="291" pos:column="17">(<argument><expr><name pos:line="291" pos:column="18">stderr<pos:position pos:line="291" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="26">"%s "<pos:position pos:line="291" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="291" pos:column="33">yytname<pos:position pos:line="291" pos:column="40"/></name><index pos:line="291" pos:column="40">[<expr><name><name pos:line="291" pos:column="41">yyrhs<pos:position pos:line="291" pos:column="46"/></name><index pos:line="291" pos:column="46">[<expr><name pos:line="291" pos:column="47">i<pos:position pos:line="291" pos:column="48"/></name></expr>]<pos:position pos:line="291" pos:column="49"/></index></name></expr>]<pos:position pos:line="291" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="291" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="52"/></expr_stmt></block></for>
      <expr_stmt><expr><call><name pos:line="292" pos:column="7">fprintf<pos:position pos:line="292" pos:column="14"/></name> <argument_list pos:line="292" pos:column="15">(<argument><expr><name pos:line="292" pos:column="16">stderr<pos:position pos:line="292" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="24">" -&gt; %s\n"<pos:position pos:line="292" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="36">yytname<pos:position pos:line="292" pos:column="43"/></name><index pos:line="292" pos:column="43">[<expr><name><name pos:line="292" pos:column="44">yyr1<pos:position pos:line="292" pos:column="48"/></name><index pos:line="292" pos:column="48">[<expr><name pos:line="292" pos:column="49">yyn<pos:position pos:line="292" pos:column="52"/></name></expr>]<pos:position pos:line="292" pos:column="53"/></index></name></expr>]<pos:position pos:line="292" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="292" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="293" pos:column="6"/></block></then></if>
<cpp:endif pos:line="294" pos:column="1">#<cpp:directive pos:line="294" pos:column="2">endif<pos:position pos:line="294" pos:column="7"/></cpp:directive></cpp:endif>


  <switch pos:line="297" pos:column="3">switch <condition pos:line="297" pos:column="10">(<expr><name pos:line="297" pos:column="11">yyn<pos:position pos:line="297" pos:column="14"/></name></expr>)<pos:position pos:line="297" pos:column="15"/></condition> <block pos:line="297" pos:column="16">{

<case pos:line="299" pos:column="1">case <expr><literal type="number" pos:line="299" pos:column="6">1<pos:position pos:line="299" pos:column="7"/></literal></expr>:<pos:position pos:line="299" pos:column="8"/></case>
<cpp:line pos:line="300" pos:column="1">#<cpp:directive pos:line="300" pos:column="2">line<pos:position pos:line="300" pos:column="6"/></cpp:directive> <cpp:number pos:line="300" pos:column="7">179<pos:position pos:line="300" pos:column="10"/></cpp:number> <cpp:file pos:line="300" pos:column="11">"plural.y"<pos:position pos:line="300" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="301" pos:column="1">{
	    <if pos:line="302" pos:column="13">if <condition pos:line="302" pos:column="16">(<expr><name><name pos:line="302" pos:column="17">yyvsp<pos:position pos:line="302" pos:column="22"/></name><index pos:line="302" pos:column="22">[<expr><literal type="number" pos:line="302" pos:column="23">0<pos:position pos:line="302" pos:column="24"/></literal></expr>]<pos:position pos:line="302" pos:column="25"/></index></name><operator pos:line="302" pos:column="25">.<pos:position pos:line="302" pos:column="26"/></operator><name pos:line="302" pos:column="26">exp<pos:position pos:line="302" pos:column="29"/></name> <operator pos:line="302" pos:column="30">==<pos:position pos:line="302" pos:column="32"/></operator> <name pos:line="302" pos:column="33">NULL<pos:position pos:line="302" pos:column="37"/></name></expr>)<pos:position pos:line="302" pos:column="38"/></condition><then pos:line="302" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="303" pos:column="15">YYABORT<pos:position pos:line="303" pos:column="22"/></name></expr>;<pos:position pos:line="303" pos:column="23"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><operator pos:line="304" pos:column="13">(<pos:position pos:line="304" pos:column="14"/></operator><operator pos:line="304" pos:column="14">(<pos:position pos:line="304" pos:column="15"/></operator>struct <name pos:line="304" pos:column="22">parse_args<pos:position pos:line="304" pos:column="32"/></name> <operator pos:line="304" pos:column="33">*<pos:position pos:line="304" pos:column="34"/></operator><operator pos:line="304" pos:column="34">)<pos:position pos:line="304" pos:column="35"/></operator> <name pos:line="304" pos:column="36">arg<pos:position pos:line="304" pos:column="39"/></name><operator pos:line="304" pos:column="39">)<pos:position pos:line="304" pos:column="40"/></operator><operator pos:line="304" pos:column="40">-&gt;<pos:position pos:line="304" pos:column="45"/></operator><name pos:line="304" pos:column="42">res<pos:position pos:line="304" pos:column="45"/></name> <operator pos:line="304" pos:column="46">=<pos:position pos:line="304" pos:column="47"/></operator> <name><name pos:line="304" pos:column="48">yyvsp<pos:position pos:line="304" pos:column="53"/></name><index pos:line="304" pos:column="53">[<expr><literal type="number" pos:line="304" pos:column="54">0<pos:position pos:line="304" pos:column="55"/></literal></expr>]<pos:position pos:line="304" pos:column="56"/></index></name><operator pos:line="304" pos:column="56">.<pos:position pos:line="304" pos:column="57"/></operator><name pos:line="304" pos:column="57">exp<pos:position pos:line="304" pos:column="60"/></name></expr>;<pos:position pos:line="304" pos:column="61"/></expr_stmt>
	  <empty_stmt pos:line="305" pos:column="11">;<pos:position pos:line="305" pos:column="12"/></empty_stmt>
    <break pos:line="306" pos:column="5">break;<pos:position pos:line="306" pos:column="11"/></break>}<pos:position pos:line="306" pos:column="12"/></block>
<case pos:line="307" pos:column="1">case <expr><literal type="number" pos:line="307" pos:column="6">2<pos:position pos:line="307" pos:column="7"/></literal></expr>:<pos:position pos:line="307" pos:column="8"/></case>
<cpp:line pos:line="308" pos:column="1">#<cpp:directive pos:line="308" pos:column="2">line<pos:position pos:line="308" pos:column="6"/></cpp:directive> <cpp:number pos:line="308" pos:column="7">187<pos:position pos:line="308" pos:column="10"/></cpp:number> <cpp:file pos:line="308" pos:column="11">"plural.y"<pos:position pos:line="308" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="309" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="310" pos:column="13">yyval<pos:position pos:line="310" pos:column="18"/></name><operator pos:line="310" pos:column="18">.<pos:position pos:line="310" pos:column="19"/></operator><name pos:line="310" pos:column="19">exp<pos:position pos:line="310" pos:column="22"/></name></name> <operator pos:line="310" pos:column="23">=<pos:position pos:line="310" pos:column="24"/></operator> <call><name pos:line="310" pos:column="25">new_exp_3<pos:position pos:line="310" pos:column="34"/></name> <argument_list pos:line="310" pos:column="35">(<argument><expr><name pos:line="310" pos:column="36">qmop<pos:position pos:line="310" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="310" pos:column="42">yyvsp<pos:position pos:line="310" pos:column="47"/></name><index pos:line="310" pos:column="47">[<expr><operator pos:line="310" pos:column="48">-<pos:position pos:line="310" pos:column="49"/></operator><literal type="number" pos:line="310" pos:column="49">4<pos:position pos:line="310" pos:column="50"/></literal></expr>]<pos:position pos:line="310" pos:column="51"/></index></name><operator pos:line="310" pos:column="51">.<pos:position pos:line="310" pos:column="52"/></operator><name pos:line="310" pos:column="52">exp<pos:position pos:line="310" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="310" pos:column="57">yyvsp<pos:position pos:line="310" pos:column="62"/></name><index pos:line="310" pos:column="62">[<expr><operator pos:line="310" pos:column="63">-<pos:position pos:line="310" pos:column="64"/></operator><literal type="number" pos:line="310" pos:column="64">2<pos:position pos:line="310" pos:column="65"/></literal></expr>]<pos:position pos:line="310" pos:column="66"/></index></name><operator pos:line="310" pos:column="66">.<pos:position pos:line="310" pos:column="67"/></operator><name pos:line="310" pos:column="67">exp<pos:position pos:line="310" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="310" pos:column="72">yyvsp<pos:position pos:line="310" pos:column="77"/></name><index pos:line="310" pos:column="77">[<expr><literal type="number" pos:line="310" pos:column="78">0<pos:position pos:line="310" pos:column="79"/></literal></expr>]<pos:position pos:line="310" pos:column="80"/></index></name><operator pos:line="310" pos:column="80">.<pos:position pos:line="310" pos:column="81"/></operator><name pos:line="310" pos:column="81">exp<pos:position pos:line="310" pos:column="84"/></name></expr></argument>)<pos:position pos:line="310" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="86"/></expr_stmt>
	  <empty_stmt pos:line="311" pos:column="11">;<pos:position pos:line="311" pos:column="12"/></empty_stmt>
    <break pos:line="312" pos:column="5">break;<pos:position pos:line="312" pos:column="11"/></break>}<pos:position pos:line="312" pos:column="12"/></block>
<case pos:line="313" pos:column="1">case <expr><literal type="number" pos:line="313" pos:column="6">3<pos:position pos:line="313" pos:column="7"/></literal></expr>:<pos:position pos:line="313" pos:column="8"/></case>
<cpp:line pos:line="314" pos:column="1">#<cpp:directive pos:line="314" pos:column="2">line<pos:position pos:line="314" pos:column="6"/></cpp:directive> <cpp:number pos:line="314" pos:column="7">191<pos:position pos:line="314" pos:column="10"/></cpp:number> <cpp:file pos:line="314" pos:column="11">"plural.y"<pos:position pos:line="314" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="315" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="316" pos:column="13">yyval<pos:position pos:line="316" pos:column="18"/></name><operator pos:line="316" pos:column="18">.<pos:position pos:line="316" pos:column="19"/></operator><name pos:line="316" pos:column="19">exp<pos:position pos:line="316" pos:column="22"/></name></name> <operator pos:line="316" pos:column="23">=<pos:position pos:line="316" pos:column="24"/></operator> <call><name pos:line="316" pos:column="25">new_exp_2<pos:position pos:line="316" pos:column="34"/></name> <argument_list pos:line="316" pos:column="35">(<argument><expr><name pos:line="316" pos:column="36">lor<pos:position pos:line="316" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="316" pos:column="41">yyvsp<pos:position pos:line="316" pos:column="46"/></name><index pos:line="316" pos:column="46">[<expr><operator pos:line="316" pos:column="47">-<pos:position pos:line="316" pos:column="48"/></operator><literal type="number" pos:line="316" pos:column="48">2<pos:position pos:line="316" pos:column="49"/></literal></expr>]<pos:position pos:line="316" pos:column="50"/></index></name><operator pos:line="316" pos:column="50">.<pos:position pos:line="316" pos:column="51"/></operator><name pos:line="316" pos:column="51">exp<pos:position pos:line="316" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="316" pos:column="56">yyvsp<pos:position pos:line="316" pos:column="61"/></name><index pos:line="316" pos:column="61">[<expr><literal type="number" pos:line="316" pos:column="62">0<pos:position pos:line="316" pos:column="63"/></literal></expr>]<pos:position pos:line="316" pos:column="64"/></index></name><operator pos:line="316" pos:column="64">.<pos:position pos:line="316" pos:column="65"/></operator><name pos:line="316" pos:column="65">exp<pos:position pos:line="316" pos:column="68"/></name></expr></argument>)<pos:position pos:line="316" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="70"/></expr_stmt>
	  <empty_stmt pos:line="317" pos:column="11">;<pos:position pos:line="317" pos:column="12"/></empty_stmt>
    <break pos:line="318" pos:column="5">break;<pos:position pos:line="318" pos:column="11"/></break>}<pos:position pos:line="318" pos:column="12"/></block>
<case pos:line="319" pos:column="1">case <expr><literal type="number" pos:line="319" pos:column="6">4<pos:position pos:line="319" pos:column="7"/></literal></expr>:<pos:position pos:line="319" pos:column="8"/></case>
<cpp:line pos:line="320" pos:column="1">#<cpp:directive pos:line="320" pos:column="2">line<pos:position pos:line="320" pos:column="6"/></cpp:directive> <cpp:number pos:line="320" pos:column="7">195<pos:position pos:line="320" pos:column="10"/></cpp:number> <cpp:file pos:line="320" pos:column="11">"plural.y"<pos:position pos:line="320" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="321" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="322" pos:column="13">yyval<pos:position pos:line="322" pos:column="18"/></name><operator pos:line="322" pos:column="18">.<pos:position pos:line="322" pos:column="19"/></operator><name pos:line="322" pos:column="19">exp<pos:position pos:line="322" pos:column="22"/></name></name> <operator pos:line="322" pos:column="23">=<pos:position pos:line="322" pos:column="24"/></operator> <call><name pos:line="322" pos:column="25">new_exp_2<pos:position pos:line="322" pos:column="34"/></name> <argument_list pos:line="322" pos:column="35">(<argument><expr><name pos:line="322" pos:column="36">land<pos:position pos:line="322" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="322" pos:column="42">yyvsp<pos:position pos:line="322" pos:column="47"/></name><index pos:line="322" pos:column="47">[<expr><operator pos:line="322" pos:column="48">-<pos:position pos:line="322" pos:column="49"/></operator><literal type="number" pos:line="322" pos:column="49">2<pos:position pos:line="322" pos:column="50"/></literal></expr>]<pos:position pos:line="322" pos:column="51"/></index></name><operator pos:line="322" pos:column="51">.<pos:position pos:line="322" pos:column="52"/></operator><name pos:line="322" pos:column="52">exp<pos:position pos:line="322" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="322" pos:column="57">yyvsp<pos:position pos:line="322" pos:column="62"/></name><index pos:line="322" pos:column="62">[<expr><literal type="number" pos:line="322" pos:column="63">0<pos:position pos:line="322" pos:column="64"/></literal></expr>]<pos:position pos:line="322" pos:column="65"/></index></name><operator pos:line="322" pos:column="65">.<pos:position pos:line="322" pos:column="66"/></operator><name pos:line="322" pos:column="66">exp<pos:position pos:line="322" pos:column="69"/></name></expr></argument>)<pos:position pos:line="322" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="71"/></expr_stmt>
	  <empty_stmt pos:line="323" pos:column="11">;<pos:position pos:line="323" pos:column="12"/></empty_stmt>
    <break pos:line="324" pos:column="5">break;<pos:position pos:line="324" pos:column="11"/></break>}<pos:position pos:line="324" pos:column="12"/></block>
<case pos:line="325" pos:column="1">case <expr><literal type="number" pos:line="325" pos:column="6">5<pos:position pos:line="325" pos:column="7"/></literal></expr>:<pos:position pos:line="325" pos:column="8"/></case>
<cpp:line pos:line="326" pos:column="1">#<cpp:directive pos:line="326" pos:column="2">line<pos:position pos:line="326" pos:column="6"/></cpp:directive> <cpp:number pos:line="326" pos:column="7">199<pos:position pos:line="326" pos:column="10"/></cpp:number> <cpp:file pos:line="326" pos:column="11">"plural.y"<pos:position pos:line="326" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="327" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="328" pos:column="13">yyval<pos:position pos:line="328" pos:column="18"/></name><operator pos:line="328" pos:column="18">.<pos:position pos:line="328" pos:column="19"/></operator><name pos:line="328" pos:column="19">exp<pos:position pos:line="328" pos:column="22"/></name></name> <operator pos:line="328" pos:column="23">=<pos:position pos:line="328" pos:column="24"/></operator> <call><name pos:line="328" pos:column="25">new_exp_2<pos:position pos:line="328" pos:column="34"/></name> <argument_list pos:line="328" pos:column="35">(<argument><expr><name><name pos:line="328" pos:column="36">yyvsp<pos:position pos:line="328" pos:column="41"/></name><index pos:line="328" pos:column="41">[<expr><operator pos:line="328" pos:column="42">-<pos:position pos:line="328" pos:column="43"/></operator><literal type="number" pos:line="328" pos:column="43">1<pos:position pos:line="328" pos:column="44"/></literal></expr>]<pos:position pos:line="328" pos:column="45"/></index></name><operator pos:line="328" pos:column="45">.<pos:position pos:line="328" pos:column="46"/></operator><name pos:line="328" pos:column="46">op<pos:position pos:line="328" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="328" pos:column="50">yyvsp<pos:position pos:line="328" pos:column="55"/></name><index pos:line="328" pos:column="55">[<expr><operator pos:line="328" pos:column="56">-<pos:position pos:line="328" pos:column="57"/></operator><literal type="number" pos:line="328" pos:column="57">2<pos:position pos:line="328" pos:column="58"/></literal></expr>]<pos:position pos:line="328" pos:column="59"/></index></name><operator pos:line="328" pos:column="59">.<pos:position pos:line="328" pos:column="60"/></operator><name pos:line="328" pos:column="60">exp<pos:position pos:line="328" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="328" pos:column="65">yyvsp<pos:position pos:line="328" pos:column="70"/></name><index pos:line="328" pos:column="70">[<expr><literal type="number" pos:line="328" pos:column="71">0<pos:position pos:line="328" pos:column="72"/></literal></expr>]<pos:position pos:line="328" pos:column="73"/></index></name><operator pos:line="328" pos:column="73">.<pos:position pos:line="328" pos:column="74"/></operator><name pos:line="328" pos:column="74">exp<pos:position pos:line="328" pos:column="77"/></name></expr></argument>)<pos:position pos:line="328" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="79"/></expr_stmt>
	  <empty_stmt pos:line="329" pos:column="11">;<pos:position pos:line="329" pos:column="12"/></empty_stmt>
    <break pos:line="330" pos:column="5">break;<pos:position pos:line="330" pos:column="11"/></break>}<pos:position pos:line="330" pos:column="12"/></block>
<case pos:line="331" pos:column="1">case <expr><literal type="number" pos:line="331" pos:column="6">6<pos:position pos:line="331" pos:column="7"/></literal></expr>:<pos:position pos:line="331" pos:column="8"/></case>
<cpp:line pos:line="332" pos:column="1">#<cpp:directive pos:line="332" pos:column="2">line<pos:position pos:line="332" pos:column="6"/></cpp:directive> <cpp:number pos:line="332" pos:column="7">203<pos:position pos:line="332" pos:column="10"/></cpp:number> <cpp:file pos:line="332" pos:column="11">"plural.y"<pos:position pos:line="332" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="333" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="334" pos:column="13">yyval<pos:position pos:line="334" pos:column="18"/></name><operator pos:line="334" pos:column="18">.<pos:position pos:line="334" pos:column="19"/></operator><name pos:line="334" pos:column="19">exp<pos:position pos:line="334" pos:column="22"/></name></name> <operator pos:line="334" pos:column="23">=<pos:position pos:line="334" pos:column="24"/></operator> <call><name pos:line="334" pos:column="25">new_exp_2<pos:position pos:line="334" pos:column="34"/></name> <argument_list pos:line="334" pos:column="35">(<argument><expr><name><name pos:line="334" pos:column="36">yyvsp<pos:position pos:line="334" pos:column="41"/></name><index pos:line="334" pos:column="41">[<expr><operator pos:line="334" pos:column="42">-<pos:position pos:line="334" pos:column="43"/></operator><literal type="number" pos:line="334" pos:column="43">1<pos:position pos:line="334" pos:column="44"/></literal></expr>]<pos:position pos:line="334" pos:column="45"/></index></name><operator pos:line="334" pos:column="45">.<pos:position pos:line="334" pos:column="46"/></operator><name pos:line="334" pos:column="46">op<pos:position pos:line="334" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="334" pos:column="50">yyvsp<pos:position pos:line="334" pos:column="55"/></name><index pos:line="334" pos:column="55">[<expr><operator pos:line="334" pos:column="56">-<pos:position pos:line="334" pos:column="57"/></operator><literal type="number" pos:line="334" pos:column="57">2<pos:position pos:line="334" pos:column="58"/></literal></expr>]<pos:position pos:line="334" pos:column="59"/></index></name><operator pos:line="334" pos:column="59">.<pos:position pos:line="334" pos:column="60"/></operator><name pos:line="334" pos:column="60">exp<pos:position pos:line="334" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="334" pos:column="65">yyvsp<pos:position pos:line="334" pos:column="70"/></name><index pos:line="334" pos:column="70">[<expr><literal type="number" pos:line="334" pos:column="71">0<pos:position pos:line="334" pos:column="72"/></literal></expr>]<pos:position pos:line="334" pos:column="73"/></index></name><operator pos:line="334" pos:column="73">.<pos:position pos:line="334" pos:column="74"/></operator><name pos:line="334" pos:column="74">exp<pos:position pos:line="334" pos:column="77"/></name></expr></argument>)<pos:position pos:line="334" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="79"/></expr_stmt>
	  <empty_stmt pos:line="335" pos:column="11">;<pos:position pos:line="335" pos:column="12"/></empty_stmt>
    <break pos:line="336" pos:column="5">break;<pos:position pos:line="336" pos:column="11"/></break>}<pos:position pos:line="336" pos:column="12"/></block>
<case pos:line="337" pos:column="1">case <expr><literal type="number" pos:line="337" pos:column="6">7<pos:position pos:line="337" pos:column="7"/></literal></expr>:<pos:position pos:line="337" pos:column="8"/></case>
<cpp:line pos:line="338" pos:column="1">#<cpp:directive pos:line="338" pos:column="2">line<pos:position pos:line="338" pos:column="6"/></cpp:directive> <cpp:number pos:line="338" pos:column="7">207<pos:position pos:line="338" pos:column="10"/></cpp:number> <cpp:file pos:line="338" pos:column="11">"plural.y"<pos:position pos:line="338" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="339" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="340" pos:column="13">yyval<pos:position pos:line="340" pos:column="18"/></name><operator pos:line="340" pos:column="18">.<pos:position pos:line="340" pos:column="19"/></operator><name pos:line="340" pos:column="19">exp<pos:position pos:line="340" pos:column="22"/></name></name> <operator pos:line="340" pos:column="23">=<pos:position pos:line="340" pos:column="24"/></operator> <call><name pos:line="340" pos:column="25">new_exp_2<pos:position pos:line="340" pos:column="34"/></name> <argument_list pos:line="340" pos:column="35">(<argument><expr><name><name pos:line="340" pos:column="36">yyvsp<pos:position pos:line="340" pos:column="41"/></name><index pos:line="340" pos:column="41">[<expr><operator pos:line="340" pos:column="42">-<pos:position pos:line="340" pos:column="43"/></operator><literal type="number" pos:line="340" pos:column="43">1<pos:position pos:line="340" pos:column="44"/></literal></expr>]<pos:position pos:line="340" pos:column="45"/></index></name><operator pos:line="340" pos:column="45">.<pos:position pos:line="340" pos:column="46"/></operator><name pos:line="340" pos:column="46">op<pos:position pos:line="340" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="340" pos:column="50">yyvsp<pos:position pos:line="340" pos:column="55"/></name><index pos:line="340" pos:column="55">[<expr><operator pos:line="340" pos:column="56">-<pos:position pos:line="340" pos:column="57"/></operator><literal type="number" pos:line="340" pos:column="57">2<pos:position pos:line="340" pos:column="58"/></literal></expr>]<pos:position pos:line="340" pos:column="59"/></index></name><operator pos:line="340" pos:column="59">.<pos:position pos:line="340" pos:column="60"/></operator><name pos:line="340" pos:column="60">exp<pos:position pos:line="340" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="340" pos:column="65">yyvsp<pos:position pos:line="340" pos:column="70"/></name><index pos:line="340" pos:column="70">[<expr><literal type="number" pos:line="340" pos:column="71">0<pos:position pos:line="340" pos:column="72"/></literal></expr>]<pos:position pos:line="340" pos:column="73"/></index></name><operator pos:line="340" pos:column="73">.<pos:position pos:line="340" pos:column="74"/></operator><name pos:line="340" pos:column="74">exp<pos:position pos:line="340" pos:column="77"/></name></expr></argument>)<pos:position pos:line="340" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="79"/></expr_stmt>
	  <empty_stmt pos:line="341" pos:column="11">;<pos:position pos:line="341" pos:column="12"/></empty_stmt>
    <break pos:line="342" pos:column="5">break;<pos:position pos:line="342" pos:column="11"/></break>}<pos:position pos:line="342" pos:column="12"/></block>
<case pos:line="343" pos:column="1">case <expr><literal type="number" pos:line="343" pos:column="6">8<pos:position pos:line="343" pos:column="7"/></literal></expr>:<pos:position pos:line="343" pos:column="8"/></case>
<cpp:line pos:line="344" pos:column="1">#<cpp:directive pos:line="344" pos:column="2">line<pos:position pos:line="344" pos:column="6"/></cpp:directive> <cpp:number pos:line="344" pos:column="7">211<pos:position pos:line="344" pos:column="10"/></cpp:number> <cpp:file pos:line="344" pos:column="11">"plural.y"<pos:position pos:line="344" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="345" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="346" pos:column="13">yyval<pos:position pos:line="346" pos:column="18"/></name><operator pos:line="346" pos:column="18">.<pos:position pos:line="346" pos:column="19"/></operator><name pos:line="346" pos:column="19">exp<pos:position pos:line="346" pos:column="22"/></name></name> <operator pos:line="346" pos:column="23">=<pos:position pos:line="346" pos:column="24"/></operator> <call><name pos:line="346" pos:column="25">new_exp_2<pos:position pos:line="346" pos:column="34"/></name> <argument_list pos:line="346" pos:column="35">(<argument><expr><name><name pos:line="346" pos:column="36">yyvsp<pos:position pos:line="346" pos:column="41"/></name><index pos:line="346" pos:column="41">[<expr><operator pos:line="346" pos:column="42">-<pos:position pos:line="346" pos:column="43"/></operator><literal type="number" pos:line="346" pos:column="43">1<pos:position pos:line="346" pos:column="44"/></literal></expr>]<pos:position pos:line="346" pos:column="45"/></index></name><operator pos:line="346" pos:column="45">.<pos:position pos:line="346" pos:column="46"/></operator><name pos:line="346" pos:column="46">op<pos:position pos:line="346" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="346" pos:column="50">yyvsp<pos:position pos:line="346" pos:column="55"/></name><index pos:line="346" pos:column="55">[<expr><operator pos:line="346" pos:column="56">-<pos:position pos:line="346" pos:column="57"/></operator><literal type="number" pos:line="346" pos:column="57">2<pos:position pos:line="346" pos:column="58"/></literal></expr>]<pos:position pos:line="346" pos:column="59"/></index></name><operator pos:line="346" pos:column="59">.<pos:position pos:line="346" pos:column="60"/></operator><name pos:line="346" pos:column="60">exp<pos:position pos:line="346" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="346" pos:column="65">yyvsp<pos:position pos:line="346" pos:column="70"/></name><index pos:line="346" pos:column="70">[<expr><literal type="number" pos:line="346" pos:column="71">0<pos:position pos:line="346" pos:column="72"/></literal></expr>]<pos:position pos:line="346" pos:column="73"/></index></name><operator pos:line="346" pos:column="73">.<pos:position pos:line="346" pos:column="74"/></operator><name pos:line="346" pos:column="74">exp<pos:position pos:line="346" pos:column="77"/></name></expr></argument>)<pos:position pos:line="346" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="79"/></expr_stmt>
	  <empty_stmt pos:line="347" pos:column="11">;<pos:position pos:line="347" pos:column="12"/></empty_stmt>
    <break pos:line="348" pos:column="5">break;<pos:position pos:line="348" pos:column="11"/></break>}<pos:position pos:line="348" pos:column="12"/></block>
<case pos:line="349" pos:column="1">case <expr><literal type="number" pos:line="349" pos:column="6">9<pos:position pos:line="349" pos:column="7"/></literal></expr>:<pos:position pos:line="349" pos:column="8"/></case>
<cpp:line pos:line="350" pos:column="1">#<cpp:directive pos:line="350" pos:column="2">line<pos:position pos:line="350" pos:column="6"/></cpp:directive> <cpp:number pos:line="350" pos:column="7">215<pos:position pos:line="350" pos:column="10"/></cpp:number> <cpp:file pos:line="350" pos:column="11">"plural.y"<pos:position pos:line="350" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="351" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="352" pos:column="13">yyval<pos:position pos:line="352" pos:column="18"/></name><operator pos:line="352" pos:column="18">.<pos:position pos:line="352" pos:column="19"/></operator><name pos:line="352" pos:column="19">exp<pos:position pos:line="352" pos:column="22"/></name></name> <operator pos:line="352" pos:column="23">=<pos:position pos:line="352" pos:column="24"/></operator> <call><name pos:line="352" pos:column="25">new_exp_1<pos:position pos:line="352" pos:column="34"/></name> <argument_list pos:line="352" pos:column="35">(<argument><expr><name pos:line="352" pos:column="36">lnot<pos:position pos:line="352" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="352" pos:column="42">yyvsp<pos:position pos:line="352" pos:column="47"/></name><index pos:line="352" pos:column="47">[<expr><literal type="number" pos:line="352" pos:column="48">0<pos:position pos:line="352" pos:column="49"/></literal></expr>]<pos:position pos:line="352" pos:column="50"/></index></name><operator pos:line="352" pos:column="50">.<pos:position pos:line="352" pos:column="51"/></operator><name pos:line="352" pos:column="51">exp<pos:position pos:line="352" pos:column="54"/></name></expr></argument>)<pos:position pos:line="352" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="56"/></expr_stmt>
	  <empty_stmt pos:line="353" pos:column="11">;<pos:position pos:line="353" pos:column="12"/></empty_stmt>
    <break pos:line="354" pos:column="5">break;<pos:position pos:line="354" pos:column="11"/></break>}<pos:position pos:line="354" pos:column="12"/></block>
<case pos:line="355" pos:column="1">case <expr><literal type="number" pos:line="355" pos:column="6">10<pos:position pos:line="355" pos:column="8"/></literal></expr>:<pos:position pos:line="355" pos:column="9"/></case>
<cpp:line pos:line="356" pos:column="1">#<cpp:directive pos:line="356" pos:column="2">line<pos:position pos:line="356" pos:column="6"/></cpp:directive> <cpp:number pos:line="356" pos:column="7">219<pos:position pos:line="356" pos:column="10"/></cpp:number> <cpp:file pos:line="356" pos:column="11">"plural.y"<pos:position pos:line="356" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="357" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="358" pos:column="13">yyval<pos:position pos:line="358" pos:column="18"/></name><operator pos:line="358" pos:column="18">.<pos:position pos:line="358" pos:column="19"/></operator><name pos:line="358" pos:column="19">exp<pos:position pos:line="358" pos:column="22"/></name></name> <operator pos:line="358" pos:column="23">=<pos:position pos:line="358" pos:column="24"/></operator> <call><name pos:line="358" pos:column="25">new_exp_0<pos:position pos:line="358" pos:column="34"/></name> <argument_list pos:line="358" pos:column="35">(<argument><expr><name pos:line="358" pos:column="36">var<pos:position pos:line="358" pos:column="39"/></name></expr></argument>)<pos:position pos:line="358" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="41"/></expr_stmt>
	  <empty_stmt pos:line="359" pos:column="11">;<pos:position pos:line="359" pos:column="12"/></empty_stmt>
    <break pos:line="360" pos:column="5">break;<pos:position pos:line="360" pos:column="11"/></break>}<pos:position pos:line="360" pos:column="12"/></block>
<case pos:line="361" pos:column="1">case <expr><literal type="number" pos:line="361" pos:column="6">11<pos:position pos:line="361" pos:column="8"/></literal></expr>:<pos:position pos:line="361" pos:column="9"/></case>
<cpp:line pos:line="362" pos:column="1">#<cpp:directive pos:line="362" pos:column="2">line<pos:position pos:line="362" pos:column="6"/></cpp:directive> <cpp:number pos:line="362" pos:column="7">223<pos:position pos:line="362" pos:column="10"/></cpp:number> <cpp:file pos:line="362" pos:column="11">"plural.y"<pos:position pos:line="362" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="363" pos:column="1">{
	    <if pos:line="364" pos:column="13">if <condition pos:line="364" pos:column="16">(<expr><operator pos:line="364" pos:column="17">(<pos:position pos:line="364" pos:column="18"/></operator><name><name pos:line="364" pos:column="18">yyval<pos:position pos:line="364" pos:column="23"/></name><operator pos:line="364" pos:column="23">.<pos:position pos:line="364" pos:column="24"/></operator><name pos:line="364" pos:column="24">exp<pos:position pos:line="364" pos:column="27"/></name></name> <operator pos:line="364" pos:column="28">=<pos:position pos:line="364" pos:column="29"/></operator> <call><name pos:line="364" pos:column="30">new_exp_0<pos:position pos:line="364" pos:column="39"/></name> <argument_list pos:line="364" pos:column="40">(<argument><expr><name pos:line="364" pos:column="41">num<pos:position pos:line="364" pos:column="44"/></name></expr></argument>)<pos:position pos:line="364" pos:column="45"/></argument_list></call><operator pos:line="364" pos:column="45">)<pos:position pos:line="364" pos:column="46"/></operator> <operator pos:line="364" pos:column="47">!=<pos:position pos:line="364" pos:column="49"/></operator> <name pos:line="364" pos:column="50">NULL<pos:position pos:line="364" pos:column="54"/></name></expr>)<pos:position pos:line="364" pos:column="55"/></condition><then pos:line="364" pos:column="55">
	      <block type="pseudo"><expr_stmt><expr><name><name pos:line="365" pos:column="15">yyval<pos:position pos:line="365" pos:column="20"/></name><operator pos:line="365" pos:column="20">.<pos:position pos:line="365" pos:column="21"/></operator><name pos:line="365" pos:column="21">exp<pos:position pos:line="365" pos:column="24"/></name><operator pos:line="365" pos:column="24">-&gt;<pos:position pos:line="365" pos:column="29"/></operator><name pos:line="365" pos:column="26">val<pos:position pos:line="365" pos:column="29"/></name><operator pos:line="365" pos:column="29">.<pos:position pos:line="365" pos:column="30"/></operator><name pos:line="365" pos:column="30">num<pos:position pos:line="365" pos:column="33"/></name></name> <operator pos:line="365" pos:column="34">=<pos:position pos:line="365" pos:column="35"/></operator> <name><name pos:line="365" pos:column="36">yyvsp<pos:position pos:line="365" pos:column="41"/></name><index pos:line="365" pos:column="41">[<expr><literal type="number" pos:line="365" pos:column="42">0<pos:position pos:line="365" pos:column="43"/></literal></expr>]<pos:position pos:line="365" pos:column="44"/></index></name><operator pos:line="365" pos:column="44">.<pos:position pos:line="365" pos:column="45"/></operator><name pos:line="365" pos:column="45">num<pos:position pos:line="365" pos:column="48"/></name></expr>;<pos:position pos:line="365" pos:column="49"/></expr_stmt></block></then></if>
	  <empty_stmt pos:line="366" pos:column="11">;<pos:position pos:line="366" pos:column="12"/></empty_stmt>
    <break pos:line="367" pos:column="5">break;<pos:position pos:line="367" pos:column="11"/></break>}<pos:position pos:line="367" pos:column="12"/></block>
<case pos:line="368" pos:column="1">case <expr><literal type="number" pos:line="368" pos:column="6">12<pos:position pos:line="368" pos:column="8"/></literal></expr>:<pos:position pos:line="368" pos:column="9"/></case>
<cpp:line pos:line="369" pos:column="1">#<cpp:directive pos:line="369" pos:column="2">line<pos:position pos:line="369" pos:column="6"/></cpp:directive> <cpp:number pos:line="369" pos:column="7">228<pos:position pos:line="369" pos:column="10"/></cpp:number> <cpp:file pos:line="369" pos:column="11">"plural.y"<pos:position pos:line="369" pos:column="21"/></cpp:file></cpp:line>
<block pos:line="370" pos:column="1">{
	    <expr_stmt><expr><name><name pos:line="371" pos:column="13">yyval<pos:position pos:line="371" pos:column="18"/></name><operator pos:line="371" pos:column="18">.<pos:position pos:line="371" pos:column="19"/></operator><name pos:line="371" pos:column="19">exp<pos:position pos:line="371" pos:column="22"/></name></name> <operator pos:line="371" pos:column="23">=<pos:position pos:line="371" pos:column="24"/></operator> <name><name pos:line="371" pos:column="25">yyvsp<pos:position pos:line="371" pos:column="30"/></name><index pos:line="371" pos:column="30">[<expr><operator pos:line="371" pos:column="31">-<pos:position pos:line="371" pos:column="32"/></operator><literal type="number" pos:line="371" pos:column="32">1<pos:position pos:line="371" pos:column="33"/></literal></expr>]<pos:position pos:line="371" pos:column="34"/></index></name><operator pos:line="371" pos:column="34">.<pos:position pos:line="371" pos:column="35"/></operator><name pos:line="371" pos:column="35">exp<pos:position pos:line="371" pos:column="38"/></name></expr>;<pos:position pos:line="371" pos:column="39"/></expr_stmt>
	  <empty_stmt pos:line="372" pos:column="11">;<pos:position pos:line="372" pos:column="12"/></empty_stmt>
    <break pos:line="373" pos:column="5">break;<pos:position pos:line="373" pos:column="11"/></break>}<pos:position pos:line="373" pos:column="12"/></block>
}<pos:position pos:line="374" pos:column="2"/></block></switch>
   <comment type="block" pos:line="375" pos:column="4">/* the action file gets copied in in place of this dollarsign */</comment>
<cpp:line pos:line="376" pos:column="1">#<cpp:directive pos:line="376" pos:column="2">line<pos:position pos:line="376" pos:column="6"/></cpp:directive> <cpp:number pos:line="376" pos:column="7">543<pos:position pos:line="376" pos:column="10"/></cpp:number> <cpp:file pos:line="376" pos:column="11">"/home/haible/gnu/arch/linuxlibc6/share/bison.simple"<pos:position pos:line="376" pos:column="64"/></cpp:file></cpp:line>
<escape char="0xc"/>
  <expr_stmt><expr><name pos:line="378" pos:column="3">yyvsp<pos:position pos:line="378" pos:column="8"/></name> <operator pos:line="378" pos:column="9">-=<pos:position pos:line="378" pos:column="11"/></operator> <name pos:line="378" pos:column="12">yylen<pos:position pos:line="378" pos:column="17"/></name></expr>;<pos:position pos:line="378" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="379" pos:column="3">yyssp<pos:position pos:line="379" pos:column="8"/></name> <operator pos:line="379" pos:column="9">-=<pos:position pos:line="379" pos:column="11"/></operator> <name pos:line="379" pos:column="12">yylen<pos:position pos:line="379" pos:column="17"/></name></expr>;<pos:position pos:line="379" pos:column="18"/></expr_stmt>
<cpp:ifdef pos:line="380" pos:column="1">#<cpp:directive pos:line="380" pos:column="2">ifdef<pos:position pos:line="380" pos:column="7"/></cpp:directive> <name pos:line="380" pos:column="8">YYLSP_NEEDED<pos:position pos:line="380" pos:column="20"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="381" pos:column="3">yylsp<pos:position pos:line="381" pos:column="8"/></name> <operator pos:line="381" pos:column="9">-=<pos:position pos:line="381" pos:column="11"/></operator> <name pos:line="381" pos:column="12">yylen<pos:position pos:line="381" pos:column="17"/></name></expr>;<pos:position pos:line="381" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="382" pos:column="1">#<cpp:directive pos:line="382" pos:column="2">endif<pos:position pos:line="382" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="384" pos:column="1">#<cpp:directive pos:line="384" pos:column="2">if<pos:position pos:line="384" pos:column="4"/></cpp:directive> <expr><name pos:line="384" pos:column="5">YYDEBUG<pos:position pos:line="384" pos:column="12"/></name> <operator pos:line="384" pos:column="13">!=<pos:position pos:line="384" pos:column="15"/></operator> <literal type="number" pos:line="384" pos:column="16">0<pos:position pos:line="384" pos:column="17"/></literal></expr></cpp:if>
  <if pos:line="385" pos:column="3">if <condition pos:line="385" pos:column="6">(<expr><name pos:line="385" pos:column="7">yydebug<pos:position pos:line="385" pos:column="14"/></name></expr>)<pos:position pos:line="385" pos:column="15"/></condition><then pos:line="385" pos:column="15">
    <block pos:line="386" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="387" pos:column="7">short<pos:position pos:line="387" pos:column="12"/></name> <modifier pos:line="387" pos:column="13">*<pos:position pos:line="387" pos:column="14"/></modifier></type><name pos:line="387" pos:column="14">ssp1<pos:position pos:line="387" pos:column="18"/></name> <init pos:line="387" pos:column="19">= <expr><name pos:line="387" pos:column="21">yyss<pos:position pos:line="387" pos:column="25"/></name> <operator pos:line="387" pos:column="26">-<pos:position pos:line="387" pos:column="27"/></operator> <literal type="number" pos:line="387" pos:column="28">1<pos:position pos:line="387" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="387" pos:column="30"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="388" pos:column="7">fprintf<pos:position pos:line="388" pos:column="14"/></name> <argument_list pos:line="388" pos:column="15">(<argument><expr><name pos:line="388" pos:column="16">stderr<pos:position pos:line="388" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="388" pos:column="24">"state stack now"<pos:position pos:line="388" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="388" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="43"/></expr_stmt>
      <while pos:line="389" pos:column="7">while <condition pos:line="389" pos:column="13">(<expr><name pos:line="389" pos:column="14">ssp1<pos:position pos:line="389" pos:column="18"/></name> <operator pos:line="389" pos:column="19">!=<pos:position pos:line="389" pos:column="21"/></operator> <name pos:line="389" pos:column="22">yyssp<pos:position pos:line="389" pos:column="27"/></name></expr>)<pos:position pos:line="389" pos:column="28"/></condition>
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="390" pos:column="9">fprintf<pos:position pos:line="390" pos:column="16"/></name> <argument_list pos:line="390" pos:column="17">(<argument><expr><name pos:line="390" pos:column="18">stderr<pos:position pos:line="390" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="390" pos:column="26">" %d"<pos:position pos:line="390" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="390" pos:column="33">*<pos:position pos:line="390" pos:column="34"/></operator><operator pos:line="390" pos:column="34">++<pos:position pos:line="390" pos:column="36"/></operator><name pos:line="390" pos:column="36">ssp1<pos:position pos:line="390" pos:column="40"/></name></expr></argument>)<pos:position pos:line="390" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="42"/></expr_stmt></block></while>
      <expr_stmt><expr><call><name pos:line="391" pos:column="7">fprintf<pos:position pos:line="391" pos:column="14"/></name> <argument_list pos:line="391" pos:column="15">(<argument><expr><name pos:line="391" pos:column="16">stderr<pos:position pos:line="391" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="391" pos:column="24">"\n"<pos:position pos:line="391" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="391" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="392" pos:column="6"/></block></then></if>
<cpp:endif pos:line="393" pos:column="1">#<cpp:directive pos:line="393" pos:column="2">endif<pos:position pos:line="393" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><operator pos:line="395" pos:column="3">*<pos:position pos:line="395" pos:column="4"/></operator><operator pos:line="395" pos:column="4">++<pos:position pos:line="395" pos:column="6"/></operator><name pos:line="395" pos:column="6">yyvsp<pos:position pos:line="395" pos:column="11"/></name> <operator pos:line="395" pos:column="12">=<pos:position pos:line="395" pos:column="13"/></operator> <name pos:line="395" pos:column="14">yyval<pos:position pos:line="395" pos:column="19"/></name></expr>;<pos:position pos:line="395" pos:column="20"/></expr_stmt>

<cpp:ifdef pos:line="397" pos:column="1">#<cpp:directive pos:line="397" pos:column="2">ifdef<pos:position pos:line="397" pos:column="7"/></cpp:directive> <name pos:line="397" pos:column="8">YYLSP_NEEDED<pos:position pos:line="397" pos:column="20"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="398" pos:column="3">yylsp<pos:position pos:line="398" pos:column="8"/></name><operator pos:line="398" pos:column="8">++<pos:position pos:line="398" pos:column="10"/></operator></expr>;<pos:position pos:line="398" pos:column="11"/></expr_stmt>
  <if pos:line="399" pos:column="3">if <condition pos:line="399" pos:column="6">(<expr><name pos:line="399" pos:column="7">yylen<pos:position pos:line="399" pos:column="12"/></name> <operator pos:line="399" pos:column="13">==<pos:position pos:line="399" pos:column="15"/></operator> <literal type="number" pos:line="399" pos:column="16">0<pos:position pos:line="399" pos:column="17"/></literal></expr>)<pos:position pos:line="399" pos:column="18"/></condition><then pos:line="399" pos:column="18">
    <block pos:line="400" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="401" pos:column="7">yylsp<pos:position pos:line="401" pos:column="12"/></name><operator pos:line="401" pos:column="12">-&gt;<pos:position pos:line="401" pos:column="17"/></operator><name pos:line="401" pos:column="14">first_line<pos:position pos:line="401" pos:column="24"/></name></name> <operator pos:line="401" pos:column="25">=<pos:position pos:line="401" pos:column="26"/></operator> <name><name pos:line="401" pos:column="27">yylloc<pos:position pos:line="401" pos:column="33"/></name><operator pos:line="401" pos:column="33">.<pos:position pos:line="401" pos:column="34"/></operator><name pos:line="401" pos:column="34">first_line<pos:position pos:line="401" pos:column="44"/></name></name></expr>;<pos:position pos:line="401" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="402" pos:column="7">yylsp<pos:position pos:line="402" pos:column="12"/></name><operator pos:line="402" pos:column="12">-&gt;<pos:position pos:line="402" pos:column="17"/></operator><name pos:line="402" pos:column="14">first_column<pos:position pos:line="402" pos:column="26"/></name></name> <operator pos:line="402" pos:column="27">=<pos:position pos:line="402" pos:column="28"/></operator> <name><name pos:line="402" pos:column="29">yylloc<pos:position pos:line="402" pos:column="35"/></name><operator pos:line="402" pos:column="35">.<pos:position pos:line="402" pos:column="36"/></operator><name pos:line="402" pos:column="36">first_column<pos:position pos:line="402" pos:column="48"/></name></name></expr>;<pos:position pos:line="402" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="403" pos:column="7">yylsp<pos:position pos:line="403" pos:column="12"/></name><operator pos:line="403" pos:column="12">-&gt;<pos:position pos:line="403" pos:column="17"/></operator><name pos:line="403" pos:column="14">last_line<pos:position pos:line="403" pos:column="23"/></name></name> <operator pos:line="403" pos:column="24">=<pos:position pos:line="403" pos:column="25"/></operator> <operator pos:line="403" pos:column="26">(<pos:position pos:line="403" pos:column="27"/></operator><name pos:line="403" pos:column="27">yylsp<pos:position pos:line="403" pos:column="32"/></name><operator pos:line="403" pos:column="32">-<pos:position pos:line="403" pos:column="33"/></operator><literal type="number" pos:line="403" pos:column="33">1<pos:position pos:line="403" pos:column="34"/></literal><operator pos:line="403" pos:column="34">)<pos:position pos:line="403" pos:column="35"/></operator><operator pos:line="403" pos:column="35">-&gt;<pos:position pos:line="403" pos:column="40"/></operator><name pos:line="403" pos:column="37">last_line<pos:position pos:line="403" pos:column="46"/></name></expr>;<pos:position pos:line="403" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="404" pos:column="7">yylsp<pos:position pos:line="404" pos:column="12"/></name><operator pos:line="404" pos:column="12">-&gt;<pos:position pos:line="404" pos:column="17"/></operator><name pos:line="404" pos:column="14">last_column<pos:position pos:line="404" pos:column="25"/></name></name> <operator pos:line="404" pos:column="26">=<pos:position pos:line="404" pos:column="27"/></operator> <operator pos:line="404" pos:column="28">(<pos:position pos:line="404" pos:column="29"/></operator><name pos:line="404" pos:column="29">yylsp<pos:position pos:line="404" pos:column="34"/></name><operator pos:line="404" pos:column="34">-<pos:position pos:line="404" pos:column="35"/></operator><literal type="number" pos:line="404" pos:column="35">1<pos:position pos:line="404" pos:column="36"/></literal><operator pos:line="404" pos:column="36">)<pos:position pos:line="404" pos:column="37"/></operator><operator pos:line="404" pos:column="37">-&gt;<pos:position pos:line="404" pos:column="42"/></operator><name pos:line="404" pos:column="39">last_column<pos:position pos:line="404" pos:column="50"/></name></expr>;<pos:position pos:line="404" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="405" pos:column="7">yylsp<pos:position pos:line="405" pos:column="12"/></name><operator pos:line="405" pos:column="12">-&gt;<pos:position pos:line="405" pos:column="17"/></operator><name pos:line="405" pos:column="14">text<pos:position pos:line="405" pos:column="18"/></name></name> <operator pos:line="405" pos:column="19">=<pos:position pos:line="405" pos:column="20"/></operator> <literal type="number" pos:line="405" pos:column="21">0<pos:position pos:line="405" pos:column="22"/></literal></expr>;<pos:position pos:line="405" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="406" pos:column="6"/></block></then>
  <else pos:line="407" pos:column="3">else
    <block pos:line="408" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="409" pos:column="7">yylsp<pos:position pos:line="409" pos:column="12"/></name><operator pos:line="409" pos:column="12">-&gt;<pos:position pos:line="409" pos:column="17"/></operator><name pos:line="409" pos:column="14">last_line<pos:position pos:line="409" pos:column="23"/></name></name> <operator pos:line="409" pos:column="24">=<pos:position pos:line="409" pos:column="25"/></operator> <operator pos:line="409" pos:column="26">(<pos:position pos:line="409" pos:column="27"/></operator><name pos:line="409" pos:column="27">yylsp<pos:position pos:line="409" pos:column="32"/></name><operator pos:line="409" pos:column="32">+<pos:position pos:line="409" pos:column="33"/></operator><name pos:line="409" pos:column="33">yylen<pos:position pos:line="409" pos:column="38"/></name><operator pos:line="409" pos:column="38">-<pos:position pos:line="409" pos:column="39"/></operator><literal type="number" pos:line="409" pos:column="39">1<pos:position pos:line="409" pos:column="40"/></literal><operator pos:line="409" pos:column="40">)<pos:position pos:line="409" pos:column="41"/></operator><operator pos:line="409" pos:column="41">-&gt;<pos:position pos:line="409" pos:column="46"/></operator><name pos:line="409" pos:column="43">last_line<pos:position pos:line="409" pos:column="52"/></name></expr>;<pos:position pos:line="409" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="410" pos:column="7">yylsp<pos:position pos:line="410" pos:column="12"/></name><operator pos:line="410" pos:column="12">-&gt;<pos:position pos:line="410" pos:column="17"/></operator><name pos:line="410" pos:column="14">last_column<pos:position pos:line="410" pos:column="25"/></name></name> <operator pos:line="410" pos:column="26">=<pos:position pos:line="410" pos:column="27"/></operator> <operator pos:line="410" pos:column="28">(<pos:position pos:line="410" pos:column="29"/></operator><name pos:line="410" pos:column="29">yylsp<pos:position pos:line="410" pos:column="34"/></name><operator pos:line="410" pos:column="34">+<pos:position pos:line="410" pos:column="35"/></operator><name pos:line="410" pos:column="35">yylen<pos:position pos:line="410" pos:column="40"/></name><operator pos:line="410" pos:column="40">-<pos:position pos:line="410" pos:column="41"/></operator><literal type="number" pos:line="410" pos:column="41">1<pos:position pos:line="410" pos:column="42"/></literal><operator pos:line="410" pos:column="42">)<pos:position pos:line="410" pos:column="43"/></operator><operator pos:line="410" pos:column="43">-&gt;<pos:position pos:line="410" pos:column="48"/></operator><name pos:line="410" pos:column="45">last_column<pos:position pos:line="410" pos:column="56"/></name></expr>;<pos:position pos:line="410" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="411" pos:column="6"/></block></else></if>
<cpp:endif pos:line="412" pos:column="1">#<cpp:directive pos:line="412" pos:column="2">endif<pos:position pos:line="412" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="414" pos:column="3">/* Now "shift" the result of the reduction.
     Determine what state that goes to,
     based on the state we popped back to
     and the rule number reduced by.  */</comment>

  <expr_stmt><expr><name pos:line="419" pos:column="3">yyn<pos:position pos:line="419" pos:column="6"/></name> <operator pos:line="419" pos:column="7">=<pos:position pos:line="419" pos:column="8"/></operator> <name><name pos:line="419" pos:column="9">yyr1<pos:position pos:line="419" pos:column="13"/></name><index pos:line="419" pos:column="13">[<expr><name pos:line="419" pos:column="14">yyn<pos:position pos:line="419" pos:column="17"/></name></expr>]<pos:position pos:line="419" pos:column="18"/></index></name></expr>;<pos:position pos:line="419" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name pos:line="421" pos:column="3">yystate<pos:position pos:line="421" pos:column="10"/></name> <operator pos:line="421" pos:column="11">=<pos:position pos:line="421" pos:column="12"/></operator> <name><name pos:line="421" pos:column="13">yypgoto<pos:position pos:line="421" pos:column="20"/></name><index pos:line="421" pos:column="20">[<expr><name pos:line="421" pos:column="21">yyn<pos:position pos:line="421" pos:column="24"/></name> <operator pos:line="421" pos:column="25">-<pos:position pos:line="421" pos:column="26"/></operator> <name pos:line="421" pos:column="27">YYNTBASE<pos:position pos:line="421" pos:column="35"/></name></expr>]<pos:position pos:line="421" pos:column="36"/></index></name> <operator pos:line="421" pos:column="37">+<pos:position pos:line="421" pos:column="38"/></operator> <operator pos:line="421" pos:column="39">*<pos:position pos:line="421" pos:column="40"/></operator><name pos:line="421" pos:column="40">yyssp<pos:position pos:line="421" pos:column="45"/></name></expr>;<pos:position pos:line="421" pos:column="46"/></expr_stmt>
  <if pos:line="422" pos:column="3">if <condition pos:line="422" pos:column="6">(<expr><name pos:line="422" pos:column="7">yystate<pos:position pos:line="422" pos:column="14"/></name> <operator pos:line="422" pos:column="15">&gt;=<pos:position pos:line="422" pos:column="20"/></operator> <literal type="number" pos:line="422" pos:column="18">0<pos:position pos:line="422" pos:column="19"/></literal> <operator pos:line="422" pos:column="20">&amp;&amp;<pos:position pos:line="422" pos:column="30"/></operator> <name pos:line="422" pos:column="23">yystate<pos:position pos:line="422" pos:column="30"/></name> <operator pos:line="422" pos:column="31">&lt;=<pos:position pos:line="422" pos:column="36"/></operator> <name pos:line="422" pos:column="34">YYLAST<pos:position pos:line="422" pos:column="40"/></name> <operator pos:line="422" pos:column="41">&amp;&amp;<pos:position pos:line="422" pos:column="51"/></operator> <name><name pos:line="422" pos:column="44">yycheck<pos:position pos:line="422" pos:column="51"/></name><index pos:line="422" pos:column="51">[<expr><name pos:line="422" pos:column="52">yystate<pos:position pos:line="422" pos:column="59"/></name></expr>]<pos:position pos:line="422" pos:column="60"/></index></name> <operator pos:line="422" pos:column="61">==<pos:position pos:line="422" pos:column="63"/></operator> <operator pos:line="422" pos:column="64">*<pos:position pos:line="422" pos:column="65"/></operator><name pos:line="422" pos:column="65">yyssp<pos:position pos:line="422" pos:column="70"/></name></expr>)<pos:position pos:line="422" pos:column="71"/></condition><then pos:line="422" pos:column="71">
    <block type="pseudo"><expr_stmt><expr><name pos:line="423" pos:column="5">yystate<pos:position pos:line="423" pos:column="12"/></name> <operator pos:line="423" pos:column="13">=<pos:position pos:line="423" pos:column="14"/></operator> <name><name pos:line="423" pos:column="15">yytable<pos:position pos:line="423" pos:column="22"/></name><index pos:line="423" pos:column="22">[<expr><name pos:line="423" pos:column="23">yystate<pos:position pos:line="423" pos:column="30"/></name></expr>]<pos:position pos:line="423" pos:column="31"/></index></name></expr>;<pos:position pos:line="423" pos:column="32"/></expr_stmt></block></then>
  <else pos:line="424" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="425" pos:column="5">yystate<pos:position pos:line="425" pos:column="12"/></name> <operator pos:line="425" pos:column="13">=<pos:position pos:line="425" pos:column="14"/></operator> <name><name pos:line="425" pos:column="15">yydefgoto<pos:position pos:line="425" pos:column="24"/></name><index pos:line="425" pos:column="24">[<expr><name pos:line="425" pos:column="25">yyn<pos:position pos:line="425" pos:column="28"/></name> <operator pos:line="425" pos:column="29">-<pos:position pos:line="425" pos:column="30"/></operator> <name pos:line="425" pos:column="31">YYNTBASE<pos:position pos:line="425" pos:column="39"/></name></expr>]<pos:position pos:line="425" pos:column="40"/></index></name></expr>;<pos:position pos:line="425" pos:column="41"/></expr_stmt></block></else></if>

  <goto pos:line="427" pos:column="3">goto <name pos:line="427" pos:column="8">yynewstate<pos:position pos:line="427" pos:column="18"/></name>;<pos:position pos:line="427" pos:column="19"/></goto>

<label><name pos:line="429" pos:column="1">yyerrlab<pos:position pos:line="429" pos:column="9"/></name>:<pos:position pos:line="429" pos:column="10"/></label>   <comment type="block" pos:line="429" pos:column="13">/* here on detecting error */</comment>

  <if pos:line="431" pos:column="3">if <condition pos:line="431" pos:column="6">(<expr><operator pos:line="431" pos:column="7">!<pos:position pos:line="431" pos:column="8"/></operator> <name pos:line="431" pos:column="9">yyerrstatus<pos:position pos:line="431" pos:column="20"/></name></expr>)<pos:position pos:line="431" pos:column="21"/></condition><then pos:line="431" pos:column="21">
    <comment type="block" pos:line="432" pos:column="5">/* If not already recovering from an error, report this error.  */</comment>
    <block pos:line="433" pos:column="5">{
      <expr_stmt><expr><operator pos:line="434" pos:column="7">++<pos:position pos:line="434" pos:column="9"/></operator><name pos:line="434" pos:column="9">yynerrs<pos:position pos:line="434" pos:column="16"/></name></expr>;<pos:position pos:line="434" pos:column="17"/></expr_stmt>

<cpp:ifdef pos:line="436" pos:column="1">#<cpp:directive pos:line="436" pos:column="2">ifdef<pos:position pos:line="436" pos:column="7"/></cpp:directive> <name pos:line="436" pos:column="8">YYERROR_VERBOSE<pos:position pos:line="436" pos:column="23"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="437" pos:column="7">yyn<pos:position pos:line="437" pos:column="10"/></name> <operator pos:line="437" pos:column="11">=<pos:position pos:line="437" pos:column="12"/></operator> <name><name pos:line="437" pos:column="13">yypact<pos:position pos:line="437" pos:column="19"/></name><index pos:line="437" pos:column="19">[<expr><name pos:line="437" pos:column="20">yystate<pos:position pos:line="437" pos:column="27"/></name></expr>]<pos:position pos:line="437" pos:column="28"/></index></name></expr>;<pos:position pos:line="437" pos:column="29"/></expr_stmt>

      <if pos:line="439" pos:column="7">if <condition pos:line="439" pos:column="10">(<expr><name pos:line="439" pos:column="11">yyn<pos:position pos:line="439" pos:column="14"/></name> <operator pos:line="439" pos:column="15">&gt;<pos:position pos:line="439" pos:column="19"/></operator> <name pos:line="439" pos:column="17">YYFLAG<pos:position pos:line="439" pos:column="23"/></name> <operator pos:line="439" pos:column="24">&amp;&amp;<pos:position pos:line="439" pos:column="34"/></operator> <name pos:line="439" pos:column="27">yyn<pos:position pos:line="439" pos:column="30"/></name> <operator pos:line="439" pos:column="31">&lt;<pos:position pos:line="439" pos:column="35"/></operator> <name pos:line="439" pos:column="33">YYLAST<pos:position pos:line="439" pos:column="39"/></name></expr>)<pos:position pos:line="439" pos:column="40"/></condition><then pos:line="439" pos:column="40">
	<block pos:line="440" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="441" pos:column="11">int<pos:position pos:line="441" pos:column="14"/></name></type> <name pos:line="441" pos:column="15">size<pos:position pos:line="441" pos:column="19"/></name> <init pos:line="441" pos:column="20">= <expr><literal type="number" pos:line="441" pos:column="22">0<pos:position pos:line="441" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="441" pos:column="24"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="442" pos:column="11">char<pos:position pos:line="442" pos:column="15"/></name> <modifier pos:line="442" pos:column="16">*<pos:position pos:line="442" pos:column="17"/></modifier></type><name pos:line="442" pos:column="17">msg<pos:position pos:line="442" pos:column="20"/></name></decl>;<pos:position pos:line="442" pos:column="21"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="443" pos:column="11">int<pos:position pos:line="443" pos:column="14"/></name></type> <name pos:line="443" pos:column="15">x<pos:position pos:line="443" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="443" pos:column="18">count<pos:position pos:line="443" pos:column="23"/></name></decl>;<pos:position pos:line="443" pos:column="24"/></decl_stmt>

	  <expr_stmt><expr><name pos:line="445" pos:column="11">count<pos:position pos:line="445" pos:column="16"/></name> <operator pos:line="445" pos:column="17">=<pos:position pos:line="445" pos:column="18"/></operator> <literal type="number" pos:line="445" pos:column="19">0<pos:position pos:line="445" pos:column="20"/></literal></expr>;<pos:position pos:line="445" pos:column="21"/></expr_stmt>
	  <comment type="block" pos:line="446" pos:column="11">/* Start X at -yyn if nec to avoid negative indexes in yycheck.  */</comment>
	  <for pos:line="447" pos:column="11">for <control pos:line="447" pos:column="15">(<init><expr><name pos:line="447" pos:column="16">x<pos:position pos:line="447" pos:column="17"/></name> <operator pos:line="447" pos:column="18">=<pos:position pos:line="447" pos:column="19"/></operator> <operator pos:line="447" pos:column="20">(<pos:position pos:line="447" pos:column="21"/></operator><ternary><condition><expr><name pos:line="447" pos:column="21">yyn<pos:position pos:line="447" pos:column="24"/></name> <operator pos:line="447" pos:column="25">&lt;<pos:position pos:line="447" pos:column="29"/></operator> <literal type="number" pos:line="447" pos:column="27">0<pos:position pos:line="447" pos:column="28"/></literal></expr> ?<pos:position pos:line="447" pos:column="30"/></condition><then pos:line="447" pos:column="30"> <expr><operator pos:line="447" pos:column="31">-<pos:position pos:line="447" pos:column="32"/></operator><name pos:line="447" pos:column="32">yyn<pos:position pos:line="447" pos:column="35"/></name></expr> <pos:position pos:line="447" pos:column="36"/></then><else pos:line="447" pos:column="36">: <expr><literal type="number" pos:line="447" pos:column="38">0<pos:position pos:line="447" pos:column="39"/></literal></expr></else></ternary><operator pos:line="447" pos:column="39">)<pos:position pos:line="447" pos:column="40"/></operator></expr>;<pos:position pos:line="447" pos:column="41"/></init>
	       <condition><expr><name pos:line="448" pos:column="16">x<pos:position pos:line="448" pos:column="17"/></name> <operator pos:line="448" pos:column="18">&lt;<pos:position pos:line="448" pos:column="22"/></operator> <operator pos:line="448" pos:column="20">(<pos:position pos:line="448" pos:column="21"/></operator><sizeof pos:line="448" pos:column="21">sizeof<argument_list pos:line="448" pos:column="27">(<argument><expr><name pos:line="448" pos:column="28">yytname<pos:position pos:line="448" pos:column="35"/></name></expr></argument>)<pos:position pos:line="448" pos:column="36"/></argument_list></sizeof> <operator pos:line="448" pos:column="37">/<pos:position pos:line="448" pos:column="38"/></operator> <sizeof pos:line="448" pos:column="39">sizeof<argument_list pos:line="448" pos:column="45">(<argument><expr><name pos:line="448" pos:column="46">char<pos:position pos:line="448" pos:column="50"/></name> <operator pos:line="448" pos:column="51">*<pos:position pos:line="448" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="448" pos:column="53"/></argument_list></sizeof><operator pos:line="448" pos:column="53">)<pos:position pos:line="448" pos:column="54"/></operator></expr>;<pos:position pos:line="448" pos:column="55"/></condition> <incr><expr><name pos:line="448" pos:column="56">x<pos:position pos:line="448" pos:column="57"/></name><operator pos:line="448" pos:column="57">++<pos:position pos:line="448" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="448" pos:column="60"/></control>
	    <block type="pseudo"><if pos:line="449" pos:column="13">if <condition pos:line="449" pos:column="16">(<expr><name><name pos:line="449" pos:column="17">yycheck<pos:position pos:line="449" pos:column="24"/></name><index pos:line="449" pos:column="24">[<expr><name pos:line="449" pos:column="25">x<pos:position pos:line="449" pos:column="26"/></name> <operator pos:line="449" pos:column="27">+<pos:position pos:line="449" pos:column="28"/></operator> <name pos:line="449" pos:column="29">yyn<pos:position pos:line="449" pos:column="32"/></name></expr>]<pos:position pos:line="449" pos:column="33"/></index></name> <operator pos:line="449" pos:column="34">==<pos:position pos:line="449" pos:column="36"/></operator> <name pos:line="449" pos:column="37">x<pos:position pos:line="449" pos:column="38"/></name></expr>)<pos:position pos:line="449" pos:column="39"/></condition><then pos:line="449" pos:column="39">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="450" pos:column="15">size<pos:position pos:line="450" pos:column="19"/></name> <operator pos:line="450" pos:column="20">+=<pos:position pos:line="450" pos:column="22"/></operator> <call><name pos:line="450" pos:column="23">strlen<pos:position pos:line="450" pos:column="29"/></name><argument_list pos:line="450" pos:column="29">(<argument><expr><name><name pos:line="450" pos:column="30">yytname<pos:position pos:line="450" pos:column="37"/></name><index pos:line="450" pos:column="37">[<expr><name pos:line="450" pos:column="38">x<pos:position pos:line="450" pos:column="39"/></name></expr>]<pos:position pos:line="450" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="450" pos:column="41"/></argument_list></call> <operator pos:line="450" pos:column="42">+<pos:position pos:line="450" pos:column="43"/></operator> <literal type="number" pos:line="450" pos:column="44">15<pos:position pos:line="450" pos:column="46"/></literal></expr><operator pos:line="450" pos:column="46">,<pos:position pos:line="450" pos:column="47"/></operator> <expr><name pos:line="450" pos:column="48">count<pos:position pos:line="450" pos:column="53"/></name><operator pos:line="450" pos:column="53">++<pos:position pos:line="450" pos:column="55"/></operator></expr>;<pos:position pos:line="450" pos:column="56"/></expr_stmt></block></then></if></block></for>
	  <expr_stmt><expr><name pos:line="451" pos:column="11">msg<pos:position pos:line="451" pos:column="14"/></name> <operator pos:line="451" pos:column="15">=<pos:position pos:line="451" pos:column="16"/></operator> <operator pos:line="451" pos:column="17">(<pos:position pos:line="451" pos:column="18"/></operator><name pos:line="451" pos:column="18">char<pos:position pos:line="451" pos:column="22"/></name> <operator pos:line="451" pos:column="23">*<pos:position pos:line="451" pos:column="24"/></operator><operator pos:line="451" pos:column="24">)<pos:position pos:line="451" pos:column="25"/></operator> <call><name pos:line="451" pos:column="26">malloc<pos:position pos:line="451" pos:column="32"/></name><argument_list pos:line="451" pos:column="32">(<argument><expr><name pos:line="451" pos:column="33">size<pos:position pos:line="451" pos:column="37"/></name> <operator pos:line="451" pos:column="38">+<pos:position pos:line="451" pos:column="39"/></operator> <literal type="number" pos:line="451" pos:column="40">15<pos:position pos:line="451" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="451" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="451" pos:column="44"/></expr_stmt>
	  <if pos:line="452" pos:column="11">if <condition pos:line="452" pos:column="14">(<expr><name pos:line="452" pos:column="15">msg<pos:position pos:line="452" pos:column="18"/></name> <operator pos:line="452" pos:column="19">!=<pos:position pos:line="452" pos:column="21"/></operator> <literal type="number" pos:line="452" pos:column="22">0<pos:position pos:line="452" pos:column="23"/></literal></expr>)<pos:position pos:line="452" pos:column="24"/></condition><then pos:line="452" pos:column="24">
	    <block pos:line="453" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="454" pos:column="15">strcpy<pos:position pos:line="454" pos:column="21"/></name><argument_list pos:line="454" pos:column="21">(<argument><expr><name pos:line="454" pos:column="22">msg<pos:position pos:line="454" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="454" pos:column="27">"parse error"<pos:position pos:line="454" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="454" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="454" pos:column="42"/></expr_stmt>

	      <if pos:line="456" pos:column="15">if <condition pos:line="456" pos:column="18">(<expr><name pos:line="456" pos:column="19">count<pos:position pos:line="456" pos:column="24"/></name> <operator pos:line="456" pos:column="25">&lt;<pos:position pos:line="456" pos:column="29"/></operator> <literal type="number" pos:line="456" pos:column="27">5<pos:position pos:line="456" pos:column="28"/></literal></expr>)<pos:position pos:line="456" pos:column="29"/></condition><then pos:line="456" pos:column="29">
		<block pos:line="457" pos:column="17">{
		  <expr_stmt><expr><name pos:line="458" pos:column="19">count<pos:position pos:line="458" pos:column="24"/></name> <operator pos:line="458" pos:column="25">=<pos:position pos:line="458" pos:column="26"/></operator> <literal type="number" pos:line="458" pos:column="27">0<pos:position pos:line="458" pos:column="28"/></literal></expr>;<pos:position pos:line="458" pos:column="29"/></expr_stmt>
		  <for pos:line="459" pos:column="19">for <control pos:line="459" pos:column="23">(<init><expr><name pos:line="459" pos:column="24">x<pos:position pos:line="459" pos:column="25"/></name> <operator pos:line="459" pos:column="26">=<pos:position pos:line="459" pos:column="27"/></operator> <operator pos:line="459" pos:column="28">(<pos:position pos:line="459" pos:column="29"/></operator><ternary><condition><expr><name pos:line="459" pos:column="29">yyn<pos:position pos:line="459" pos:column="32"/></name> <operator pos:line="459" pos:column="33">&lt;<pos:position pos:line="459" pos:column="37"/></operator> <literal type="number" pos:line="459" pos:column="35">0<pos:position pos:line="459" pos:column="36"/></literal></expr> ?<pos:position pos:line="459" pos:column="38"/></condition><then pos:line="459" pos:column="38"> <expr><operator pos:line="459" pos:column="39">-<pos:position pos:line="459" pos:column="40"/></operator><name pos:line="459" pos:column="40">yyn<pos:position pos:line="459" pos:column="43"/></name></expr> <pos:position pos:line="459" pos:column="44"/></then><else pos:line="459" pos:column="44">: <expr><literal type="number" pos:line="459" pos:column="46">0<pos:position pos:line="459" pos:column="47"/></literal></expr></else></ternary><operator pos:line="459" pos:column="47">)<pos:position pos:line="459" pos:column="48"/></operator></expr>;<pos:position pos:line="459" pos:column="49"/></init>
		       <condition><expr><name pos:line="460" pos:column="24">x<pos:position pos:line="460" pos:column="25"/></name> <operator pos:line="460" pos:column="26">&lt;<pos:position pos:line="460" pos:column="30"/></operator> <operator pos:line="460" pos:column="28">(<pos:position pos:line="460" pos:column="29"/></operator><sizeof pos:line="460" pos:column="29">sizeof<argument_list pos:line="460" pos:column="35">(<argument><expr><name pos:line="460" pos:column="36">yytname<pos:position pos:line="460" pos:column="43"/></name></expr></argument>)<pos:position pos:line="460" pos:column="44"/></argument_list></sizeof> <operator pos:line="460" pos:column="45">/<pos:position pos:line="460" pos:column="46"/></operator> <sizeof pos:line="460" pos:column="47">sizeof<argument_list pos:line="460" pos:column="53">(<argument><expr><name pos:line="460" pos:column="54">char<pos:position pos:line="460" pos:column="58"/></name> <operator pos:line="460" pos:column="59">*<pos:position pos:line="460" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="460" pos:column="61"/></argument_list></sizeof><operator pos:line="460" pos:column="61">)<pos:position pos:line="460" pos:column="62"/></operator></expr>;<pos:position pos:line="460" pos:column="63"/></condition> <incr><expr><name pos:line="460" pos:column="64">x<pos:position pos:line="460" pos:column="65"/></name><operator pos:line="460" pos:column="65">++<pos:position pos:line="460" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="460" pos:column="68"/></control>
		    <block type="pseudo"><if pos:line="461" pos:column="21">if <condition pos:line="461" pos:column="24">(<expr><name><name pos:line="461" pos:column="25">yycheck<pos:position pos:line="461" pos:column="32"/></name><index pos:line="461" pos:column="32">[<expr><name pos:line="461" pos:column="33">x<pos:position pos:line="461" pos:column="34"/></name> <operator pos:line="461" pos:column="35">+<pos:position pos:line="461" pos:column="36"/></operator> <name pos:line="461" pos:column="37">yyn<pos:position pos:line="461" pos:column="40"/></name></expr>]<pos:position pos:line="461" pos:column="41"/></index></name> <operator pos:line="461" pos:column="42">==<pos:position pos:line="461" pos:column="44"/></operator> <name pos:line="461" pos:column="45">x<pos:position pos:line="461" pos:column="46"/></name></expr>)<pos:position pos:line="461" pos:column="47"/></condition><then pos:line="461" pos:column="47">
		      <block pos:line="462" pos:column="23">{
			<expr_stmt><expr><call><name pos:line="463" pos:column="25">strcat<pos:position pos:line="463" pos:column="31"/></name><argument_list pos:line="463" pos:column="31">(<argument><expr><name pos:line="463" pos:column="32">msg<pos:position pos:line="463" pos:column="35"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="463" pos:column="37">count<pos:position pos:line="463" pos:column="42"/></name> <operator pos:line="463" pos:column="43">==<pos:position pos:line="463" pos:column="45"/></operator> <literal type="number" pos:line="463" pos:column="46">0<pos:position pos:line="463" pos:column="47"/></literal></expr> ?<pos:position pos:line="463" pos:column="49"/></condition><then pos:line="463" pos:column="49"> <expr><literal type="string" pos:line="463" pos:column="50">", expecting `"<pos:position pos:line="463" pos:column="65"/></literal></expr> <pos:position pos:line="463" pos:column="66"/></then><else pos:line="463" pos:column="66">: <expr><literal type="string" pos:line="463" pos:column="68">" or `"<pos:position pos:line="463" pos:column="75"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="463" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="463" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="464" pos:column="25">strcat<pos:position pos:line="464" pos:column="31"/></name><argument_list pos:line="464" pos:column="31">(<argument><expr><name pos:line="464" pos:column="32">msg<pos:position pos:line="464" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="464" pos:column="37">yytname<pos:position pos:line="464" pos:column="44"/></name><index pos:line="464" pos:column="44">[<expr><name pos:line="464" pos:column="45">x<pos:position pos:line="464" pos:column="46"/></name></expr>]<pos:position pos:line="464" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="464" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="464" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="465" pos:column="25">strcat<pos:position pos:line="465" pos:column="31"/></name><argument_list pos:line="465" pos:column="31">(<argument><expr><name pos:line="465" pos:column="32">msg<pos:position pos:line="465" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="465" pos:column="37">"'"<pos:position pos:line="465" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="465" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="466" pos:column="25">count<pos:position pos:line="466" pos:column="30"/></name><operator pos:line="466" pos:column="30">++<pos:position pos:line="466" pos:column="32"/></operator></expr>;<pos:position pos:line="466" pos:column="33"/></expr_stmt>
		      }<pos:position pos:line="467" pos:column="24"/></block></then></if></block></for>
		}<pos:position pos:line="468" pos:column="18"/></block></then></if>
	      <expr_stmt><expr><call><name pos:line="469" pos:column="15">yyerror<pos:position pos:line="469" pos:column="22"/></name><argument_list pos:line="469" pos:column="22">(<argument><expr><name pos:line="469" pos:column="23">msg<pos:position pos:line="469" pos:column="26"/></name></expr></argument>)<pos:position pos:line="469" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="469" pos:column="28"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="470" pos:column="15">free<pos:position pos:line="470" pos:column="19"/></name><argument_list pos:line="470" pos:column="19">(<argument><expr><name pos:line="470" pos:column="20">msg<pos:position pos:line="470" pos:column="23"/></name></expr></argument>)<pos:position pos:line="470" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="25"/></expr_stmt>
	    }<pos:position pos:line="471" pos:column="14"/></block></then>
	  <else pos:line="472" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="473" pos:column="13">yyerror<pos:position pos:line="473" pos:column="20"/></name> <argument_list pos:line="473" pos:column="21">(<argument><expr><literal type="string" pos:line="473" pos:column="22">"parse error; also virtual memory exceeded"<pos:position pos:line="473" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="473" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="67"/></expr_stmt></block></else></if>
	}<pos:position pos:line="474" pos:column="10"/></block></then>
      <else pos:line="475" pos:column="7">else
<cpp:endif pos:line="476" pos:column="1">#<cpp:directive pos:line="476" pos:column="2">endif<pos:position pos:line="476" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="476" pos:column="8">/* YYERROR_VERBOSE */</comment>
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="477" pos:column="9">yyerror<pos:position pos:line="477" pos:column="16"/></name><argument_list pos:line="477" pos:column="16">(<argument><expr><literal type="string" pos:line="477" pos:column="17">"parse error"<pos:position pos:line="477" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="477" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="32"/></expr_stmt></block></else></if>
    }<pos:position pos:line="478" pos:column="6"/></block></then></if>

  <goto pos:line="480" pos:column="3">goto <name pos:line="480" pos:column="8">yyerrlab1<pos:position pos:line="480" pos:column="17"/></name>;<pos:position pos:line="480" pos:column="18"/></goto>
<label><name pos:line="481" pos:column="1">yyerrlab1<pos:position pos:line="481" pos:column="10"/></name>:<pos:position pos:line="481" pos:column="11"/></label>   <comment type="block" pos:line="481" pos:column="14">/* here on error raised explicitly by an action */</comment>

  <if pos:line="483" pos:column="3">if <condition pos:line="483" pos:column="6">(<expr><name pos:line="483" pos:column="7">yyerrstatus<pos:position pos:line="483" pos:column="18"/></name> <operator pos:line="483" pos:column="19">==<pos:position pos:line="483" pos:column="21"/></operator> <literal type="number" pos:line="483" pos:column="22">3<pos:position pos:line="483" pos:column="23"/></literal></expr>)<pos:position pos:line="483" pos:column="24"/></condition><then pos:line="483" pos:column="24">
    <block pos:line="484" pos:column="5">{
      <comment type="block" pos:line="485" pos:column="7">/* if just tried and failed to reuse lookahead token after an error, discard it.  */</comment>

      <comment type="block" pos:line="487" pos:column="7">/* return failure if at end of input */</comment>
      <if pos:line="488" pos:column="7">if <condition pos:line="488" pos:column="10">(<expr><name pos:line="488" pos:column="11">yychar<pos:position pos:line="488" pos:column="17"/></name> <operator pos:line="488" pos:column="18">==<pos:position pos:line="488" pos:column="20"/></operator> <name pos:line="488" pos:column="21">YYEOF<pos:position pos:line="488" pos:column="26"/></name></expr>)<pos:position pos:line="488" pos:column="27"/></condition><then pos:line="488" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name pos:line="489" pos:column="9">YYABORT<pos:position pos:line="489" pos:column="16"/></name></expr>;<pos:position pos:line="489" pos:column="17"/></expr_stmt></block></then></if>

<cpp:if pos:line="491" pos:column="1">#<cpp:directive pos:line="491" pos:column="2">if<pos:position pos:line="491" pos:column="4"/></cpp:directive> <expr><name pos:line="491" pos:column="5">YYDEBUG<pos:position pos:line="491" pos:column="12"/></name> <operator pos:line="491" pos:column="13">!=<pos:position pos:line="491" pos:column="15"/></operator> <literal type="number" pos:line="491" pos:column="16">0<pos:position pos:line="491" pos:column="17"/></literal></expr></cpp:if>
      <if pos:line="492" pos:column="7">if <condition pos:line="492" pos:column="10">(<expr><name pos:line="492" pos:column="11">yydebug<pos:position pos:line="492" pos:column="18"/></name></expr>)<pos:position pos:line="492" pos:column="19"/></condition><then pos:line="492" pos:column="19">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="493" pos:column="9">fprintf<pos:position pos:line="493" pos:column="16"/></name><argument_list pos:line="493" pos:column="16">(<argument><expr><name pos:line="493" pos:column="17">stderr<pos:position pos:line="493" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="493" pos:column="25">"Discarding token %d (%s).\n"<pos:position pos:line="493" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="493" pos:column="56">yychar<pos:position pos:line="493" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="493" pos:column="64">yytname<pos:position pos:line="493" pos:column="71"/></name><index pos:line="493" pos:column="71">[<expr><name pos:line="493" pos:column="72">yychar1<pos:position pos:line="493" pos:column="79"/></name></expr>]<pos:position pos:line="493" pos:column="80"/></index></name></expr></argument>)<pos:position pos:line="493" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="493" pos:column="82"/></expr_stmt></block></then></if>
<cpp:endif pos:line="494" pos:column="1">#<cpp:directive pos:line="494" pos:column="2">endif<pos:position pos:line="494" pos:column="7"/></cpp:directive></cpp:endif>

      <expr_stmt><expr><name pos:line="496" pos:column="7">yychar<pos:position pos:line="496" pos:column="13"/></name> <operator pos:line="496" pos:column="14">=<pos:position pos:line="496" pos:column="15"/></operator> <name pos:line="496" pos:column="16">YYEMPTY<pos:position pos:line="496" pos:column="23"/></name></expr>;<pos:position pos:line="496" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="497" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="499" pos:column="3">/* Else will try to reuse lookahead token
     after shifting the error token.  */</comment>

  <expr_stmt><expr><name pos:line="502" pos:column="3">yyerrstatus<pos:position pos:line="502" pos:column="14"/></name> <operator pos:line="502" pos:column="15">=<pos:position pos:line="502" pos:column="16"/></operator> <literal type="number" pos:line="502" pos:column="17">3<pos:position pos:line="502" pos:column="18"/></literal></expr>;<pos:position pos:line="502" pos:column="19"/></expr_stmt>		<comment type="block" pos:line="502" pos:column="33">/* Each real token shifted decrements this */</comment>

  <goto pos:line="504" pos:column="3">goto <name pos:line="504" pos:column="8">yyerrhandle<pos:position pos:line="504" pos:column="19"/></name>;<pos:position pos:line="504" pos:column="20"/></goto>

<label><name pos:line="506" pos:column="1">yyerrdefault<pos:position pos:line="506" pos:column="13"/></name>:<pos:position pos:line="506" pos:column="14"/></label>  <comment type="block" pos:line="506" pos:column="16">/* current state does not do anything special for the error token. */</comment>

<cpp:if pos:line="508" pos:column="1">#<cpp:directive pos:line="508" pos:column="2">if<pos:position pos:line="508" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="508" pos:column="5">0<pos:position pos:line="508" pos:column="6"/></literal></expr></cpp:if>
  <comment type="block" pos:line="509" pos:column="3">/* This is wrong; only states that explicitly want error tokens
     should shift them.  */</comment>
  yyn = yydefact[yystate];  <comment type="block" pos:line="511" pos:column="29">/* If its default is to accept any token, ok.  Otherwise pop it.*/</comment>
  if (yyn) goto yydefault;
<cpp:endif pos:line="513" pos:column="1">#<cpp:directive pos:line="513" pos:column="2">endif<pos:position pos:line="513" pos:column="7"/></cpp:directive></cpp:endif>

<label><name pos:line="515" pos:column="1">yyerrpop<pos:position pos:line="515" pos:column="9"/></name>:<pos:position pos:line="515" pos:column="10"/></label>   <comment type="block" pos:line="515" pos:column="13">/* pop the current state because it cannot handle the error token */</comment>

  <if pos:line="517" pos:column="3">if <condition pos:line="517" pos:column="6">(<expr><name pos:line="517" pos:column="7">yyssp<pos:position pos:line="517" pos:column="12"/></name> <operator pos:line="517" pos:column="13">==<pos:position pos:line="517" pos:column="15"/></operator> <name pos:line="517" pos:column="16">yyss<pos:position pos:line="517" pos:column="20"/></name></expr>)<pos:position pos:line="517" pos:column="21"/></condition><then pos:line="517" pos:column="21"> <block type="pseudo"><expr_stmt><expr><name pos:line="517" pos:column="22">YYABORT<pos:position pos:line="517" pos:column="29"/></name></expr>;<pos:position pos:line="517" pos:column="30"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="518" pos:column="3">yyvsp<pos:position pos:line="518" pos:column="8"/></name><operator pos:line="518" pos:column="8">--<pos:position pos:line="518" pos:column="10"/></operator></expr>;<pos:position pos:line="518" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name pos:line="519" pos:column="3">yystate<pos:position pos:line="519" pos:column="10"/></name> <operator pos:line="519" pos:column="11">=<pos:position pos:line="519" pos:column="12"/></operator> <operator pos:line="519" pos:column="13">*<pos:position pos:line="519" pos:column="14"/></operator><operator pos:line="519" pos:column="14">--<pos:position pos:line="519" pos:column="16"/></operator><name pos:line="519" pos:column="16">yyssp<pos:position pos:line="519" pos:column="21"/></name></expr>;<pos:position pos:line="519" pos:column="22"/></expr_stmt>
<cpp:ifdef pos:line="520" pos:column="1">#<cpp:directive pos:line="520" pos:column="2">ifdef<pos:position pos:line="520" pos:column="7"/></cpp:directive> <name pos:line="520" pos:column="8">YYLSP_NEEDED<pos:position pos:line="520" pos:column="20"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="521" pos:column="3">yylsp<pos:position pos:line="521" pos:column="8"/></name><operator pos:line="521" pos:column="8">--<pos:position pos:line="521" pos:column="10"/></operator></expr>;<pos:position pos:line="521" pos:column="11"/></expr_stmt>
<cpp:endif pos:line="522" pos:column="1">#<cpp:directive pos:line="522" pos:column="2">endif<pos:position pos:line="522" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="524" pos:column="1">#<cpp:directive pos:line="524" pos:column="2">if<pos:position pos:line="524" pos:column="4"/></cpp:directive> <expr><name pos:line="524" pos:column="5">YYDEBUG<pos:position pos:line="524" pos:column="12"/></name> <operator pos:line="524" pos:column="13">!=<pos:position pos:line="524" pos:column="15"/></operator> <literal type="number" pos:line="524" pos:column="16">0<pos:position pos:line="524" pos:column="17"/></literal></expr></cpp:if>
  <if pos:line="525" pos:column="3">if <condition pos:line="525" pos:column="6">(<expr><name pos:line="525" pos:column="7">yydebug<pos:position pos:line="525" pos:column="14"/></name></expr>)<pos:position pos:line="525" pos:column="15"/></condition><then pos:line="525" pos:column="15">
    <block pos:line="526" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="527" pos:column="7">short<pos:position pos:line="527" pos:column="12"/></name> <modifier pos:line="527" pos:column="13">*<pos:position pos:line="527" pos:column="14"/></modifier></type><name pos:line="527" pos:column="14">ssp1<pos:position pos:line="527" pos:column="18"/></name> <init pos:line="527" pos:column="19">= <expr><name pos:line="527" pos:column="21">yyss<pos:position pos:line="527" pos:column="25"/></name> <operator pos:line="527" pos:column="26">-<pos:position pos:line="527" pos:column="27"/></operator> <literal type="number" pos:line="527" pos:column="28">1<pos:position pos:line="527" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="527" pos:column="30"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="528" pos:column="7">fprintf<pos:position pos:line="528" pos:column="14"/></name> <argument_list pos:line="528" pos:column="15">(<argument><expr><name pos:line="528" pos:column="16">stderr<pos:position pos:line="528" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="528" pos:column="24">"Error: state stack now"<pos:position pos:line="528" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="528" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="528" pos:column="50"/></expr_stmt>
      <while pos:line="529" pos:column="7">while <condition pos:line="529" pos:column="13">(<expr><name pos:line="529" pos:column="14">ssp1<pos:position pos:line="529" pos:column="18"/></name> <operator pos:line="529" pos:column="19">!=<pos:position pos:line="529" pos:column="21"/></operator> <name pos:line="529" pos:column="22">yyssp<pos:position pos:line="529" pos:column="27"/></name></expr>)<pos:position pos:line="529" pos:column="28"/></condition>
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="530" pos:column="9">fprintf<pos:position pos:line="530" pos:column="16"/></name> <argument_list pos:line="530" pos:column="17">(<argument><expr><name pos:line="530" pos:column="18">stderr<pos:position pos:line="530" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="530" pos:column="26">" %d"<pos:position pos:line="530" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="530" pos:column="33">*<pos:position pos:line="530" pos:column="34"/></operator><operator pos:line="530" pos:column="34">++<pos:position pos:line="530" pos:column="36"/></operator><name pos:line="530" pos:column="36">ssp1<pos:position pos:line="530" pos:column="40"/></name></expr></argument>)<pos:position pos:line="530" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="530" pos:column="42"/></expr_stmt></block></while>
      <expr_stmt><expr><call><name pos:line="531" pos:column="7">fprintf<pos:position pos:line="531" pos:column="14"/></name> <argument_list pos:line="531" pos:column="15">(<argument><expr><name pos:line="531" pos:column="16">stderr<pos:position pos:line="531" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="531" pos:column="24">"\n"<pos:position pos:line="531" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="531" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="531" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="532" pos:column="6"/></block></then></if>
<cpp:endif pos:line="533" pos:column="1">#<cpp:directive pos:line="533" pos:column="2">endif<pos:position pos:line="533" pos:column="7"/></cpp:directive></cpp:endif>

<label><name pos:line="535" pos:column="1">yyerrhandle<pos:position pos:line="535" pos:column="12"/></name>:<pos:position pos:line="535" pos:column="13"/></label>

  <expr_stmt><expr><name pos:line="537" pos:column="3">yyn<pos:position pos:line="537" pos:column="6"/></name> <operator pos:line="537" pos:column="7">=<pos:position pos:line="537" pos:column="8"/></operator> <name><name pos:line="537" pos:column="9">yypact<pos:position pos:line="537" pos:column="15"/></name><index pos:line="537" pos:column="15">[<expr><name pos:line="537" pos:column="16">yystate<pos:position pos:line="537" pos:column="23"/></name></expr>]<pos:position pos:line="537" pos:column="24"/></index></name></expr>;<pos:position pos:line="537" pos:column="25"/></expr_stmt>
  <if pos:line="538" pos:column="3">if <condition pos:line="538" pos:column="6">(<expr><name pos:line="538" pos:column="7">yyn<pos:position pos:line="538" pos:column="10"/></name> <operator pos:line="538" pos:column="11">==<pos:position pos:line="538" pos:column="13"/></operator> <name pos:line="538" pos:column="14">YYFLAG<pos:position pos:line="538" pos:column="20"/></name></expr>)<pos:position pos:line="538" pos:column="21"/></condition><then pos:line="538" pos:column="21">
    <block type="pseudo"><goto pos:line="539" pos:column="5">goto <name pos:line="539" pos:column="10">yyerrdefault<pos:position pos:line="539" pos:column="22"/></name>;<pos:position pos:line="539" pos:column="23"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="541" pos:column="3">yyn<pos:position pos:line="541" pos:column="6"/></name> <operator pos:line="541" pos:column="7">+=<pos:position pos:line="541" pos:column="9"/></operator> <name pos:line="541" pos:column="10">YYTERROR<pos:position pos:line="541" pos:column="18"/></name></expr>;<pos:position pos:line="541" pos:column="19"/></expr_stmt>
  <if pos:line="542" pos:column="3">if <condition pos:line="542" pos:column="6">(<expr><name><name pos:line="542" pos:column="7">yyn<pos:position pos:line="542" pos:column="10"/></name> <argument_list type="generic" pos:line="542" pos:column="11">&lt; <argument><expr><literal type="number" pos:line="542" pos:column="13">0<pos:position pos:line="542" pos:column="14"/></literal> <operator pos:line="542" pos:column="15">||<pos:position pos:line="542" pos:column="17"/></operator> <name pos:line="542" pos:column="18">yyn<pos:position pos:line="542" pos:column="21"/></name></expr></argument> &gt;<pos:position pos:line="542" pos:column="26"/></argument_list></name> <name pos:line="542" pos:column="24">YYLAST<pos:position pos:line="542" pos:column="30"/></name> <operator pos:line="542" pos:column="31">||<pos:position pos:line="542" pos:column="33"/></operator> <name><name pos:line="542" pos:column="34">yycheck<pos:position pos:line="542" pos:column="41"/></name><index pos:line="542" pos:column="41">[<expr><name pos:line="542" pos:column="42">yyn<pos:position pos:line="542" pos:column="45"/></name></expr>]<pos:position pos:line="542" pos:column="46"/></index></name> <operator pos:line="542" pos:column="47">!=<pos:position pos:line="542" pos:column="49"/></operator> <name pos:line="542" pos:column="50">YYTERROR<pos:position pos:line="542" pos:column="58"/></name></expr>)<pos:position pos:line="542" pos:column="59"/></condition><then pos:line="542" pos:column="59">
    <block type="pseudo"><goto pos:line="543" pos:column="5">goto <name pos:line="543" pos:column="10">yyerrdefault<pos:position pos:line="543" pos:column="22"/></name>;<pos:position pos:line="543" pos:column="23"/></goto></block></then></if>

  <expr_stmt><expr><name pos:line="545" pos:column="3">yyn<pos:position pos:line="545" pos:column="6"/></name> <operator pos:line="545" pos:column="7">=<pos:position pos:line="545" pos:column="8"/></operator> <name><name pos:line="545" pos:column="9">yytable<pos:position pos:line="545" pos:column="16"/></name><index pos:line="545" pos:column="16">[<expr><name pos:line="545" pos:column="17">yyn<pos:position pos:line="545" pos:column="20"/></name></expr>]<pos:position pos:line="545" pos:column="21"/></index></name></expr>;<pos:position pos:line="545" pos:column="22"/></expr_stmt>
  <if pos:line="546" pos:column="3">if <condition pos:line="546" pos:column="6">(<expr><name pos:line="546" pos:column="7">yyn<pos:position pos:line="546" pos:column="10"/></name> <operator pos:line="546" pos:column="11">&lt;<pos:position pos:line="546" pos:column="15"/></operator> <literal type="number" pos:line="546" pos:column="13">0<pos:position pos:line="546" pos:column="14"/></literal></expr>)<pos:position pos:line="546" pos:column="15"/></condition><then pos:line="546" pos:column="15">
    <block pos:line="547" pos:column="5">{
      <if pos:line="548" pos:column="7">if <condition pos:line="548" pos:column="10">(<expr><name pos:line="548" pos:column="11">yyn<pos:position pos:line="548" pos:column="14"/></name> <operator pos:line="548" pos:column="15">==<pos:position pos:line="548" pos:column="17"/></operator> <name pos:line="548" pos:column="18">YYFLAG<pos:position pos:line="548" pos:column="24"/></name></expr>)<pos:position pos:line="548" pos:column="25"/></condition><then pos:line="548" pos:column="25">
	<block type="pseudo"><goto pos:line="549" pos:column="9">goto <name pos:line="549" pos:column="14">yyerrpop<pos:position pos:line="549" pos:column="22"/></name>;<pos:position pos:line="549" pos:column="23"/></goto></block></then></if>
      <expr_stmt><expr><name pos:line="550" pos:column="7">yyn<pos:position pos:line="550" pos:column="10"/></name> <operator pos:line="550" pos:column="11">=<pos:position pos:line="550" pos:column="12"/></operator> <operator pos:line="550" pos:column="13">-<pos:position pos:line="550" pos:column="14"/></operator><name pos:line="550" pos:column="14">yyn<pos:position pos:line="550" pos:column="17"/></name></expr>;<pos:position pos:line="550" pos:column="18"/></expr_stmt>
      <goto pos:line="551" pos:column="7">goto <name pos:line="551" pos:column="12">yyreduce<pos:position pos:line="551" pos:column="20"/></name>;<pos:position pos:line="551" pos:column="21"/></goto>
    }<pos:position pos:line="552" pos:column="6"/></block></then>
  <elseif pos:line="553" pos:column="3">else <if pos:line="553" pos:column="8">if <condition pos:line="553" pos:column="11">(<expr><name pos:line="553" pos:column="12">yyn<pos:position pos:line="553" pos:column="15"/></name> <operator pos:line="553" pos:column="16">==<pos:position pos:line="553" pos:column="18"/></operator> <literal type="number" pos:line="553" pos:column="19">0<pos:position pos:line="553" pos:column="20"/></literal></expr>)<pos:position pos:line="553" pos:column="21"/></condition><then pos:line="553" pos:column="21">
    <block type="pseudo"><goto pos:line="554" pos:column="5">goto <name pos:line="554" pos:column="10">yyerrpop<pos:position pos:line="554" pos:column="18"/></name>;<pos:position pos:line="554" pos:column="19"/></goto></block></then></if></elseif></if>

  <if pos:line="556" pos:column="3">if <condition pos:line="556" pos:column="6">(<expr><name pos:line="556" pos:column="7">yyn<pos:position pos:line="556" pos:column="10"/></name> <operator pos:line="556" pos:column="11">==<pos:position pos:line="556" pos:column="13"/></operator> <name pos:line="556" pos:column="14">YYFINAL<pos:position pos:line="556" pos:column="21"/></name></expr>)<pos:position pos:line="556" pos:column="22"/></condition><then pos:line="556" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="557" pos:column="5">YYACCEPT<pos:position pos:line="557" pos:column="13"/></name></expr>;<pos:position pos:line="557" pos:column="14"/></expr_stmt></block></then></if>

<cpp:if pos:line="559" pos:column="1">#<cpp:directive pos:line="559" pos:column="2">if<pos:position pos:line="559" pos:column="4"/></cpp:directive> <expr><name pos:line="559" pos:column="5">YYDEBUG<pos:position pos:line="559" pos:column="12"/></name> <operator pos:line="559" pos:column="13">!=<pos:position pos:line="559" pos:column="15"/></operator> <literal type="number" pos:line="559" pos:column="16">0<pos:position pos:line="559" pos:column="17"/></literal></expr></cpp:if>
  <if pos:line="560" pos:column="3">if <condition pos:line="560" pos:column="6">(<expr><name pos:line="560" pos:column="7">yydebug<pos:position pos:line="560" pos:column="14"/></name></expr>)<pos:position pos:line="560" pos:column="15"/></condition><then pos:line="560" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="561" pos:column="5">fprintf<pos:position pos:line="561" pos:column="12"/></name><argument_list pos:line="561" pos:column="12">(<argument><expr><name pos:line="561" pos:column="13">stderr<pos:position pos:line="561" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="561" pos:column="21">"Shifting error token, "<pos:position pos:line="561" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="561" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="561" pos:column="47"/></expr_stmt></block></then></if>
<cpp:endif pos:line="562" pos:column="1">#<cpp:directive pos:line="562" pos:column="2">endif<pos:position pos:line="562" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><operator pos:line="564" pos:column="3">*<pos:position pos:line="564" pos:column="4"/></operator><operator pos:line="564" pos:column="4">++<pos:position pos:line="564" pos:column="6"/></operator><name pos:line="564" pos:column="6">yyvsp<pos:position pos:line="564" pos:column="11"/></name> <operator pos:line="564" pos:column="12">=<pos:position pos:line="564" pos:column="13"/></operator> <name pos:line="564" pos:column="14">yylval<pos:position pos:line="564" pos:column="20"/></name></expr>;<pos:position pos:line="564" pos:column="21"/></expr_stmt>
<cpp:ifdef pos:line="565" pos:column="1">#<cpp:directive pos:line="565" pos:column="2">ifdef<pos:position pos:line="565" pos:column="7"/></cpp:directive> <name pos:line="565" pos:column="8">YYLSP_NEEDED<pos:position pos:line="565" pos:column="20"/></name></cpp:ifdef>
  <expr_stmt><expr><operator pos:line="566" pos:column="3">*<pos:position pos:line="566" pos:column="4"/></operator><operator pos:line="566" pos:column="4">++<pos:position pos:line="566" pos:column="6"/></operator><name pos:line="566" pos:column="6">yylsp<pos:position pos:line="566" pos:column="11"/></name> <operator pos:line="566" pos:column="12">=<pos:position pos:line="566" pos:column="13"/></operator> <name pos:line="566" pos:column="14">yylloc<pos:position pos:line="566" pos:column="20"/></name></expr>;<pos:position pos:line="566" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="567" pos:column="1">#<cpp:directive pos:line="567" pos:column="2">endif<pos:position pos:line="567" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="569" pos:column="3">yystate<pos:position pos:line="569" pos:column="10"/></name> <operator pos:line="569" pos:column="11">=<pos:position pos:line="569" pos:column="12"/></operator> <name pos:line="569" pos:column="13">yyn<pos:position pos:line="569" pos:column="16"/></name></expr>;<pos:position pos:line="569" pos:column="17"/></expr_stmt>
  <goto pos:line="570" pos:column="3">goto <name pos:line="570" pos:column="8">yynewstate<pos:position pos:line="570" pos:column="18"/></name>;<pos:position pos:line="570" pos:column="19"/></goto>

 <label><name pos:line="572" pos:column="2">yyacceptlab<pos:position pos:line="572" pos:column="13"/></name>:<pos:position pos:line="572" pos:column="14"/></label>
  <comment type="block" pos:line="573" pos:column="3">/* YYACCEPT comes here.  */</comment>
  <if pos:line="574" pos:column="3">if <condition pos:line="574" pos:column="6">(<expr><name pos:line="574" pos:column="7">yyfree_stacks<pos:position pos:line="574" pos:column="20"/></name></expr>)<pos:position pos:line="574" pos:column="21"/></condition><then pos:line="574" pos:column="21">
    <block pos:line="575" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="576" pos:column="7">free<pos:position pos:line="576" pos:column="11"/></name> <argument_list pos:line="576" pos:column="12">(<argument><expr><name pos:line="576" pos:column="13">yyss<pos:position pos:line="576" pos:column="17"/></name></expr></argument>)<pos:position pos:line="576" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="576" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="577" pos:column="7">free<pos:position pos:line="577" pos:column="11"/></name> <argument_list pos:line="577" pos:column="12">(<argument><expr><name pos:line="577" pos:column="13">yyvs<pos:position pos:line="577" pos:column="17"/></name></expr></argument>)<pos:position pos:line="577" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="577" pos:column="19"/></expr_stmt>
<cpp:ifdef pos:line="578" pos:column="1">#<cpp:directive pos:line="578" pos:column="2">ifdef<pos:position pos:line="578" pos:column="7"/></cpp:directive> <name pos:line="578" pos:column="8">YYLSP_NEEDED<pos:position pos:line="578" pos:column="20"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="579" pos:column="7">free<pos:position pos:line="579" pos:column="11"/></name> <argument_list pos:line="579" pos:column="12">(<argument><expr><name pos:line="579" pos:column="13">yyls<pos:position pos:line="579" pos:column="17"/></name></expr></argument>)<pos:position pos:line="579" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="579" pos:column="19"/></expr_stmt>
<cpp:endif pos:line="580" pos:column="1">#<cpp:directive pos:line="580" pos:column="2">endif<pos:position pos:line="580" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="581" pos:column="6"/></block></then></if>
  <return pos:line="582" pos:column="3">return <expr><literal type="number" pos:line="582" pos:column="10">0<pos:position pos:line="582" pos:column="11"/></literal></expr>;<pos:position pos:line="582" pos:column="12"/></return>

 <label><name pos:line="584" pos:column="2">yyabortlab<pos:position pos:line="584" pos:column="12"/></name>:<pos:position pos:line="584" pos:column="13"/></label>
  <comment type="block" pos:line="585" pos:column="3">/* YYABORT comes here.  */</comment>
  <if pos:line="586" pos:column="3">if <condition pos:line="586" pos:column="6">(<expr><name pos:line="586" pos:column="7">yyfree_stacks<pos:position pos:line="586" pos:column="20"/></name></expr>)<pos:position pos:line="586" pos:column="21"/></condition><then pos:line="586" pos:column="21">
    <block pos:line="587" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="588" pos:column="7">free<pos:position pos:line="588" pos:column="11"/></name> <argument_list pos:line="588" pos:column="12">(<argument><expr><name pos:line="588" pos:column="13">yyss<pos:position pos:line="588" pos:column="17"/></name></expr></argument>)<pos:position pos:line="588" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="588" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="589" pos:column="7">free<pos:position pos:line="589" pos:column="11"/></name> <argument_list pos:line="589" pos:column="12">(<argument><expr><name pos:line="589" pos:column="13">yyvs<pos:position pos:line="589" pos:column="17"/></name></expr></argument>)<pos:position pos:line="589" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="589" pos:column="19"/></expr_stmt>
<cpp:ifdef pos:line="590" pos:column="1">#<cpp:directive pos:line="590" pos:column="2">ifdef<pos:position pos:line="590" pos:column="7"/></cpp:directive> <name pos:line="590" pos:column="8">YYLSP_NEEDED<pos:position pos:line="590" pos:column="20"/></name></cpp:ifdef>
      <expr_stmt><expr><call><name pos:line="591" pos:column="7">free<pos:position pos:line="591" pos:column="11"/></name> <argument_list pos:line="591" pos:column="12">(<argument><expr><name pos:line="591" pos:column="13">yyls<pos:position pos:line="591" pos:column="17"/></name></expr></argument>)<pos:position pos:line="591" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="591" pos:column="19"/></expr_stmt>
<cpp:endif pos:line="592" pos:column="1">#<cpp:directive pos:line="592" pos:column="2">endif<pos:position pos:line="592" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="593" pos:column="6"/></block></then></if>
  <return pos:line="594" pos:column="3">return <expr><literal type="number" pos:line="594" pos:column="10">1<pos:position pos:line="594" pos:column="11"/></literal></expr>;<pos:position pos:line="594" pos:column="12"/></return>
}<pos:position pos:line="595" pos:column="2"/></block></function></unit>

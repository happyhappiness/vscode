<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1488_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">pgp_invoke_getkeys<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">ADDRESS<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">addr<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buff<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">LONG_STRING<pos:position pos:line="3" pos:column="24"/></name></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">tmp<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">LONG_STRING<pos:position pos:line="4" pos:column="23"/></name></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">cmd<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">HUGE_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">devnull<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">personal<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
  
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">pgp_command_context<pos:position pos:line="10" pos:column="29"/></name></name></type> <name pos:line="10" pos:column="30">cctx<pos:position pos:line="10" pos:column="34"/></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">PgpGetkeysCommand<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26"> <block type="pseudo"><return pos:line="12" pos:column="27">return;<pos:position pos:line="12" pos:column="34"/></return></block></then></if>
  
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">memset<pos:position pos:line="14" pos:column="9"/></name> <argument_list pos:line="14" pos:column="10">(<argument><expr><operator pos:line="14" pos:column="11">&amp;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="12">cctx<pos:position pos:line="14" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="21">sizeof <argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">cctx<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">personal<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name><name pos:line="16" pos:column="14">addr<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">personal<pos:position pos:line="16" pos:column="28"/></name></name></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">addr<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">personal<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">NULL<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
  
  <expr_stmt><expr><operator pos:line="19" pos:column="3">*<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">tmp<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <literal type="char" pos:line="19" pos:column="10">'\0'<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">mutt_addrlist_to_local<pos:position pos:line="20" pos:column="25"/></name> <argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">addr<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">rfc822_write_address_single<pos:position pos:line="21" pos:column="30"/></name> <argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">tmp<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="37">sizeof <argument_list pos:line="21" pos:column="44">(<argument><expr><name pos:line="21" pos:column="45">tmp<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">addr<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="57">0<pos:position pos:line="21" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">mutt_quote_filename<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">buff<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="30">sizeof <argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">buff<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">tmp<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">addr<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">personal<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">personal<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
  
  <expr_stmt><expr><name><name pos:line="26" pos:column="3">cctx<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">.<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">ids<pos:position pos:line="26" pos:column="11"/></name></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">buff<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
  
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">mutt_pgp_command<pos:position pos:line="28" pos:column="19"/></name> <argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">cmd<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="26">sizeof <argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">cmd<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="28" pos:column="40">&amp;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="41">cctx<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">PgpGetkeysCommand<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>

  <expr_stmt><expr><name pos:line="30" pos:column="3">devnull<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <call><name pos:line="30" pos:column="13">open<pos:position pos:line="30" pos:column="17"/></name> <argument_list pos:line="30" pos:column="18">(<argument><expr><literal type="string" pos:line="30" pos:column="19">"/dev/null"<pos:position pos:line="30" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="32">O_RDWR<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>

  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">!<pos:position pos:line="32" pos:column="8"/></operator><call><name pos:line="32" pos:column="8">isendwin<pos:position pos:line="32" pos:column="16"/></name> <argument_list pos:line="32" pos:column="17">()<pos:position pos:line="32" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="20"/></condition><then pos:line="32" pos:column="20"> <block type="pseudo"><decl_stmt><decl><type><name pos:line="32" pos:column="21">mutt_message<pos:position pos:line="32" pos:column="33"/></name></type>  <name pos:line="32" pos:column="35">_<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><literal type="string" pos:line="32" pos:column="37">"Fetching PGP key..."<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></decl>;<pos:position pos:line="32" pos:column="60"/></decl_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">mutt_system<pos:position pos:line="34" pos:column="14"/></name> <argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">cmd<pos:position pos:line="34" pos:column="19"/></name></expr></argument>)<pos:position pos:line="34" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><operator pos:line="36" pos:column="7">!<pos:position pos:line="36" pos:column="8"/></operator><call><name pos:line="36" pos:column="8">isendwin<pos:position pos:line="36" pos:column="16"/></name> <argument_list pos:line="36" pos:column="17">()<pos:position pos:line="36" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="20"/></condition><then pos:line="36" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="21">mutt_clear_error<pos:position pos:line="36" pos:column="37"/></name> <argument_list pos:line="36" pos:column="38">()<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">close<pos:position pos:line="38" pos:column="8"/></name> <argument_list pos:line="38" pos:column="9">(<argument><expr><name pos:line="38" pos:column="10">devnull<pos:position pos:line="38" pos:column="17"/></name></expr></argument>)<pos:position pos:line="38" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

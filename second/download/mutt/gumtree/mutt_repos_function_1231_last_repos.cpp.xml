<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1231_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rfc2047_encode<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">ICONV_CONST<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">d<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">size_t<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">dlen<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">col<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
			   <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">fromcode<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">charsets<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="3" pos:column="28">char<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier><modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">e<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="38">size_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">elen<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">char<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">specials<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="67"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">ret<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">bufpos<pos:position pos:line="7" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="18">buflen<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">u<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name></expr></init></decl>, <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="20">t0<pos:position pos:line="8" pos:column="22"/></name></decl>, <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="25">t1<pos:position pos:line="8" pos:column="27"/></name></decl>, <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="30">t<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">s0<pos:position pos:line="9" pos:column="11"/></name></decl>, <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="14">s1<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">size_t<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">ulen<pos:position pos:line="10" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="16">r<pos:position pos:line="10" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="19">n<pos:position pos:line="10" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="22">wlen<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">encoder_t<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">encoder<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">tocode1<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="13" pos:column="3">const<pos:position pos:line="13" pos:column="8"/></specifier> <name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">tocode<pos:position pos:line="13" pos:column="21"/></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">icode<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><literal type="string" pos:line="14" pos:column="17">"utf-8"<pos:position pos:line="14" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>

  <comment type="block" pos:line="16" pos:column="3">/* Try to convert to UTF-8. */</comment>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><call><name pos:line="17" pos:column="7">convert_string<pos:position pos:line="17" pos:column="21"/></name> <argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">d<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">dlen<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">fromcode<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">icode<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="49">&amp;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="50">u<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="53">&amp;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="54">ulen<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="60"/></condition><then pos:line="17" pos:column="60">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">ret<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <literal type="number" pos:line="19" pos:column="11">1<pos:position pos:line="19" pos:column="12"/></literal></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt> 
    <expr_stmt><expr><name pos:line="20" pos:column="5">icode<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">safe_realloc<pos:position pos:line="21" pos:column="17"/></name> <argument_list pos:line="21" pos:column="18">(<argument><expr><operator pos:line="21" pos:column="19">&amp;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="20">u<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="23">(<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">ulen<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">dlen<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">)<pos:position pos:line="21" pos:column="36"/></operator> <operator pos:line="21" pos:column="37">+<pos:position pos:line="21" pos:column="38"/></operator> <literal type="number" pos:line="21" pos:column="39">1<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">memcpy<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">u<pos:position pos:line="22" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="16">d<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="19">dlen<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">u<pos:position pos:line="23" pos:column="6"/></name><index pos:line="23" pos:column="6">[<expr><name pos:line="23" pos:column="7">ulen<pos:position pos:line="23" pos:column="11"/></name></expr>]<pos:position pos:line="23" pos:column="12"/></index></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="26" pos:column="3">/* Find earliest and latest things we must encode. */</comment>
  <expr_stmt><expr><name pos:line="27" pos:column="3">s0<pos:position pos:line="27" pos:column="5"/></name> <operator pos:line="27" pos:column="6">=<pos:position pos:line="27" pos:column="7"/></operator> <name pos:line="27" pos:column="8">s1<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name pos:line="27" pos:column="13">t0<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">t1<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="number" pos:line="27" pos:column="23">0<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
  <for pos:line="28" pos:column="3">for <control pos:line="28" pos:column="7">(<init><expr><name pos:line="28" pos:column="8">t<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <name pos:line="28" pos:column="12">u<pos:position pos:line="28" pos:column="13"/></name></expr>;<pos:position pos:line="28" pos:column="14"/></init> <condition><expr><name pos:line="28" pos:column="15">t<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">&lt;<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="19">u<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">+<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">ulen<pos:position pos:line="28" pos:column="27"/></name></expr>;<pos:position pos:line="28" pos:column="28"/></condition> <incr><expr><name pos:line="28" pos:column="29">t<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">++<pos:position pos:line="28" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="33"/></control>
  <block pos:line="29" pos:column="3">{
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">t<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">&amp;<pos:position pos:line="30" pos:column="18"/></operator> <literal type="number" pos:line="30" pos:column="15">0x80<pos:position pos:line="30" pos:column="19"/></literal><operator pos:line="30" pos:column="19">)<pos:position pos:line="30" pos:column="20"/></operator> <operator pos:line="30" pos:column="21">||<pos:position pos:line="30" pos:column="23"/></operator> 
	<operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">*<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">t<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">==<pos:position pos:line="31" pos:column="15"/></operator> <literal type="char" pos:line="31" pos:column="16">'='<pos:position pos:line="31" pos:column="19"/></literal> <operator pos:line="31" pos:column="20">&amp;&amp;<pos:position pos:line="31" pos:column="30"/></operator> <name><name pos:line="31" pos:column="23">t<pos:position pos:line="31" pos:column="24"/></name><index pos:line="31" pos:column="24">[<expr><literal type="number" pos:line="31" pos:column="25">1<pos:position pos:line="31" pos:column="26"/></literal></expr>]<pos:position pos:line="31" pos:column="27"/></index></name> <operator pos:line="31" pos:column="28">==<pos:position pos:line="31" pos:column="30"/></operator> <literal type="char" pos:line="31" pos:column="31">'?'<pos:position pos:line="31" pos:column="34"/></literal> <operator pos:line="31" pos:column="35">&amp;&amp;<pos:position pos:line="31" pos:column="45"/></operator> <operator pos:line="31" pos:column="38">(<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="39">t<pos:position pos:line="31" pos:column="40"/></name> <operator pos:line="31" pos:column="41">==<pos:position pos:line="31" pos:column="43"/></operator> <name pos:line="31" pos:column="44">u<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">||<pos:position pos:line="31" pos:column="48"/></operator> <call><name pos:line="31" pos:column="49">HSPACE<pos:position pos:line="31" pos:column="55"/></name><argument_list pos:line="31" pos:column="55">(<argument><expr><operator pos:line="31" pos:column="56">*<pos:position pos:line="31" pos:column="57"/></operator><operator pos:line="31" pos:column="57">(<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="58">t<pos:position pos:line="31" pos:column="59"/></name><operator pos:line="31" pos:column="59">-<pos:position pos:line="31" pos:column="60"/></operator><literal type="number" pos:line="31" pos:column="60">1<pos:position pos:line="31" pos:column="61"/></literal><operator pos:line="31" pos:column="61">)<pos:position pos:line="31" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call><operator pos:line="31" pos:column="63">)<pos:position pos:line="31" pos:column="64"/></operator><operator pos:line="31" pos:column="64">)<pos:position pos:line="31" pos:column="65"/></operator></expr>)<pos:position pos:line="31" pos:column="66"/></condition><then pos:line="31" pos:column="66">
    <block pos:line="32" pos:column="5">{
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><operator pos:line="33" pos:column="11">!<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">t0<pos:position pos:line="33" pos:column="14"/></name></expr>)<pos:position pos:line="33" pos:column="15"/></condition><then pos:line="33" pos:column="15"> <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="16">t0<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">t<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="34" pos:column="7">t1<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <name pos:line="34" pos:column="12">t<pos:position pos:line="34" pos:column="13"/></name></expr>;<pos:position pos:line="34" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><name pos:line="36" pos:column="14">specials<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&amp;&amp;<pos:position pos:line="36" pos:column="33"/></operator> <operator pos:line="36" pos:column="26">*<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">t<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">&amp;&amp;<pos:position pos:line="36" pos:column="39"/></operator> <call><name pos:line="36" pos:column="32">strchr<pos:position pos:line="36" pos:column="38"/></name> <argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">specials<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="50">*<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="51">t<pos:position pos:line="36" pos:column="52"/></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="54"/></condition><then pos:line="36" pos:column="54">
    <block pos:line="37" pos:column="5">{
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><operator pos:line="38" pos:column="11">!<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">s0<pos:position pos:line="38" pos:column="14"/></name></expr>)<pos:position pos:line="38" pos:column="15"/></condition><then pos:line="38" pos:column="15"> <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="16">s0<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">t<pos:position pos:line="38" pos:column="22"/></name></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="39" pos:column="7">s1<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <name pos:line="39" pos:column="12">t<pos:position pos:line="39" pos:column="13"/></name></expr>;<pos:position pos:line="39" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="41" pos:column="4"/></block></for>

  <comment type="block" pos:line="43" pos:column="3">/* If we have something to encode, include RFC822 specials */</comment>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">t0<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">&amp;&amp;<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="13">s0<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">&amp;&amp;<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="19">s0<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">&lt;<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="24">t0<pos:position pos:line="44" pos:column="26"/></name></expr>)<pos:position pos:line="44" pos:column="27"/></condition><then pos:line="44" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="5">t0<pos:position pos:line="45" pos:column="7"/></name> <operator pos:line="45" pos:column="8">=<pos:position pos:line="45" pos:column="9"/></operator> <name pos:line="45" pos:column="10">s0<pos:position pos:line="45" pos:column="12"/></name></expr>;<pos:position pos:line="45" pos:column="13"/></expr_stmt></block></then></if>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">t1<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">&amp;&amp;<pos:position pos:line="46" pos:column="20"/></operator> <name pos:line="46" pos:column="13">s1<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">&amp;&amp;<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="19">s1<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">&gt;<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="24">t1<pos:position pos:line="46" pos:column="26"/></name></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="5">t1<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <name pos:line="47" pos:column="10">s1<pos:position pos:line="47" pos:column="12"/></name></expr>;<pos:position pos:line="47" pos:column="13"/></expr_stmt></block></then></if>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><operator pos:line="49" pos:column="7">!<pos:position pos:line="49" pos:column="8"/></operator><name pos:line="49" pos:column="8">t0<pos:position pos:line="49" pos:column="10"/></name></expr>)<pos:position pos:line="49" pos:column="11"/></condition><then pos:line="49" pos:column="11">
  <block pos:line="50" pos:column="3">{
    <comment type="block" pos:line="51" pos:column="5">/* No encoding is required. */</comment>
    <expr_stmt><expr><operator pos:line="52" pos:column="5">*<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">e<pos:position pos:line="52" pos:column="7"/></name> <operator pos:line="52" pos:column="8">=<pos:position pos:line="52" pos:column="9"/></operator> <name pos:line="52" pos:column="10">u<pos:position pos:line="52" pos:column="11"/></name></expr>;<pos:position pos:line="52" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="53" pos:column="5">*<pos:position pos:line="53" pos:column="6"/></operator><name pos:line="53" pos:column="6">elen<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <name pos:line="53" pos:column="13">ulen<pos:position pos:line="53" pos:column="17"/></name></expr>;<pos:position pos:line="53" pos:column="18"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">ret<pos:position pos:line="54" pos:column="15"/></name></expr>;<pos:position pos:line="54" pos:column="16"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="57" pos:column="3">/* Choose target charset. */</comment>
  <expr_stmt><expr><name pos:line="58" pos:column="3">tocode<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <name pos:line="58" pos:column="12">fromcode<pos:position pos:line="58" pos:column="20"/></name></expr>;<pos:position pos:line="58" pos:column="21"/></expr_stmt>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name pos:line="59" pos:column="7">icode<pos:position pos:line="59" pos:column="12"/></name></expr>)<pos:position pos:line="59" pos:column="13"/></condition><then pos:line="59" pos:column="13">
  <block pos:line="60" pos:column="3">{
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">(<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">tocode1<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">=<pos:position pos:line="61" pos:column="19"/></operator> <call><name pos:line="61" pos:column="20">mutt_choose_charset<pos:position pos:line="61" pos:column="39"/></name> <argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">icode<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">charsets<pos:position pos:line="61" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="58">u<pos:position pos:line="61" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="61">ulen<pos:position pos:line="61" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="67">0<pos:position pos:line="61" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="70">0<pos:position pos:line="61" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="72"/></argument_list></call><operator pos:line="61" pos:column="72">)<pos:position pos:line="61" pos:column="73"/></operator></expr>)<pos:position pos:line="61" pos:column="74"/></condition><then pos:line="61" pos:column="74">
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">tocode<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">=<pos:position pos:line="62" pos:column="15"/></operator> <name pos:line="62" pos:column="16">tocode1<pos:position pos:line="62" pos:column="23"/></name></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt></block></then>
    <else pos:line="63" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="7">ret<pos:position pos:line="64" pos:column="10"/></name> <operator pos:line="64" pos:column="11">=<pos:position pos:line="64" pos:column="12"/></operator> <literal type="number" pos:line="64" pos:column="13">2<pos:position pos:line="64" pos:column="14"/></literal></expr><operator pos:line="64" pos:column="14">,<pos:position pos:line="64" pos:column="15"/></operator> <expr><name pos:line="64" pos:column="16">icode<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">=<pos:position pos:line="64" pos:column="23"/></operator> <literal type="number" pos:line="64" pos:column="24">0<pos:position pos:line="64" pos:column="25"/></literal></expr>;<pos:position pos:line="64" pos:column="26"/></expr_stmt></block></else></if>
  }<pos:position pos:line="65" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="67" pos:column="3">/* Hack to avoid labelling 8-bit data as us-ascii. */</comment>
  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><operator pos:line="68" pos:column="7">!<pos:position pos:line="68" pos:column="8"/></operator><name pos:line="68" pos:column="8">icode<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">&amp;&amp;<pos:position pos:line="68" pos:column="24"/></operator> <call><name pos:line="68" pos:column="17">mutt_is_us_ascii<pos:position pos:line="68" pos:column="33"/></name> <argument_list pos:line="68" pos:column="34">(<argument><expr><name pos:line="68" pos:column="35">tocode<pos:position pos:line="68" pos:column="41"/></name></expr></argument>)<pos:position pos:line="68" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="43"/></condition><then pos:line="68" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="5">tocode<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">=<pos:position pos:line="69" pos:column="13"/></operator> <literal type="string" pos:line="69" pos:column="14">"unknown-8bit"<pos:position pos:line="69" pos:column="28"/></literal></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt></block></then></if>
  
  <comment type="block" pos:line="71" pos:column="3">/* Adjust t0 for maximum length of line. */</comment>
  <expr_stmt><expr><name pos:line="72" pos:column="3">t<pos:position pos:line="72" pos:column="4"/></name> <operator pos:line="72" pos:column="5">=<pos:position pos:line="72" pos:column="6"/></operator> <name pos:line="72" pos:column="7">u<pos:position pos:line="72" pos:column="8"/></name> <operator pos:line="72" pos:column="9">+<pos:position pos:line="72" pos:column="10"/></operator> <operator pos:line="72" pos:column="11">(<pos:position pos:line="72" pos:column="12"/></operator><name pos:line="72" pos:column="12">ENCWORD_LEN_MAX<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">+<pos:position pos:line="72" pos:column="29"/></operator> <literal type="number" pos:line="72" pos:column="30">1<pos:position pos:line="72" pos:column="31"/></literal><operator pos:line="72" pos:column="31">)<pos:position pos:line="72" pos:column="32"/></operator> <operator pos:line="72" pos:column="33">-<pos:position pos:line="72" pos:column="34"/></operator> <name pos:line="72" pos:column="35">col<pos:position pos:line="72" pos:column="38"/></name> <operator pos:line="72" pos:column="39">-<pos:position pos:line="72" pos:column="40"/></operator> <name pos:line="72" pos:column="41">ENCWORD_LEN_MIN<pos:position pos:line="72" pos:column="56"/></name></expr>;<pos:position pos:line="72" pos:column="57"/></expr_stmt>
  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><name pos:line="73" pos:column="7">t<pos:position pos:line="73" pos:column="8"/></name> <operator pos:line="73" pos:column="9">&lt;<pos:position pos:line="73" pos:column="13"/></operator> <name pos:line="73" pos:column="11">u<pos:position pos:line="73" pos:column="12"/></name></expr>)<pos:position pos:line="73" pos:column="13"/></condition><then pos:line="73" pos:column="13">  <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="15">t<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <name pos:line="73" pos:column="19">u<pos:position pos:line="73" pos:column="20"/></name></expr>;<pos:position pos:line="73" pos:column="21"/></expr_stmt></block></then></if>
  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">t<pos:position pos:line="74" pos:column="8"/></name> <operator pos:line="74" pos:column="9">&lt;<pos:position pos:line="74" pos:column="13"/></operator> <name pos:line="74" pos:column="11">t0<pos:position pos:line="74" pos:column="13"/></name></expr>)<pos:position pos:line="74" pos:column="14"/></condition><then pos:line="74" pos:column="14"> <block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="15">t0<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <name pos:line="74" pos:column="20">t<pos:position pos:line="74" pos:column="21"/></name></expr>;<pos:position pos:line="74" pos:column="22"/></expr_stmt></block></then></if>
  

  <comment type="block" pos:line="77" pos:column="3">/* Adjust t0 until we can encode a character after a space. */</comment>
  <for pos:line="78" pos:column="3">for <control pos:line="78" pos:column="7">(<init pos:line="78" pos:column="8">;<pos:position pos:line="78" pos:column="9"/></init> <condition><expr><name pos:line="78" pos:column="10">t0<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">&gt;<pos:position pos:line="78" pos:column="17"/></operator> <name pos:line="78" pos:column="15">u<pos:position pos:line="78" pos:column="16"/></name></expr>;<pos:position pos:line="78" pos:column="17"/></condition> <incr><expr><name pos:line="78" pos:column="18">t0<pos:position pos:line="78" pos:column="20"/></name><operator pos:line="78" pos:column="20">--<pos:position pos:line="78" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="78" pos:column="23"/></control>
  <block pos:line="79" pos:column="3">{
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><operator pos:line="80" pos:column="9">!<pos:position pos:line="80" pos:column="10"/></operator><call><name pos:line="80" pos:column="10">HSPACE<pos:position pos:line="80" pos:column="16"/></name><argument_list pos:line="80" pos:column="16">(<argument><expr><operator pos:line="80" pos:column="17">*<pos:position pos:line="80" pos:column="18"/></operator><operator pos:line="80" pos:column="18">(<pos:position pos:line="80" pos:column="19"/></operator><name pos:line="80" pos:column="19">t0<pos:position pos:line="80" pos:column="21"/></name><operator pos:line="80" pos:column="21">-<pos:position pos:line="80" pos:column="22"/></operator><literal type="number" pos:line="80" pos:column="22">1<pos:position pos:line="80" pos:column="23"/></literal><operator pos:line="80" pos:column="23">)<pos:position pos:line="80" pos:column="24"/></operator></expr></argument>)<pos:position pos:line="80" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="26"/></condition><then pos:line="80" pos:column="26">
      <block type="pseudo"><continue pos:line="81" pos:column="7">continue;<pos:position pos:line="81" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name pos:line="82" pos:column="5">t<pos:position pos:line="82" pos:column="6"/></name> <operator pos:line="82" pos:column="7">=<pos:position pos:line="82" pos:column="8"/></operator> <name pos:line="82" pos:column="9">t0<pos:position pos:line="82" pos:column="11"/></name> <operator pos:line="82" pos:column="12">+<pos:position pos:line="82" pos:column="13"/></operator> <literal type="number" pos:line="82" pos:column="14">1<pos:position pos:line="82" pos:column="15"/></literal></expr>;<pos:position pos:line="82" pos:column="16"/></expr_stmt>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">icode<pos:position pos:line="83" pos:column="14"/></name></expr>)<pos:position pos:line="83" pos:column="15"/></condition><then pos:line="83" pos:column="15">
      <block type="pseudo"><while pos:line="84" pos:column="7">while <condition pos:line="84" pos:column="13">(<expr><name pos:line="84" pos:column="14">t<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">&lt;<pos:position pos:line="84" pos:column="20"/></operator> <name pos:line="84" pos:column="18">u<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">+<pos:position pos:line="84" pos:column="21"/></operator> <name pos:line="84" pos:column="22">ulen<pos:position pos:line="84" pos:column="26"/></name> <operator pos:line="84" pos:column="27">&amp;&amp;<pos:position pos:line="84" pos:column="37"/></operator> <call><name pos:line="84" pos:column="30">CONTINUATION_BYTE<pos:position pos:line="84" pos:column="47"/></name><argument_list pos:line="84" pos:column="47">(<argument><expr><operator pos:line="84" pos:column="48">*<pos:position pos:line="84" pos:column="49"/></operator><name pos:line="84" pos:column="49">t<pos:position pos:line="84" pos:column="50"/></name></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="52"/></condition>
	<block type="pseudo"><expr_stmt><expr><operator pos:line="85" pos:column="9">++<pos:position pos:line="85" pos:column="11"/></operator><name pos:line="85" pos:column="11">t<pos:position pos:line="85" pos:column="12"/></name></expr>;<pos:position pos:line="85" pos:column="13"/></expr_stmt></block></while></block></then></if>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><operator pos:line="86" pos:column="9">!<pos:position pos:line="86" pos:column="10"/></operator><call><name pos:line="86" pos:column="10">try_block<pos:position pos:line="86" pos:column="19"/></name> <argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">t0<pos:position pos:line="86" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="25">t<pos:position pos:line="86" pos:column="26"/></name> <operator pos:line="86" pos:column="27">-<pos:position pos:line="86" pos:column="28"/></operator> <name pos:line="86" pos:column="29">t0<pos:position pos:line="86" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="33">icode<pos:position pos:line="86" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="40">tocode<pos:position pos:line="86" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="48">&amp;<pos:position pos:line="86" pos:column="53"/></operator><name pos:line="86" pos:column="49">encoder<pos:position pos:line="86" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="58">&amp;<pos:position pos:line="86" pos:column="63"/></operator><name pos:line="86" pos:column="59">wlen<pos:position pos:line="86" pos:column="63"/></name></expr></argument>)<pos:position pos:line="86" pos:column="64"/></argument_list></call> <operator pos:line="86" pos:column="65">&amp;&amp;<pos:position pos:line="86" pos:column="75"/></operator>
	<name pos:line="87" pos:column="9">col<pos:position pos:line="87" pos:column="12"/></name> <operator pos:line="87" pos:column="13">+<pos:position pos:line="87" pos:column="14"/></operator> <operator pos:line="87" pos:column="15">(<pos:position pos:line="87" pos:column="16"/></operator><name pos:line="87" pos:column="16">t0<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">-<pos:position pos:line="87" pos:column="20"/></operator> <name pos:line="87" pos:column="21">u<pos:position pos:line="87" pos:column="22"/></name><operator pos:line="87" pos:column="22">)<pos:position pos:line="87" pos:column="23"/></operator> <operator pos:line="87" pos:column="24">+<pos:position pos:line="87" pos:column="25"/></operator> <name pos:line="87" pos:column="26">wlen<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">&lt;=<pos:position pos:line="87" pos:column="36"/></operator> <name pos:line="87" pos:column="34">ENCWORD_LEN_MAX<pos:position pos:line="87" pos:column="49"/></name> <operator pos:line="87" pos:column="50">+<pos:position pos:line="87" pos:column="51"/></operator> <literal type="number" pos:line="87" pos:column="52">1<pos:position pos:line="87" pos:column="53"/></literal></expr>)<pos:position pos:line="87" pos:column="54"/></condition><then pos:line="87" pos:column="54">
      <block type="pseudo"><break pos:line="88" pos:column="7">break;<pos:position pos:line="88" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="89" pos:column="4"/></block></for>

  <comment type="block" pos:line="91" pos:column="3">/* Adjust t1 until we can encode a character before a space. */</comment>
  <for pos:line="92" pos:column="3">for <control pos:line="92" pos:column="7">(<init pos:line="92" pos:column="8">;<pos:position pos:line="92" pos:column="9"/></init> <condition><expr><name pos:line="92" pos:column="10">t1<pos:position pos:line="92" pos:column="12"/></name> <operator pos:line="92" pos:column="13">&lt;<pos:position pos:line="92" pos:column="17"/></operator> <name pos:line="92" pos:column="15">u<pos:position pos:line="92" pos:column="16"/></name> <operator pos:line="92" pos:column="17">+<pos:position pos:line="92" pos:column="18"/></operator> <name pos:line="92" pos:column="19">ulen<pos:position pos:line="92" pos:column="23"/></name></expr>;<pos:position pos:line="92" pos:column="24"/></condition> <incr><expr><name pos:line="92" pos:column="25">t1<pos:position pos:line="92" pos:column="27"/></name><operator pos:line="92" pos:column="27">++<pos:position pos:line="92" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="92" pos:column="30"/></control>
  <block pos:line="93" pos:column="3">{
    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><operator pos:line="94" pos:column="9">!<pos:position pos:line="94" pos:column="10"/></operator><call><name pos:line="94" pos:column="10">HSPACE<pos:position pos:line="94" pos:column="16"/></name><argument_list pos:line="94" pos:column="16">(<argument><expr><operator pos:line="94" pos:column="17">*<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="18">t1<pos:position pos:line="94" pos:column="20"/></name></expr></argument>)<pos:position pos:line="94" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="22"/></condition><then pos:line="94" pos:column="22">
      <block type="pseudo"><continue pos:line="95" pos:column="7">continue;<pos:position pos:line="95" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name pos:line="96" pos:column="5">t<pos:position pos:line="96" pos:column="6"/></name> <operator pos:line="96" pos:column="7">=<pos:position pos:line="96" pos:column="8"/></operator> <name pos:line="96" pos:column="9">t1<pos:position pos:line="96" pos:column="11"/></name> <operator pos:line="96" pos:column="12">-<pos:position pos:line="96" pos:column="13"/></operator> <literal type="number" pos:line="96" pos:column="14">1<pos:position pos:line="96" pos:column="15"/></literal></expr>;<pos:position pos:line="96" pos:column="16"/></expr_stmt>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name pos:line="97" pos:column="9">icode<pos:position pos:line="97" pos:column="14"/></name></expr>)<pos:position pos:line="97" pos:column="15"/></condition><then pos:line="97" pos:column="15">
      <block type="pseudo"><while pos:line="98" pos:column="7">while <condition pos:line="98" pos:column="13">(<expr><call><name pos:line="98" pos:column="14">CONTINUATION_BYTE<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><operator pos:line="98" pos:column="32">*<pos:position pos:line="98" pos:column="33"/></operator><name pos:line="98" pos:column="33">t<pos:position pos:line="98" pos:column="34"/></name></expr></argument>)<pos:position pos:line="98" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="36"/></condition>
	<block type="pseudo"><expr_stmt><expr><operator pos:line="99" pos:column="9">--<pos:position pos:line="99" pos:column="11"/></operator><name pos:line="99" pos:column="11">t<pos:position pos:line="99" pos:column="12"/></name></expr>;<pos:position pos:line="99" pos:column="13"/></expr_stmt></block></while></block></then></if>
    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><operator pos:line="100" pos:column="9">!<pos:position pos:line="100" pos:column="10"/></operator><call><name pos:line="100" pos:column="10">try_block<pos:position pos:line="100" pos:column="19"/></name> <argument_list pos:line="100" pos:column="20">(<argument><expr><name pos:line="100" pos:column="21">t<pos:position pos:line="100" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="24">t1<pos:position pos:line="100" pos:column="26"/></name> <operator pos:line="100" pos:column="27">-<pos:position pos:line="100" pos:column="28"/></operator> <name pos:line="100" pos:column="29">t<pos:position pos:line="100" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="32">icode<pos:position pos:line="100" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="39">tocode<pos:position pos:line="100" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="47">&amp;<pos:position pos:line="100" pos:column="52"/></operator><name pos:line="100" pos:column="48">encoder<pos:position pos:line="100" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="57">&amp;<pos:position pos:line="100" pos:column="62"/></operator><name pos:line="100" pos:column="58">wlen<pos:position pos:line="100" pos:column="62"/></name></expr></argument>)<pos:position pos:line="100" pos:column="63"/></argument_list></call> <operator pos:line="100" pos:column="64">&amp;&amp;<pos:position pos:line="100" pos:column="74"/></operator>
	<literal type="number" pos:line="101" pos:column="9">1<pos:position pos:line="101" pos:column="10"/></literal> <operator pos:line="101" pos:column="11">+<pos:position pos:line="101" pos:column="12"/></operator> <name pos:line="101" pos:column="13">wlen<pos:position pos:line="101" pos:column="17"/></name> <operator pos:line="101" pos:column="18">+<pos:position pos:line="101" pos:column="19"/></operator> <operator pos:line="101" pos:column="20">(<pos:position pos:line="101" pos:column="21"/></operator><name pos:line="101" pos:column="21">u<pos:position pos:line="101" pos:column="22"/></name> <operator pos:line="101" pos:column="23">+<pos:position pos:line="101" pos:column="24"/></operator> <name pos:line="101" pos:column="25">ulen<pos:position pos:line="101" pos:column="29"/></name> <operator pos:line="101" pos:column="30">-<pos:position pos:line="101" pos:column="31"/></operator> <name pos:line="101" pos:column="32">t1<pos:position pos:line="101" pos:column="34"/></name><operator pos:line="101" pos:column="34">)<pos:position pos:line="101" pos:column="35"/></operator> <operator pos:line="101" pos:column="36">&lt;=<pos:position pos:line="101" pos:column="41"/></operator> <name pos:line="101" pos:column="39">ENCWORD_LEN_MAX<pos:position pos:line="101" pos:column="54"/></name> <operator pos:line="101" pos:column="55">+<pos:position pos:line="101" pos:column="56"/></operator> <literal type="number" pos:line="101" pos:column="57">1<pos:position pos:line="101" pos:column="58"/></literal></expr>)<pos:position pos:line="101" pos:column="59"/></condition><then pos:line="101" pos:column="59">
      <block type="pseudo"><break pos:line="102" pos:column="7">break;<pos:position pos:line="102" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="103" pos:column="4"/></block></for>

  <comment type="block" pos:line="105" pos:column="3">/* We shall encode the region [t0,t1). */</comment>

  <comment type="block" pos:line="107" pos:column="3">/* Initialise the output buffer with the us-ascii prefix. */</comment>
  <expr_stmt><expr><name pos:line="108" pos:column="3">buflen<pos:position pos:line="108" pos:column="9"/></name> <operator pos:line="108" pos:column="10">=<pos:position pos:line="108" pos:column="11"/></operator> <literal type="number" pos:line="108" pos:column="12">2<pos:position pos:line="108" pos:column="13"/></literal> <operator pos:line="108" pos:column="14">*<pos:position pos:line="108" pos:column="15"/></operator> <name pos:line="108" pos:column="16">ulen<pos:position pos:line="108" pos:column="20"/></name></expr>;<pos:position pos:line="108" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="109" pos:column="3">buf<pos:position pos:line="109" pos:column="6"/></name> <operator pos:line="109" pos:column="7">=<pos:position pos:line="109" pos:column="8"/></operator> <call><name pos:line="109" pos:column="9">safe_malloc<pos:position pos:line="109" pos:column="20"/></name> <argument_list pos:line="109" pos:column="21">(<argument><expr><name pos:line="109" pos:column="22">buflen<pos:position pos:line="109" pos:column="28"/></name></expr></argument>)<pos:position pos:line="109" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="110" pos:column="3">bufpos<pos:position pos:line="110" pos:column="9"/></name> <operator pos:line="110" pos:column="10">=<pos:position pos:line="110" pos:column="11"/></operator> <name pos:line="110" pos:column="12">t0<pos:position pos:line="110" pos:column="14"/></name> <operator pos:line="110" pos:column="15">-<pos:position pos:line="110" pos:column="16"/></operator> <name pos:line="110" pos:column="17">u<pos:position pos:line="110" pos:column="18"/></name></expr>;<pos:position pos:line="110" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="111" pos:column="3">memcpy<pos:position pos:line="111" pos:column="9"/></name> <argument_list pos:line="111" pos:column="10">(<argument><expr><name pos:line="111" pos:column="11">buf<pos:position pos:line="111" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="16">u<pos:position pos:line="111" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="19">t0<pos:position pos:line="111" pos:column="21"/></name> <operator pos:line="111" pos:column="22">-<pos:position pos:line="111" pos:column="23"/></operator> <name pos:line="111" pos:column="24">u<pos:position pos:line="111" pos:column="25"/></name></expr></argument>)<pos:position pos:line="111" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name pos:line="113" pos:column="3">col<pos:position pos:line="113" pos:column="6"/></name> <operator pos:line="113" pos:column="7">+=<pos:position pos:line="113" pos:column="9"/></operator> <name pos:line="113" pos:column="10">t0<pos:position pos:line="113" pos:column="12"/></name> <operator pos:line="113" pos:column="13">-<pos:position pos:line="113" pos:column="14"/></operator> <name pos:line="113" pos:column="15">u<pos:position pos:line="113" pos:column="16"/></name></expr>;<pos:position pos:line="113" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><name pos:line="115" pos:column="3">t<pos:position pos:line="115" pos:column="4"/></name> <operator pos:line="115" pos:column="5">=<pos:position pos:line="115" pos:column="6"/></operator> <name pos:line="115" pos:column="7">t0<pos:position pos:line="115" pos:column="9"/></name></expr>;<pos:position pos:line="115" pos:column="10"/></expr_stmt>
  <for pos:line="116" pos:column="3">for <control pos:line="116" pos:column="7">(<init pos:line="116" pos:column="8">;<pos:position pos:line="116" pos:column="9"/></init><condition pos:line="116" pos:column="9">;<pos:position pos:line="116" pos:column="10"/></condition><incr/>)<pos:position pos:line="116" pos:column="11"/></control>
  <block pos:line="117" pos:column="3">{
    <comment type="block" pos:line="118" pos:column="5">/* Find how much we can encode. */</comment>
    <expr_stmt><expr><name pos:line="119" pos:column="5">n<pos:position pos:line="119" pos:column="6"/></name> <operator pos:line="119" pos:column="7">=<pos:position pos:line="119" pos:column="8"/></operator> <call><name pos:line="119" pos:column="9">choose_block<pos:position pos:line="119" pos:column="21"/></name> <argument_list pos:line="119" pos:column="22">(<argument><expr><name pos:line="119" pos:column="23">t<pos:position pos:line="119" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="26">t1<pos:position pos:line="119" pos:column="28"/></name> <operator pos:line="119" pos:column="29">-<pos:position pos:line="119" pos:column="30"/></operator> <name pos:line="119" pos:column="31">t<pos:position pos:line="119" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="34">col<pos:position pos:line="119" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="39">icode<pos:position pos:line="119" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="46">tocode<pos:position pos:line="119" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="54">&amp;<pos:position pos:line="119" pos:column="59"/></operator><name pos:line="119" pos:column="55">encoder<pos:position pos:line="119" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="64">&amp;<pos:position pos:line="119" pos:column="69"/></operator><name pos:line="119" pos:column="65">wlen<pos:position pos:line="119" pos:column="69"/></name></expr></argument>)<pos:position pos:line="119" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="71"/></expr_stmt>
    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><name pos:line="120" pos:column="9">n<pos:position pos:line="120" pos:column="10"/></name> <operator pos:line="120" pos:column="11">==<pos:position pos:line="120" pos:column="13"/></operator> <name pos:line="120" pos:column="14">t1<pos:position pos:line="120" pos:column="16"/></name> <operator pos:line="120" pos:column="17">-<pos:position pos:line="120" pos:column="18"/></operator> <name pos:line="120" pos:column="19">t<pos:position pos:line="120" pos:column="20"/></name></expr>)<pos:position pos:line="120" pos:column="21"/></condition><then pos:line="120" pos:column="21">
    <block pos:line="121" pos:column="5">{
      <comment type="block" pos:line="122" pos:column="7">/* See if we can fit the us-ascii suffix, too. */</comment>
      <if pos:line="123" pos:column="7">if <condition pos:line="123" pos:column="10">(<expr><name pos:line="123" pos:column="11">col<pos:position pos:line="123" pos:column="14"/></name> <operator pos:line="123" pos:column="15">+<pos:position pos:line="123" pos:column="16"/></operator> <name pos:line="123" pos:column="17">wlen<pos:position pos:line="123" pos:column="21"/></name> <operator pos:line="123" pos:column="22">+<pos:position pos:line="123" pos:column="23"/></operator> <operator pos:line="123" pos:column="24">(<pos:position pos:line="123" pos:column="25"/></operator><name pos:line="123" pos:column="25">u<pos:position pos:line="123" pos:column="26"/></name> <operator pos:line="123" pos:column="27">+<pos:position pos:line="123" pos:column="28"/></operator> <name pos:line="123" pos:column="29">ulen<pos:position pos:line="123" pos:column="33"/></name> <operator pos:line="123" pos:column="34">-<pos:position pos:line="123" pos:column="35"/></operator> <name pos:line="123" pos:column="36">t1<pos:position pos:line="123" pos:column="38"/></name><operator pos:line="123" pos:column="38">)<pos:position pos:line="123" pos:column="39"/></operator> <operator pos:line="123" pos:column="40">&lt;=<pos:position pos:line="123" pos:column="45"/></operator> <name pos:line="123" pos:column="43">ENCWORD_LEN_MAX<pos:position pos:line="123" pos:column="58"/></name> <operator pos:line="123" pos:column="59">+<pos:position pos:line="123" pos:column="60"/></operator> <literal type="number" pos:line="123" pos:column="61">1<pos:position pos:line="123" pos:column="62"/></literal></expr>)<pos:position pos:line="123" pos:column="63"/></condition><then pos:line="123" pos:column="63">
	<block type="pseudo"><break pos:line="124" pos:column="9">break;<pos:position pos:line="124" pos:column="15"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="125" pos:column="7">n<pos:position pos:line="125" pos:column="8"/></name> <operator pos:line="125" pos:column="9">=<pos:position pos:line="125" pos:column="10"/></operator> <name pos:line="125" pos:column="11">t1<pos:position pos:line="125" pos:column="13"/></name> <operator pos:line="125" pos:column="14">-<pos:position pos:line="125" pos:column="15"/></operator> <name pos:line="125" pos:column="16">t<pos:position pos:line="125" pos:column="17"/></name> <operator pos:line="125" pos:column="18">-<pos:position pos:line="125" pos:column="19"/></operator> <literal type="number" pos:line="125" pos:column="20">1<pos:position pos:line="125" pos:column="21"/></literal></expr>;<pos:position pos:line="125" pos:column="22"/></expr_stmt>
      <if pos:line="126" pos:column="7">if <condition pos:line="126" pos:column="10">(<expr><name pos:line="126" pos:column="11">icode<pos:position pos:line="126" pos:column="16"/></name></expr>)<pos:position pos:line="126" pos:column="17"/></condition><then pos:line="126" pos:column="17">
	<block type="pseudo"><while pos:line="127" pos:column="9">while <condition pos:line="127" pos:column="15">(<expr><call><name pos:line="127" pos:column="16">CONTINUATION_BYTE<pos:position pos:line="127" pos:column="33"/></name><argument_list pos:line="127" pos:column="33">(<argument><expr><name><name pos:line="127" pos:column="34">t<pos:position pos:line="127" pos:column="35"/></name><index pos:line="127" pos:column="35">[<expr><name pos:line="127" pos:column="36">n<pos:position pos:line="127" pos:column="37"/></name></expr>]<pos:position pos:line="127" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="127" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="40"/></condition>
	  <block type="pseudo"><expr_stmt><expr><operator pos:line="128" pos:column="11">--<pos:position pos:line="128" pos:column="13"/></operator><name pos:line="128" pos:column="13">n<pos:position pos:line="128" pos:column="14"/></name></expr>;<pos:position pos:line="128" pos:column="15"/></expr_stmt></block></while></block></then></if>
      <expr_stmt><expr><call><name pos:line="129" pos:column="7">assert<pos:position pos:line="129" pos:column="13"/></name> <argument_list pos:line="129" pos:column="14">(<argument><expr><name pos:line="129" pos:column="15">t<pos:position pos:line="129" pos:column="16"/></name> <operator pos:line="129" pos:column="17">+<pos:position pos:line="129" pos:column="18"/></operator> <name pos:line="129" pos:column="19">n<pos:position pos:line="129" pos:column="20"/></name> <operator pos:line="129" pos:column="21">&gt;=<pos:position pos:line="129" pos:column="26"/></operator> <name pos:line="129" pos:column="24">t<pos:position pos:line="129" pos:column="25"/></name></expr></argument>)<pos:position pos:line="129" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="27"/></expr_stmt>
      <if pos:line="130" pos:column="7">if <condition pos:line="130" pos:column="10">(<expr><operator pos:line="130" pos:column="11">!<pos:position pos:line="130" pos:column="12"/></operator><name pos:line="130" pos:column="12">n<pos:position pos:line="130" pos:column="13"/></name></expr>)<pos:position pos:line="130" pos:column="14"/></condition><then pos:line="130" pos:column="14">
      <block pos:line="131" pos:column="7">{
	<comment type="block" pos:line="132" pos:column="9">/* This should only happen in the really stupid case where the
	   only word that needs encoding is one character long, but
	   there is too much us-ascii stuff after it to use a single
	   encoded word. We add the next word to the encoded region
	   and try again. */</comment>
	<expr_stmt><expr><call><name pos:line="137" pos:column="9">assert<pos:position pos:line="137" pos:column="15"/></name> <argument_list pos:line="137" pos:column="16">(<argument><expr><name pos:line="137" pos:column="17">t1<pos:position pos:line="137" pos:column="19"/></name> <operator pos:line="137" pos:column="20">&lt;<pos:position pos:line="137" pos:column="24"/></operator> <name pos:line="137" pos:column="22">u<pos:position pos:line="137" pos:column="23"/></name> <operator pos:line="137" pos:column="24">+<pos:position pos:line="137" pos:column="25"/></operator> <name pos:line="137" pos:column="26">ulen<pos:position pos:line="137" pos:column="30"/></name></expr></argument>)<pos:position pos:line="137" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="32"/></expr_stmt>
	<for pos:line="138" pos:column="9">for <control pos:line="138" pos:column="13">(<init><expr><name pos:line="138" pos:column="14">t1<pos:position pos:line="138" pos:column="16"/></name><operator pos:line="138" pos:column="16">++<pos:position pos:line="138" pos:column="18"/></operator></expr>;<pos:position pos:line="138" pos:column="19"/></init> <condition><expr><name pos:line="138" pos:column="20">t1<pos:position pos:line="138" pos:column="22"/></name> <operator pos:line="138" pos:column="23">&lt;<pos:position pos:line="138" pos:column="27"/></operator> <name pos:line="138" pos:column="25">u<pos:position pos:line="138" pos:column="26"/></name> <operator pos:line="138" pos:column="27">+<pos:position pos:line="138" pos:column="28"/></operator> <name pos:line="138" pos:column="29">ulen<pos:position pos:line="138" pos:column="33"/></name> <operator pos:line="138" pos:column="34">&amp;&amp;<pos:position pos:line="138" pos:column="44"/></operator> <operator pos:line="138" pos:column="37">!<pos:position pos:line="138" pos:column="38"/></operator><call><name pos:line="138" pos:column="38">HSPACE<pos:position pos:line="138" pos:column="44"/></name><argument_list pos:line="138" pos:column="44">(<argument><expr><operator pos:line="138" pos:column="45">*<pos:position pos:line="138" pos:column="46"/></operator><name pos:line="138" pos:column="46">t1<pos:position pos:line="138" pos:column="48"/></name></expr></argument>)<pos:position pos:line="138" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="50"/></condition> <incr><expr><name pos:line="138" pos:column="51">t1<pos:position pos:line="138" pos:column="53"/></name><operator pos:line="138" pos:column="53">++<pos:position pos:line="138" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="138" pos:column="56"/></control>
	  <block type="pseudo"><empty_stmt pos:line="139" pos:column="11">;<pos:position pos:line="139" pos:column="12"/></empty_stmt></block></for>
	<continue pos:line="140" pos:column="9">continue;<pos:position pos:line="140" pos:column="18"/></continue>
      }<pos:position pos:line="141" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="142" pos:column="7">n<pos:position pos:line="142" pos:column="8"/></name> <operator pos:line="142" pos:column="9">=<pos:position pos:line="142" pos:column="10"/></operator> <call><name pos:line="142" pos:column="11">choose_block<pos:position pos:line="142" pos:column="23"/></name> <argument_list pos:line="142" pos:column="24">(<argument><expr><name pos:line="142" pos:column="25">t<pos:position pos:line="142" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="28">n<pos:position pos:line="142" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="31">col<pos:position pos:line="142" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="36">icode<pos:position pos:line="142" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="43">tocode<pos:position pos:line="142" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="51">&amp;<pos:position pos:line="142" pos:column="56"/></operator><name pos:line="142" pos:column="52">encoder<pos:position pos:line="142" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="61">&amp;<pos:position pos:line="142" pos:column="66"/></operator><name pos:line="142" pos:column="62">wlen<pos:position pos:line="142" pos:column="66"/></name></expr></argument>)<pos:position pos:line="142" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="143" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="145" pos:column="5">/* Add to output buffer. */</comment>
<cpp:define pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">define<pos:position pos:line="146" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="146" pos:column="9">LINEBREAK<pos:position pos:line="146" pos:column="18"/></name></cpp:macro> <cpp:value pos:line="146" pos:column="19">"\n\t"<pos:position pos:line="146" pos:column="25"/></cpp:value></cpp:define>
    <if pos:line="147" pos:column="5">if <condition pos:line="147" pos:column="8">(<expr><name pos:line="147" pos:column="9">bufpos<pos:position pos:line="147" pos:column="15"/></name> <operator pos:line="147" pos:column="16">+<pos:position pos:line="147" pos:column="17"/></operator> <name pos:line="147" pos:column="18">wlen<pos:position pos:line="147" pos:column="22"/></name> <operator pos:line="147" pos:column="23">+<pos:position pos:line="147" pos:column="24"/></operator> <call><name pos:line="147" pos:column="25">strlen<pos:position pos:line="147" pos:column="31"/></name> <argument_list pos:line="147" pos:column="32">(<argument><expr><name pos:line="147" pos:column="33">LINEBREAK<pos:position pos:line="147" pos:column="42"/></name></expr></argument>)<pos:position pos:line="147" pos:column="43"/></argument_list></call> <operator pos:line="147" pos:column="44">&gt;<pos:position pos:line="147" pos:column="48"/></operator> <name pos:line="147" pos:column="46">buflen<pos:position pos:line="147" pos:column="52"/></name></expr>)<pos:position pos:line="147" pos:column="53"/></condition><then pos:line="147" pos:column="53">
    <block pos:line="148" pos:column="5">{
      <expr_stmt><expr><name pos:line="149" pos:column="7">buflen<pos:position pos:line="149" pos:column="13"/></name> <operator pos:line="149" pos:column="14">=<pos:position pos:line="149" pos:column="15"/></operator> <name pos:line="149" pos:column="16">bufpos<pos:position pos:line="149" pos:column="22"/></name> <operator pos:line="149" pos:column="23">+<pos:position pos:line="149" pos:column="24"/></operator> <name pos:line="149" pos:column="25">wlen<pos:position pos:line="149" pos:column="29"/></name> <operator pos:line="149" pos:column="30">+<pos:position pos:line="149" pos:column="31"/></operator> <call><name pos:line="149" pos:column="32">strlen<pos:position pos:line="149" pos:column="38"/></name> <argument_list pos:line="149" pos:column="39">(<argument><expr><name pos:line="149" pos:column="40">LINEBREAK<pos:position pos:line="149" pos:column="49"/></name></expr></argument>)<pos:position pos:line="149" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="150" pos:column="7">safe_realloc<pos:position pos:line="150" pos:column="19"/></name> <argument_list pos:line="150" pos:column="20">(<argument><expr><operator pos:line="150" pos:column="21">&amp;<pos:position pos:line="150" pos:column="26"/></operator><name pos:line="150" pos:column="22">buf<pos:position pos:line="150" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="27">buflen<pos:position pos:line="150" pos:column="33"/></name></expr></argument>)<pos:position pos:line="150" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="151" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="152" pos:column="5">r<pos:position pos:line="152" pos:column="6"/></name> <operator pos:line="152" pos:column="7">=<pos:position pos:line="152" pos:column="8"/></operator> <call><name pos:line="152" pos:column="9">encode_block<pos:position pos:line="152" pos:column="21"/></name> <argument_list pos:line="152" pos:column="22">(<argument><expr><name pos:line="152" pos:column="23">buf<pos:position pos:line="152" pos:column="26"/></name> <operator pos:line="152" pos:column="27">+<pos:position pos:line="152" pos:column="28"/></operator> <name pos:line="152" pos:column="29">bufpos<pos:position pos:line="152" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="37">t<pos:position pos:line="152" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="40">n<pos:position pos:line="152" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="43">icode<pos:position pos:line="152" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="50">tocode<pos:position pos:line="152" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="58">encoder<pos:position pos:line="152" pos:column="65"/></name></expr></argument>)<pos:position pos:line="152" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="153" pos:column="5">assert<pos:position pos:line="153" pos:column="11"/></name> <argument_list pos:line="153" pos:column="12">(<argument><expr><name pos:line="153" pos:column="13">r<pos:position pos:line="153" pos:column="14"/></name> <operator pos:line="153" pos:column="15">==<pos:position pos:line="153" pos:column="17"/></operator> <name pos:line="153" pos:column="18">wlen<pos:position pos:line="153" pos:column="22"/></name></expr></argument>)<pos:position pos:line="153" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="154" pos:column="5">bufpos<pos:position pos:line="154" pos:column="11"/></name> <operator pos:line="154" pos:column="12">+=<pos:position pos:line="154" pos:column="14"/></operator> <name pos:line="154" pos:column="15">wlen<pos:position pos:line="154" pos:column="19"/></name></expr>;<pos:position pos:line="154" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="155" pos:column="5">memcpy<pos:position pos:line="155" pos:column="11"/></name> <argument_list pos:line="155" pos:column="12">(<argument><expr><name pos:line="155" pos:column="13">buf<pos:position pos:line="155" pos:column="16"/></name> <operator pos:line="155" pos:column="17">+<pos:position pos:line="155" pos:column="18"/></operator> <name pos:line="155" pos:column="19">bufpos<pos:position pos:line="155" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="27">LINEBREAK<pos:position pos:line="155" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="155" pos:column="38">strlen<pos:position pos:line="155" pos:column="44"/></name> <argument_list pos:line="155" pos:column="45">(<argument><expr><name pos:line="155" pos:column="46">LINEBREAK<pos:position pos:line="155" pos:column="55"/></name></expr></argument>)<pos:position pos:line="155" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="155" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="156" pos:column="5">bufpos<pos:position pos:line="156" pos:column="11"/></name> <operator pos:line="156" pos:column="12">+=<pos:position pos:line="156" pos:column="14"/></operator> <call><name pos:line="156" pos:column="15">strlen<pos:position pos:line="156" pos:column="21"/></name> <argument_list pos:line="156" pos:column="22">(<argument><expr><name pos:line="156" pos:column="23">LINEBREAK<pos:position pos:line="156" pos:column="32"/></name></expr></argument>)<pos:position pos:line="156" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="34"/></expr_stmt>
<cpp:undef pos:line="157" pos:column="1">#<cpp:directive pos:line="157" pos:column="2">undef<pos:position pos:line="157" pos:column="7"/></cpp:directive> <name pos:line="157" pos:column="8">LINEBREAK<pos:position pos:line="157" pos:column="17"/></name></cpp:undef>

    <expr_stmt><expr><name pos:line="159" pos:column="5">col<pos:position pos:line="159" pos:column="8"/></name> <operator pos:line="159" pos:column="9">=<pos:position pos:line="159" pos:column="10"/></operator> <literal type="number" pos:line="159" pos:column="11">1<pos:position pos:line="159" pos:column="12"/></literal></expr>;<pos:position pos:line="159" pos:column="13"/></expr_stmt>

    <expr_stmt><expr><name pos:line="161" pos:column="5">t<pos:position pos:line="161" pos:column="6"/></name> <operator pos:line="161" pos:column="7">+=<pos:position pos:line="161" pos:column="9"/></operator> <name pos:line="161" pos:column="10">n<pos:position pos:line="161" pos:column="11"/></name></expr>;<pos:position pos:line="161" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="162" pos:column="4"/></block></for>

  <comment type="block" pos:line="164" pos:column="3">/* Add last encoded word and us-ascii suffix to buffer. */</comment>
  <expr_stmt><expr><name pos:line="165" pos:column="3">buflen<pos:position pos:line="165" pos:column="9"/></name> <operator pos:line="165" pos:column="10">=<pos:position pos:line="165" pos:column="11"/></operator> <name pos:line="165" pos:column="12">bufpos<pos:position pos:line="165" pos:column="18"/></name> <operator pos:line="165" pos:column="19">+<pos:position pos:line="165" pos:column="20"/></operator> <name pos:line="165" pos:column="21">wlen<pos:position pos:line="165" pos:column="25"/></name> <operator pos:line="165" pos:column="26">+<pos:position pos:line="165" pos:column="27"/></operator> <operator pos:line="165" pos:column="28">(<pos:position pos:line="165" pos:column="29"/></operator><name pos:line="165" pos:column="29">u<pos:position pos:line="165" pos:column="30"/></name> <operator pos:line="165" pos:column="31">+<pos:position pos:line="165" pos:column="32"/></operator> <name pos:line="165" pos:column="33">ulen<pos:position pos:line="165" pos:column="37"/></name> <operator pos:line="165" pos:column="38">-<pos:position pos:line="165" pos:column="39"/></operator> <name pos:line="165" pos:column="40">t1<pos:position pos:line="165" pos:column="42"/></name><operator pos:line="165" pos:column="42">)<pos:position pos:line="165" pos:column="43"/></operator></expr>;<pos:position pos:line="165" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="166" pos:column="3">safe_realloc<pos:position pos:line="166" pos:column="15"/></name> <argument_list pos:line="166" pos:column="16">(<argument><expr><operator pos:line="166" pos:column="17">&amp;<pos:position pos:line="166" pos:column="22"/></operator><name pos:line="166" pos:column="18">buf<pos:position pos:line="166" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="23">buflen<pos:position pos:line="166" pos:column="29"/></name> <operator pos:line="166" pos:column="30">+<pos:position pos:line="166" pos:column="31"/></operator> <literal type="number" pos:line="166" pos:column="32">1<pos:position pos:line="166" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="167" pos:column="3">r<pos:position pos:line="167" pos:column="4"/></name> <operator pos:line="167" pos:column="5">=<pos:position pos:line="167" pos:column="6"/></operator> <call><name pos:line="167" pos:column="7">encode_block<pos:position pos:line="167" pos:column="19"/></name> <argument_list pos:line="167" pos:column="20">(<argument><expr><name pos:line="167" pos:column="21">buf<pos:position pos:line="167" pos:column="24"/></name> <operator pos:line="167" pos:column="25">+<pos:position pos:line="167" pos:column="26"/></operator> <name pos:line="167" pos:column="27">bufpos<pos:position pos:line="167" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="35">t<pos:position pos:line="167" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="38">t1<pos:position pos:line="167" pos:column="40"/></name> <operator pos:line="167" pos:column="41">-<pos:position pos:line="167" pos:column="42"/></operator> <name pos:line="167" pos:column="43">t<pos:position pos:line="167" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="46">icode<pos:position pos:line="167" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="53">tocode<pos:position pos:line="167" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="61">encoder<pos:position pos:line="167" pos:column="68"/></name></expr></argument>)<pos:position pos:line="167" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="168" pos:column="3">assert<pos:position pos:line="168" pos:column="9"/></name> <argument_list pos:line="168" pos:column="10">(<argument><expr><name pos:line="168" pos:column="11">r<pos:position pos:line="168" pos:column="12"/></name> <operator pos:line="168" pos:column="13">==<pos:position pos:line="168" pos:column="15"/></operator> <name pos:line="168" pos:column="16">wlen<pos:position pos:line="168" pos:column="20"/></name></expr></argument>)<pos:position pos:line="168" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="169" pos:column="3">bufpos<pos:position pos:line="169" pos:column="9"/></name> <operator pos:line="169" pos:column="10">+=<pos:position pos:line="169" pos:column="12"/></operator> <name pos:line="169" pos:column="13">wlen<pos:position pos:line="169" pos:column="17"/></name></expr>;<pos:position pos:line="169" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="170" pos:column="3">memcpy<pos:position pos:line="170" pos:column="9"/></name> <argument_list pos:line="170" pos:column="10">(<argument><expr><name pos:line="170" pos:column="11">buf<pos:position pos:line="170" pos:column="14"/></name> <operator pos:line="170" pos:column="15">+<pos:position pos:line="170" pos:column="16"/></operator> <name pos:line="170" pos:column="17">bufpos<pos:position pos:line="170" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="25">t1<pos:position pos:line="170" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="29">u<pos:position pos:line="170" pos:column="30"/></name> <operator pos:line="170" pos:column="31">+<pos:position pos:line="170" pos:column="32"/></operator> <name pos:line="170" pos:column="33">ulen<pos:position pos:line="170" pos:column="37"/></name> <operator pos:line="170" pos:column="38">-<pos:position pos:line="170" pos:column="39"/></operator> <name pos:line="170" pos:column="40">t1<pos:position pos:line="170" pos:column="42"/></name></expr></argument>)<pos:position pos:line="170" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="172" pos:column="3">FREE<pos:position pos:line="172" pos:column="7"/></name> <argument_list pos:line="172" pos:column="8">(<argument><expr><operator pos:line="172" pos:column="9">&amp;<pos:position pos:line="172" pos:column="14"/></operator><name pos:line="172" pos:column="10">tocode1<pos:position pos:line="172" pos:column="17"/></name></expr></argument>)<pos:position pos:line="172" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="173" pos:column="3">FREE<pos:position pos:line="173" pos:column="7"/></name> <argument_list pos:line="173" pos:column="8">(<argument><expr><operator pos:line="173" pos:column="9">&amp;<pos:position pos:line="173" pos:column="14"/></operator><name pos:line="173" pos:column="10">u<pos:position pos:line="173" pos:column="11"/></name></expr></argument>)<pos:position pos:line="173" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="13"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="175" pos:column="3">buf<pos:position pos:line="175" pos:column="6"/></name><index pos:line="175" pos:column="6">[<expr><name pos:line="175" pos:column="7">buflen<pos:position pos:line="175" pos:column="13"/></name></expr>]<pos:position pos:line="175" pos:column="14"/></index></name> <operator pos:line="175" pos:column="15">=<pos:position pos:line="175" pos:column="16"/></operator> <literal type="char" pos:line="175" pos:column="17">'\0'<pos:position pos:line="175" pos:column="21"/></literal></expr>;<pos:position pos:line="175" pos:column="22"/></expr_stmt>
  
  <expr_stmt><expr><operator pos:line="177" pos:column="3">*<pos:position pos:line="177" pos:column="4"/></operator><name pos:line="177" pos:column="4">e<pos:position pos:line="177" pos:column="5"/></name> <operator pos:line="177" pos:column="6">=<pos:position pos:line="177" pos:column="7"/></operator> <name pos:line="177" pos:column="8">buf<pos:position pos:line="177" pos:column="11"/></name></expr>;<pos:position pos:line="177" pos:column="12"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="178" pos:column="3">*<pos:position pos:line="178" pos:column="4"/></operator><name pos:line="178" pos:column="4">elen<pos:position pos:line="178" pos:column="8"/></name> <operator pos:line="178" pos:column="9">=<pos:position pos:line="178" pos:column="10"/></operator> <name pos:line="178" pos:column="11">buflen<pos:position pos:line="178" pos:column="17"/></name> <operator pos:line="178" pos:column="18">+<pos:position pos:line="178" pos:column="19"/></operator> <literal type="number" pos:line="178" pos:column="20">1<pos:position pos:line="178" pos:column="21"/></literal></expr>;<pos:position pos:line="178" pos:column="22"/></expr_stmt>
  <return pos:line="179" pos:column="3">return <expr><name pos:line="179" pos:column="10">ret<pos:position pos:line="179" pos:column="13"/></name></expr>;<pos:position pos:line="179" pos:column="14"/></return>
}<pos:position pos:line="180" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_2025_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cmd_start<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">IMAP_DATA<pos:position pos:line="1" pos:column="32"/></name><modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type> <name pos:line="1" pos:column="34">idata<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="53">cmdstr<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">flags<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">rc<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">idata<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">status<pos:position pos:line="5" pos:column="20"/></name></name> <operator pos:line="5" pos:column="21">==<pos:position pos:line="5" pos:column="23"/></operator> <name pos:line="5" pos:column="24">IMAP_FATAL<pos:position pos:line="5" pos:column="34"/></name></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35">
  <block pos:line="6" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">cmd_handle_fatal<pos:position pos:line="7" pos:column="21"/></name> <argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">idata<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">-<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">1<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">cmdstr<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&amp;&amp;<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="17">(<pos:position pos:line="11" pos:column="18"/></operator><operator pos:line="11" pos:column="18">(<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">rc<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <call><name pos:line="11" pos:column="24">cmd_queue<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">idata<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">cmdstr<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">flags<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call><operator pos:line="11" pos:column="56">)<pos:position pos:line="11" pos:column="57"/></operator> <operator pos:line="11" pos:column="58">&lt;<pos:position pos:line="11" pos:column="62"/></operator> <literal type="number" pos:line="11" pos:column="60">0<pos:position pos:line="11" pos:column="61"/></literal><operator pos:line="11" pos:column="61">)<pos:position pos:line="11" pos:column="62"/></operator></expr>)<pos:position pos:line="11" pos:column="63"/></condition><then pos:line="11" pos:column="63">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">rc<pos:position pos:line="12" pos:column="14"/></name></expr>;<pos:position pos:line="12" pos:column="15"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">flags<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">&amp;<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="15">IMAP_CMD_QUEUE<pos:position pos:line="14" pos:column="29"/></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>;<pos:position pos:line="15" pos:column="14"/></return></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">idata<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">cmdbuf<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">dptr<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">==<pos:position pos:line="17" pos:column="29"/></operator> <name><name pos:line="17" pos:column="30">idata<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">cmdbuf<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">data<pos:position pos:line="17" pos:column="49"/></name></name></expr>)<pos:position pos:line="17" pos:column="50"/></condition><then pos:line="17" pos:column="50">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">IMAP_CMD_BAD<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">rc<pos:position pos:line="20" pos:column="5"/></name> <operator pos:line="20" pos:column="6">=<pos:position pos:line="20" pos:column="7"/></operator> <call><name pos:line="20" pos:column="8">mutt_socket_write_d<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><name><name pos:line="20" pos:column="29">idata<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">conn<pos:position pos:line="20" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="42">idata<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">cmdbuf<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">-&gt;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="57">data<pos:position pos:line="20" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="63">-<pos:position pos:line="20" pos:column="64"/></operator><literal type="number" pos:line="20" pos:column="64">1<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>,
                            <argument><expr><ternary><condition><expr><name pos:line="21" pos:column="29">flags<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">&amp;<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="37">IMAP_CMD_PASS<pos:position pos:line="21" pos:column="50"/></name></expr> ?<pos:position pos:line="21" pos:column="52"/></condition><then pos:line="21" pos:column="52"> <expr><name pos:line="21" pos:column="53">IMAP_LOG_PASS<pos:position pos:line="21" pos:column="66"/></name></expr> <pos:position pos:line="21" pos:column="67"/></then><else pos:line="21" pos:column="67">: <expr><name pos:line="21" pos:column="69">IMAP_LOG_CMD<pos:position pos:line="21" pos:column="81"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">idata<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">cmdbuf<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">dptr<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name><name pos:line="22" pos:column="25">idata<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">cmdbuf<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">data<pos:position pos:line="22" pos:column="44"/></name></name></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* unidle when command queue is flushed */</comment>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name><name pos:line="25" pos:column="7">idata<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">state<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">==<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">IMAP_IDLE<pos:position pos:line="25" pos:column="32"/></name></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="5">idata<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">state<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">IMAP_SELECTED<pos:position pos:line="26" pos:column="33"/></name></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt></block></then></if>

  <return pos:line="28" pos:column="3">return <expr><ternary><condition><expr><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">rc<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">&lt;<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal><operator pos:line="28" pos:column="17">)<pos:position pos:line="28" pos:column="18"/></operator></expr> ?<pos:position pos:line="28" pos:column="20"/></condition><then pos:line="28" pos:column="20"> <expr><name pos:line="28" pos:column="21">IMAP_CMD_BAD<pos:position pos:line="28" pos:column="33"/></name></expr> <pos:position pos:line="28" pos:column="34"/></then><else pos:line="28" pos:column="34">: <expr><literal type="number" pos:line="28" pos:column="36">0<pos:position pos:line="28" pos:column="37"/></literal></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="38"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

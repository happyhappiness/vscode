<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_653_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_builtin_editor<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">HEADER<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">msg<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">HEADER<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">cur<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">buf<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">bufmax<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="19">buflen<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">tmp<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><name pos:line="5" pos:column="12">LONG_STRING<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">abort<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">done<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">p<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">scrollok<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">stdscr<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="21">TRUE<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">be_edit_header<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">msg<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">env<pos:position pos:line="13" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">addstr<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><call><name pos:line="15" pos:column="11">_<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><literal type="string" pos:line="15" pos:column="13">"(End message with a . on a line by itself)\n"<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>

  <expr_stmt><expr><name pos:line="17" pos:column="3">buf<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">be_snarf_file<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">path<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">buf<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="35">&amp;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="36">bufmax<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="44">&amp;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="45">buflen<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="53">0<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="19" pos:column="3">tmp<pos:position pos:line="19" pos:column="6"/></name><index pos:line="19" pos:column="6">[<expr><literal type="number" pos:line="19" pos:column="7">0<pos:position pos:line="19" pos:column="8"/></literal></expr>]<pos:position pos:line="19" pos:column="9"/></index></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt>
  <while pos:line="20" pos:column="3">while <condition pos:line="20" pos:column="9">(<expr><operator pos:line="20" pos:column="10">!<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">done<pos:position pos:line="20" pos:column="15"/></name></expr>)<pos:position pos:line="20" pos:column="16"/></condition>
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">mutt_enter_string<pos:position pos:line="22" pos:column="26"/></name> <argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">tmp<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="33">sizeof <argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">tmp<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="47">0<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="50">0<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call> <operator pos:line="22" pos:column="53">==<pos:position pos:line="22" pos:column="55"/></operator> <operator pos:line="22" pos:column="56">-<pos:position pos:line="22" pos:column="57"/></operator><literal type="number" pos:line="22" pos:column="57">1<pos:position pos:line="22" pos:column="58"/></literal></expr>)<pos:position pos:line="22" pos:column="59"/></condition><then pos:line="22" pos:column="59">
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">tmp<pos:position pos:line="24" pos:column="10"/></name><index pos:line="24" pos:column="10">[<expr><literal type="number" pos:line="24" pos:column="11">0<pos:position pos:line="24" pos:column="12"/></literal></expr>]<pos:position pos:line="24" pos:column="13"/></index></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt>
      <continue pos:line="25" pos:column="7">continue;<pos:position pos:line="25" pos:column="16"/></continue>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">addch<pos:position pos:line="27" pos:column="10"/></name> <argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="char" pos:line="27" pos:column="12">'\n'<pos:position pos:line="27" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">EscChar<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">&amp;&amp;<pos:position pos:line="29" pos:column="27"/></operator> <name><name pos:line="29" pos:column="20">tmp<pos:position pos:line="29" pos:column="23"/></name><index pos:line="29" pos:column="23">[<expr><literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>]<pos:position pos:line="29" pos:column="26"/></index></name> <operator pos:line="29" pos:column="27">==<pos:position pos:line="29" pos:column="29"/></operator> <name><name pos:line="29" pos:column="30">EscChar<pos:position pos:line="29" pos:column="37"/></name><index pos:line="29" pos:column="37">[<expr><literal type="number" pos:line="29" pos:column="38">0<pos:position pos:line="29" pos:column="39"/></literal></expr>]<pos:position pos:line="29" pos:column="40"/></index></name> <operator pos:line="29" pos:column="41">&amp;&amp;<pos:position pos:line="29" pos:column="51"/></operator> <name><name pos:line="29" pos:column="44">tmp<pos:position pos:line="29" pos:column="47"/></name><index pos:line="29" pos:column="47">[<expr><literal type="number" pos:line="29" pos:column="48">1<pos:position pos:line="29" pos:column="49"/></literal></expr>]<pos:position pos:line="29" pos:column="50"/></index></name> <operator pos:line="29" pos:column="51">!=<pos:position pos:line="29" pos:column="53"/></operator> <name><name pos:line="29" pos:column="54">EscChar<pos:position pos:line="29" pos:column="61"/></name><index pos:line="29" pos:column="61">[<expr><literal type="number" pos:line="29" pos:column="62">0<pos:position pos:line="29" pos:column="63"/></literal></expr>]<pos:position pos:line="29" pos:column="64"/></index></name></expr>)<pos:position pos:line="29" pos:column="65"/></condition><then pos:line="29" pos:column="65">
    <block pos:line="30" pos:column="5">{
      <comment type="block" pos:line="31" pos:column="7">/* remove trailing whitespace from the line */</comment>
      <expr_stmt><expr><name pos:line="32" pos:column="7">p<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <name pos:line="32" pos:column="11">tmp<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">+<pos:position pos:line="32" pos:column="16"/></operator> <call><name pos:line="32" pos:column="17">mutt_strlen<pos:position pos:line="32" pos:column="28"/></name> <argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">tmp<pos:position pos:line="32" pos:column="33"/></name></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call> <operator pos:line="32" pos:column="35">-<pos:position pos:line="32" pos:column="36"/></operator> <literal type="number" pos:line="32" pos:column="37">1<pos:position pos:line="32" pos:column="38"/></literal></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
      <while pos:line="33" pos:column="7">while <condition pos:line="33" pos:column="13">(<expr><name pos:line="33" pos:column="14">p<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">&gt;=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="19">tmp<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&amp;&amp;<pos:position pos:line="33" pos:column="33"/></operator> <call><name pos:line="33" pos:column="26">ISSPACE<pos:position pos:line="33" pos:column="33"/></name> <argument_list pos:line="33" pos:column="34">(<argument><expr><operator pos:line="33" pos:column="35">*<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">p<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="39"/></condition>
	<block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">p<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">--<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt></block></while>

      <expr_stmt><expr><name pos:line="36" pos:column="7">p<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <name pos:line="36" pos:column="11">tmp<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">+<pos:position pos:line="36" pos:column="16"/></operator> <literal type="number" pos:line="36" pos:column="17">2<pos:position pos:line="36" pos:column="18"/></literal></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">SKIPWS<pos:position pos:line="37" pos:column="13"/></name> <argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">p<pos:position pos:line="37" pos:column="16"/></name></expr></argument>)<pos:position pos:line="37" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>

      <switch pos:line="39" pos:column="7">switch <condition pos:line="39" pos:column="14">(<expr><name><name pos:line="39" pos:column="15">tmp<pos:position pos:line="39" pos:column="18"/></name><index pos:line="39" pos:column="18">[<expr><literal type="number" pos:line="39" pos:column="19">1<pos:position pos:line="39" pos:column="20"/></literal></expr>]<pos:position pos:line="39" pos:column="21"/></index></name></expr>)<pos:position pos:line="39" pos:column="22"/></condition>
      <block pos:line="40" pos:column="7">{
	<case pos:line="41" pos:column="9">case <expr><literal type="char" pos:line="41" pos:column="14">'?'<pos:position pos:line="41" pos:column="17"/></literal></expr>:<pos:position pos:line="41" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="42" pos:column="11">addstr<pos:position pos:line="42" pos:column="17"/></name> <argument_list pos:line="42" pos:column="18">(<argument><expr><call><name pos:line="42" pos:column="19">_<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">EditorHelp1<pos:position pos:line="42" pos:column="32"/></name></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="43" pos:column="11">addstr<pos:position pos:line="43" pos:column="17"/></name> <argument_list pos:line="43" pos:column="18">(<argument><expr><call><name pos:line="43" pos:column="19">_<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">EditorHelp2<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
	  <break pos:line="44" pos:column="11">break;<pos:position pos:line="44" pos:column="17"/></break>
	<case pos:line="45" pos:column="9">case <expr><literal type="char" pos:line="45" pos:column="14">'b'<pos:position pos:line="45" pos:column="17"/></literal></expr>:<pos:position pos:line="45" pos:column="18"/></case>
	  <expr_stmt><expr><name><name pos:line="46" pos:column="11">msg<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">env<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">bcc<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <call><name pos:line="46" pos:column="27">mutt_parse_adrlist<pos:position pos:line="46" pos:column="45"/></name> <argument_list pos:line="46" pos:column="46">(<argument><expr><name><name pos:line="46" pos:column="47">msg<pos:position pos:line="46" pos:column="50"/></name><operator pos:line="46" pos:column="50">-&gt;<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="52">env<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">-&gt;<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="57">bcc<pos:position pos:line="46" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="62">p<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="47" pos:column="11">msg<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">env<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">bcc<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <call><name pos:line="47" pos:column="27">mutt_expand_aliases<pos:position pos:line="47" pos:column="46"/></name> <argument_list pos:line="47" pos:column="47">(<argument><expr><name><name pos:line="47" pos:column="48">msg<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">-&gt;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="53">env<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">-&gt;<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="58">bcc<pos:position pos:line="47" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="63"/></expr_stmt>
	  <break pos:line="48" pos:column="11">break;<pos:position pos:line="48" pos:column="17"/></break>
	<case pos:line="49" pos:column="9">case <expr><literal type="char" pos:line="49" pos:column="14">'c'<pos:position pos:line="49" pos:column="17"/></literal></expr>:<pos:position pos:line="49" pos:column="18"/></case>
	  <expr_stmt><expr><name><name pos:line="50" pos:column="11">msg<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">env<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">cc<pos:position pos:line="50" pos:column="23"/></name></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <call><name pos:line="50" pos:column="26">mutt_parse_adrlist<pos:position pos:line="50" pos:column="44"/></name> <argument_list pos:line="50" pos:column="45">(<argument><expr><name><name pos:line="50" pos:column="46">msg<pos:position pos:line="50" pos:column="49"/></name><operator pos:line="50" pos:column="49">-&gt;<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="51">env<pos:position pos:line="50" pos:column="54"/></name><operator pos:line="50" pos:column="54">-&gt;<pos:position pos:line="50" pos:column="59"/></operator><name pos:line="50" pos:column="56">cc<pos:position pos:line="50" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="60">p<pos:position pos:line="50" pos:column="61"/></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="51" pos:column="11">msg<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">env<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">-&gt;<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="21">cc<pos:position pos:line="51" pos:column="23"/></name></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <call><name pos:line="51" pos:column="26">mutt_expand_aliases<pos:position pos:line="51" pos:column="45"/></name> <argument_list pos:line="51" pos:column="46">(<argument><expr><name><name pos:line="51" pos:column="47">msg<pos:position pos:line="51" pos:column="50"/></name><operator pos:line="51" pos:column="50">-&gt;<pos:position pos:line="51" pos:column="55"/></operator><name pos:line="51" pos:column="52">env<pos:position pos:line="51" pos:column="55"/></name><operator pos:line="51" pos:column="55">-&gt;<pos:position pos:line="51" pos:column="60"/></operator><name pos:line="51" pos:column="57">cc<pos:position pos:line="51" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt>
	  <break pos:line="52" pos:column="11">break;<pos:position pos:line="52" pos:column="17"/></break>
	<case pos:line="53" pos:column="9">case <expr><literal type="char" pos:line="53" pos:column="14">'h'<pos:position pos:line="53" pos:column="17"/></literal></expr>:<pos:position pos:line="53" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="54" pos:column="11">be_edit_header<pos:position pos:line="54" pos:column="25"/></name> <argument_list pos:line="54" pos:column="26">(<argument><expr><name><name pos:line="54" pos:column="27">msg<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">-&gt;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="32">env<pos:position pos:line="54" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="37">1<pos:position pos:line="54" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
	  <break pos:line="55" pos:column="11">break;<pos:position pos:line="55" pos:column="17"/></break>
	<case pos:line="56" pos:column="9">case <expr><literal type="char" pos:line="56" pos:column="14">'F'<pos:position pos:line="56" pos:column="17"/></literal></expr>:<pos:position pos:line="56" pos:column="18"/></case>
	<case pos:line="57" pos:column="9">case <expr><literal type="char" pos:line="57" pos:column="14">'f'<pos:position pos:line="57" pos:column="17"/></literal></expr>:<pos:position pos:line="57" pos:column="18"/></case>
	<case pos:line="58" pos:column="9">case <expr><literal type="char" pos:line="58" pos:column="14">'m'<pos:position pos:line="58" pos:column="17"/></literal></expr>:<pos:position pos:line="58" pos:column="18"/></case>
	<case pos:line="59" pos:column="9">case <expr><literal type="char" pos:line="59" pos:column="14">'M'<pos:position pos:line="59" pos:column="17"/></literal></expr>:<pos:position pos:line="59" pos:column="18"/></case>
	  <if pos:line="60" pos:column="11">if <condition pos:line="60" pos:column="14">(<expr><name pos:line="60" pos:column="15">Context<pos:position pos:line="60" pos:column="22"/></name></expr>)<pos:position pos:line="60" pos:column="23"/></condition><then pos:line="60" pos:column="23">
	  <block pos:line="61" pos:column="11">{
	    <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><operator pos:line="62" pos:column="17">!<pos:position pos:line="62" pos:column="18"/></operator><operator pos:line="62" pos:column="18">*<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">p<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">&amp;&amp;<pos:position pos:line="62" pos:column="31"/></operator> <name pos:line="62" pos:column="24">cur<pos:position pos:line="62" pos:column="27"/></name></expr>)<pos:position pos:line="62" pos:column="28"/></condition><then pos:line="62" pos:column="28">
 	    <block pos:line="63" pos:column="13">{
	      <comment type="block" pos:line="64" pos:column="15">/* include the current message */</comment>
	      <expr_stmt><expr><name pos:line="65" pos:column="15">p<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <name pos:line="65" pos:column="19">tmp<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">+<pos:position pos:line="65" pos:column="24"/></operator> <call><name pos:line="65" pos:column="25">mutt_strlen<pos:position pos:line="65" pos:column="36"/></name> <argument_list pos:line="65" pos:column="37">(<argument><expr><name pos:line="65" pos:column="38">tmp<pos:position pos:line="65" pos:column="41"/></name></expr></argument>)<pos:position pos:line="65" pos:column="42"/></argument_list></call> <operator pos:line="65" pos:column="43">+<pos:position pos:line="65" pos:column="44"/></operator> <literal type="number" pos:line="65" pos:column="45">1<pos:position pos:line="65" pos:column="46"/></literal></expr>;<pos:position pos:line="65" pos:column="47"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="66" pos:column="15">snprintf<pos:position pos:line="66" pos:column="23"/></name> <argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">tmp<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">+<pos:position pos:line="66" pos:column="30"/></operator> <call><name pos:line="66" pos:column="31">mutt_strlen<pos:position pos:line="66" pos:column="42"/></name> <argument_list pos:line="66" pos:column="43">(<argument><expr><name pos:line="66" pos:column="44">tmp<pos:position pos:line="66" pos:column="47"/></name></expr></argument>)<pos:position pos:line="66" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="50">sizeof <argument_list pos:line="66" pos:column="57">(<argument><expr><name pos:line="66" pos:column="58">tmp<pos:position pos:line="66" pos:column="61"/></name></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></sizeof> <operator pos:line="66" pos:column="63">-<pos:position pos:line="66" pos:column="64"/></operator> <call><name pos:line="66" pos:column="65">mutt_strlen<pos:position pos:line="66" pos:column="76"/></name> <argument_list pos:line="66" pos:column="77">(<argument><expr><name pos:line="66" pos:column="78">tmp<pos:position pos:line="66" pos:column="81"/></name></expr></argument>)<pos:position pos:line="66" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="84">" %d"<pos:position pos:line="66" pos:column="89"/></literal></expr></argument>,
								<argument><expr><name><name pos:line="67" pos:column="65">cur<pos:position pos:line="67" pos:column="68"/></name><operator pos:line="67" pos:column="68">-&gt;<pos:position pos:line="67" pos:column="73"/></operator><name pos:line="67" pos:column="70">msgno<pos:position pos:line="67" pos:column="75"/></name></name> <operator pos:line="67" pos:column="76">+<pos:position pos:line="67" pos:column="77"/></operator> <literal type="number" pos:line="67" pos:column="78">1<pos:position pos:line="67" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="81"/></expr_stmt>
	    }<pos:position pos:line="68" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><name pos:line="69" pos:column="13">buf<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <call><name pos:line="69" pos:column="19">be_include_messages<pos:position pos:line="69" pos:column="38"/></name> <argument_list pos:line="69" pos:column="39">(<argument><expr><name pos:line="69" pos:column="40">p<pos:position pos:line="69" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="43">buf<pos:position pos:line="69" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="48">&amp;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="49">bufmax<pos:position pos:line="69" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="57">&amp;<pos:position pos:line="69" pos:column="62"/></operator><name pos:line="69" pos:column="58">buflen<pos:position pos:line="69" pos:column="64"/></name></expr></argument>,
				       <argument><expr><operator pos:line="70" pos:column="40">(<pos:position pos:line="70" pos:column="41"/></operator><call><name pos:line="70" pos:column="41">ascii_tolower<pos:position pos:line="70" pos:column="54"/></name> <argument_list pos:line="70" pos:column="55">(<argument><expr><name><name pos:line="70" pos:column="56">tmp<pos:position pos:line="70" pos:column="59"/></name><index pos:line="70" pos:column="59">[<expr><literal type="number" pos:line="70" pos:column="60">1<pos:position pos:line="70" pos:column="61"/></literal></expr>]<pos:position pos:line="70" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="63"/></argument_list></call> <operator pos:line="70" pos:column="64">==<pos:position pos:line="70" pos:column="66"/></operator> <literal type="char" pos:line="70" pos:column="67">'m'<pos:position pos:line="70" pos:column="70"/></literal><operator pos:line="70" pos:column="70">)<pos:position pos:line="70" pos:column="71"/></operator></expr></argument>,
				       <argument><expr><operator pos:line="71" pos:column="40">(<pos:position pos:line="71" pos:column="41"/></operator><call><name pos:line="71" pos:column="41">ascii_isupper<pos:position pos:line="71" pos:column="54"/></name> <argument_list pos:line="71" pos:column="55">(<argument><expr><operator pos:line="71" pos:column="56">(<pos:position pos:line="71" pos:column="57"/></operator><name pos:line="71" pos:column="57">unsigned<pos:position pos:line="71" pos:column="65"/></name> <name pos:line="71" pos:column="66">char<pos:position pos:line="71" pos:column="70"/></name><operator pos:line="71" pos:column="70">)<pos:position pos:line="71" pos:column="71"/></operator> <name><name pos:line="71" pos:column="72">tmp<pos:position pos:line="71" pos:column="75"/></name><index pos:line="71" pos:column="75">[<expr><literal type="number" pos:line="71" pos:column="76">1<pos:position pos:line="71" pos:column="77"/></literal></expr>]<pos:position pos:line="71" pos:column="78"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="79"/></argument_list></call><operator pos:line="71" pos:column="79">)<pos:position pos:line="71" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="82"/></expr_stmt>
	  }<pos:position pos:line="72" pos:column="12"/></block></then>
	  <else pos:line="73" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="13">addstr<pos:position pos:line="74" pos:column="19"/></name> <argument_list pos:line="74" pos:column="20">(<argument><expr><call><name pos:line="74" pos:column="21">_<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><literal type="string" pos:line="74" pos:column="23">"No mailbox.\n"<pos:position pos:line="74" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt></block></else></if>
	  <break pos:line="75" pos:column="11">break;<pos:position pos:line="75" pos:column="17"/></break>
	<case pos:line="76" pos:column="9">case <expr><literal type="char" pos:line="76" pos:column="14">'p'<pos:position pos:line="76" pos:column="17"/></literal></expr>:<pos:position pos:line="76" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="77" pos:column="11">addstr<pos:position pos:line="77" pos:column="17"/></name> <argument_list pos:line="77" pos:column="18">(<argument><expr><literal type="string" pos:line="77" pos:column="19">"-----\n"<pos:position pos:line="77" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="30"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="78" pos:column="11">addstr<pos:position pos:line="78" pos:column="17"/></name> <argument_list pos:line="78" pos:column="18">(<argument><expr><call><name pos:line="78" pos:column="19">_<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><literal type="string" pos:line="78" pos:column="21">"Message contains:\n"<pos:position pos:line="78" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="45"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="79" pos:column="11">be_print_header<pos:position pos:line="79" pos:column="26"/></name> <argument_list pos:line="79" pos:column="27">(<argument><expr><name><name pos:line="79" pos:column="28">msg<pos:position pos:line="79" pos:column="31"/></name><operator pos:line="79" pos:column="31">-&gt;<pos:position pos:line="79" pos:column="36"/></operator><name pos:line="79" pos:column="33">env<pos:position pos:line="79" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="38"/></expr_stmt>
	  <for pos:line="80" pos:column="11">for <control pos:line="80" pos:column="15">(<init><expr><name pos:line="80" pos:column="16">i<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <literal type="number" pos:line="80" pos:column="20">0<pos:position pos:line="80" pos:column="21"/></literal></expr>;<pos:position pos:line="80" pos:column="22"/></init> <condition><expr><name pos:line="80" pos:column="23">i<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">&lt;<pos:position pos:line="80" pos:column="29"/></operator> <name pos:line="80" pos:column="27">buflen<pos:position pos:line="80" pos:column="33"/></name></expr>;<pos:position pos:line="80" pos:column="34"/></condition> <incr><expr><name pos:line="80" pos:column="35">i<pos:position pos:line="80" pos:column="36"/></name><operator pos:line="80" pos:column="36">++<pos:position pos:line="80" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="80" pos:column="39"/></control>
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="13">addstr<pos:position pos:line="81" pos:column="19"/></name> <argument_list pos:line="81" pos:column="20">(<argument><expr><name><name pos:line="81" pos:column="21">buf<pos:position pos:line="81" pos:column="24"/></name><index pos:line="81" pos:column="24">[<expr><name pos:line="81" pos:column="25">i<pos:position pos:line="81" pos:column="26"/></name></expr>]<pos:position pos:line="81" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="29"/></expr_stmt></block></for>
          <comment type="block" pos:line="82" pos:column="11">/* L10N:
             This entry is shown AFTER the message content,
             not IN the middle of the content.
             So it doesn't mean "(message will continue)"
             but means "(press any key to continue using mutt)". */</comment>
	  <expr_stmt><expr><call><name pos:line="87" pos:column="11">addstr<pos:position pos:line="87" pos:column="17"/></name> <argument_list pos:line="87" pos:column="18">(<argument><expr><call><name pos:line="87" pos:column="19">_<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><literal type="string" pos:line="87" pos:column="21">"(continue)\n"<pos:position pos:line="87" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="38"/></expr_stmt>
	  <break pos:line="88" pos:column="11">break;<pos:position pos:line="88" pos:column="17"/></break>
	<case pos:line="89" pos:column="9">case <expr><literal type="char" pos:line="89" pos:column="14">'q'<pos:position pos:line="89" pos:column="17"/></literal></expr>:<pos:position pos:line="89" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="90" pos:column="11">done<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <literal type="number" pos:line="90" pos:column="18">1<pos:position pos:line="90" pos:column="19"/></literal></expr>;<pos:position pos:line="90" pos:column="20"/></expr_stmt>
	  <break pos:line="91" pos:column="11">break;<pos:position pos:line="91" pos:column="17"/></break>
	<case pos:line="92" pos:column="9">case <expr><literal type="char" pos:line="92" pos:column="14">'r'<pos:position pos:line="92" pos:column="17"/></literal></expr>:<pos:position pos:line="92" pos:column="18"/></case>
	  <if pos:line="93" pos:column="11">if <condition pos:line="93" pos:column="14">(<expr><operator pos:line="93" pos:column="15">*<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="16">p<pos:position pos:line="93" pos:column="17"/></name></expr>)<pos:position pos:line="93" pos:column="18"/></condition><then pos:line="93" pos:column="18">
          <block pos:line="94" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="95" pos:column="13">strncpy<pos:position pos:line="95" pos:column="20"/></name><argument_list pos:line="95" pos:column="20">(<argument><expr><name pos:line="95" pos:column="21">tmp<pos:position pos:line="95" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="26">p<pos:position pos:line="95" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="29">sizeof<argument_list pos:line="95" pos:column="35">(<argument><expr><name pos:line="95" pos:column="36">tmp<pos:position pos:line="95" pos:column="39"/></name></expr></argument>)<pos:position pos:line="95" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="42"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="96" pos:column="13">mutt_expand_path<pos:position pos:line="96" pos:column="29"/></name><argument_list pos:line="96" pos:column="29">(<argument><expr><name pos:line="96" pos:column="30">tmp<pos:position pos:line="96" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="35">sizeof<argument_list pos:line="96" pos:column="41">(<argument><expr><name pos:line="96" pos:column="42">tmp<pos:position pos:line="96" pos:column="45"/></name></expr></argument>)<pos:position pos:line="96" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="48"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="97" pos:column="13">buf<pos:position pos:line="97" pos:column="16"/></name> <operator pos:line="97" pos:column="17">=<pos:position pos:line="97" pos:column="18"/></operator> <call><name pos:line="97" pos:column="19">be_snarf_file<pos:position pos:line="97" pos:column="32"/></name> <argument_list pos:line="97" pos:column="33">(<argument><expr><name pos:line="97" pos:column="34">tmp<pos:position pos:line="97" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="39">buf<pos:position pos:line="97" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="44">&amp;<pos:position pos:line="97" pos:column="49"/></operator><name pos:line="97" pos:column="45">bufmax<pos:position pos:line="97" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="53">&amp;<pos:position pos:line="97" pos:column="58"/></operator><name pos:line="97" pos:column="54">buflen<pos:position pos:line="97" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="62">1<pos:position pos:line="97" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="65"/></expr_stmt>
          }<pos:position pos:line="98" pos:column="12"/></block></then>
	  <else pos:line="99" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="13">addstr<pos:position pos:line="100" pos:column="19"/></name> <argument_list pos:line="100" pos:column="20">(<argument><expr><call><name pos:line="100" pos:column="21">_<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">(<argument><expr><literal type="string" pos:line="100" pos:column="23">"missing filename.\n"<pos:position pos:line="100" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="47"/></expr_stmt></block></else></if>
	  <break pos:line="101" pos:column="11">break;<pos:position pos:line="101" pos:column="17"/></break>
	<case pos:line="102" pos:column="9">case <expr><literal type="char" pos:line="102" pos:column="14">'s'<pos:position pos:line="102" pos:column="17"/></literal></expr>:<pos:position pos:line="102" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="103" pos:column="11">mutt_str_replace<pos:position pos:line="103" pos:column="27"/></name> <argument_list pos:line="103" pos:column="28">(<argument><expr><operator pos:line="103" pos:column="29">&amp;<pos:position pos:line="103" pos:column="34"/></operator><name><name pos:line="103" pos:column="30">msg<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">-&gt;<pos:position pos:line="103" pos:column="38"/></operator><name pos:line="103" pos:column="35">env<pos:position pos:line="103" pos:column="38"/></name><operator pos:line="103" pos:column="38">-&gt;<pos:position pos:line="103" pos:column="43"/></operator><name pos:line="103" pos:column="40">subject<pos:position pos:line="103" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="49">p<pos:position pos:line="103" pos:column="50"/></name></expr></argument>)<pos:position pos:line="103" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="52"/></expr_stmt>
	  <break pos:line="104" pos:column="11">break;<pos:position pos:line="104" pos:column="17"/></break>
	<case pos:line="105" pos:column="9">case <expr><literal type="char" pos:line="105" pos:column="14">'t'<pos:position pos:line="105" pos:column="17"/></literal></expr>:<pos:position pos:line="105" pos:column="18"/></case>
	  <expr_stmt><expr><name><name pos:line="106" pos:column="11">msg<pos:position pos:line="106" pos:column="14"/></name><operator pos:line="106" pos:column="14">-&gt;<pos:position pos:line="106" pos:column="19"/></operator><name pos:line="106" pos:column="16">env<pos:position pos:line="106" pos:column="19"/></name><operator pos:line="106" pos:column="19">-&gt;<pos:position pos:line="106" pos:column="24"/></operator><name pos:line="106" pos:column="21">to<pos:position pos:line="106" pos:column="23"/></name></name> <operator pos:line="106" pos:column="24">=<pos:position pos:line="106" pos:column="25"/></operator> <call><name pos:line="106" pos:column="26">rfc822_parse_adrlist<pos:position pos:line="106" pos:column="46"/></name> <argument_list pos:line="106" pos:column="47">(<argument><expr><name><name pos:line="106" pos:column="48">msg<pos:position pos:line="106" pos:column="51"/></name><operator pos:line="106" pos:column="51">-&gt;<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="53">env<pos:position pos:line="106" pos:column="56"/></name><operator pos:line="106" pos:column="56">-&gt;<pos:position pos:line="106" pos:column="61"/></operator><name pos:line="106" pos:column="58">to<pos:position pos:line="106" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="62">p<pos:position pos:line="106" pos:column="63"/></name></expr></argument>)<pos:position pos:line="106" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="65"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="107" pos:column="11">msg<pos:position pos:line="107" pos:column="14"/></name><operator pos:line="107" pos:column="14">-&gt;<pos:position pos:line="107" pos:column="19"/></operator><name pos:line="107" pos:column="16">env<pos:position pos:line="107" pos:column="19"/></name><operator pos:line="107" pos:column="19">-&gt;<pos:position pos:line="107" pos:column="24"/></operator><name pos:line="107" pos:column="21">to<pos:position pos:line="107" pos:column="23"/></name></name> <operator pos:line="107" pos:column="24">=<pos:position pos:line="107" pos:column="25"/></operator> <call><name pos:line="107" pos:column="26">mutt_expand_aliases<pos:position pos:line="107" pos:column="45"/></name> <argument_list pos:line="107" pos:column="46">(<argument><expr><name><name pos:line="107" pos:column="47">msg<pos:position pos:line="107" pos:column="50"/></name><operator pos:line="107" pos:column="50">-&gt;<pos:position pos:line="107" pos:column="55"/></operator><name pos:line="107" pos:column="52">env<pos:position pos:line="107" pos:column="55"/></name><operator pos:line="107" pos:column="55">-&gt;<pos:position pos:line="107" pos:column="60"/></operator><name pos:line="107" pos:column="57">to<pos:position pos:line="107" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="61"/></expr_stmt>
	  <break pos:line="108" pos:column="11">break;<pos:position pos:line="108" pos:column="17"/></break>
	<case pos:line="109" pos:column="9">case <expr><literal type="char" pos:line="109" pos:column="14">'u'<pos:position pos:line="109" pos:column="17"/></literal></expr>:<pos:position pos:line="109" pos:column="18"/></case>
	  <if pos:line="110" pos:column="11">if <condition pos:line="110" pos:column="14">(<expr><name pos:line="110" pos:column="15">buflen<pos:position pos:line="110" pos:column="21"/></name></expr>)<pos:position pos:line="110" pos:column="22"/></condition><then pos:line="110" pos:column="22">
	  <block pos:line="111" pos:column="11">{
	    <expr_stmt><expr><name pos:line="112" pos:column="13">buflen<pos:position pos:line="112" pos:column="19"/></name><operator pos:line="112" pos:column="19">--<pos:position pos:line="112" pos:column="21"/></operator></expr>;<pos:position pos:line="112" pos:column="22"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="113" pos:column="13">strfcpy<pos:position pos:line="113" pos:column="20"/></name> <argument_list pos:line="113" pos:column="21">(<argument><expr><name pos:line="113" pos:column="22">tmp<pos:position pos:line="113" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="27">buf<pos:position pos:line="113" pos:column="30"/></name><index pos:line="113" pos:column="30">[<expr><name pos:line="113" pos:column="31">buflen<pos:position pos:line="113" pos:column="37"/></name></expr>]<pos:position pos:line="113" pos:column="38"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="40">sizeof <argument_list pos:line="113" pos:column="47">(<argument><expr><name pos:line="113" pos:column="48">tmp<pos:position pos:line="113" pos:column="51"/></name></expr></argument>)<pos:position pos:line="113" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="113" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="54"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="114" pos:column="13">tmp<pos:position pos:line="114" pos:column="16"/></name><index pos:line="114" pos:column="16">[<expr><call><name pos:line="114" pos:column="17">mutt_strlen<pos:position pos:line="114" pos:column="28"/></name> <argument_list pos:line="114" pos:column="29">(<argument><expr><name pos:line="114" pos:column="30">tmp<pos:position pos:line="114" pos:column="33"/></name></expr></argument>)<pos:position pos:line="114" pos:column="34"/></argument_list></call><operator pos:line="114" pos:column="34">-<pos:position pos:line="114" pos:column="35"/></operator><literal type="number" pos:line="114" pos:column="35">1<pos:position pos:line="114" pos:column="36"/></literal></expr>]<pos:position pos:line="114" pos:column="37"/></index></name> <operator pos:line="114" pos:column="38">=<pos:position pos:line="114" pos:column="39"/></operator> <literal type="number" pos:line="114" pos:column="40">0<pos:position pos:line="114" pos:column="41"/></literal></expr>;<pos:position pos:line="114" pos:column="42"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="115" pos:column="13">FREE<pos:position pos:line="115" pos:column="17"/></name> <argument_list pos:line="115" pos:column="18">(<argument><expr><operator pos:line="115" pos:column="19">&amp;<pos:position pos:line="115" pos:column="24"/></operator><name><name pos:line="115" pos:column="20">buf<pos:position pos:line="115" pos:column="23"/></name><index pos:line="115" pos:column="23">[<expr><name pos:line="115" pos:column="24">buflen<pos:position pos:line="115" pos:column="30"/></name></expr>]<pos:position pos:line="115" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="115" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="33"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="116" pos:column="13">buf<pos:position pos:line="116" pos:column="16"/></name><index pos:line="116" pos:column="16">[<expr><name pos:line="116" pos:column="17">buflen<pos:position pos:line="116" pos:column="23"/></name></expr>]<pos:position pos:line="116" pos:column="24"/></index></name> <operator pos:line="116" pos:column="25">=<pos:position pos:line="116" pos:column="26"/></operator> <name pos:line="116" pos:column="27">NULL<pos:position pos:line="116" pos:column="31"/></name></expr>;<pos:position pos:line="116" pos:column="32"/></expr_stmt>
	    <continue pos:line="117" pos:column="13">continue;<pos:position pos:line="117" pos:column="22"/></continue>
	  }<pos:position pos:line="118" pos:column="12"/></block></then>
	  <else pos:line="119" pos:column="11">else
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="120" pos:column="13">addstr<pos:position pos:line="120" pos:column="19"/></name> <argument_list pos:line="120" pos:column="20">(<argument><expr><call><name pos:line="120" pos:column="21">_<pos:position pos:line="120" pos:column="22"/></name><argument_list pos:line="120" pos:column="22">(<argument><expr><literal type="string" pos:line="120" pos:column="23">"No lines in message.\n"<pos:position pos:line="120" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="120" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="50"/></expr_stmt></block></else></if>
	  <break pos:line="121" pos:column="11">break;<pos:position pos:line="121" pos:column="17"/></break>

	<case pos:line="123" pos:column="9">case <expr><literal type="char" pos:line="123" pos:column="14">'e'<pos:position pos:line="123" pos:column="17"/></literal></expr>:<pos:position pos:line="123" pos:column="18"/></case>
	<case pos:line="124" pos:column="9">case <expr><literal type="char" pos:line="124" pos:column="14">'v'<pos:position pos:line="124" pos:column="17"/></literal></expr>:<pos:position pos:line="124" pos:column="18"/></case>
	  <if pos:line="125" pos:column="11">if <condition pos:line="125" pos:column="14">(<expr><call><name pos:line="125" pos:column="15">be_barf_file<pos:position pos:line="125" pos:column="27"/></name> <argument_list pos:line="125" pos:column="28">(<argument><expr><name pos:line="125" pos:column="29">path<pos:position pos:line="125" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="35">buf<pos:position pos:line="125" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="40">buflen<pos:position pos:line="125" pos:column="46"/></name></expr></argument>)<pos:position pos:line="125" pos:column="47"/></argument_list></call> <operator pos:line="125" pos:column="48">==<pos:position pos:line="125" pos:column="50"/></operator> <literal type="number" pos:line="125" pos:column="51">0<pos:position pos:line="125" pos:column="52"/></literal></expr>)<pos:position pos:line="125" pos:column="53"/></condition><then pos:line="125" pos:column="53">
	  <block pos:line="126" pos:column="11">{
	    <decl_stmt><decl><type><name pos:line="127" pos:column="13">char<pos:position pos:line="127" pos:column="17"/></name> <modifier pos:line="127" pos:column="18">*<pos:position pos:line="127" pos:column="19"/></modifier></type><name pos:line="127" pos:column="19">tag<pos:position pos:line="127" pos:column="22"/></name></decl>, <modifier pos:line="127" pos:column="24">*<pos:position pos:line="127" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="127" pos:column="25">err<pos:position pos:line="127" pos:column="28"/></name></decl>;<pos:position pos:line="127" pos:column="29"/></decl_stmt>
	    <expr_stmt><expr><call><name pos:line="128" pos:column="13">be_free_memory<pos:position pos:line="128" pos:column="27"/></name> <argument_list pos:line="128" pos:column="28">(<argument><expr><name pos:line="128" pos:column="29">buf<pos:position pos:line="128" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="34">buflen<pos:position pos:line="128" pos:column="40"/></name></expr></argument>)<pos:position pos:line="128" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="42"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="129" pos:column="13">buf<pos:position pos:line="129" pos:column="16"/></name> <operator pos:line="129" pos:column="17">=<pos:position pos:line="129" pos:column="18"/></operator> <name pos:line="129" pos:column="19">NULL<pos:position pos:line="129" pos:column="23"/></name></expr>;<pos:position pos:line="129" pos:column="24"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="130" pos:column="13">bufmax<pos:position pos:line="130" pos:column="19"/></name> <operator pos:line="130" pos:column="20">=<pos:position pos:line="130" pos:column="21"/></operator> <name pos:line="130" pos:column="22">buflen<pos:position pos:line="130" pos:column="28"/></name> <operator pos:line="130" pos:column="29">=<pos:position pos:line="130" pos:column="30"/></operator> <literal type="number" pos:line="130" pos:column="31">0<pos:position pos:line="130" pos:column="32"/></literal></expr>;<pos:position pos:line="130" pos:column="33"/></expr_stmt>

	    <if pos:line="132" pos:column="13">if <condition pos:line="132" pos:column="16">(<expr><call><name pos:line="132" pos:column="17">option<pos:position pos:line="132" pos:column="23"/></name> <argument_list pos:line="132" pos:column="24">(<argument><expr><name pos:line="132" pos:column="25">OPTEDITHDRS<pos:position pos:line="132" pos:column="36"/></name></expr></argument>)<pos:position pos:line="132" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="38"/></condition><then pos:line="132" pos:column="38">
	    <block pos:line="133" pos:column="13">{
	      <expr_stmt><expr><call><name pos:line="134" pos:column="15">mutt_env_to_local<pos:position pos:line="134" pos:column="32"/></name> <argument_list pos:line="134" pos:column="33">(<argument><expr><name><name pos:line="134" pos:column="34">msg<pos:position pos:line="134" pos:column="37"/></name><operator pos:line="134" pos:column="37">-&gt;<pos:position pos:line="134" pos:column="42"/></operator><name pos:line="134" pos:column="39">env<pos:position pos:line="134" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="44"/></expr_stmt>
	      <expr_stmt><expr><call><name pos:line="135" pos:column="15">mutt_edit_headers<pos:position pos:line="135" pos:column="32"/></name> <argument_list pos:line="135" pos:column="33">(<argument><expr><call><name pos:line="135" pos:column="34">NONULL<pos:position pos:line="135" pos:column="40"/></name><argument_list pos:line="135" pos:column="40">(<argument><expr><name pos:line="135" pos:column="41">Visual<pos:position pos:line="135" pos:column="47"/></name></expr></argument>)<pos:position pos:line="135" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="135" pos:column="50">path<pos:position pos:line="135" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="56">msg<pos:position pos:line="135" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="61">NULL<pos:position pos:line="135" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="135" pos:column="67">0<pos:position pos:line="135" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="70"/></expr_stmt>
	      <if pos:line="136" pos:column="15">if <condition pos:line="136" pos:column="18">(<expr><call><name pos:line="136" pos:column="19">mutt_env_to_intl<pos:position pos:line="136" pos:column="35"/></name> <argument_list pos:line="136" pos:column="36">(<argument><expr><name><name pos:line="136" pos:column="37">msg<pos:position pos:line="136" pos:column="40"/></name><operator pos:line="136" pos:column="40">-&gt;<pos:position pos:line="136" pos:column="45"/></operator><name pos:line="136" pos:column="42">env<pos:position pos:line="136" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="47">&amp;<pos:position pos:line="136" pos:column="52"/></operator><name pos:line="136" pos:column="48">tag<pos:position pos:line="136" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="53">&amp;<pos:position pos:line="136" pos:column="58"/></operator><name pos:line="136" pos:column="54">err<pos:position pos:line="136" pos:column="57"/></name></expr></argument>)<pos:position pos:line="136" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="59"/></condition><then pos:line="136" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="17">printw<pos:position pos:line="137" pos:column="23"/></name> <argument_list pos:line="137" pos:column="24">(<argument><expr><call><name pos:line="137" pos:column="25">_<pos:position pos:line="137" pos:column="26"/></name><argument_list pos:line="137" pos:column="26">(<argument><expr><literal type="string" pos:line="137" pos:column="27">"Bad IDN in %s: '%s'\n"<pos:position pos:line="137" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="137" pos:column="53">tag<pos:position pos:line="137" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="58">err<pos:position pos:line="137" pos:column="61"/></name></expr></argument>)<pos:position pos:line="137" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="63"/></expr_stmt></block></then></if>
	    }<pos:position pos:line="138" pos:column="14"/></block></then>
	    <else pos:line="139" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="15">mutt_edit_file<pos:position pos:line="140" pos:column="29"/></name> <argument_list pos:line="140" pos:column="30">(<argument><expr><call><name pos:line="140" pos:column="31">NONULL<pos:position pos:line="140" pos:column="37"/></name><argument_list pos:line="140" pos:column="37">(<argument><expr><name pos:line="140" pos:column="38">Visual<pos:position pos:line="140" pos:column="44"/></name></expr></argument>)<pos:position pos:line="140" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="140" pos:column="47">path<pos:position pos:line="140" pos:column="51"/></name></expr></argument>)<pos:position pos:line="140" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="53"/></expr_stmt></block></else></if>

	    <expr_stmt><expr><name pos:line="142" pos:column="13">buf<pos:position pos:line="142" pos:column="16"/></name> <operator pos:line="142" pos:column="17">=<pos:position pos:line="142" pos:column="18"/></operator> <call><name pos:line="142" pos:column="19">be_snarf_file<pos:position pos:line="142" pos:column="32"/></name> <argument_list pos:line="142" pos:column="33">(<argument><expr><name pos:line="142" pos:column="34">path<pos:position pos:line="142" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="40">buf<pos:position pos:line="142" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="45">&amp;<pos:position pos:line="142" pos:column="50"/></operator><name pos:line="142" pos:column="46">bufmax<pos:position pos:line="142" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="54">&amp;<pos:position pos:line="142" pos:column="59"/></operator><name pos:line="142" pos:column="55">buflen<pos:position pos:line="142" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="63">0<pos:position pos:line="142" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="66"/></expr_stmt>

	    <expr_stmt><expr><call><name pos:line="144" pos:column="13">addstr<pos:position pos:line="144" pos:column="19"/></name> <argument_list pos:line="144" pos:column="20">(<argument><expr><call><name pos:line="144" pos:column="21">_<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><literal type="string" pos:line="144" pos:column="23">"(continue)\n"<pos:position pos:line="144" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="144" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="40"/></expr_stmt>
	  }<pos:position pos:line="145" pos:column="12"/></block></then></if>
	  <break pos:line="146" pos:column="11">break;<pos:position pos:line="146" pos:column="17"/></break>
	<case pos:line="147" pos:column="9">case <expr><literal type="char" pos:line="147" pos:column="14">'w'<pos:position pos:line="147" pos:column="17"/></literal></expr>:<pos:position pos:line="147" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="148" pos:column="11">be_barf_file<pos:position pos:line="148" pos:column="23"/></name> <argument_list pos:line="148" pos:column="24">(<argument><expr><ternary><condition><expr><operator pos:line="148" pos:column="25">*<pos:position pos:line="148" pos:column="26"/></operator><name pos:line="148" pos:column="26">p<pos:position pos:line="148" pos:column="27"/></name></expr> ?<pos:position pos:line="148" pos:column="29"/></condition><then pos:line="148" pos:column="29"> <expr><name pos:line="148" pos:column="30">p<pos:position pos:line="148" pos:column="31"/></name></expr> <pos:position pos:line="148" pos:column="32"/></then><else pos:line="148" pos:column="32">: <expr><name pos:line="148" pos:column="34">path<pos:position pos:line="148" pos:column="38"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="148" pos:column="40">buf<pos:position pos:line="148" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="45">buflen<pos:position pos:line="148" pos:column="51"/></name></expr></argument>)<pos:position pos:line="148" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="53"/></expr_stmt>
	  <break pos:line="149" pos:column="11">break;<pos:position pos:line="149" pos:column="17"/></break>
	<case pos:line="150" pos:column="9">case <expr><literal type="char" pos:line="150" pos:column="14">'x'<pos:position pos:line="150" pos:column="17"/></literal></expr>:<pos:position pos:line="150" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="151" pos:column="11">abort<pos:position pos:line="151" pos:column="16"/></name> <operator pos:line="151" pos:column="17">=<pos:position pos:line="151" pos:column="18"/></operator> <literal type="number" pos:line="151" pos:column="19">1<pos:position pos:line="151" pos:column="20"/></literal></expr>;<pos:position pos:line="151" pos:column="21"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="152" pos:column="11">done<pos:position pos:line="152" pos:column="15"/></name> <operator pos:line="152" pos:column="16">=<pos:position pos:line="152" pos:column="17"/></operator> <literal type="number" pos:line="152" pos:column="18">1<pos:position pos:line="152" pos:column="19"/></literal></expr>;<pos:position pos:line="152" pos:column="20"/></expr_stmt>
	  <break pos:line="153" pos:column="11">break;<pos:position pos:line="153" pos:column="17"/></break>
	<default pos:line="154" pos:column="9">default:<pos:position pos:line="154" pos:column="17"/></default>
	  <expr_stmt><expr><call><name pos:line="155" pos:column="11">printw<pos:position pos:line="155" pos:column="17"/></name> <argument_list pos:line="155" pos:column="18">(<argument><expr><call><name pos:line="155" pos:column="19">_<pos:position pos:line="155" pos:column="20"/></name><argument_list pos:line="155" pos:column="20">(<argument><expr><literal type="string" pos:line="155" pos:column="21">"%s: unknown editor command (~? for help)\n"<pos:position pos:line="155" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="155" pos:column="68">tmp<pos:position pos:line="155" pos:column="71"/></name></expr></argument>)<pos:position pos:line="155" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="73"/></expr_stmt>
	  <break pos:line="156" pos:column="11">break;<pos:position pos:line="156" pos:column="17"/></break>
      }<pos:position pos:line="157" pos:column="8"/></block></switch>
    }<pos:position pos:line="158" pos:column="6"/></block></then>
    <elseif pos:line="159" pos:column="5">else <if pos:line="159" pos:column="10">if <condition pos:line="159" pos:column="13">(<expr><call><name pos:line="159" pos:column="14">mutt_strcmp<pos:position pos:line="159" pos:column="25"/></name> <argument_list pos:line="159" pos:column="26">(<argument><expr><literal type="string" pos:line="159" pos:column="27">"."<pos:position pos:line="159" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="32">tmp<pos:position pos:line="159" pos:column="35"/></name></expr></argument>)<pos:position pos:line="159" pos:column="36"/></argument_list></call> <operator pos:line="159" pos:column="37">==<pos:position pos:line="159" pos:column="39"/></operator> <literal type="number" pos:line="159" pos:column="40">0<pos:position pos:line="159" pos:column="41"/></literal></expr>)<pos:position pos:line="159" pos:column="42"/></condition><then pos:line="159" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="160" pos:column="7">done<pos:position pos:line="160" pos:column="11"/></name> <operator pos:line="160" pos:column="12">=<pos:position pos:line="160" pos:column="13"/></operator> <literal type="number" pos:line="160" pos:column="14">1<pos:position pos:line="160" pos:column="15"/></literal></expr>;<pos:position pos:line="160" pos:column="16"/></expr_stmt></block></then></if></elseif>
    <else pos:line="161" pos:column="5">else
    <block pos:line="162" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="163" pos:column="7">safe_strcat<pos:position pos:line="163" pos:column="18"/></name> <argument_list pos:line="163" pos:column="19">(<argument><expr><name pos:line="163" pos:column="20">tmp<pos:position pos:line="163" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="163" pos:column="25">sizeof <argument_list pos:line="163" pos:column="32">(<argument><expr><name pos:line="163" pos:column="33">tmp<pos:position pos:line="163" pos:column="36"/></name></expr></argument>)<pos:position pos:line="163" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="39">"\n"<pos:position pos:line="163" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="45"/></expr_stmt>
      <if pos:line="164" pos:column="7">if <condition pos:line="164" pos:column="10">(<expr><name pos:line="164" pos:column="11">buflen<pos:position pos:line="164" pos:column="17"/></name> <operator pos:line="164" pos:column="18">==<pos:position pos:line="164" pos:column="20"/></operator> <name pos:line="164" pos:column="21">bufmax<pos:position pos:line="164" pos:column="27"/></name></expr>)<pos:position pos:line="164" pos:column="28"/></condition><then pos:line="164" pos:column="28">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="165" pos:column="9">safe_realloc<pos:position pos:line="165" pos:column="21"/></name> <argument_list pos:line="165" pos:column="22">(<argument><expr><operator pos:line="165" pos:column="23">&amp;<pos:position pos:line="165" pos:column="28"/></operator><name pos:line="165" pos:column="24">buf<pos:position pos:line="165" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="165" pos:column="29">sizeof <argument_list pos:line="165" pos:column="36">(<argument><expr><name pos:line="165" pos:column="37">char<pos:position pos:line="165" pos:column="41"/></name> <operator pos:line="165" pos:column="42">*<pos:position pos:line="165" pos:column="43"/></operator></expr></argument>)<pos:position pos:line="165" pos:column="44"/></argument_list></sizeof> <operator pos:line="165" pos:column="45">*<pos:position pos:line="165" pos:column="46"/></operator> <operator pos:line="165" pos:column="47">(<pos:position pos:line="165" pos:column="48"/></operator><name pos:line="165" pos:column="48">bufmax<pos:position pos:line="165" pos:column="54"/></name> <operator pos:line="165" pos:column="55">+=<pos:position pos:line="165" pos:column="57"/></operator> <literal type="number" pos:line="165" pos:column="58">25<pos:position pos:line="165" pos:column="60"/></literal><operator pos:line="165" pos:column="60">)<pos:position pos:line="165" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="165" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="63"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name><name pos:line="166" pos:column="7">buf<pos:position pos:line="166" pos:column="10"/></name><index pos:line="166" pos:column="10">[<expr><name pos:line="166" pos:column="11">buflen<pos:position pos:line="166" pos:column="17"/></name><operator pos:line="166" pos:column="17">++<pos:position pos:line="166" pos:column="19"/></operator></expr>]<pos:position pos:line="166" pos:column="20"/></index></name> <operator pos:line="166" pos:column="21">=<pos:position pos:line="166" pos:column="22"/></operator> <call><name pos:line="166" pos:column="23">safe_strdup<pos:position pos:line="166" pos:column="34"/></name> <argument_list pos:line="166" pos:column="35">(<argument><expr><ternary><condition><expr><name><name pos:line="166" pos:column="36">tmp<pos:position pos:line="166" pos:column="39"/></name><index pos:line="166" pos:column="39">[<expr><literal type="number" pos:line="166" pos:column="40">1<pos:position pos:line="166" pos:column="41"/></literal></expr>]<pos:position pos:line="166" pos:column="42"/></index></name> <operator pos:line="166" pos:column="43">==<pos:position pos:line="166" pos:column="45"/></operator> <literal type="char" pos:line="166" pos:column="46">'~'<pos:position pos:line="166" pos:column="49"/></literal></expr> ?<pos:position pos:line="166" pos:column="51"/></condition><then pos:line="166" pos:column="51"> <expr><name pos:line="166" pos:column="52">tmp<pos:position pos:line="166" pos:column="55"/></name> <operator pos:line="166" pos:column="56">+<pos:position pos:line="166" pos:column="57"/></operator> <literal type="number" pos:line="166" pos:column="58">1<pos:position pos:line="166" pos:column="59"/></literal></expr> <pos:position pos:line="166" pos:column="60"/></then><else pos:line="166" pos:column="60">: <expr><name pos:line="166" pos:column="62">tmp<pos:position pos:line="166" pos:column="65"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="166" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="167" pos:column="6"/></block></else></if>
    
    <expr_stmt><expr><name><name pos:line="169" pos:column="5">tmp<pos:position pos:line="169" pos:column="8"/></name><index pos:line="169" pos:column="8">[<expr><literal type="number" pos:line="169" pos:column="9">0<pos:position pos:line="169" pos:column="10"/></literal></expr>]<pos:position pos:line="169" pos:column="11"/></index></name> <operator pos:line="169" pos:column="12">=<pos:position pos:line="169" pos:column="13"/></operator> <literal type="number" pos:line="169" pos:column="14">0<pos:position pos:line="169" pos:column="15"/></literal></expr>;<pos:position pos:line="169" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="170" pos:column="4"/></block></while>

  <if pos:line="172" pos:column="3">if <condition pos:line="172" pos:column="6">(<expr><operator pos:line="172" pos:column="7">!<pos:position pos:line="172" pos:column="8"/></operator><name pos:line="172" pos:column="8">abort<pos:position pos:line="172" pos:column="13"/></name></expr>)<pos:position pos:line="172" pos:column="14"/></condition><then pos:line="172" pos:column="14"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="15">be_barf_file<pos:position pos:line="172" pos:column="27"/></name> <argument_list pos:line="172" pos:column="28">(<argument><expr><name pos:line="172" pos:column="29">path<pos:position pos:line="172" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="35">buf<pos:position pos:line="172" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="40">buflen<pos:position pos:line="172" pos:column="46"/></name></expr></argument>)<pos:position pos:line="172" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="48"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="173" pos:column="3">be_free_memory<pos:position pos:line="173" pos:column="17"/></name> <argument_list pos:line="173" pos:column="18">(<argument><expr><name pos:line="173" pos:column="19">buf<pos:position pos:line="173" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="24">buflen<pos:position pos:line="173" pos:column="30"/></name></expr></argument>)<pos:position pos:line="173" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="32"/></expr_stmt>

  <return pos:line="175" pos:column="3">return <expr><operator pos:line="175" pos:column="10">(<pos:position pos:line="175" pos:column="11"/></operator><ternary><condition><expr><name pos:line="175" pos:column="11">abort<pos:position pos:line="175" pos:column="16"/></name></expr> ?<pos:position pos:line="175" pos:column="18"/></condition><then pos:line="175" pos:column="18"> <expr><operator pos:line="175" pos:column="19">-<pos:position pos:line="175" pos:column="20"/></operator><literal type="number" pos:line="175" pos:column="20">1<pos:position pos:line="175" pos:column="21"/></literal></expr> <pos:position pos:line="175" pos:column="22"/></then><else pos:line="175" pos:column="22">: <expr><literal type="number" pos:line="175" pos:column="24">0<pos:position pos:line="175" pos:column="25"/></literal></expr></else></ternary><operator pos:line="175" pos:column="25">)<pos:position pos:line="175" pos:column="26"/></operator></expr>;<pos:position pos:line="175" pos:column="27"/></return>
}<pos:position pos:line="176" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1438_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mutt_merge_envelopes<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">ENVELOPE<pos:position pos:line="1" pos:column="35"/></name><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type> <name pos:line="1" pos:column="37">base<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">ENVELOPE<pos:position pos:line="1" pos:column="51"/></name><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="54">extra<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <comment type="block" pos:line="3" pos:column="3">/* copies each existing element if necessary, and sets the element
  * to NULL in the source so that mutt_free_envelope doesn't leave us
  * with dangling pointers. */</comment>
<cpp:define pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">define<pos:position pos:line="6" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="6" pos:column="9">MOVE_ELEM<pos:position pos:line="6" pos:column="18"/></name><parameter_list pos:line="6" pos:column="18">(<parameter><type><name pos:line="6" pos:column="19">h<pos:position pos:line="6" pos:column="20"/></name></type></parameter>)<pos:position pos:line="6" pos:column="21"/></parameter_list></cpp:macro> <cpp:value pos:line="6" pos:column="22">if (!base-&gt;h) { base-&gt;h = (*extra)-&gt;h; (*extra)-&gt;h = NULL; }<pos:position pos:line="6" pos:column="82"/></cpp:value></cpp:define>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">MOVE_ELEM<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">return_path<pos:position pos:line="7" pos:column="24"/></name></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">MOVE_ELEM<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">from<pos:position pos:line="8" pos:column="17"/></name></expr></argument>)<pos:position pos:line="8" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">MOVE_ELEM<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">to<pos:position pos:line="9" pos:column="15"/></name></expr></argument>)<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">MOVE_ELEM<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">cc<pos:position pos:line="10" pos:column="15"/></name></expr></argument>)<pos:position pos:line="10" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">MOVE_ELEM<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">bcc<pos:position pos:line="11" pos:column="16"/></name></expr></argument>)<pos:position pos:line="11" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">MOVE_ELEM<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">sender<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">MOVE_ELEM<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">reply_to<pos:position pos:line="13" pos:column="21"/></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">MOVE_ELEM<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">mail_followup_to<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">MOVE_ELEM<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">list_post<pos:position pos:line="15" pos:column="22"/></name></expr></argument>)<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">MOVE_ELEM<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">message_id<pos:position pos:line="16" pos:column="23"/></name></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">MOVE_ELEM<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">supersedes<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">MOVE_ELEM<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">date<pos:position pos:line="18" pos:column="17"/></name></expr></argument>)<pos:position pos:line="18" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">MOVE_ELEM<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">x_label<pos:position pos:line="19" pos:column="20"/></name></expr></argument>)<pos:position pos:line="19" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><operator pos:line="20" pos:column="7">!<pos:position pos:line="20" pos:column="8"/></operator><name><name pos:line="20" pos:column="8">base<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">refs_changed<pos:position pos:line="20" pos:column="26"/></name></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
  <block pos:line="21" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">MOVE_ELEM<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">references<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><name><name pos:line="24" pos:column="8">base<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">irt_changed<pos:position pos:line="24" pos:column="25"/></name></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26">
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">MOVE_ELEM<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">in_reply_to<pos:position pos:line="26" pos:column="26"/></name></expr></argument>)<pos:position pos:line="26" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>
  
  <comment type="block" pos:line="29" pos:column="3">/* real_subj is subordinate to subject */</comment>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><operator pos:line="30" pos:column="7">!<pos:position pos:line="30" pos:column="8"/></operator><name><name pos:line="30" pos:column="8">base<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">subject<pos:position pos:line="30" pos:column="21"/></name></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">base<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">subject<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name><operator pos:line="32" pos:column="21">(<pos:position pos:line="32" pos:column="22"/></operator><operator pos:line="32" pos:column="22">*<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">extra<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">)<pos:position pos:line="32" pos:column="29"/></operator><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">subject<pos:position pos:line="32" pos:column="38"/></name></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">base<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">real_subj<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name><operator pos:line="33" pos:column="23">(<pos:position pos:line="33" pos:column="24"/></operator><operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">extra<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">)<pos:position pos:line="33" pos:column="31"/></operator><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">real_subj<pos:position pos:line="33" pos:column="42"/></name></name></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">base<pos:position pos:line="34" pos:column="9"/></name><operator pos:line="34" pos:column="9">-&gt;<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="11">disp_subj<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name><operator pos:line="34" pos:column="23">(<pos:position pos:line="34" pos:column="24"/></operator><operator pos:line="34" pos:column="24">*<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">extra<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">)<pos:position pos:line="34" pos:column="31"/></operator><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">disp_subj<pos:position pos:line="34" pos:column="42"/></name></name></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="35" pos:column="5">(<pos:position pos:line="35" pos:column="6"/></operator><operator pos:line="35" pos:column="6">*<pos:position pos:line="35" pos:column="7"/></operator><name pos:line="35" pos:column="7">extra<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">)<pos:position pos:line="35" pos:column="13"/></operator><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">subject<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">NULL<pos:position pos:line="35" pos:column="29"/></name></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="36" pos:column="5">(<pos:position pos:line="36" pos:column="6"/></operator><operator pos:line="36" pos:column="6">*<pos:position pos:line="36" pos:column="7"/></operator><name pos:line="36" pos:column="7">extra<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">)<pos:position pos:line="36" pos:column="13"/></operator><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">real_subj<pos:position pos:line="36" pos:column="24"/></name></name> <operator pos:line="36" pos:column="25">=<pos:position pos:line="36" pos:column="26"/></operator> <name pos:line="36" pos:column="27">NULL<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="37" pos:column="5">(<pos:position pos:line="37" pos:column="6"/></operator><operator pos:line="37" pos:column="6">*<pos:position pos:line="37" pos:column="7"/></operator><name pos:line="37" pos:column="7">extra<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">)<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-&gt;<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="15">disp_subj<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">NULL<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="39" pos:column="3">/* spam and user headers should never be hashed, and the new envelope may
    * have better values. Use new versions regardless. */</comment>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">mutt_buffer_free<pos:position pos:line="41" pos:column="19"/></name> <argument_list pos:line="41" pos:column="20">(<argument><expr><operator pos:line="41" pos:column="21">&amp;<pos:position pos:line="41" pos:column="26"/></operator><name><name pos:line="41" pos:column="22">base<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">spam<pos:position pos:line="41" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">mutt_free_list<pos:position pos:line="42" pos:column="17"/></name> <argument_list pos:line="42" pos:column="18">(<argument><expr><operator pos:line="42" pos:column="19">&amp;<pos:position pos:line="42" pos:column="24"/></operator><name><name pos:line="42" pos:column="20">base<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">-&gt;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="26">userhdrs<pos:position pos:line="42" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">MOVE_ELEM<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">spam<pos:position pos:line="43" pos:column="17"/></name></expr></argument>)<pos:position pos:line="43" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">MOVE_ELEM<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">userhdrs<pos:position pos:line="44" pos:column="21"/></name></expr></argument>)<pos:position pos:line="44" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>
<cpp:undef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">undef<pos:position pos:line="45" pos:column="7"/></cpp:directive> <name pos:line="45" pos:column="8">MOVE_ELEM<pos:position pos:line="45" pos:column="17"/></name></cpp:undef>
  
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">mutt_free_envelope<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">extra<pos:position pos:line="47" pos:column="27"/></name></expr></argument>)<pos:position pos:line="47" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

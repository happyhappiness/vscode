<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_109_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">pop_auth_res_t<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">pop_auth_apop<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">POP_DATA<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">pop_data<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">method<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">md5_ctx<pos:position pos:line="3" pos:column="17"/></name></name></type> <name pos:line="3" pos:column="18">ctx<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">digest<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">16<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">hash<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><literal type="number" pos:line="5" pos:column="13">33<pos:position pos:line="5" pos:column="15"/></literal></expr>]<pos:position pos:line="5" pos:column="16"/></index></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buf<pos:position pos:line="6" pos:column="11"/></name><index pos:line="6" pos:column="11">[<expr><name pos:line="6" pos:column="12">LONG_STRING<pos:position pos:line="6" pos:column="23"/></name></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name><name pos:line="9" pos:column="8">pop_data<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">timestamp<pos:position pos:line="9" pos:column="27"/></name></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">POP_A_UNAVAIL<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">rfc822_valid_msgid<pos:position pos:line="12" pos:column="25"/></name> <argument_list pos:line="12" pos:column="26">(<argument><expr><name><name pos:line="12" pos:column="27">pop_data<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">timestamp<pos:position pos:line="12" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call> <operator pos:line="12" pos:column="48">&lt;<pos:position pos:line="12" pos:column="52"/></operator> <literal type="number" pos:line="12" pos:column="50">0<pos:position pos:line="12" pos:column="51"/></literal></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52">
  <block pos:line="13" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">mutt_error<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">_<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><literal type="string" pos:line="14" pos:column="18">"POP timestamp is invalid!"<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></decl>;<pos:position pos:line="14" pos:column="47"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">mutt_sleep<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><literal type="number" pos:line="15" pos:column="17">2<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">POP_A_UNAVAIL<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="19" pos:column="3">mutt_message<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">_<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><literal type="string" pos:line="19" pos:column="18">"Authenticating (APOP)..."<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></decl>;<pos:position pos:line="19" pos:column="46"/></decl_stmt>

  <comment type="block" pos:line="21" pos:column="3">/* Compute the authentication hash to send to the server */</comment>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">md5_init_ctx<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><operator pos:line="22" pos:column="17">&amp;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="18">ctx<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">md5_process_bytes<pos:position pos:line="23" pos:column="20"/></name> <argument_list pos:line="23" pos:column="21">(<argument><expr><name><name pos:line="23" pos:column="22">pop_data<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">timestamp<pos:position pos:line="23" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="43">strlen<pos:position pos:line="23" pos:column="49"/></name> <argument_list pos:line="23" pos:column="50">(<argument><expr><name><name pos:line="23" pos:column="51">pop_data<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">-&gt;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="61">timestamp<pos:position pos:line="23" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="23" pos:column="73">&amp;<pos:position pos:line="23" pos:column="78"/></operator><name pos:line="23" pos:column="74">ctx<pos:position pos:line="23" pos:column="77"/></name></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">md5_process_bytes<pos:position pos:line="24" pos:column="20"/></name> <argument_list pos:line="24" pos:column="21">(<argument><expr><name><name pos:line="24" pos:column="22">pop_data<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">conn<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">account<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">.<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="46">pass<pos:position pos:line="24" pos:column="50"/></name></name></expr></argument>,
		     <argument><expr><call><name pos:line="25" pos:column="22">strlen<pos:position pos:line="25" pos:column="28"/></name> <argument_list pos:line="25" pos:column="29">(<argument><expr><name><name pos:line="25" pos:column="30">pop_data<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">conn<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">account<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">.<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">pass<pos:position pos:line="25" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="25" pos:column="61">&amp;<pos:position pos:line="25" pos:column="66"/></operator><name pos:line="25" pos:column="62">ctx<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">md5_finish_ctx<pos:position pos:line="26" pos:column="17"/></name> <argument_list pos:line="26" pos:column="18">(<argument><expr><operator pos:line="26" pos:column="19">&amp;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="20">ctx<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="25">digest<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>

  <for pos:line="28" pos:column="3">for <control pos:line="28" pos:column="7">(<init><expr><name pos:line="28" pos:column="8">i<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></init> <condition><expr><name pos:line="28" pos:column="15">i<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">&lt;<pos:position pos:line="28" pos:column="21"/></operator> <sizeof pos:line="28" pos:column="19">sizeof <argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">digest<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></sizeof></expr>;<pos:position pos:line="28" pos:column="35"/></condition> <incr><expr><name pos:line="28" pos:column="36">i<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">++<pos:position pos:line="28" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="40"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">sprintf<pos:position pos:line="29" pos:column="12"/></name> <argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">hash<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">+<pos:position pos:line="29" pos:column="20"/></operator> <literal type="number" pos:line="29" pos:column="21">2<pos:position pos:line="29" pos:column="22"/></literal> <operator pos:line="29" pos:column="23">*<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">i<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="28">"%02x"<pos:position pos:line="29" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="36">digest<pos:position pos:line="29" pos:column="42"/></name><index pos:line="29" pos:column="42">[<expr><name pos:line="29" pos:column="43">i<pos:position pos:line="29" pos:column="44"/></name></expr>]<pos:position pos:line="29" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt></block></for>

  <comment type="block" pos:line="31" pos:column="3">/* Send APOP command to server */</comment>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">snprintf<pos:position pos:line="32" pos:column="11"/></name> <argument_list pos:line="32" pos:column="12">(<argument><expr><name pos:line="32" pos:column="13">buf<pos:position pos:line="32" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="18">sizeof <argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">buf<pos:position pos:line="32" pos:column="29"/></name></expr></argument>)<pos:position pos:line="32" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="32">"APOP %s %s\r\n"<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="50">pop_data<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">conn<pos:position pos:line="32" pos:column="64"/></name><operator pos:line="32" pos:column="64">-&gt;<pos:position pos:line="32" pos:column="69"/></operator><name pos:line="32" pos:column="66">account<pos:position pos:line="32" pos:column="73"/></name><operator pos:line="32" pos:column="73">.<pos:position pos:line="32" pos:column="74"/></operator><name pos:line="32" pos:column="74">user<pos:position pos:line="32" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="80">hash<pos:position pos:line="32" pos:column="84"/></name></expr></argument>)<pos:position pos:line="32" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="86"/></expr_stmt>

  <switch pos:line="34" pos:column="3">switch <condition pos:line="34" pos:column="10">(<expr><call><name pos:line="34" pos:column="11">pop_query<pos:position pos:line="34" pos:column="20"/></name> <argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">pop_data<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">buf<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="37">sizeof <argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">buf<pos:position pos:line="34" pos:column="48"/></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="51"/></condition>
  <block pos:line="35" pos:column="3">{
    <case pos:line="36" pos:column="5">case <expr><literal type="number" pos:line="36" pos:column="10">0<pos:position pos:line="36" pos:column="11"/></literal></expr>:<pos:position pos:line="36" pos:column="12"/></case>
      <return pos:line="37" pos:column="7">return <expr><name pos:line="37" pos:column="14">POP_A_SUCCESS<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></return>
    <case pos:line="38" pos:column="5">case <expr><operator pos:line="38" pos:column="10">-<pos:position pos:line="38" pos:column="11"/></operator><literal type="number" pos:line="38" pos:column="11">1<pos:position pos:line="38" pos:column="12"/></literal></expr>:<pos:position pos:line="38" pos:column="13"/></case>
      <return pos:line="39" pos:column="7">return <expr><name pos:line="39" pos:column="14">POP_A_SOCKET<pos:position pos:line="39" pos:column="26"/></name></expr>;<pos:position pos:line="39" pos:column="27"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></switch>

  <decl_stmt><decl><type><name pos:line="42" pos:column="3">mutt_error<pos:position pos:line="42" pos:column="13"/></name></type> <name pos:line="42" pos:column="14">_<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="string" pos:line="42" pos:column="16">"APOP authentication failed."<pos:position pos:line="42" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></decl>;<pos:position pos:line="42" pos:column="47"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">mutt_sleep<pos:position pos:line="43" pos:column="13"/></name> <argument_list pos:line="43" pos:column="14">(<argument><expr><literal type="number" pos:line="43" pos:column="15">2<pos:position pos:line="43" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="18"/></expr_stmt>

  <return pos:line="45" pos:column="3">return <expr><name pos:line="45" pos:column="10">POP_A_FAILURE<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_127_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">msg_search<pos:position pos:line="2" pos:column="11"/></name> <parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">CONTEXT<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">ctx<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">pattern_t<pos:position pos:line="2" pos:column="36"/></name><modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type> <name pos:line="2" pos:column="38">pat<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">msgno<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">tempfile<pos:position pos:line="4" pos:column="16"/></name><index pos:line="4" pos:column="16">[<expr><name pos:line="4" pos:column="17">_POSIX_PATH_MAX<pos:position pos:line="4" pos:column="32"/></name></expr>]<pos:position pos:line="4" pos:column="33"/></index></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">MESSAGE<pos:position pos:line="5" pos:column="10"/></name> <modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">msg<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">STATE<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">stat<pos:position pos:line="7" pos:column="14"/></name></name></type> <name pos:line="7" pos:column="15">st<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">FILE<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">fp<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">long<pos:position pos:line="9" pos:column="7"/></name></type> <name pos:line="9" pos:column="8">lng<pos:position pos:line="9" pos:column="11"/></name> <init pos:line="9" pos:column="12">= <expr><literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">match<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">HEADER<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">h<pos:position pos:line="11" pos:column="12"/></name> <init pos:line="11" pos:column="13">= <expr><name><name pos:line="11" pos:column="15">ctx<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">hdrs<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[<expr><name pos:line="11" pos:column="25">msgno<pos:position pos:line="11" pos:column="30"/></name></expr>]<pos:position pos:line="11" pos:column="31"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">buf<pos:position pos:line="12" pos:column="12"/></name></decl>;<pos:position pos:line="12" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">size_t<pos:position pos:line="13" pos:column="9"/></name></type> <name pos:line="13" pos:column="10">blen<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><operator pos:line="15" pos:column="7">(<pos:position pos:line="15" pos:column="8"/></operator><name pos:line="15" pos:column="8">msg<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">mx_open_message<pos:position pos:line="15" pos:column="29"/></name> <argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">ctx<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">msgno<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call><operator pos:line="15" pos:column="42">)<pos:position pos:line="15" pos:column="43"/></operator> <operator pos:line="15" pos:column="44">!=<pos:position pos:line="15" pos:column="46"/></operator> <name pos:line="15" pos:column="47">NULL<pos:position pos:line="15" pos:column="51"/></name></expr>)<pos:position pos:line="15" pos:column="52"/></condition><then pos:line="15" pos:column="52">
  <block pos:line="16" pos:column="3">{
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">option<pos:position pos:line="17" pos:column="15"/></name> <argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">OPTTHOROUGHSRC<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
    <block pos:line="18" pos:column="5">{
      <comment type="block" pos:line="19" pos:column="7">/* decode the header / body */</comment>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">memset<pos:position pos:line="20" pos:column="13"/></name> <argument_list pos:line="20" pos:column="14">(<argument><expr><operator pos:line="20" pos:column="15">&amp;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="16">s<pos:position pos:line="20" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="22">sizeof <argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">s<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">s<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">.<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">fpin<pos:position pos:line="21" pos:column="13"/></name></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <name><name pos:line="21" pos:column="16">msg<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">fp<pos:position pos:line="21" pos:column="23"/></name></name></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">s<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">.<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">flags<pos:position pos:line="22" pos:column="14"/></name></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">MUTT_CHARCONV<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">mutt_mktemp<pos:position pos:line="23" pos:column="18"/></name> <argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">tempfile<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="30">sizeof <argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">tempfile<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><operator pos:line="24" pos:column="11">(<pos:position pos:line="24" pos:column="12"/></operator><name><name pos:line="24" pos:column="12">s<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">fpout<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <call><name pos:line="24" pos:column="22">safe_fopen<pos:position pos:line="24" pos:column="32"/></name> <argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">tempfile<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="44">"w+"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call><operator pos:line="24" pos:column="49">)<pos:position pos:line="24" pos:column="50"/></operator> <operator pos:line="24" pos:column="51">==<pos:position pos:line="24" pos:column="53"/></operator> <name pos:line="24" pos:column="54">NULL<pos:position pos:line="24" pos:column="58"/></name></expr>)<pos:position pos:line="24" pos:column="59"/></condition><then pos:line="24" pos:column="59">
      <block pos:line="25" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">mutt_perror<pos:position pos:line="26" pos:column="20"/></name> <argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">tempfile<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
	<return pos:line="27" pos:column="9">return <expr><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal><operator pos:line="27" pos:column="18">)<pos:position pos:line="27" pos:column="19"/></operator></expr>;<pos:position pos:line="27" pos:column="20"/></return>
      }<pos:position pos:line="28" pos:column="8"/></block></then></if>

      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name><name pos:line="30" pos:column="11">pat<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">op<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">!=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">MUTT_BODY<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">mutt_copy_header<pos:position pos:line="31" pos:column="25"/></name> <argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">msg<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">fp<pos:position pos:line="31" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">h<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="39">s<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">.<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="41">fpout<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">CH_FROM<pos:position pos:line="31" pos:column="55"/></name> <operator pos:line="31" pos:column="56">|<pos:position pos:line="31" pos:column="57"/></operator> <name pos:line="31" pos:column="58">CH_DECODE<pos:position pos:line="31" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="69">NULL<pos:position pos:line="31" pos:column="73"/></name></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="75"/></expr_stmt></block></then></if>

      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name><name pos:line="33" pos:column="11">pat<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">op<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">!=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">MUTT_HEADER<pos:position pos:line="33" pos:column="33"/></name></expr>)<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34">
      <block pos:line="34" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">mutt_parse_mime_message<pos:position pos:line="35" pos:column="32"/></name> <argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">ctx<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">h<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">WithCrypto<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">&amp;&amp;<pos:position pos:line="37" pos:column="34"/></operator> <operator pos:line="37" pos:column="27">(<pos:position pos:line="37" pos:column="28"/></operator><name><name pos:line="37" pos:column="28">h<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">security<pos:position pos:line="37" pos:column="39"/></name></name> <operator pos:line="37" pos:column="40">&amp;<pos:position pos:line="37" pos:column="45"/></operator> <name pos:line="37" pos:column="42">ENCRYPT<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">)<pos:position pos:line="37" pos:column="50"/></operator>
            <operator pos:line="38" pos:column="13">&amp;&amp;<pos:position pos:line="38" pos:column="23"/></operator> <operator pos:line="38" pos:column="16">!<pos:position pos:line="38" pos:column="17"/></operator><call><name pos:line="38" pos:column="17">crypt_valid_passphrase<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><name><name pos:line="38" pos:column="40">h<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">-&gt;<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="43">security<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="53"/></condition><then pos:line="38" pos:column="53">
	<block pos:line="39" pos:column="9">{
	  <expr_stmt><expr><call><name pos:line="40" pos:column="11">mx_close_message<pos:position pos:line="40" pos:column="27"/></name> <argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">ctx<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="34">&amp;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="35">msg<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
	  <if pos:line="41" pos:column="11">if <condition pos:line="41" pos:column="14">(<expr><name><name pos:line="41" pos:column="15">s<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">.<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">fpout<pos:position pos:line="41" pos:column="22"/></name></name></expr>)<pos:position pos:line="41" pos:column="23"/></condition><then pos:line="41" pos:column="23">
	  <block pos:line="42" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="43" pos:column="13">safe_fclose<pos:position pos:line="43" pos:column="24"/></name> <argument_list pos:line="43" pos:column="25">(<argument><expr><operator pos:line="43" pos:column="26">&amp;<pos:position pos:line="43" pos:column="31"/></operator><name><name pos:line="43" pos:column="27">s<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">.<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">fpout<pos:position pos:line="43" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="44" pos:column="13">unlink<pos:position pos:line="44" pos:column="19"/></name> <argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">tempfile<pos:position pos:line="44" pos:column="29"/></name></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
	  }<pos:position pos:line="45" pos:column="12"/></block></then></if>
	  <return pos:line="46" pos:column="11">return <expr><operator pos:line="46" pos:column="18">(<pos:position pos:line="46" pos:column="19"/></operator><literal type="number" pos:line="46" pos:column="19">0<pos:position pos:line="46" pos:column="20"/></literal><operator pos:line="46" pos:column="20">)<pos:position pos:line="46" pos:column="21"/></operator></expr>;<pos:position pos:line="46" pos:column="22"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="49" pos:column="9">fseeko<pos:position pos:line="49" pos:column="15"/></name> <argument_list pos:line="49" pos:column="16">(<argument><expr><name><name pos:line="49" pos:column="17">msg<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">-&gt;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="22">fp<pos:position pos:line="49" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="26">h<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">offset<pos:position pos:line="49" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="37">0<pos:position pos:line="49" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">mutt_body_handler<pos:position pos:line="50" pos:column="26"/></name> <argument_list pos:line="50" pos:column="27">(<argument><expr><name><name pos:line="50" pos:column="28">h<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">content<pos:position pos:line="50" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="40">&amp;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="41">s<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="53" pos:column="7">fp<pos:position pos:line="53" pos:column="9"/></name> <operator pos:line="53" pos:column="10">=<pos:position pos:line="53" pos:column="11"/></operator> <name><name pos:line="53" pos:column="12">s<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">.<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">fpout<pos:position pos:line="53" pos:column="19"/></name></name></expr>;<pos:position pos:line="53" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">fflush<pos:position pos:line="54" pos:column="13"/></name> <argument_list pos:line="54" pos:column="14">(<argument><expr><name pos:line="54" pos:column="15">fp<pos:position pos:line="54" pos:column="17"/></name></expr></argument>)<pos:position pos:line="54" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">fseek<pos:position pos:line="55" pos:column="12"/></name> <argument_list pos:line="55" pos:column="13">(<argument><expr><name pos:line="55" pos:column="14">fp<pos:position pos:line="55" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="18">0<pos:position pos:line="55" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="21">0<pos:position pos:line="55" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">fstat<pos:position pos:line="56" pos:column="12"/></name> <argument_list pos:line="56" pos:column="13">(<argument><expr><call><name pos:line="56" pos:column="14">fileno<pos:position pos:line="56" pos:column="20"/></name> <argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">fp<pos:position pos:line="56" pos:column="24"/></name></expr></argument>)<pos:position pos:line="56" pos:column="25"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="56" pos:column="27">&amp;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="28">st<pos:position pos:line="56" pos:column="30"/></name></expr></argument>)<pos:position pos:line="56" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="57" pos:column="7">lng<pos:position pos:line="57" pos:column="10"/></name> <operator pos:line="57" pos:column="11">=<pos:position pos:line="57" pos:column="12"/></operator> <operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">long<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">)<pos:position pos:line="57" pos:column="19"/></operator> <name><name pos:line="57" pos:column="20">st<pos:position pos:line="57" pos:column="22"/></name><operator pos:line="57" pos:column="22">.<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">st_size<pos:position pos:line="57" pos:column="30"/></name></name></expr>;<pos:position pos:line="57" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then>
    <else pos:line="59" pos:column="5">else
    <block pos:line="60" pos:column="5">{
      <comment type="block" pos:line="61" pos:column="7">/* raw header / body */</comment>
      <expr_stmt><expr><name pos:line="62" pos:column="7">fp<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <name><name pos:line="62" pos:column="12">msg<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">-&gt;<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="17">fp<pos:position pos:line="62" pos:column="19"/></name></name></expr>;<pos:position pos:line="62" pos:column="20"/></expr_stmt>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><name><name pos:line="63" pos:column="11">pat<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">op<pos:position pos:line="63" pos:column="18"/></name></name> <operator pos:line="63" pos:column="19">!=<pos:position pos:line="63" pos:column="21"/></operator> <name pos:line="63" pos:column="22">MUTT_BODY<pos:position pos:line="63" pos:column="31"/></name></expr>)<pos:position pos:line="63" pos:column="32"/></condition><then pos:line="63" pos:column="32">
      <block pos:line="64" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">fseeko<pos:position pos:line="65" pos:column="15"/></name> <argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">fp<pos:position pos:line="65" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="21">h<pos:position pos:line="65" pos:column="22"/></name><operator pos:line="65" pos:column="22">-&gt;<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="24">offset<pos:position pos:line="65" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="32">0<pos:position pos:line="65" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="66" pos:column="9">lng<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <name><name pos:line="66" pos:column="15">h<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">content<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">-&gt;<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="27">offset<pos:position pos:line="66" pos:column="33"/></name></name> <operator pos:line="66" pos:column="34">-<pos:position pos:line="66" pos:column="35"/></operator> <name><name pos:line="66" pos:column="36">h<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">-&gt;<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="39">offset<pos:position pos:line="66" pos:column="45"/></name></name></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>
      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><name><name pos:line="68" pos:column="11">pat<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">-&gt;<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="16">op<pos:position pos:line="68" pos:column="18"/></name></name> <operator pos:line="68" pos:column="19">!=<pos:position pos:line="68" pos:column="21"/></operator> <name pos:line="68" pos:column="22">MUTT_HEADER<pos:position pos:line="68" pos:column="33"/></name></expr>)<pos:position pos:line="68" pos:column="34"/></condition><then pos:line="68" pos:column="34">
      <block pos:line="69" pos:column="7">{
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">pat<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">op<pos:position pos:line="70" pos:column="20"/></name></name> <operator pos:line="70" pos:column="21">==<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">MUTT_BODY<pos:position pos:line="70" pos:column="33"/></name></expr>)<pos:position pos:line="70" pos:column="34"/></condition><then pos:line="70" pos:column="34">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="11">fseeko<pos:position pos:line="71" pos:column="17"/></name> <argument_list pos:line="71" pos:column="18">(<argument><expr><name pos:line="71" pos:column="19">fp<pos:position pos:line="71" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="23">h<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">-&gt;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="26">content<pos:position pos:line="71" pos:column="33"/></name><operator pos:line="71" pos:column="33">-&gt;<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="35">offset<pos:position pos:line="71" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="43">0<pos:position pos:line="71" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="72" pos:column="9">lng<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">+=<pos:position pos:line="72" pos:column="15"/></operator> <name><name pos:line="72" pos:column="16">h<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">-&gt;<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="19">content<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">length<pos:position pos:line="72" pos:column="34"/></name></name></expr>;<pos:position pos:line="72" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="73" pos:column="8"/></block></then></if>
    }<pos:position pos:line="74" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="76" pos:column="5">blen<pos:position pos:line="76" pos:column="9"/></name> <operator pos:line="76" pos:column="10">=<pos:position pos:line="76" pos:column="11"/></operator> <name pos:line="76" pos:column="12">STRING<pos:position pos:line="76" pos:column="18"/></name></expr>;<pos:position pos:line="76" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="77" pos:column="5">buf<pos:position pos:line="77" pos:column="8"/></name> <operator pos:line="77" pos:column="9">=<pos:position pos:line="77" pos:column="10"/></operator> <call><name pos:line="77" pos:column="11">safe_malloc<pos:position pos:line="77" pos:column="22"/></name> <argument_list pos:line="77" pos:column="23">(<argument><expr><name pos:line="77" pos:column="24">blen<pos:position pos:line="77" pos:column="28"/></name></expr></argument>)<pos:position pos:line="77" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="79" pos:column="5">/* search the file "fp" */</comment>
    <while pos:line="80" pos:column="5">while <condition pos:line="80" pos:column="11">(<expr><name pos:line="80" pos:column="12">lng<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">&gt;<pos:position pos:line="80" pos:column="20"/></operator> <literal type="number" pos:line="80" pos:column="18">0<pos:position pos:line="80" pos:column="19"/></literal></expr>)<pos:position pos:line="80" pos:column="20"/></condition>
    <block pos:line="81" pos:column="5">{
      <if pos:line="82" pos:column="7">if <condition pos:line="82" pos:column="10">(<expr><name><name pos:line="82" pos:column="11">pat<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">-&gt;<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="16">op<pos:position pos:line="82" pos:column="18"/></name></name> <operator pos:line="82" pos:column="19">==<pos:position pos:line="82" pos:column="21"/></operator> <name pos:line="82" pos:column="22">MUTT_HEADER<pos:position pos:line="82" pos:column="33"/></name></expr>)<pos:position pos:line="82" pos:column="34"/></condition><then pos:line="82" pos:column="34">
      <block pos:line="83" pos:column="7">{
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">*<pos:position pos:line="84" pos:column="14"/></operator><operator pos:line="84" pos:column="14">(<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="15">buf<pos:position pos:line="84" pos:column="18"/></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <call><name pos:line="84" pos:column="21">mutt_read_rfc822_line<pos:position pos:line="84" pos:column="42"/></name> <argument_list pos:line="84" pos:column="43">(<argument><expr><name pos:line="84" pos:column="44">fp<pos:position pos:line="84" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="48">buf<pos:position pos:line="84" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="53">&amp;<pos:position pos:line="84" pos:column="58"/></operator><name pos:line="84" pos:column="54">blen<pos:position pos:line="84" pos:column="58"/></name></expr></argument>)<pos:position pos:line="84" pos:column="59"/></argument_list></call><operator pos:line="84" pos:column="59">)<pos:position pos:line="84" pos:column="60"/></operator> <operator pos:line="84" pos:column="61">==<pos:position pos:line="84" pos:column="63"/></operator> <literal type="char" pos:line="84" pos:column="64">'\0'<pos:position pos:line="84" pos:column="68"/></literal></expr>)<pos:position pos:line="84" pos:column="69"/></condition><then pos:line="84" pos:column="69">
	  <block type="pseudo"><break pos:line="85" pos:column="11">break;<pos:position pos:line="85" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="86" pos:column="8"/></block></then>
      <elseif pos:line="87" pos:column="7">else <if pos:line="87" pos:column="12">if <condition pos:line="87" pos:column="15">(<expr><call><name pos:line="87" pos:column="16">fgets<pos:position pos:line="87" pos:column="21"/></name> <argument_list pos:line="87" pos:column="22">(<argument><expr><name pos:line="87" pos:column="23">buf<pos:position pos:line="87" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="28">blen<pos:position pos:line="87" pos:column="32"/></name> <operator pos:line="87" pos:column="33">-<pos:position pos:line="87" pos:column="34"/></operator> <literal type="number" pos:line="87" pos:column="35">1<pos:position pos:line="87" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="38">fp<pos:position pos:line="87" pos:column="40"/></name></expr></argument>)<pos:position pos:line="87" pos:column="41"/></argument_list></call> <operator pos:line="87" pos:column="42">==<pos:position pos:line="87" pos:column="44"/></operator> <name pos:line="87" pos:column="45">NULL<pos:position pos:line="87" pos:column="49"/></name></expr>)<pos:position pos:line="87" pos:column="50"/></condition><then pos:line="87" pos:column="50">
	<block type="pseudo"><break pos:line="88" pos:column="9">break;<pos:position pos:line="88" pos:column="15"/></break></block></then></if></elseif></if> <comment type="block" pos:line="88" pos:column="16">/* don't loop forever */</comment>
      <if pos:line="89" pos:column="7">if <condition pos:line="89" pos:column="10">(<expr><call><name pos:line="89" pos:column="11">patmatch<pos:position pos:line="89" pos:column="19"/></name> <argument_list pos:line="89" pos:column="20">(<argument><expr><name pos:line="89" pos:column="21">pat<pos:position pos:line="89" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="26">buf<pos:position pos:line="89" pos:column="29"/></name></expr></argument>)<pos:position pos:line="89" pos:column="30"/></argument_list></call> <operator pos:line="89" pos:column="31">==<pos:position pos:line="89" pos:column="33"/></operator> <literal type="number" pos:line="89" pos:column="34">0<pos:position pos:line="89" pos:column="35"/></literal></expr>)<pos:position pos:line="89" pos:column="36"/></condition><then pos:line="89" pos:column="36">
      <block pos:line="90" pos:column="7">{
	<expr_stmt><expr><name pos:line="91" pos:column="9">match<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">=<pos:position pos:line="91" pos:column="16"/></operator> <literal type="number" pos:line="91" pos:column="17">1<pos:position pos:line="91" pos:column="18"/></literal></expr>;<pos:position pos:line="91" pos:column="19"/></expr_stmt>
	<break pos:line="92" pos:column="9">break;<pos:position pos:line="92" pos:column="15"/></break>
      }<pos:position pos:line="93" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="94" pos:column="7">lng<pos:position pos:line="94" pos:column="10"/></name> <operator pos:line="94" pos:column="11">-=<pos:position pos:line="94" pos:column="13"/></operator> <call><name pos:line="94" pos:column="14">mutt_strlen<pos:position pos:line="94" pos:column="25"/></name> <argument_list pos:line="94" pos:column="26">(<argument><expr><name pos:line="94" pos:column="27">buf<pos:position pos:line="94" pos:column="30"/></name></expr></argument>)<pos:position pos:line="94" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="97" pos:column="5">FREE<pos:position pos:line="97" pos:column="9"/></name> <argument_list pos:line="97" pos:column="10">(<argument><expr><operator pos:line="97" pos:column="11">&amp;<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="12">buf<pos:position pos:line="97" pos:column="15"/></name></expr></argument>)<pos:position pos:line="97" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="17"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">mx_close_message<pos:position pos:line="99" pos:column="21"/></name> <argument_list pos:line="99" pos:column="22">(<argument><expr><name pos:line="99" pos:column="23">ctx<pos:position pos:line="99" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="28">&amp;<pos:position pos:line="99" pos:column="33"/></operator><name pos:line="99" pos:column="29">msg<pos:position pos:line="99" pos:column="32"/></name></expr></argument>)<pos:position pos:line="99" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="34"/></expr_stmt>

    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><call><name pos:line="101" pos:column="9">option<pos:position pos:line="101" pos:column="15"/></name> <argument_list pos:line="101" pos:column="16">(<argument><expr><name pos:line="101" pos:column="17">OPTTHOROUGHSRC<pos:position pos:line="101" pos:column="31"/></name></expr></argument>)<pos:position pos:line="101" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="33"/></condition><then pos:line="101" pos:column="33">
    <block pos:line="102" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="103" pos:column="7">safe_fclose<pos:position pos:line="103" pos:column="18"/></name> <argument_list pos:line="103" pos:column="19">(<argument><expr><operator pos:line="103" pos:column="20">&amp;<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="21">fp<pos:position pos:line="103" pos:column="23"/></name></expr></argument>)<pos:position pos:line="103" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="104" pos:column="7">unlink<pos:position pos:line="104" pos:column="13"/></name> <argument_list pos:line="104" pos:column="14">(<argument><expr><name pos:line="104" pos:column="15">tempfile<pos:position pos:line="104" pos:column="23"/></name></expr></argument>)<pos:position pos:line="104" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>
  }<pos:position pos:line="106" pos:column="4"/></block></then></if>

  <return pos:line="108" pos:column="3">return <expr><name pos:line="108" pos:column="10">match<pos:position pos:line="108" pos:column="15"/></name></expr>;<pos:position pos:line="108" pos:column="16"/></return>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

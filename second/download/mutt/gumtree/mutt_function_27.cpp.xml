<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">save_history<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">history_class_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">hclass<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">s<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">int<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">n<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">f<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tmp<pos:position pos:line="5" pos:column="12"/></name></decl>, <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">s<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">||<pos:position pos:line="7" pos:column="12"/></operator> <operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">s<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17">  <comment type="block" pos:line="7" pos:column="19">/* This shouldn't happen, but it's safer. */</comment>
    <block type="pseudo"><return pos:line="8" pos:column="5">return;<pos:position pos:line="8" pos:column="12"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">f<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">fopen<pos:position pos:line="10" pos:column="17"/></name> <argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">HistFile<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="29">"a"<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="35">==<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="38">NULL<pos:position pos:line="10" pos:column="42"/></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43">
  <block pos:line="11" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">mutt_perror<pos:position pos:line="12" pos:column="16"/></name> <argument_list pos:line="12" pos:column="17">(<argument><expr><literal type="string" pos:line="12" pos:column="18">"fopen"<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
    <return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">tmp<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">safe_strdup<pos:position pos:line="16" pos:column="20"/></name> <argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">s<pos:position pos:line="16" pos:column="23"/></name></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">mutt_convert_string<pos:position pos:line="17" pos:column="22"/></name> <argument_list pos:line="17" pos:column="23">(<argument><expr><operator pos:line="17" pos:column="24">&amp;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="25">tmp<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">Charset<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="39">"utf-8"<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="48">0<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>

  <comment type="block" pos:line="19" pos:column="3">/* Format of a history item (1 line): "&lt;histclass&gt;:&lt;string&gt;|".
     We add a '|' in order to avoid lines ending with '\'. */</comment>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">fprintf<pos:position pos:line="21" pos:column="10"/></name> <argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">f<pos:position pos:line="21" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="15">"%d:"<pos:position pos:line="21" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="22">(<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">int<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">)<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">hclass<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
  <for pos:line="22" pos:column="3">for <control pos:line="22" pos:column="7">(<init><expr><name pos:line="22" pos:column="8">p<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <name pos:line="22" pos:column="12">tmp<pos:position pos:line="22" pos:column="15"/></name></expr>;<pos:position pos:line="22" pos:column="16"/></init> <condition><expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">p<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></condition> <incr><expr><name pos:line="22" pos:column="21">p<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">++<pos:position pos:line="22" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="25"/></control>
  <block pos:line="23" pos:column="3">{
    <comment type="block" pos:line="24" pos:column="5">/* Don't copy \n as a history item must fit on one line. The string
       shouldn't contain such a character anyway, but as this can happen
       in practice, we must deal with that. */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">p<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">!=<pos:position pos:line="27" pos:column="14"/></operator> <literal type="char" pos:line="27" pos:column="15">'\n'<pos:position pos:line="27" pos:column="19"/></literal></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">putc<pos:position pos:line="28" pos:column="11"/></name> <argument_list pos:line="28" pos:column="12">(<argument><expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">unsigned<pos:position pos:line="28" pos:column="22"/></name> <name pos:line="28" pos:column="23">char<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator> <operator pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">p<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">f<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">fputs<pos:position pos:line="30" pos:column="8"/></name> <argument_list pos:line="30" pos:column="9">(<argument><expr><literal type="string" pos:line="30" pos:column="10">"|\n"<pos:position pos:line="30" pos:column="15"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="17">f<pos:position pos:line="30" pos:column="18"/></name></expr></argument>)<pos:position pos:line="30" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">safe_fclose<pos:position pos:line="32" pos:column="14"/></name> <argument_list pos:line="32" pos:column="15">(<argument><expr><operator pos:line="32" pos:column="16">&amp;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="17">f<pos:position pos:line="32" pos:column="18"/></name></expr></argument>)<pos:position pos:line="32" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">FREE<pos:position pos:line="33" pos:column="7"/></name> <argument_list pos:line="33" pos:column="8">(<argument><expr><operator pos:line="33" pos:column="9">&amp;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="10">tmp<pos:position pos:line="33" pos:column="13"/></name></expr></argument>)<pos:position pos:line="33" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="15"/></expr_stmt>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><operator pos:line="35" pos:column="7">--<pos:position pos:line="35" pos:column="9"/></operator><name pos:line="35" pos:column="9">n<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">&lt;<pos:position pos:line="35" pos:column="15"/></operator> <literal type="number" pos:line="35" pos:column="13">0<pos:position pos:line="35" pos:column="14"/></literal></expr>)<pos:position pos:line="35" pos:column="15"/></condition><then pos:line="35" pos:column="15">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><name pos:line="37" pos:column="5">n<pos:position pos:line="37" pos:column="6"/></name> <operator pos:line="37" pos:column="7">=<pos:position pos:line="37" pos:column="8"/></operator> <name pos:line="37" pos:column="9">SaveHist<pos:position pos:line="37" pos:column="17"/></name></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">shrink_histfile<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">()<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_652_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">be_edit_header<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">ENVELOPE<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">e<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">force<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tmp<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">HUGE_STRING<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">mutt_window_move<pos:position pos:line="5" pos:column="19"/></name> <argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">MuttMessageWindow<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="40">0<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="43">0<pos:position pos:line="5" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">addstr<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><literal type="string" pos:line="7" pos:column="11">"To: "<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">tmp<pos:position pos:line="8" pos:column="6"/></name><index pos:line="8" pos:column="6">[<expr><literal type="number" pos:line="8" pos:column="7">0<pos:position pos:line="8" pos:column="8"/></literal></expr>]<pos:position pos:line="8" pos:column="9"/></index></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <literal type="number" pos:line="8" pos:column="12">0<pos:position pos:line="8" pos:column="13"/></literal></expr>;<pos:position pos:line="8" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">mutt_addrlist_to_local<pos:position pos:line="9" pos:column="25"/></name> <argument_list pos:line="9" pos:column="26">(<argument><expr><name><name pos:line="9" pos:column="27">e<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">to<pos:position pos:line="9" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">rfc822_write_address<pos:position pos:line="10" pos:column="23"/></name> <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">tmp<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="30">sizeof <argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">tmp<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="44">e<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">to<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="51">0<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name><name pos:line="11" pos:column="8">e<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">to<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">||<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">force<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23">
  <block pos:line="12" pos:column="3">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">mutt_enter_string<pos:position pos:line="13" pos:column="26"/></name> <argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">tmp<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="33">sizeof <argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">tmp<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="47">4<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="50">0<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call> <operator pos:line="13" pos:column="53">==<pos:position pos:line="13" pos:column="55"/></operator> <literal type="number" pos:line="13" pos:column="56">0<pos:position pos:line="13" pos:column="57"/></literal></expr>)<pos:position pos:line="13" pos:column="58"/></condition><then pos:line="13" pos:column="58">
    <block pos:line="14" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">rfc822_free_address<pos:position pos:line="15" pos:column="26"/></name> <argument_list pos:line="15" pos:column="27">(<argument><expr><operator pos:line="15" pos:column="28">&amp;<pos:position pos:line="15" pos:column="33"/></operator><name><name pos:line="15" pos:column="29">e<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">to<pos:position pos:line="15" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="16" pos:column="7">e<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">to<pos:position pos:line="16" pos:column="12"/></name></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">mutt_parse_adrlist<pos:position pos:line="16" pos:column="33"/></name> <argument_list pos:line="16" pos:column="34">(<argument><expr><name><name pos:line="16" pos:column="35">e<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">to<pos:position pos:line="16" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">tmp<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">e<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">to<pos:position pos:line="17" pos:column="12"/></name></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">mutt_expand_aliases<pos:position pos:line="17" pos:column="34"/></name> <argument_list pos:line="17" pos:column="35">(<argument><expr><name><name pos:line="17" pos:column="36">e<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">to<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">mutt_addrlist_to_intl<pos:position pos:line="18" pos:column="28"/></name> <argument_list pos:line="18" pos:column="29">(<argument><expr><name><name pos:line="18" pos:column="30">e<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">to<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">NULL<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>	<comment type="block" pos:line="18" pos:column="49">/* XXX - IDNA error reporting? */</comment>
      <expr_stmt><expr><name><name pos:line="19" pos:column="7">tmp<pos:position pos:line="19" pos:column="10"/></name><index pos:line="19" pos:column="10">[<expr><literal type="number" pos:line="19" pos:column="11">0<pos:position pos:line="19" pos:column="12"/></literal></expr>]<pos:position pos:line="19" pos:column="13"/></index></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">rfc822_write_address<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">tmp<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="34">sizeof <argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">tmp<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="48">e<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">-&gt;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="51">to<pos:position pos:line="20" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="55">1<pos:position pos:line="20" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">mutt_window_mvaddstr<pos:position pos:line="21" pos:column="27"/></name> <argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">MuttMessageWindow<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="48">0<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="51">4<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">tmp<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
  }<pos:position pos:line="23" pos:column="4"/></block></then>
  <else pos:line="24" pos:column="3">else
  <block pos:line="25" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">mutt_addrlist_to_intl<pos:position pos:line="26" pos:column="26"/></name> <argument_list pos:line="26" pos:column="27">(<argument><expr><name><name pos:line="26" pos:column="28">e<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">to<pos:position pos:line="26" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">NULL<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>	<comment type="block" pos:line="26" pos:column="49">/* XXX - IDNA error reporting? */</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">addstr<pos:position pos:line="27" pos:column="11"/></name> <argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">tmp<pos:position pos:line="27" pos:column="16"/></name></expr></argument>)<pos:position pos:line="27" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></else></if>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">addch<pos:position pos:line="29" pos:column="8"/></name> <argument_list pos:line="29" pos:column="9">(<argument><expr><literal type="char" pos:line="29" pos:column="10">'\n'<pos:position pos:line="29" pos:column="14"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="16"/></expr_stmt>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><operator pos:line="31" pos:column="7">!<pos:position pos:line="31" pos:column="8"/></operator><name><name pos:line="31" pos:column="8">e<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">subject<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">||<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">force<pos:position pos:line="31" pos:column="27"/></name></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">addstr<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><literal type="string" pos:line="33" pos:column="13">"Subject: "<pos:position pos:line="33" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">strfcpy<pos:position pos:line="34" pos:column="12"/></name> <argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">tmp<pos:position pos:line="34" pos:column="17"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="34" pos:column="19">e<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">subject<pos:position pos:line="34" pos:column="29"/></name></name></expr> ?<pos:position pos:line="34" pos:column="31"/></condition><then pos:line="34" pos:column="31"> <expr><name><name pos:line="34" pos:column="32">e<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">subject<pos:position pos:line="34" pos:column="42"/></name></name></expr></then><else pos:line="34" pos:column="42">: <expr><literal type="string" pos:line="34" pos:column="44">""<pos:position pos:line="34" pos:column="46"/></literal></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="48">sizeof <argument_list pos:line="34" pos:column="55">(<argument><expr><name pos:line="34" pos:column="56">tmp<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="62"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">mutt_enter_string<pos:position pos:line="35" pos:column="26"/></name> <argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">tmp<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="33">sizeof <argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">tmp<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="47">9<pos:position pos:line="35" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="50">0<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call> <operator pos:line="35" pos:column="53">==<pos:position pos:line="35" pos:column="55"/></operator> <literal type="number" pos:line="35" pos:column="56">0<pos:position pos:line="35" pos:column="57"/></literal></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then pos:line="35" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="7">mutt_str_replace<pos:position pos:line="36" pos:column="23"/></name> <argument_list pos:line="36" pos:column="24">(<argument><expr><operator pos:line="36" pos:column="25">&amp;<pos:position pos:line="36" pos:column="30"/></operator><name><name pos:line="36" pos:column="26">e<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">subject<pos:position pos:line="36" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">tmp<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">addch<pos:position pos:line="37" pos:column="10"/></name> <argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="char" pos:line="37" pos:column="12">'\n'<pos:position pos:line="37" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><operator pos:line="40" pos:column="7">(<pos:position pos:line="40" pos:column="8"/></operator><operator pos:line="40" pos:column="8">!<pos:position pos:line="40" pos:column="9"/></operator><name><name pos:line="40" pos:column="9">e<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">cc<pos:position pos:line="40" pos:column="14"/></name></name> <operator pos:line="40" pos:column="15">&amp;&amp;<pos:position pos:line="40" pos:column="25"/></operator> <call><name pos:line="40" pos:column="18">option<pos:position pos:line="40" pos:column="24"/></name> <argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">OPTASKCC<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call><operator pos:line="40" pos:column="35">)<pos:position pos:line="40" pos:column="36"/></operator> <operator pos:line="40" pos:column="37">||<pos:position pos:line="40" pos:column="39"/></operator> <name pos:line="40" pos:column="40">force<pos:position pos:line="40" pos:column="45"/></name></expr>)<pos:position pos:line="40" pos:column="46"/></condition><then pos:line="40" pos:column="46">
  <block pos:line="41" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">addstr<pos:position pos:line="42" pos:column="11"/></name> <argument_list pos:line="42" pos:column="12">(<argument><expr><literal type="string" pos:line="42" pos:column="13">"Cc: "<pos:position pos:line="42" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">tmp<pos:position pos:line="43" pos:column="8"/></name><index pos:line="43" pos:column="8">[<expr><literal type="number" pos:line="43" pos:column="9">0<pos:position pos:line="43" pos:column="10"/></literal></expr>]<pos:position pos:line="43" pos:column="11"/></index></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <literal type="number" pos:line="43" pos:column="14">0<pos:position pos:line="43" pos:column="15"/></literal></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">mutt_addrlist_to_local<pos:position pos:line="44" pos:column="27"/></name> <argument_list pos:line="44" pos:column="28">(<argument><expr><name><name pos:line="44" pos:column="29">e<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">cc<pos:position pos:line="44" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">rfc822_write_address<pos:position pos:line="45" pos:column="25"/></name> <argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">tmp<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="32">sizeof <argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">tmp<pos:position pos:line="45" pos:column="43"/></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="46">e<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">-&gt;<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="49">cc<pos:position pos:line="45" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="53">0<pos:position pos:line="45" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="56"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">mutt_enter_string<pos:position pos:line="46" pos:column="26"/></name> <argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">tmp<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="33">sizeof <argument_list pos:line="46" pos:column="40">(<argument><expr><name pos:line="46" pos:column="41">tmp<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="47">4<pos:position pos:line="46" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="50">0<pos:position pos:line="46" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call> <operator pos:line="46" pos:column="53">==<pos:position pos:line="46" pos:column="55"/></operator> <literal type="number" pos:line="46" pos:column="56">0<pos:position pos:line="46" pos:column="57"/></literal></expr>)<pos:position pos:line="46" pos:column="58"/></condition><then pos:line="46" pos:column="58">
    <block pos:line="47" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">rfc822_free_address<pos:position pos:line="48" pos:column="26"/></name> <argument_list pos:line="48" pos:column="27">(<argument><expr><operator pos:line="48" pos:column="28">&amp;<pos:position pos:line="48" pos:column="33"/></operator><name><name pos:line="48" pos:column="29">e<pos:position pos:line="48" pos:column="30"/></name><operator pos:line="48" pos:column="30">-&gt;<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="32">cc<pos:position pos:line="48" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="49" pos:column="7">e<pos:position pos:line="49" pos:column="8"/></name><operator pos:line="49" pos:column="8">-&gt;<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="10">cc<pos:position pos:line="49" pos:column="12"/></name></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <call><name pos:line="49" pos:column="15">mutt_parse_adrlist<pos:position pos:line="49" pos:column="33"/></name> <argument_list pos:line="49" pos:column="34">(<argument><expr><name><name pos:line="49" pos:column="35">e<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">-&gt;<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="38">cc<pos:position pos:line="49" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">tmp<pos:position pos:line="49" pos:column="45"/></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">e<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">-&gt;<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="10">cc<pos:position pos:line="50" pos:column="12"/></name></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <call><name pos:line="50" pos:column="15">mutt_expand_aliases<pos:position pos:line="50" pos:column="34"/></name> <argument_list pos:line="50" pos:column="35">(<argument><expr><name><name pos:line="50" pos:column="36">e<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">cc<pos:position pos:line="50" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="51" pos:column="7">tmp<pos:position pos:line="51" pos:column="10"/></name><index pos:line="51" pos:column="10">[<expr><literal type="number" pos:line="51" pos:column="11">0<pos:position pos:line="51" pos:column="12"/></literal></expr>]<pos:position pos:line="51" pos:column="13"/></index></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <literal type="number" pos:line="51" pos:column="16">0<pos:position pos:line="51" pos:column="17"/></literal></expr>;<pos:position pos:line="51" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">mutt_addrlist_to_intl<pos:position pos:line="52" pos:column="28"/></name> <argument_list pos:line="52" pos:column="29">(<argument><expr><name><name pos:line="52" pos:column="30">e<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">-&gt;<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="33">cc<pos:position pos:line="52" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">NULL<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">rfc822_write_address<pos:position pos:line="53" pos:column="27"/></name> <argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">tmp<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="34">sizeof <argument_list pos:line="53" pos:column="41">(<argument><expr><name pos:line="53" pos:column="42">tmp<pos:position pos:line="53" pos:column="45"/></name></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="48">e<pos:position pos:line="53" pos:column="49"/></name><operator pos:line="53" pos:column="49">-&gt;<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="51">cc<pos:position pos:line="53" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="55">1<pos:position pos:line="53" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">mutt_window_mvaddstr<pos:position pos:line="54" pos:column="27"/></name> <argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">MuttMessageWindow<pos:position pos:line="54" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="48">0<pos:position pos:line="54" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="51">4<pos:position pos:line="54" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">tmp<pos:position pos:line="54" pos:column="57"/></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then>
    <else pos:line="56" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">mutt_addrlist_to_intl<pos:position pos:line="57" pos:column="28"/></name> <argument_list pos:line="57" pos:column="29">(<argument><expr><name><name pos:line="57" pos:column="30">e<pos:position pos:line="57" pos:column="31"/></name><operator pos:line="57" pos:column="31">-&gt;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="33">cc<pos:position pos:line="57" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="37">NULL<pos:position pos:line="57" pos:column="41"/></name></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">addch<pos:position pos:line="58" pos:column="10"/></name> <argument_list pos:line="58" pos:column="11">(<argument><expr><literal type="char" pos:line="58" pos:column="12">'\n'<pos:position pos:line="58" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>

  <if pos:line="61" pos:column="3">if <condition pos:line="61" pos:column="6">(<expr><call><name pos:line="61" pos:column="7">option<pos:position pos:line="61" pos:column="13"/></name> <argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">OPTASKBCC<pos:position pos:line="61" pos:column="24"/></name></expr></argument>)<pos:position pos:line="61" pos:column="25"/></argument_list></call> <operator pos:line="61" pos:column="26">||<pos:position pos:line="61" pos:column="28"/></operator> <name pos:line="61" pos:column="29">force<pos:position pos:line="61" pos:column="34"/></name></expr>)<pos:position pos:line="61" pos:column="35"/></condition><then pos:line="61" pos:column="35">
  <block pos:line="62" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">addstr<pos:position pos:line="63" pos:column="11"/></name> <argument_list pos:line="63" pos:column="12">(<argument><expr><literal type="string" pos:line="63" pos:column="13">"Bcc: "<pos:position pos:line="63" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">tmp<pos:position pos:line="64" pos:column="8"/></name><index pos:line="64" pos:column="8">[<expr><literal type="number" pos:line="64" pos:column="9">0<pos:position pos:line="64" pos:column="10"/></literal></expr>]<pos:position pos:line="64" pos:column="11"/></index></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <literal type="number" pos:line="64" pos:column="14">0<pos:position pos:line="64" pos:column="15"/></literal></expr>;<pos:position pos:line="64" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">mutt_addrlist_to_local<pos:position pos:line="65" pos:column="27"/></name> <argument_list pos:line="65" pos:column="28">(<argument><expr><name><name pos:line="65" pos:column="29">e<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">-&gt;<pos:position pos:line="65" pos:column="35"/></operator><name pos:line="65" pos:column="32">bcc<pos:position pos:line="65" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">rfc822_write_address<pos:position pos:line="66" pos:column="25"/></name> <argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">tmp<pos:position pos:line="66" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="32">sizeof <argument_list pos:line="66" pos:column="39">(<argument><expr><name pos:line="66" pos:column="40">tmp<pos:position pos:line="66" pos:column="43"/></name></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="46">e<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">-&gt;<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="49">bcc<pos:position pos:line="66" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="54">0<pos:position pos:line="66" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><call><name pos:line="67" pos:column="9">mutt_enter_string<pos:position pos:line="67" pos:column="26"/></name> <argument_list pos:line="67" pos:column="27">(<argument><expr><name pos:line="67" pos:column="28">tmp<pos:position pos:line="67" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="33">sizeof <argument_list pos:line="67" pos:column="40">(<argument><expr><name pos:line="67" pos:column="41">tmp<pos:position pos:line="67" pos:column="44"/></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="47">5<pos:position pos:line="67" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="50">0<pos:position pos:line="67" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call> <operator pos:line="67" pos:column="53">==<pos:position pos:line="67" pos:column="55"/></operator> <literal type="number" pos:line="67" pos:column="56">0<pos:position pos:line="67" pos:column="57"/></literal></expr>)<pos:position pos:line="67" pos:column="58"/></condition><then pos:line="67" pos:column="58">
    <block pos:line="68" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">rfc822_free_address<pos:position pos:line="69" pos:column="26"/></name> <argument_list pos:line="69" pos:column="27">(<argument><expr><operator pos:line="69" pos:column="28">&amp;<pos:position pos:line="69" pos:column="33"/></operator><name><name pos:line="69" pos:column="29">e<pos:position pos:line="69" pos:column="30"/></name><operator pos:line="69" pos:column="30">-&gt;<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="32">bcc<pos:position pos:line="69" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="70" pos:column="7">e<pos:position pos:line="70" pos:column="8"/></name><operator pos:line="70" pos:column="8">-&gt;<pos:position pos:line="70" pos:column="13"/></operator><name pos:line="70" pos:column="10">bcc<pos:position pos:line="70" pos:column="13"/></name></name> <operator pos:line="70" pos:column="14">=<pos:position pos:line="70" pos:column="15"/></operator> <call><name pos:line="70" pos:column="16">mutt_parse_adrlist<pos:position pos:line="70" pos:column="34"/></name> <argument_list pos:line="70" pos:column="35">(<argument><expr><name><name pos:line="70" pos:column="36">e<pos:position pos:line="70" pos:column="37"/></name><operator pos:line="70" pos:column="37">-&gt;<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="39">bcc<pos:position pos:line="70" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="44">tmp<pos:position pos:line="70" pos:column="47"/></name></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="71" pos:column="7">e<pos:position pos:line="71" pos:column="8"/></name><operator pos:line="71" pos:column="8">-&gt;<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="10">bcc<pos:position pos:line="71" pos:column="13"/></name></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <call><name pos:line="71" pos:column="16">mutt_expand_aliases<pos:position pos:line="71" pos:column="35"/></name> <argument_list pos:line="71" pos:column="36">(<argument><expr><name><name pos:line="71" pos:column="37">e<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">-&gt;<pos:position pos:line="71" pos:column="43"/></operator><name pos:line="71" pos:column="40">bcc<pos:position pos:line="71" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">mutt_addrlist_to_intl<pos:position pos:line="72" pos:column="28"/></name> <argument_list pos:line="72" pos:column="29">(<argument><expr><name><name pos:line="72" pos:column="30">e<pos:position pos:line="72" pos:column="31"/></name><operator pos:line="72" pos:column="31">-&gt;<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="33">bcc<pos:position pos:line="72" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="38">NULL<pos:position pos:line="72" pos:column="42"/></name></expr></argument>)<pos:position pos:line="72" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="73" pos:column="7">tmp<pos:position pos:line="73" pos:column="10"/></name><index pos:line="73" pos:column="10">[<expr><literal type="number" pos:line="73" pos:column="11">0<pos:position pos:line="73" pos:column="12"/></literal></expr>]<pos:position pos:line="73" pos:column="13"/></index></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <literal type="number" pos:line="73" pos:column="16">0<pos:position pos:line="73" pos:column="17"/></literal></expr>;<pos:position pos:line="73" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">rfc822_write_address<pos:position pos:line="74" pos:column="27"/></name> <argument_list pos:line="74" pos:column="28">(<argument><expr><name pos:line="74" pos:column="29">tmp<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="34">sizeof <argument_list pos:line="74" pos:column="41">(<argument><expr><name pos:line="74" pos:column="42">tmp<pos:position pos:line="74" pos:column="45"/></name></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="48">e<pos:position pos:line="74" pos:column="49"/></name><operator pos:line="74" pos:column="49">-&gt;<pos:position pos:line="74" pos:column="54"/></operator><name pos:line="74" pos:column="51">bcc<pos:position pos:line="74" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="56">1<pos:position pos:line="74" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">mutt_window_mvaddstr<pos:position pos:line="75" pos:column="27"/></name> <argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">MuttMessageWindow<pos:position pos:line="75" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="48">0<pos:position pos:line="75" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="51">5<pos:position pos:line="75" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="54">tmp<pos:position pos:line="75" pos:column="57"/></name></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then>
    <else pos:line="77" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="7">mutt_addrlist_to_intl<pos:position pos:line="78" pos:column="28"/></name> <argument_list pos:line="78" pos:column="29">(<argument><expr><name><name pos:line="78" pos:column="30">e<pos:position pos:line="78" pos:column="31"/></name><operator pos:line="78" pos:column="31">-&gt;<pos:position pos:line="78" pos:column="36"/></operator><name pos:line="78" pos:column="33">bcc<pos:position pos:line="78" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="38">NULL<pos:position pos:line="78" pos:column="42"/></name></expr></argument>)<pos:position pos:line="78" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="44"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">addch<pos:position pos:line="79" pos:column="10"/></name> <argument_list pos:line="79" pos:column="11">(<argument><expr><literal type="char" pos:line="79" pos:column="12">'\n'<pos:position pos:line="79" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

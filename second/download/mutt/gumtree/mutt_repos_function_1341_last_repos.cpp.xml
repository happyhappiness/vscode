<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1341_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name> <parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">argc<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">argv<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ADDRESS<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">list<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buf<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><literal type="number" pos:line="4" pos:column="12">256<pos:position pos:line="4" pos:column="15"/></literal></expr>]<pos:position pos:line="4" pos:column="16"/></index></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1"># <cpp:directive pos:line="5" pos:column="3">if<pos:position pos:line="5" pos:column="5"/></cpp:directive> <expr><literal type="number" pos:line="5" pos:column="6">0<pos:position pos:line="5" pos:column="7"/></literal></expr></cpp:if>
  char *str = "michael, Michael Elkins &lt;me@mutt.org&gt;, testing a really complex address: this example &lt;@contains.a.source.route,@with.multiple.hosts:address@example.com&gt;;, lothar@of.the.hillpeople (lothar)";
<cpp:else pos:line="7" pos:column="1"># <cpp:directive pos:line="7" pos:column="3">else<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">str<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><literal type="string" pos:line="8" pos:column="15">"a b c "<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1"># <cpp:directive pos:line="9" pos:column="3">endif<pos:position pos:line="9" pos:column="8"/></cpp:directive></cpp:endif>
  
  <expr_stmt><expr><name pos:line="11" pos:column="3">list<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">rfc822_parse_adrlist<pos:position pos:line="11" pos:column="30"/></name> <argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">NULL<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">str<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">buf<pos:position pos:line="12" pos:column="6"/></name><index pos:line="12" pos:column="6">[<expr><literal type="number" pos:line="12" pos:column="7">0<pos:position pos:line="12" pos:column="8"/></literal></expr>]<pos:position pos:line="12" pos:column="9"/></index></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">rfc822_write_address<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">buf<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="30">sizeof <argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">buf<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">list<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">rfc822_free_address<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><operator pos:line="14" pos:column="24">&amp;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="25">list<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">puts<pos:position pos:line="15" pos:column="7"/></name> <argument_list pos:line="15" pos:column="8">(<argument><expr><name pos:line="15" pos:column="9">buf<pos:position pos:line="15" pos:column="12"/></name></expr></argument>)<pos:position pos:line="15" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">exit<pos:position pos:line="16" pos:column="7"/></name> <argument_list pos:line="16" pos:column="8">(<argument><expr><literal type="number" pos:line="16" pos:column="9">0<pos:position pos:line="16" pos:column="10"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="12"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

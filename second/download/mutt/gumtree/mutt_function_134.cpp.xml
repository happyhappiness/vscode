<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_function_134.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">mutt_print_attachment<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">FILE<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">fp<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">BODY<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">a<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">newfile<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><name pos:line="3" pos:column="16">_POSIX_PATH_MAX<pos:position pos:line="3" pos:column="31"/></name></expr>]<pos:position pos:line="3" pos:column="32"/></index></name> <init pos:line="3" pos:column="33">= <expr><literal type="string" pos:line="3" pos:column="35">""<pos:position pos:line="3" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">type<pos:position pos:line="4" pos:column="12"/></name><index pos:line="4" pos:column="12">[<expr><name pos:line="4" pos:column="13">STRING<pos:position pos:line="4" pos:column="19"/></name></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">pid_t<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">thepid<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">FILE<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">ifp<pos:position pos:line="6" pos:column="12"/></name></decl>, <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="15">fpout<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">short<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">unlink_newfile<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">snprintf<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">type<pos:position pos:line="9" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="19">sizeof <argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">type<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"%s/%s"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="43">TYPE<pos:position pos:line="9" pos:column="47"/></name> <argument_list pos:line="9" pos:column="48">(<argument><expr><name pos:line="9" pos:column="49">a<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="53">a<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">-&gt;<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="56">subtype<pos:position pos:line="9" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">rfc1524_mailcap_lookup<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">a<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">type<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">NULL<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">M_PRINT<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55"> 
  <block pos:line="12" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">command<pos:position pos:line="13" pos:column="17"/></name><index pos:line="13" pos:column="17">[<expr><name pos:line="13" pos:column="18">_POSIX_PATH_MAX<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">+<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">STRING<pos:position pos:line="13" pos:column="40"/></name></expr>]<pos:position pos:line="13" pos:column="41"/></index></name></decl>;<pos:position pos:line="13" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">rfc1524_entry<pos:position pos:line="14" pos:column="18"/></name> <modifier pos:line="14" pos:column="19">*<pos:position pos:line="14" pos:column="20"/></modifier></type><name pos:line="14" pos:column="20">entry<pos:position pos:line="14" pos:column="25"/></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">piped<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><name pos:line="15" pos:column="17">FALSE<pos:position pos:line="15" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">dprint<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><literal type="number" pos:line="17" pos:column="13">2<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">debugfile<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">,<pos:position pos:line="17" pos:column="27"/></operator> <literal type="string" pos:line="17" pos:column="28">"Using mailcap...\n"<pos:position pos:line="17" pos:column="48"/></literal><operator pos:line="17" pos:column="48">)<pos:position pos:line="17" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="19" pos:column="5">entry<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">rfc1524_new_entry<pos:position pos:line="19" pos:column="30"/></name> <argument_list pos:line="19" pos:column="31">()<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">rfc1524_mailcap_lookup<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">a<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="32">type<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">entry<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">M_PRINT<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">rfc1524_expand_filename<pos:position pos:line="21" pos:column="32"/></name> <argument_list pos:line="21" pos:column="33">(<argument><expr><name><name pos:line="21" pos:column="34">entry<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">nametemplate<pos:position pos:line="21" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="55">a<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">-&gt;<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="58">filename<pos:position pos:line="21" pos:column="66"/></name></name></expr></argument>,
						  <argument><expr><name pos:line="22" pos:column="51">newfile<pos:position pos:line="22" pos:column="58"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="60">sizeof <argument_list pos:line="22" pos:column="67">(<argument><expr><name pos:line="22" pos:column="68">newfile<pos:position pos:line="22" pos:column="75"/></name></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="78"/></condition><then pos:line="22" pos:column="78">
    <block pos:line="23" pos:column="5">{
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><operator pos:line="24" pos:column="11">!<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">fp<pos:position pos:line="24" pos:column="14"/></name></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15">
      <block pos:line="25" pos:column="7">{
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">safe_symlink<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name><name pos:line="26" pos:column="26">a<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">filename<pos:position pos:line="26" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">newfile<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call> <operator pos:line="26" pos:column="48">==<pos:position pos:line="26" pos:column="50"/></operator> <operator pos:line="26" pos:column="51">-<pos:position pos:line="26" pos:column="52"/></operator><literal type="number" pos:line="26" pos:column="52">1<pos:position pos:line="26" pos:column="53"/></literal></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54">
	<block pos:line="27" pos:column="9">{
	  <if pos:line="28" pos:column="11">if <condition pos:line="28" pos:column="14">(<expr><call><name pos:line="28" pos:column="15">mutt_yesorno<pos:position pos:line="28" pos:column="27"/></name> <argument_list pos:line="28" pos:column="28">(<argument><expr><call><name pos:line="28" pos:column="29">_<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><literal type="string" pos:line="28" pos:column="31">"Can't match nametemplate, continue?"<pos:position pos:line="28" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="71">M_YES<pos:position pos:line="28" pos:column="76"/></name></expr></argument>)<pos:position pos:line="28" pos:column="77"/></argument_list></call> <operator pos:line="28" pos:column="78">!=<pos:position pos:line="28" pos:column="80"/></operator> <name pos:line="28" pos:column="81">M_YES<pos:position pos:line="28" pos:column="86"/></name></expr>)<pos:position pos:line="28" pos:column="87"/></condition><then pos:line="28" pos:column="87">
	  <block pos:line="29" pos:column="11">{
	    <expr_stmt><expr><call><name pos:line="30" pos:column="13">rfc1524_free_entry<pos:position pos:line="30" pos:column="31"/></name> <argument_list pos:line="30" pos:column="32">(<argument><expr><operator pos:line="30" pos:column="33">&amp;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="34">entry<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
	    <return pos:line="31" pos:column="13">return <expr><literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></return>
	  }<pos:position pos:line="32" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><call><name pos:line="33" pos:column="11">strfcpy<pos:position pos:line="33" pos:column="18"/></name> <argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">newfile<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="29">a<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">-&gt;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="32">filename<pos:position pos:line="33" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="42">sizeof <argument_list pos:line="33" pos:column="49">(<argument><expr><name pos:line="33" pos:column="50">newfile<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then>
	<else pos:line="35" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="11">unlink_newfile<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <literal type="number" pos:line="36" pos:column="28">1<pos:position pos:line="36" pos:column="29"/></literal></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt></block></else></if>
      }<pos:position pos:line="37" pos:column="8"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="40" pos:column="5">/* in recv mode, save file to newfile first */</comment>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">fp<pos:position pos:line="41" pos:column="11"/></name></expr>)<pos:position pos:line="41" pos:column="12"/></condition><then pos:line="41" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">mutt_save_attachment<pos:position pos:line="42" pos:column="27"/></name> <argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">fp<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="33">a<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">newfile<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="45">0<pos:position pos:line="42" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">NULL<pos:position pos:line="42" pos:column="52"/></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">strfcpy<pos:position pos:line="44" pos:column="12"/></name> <argument_list pos:line="44" pos:column="13">(<argument><expr><name pos:line="44" pos:column="14">command<pos:position pos:line="44" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="23">entry<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">printcommand<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="44">sizeof <argument_list pos:line="44" pos:column="51">(<argument><expr><name pos:line="44" pos:column="52">command<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">piped<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <call><name pos:line="45" pos:column="13">rfc1524_expand_command<pos:position pos:line="45" pos:column="35"/></name> <argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">a<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">newfile<pos:position pos:line="45" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="49">type<pos:position pos:line="45" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="55">command<pos:position pos:line="45" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="64">sizeof <argument_list pos:line="45" pos:column="71">(<argument><expr><name pos:line="45" pos:column="72">command<pos:position pos:line="45" pos:column="79"/></name></expr></argument>)<pos:position pos:line="45" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="82"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">mutt_endwin<pos:position pos:line="47" pos:column="16"/></name> <argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">NULL<pos:position pos:line="47" pos:column="22"/></name></expr></argument>)<pos:position pos:line="47" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* interactive program */</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">piped<pos:position pos:line="50" pos:column="14"/></name></expr>)<pos:position pos:line="50" pos:column="15"/></condition><then pos:line="50" pos:column="15">
    <block pos:line="51" pos:column="5">{
      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><operator pos:line="52" pos:column="11">(<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="12">ifp<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">fopen<pos:position pos:line="52" pos:column="23"/></name> <argument_list pos:line="52" pos:column="24">(<argument><expr><name pos:line="52" pos:column="25">newfile<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="34">"r"<pos:position pos:line="52" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call><operator pos:line="52" pos:column="38">)<pos:position pos:line="52" pos:column="39"/></operator> <operator pos:line="52" pos:column="40">==<pos:position pos:line="52" pos:column="42"/></operator> <name pos:line="52" pos:column="43">NULL<pos:position pos:line="52" pos:column="47"/></name></expr>)<pos:position pos:line="52" pos:column="48"/></condition><then pos:line="52" pos:column="48">
      <block pos:line="53" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">mutt_perror<pos:position pos:line="54" pos:column="20"/></name> <argument_list pos:line="54" pos:column="21">(<argument><expr><literal type="string" pos:line="54" pos:column="22">"fopen"<pos:position pos:line="54" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">rfc1524_free_entry<pos:position pos:line="55" pos:column="27"/></name> <argument_list pos:line="55" pos:column="28">(<argument><expr><operator pos:line="55" pos:column="29">&amp;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="30">entry<pos:position pos:line="55" pos:column="35"/></name></expr></argument>)<pos:position pos:line="55" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt>
	<return pos:line="56" pos:column="9">return <expr><operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal><operator pos:line="56" pos:column="18">)<pos:position pos:line="56" pos:column="19"/></operator></expr>;<pos:position pos:line="56" pos:column="20"/></return>
      }<pos:position pos:line="57" pos:column="8"/></block></then></if>

      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><operator pos:line="59" pos:column="11">(<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="12">thepid<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">mutt_create_filter<pos:position pos:line="59" pos:column="39"/></name> <argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">command<pos:position pos:line="59" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="50">&amp;<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="51">fpout<pos:position pos:line="59" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="58">NULL<pos:position pos:line="59" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="64">NULL<pos:position pos:line="59" pos:column="68"/></name></expr></argument>)<pos:position pos:line="59" pos:column="69"/></argument_list></call><operator pos:line="59" pos:column="69">)<pos:position pos:line="59" pos:column="70"/></operator> <operator pos:line="59" pos:column="71">&lt;<pos:position pos:line="59" pos:column="75"/></operator> <literal type="number" pos:line="59" pos:column="73">0<pos:position pos:line="59" pos:column="74"/></literal></expr>)<pos:position pos:line="59" pos:column="75"/></condition><then pos:line="59" pos:column="75">
      <block pos:line="60" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="61" pos:column="9">mutt_perror<pos:position pos:line="61" pos:column="20"/></name></type> <name pos:line="61" pos:column="21">_<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><literal type="string" pos:line="61" pos:column="23">"Can't create filter"<pos:position pos:line="61" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="45"/></argument_list></decl>;<pos:position pos:line="61" pos:column="46"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">rfc1524_free_entry<pos:position pos:line="62" pos:column="27"/></name> <argument_list pos:line="62" pos:column="28">(<argument><expr><operator pos:line="62" pos:column="29">&amp;<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="30">entry<pos:position pos:line="62" pos:column="35"/></name></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">safe_fclose<pos:position pos:line="63" pos:column="20"/></name> <argument_list pos:line="63" pos:column="21">(<argument><expr><operator pos:line="63" pos:column="22">&amp;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="23">ifp<pos:position pos:line="63" pos:column="26"/></name></expr></argument>)<pos:position pos:line="63" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
	<return pos:line="64" pos:column="9">return <expr><literal type="number" pos:line="64" pos:column="16">0<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></return>
      }<pos:position pos:line="65" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="66" pos:column="7">mutt_copy_stream<pos:position pos:line="66" pos:column="23"/></name> <argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">ifp<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="30">fpout<pos:position pos:line="66" pos:column="35"/></name></expr></argument>)<pos:position pos:line="66" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">safe_fclose<pos:position pos:line="67" pos:column="18"/></name> <argument_list pos:line="67" pos:column="19">(<argument><expr><operator pos:line="67" pos:column="20">&amp;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="21">fpout<pos:position pos:line="67" pos:column="26"/></name></expr></argument>)<pos:position pos:line="67" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">safe_fclose<pos:position pos:line="68" pos:column="18"/></name> <argument_list pos:line="68" pos:column="19">(<argument><expr><operator pos:line="68" pos:column="20">&amp;<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="21">ifp<pos:position pos:line="68" pos:column="24"/></name></expr></argument>)<pos:position pos:line="68" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt>
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><call><name pos:line="69" pos:column="11">mutt_wait_filter<pos:position pos:line="69" pos:column="27"/></name> <argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">thepid<pos:position pos:line="69" pos:column="35"/></name></expr></argument>)<pos:position pos:line="69" pos:column="36"/></argument_list></call> <operator pos:line="69" pos:column="37">||<pos:position pos:line="69" pos:column="39"/></operator> <call><name pos:line="69" pos:column="40">option<pos:position pos:line="69" pos:column="46"/></name> <argument_list pos:line="69" pos:column="47">(<argument><expr><name pos:line="69" pos:column="48">OPTWAITKEY<pos:position pos:line="69" pos:column="58"/></name></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="60"/></condition><then pos:line="69" pos:column="60">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="9">mutt_any_key_to_continue<pos:position pos:line="70" pos:column="33"/></name> <argument_list pos:line="70" pos:column="34">(<argument><expr><name pos:line="70" pos:column="35">NULL<pos:position pos:line="70" pos:column="39"/></name></expr></argument>)<pos:position pos:line="70" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="41"/></expr_stmt></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then>
    <else pos:line="72" pos:column="5">else
    <block pos:line="73" pos:column="5">{
      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><call><name pos:line="74" pos:column="11">mutt_system<pos:position pos:line="74" pos:column="22"/></name> <argument_list pos:line="74" pos:column="23">(<argument><expr><name pos:line="74" pos:column="24">command<pos:position pos:line="74" pos:column="31"/></name></expr></argument>)<pos:position pos:line="74" pos:column="32"/></argument_list></call> <operator pos:line="74" pos:column="33">||<pos:position pos:line="74" pos:column="35"/></operator> <call><name pos:line="74" pos:column="36">option<pos:position pos:line="74" pos:column="42"/></name> <argument_list pos:line="74" pos:column="43">(<argument><expr><name pos:line="74" pos:column="44">OPTWAITKEY<pos:position pos:line="74" pos:column="54"/></name></expr></argument>)<pos:position pos:line="74" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="56"/></condition><then pos:line="74" pos:column="56">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="9">mutt_any_key_to_continue<pos:position pos:line="75" pos:column="33"/></name> <argument_list pos:line="75" pos:column="34">(<argument><expr><name pos:line="75" pos:column="35">NULL<pos:position pos:line="75" pos:column="39"/></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></else></if>

    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name pos:line="78" pos:column="9">fp<pos:position pos:line="78" pos:column="11"/></name></expr>)<pos:position pos:line="78" pos:column="12"/></condition><then pos:line="78" pos:column="12">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="7">mutt_unlink<pos:position pos:line="79" pos:column="18"/></name> <argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">newfile<pos:position pos:line="79" pos:column="27"/></name></expr></argument>)<pos:position pos:line="79" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt></block></then>
    <elseif pos:line="80" pos:column="5">else <if pos:line="80" pos:column="10">if <condition pos:line="80" pos:column="13">(<expr><name pos:line="80" pos:column="14">unlink_newfile<pos:position pos:line="80" pos:column="28"/></name></expr>)<pos:position pos:line="80" pos:column="29"/></condition><then pos:line="80" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="7">unlink<pos:position pos:line="81" pos:column="13"/></name><argument_list pos:line="81" pos:column="13">(<argument><expr><name pos:line="81" pos:column="14">newfile<pos:position pos:line="81" pos:column="21"/></name></expr></argument>)<pos:position pos:line="81" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="23"/></expr_stmt></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">rfc1524_free_entry<pos:position pos:line="83" pos:column="23"/></name> <argument_list pos:line="83" pos:column="24">(<argument><expr><operator pos:line="83" pos:column="25">&amp;<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="26">entry<pos:position pos:line="83" pos:column="31"/></name></expr></argument>)<pos:position pos:line="83" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="33"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">(<pos:position pos:line="84" pos:column="13"/></operator><literal type="number" pos:line="84" pos:column="13">1<pos:position pos:line="84" pos:column="14"/></literal><operator pos:line="84" pos:column="14">)<pos:position pos:line="84" pos:column="15"/></operator></expr>;<pos:position pos:line="84" pos:column="16"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>

  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><operator pos:line="87" pos:column="7">!<pos:position pos:line="87" pos:column="8"/></operator><call><name pos:line="87" pos:column="8">ascii_strcasecmp<pos:position pos:line="87" pos:column="24"/></name> <argument_list pos:line="87" pos:column="25">(<argument><expr><literal type="string" pos:line="87" pos:column="26">"text/plain"<pos:position pos:line="87" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="40">type<pos:position pos:line="87" pos:column="44"/></name></expr></argument>)<pos:position pos:line="87" pos:column="45"/></argument_list></call> <operator pos:line="87" pos:column="46">||<pos:position pos:line="87" pos:column="48"/></operator>
      <operator pos:line="88" pos:column="7">!<pos:position pos:line="88" pos:column="8"/></operator><call><name pos:line="88" pos:column="8">ascii_strcasecmp<pos:position pos:line="88" pos:column="24"/></name> <argument_list pos:line="88" pos:column="25">(<argument><expr><literal type="string" pos:line="88" pos:column="26">"application/postscript"<pos:position pos:line="88" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="52">type<pos:position pos:line="88" pos:column="56"/></name></expr></argument>)<pos:position pos:line="88" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="58"/></condition><then pos:line="88" pos:column="58">
  <block pos:line="89" pos:column="3">{
    <return pos:line="90" pos:column="5">return <expr><operator pos:line="90" pos:column="12">(<pos:position pos:line="90" pos:column="13"/></operator><call><name pos:line="90" pos:column="13">mutt_pipe_attachment<pos:position pos:line="90" pos:column="33"/></name> <argument_list pos:line="90" pos:column="34">(<argument><expr><name pos:line="90" pos:column="35">fp<pos:position pos:line="90" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="39">a<pos:position pos:line="90" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="90" pos:column="42">NONULL<pos:position pos:line="90" pos:column="48"/></name><argument_list pos:line="90" pos:column="48">(<argument><expr><name pos:line="90" pos:column="49">PrintCmd<pos:position pos:line="90" pos:column="57"/></name></expr></argument>)<pos:position pos:line="90" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="90" pos:column="60">NULL<pos:position pos:line="90" pos:column="64"/></name></expr></argument>)<pos:position pos:line="90" pos:column="65"/></argument_list></call><operator pos:line="90" pos:column="65">)<pos:position pos:line="90" pos:column="66"/></operator></expr>;<pos:position pos:line="90" pos:column="67"/></return>
  }<pos:position pos:line="91" pos:column="4"/></block></then>
  <elseif pos:line="92" pos:column="3">else <if pos:line="92" pos:column="8">if <condition pos:line="92" pos:column="11">(<expr><call><name pos:line="92" pos:column="12">mutt_can_decode<pos:position pos:line="92" pos:column="27"/></name> <argument_list pos:line="92" pos:column="28">(<argument><expr><name pos:line="92" pos:column="29">a<pos:position pos:line="92" pos:column="30"/></name></expr></argument>)<pos:position pos:line="92" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="32"/></condition><then pos:line="92" pos:column="32">
  <block pos:line="93" pos:column="3">{
    <comment type="block" pos:line="94" pos:column="5">/* decode and print */</comment>

    <decl_stmt><decl><type><name pos:line="96" pos:column="5">int<pos:position pos:line="96" pos:column="8"/></name></type> <name pos:line="96" pos:column="9">rc<pos:position pos:line="96" pos:column="11"/></name> <init pos:line="96" pos:column="12">= <expr><literal type="number" pos:line="96" pos:column="14">0<pos:position pos:line="96" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="96" pos:column="16"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="98" pos:column="5">ifp<pos:position pos:line="98" pos:column="8"/></name> <operator pos:line="98" pos:column="9">=<pos:position pos:line="98" pos:column="10"/></operator> <name pos:line="98" pos:column="11">NULL<pos:position pos:line="98" pos:column="15"/></name></expr>;<pos:position pos:line="98" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="99" pos:column="5">fpout<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">=<pos:position pos:line="99" pos:column="12"/></operator> <name pos:line="99" pos:column="13">NULL<pos:position pos:line="99" pos:column="17"/></name></expr>;<pos:position pos:line="99" pos:column="18"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">mutt_mktemp<pos:position pos:line="101" pos:column="16"/></name> <argument_list pos:line="101" pos:column="17">(<argument><expr><name pos:line="101" pos:column="18">newfile<pos:position pos:line="101" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="101" pos:column="27">sizeof <argument_list pos:line="101" pos:column="34">(<argument><expr><name pos:line="101" pos:column="35">newfile<pos:position pos:line="101" pos:column="42"/></name></expr></argument>)<pos:position pos:line="101" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="45"/></expr_stmt>
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><call><name pos:line="102" pos:column="9">mutt_decode_save_attachment<pos:position pos:line="102" pos:column="36"/></name> <argument_list pos:line="102" pos:column="37">(<argument><expr><name pos:line="102" pos:column="38">fp<pos:position pos:line="102" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="42">a<pos:position pos:line="102" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="45">newfile<pos:position pos:line="102" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="54">M_PRINTING<pos:position pos:line="102" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="66">0<pos:position pos:line="102" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="68"/></argument_list></call> <operator pos:line="102" pos:column="69">==<pos:position pos:line="102" pos:column="71"/></operator> <literal type="number" pos:line="102" pos:column="72">0<pos:position pos:line="102" pos:column="73"/></literal></expr>)<pos:position pos:line="102" pos:column="74"/></condition><then pos:line="102" pos:column="74">
    <block pos:line="103" pos:column="5">{
      
      <expr_stmt><expr><call><name pos:line="105" pos:column="7">dprint<pos:position pos:line="105" pos:column="13"/></name> <argument_list pos:line="105" pos:column="14">(<argument><expr><literal type="number" pos:line="105" pos:column="15">2<pos:position pos:line="105" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="105" pos:column="18">(<pos:position pos:line="105" pos:column="19"/></operator><name pos:line="105" pos:column="19">debugfile<pos:position pos:line="105" pos:column="28"/></name><operator pos:line="105" pos:column="28">,<pos:position pos:line="105" pos:column="29"/></operator> <literal type="string" pos:line="105" pos:column="30">"successfully decoded %s type attachment to %s\n"<pos:position pos:line="105" pos:column="79"/></literal><operator pos:line="105" pos:column="79">,<pos:position pos:line="105" pos:column="80"/></operator>
		  <name pos:line="106" pos:column="19">type<pos:position pos:line="106" pos:column="23"/></name><operator pos:line="106" pos:column="23">,<pos:position pos:line="106" pos:column="24"/></operator> <name pos:line="106" pos:column="25">newfile<pos:position pos:line="106" pos:column="32"/></name><operator pos:line="106" pos:column="32">)<pos:position pos:line="106" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="106" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="35"/></expr_stmt>
      
      <if pos:line="108" pos:column="7">if <condition pos:line="108" pos:column="10">(<expr><operator pos:line="108" pos:column="11">(<pos:position pos:line="108" pos:column="12"/></operator><name pos:line="108" pos:column="12">ifp<pos:position pos:line="108" pos:column="15"/></name> <operator pos:line="108" pos:column="16">=<pos:position pos:line="108" pos:column="17"/></operator> <call><name pos:line="108" pos:column="18">fopen<pos:position pos:line="108" pos:column="23"/></name> <argument_list pos:line="108" pos:column="24">(<argument><expr><name pos:line="108" pos:column="25">newfile<pos:position pos:line="108" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="34">"r"<pos:position pos:line="108" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="38"/></argument_list></call><operator pos:line="108" pos:column="38">)<pos:position pos:line="108" pos:column="39"/></operator> <operator pos:line="108" pos:column="40">==<pos:position pos:line="108" pos:column="42"/></operator> <name pos:line="108" pos:column="43">NULL<pos:position pos:line="108" pos:column="47"/></name></expr>)<pos:position pos:line="108" pos:column="48"/></condition><then pos:line="108" pos:column="48">
      <block pos:line="109" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="110" pos:column="9">mutt_perror<pos:position pos:line="110" pos:column="20"/></name> <argument_list pos:line="110" pos:column="21">(<argument><expr><literal type="string" pos:line="110" pos:column="22">"fopen"<pos:position pos:line="110" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="31"/></expr_stmt>
	<goto pos:line="111" pos:column="9">goto <name pos:line="111" pos:column="14">bail0<pos:position pos:line="111" pos:column="19"/></name>;<pos:position pos:line="111" pos:column="20"/></goto>
      }<pos:position pos:line="112" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="114" pos:column="7">dprint<pos:position pos:line="114" pos:column="13"/></name> <argument_list pos:line="114" pos:column="14">(<argument><expr><literal type="number" pos:line="114" pos:column="15">2<pos:position pos:line="114" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="114" pos:column="18">(<pos:position pos:line="114" pos:column="19"/></operator><name pos:line="114" pos:column="19">debugfile<pos:position pos:line="114" pos:column="28"/></name><operator pos:line="114" pos:column="28">,<pos:position pos:line="114" pos:column="29"/></operator> <literal type="string" pos:line="114" pos:column="30">"successfully opened %s read-only\n"<pos:position pos:line="114" pos:column="66"/></literal><operator pos:line="114" pos:column="66">,<pos:position pos:line="114" pos:column="67"/></operator> <name pos:line="114" pos:column="68">newfile<pos:position pos:line="114" pos:column="75"/></name><operator pos:line="114" pos:column="75">)<pos:position pos:line="114" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="114" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="78"/></expr_stmt>
      
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">mutt_endwin<pos:position pos:line="116" pos:column="18"/></name> <argument_list pos:line="116" pos:column="19">(<argument><expr><name pos:line="116" pos:column="20">NULL<pos:position pos:line="116" pos:column="24"/></name></expr></argument>)<pos:position pos:line="116" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="26"/></expr_stmt>
      <if pos:line="117" pos:column="7">if <condition pos:line="117" pos:column="10">(<expr><operator pos:line="117" pos:column="11">(<pos:position pos:line="117" pos:column="12"/></operator><name pos:line="117" pos:column="12">thepid<pos:position pos:line="117" pos:column="18"/></name> <operator pos:line="117" pos:column="19">=<pos:position pos:line="117" pos:column="20"/></operator> <call><name pos:line="117" pos:column="21">mutt_create_filter<pos:position pos:line="117" pos:column="39"/></name> <argument_list pos:line="117" pos:column="40">(<argument><expr><call><name pos:line="117" pos:column="41">NONULL<pos:position pos:line="117" pos:column="47"/></name><argument_list pos:line="117" pos:column="47">(<argument><expr><name pos:line="117" pos:column="48">PrintCmd<pos:position pos:line="117" pos:column="56"/></name></expr></argument>)<pos:position pos:line="117" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="117" pos:column="59">&amp;<pos:position pos:line="117" pos:column="64"/></operator><name pos:line="117" pos:column="60">fpout<pos:position pos:line="117" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="67">NULL<pos:position pos:line="117" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="73">NULL<pos:position pos:line="117" pos:column="77"/></name></expr></argument>)<pos:position pos:line="117" pos:column="78"/></argument_list></call><operator pos:line="117" pos:column="78">)<pos:position pos:line="117" pos:column="79"/></operator> <operator pos:line="117" pos:column="80">&lt;<pos:position pos:line="117" pos:column="84"/></operator> <literal type="number" pos:line="117" pos:column="82">0<pos:position pos:line="117" pos:column="83"/></literal></expr>)<pos:position pos:line="117" pos:column="84"/></condition><then pos:line="117" pos:column="84">
      <block pos:line="118" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="119" pos:column="9">mutt_perror<pos:position pos:line="119" pos:column="20"/></name></type> <name pos:line="119" pos:column="21">_<pos:position pos:line="119" pos:column="22"/></name><argument_list pos:line="119" pos:column="22">(<argument><expr><literal type="string" pos:line="119" pos:column="23">"Can't create filter"<pos:position pos:line="119" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="45"/></argument_list></decl>;<pos:position pos:line="119" pos:column="46"/></decl_stmt>
	<goto pos:line="120" pos:column="9">goto <name pos:line="120" pos:column="14">bail0<pos:position pos:line="120" pos:column="19"/></name>;<pos:position pos:line="120" pos:column="20"/></goto>
      }<pos:position pos:line="121" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name pos:line="123" pos:column="7">dprint<pos:position pos:line="123" pos:column="13"/></name> <argument_list pos:line="123" pos:column="14">(<argument><expr><literal type="number" pos:line="123" pos:column="15">2<pos:position pos:line="123" pos:column="16"/></literal></expr></argument>, <argument><expr><operator pos:line="123" pos:column="18">(<pos:position pos:line="123" pos:column="19"/></operator><name pos:line="123" pos:column="19">debugfile<pos:position pos:line="123" pos:column="28"/></name><operator pos:line="123" pos:column="28">,<pos:position pos:line="123" pos:column="29"/></operator> <literal type="string" pos:line="123" pos:column="30">"Filter created.\n"<pos:position pos:line="123" pos:column="49"/></literal><operator pos:line="123" pos:column="49">)<pos:position pos:line="123" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="123" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="52"/></expr_stmt>
      
      <expr_stmt><expr><call><name pos:line="125" pos:column="7">mutt_copy_stream<pos:position pos:line="125" pos:column="23"/></name> <argument_list pos:line="125" pos:column="24">(<argument><expr><name pos:line="125" pos:column="25">ifp<pos:position pos:line="125" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="30">fpout<pos:position pos:line="125" pos:column="35"/></name></expr></argument>)<pos:position pos:line="125" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="37"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="127" pos:column="7">safe_fclose<pos:position pos:line="127" pos:column="18"/></name> <argument_list pos:line="127" pos:column="19">(<argument><expr><operator pos:line="127" pos:column="20">&amp;<pos:position pos:line="127" pos:column="25"/></operator><name pos:line="127" pos:column="21">fpout<pos:position pos:line="127" pos:column="26"/></name></expr></argument>)<pos:position pos:line="127" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="128" pos:column="7">safe_fclose<pos:position pos:line="128" pos:column="18"/></name> <argument_list pos:line="128" pos:column="19">(<argument><expr><operator pos:line="128" pos:column="20">&amp;<pos:position pos:line="128" pos:column="25"/></operator><name pos:line="128" pos:column="21">ifp<pos:position pos:line="128" pos:column="24"/></name></expr></argument>)<pos:position pos:line="128" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="26"/></expr_stmt>

      <if pos:line="130" pos:column="7">if <condition pos:line="130" pos:column="10">(<expr><call><name pos:line="130" pos:column="11">mutt_wait_filter<pos:position pos:line="130" pos:column="27"/></name> <argument_list pos:line="130" pos:column="28">(<argument><expr><name pos:line="130" pos:column="29">thepid<pos:position pos:line="130" pos:column="35"/></name></expr></argument>)<pos:position pos:line="130" pos:column="36"/></argument_list></call> <operator pos:line="130" pos:column="37">!=<pos:position pos:line="130" pos:column="39"/></operator> <literal type="number" pos:line="130" pos:column="40">0<pos:position pos:line="130" pos:column="41"/></literal> <operator pos:line="130" pos:column="42">||<pos:position pos:line="130" pos:column="44"/></operator> <call><name pos:line="130" pos:column="45">option<pos:position pos:line="130" pos:column="51"/></name> <argument_list pos:line="130" pos:column="52">(<argument><expr><name pos:line="130" pos:column="53">OPTWAITKEY<pos:position pos:line="130" pos:column="63"/></name></expr></argument>)<pos:position pos:line="130" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="65"/></condition><then pos:line="130" pos:column="65">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="9">mutt_any_key_to_continue<pos:position pos:line="131" pos:column="33"/></name> <argument_list pos:line="131" pos:column="34">(<argument><expr><name pos:line="131" pos:column="35">NULL<pos:position pos:line="131" pos:column="39"/></name></expr></argument>)<pos:position pos:line="131" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="41"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="132" pos:column="7">rc<pos:position pos:line="132" pos:column="9"/></name> <operator pos:line="132" pos:column="10">=<pos:position pos:line="132" pos:column="11"/></operator> <literal type="number" pos:line="132" pos:column="12">1<pos:position pos:line="132" pos:column="13"/></literal></expr>;<pos:position pos:line="132" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="133" pos:column="6"/></block></then></if>
  <label><name pos:line="134" pos:column="3">bail0<pos:position pos:line="134" pos:column="8"/></name>:<pos:position pos:line="134" pos:column="9"/></label>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">safe_fclose<pos:position pos:line="135" pos:column="16"/></name> <argument_list pos:line="135" pos:column="17">(<argument><expr><operator pos:line="135" pos:column="18">&amp;<pos:position pos:line="135" pos:column="23"/></operator><name pos:line="135" pos:column="19">ifp<pos:position pos:line="135" pos:column="22"/></name></expr></argument>)<pos:position pos:line="135" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="136" pos:column="5">safe_fclose<pos:position pos:line="136" pos:column="16"/></name> <argument_list pos:line="136" pos:column="17">(<argument><expr><operator pos:line="136" pos:column="18">&amp;<pos:position pos:line="136" pos:column="23"/></operator><name pos:line="136" pos:column="19">fpout<pos:position pos:line="136" pos:column="24"/></name></expr></argument>)<pos:position pos:line="136" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="137" pos:column="5">mutt_unlink<pos:position pos:line="137" pos:column="16"/></name> <argument_list pos:line="137" pos:column="17">(<argument><expr><name pos:line="137" pos:column="18">newfile<pos:position pos:line="137" pos:column="25"/></name></expr></argument>)<pos:position pos:line="137" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="27"/></expr_stmt>
    <return pos:line="138" pos:column="5">return <expr><name pos:line="138" pos:column="12">rc<pos:position pos:line="138" pos:column="14"/></name></expr>;<pos:position pos:line="138" pos:column="15"/></return>
  }<pos:position pos:line="139" pos:column="4"/></block></then></if></elseif>
  <else pos:line="140" pos:column="3">else
  <block pos:line="141" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="142" pos:column="5">mutt_error<pos:position pos:line="142" pos:column="15"/></name></type> <name pos:line="142" pos:column="16">_<pos:position pos:line="142" pos:column="17"/></name><argument_list pos:line="142" pos:column="17">(<argument><expr><literal type="string" pos:line="142" pos:column="18">"I don't know how to print that!"<pos:position pos:line="142" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="52"/></argument_list></decl>;<pos:position pos:line="142" pos:column="53"/></decl_stmt>
    <return pos:line="143" pos:column="5">return <expr><literal type="number" pos:line="143" pos:column="12">0<pos:position pos:line="143" pos:column="13"/></literal></expr>;<pos:position pos:line="143" pos:column="14"/></return>
  }<pos:position pos:line="144" pos:column="4"/></block></else></if>
}<pos:position pos:line="145" pos:column="2"/></block></function></unit>

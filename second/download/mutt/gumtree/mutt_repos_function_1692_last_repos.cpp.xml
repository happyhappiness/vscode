<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/mutt/gumtree/mutt_repos_function_1692_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_userid<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">id<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init pos:line="3" pos:column="8">;<pos:position pos:line="3" pos:column="9"/></init> <condition><expr><name pos:line="3" pos:column="10">id<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">&amp;&amp;<pos:position pos:line="3" pos:column="23"/></operator> <operator pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">id<pos:position pos:line="3" pos:column="19"/></name></expr>;<pos:position pos:line="3" pos:column="20"/></condition> <incr><expr><name pos:line="3" pos:column="21">id<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">++<pos:position pos:line="3" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="26"/></control>
  <block pos:line="4" pos:column="3">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">id<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">&gt;=<pos:position pos:line="5" pos:column="18"/></operator> <literal type="char" pos:line="5" pos:column="16">' '<pos:position pos:line="5" pos:column="19"/></literal> <operator pos:line="5" pos:column="20">&amp;&amp;<pos:position pos:line="5" pos:column="30"/></operator> <operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">id<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&lt;=<pos:position pos:line="5" pos:column="32"/></operator> <literal type="char" pos:line="5" pos:column="30">'z'<pos:position pos:line="5" pos:column="33"/></literal> <operator pos:line="5" pos:column="34">&amp;&amp;<pos:position pos:line="5" pos:column="44"/></operator> <operator pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">id<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">!=<pos:position pos:line="5" pos:column="43"/></operator> <literal type="char" pos:line="5" pos:column="44">':'<pos:position pos:line="5" pos:column="47"/></literal></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="7">putchar<pos:position pos:line="6" pos:column="14"/></name> <argument_list pos:line="6" pos:column="15">(<argument><expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">id<pos:position pos:line="6" pos:column="19"/></name></expr></argument>)<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt></block></then>
    <else pos:line="7" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="7">printf<pos:position pos:line="8" pos:column="13"/></name> <argument_list pos:line="8" pos:column="14">(<argument><expr><literal type="string" pos:line="8" pos:column="15">"\\x%02x"<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><operator pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">id<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator> <operator pos:line="8" pos:column="32">&amp;<pos:position pos:line="8" pos:column="37"/></operator> <literal type="number" pos:line="8" pos:column="34">0xff<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt></block></else></if>
  }<pos:position pos:line="9" pos:column="4"/></block></for>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

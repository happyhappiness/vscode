diff -BEr -U 6 apache_1.3.1/ABOUT_APACHE apache_1.3.2/ABOUT_APACHE
--- apache_1.3.1/ABOUT_APACHE	1998-07-15 20:31:23.000000000 +0800
+++ apache_1.3.2/ABOUT_APACHE	1998-07-22 12:02:59.000000000 +0800
@@ -71,12 +71,13 @@
 
    Brian Behlendorf       Organic Online, California 
    Ken Coar               MeepZor Consulting, New England, USA 
    Mark J. Cox            C2Net Europe, UK 
    Lars Eilebrecht        Kreuztal, Germany 
    Ralf S. Engelschall    Munich, Germany.
+   Roy T. Fielding        UC Irvine, California 
    Dean Gaudet            Transmeta Corporation, California 
    Rob Hartill            Internet Movie DB, UK 
    Ben Hyde               Gensym, Massachusetts
    Jim Jagielski          jaguNET ISP, Maryland 
    Alexei Kosut           Stanford University, California 
    Martin Kraemer         Munich, Germany
@@ -89,13 +90,12 @@
    Paul Sutton            C2Net Europe, UK 
    Randy Terbush          Zyzzyva ISP, Nebraska 
    Dirk-Willem van Gulik  Freelance Consultant, Italy 
 
 Apache Emeritae (old group members now off doing other things)
 
-   Roy T. Fielding        UC Irvine, California 
    Chuck Murcko           The Topsail Group, Pennsylvania 
    David Robinson         Cambridge University, UK
    Robert S. Thau         MIT, Massachusetts
    Andrew Wilson          Freelance Consultant, UK 
    
 Other major contributors
diff -BEr -U 6 apache_1.3.1/Announcement apache_1.3.2/Announcement
--- apache_1.3.1/Announcement	1998-07-19 06:50:14.000000000 +0800
+++ apache_1.3.2/Announcement	1998-09-22 02:56:58.000000000 +0800
@@ -1,72 +1,45 @@
-Apache 1.3.1 Released
+Apache 1.3.2 Released
 =====================
 
-The Apache Group is pleased to announce the release of version 1.3.1 
-of the Apache HTTP server.  
+The Apache Group is pleased to announce the release of version
+1.3.2 of the Apache HTTP server.  
 
-The changes in this release consist of UNIX portability fixes, Win32
-security issues, and assorted other minor features or fixes.  
+The changes in this release consist of Unix portability fixes,
+DoS issues, and assorted other minor features or fixes.  Users
+should review the CHANGES file and decide on their upgrade plans;
+We consider Apache 1.3.2 to be the most stable version of Apache
+available.
 
-WE URGE ALL USERS RUNNING ANY PREVIOUS VERSION OF APACHE ON WIN32
-TO UPGRADE IMMEDIATELY.
+Apache 1.3.2 is available for download from
 
-Users on other platforms should review the CHANGES file and decide
-on their upgrade plans; the security issues apply only to Apache
-on Win32.  We consider Apache 1.3.1 to be the most stable version
-of Apache available.
+    http://www.apache.org/dist/
 
-Apache 1.3.1 is available for download from
+Please see the CHANGES file in the same directory for a full list
+of changes.  The distribution is also available via any of the
+mirrors listed at
 
-	http://www.apache.org/dist/
-
-Please see the CHANGES file in the same directory for a full list of 
-changes.  The distribution is also available via any of the mirrors
-listed at
-
-	http://www.apache.org/mirrors/
+    http://www.apache.org/mirrors/
 
 For an overview of new features in 1.3 please see
 
-	http://www.apache.org/docs/new_features_1_3.html
+    http://www.apache.org/docs/new_features_1_3.html
 
 In general, Apache 1.3 offers several substantial improvements
-over version 1.2, including better performance, reliability
-and a wider-range of supported platforms, including Windows 95 and
-NT (which both fall under the "Win32" label).
+over version 1.2, including better performance, reliability and a
+wider-range of supported platforms, including Windows 95 and NT
+(which both fall under the "Win32" label).
 
 Apache is the most popular web-server in the known universe; over
-half of the servers on the Internet are running Apache or one of its
-variants.
+half of the servers on the Internet are running Apache or one of
+its variants.
 
 IMPORTANT NOTE FOR WIN32 USERS: Over the years, many users have
 come to trust Apache as a secure and stable server.  It must
 be realized that the current Win32 code has not yet reached these
 levels and should still be considered to be of beta quality.  Any
 Win32 stability or security problems do not impact, in any way,
 Apache on other platforms.  With the continued donation of time
 and resources by individuals and companies, we hope that the Win32
 version of Apache will grow stronger through the 1.3.x release
 cycle.
 
-Versions of Apache on Win32 prior to version 1.3.1 are vulnerable
-to a number of security holes common to several Win32 servers.
-The problems that impact Apache include:
-
-	- trailing "."s are ignored by the file system.  This allowed
-	  certain types of access restrictions to be bypassed.
-	- directory names of three or more dots (eg. "...") are
-    	  considered to be valid similar to "..".  This allowed people
-	  to gain access to files outside of the configured document
-	  trees.
-
-There have been at least four other similar instances of the same
-basic problem: on Win32, there is more than one name for a file.
-Some of these names are poorly documented or undocumented, and even
-Microsoft's own IIS has been vulnerable to many of these problems.
-This behavior of the Win32 file system and API makes it very difficult
-to insure future security; problems of this type have been known
-about for years, however each specific instance has been discovered
-individually.  It is unknown if there are other, yet unpublicized,
-filename variants.  As a result, we recommend that you use extreme
-caution when dealing with access restrictions on all Win32 web
-servers.
diff -BEr -U 6 apache_1.3.1/conf/access.conf-dist apache_1.3.2/conf/access.conf-dist
--- apache_1.3.1/conf/access.conf-dist	1998-06-07 03:46:59.000000000 +0800
+++ apache_1.3.2/conf/access.conf-dist	1998-09-04 02:04:08.000000000 +0800
@@ -64,12 +64,24 @@
 
 #order deny,allow
 #deny from all
 #allow from .your_domain.com
 #</Location>
 
+# Allow remote server configuration reports, with the URL of
+#  http://servername/server-info (requires that mod_info.c be loaded).
+# Change the ".your_domain.com" to match your domain to enable.
+
+#<Location /server-info>
+#SetHandler server-info
+
+#order deny,allow
+#deny from all
+#allow from .your_domain.com
+#</Location>
+
 # There have been reports of people trying to abuse an old bug from pre-1.1
 # days.  This bug involved a CGI script distributed as a part of Apache.
 # By uncommenting these lines you can redirect these attacks to a logging 
 # script on phf.apache.org.  Or, you can record them yourself, using the script
 # support/phf_abuse_log.cgi.
 
diff -BEr -U 6 apache_1.3.1/conf/access.conf-dist-win apache_1.3.2/conf/access.conf-dist-win
--- apache_1.3.1/conf/access.conf-dist-win	1998-07-17 04:24:40.000000000 +0800
+++ apache_1.3.2/conf/access.conf-dist-win	1998-09-04 02:04:08.000000000 +0800
@@ -70,12 +70,24 @@
 
 #order deny,allow
 #deny from all
 #allow from .your_domain.com
 #</Location>
 
+# Allow remote server configuration reports, with the URL of
+#  http://servername/server-info (requires that mod_info.c be loaded).
+# Change the ".your_domain.com" to match your domain to enable.
+
+#<Location /server-info>
+#SetHandler server-info
+
+#order deny,allow
+#deny from all
+#allow from .your_domain.com
+#</Location>
+
 # There have been reports of people trying to abuse an old bug from pre-1.1
 # days.  This bug involved a CGI script distributed as a part of Apache.
 # By uncommenting these lines you can redirect these attacks to a logging 
 # script on phf.apache.org.  Or, you can record them yourself, using the script
 # support/phf_abuse_log.cgi.
 
diff -BEr -U 6 apache_1.3.1/conf/httpd.conf-dist apache_1.3.2/conf/httpd.conf-dist
--- apache_1.3.1/conf/httpd.conf-dist	1998-05-07 05:12:39.000000000 +0800
+++ apache_1.3.2/conf/httpd.conf-dist	1998-09-13 04:16:50.000000000 +0800
@@ -123,22 +123,38 @@
 # directory is NFS mounted, since the lockfile MUST BE STORED ON A LOCAL
 # DISK. The PID of the main server process is automatically appended to
 # the filename. 
 #
 #LockFile logs/accept.lock
 
+# ExtendedStatus controls whether Apache will generate "full" status
+# information (ExtendedStatus On) or just basic information (ExtendedStatus
+# Off) when the server-status Handler is called. The default is Off.
+#
+#ExtendedStatus On
+
 # ServerName allows you to set a host name which is sent back to clients for
 # your server if it's different than the one the program would get (i.e. use
 # "www" instead of the host's real name).
 #
 # Note: You cannot just invent host names and hope they work. The name you 
 # define here must be a valid DNS name for your host. If you don't understand
 # this, ask your network administrator.
+# If your host doesn't have a registered DNS name, enter its IP address here.
+# You will have to access it by its address (e.g., http://123.45.67.89)
+# anyway, and this will make redirections work in a sensible way.
 
 #ServerName new.host.name
 
+# Optionally add a line containing the server version and virtual host
+# name to server-generated pages (error documents, ftp directory listings,
+# mod_status and mod_info output etc., but not SSI generated documents).
+# Set to "EMail" to also include a mailto: link to the ServerAdmin.
+# Set to one of:  On | Off | EMail
+ServerSignature on
+
 # UseCanonicalName:  (new for 1.3)  With this setting turned on, whenever
 # Apache needs to construct a self-referencing URL (a url that refers back
 # to the server the response is coming from) it will use ServerName and
 # Port to form a "canonical" name.  With this setting off, Apache will
 # use the hostname:port that the client supplied, when possible.  This
 # also affects SERVER_NAME and SERVER_PORT in CGIs.
@@ -208,15 +224,22 @@
 
 # Proxy Server directives. Uncomment the following line to
 # enable the proxy server:
 
 #ProxyRequests On
 
+# Enable/disable the handling of HTTP/1.1 "Via:" headers.
+# ("Full" adds the server version; "Block" removes all outgoing Via: headers)
+# Set to one of: Off | On | Full | Block
+#ProxyVia on
+
 # To enable the cache as well, edit and uncomment the following lines:
+# (no cacheing without CacheRoot)
 
 #CacheRoot @@ServerRoot@@/proxy
+
 #CacheSize 5
 #CacheGcInterval 4
 #CacheMaxExpire 24
 #CacheLastModifiedFactor 0.1
 #CacheDefaultExpire 1
 #NoCache a_domain.com another_domain.edu joes.garage_sale.com
diff -BEr -U 6 apache_1.3.1/conf/httpd.conf-dist-win apache_1.3.2/conf/httpd.conf-dist-win
--- apache_1.3.1/conf/httpd.conf-dist-win	1998-07-17 04:24:40.000000000 +0800
+++ apache_1.3.2/conf/httpd.conf-dist-win	1998-09-13 04:16:50.000000000 +0800
@@ -105,22 +105,38 @@
 # ScoreBoardFile: File used to store internal server process information.
 # Not all architectures require this.  But if yours does (you'll know because
 # this file is created when you run Apache) then you *must* ensure that
 # no two invocations of Apache share the same scoreboard file.
 ScoreBoardFile logs/apache_status
 
+# ExtendedStatus controls whether Apache will generate "full" status
+# information (ExtendedStatus On) or just basic information (ExtendedStatus
+# Off) when the server-status Handler is called. The default is Off.
+#
+#ExtendedStatus On
+
 # ServerName allows you to set a host name which is sent back to clients for
 # your server if it's different than the one the program would get (i.e. use
 # "www" instead of the host's real name).
 #
 # Note: You cannot just invent host names and hope they work. The name you 
 # define here must be a valid DNS name for your host. If you don't understand
 # this, ask your network administrator.
+# If your host doesn't have a registered DNS name, enter its IP address here.
+# You will have to access it by its address (e.g., http://123.45.67.89)
+# anyway, and this will make redirections work in a sensible way.
 
 #ServerName new.host.name
 
+# Optionally add a line containing the server version and virtual host
+# name to server-generated pages (error documents, ftp directory listings,
+# mod_status and mod_info output etc., but not SSI generated documents).
+# Set to "EMail" to also include a mailto: link to the ServerAdmin.
+# Set to one of:  On | Off | EMail
+ServerSignature on
+
 # UseCanonicalName:  (new for 1.3)  With this setting turned on, whenever
 # Apache needs to construct a self-referencing URL (a url that refers back
 # to the server the response is coming from) it will use ServerName and
 # Port to form a "canonical" name.  With this setting off, Apache will
 # use the hostname:port that the client supplied, when possible.  This
 # also affects SERVER_NAME and SERVER_PORT in CGIs.
@@ -174,15 +190,22 @@
 
 # Proxy Server directives. Uncomment the following line to
 # enable the proxy server:
 
 #ProxyRequests On
 
+# Enable/disable the handling of HTTP/1.1 "Via:" headers.
+# ("Full" adds the server version; "Block" removes all outgoing Via: headers)
+# Set to one of: Off | On | Full | Block
+#ProxyVia on
+
 # To enable the cache as well, edit and uncomment the following lines:
+# (no cacheing without CacheRoot)
 
 #CacheRoot "@@ServerRoot@@/proxy"
+
 #CacheSize 5
 #CacheGcInterval 4
 #CacheMaxExpire 24
 #CacheLastModifiedFactor 0.1
 #CacheDefaultExpire 1
 #NoCache a_domain.com another_domain.edu joes.garage_sale.com
diff -BEr -U 6 apache_1.3.1/conf/mime.types apache_1.3.2/conf/mime.types
--- apache_1.3.1/conf/mime.types	1998-03-11 14:21:41.000000000 +0800
+++ apache_1.3.2/conf/mime.types	1998-09-07 15:17:35.000000000 +0800
@@ -1,11 +1,12 @@
 # This file controls what MIME types are sent to the client for the
 # given file extensions.  Sending the correct MIME type to the client
 # is important so they know how to handle the content of the file.
 # Extra types can either be added here or by using an AddType directive
-# in your config files.
+# in your config files. For more information about MIME types
+# please read RFC 2045, 2046, 2047, 2048, and 2077.
 
 # MIME type			Extension
 application/activemessage
 application/andrew-inset
 application/applefile
 application/atomicmail
@@ -34,12 +35,13 @@
 application/x-csh		csh
 application/x-director		dcr dir dxr
 application/x-dvi		dvi
 application/x-gtar		gtar
 application/x-gzip
 application/x-hdf		hdf
+application/x-javascript	js
 application/x-koan		skp skd skt skm
 application/x-latex		latex
 application/x-mif		mif
 application/x-netcdf		nc cdf
 application/x-sh		sh
 application/x-shar		shar
@@ -81,24 +83,29 @@
 image/x-xpixmap			xpm
 image/x-xwindowdump		xwd
 message/external-body
 message/news
 message/partial
 message/rfc822
+model/iges			igs iges
+model/vrml			wrl vrml
+model/mesh			msh mesh silo
 multipart/alternative
 multipart/appledouble
 multipart/digest
 multipart/mixed
 multipart/parallel
 text/css			css
 text/html			html htm
 text/plain			txt
 text/richtext			rtx
 text/tab-separated-values	tsv
 text/x-setext			etx
 text/x-sgml			sgml sgm
+text/xml			xml dtd
 video/mpeg			mpeg mpg mpe
 video/quicktime			qt mov
 video/x-msvideo			avi
 video/x-sgi-movie		movie
 x-conference/x-cooltalk		ice
-x-world/x-vrml			wrl vrml
+
+# This is a comment. I love comments.
diff -BEr -U 6 apache_1.3.1/conf/srm.conf-dist apache_1.3.2/conf/srm.conf-dist
--- apache_1.3.1/conf/srm.conf-dist	1998-07-15 22:50:28.000000000 +0800
+++ apache_1.3.2/conf/srm.conf-dist	1998-08-31 05:47:08.000000000 +0800
@@ -88,12 +88,24 @@
 
 # AccessFileName: The name of the file to look for in each directory
 # for access control information.
 
 AccessFileName .htaccess
 
+# The following lines prevent .htaccess files from being viewed by
+# Web clients.  Since .htaccess files often contain authorization
+# information, access is disallowed for security reasons.  Comment
+# these lines out if you want Web visitors to see the contents of
+# .htaccess files.  If you change the AccessFileName directive above,
+# be sure to make the corresponding changes here.
+
+<Files .htaccess>
+order allow,deny
+deny from all
+</Files>
+
 # TypesConfig describes where the mime.types file (or equivalent) is
 # to be found.
 
 TypesConfig conf/mime.types
 
 # DefaultType is the default MIME type for documents which the server
diff -BEr -U 6 apache_1.3.1/conf/srm.conf-dist-win apache_1.3.2/conf/srm.conf-dist-win
--- apache_1.3.1/conf/srm.conf-dist-win	1998-07-15 22:50:28.000000000 +0800
+++ apache_1.3.2/conf/srm.conf-dist-win	1998-08-31 05:47:09.000000000 +0800
@@ -22,13 +22,13 @@
 # directory if a ~user request is recieved.
 #
 # Under Win32, we do not currently try to determine the home directory of
 # a Windows login, so one of the forms such as the below needs to be
 # used.  See the manual for details.
 #
-#UserDir "/@@ServerRoot@@/users/"
+#UserDir "@@ServerRoot@@/users/"
 
 # DirectoryIndex: Name of the file or files to use as a pre-written HTML
 # directory index.  Separate multiple entries with spaces.
 
 DirectoryIndex index.html
 
@@ -96,12 +96,24 @@
 
 # AccessFileName: The name of the file to look for in each directory
 # for access control information.
 
 AccessFileName .htaccess
 
+# The following lines prevent .htaccess files from being viewed by
+# Web clients.  Since .htaccess files often contain authorization
+# information, access is disallowed for security reasons.  Comment
+# these lines out if you want Web visitors to see the contents of
+# .htaccess files.  If you change the AccessFileName directive above,
+# be sure to make the corresponding changes here.
+
+<Files .htaccess>
+order allow,deny
+deny from all
+</Files>
+
 # TypesConfig describes where the mime.types file (or equivalent) is
 # to be found.
 
 TypesConfig conf/mime.types
 
 # DefaultType is the default MIME type for documents which the server
diff -BEr -U 6 apache_1.3.1/configure apache_1.3.2/configure
--- apache_1.3.1/configure	1998-07-12 17:25:46.000000000 +0800
+++ apache_1.3.2/configure	1998-09-17 16:07:53.000000000 +0800
@@ -78,16 +78,17 @@
 configstatus=config.status
 
 ##
 ##  pre-determine runtime modes
 ##
 
+help=no
 quiet=no
 verbose=no
 case "$*" in
-    --help|*--help|*--help* ) quiet=yes ;;
+    --help|*--help|*--help* ) help=yes; quiet=yes ;;
     --quiet|*--quiet|*--quiet* ) quiet=yes ;;
     --verbose|*--verbose|*--verbose*|-v|*-v|*-v* ) verbose=yes ;;
     * ) ;;
 esac
 
 ##
@@ -115,25 +116,48 @@
 
 ##
 ##  determine path to (optional) Perl interpreter
 ##
 
 PERL=no-perl-on-this-system
-perlpath="`$aux/findprg.sh perl5 perl miniperl`"
+perlpath="`$aux/PrintPath perl5 perl miniperl`"
 if [ ".$perlpath" != . ]; then
     PERL="$perlpath"
 fi
 
 ##
+##  look for deadly broken echo commands which interpret escape
+##  sequences `\XX' *per default*. For those we first try the -E option
+##  and if it then is still broken we give a warning message.
+##  If it works set the `Safe Echo Option' (SEO) variable.
+##
+
+SEO='' # CHANGE THIS VARIABLE HERE IF YOU HAVE PROBLEMS WITH ECHO!
+bytes=`echo $SEO '\1' | wc -c | awk '{ printf("%s", $1); }'`
+if [ ".$bytes" != .3 ]; then
+    bytes=`echo -E '\1' | wc -c | awk '{ printf("%s", $1); }'`
+    if [ ".$bytes" != .3 ]; then
+        echo " + Warning: Your 'echo' command is slightly broken."
+        echo " + It interprets escape sequences per default. We already"
+        echo " + tried 'echo -E' but had no real success. If errors occur"
+        echo " + please set the SEO variable in 'configure' manually to"
+        echo " + the required 'echo' options, i.e. those which force your"
+        echo " + 'echo' to not interpret escape sequences per default."
+    else
+        SEO='-E'
+    fi
+fi
+
+##
 ##  look for the best Awk we can find because some
 ##  standard Awks are really braindead and cause 
 ##  problems for our scripts under some platforms.
 ##
 
 AWK=awk
-awkpath="`$aux/findprg.sh nawk gawk awk`"
+awkpath="`$aux/PrintPath nawk gawk awk`"
 if [ ".$awkpath" != . ]; then
     AWK="$awkpath"
 fi
 
 ##
 ##  determine default parameters
@@ -241,46 +265,48 @@
     fi
 done
 IFS="$OIFS"
 
 #   create a config status script for restoring
 #   the configuration via a simple shell script
-rm -f $configstatus 2>/dev/null
-echo "#!/bin/sh" >$configstatus
-echo "##" >>$configstatus
-echo "##  $configstatus -- APACI auto-generated configuration restore script" >>$configstatus
-echo "##" >>$configstatus
-echo "##  Use this shell script to re-run the APACI configure script for" >>$configstatus
-echo "##  restoring your configuration. Additional parameters can be supplied." >>$configstatus
-echo "##" >>$configstatus
-echo "" >>$configstatus
-for var in CC OPTIM CFLAGS CFLAGS_SHLIB LDFLAGS LD_SHLIB LDFLAGS_SHLIB \
-           LDFLAGS_SHLIB_EXPORT LIBS INCLUDES RANLIB; do
-    eval "val=\"\$$var\""
-    if [ ".$val" != . ]; then
-        echo "$var=$val" |\
-        sed -e 's:\(["$\\]\):\\\1:g' \
-            -e 's:\([A-Z]*=\):\1":' \
-            -e 's:$:" \\:' >>$configstatus
-    fi
-done
-if [ $# -eq 0 ]; then
-    echo "./configure" >>$configstatus
-else
-    echo "./configure \\" >>$configstatus
-    for arg
-    do
-        echo "$arg" |\
-        sed -e 's:\(["$\\]\):\\\1:g' \
-            -e 's:^:":' \
-            -e 's:$:" \\:' >>$configstatus
+if [ ".$help" = .no ]; then
+    rm -f $configstatus 2>/dev/null
+    echo "#!/bin/sh" >$configstatus
+    echo "##" >>$configstatus
+    echo "##  $configstatus -- APACI auto-generated configuration restore script" >>$configstatus
+    echo "##" >>$configstatus
+    echo "##  Use this shell script to re-run the APACI configure script for" >>$configstatus
+    echo "##  restoring your configuration. Additional parameters can be supplied." >>$configstatus
+    echo "##" >>$configstatus
+    echo "" >>$configstatus
+    for var in CC CPP OPTIM CFLAGS CFLAGS_SHLIB LDFLAGS LD_SHLIB LDFLAGS_SHLIB \
+               LDFLAGS_SHLIB_EXPORT LIBS INCLUDES RANLIB; do
+        eval "val=\"\$$var\""
+        if [ ".$val" != . ]; then
+            echo "$var=$val" |\
+            sed -e 's:\(["$\\]\):\\\1:g' \
+                -e 's:\([A-Z]*=\):\1":' \
+                -e 's:$:" \\:' >>$configstatus
+        fi
     done
+    if [ $# -eq 0 ]; then
+        echo "./configure" >>$configstatus
+    else
+        echo $SEO "./configure \\" >>$configstatus
+        for arg
+        do
+            echo "$arg" |\
+            sed -e 's:\(["$\\]\):\\\1:g' \
+                -e 's:^:":' \
+                -e 's:$:" \\:' >>$configstatus
+        done
+    fi
+    echo '"$@"' >>$configstatus
+    echo '' >>$configstatus
+    chmod a+x $configstatus
 fi
-echo '$*' >>$configstatus
-echo '' >>$configstatus
-chmod a+x $configstatus
 
 ##
 ##  parse argument line options
 ##
 
 apc_prev=""
@@ -306,13 +332,13 @@
             ;;
         --verbose | -v)
             verbose=yes
             ;;
         --shadow)
             #   determine GNU platform triple
-            gnutriple=`$aux/GuessOS | $AWK '{ printf("%s",$1); }' | sed -e 's:/:-:g'`
+            gnutriple=`$aux/GuessOS | sed -e 's:/:-:g' | $AWK '{ printf("%s",$1); }'`
             #   create Makefile wrapper (the first time only)
             if [ ".`ls $top/src.* 2>/dev/null`" = . ]; then
                 if [ .$quiet = .no ]; then
                     echo " + creating Makefile (shadow wrapper)"
                 fi
                 echo "##" > Makefile
@@ -788,55 +814,22 @@
 conf_port="80"
 conf_serveradmin="you@your.address"
 conf_servername="new.host.name"
 if [ ".$confadjust" = .1 ]; then
     if [ ".`egrep '^nobody:' /etc/group`" != . ]; then
         conf_group="nobody"
+    else
         if [ ".`egrep '^nogroup:' /etc/group`" != . ]; then
             conf_group="nogroup"
         fi
     fi
     if [ ".`id | grep root`" = . ]; then
         conf_port="8080"
     fi
-    username="$LOGNAME"
-    if [ ".$username" = . ]; then
-        username="$USER"
-        if [ ".$username" = . ]; then
-            username="`whoami 2>/dev/null | sed -e 's/\n$//'`"
-            if [ ".$username" = . ]; then
-                username="`who am i 2>/dev/null | cut '-d ' -f1`"
-                if [ ".$username" = . ]; then
-                    username="unknown"
-                fi
-            fi
-        fi
-    fi
-    hostname="`uname -n | sed -e 's/\n$//'`"
-    if [ ".$hostname" = . ]; then
-        hostname="`hostname | sed -e 's/\n$//'`"
-        if [ ".$hostname" = . ]; then
-            hostname="hostname"
-        fi
-    fi
-    hostname="`echo $hostname | sed -e 's/\..*//'`"
-    domainname="";
-    if [ -f /etc/resolv.conf ]; then
-        domainname="`egrep '^[ 	]*domain' /etc/resolv.conf |\
-                     sed -e 's/.*domain//' -e 's/^[ 	]*//' \
-                         -e 's/^ *//' -e 's/^	*//' \
-                         -e 's/^\.//' -e 's/^/./'`"
-        if [ ".$domainname" = . ]; then
-            domainname="`egrep '^[ 	]*search' /etc/resolv.conf |\
-                         sed -e 's/.*search//' -e 's/^[ 	]*//' \
-                             -e 's/^ *//' -e 's/^	*//' \
-                             -e 's/ .*//' -e 's/^\.//' -e 's/^/./'`"
-        fi
-    fi
-    conf_serveradmin="$username@$hostname$domainname"
-    conf_servername="$hostname$domainname"
+    conf_serveradmin="`$aux/buildinfo.sh -n %u@%h%d`"
+    conf_servername="`$aux/buildinfo.sh -n %h%d`"
 fi
  
 ##
 ##  determine prefix-relative paths for directories
 ##  because Apache supports them for the -d and -f 
 ##  options, the LoadModule directive, etc.
@@ -959,35 +952,35 @@
 fi
 rm -f $sedsubst 2>/dev/null
 touch $sedsubst
 
 #   generate settings from imported environment variables
 OIFS="$IFS" IFS="$DIFS"
-for var in CC OPTIM CFLAGS CFLAGS_SHLIB LDFLAGS LD_SHLIB LDFLAGS_SHLIB \
+for var in CC CPP OPTIM CFLAGS CFLAGS_SHLIB LDFLAGS LD_SHLIB LDFLAGS_SHLIB \
            LDFLAGS_SHLIB_EXPORT LIBS INCLUDES RANLIB DEPS; do
     eval "val=\"\$$var\"";
     if [ ".$val" != . ]; then
         case $var in 
             CFLAGS|LDFLAGS|LIBS|INCLUDES|DEPS) 
-                echo "s%^#*\\(EXTRA_$var=\\).*%\\1$val%g" >>$sedsubst
+                echo $SEO "s%^#*\\(EXTRA_$var=\\).*%\\1$val%g" >>$sedsubst
                 ;;
             *)
-                echo "s%^#*\\($var=\\).*%\\1$val%g" >>$sedsubst
+                echo $SEO "s%^#*\\($var=\\).*%\\1$val%g" >>$sedsubst
                 ;;
         esac
         eval "$var=\"\"; export $var"
     fi
 done
 IFS="$OIFS"
 
 #   generate rule directives 
 OIFS="$IFS" IFS=':'
 for rule in $rules; do
     name="`echo $rule | tr "a-z" "A-Z"`"
     eval "val=\$rule_$rule"
-    echo "s%^\\(Rule $name=\\).*%\\1$val%g" >>$sedsubst
+    echo $SEO "s%^\\(Rule $name=\\).*%\\1$val%g" >>$sedsubst
     if [ $verbose = yes ]; then
         echo " + Rule $name=$val"
     fi
 done
 IFS="$OIFS"
 
@@ -1017,23 +1010,23 @@
 
 #   generate module directives
 OIFS="$IFS" IFS=':'
 for module in $modules; do
     eval "add=\$module_$module"
     if [ $add = yes ]; then
-        echo "s%^.*\\(AddModule.*$module\\..*\\)%\\1%g" >>$sedsubst
-        echo "s%^.*\\(SharedModule.*$module\\..*\\)%\\1%g" >>$sedsubst
+        echo $SEO "s%^.*\\(AddModule.*$module\\..*\\)%\\1%g" >>$sedsubst
+        echo $SEO "s%^.*\\(SharedModule.*$module\\..*\\)%\\1%g" >>$sedsubst
         m="yes [static]"
     else
-        echo "s%^.*\\(AddModule.*$module\\..*\\)%# \\1%g" >>$sedsubst
-        echo "s%^.*\\(SharedModule.*$module\\..*\\)%# \\1%g" >>$sedsubst
+        echo $SEO "s%^.*\\(AddModule.*$module\\..*\\)%# \\1%g" >>$sedsubst
+        echo $SEO "s%^.*\\(SharedModule.*$module\\..*\\)%# \\1%g" >>$sedsubst
         m=no
     fi
     eval "share=\$shared_$module"
     if [ $share = yes ]; then
-        echo "s%^\\(.*\\)AddModule\\(.*$module\\.\\)[oa]\\(.*\\)%\\1SharedModule\\2so\\3%g" >>$sedsubst
+        echo $SEO "s%^\\(.*\\)AddModule\\(.*$module\\.\\)[oa]\\(.*\\)%\\1SharedModule\\2so\\3%g" >>$sedsubst
         m="yes [shared]"
     fi
     if [ $verbose = yes ]; then
         echo " + Module $module: $m"
     fi
 done
diff -BEr -U 6 apache_1.3.1/htdocs/manual/content-negotiation.html apache_1.3.2/htdocs/manual/content-negotiation.html
--- apache_1.3.1/htdocs/manual/content-negotiation.html	1998-07-19 07:04:21.000000000 +0800
+++ apache_1.3.2/htdocs/manual/content-negotiation.html	1998-09-22 03:20:46.000000000 +0800
@@ -88,13 +88,13 @@
 <P>
 In order to negotiate a resource, the server needs to be given
 information about each of the variants. This is done in one of two
 ways:
 
 <UL>
-  <LI> Using a type map (i.e., a <CODE>*.var</CODE> file) which
+  <LI> Using a type map (<EM>i.e.</EM>, a <CODE>*.var</CODE> file) which
        names the files containing the variants explicitly
   <LI> Or using a 'MultiViews' search, where the server does an implicit
        filename pattern match, and chooses from among the results.
 </UL>
 
 <H3>Using a type-map file</H3>
@@ -170,14 +170,14 @@
   <DD> media type --- charset, level and "qs" parameters may be given.  These
        are often referred to as MIME types; typical media types are
        <CODE>image/gif</CODE>, <CODE>text/plain</CODE>, or
        <CODE>text/html;&nbsp;level=3</CODE>.
   <DT> <CODE>Content-language:</CODE>
   <DD> The languages of the variant, specified as an Internet standard
-       language code (e.g., <CODE>en</CODE> for English,
-       <CODE>kr</CODE> for Korean, etc.).
+       language code (<EM>e.g.</EM>, <CODE>en</CODE> for English,
+       <CODE>kr</CODE> for Korean, <EM>etc.</EM>).
   <DT> <CODE>Content-encoding:</CODE>
   <DD> If the file is compressed, or otherwise encoded, rather than
        containing the actual raw data, this says how that was done.
        For compressed files (the only case where this generally comes
        up), content encoding should be
        <CODE>x-compress</CODE>, or <CODE>x-gzip</CODE>, as appropriate.
@@ -425,15 +425,15 @@
 <P>
 If you are using language negotiation you can choose between
 different naming conventions, because files can have more than one
 extension, and the order of the extensions is normally irrelevant
 (see <A HREF="mod/mod_mime.html">mod_mime</A> documentation for details).
 <P>
-A typical file has a mime-type extension (e.g. <SAMP>html</SAMP>),
-maybe an encoding extension (e.g. <SAMP>gz</SAMP> and of course a
-language extension (e.g. <SAMP>en</SAMP>) when we have different
+A typical file has a MIME-type extension (<EM>e.g.</EM>, <SAMP>html</SAMP>),
+maybe an encoding extension (<EM>e.g.</EM>, <SAMP>gz</SAMP>), and of course a
+language extension (<EM>e.g.</EM>, <SAMP>en</SAMP>) when we have different
 language variants of this file.
 
 <P>
 Examples:
 <UL>
 <LI>foo.en.html
@@ -492,23 +492,23 @@
  <TD>foo.gz</TD>
 </TR>
 </TABLE>
 
 <P>
 Looking at the table above you will notice that it is always possible to
-use the name without any extensions  in an hyperlink (e.g. <SAMP>foo</SAMP>).
+use the name without any extensions  in an hyperlink (<EM>e.g.</EM>, <SAMP>foo</SAMP>).
 The advantage is that you can hide the actual type of a
-document rsp. file and can change it later, e.g. from <SAMP>html</SAMP>
+document rsp. file and can change it later, <EM>e.g.</EM>, from <SAMP>html</SAMP>
 to <SAMP>shtml</SAMP> or <SAMP>cgi</SAMP> without changing any
 hyperlink references.
 
 <P>
-If you want to continue to use a mime-type in your hyperlinks (e.g.
+If you want to continue to use a MIME-type in your hyperlinks (<EM>e.g.</EM>
 <SAMP>foo.html</SAMP>) the language extension (including an encoding extension
-if there is one) must be on the right hand side of the mime-type extension
-(e.g. <SAMP>foo.html.en</SAMP>).
+if there is one) must be on the right hand side of the MIME-type extension
+(<EM>e.g.</EM>, <SAMP>foo.html.en</SAMP>).
 
 
 <H2>Note on Caching</H2>
 
 <P>
 When a cache stores a document, it associates it with the request URL.
diff -BEr -U 6 apache_1.3.1/htdocs/manual/custom-error.html apache_1.3.2/htdocs/manual/custom-error.html
--- apache_1.3.1/htdocs/manual/custom-error.html	1998-07-19 07:04:21.000000000 +0800
+++ apache_1.3.2/htdocs/manual/custom-error.html	1998-09-22 03:20:46.000000000 +0800
@@ -57,13 +57,13 @@
   <P>Redirecting to another URL can be useful, but only if some information
      can be passed which can then be used to explain and/or log the
      error/problem
      more clearly.
 
   <P>To achieve this, Apache will define new CGI-like environment
-     variables, e.g.
+     variables, <EM>e.g.</EM>
 
   <BLOCKQUOTE><CODE>
 REDIRECT_HTTP_ACCEPT=*/*, image/gif, image/x-xbitmap, image/jpeg <BR>
 REDIRECT_HTTP_USER_AGENT=Mozilla/1.1b2 (X11; I; HP-UX A.09.05 9000/712) <BR>
 REDIRECT_PATH=.:/bin:/usr/local/bin:/etc <BR>
 REDIRECT_QUERY_STRING= <BR>
@@ -148,13 +148,13 @@
 
 A new batch of environment variables will be initialized for use by a
 script which has been redirected to.  Each new variable will have the
 prefix <CODE>REDIRECT_</CODE>.  <CODE>REDIRECT_</CODE> environment
 variables are created from the CGI environment variables which existed
 prior to the redirect, they are renamed with a <CODE>REDIRECT_</CODE>
-prefix, i.e. <CODE>HTTP_USER_AGENT</CODE> becomes
+prefix, <EM>i.e.</EM>, <CODE>HTTP_USER_AGENT</CODE> becomes
 <CODE>REDIRECT_HTTP_USER_AGENT</CODE>.  In addition to these new
 variables, Apache will define <CODE>REDIRECT_URL</CODE> and
 <CODE>REDIRECT_STATUS</CODE> to help the script trace its origin.
 Both the original URL and the URL being redirected to can be logged in
 the access log.
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/dso.html apache_1.3.2/htdocs/manual/dso.html
--- apache_1.3.1/htdocs/manual/dso.html	1998-07-19 07:04:21.000000000 +0800
+++ apache_1.3.2/htdocs/manual/dso.html	1998-09-22 03:20:46.000000000 +0800
@@ -80,13 +80,13 @@
 (especially all symbols from the ubiquitous <CODE>libc.so</CODE>).  This way
 the DSO gets knowledge of the executable program's symbol set as if it had
 been statically linked with it in the first place.
  
 <P>Finally, to take advantage of the DSO's API the executable program has to
 resolve particular symbols from the DSO via <CODE>dlsym()</CODE> for later use
-inside dispatch tables etc. In other words: The executable program has to
+inside dispatch tables <EM>etc.</EM> In other words: The executable program has to
 manually resolve every symbol it needs to be able to use it.  The advantage of
 such a mechanism is that optional program parts need not be loaded (and thus
 do not spend memory) until they are needed by the program in question. When
 required, these program parts can be loaded dynamically to extend the base
 program's functionality.
 
@@ -107,13 +107,13 @@
 mechanism was designed for, hence it is used for nearly all types of libraries
 the operating system provides. On the other hand using shared objects for
 extending a program is not used by a lot of programs.
 
 <P>As of 1998 there are only a few software packages available which use the
 DSO mechanism to actually extend their functionality at run-time: Perl 5 (via
-its XS mechanism and the DynaLoader module), Netscape Server, etc.  Starting
+its XS mechanism and the DynaLoader module), Netscape Server, <EM>etc.</EM>  Starting
 with version 1.3, Apache joined the crew, because Apache already uses a module
 concept to extend its functionality and internally uses a dispatch-list-based
 approach to link external modules into the Apache core functionality. So,
 Apache is really predestined for using DSO to load its modules at run-time.
 
 <P>As of Apache 1.3, the configuration system supports two optional features
@@ -183,13 +183,13 @@
 o  FreeBSD            (2.1.5, 2.2.5, 2.2.6)
 o  OpenBSD            (2.x)
 o  NetBSD             (1.3.1)
 o  Linux              (Debian/1.3.1, RedHat/4.2)
 o  Solaris            (2.4, 2.5.1, 2.6)
 o  SunOS              (4.1.3)
-o  OSF1               (4.0)
+o  Digital UNIX       (4.0)
 o  IRIX               (6.2)
 o  HP/UX              (10.20)
 o  UnixWare           (2.01, 2.1.2)
 o  SCO                (5.0.4)
 o  AIX                (3.2, 4.1.5, 4.2, 4.3)
 o  ReliantUNIX/SINIX  (5.43)
@@ -330,18 +330,18 @@
      process can be assembled at run-time via <A
      HREF="mod/mod_so.html#loadmodule"><CODE>LoadModule</CODE></A>
      <CODE>httpd.conf</CODE> configuration commands instead of
      <CODE>Configuration</CODE> <CODE>AddModule</CODE> commands at build-time.
      For instance this way one is able to run different server instances
      (standard &amp; SSL version, minimalistic &amp; powered up version
-     [mod_perl, PHP3], etc.) with only one Apache installation.
+     [mod_perl, PHP3], <EM>etc.</EM>) with only one Apache installation.
 <P>
 <LI> The server package can be easily extended with third-party modules even
      after installation. This is at least a great benefit for vendor package
      maintainers who can create a Apache core package and additional packages
-     containing extensions like PHP3, mod_perl, mod_fastcgi, etc.
+     containing extensions like PHP3, mod_perl, mod_fastcgi, <EM>etc.</EM>
 <P>
 <LI> Easier Apache module prototyping because with the DSO/<CODE>apxs</CODE>
      pair you can both work outside the Apache source tree and only need an
      <CODE>apxs -i</CODE> command followed by an <CODE>apachectl
      restart</CODE> to bring a new version of your currently developed module
      into the running Apache server.
@@ -367,15 +367,17 @@
      platforms usually don't provide this functionality while ELF-based
      platforms do) you cannot use the DSO mechanism for all types of modules.
      Or in other words, modules compiled as DSO files are restricted to only
      use symbols from the Apache core, from the C library (<CODE>libc</CODE>)
      and all other dynamic or static libraries used by the Apache core, or
      from static library archives (<CODE>libfoo.a</CODE>) containing position
-     independent code. The only chance to use other code is to either make
-     sure the Apache core itself already contains a reference to it or loading
-     the code yourself via <CODE>dlopen()</CODE>.
+     independent code. The only chances to use other code is to either make
+     sure the Apache core itself already contains a reference to it, loading
+     the code yourself via <CODE>dlopen()</CODE> or enabling the
+     <CODE>SHARED_CHAIN</CODE> rule while building Apache when your platform
+     supports linking DSO files against DSO libraries.
 <P>
 <LI> Under some platforms (many SVR4 systems) there is no way to force the
      linker to export all global symbols for use in DSO's when linking the
      Apache httpd executable program. But without the visibility of the Apache
      core symbols no standard Apache module could be used as a DSO. The only
      chance here is to use the <CODE>SHARED_CORE</CODE> feature because this
diff -BEr -U 6 apache_1.3.1/htdocs/manual/ebcdic.html apache_1.3.2/htdocs/manual/ebcdic.html
--- apache_1.3.1/htdocs/manual/ebcdic.html	1998-07-19 07:04:21.000000000 +0800
+++ apache_1.3.2/htdocs/manual/ebcdic.html	1998-09-22 03:20:46.000000000 +0800
@@ -102,13 +102,13 @@
    <DL>
     <DT><CODE><STRONG>#ifdef CHARSET_EBCDIC</STRONG></CODE>
     <DD>Code which is needed for any EBCDIC based machine. This
 	includes character translations, differences in
 	contiguity of the two character sets, flags which
 	indicate which part of the HTTP protocol has to be
-	converted and which part doesn't etc.
+	converted and which part doesn't <EM>etc.</EM>
     <DT><CODE><STRONG>#ifdef _OSD_POSIX</STRONG></CODE>
     <DD>Code which is needed for the BS2000 SIEMENS NIXDORF
 	mainframe platform only. This deals with include file
 	differences and socket implementations topics which are
 	only required on the BS2000/OSD platform.
    </DL>
@@ -119,14 +119,14 @@
     socket level (on BS2000 POSIX, there is a socket option which
     supports this) was intentionally <EM>not</EM> chosen, because
     the byte stream at the HTTP protocol level consists of a
     mixture of protocol related strings and non-protocol related
     raw file data. HTTP protocol strings are always encoded in
     ASCII (the GET request, any Header: lines, the chunking
-    information etc.) whereas the file transfer parts (i.e., GIF
-    images, CGI output etc.) should usually be just "passed through"
+    information <EM>etc.</EM>) whereas the file transfer parts (<EM>i.e.</EM>, GIF
+    images, CGI output <EM>etc.</EM>) should usually be just "passed through"
     by the server. This separation between "protocol string" and
     "raw data" is reflected in the server code by functions like
     bgets() or rvputs() for strings, and functions like bwrite()
     for binary data. A global translation of everything would
     therefore be inadequate.<BR>
     (In the case of text files of course, provisions must be made so
@@ -163,13 +163,13 @@
     based on the type of document being served, whether the
     document body (except for the chunking information, of
     course) is in ASCII already or must be converted from EBCDIC.
    </LI><BR>
 
    <LI>
-    For Text documents (MIME types text/plain, text/html etc.),
+    For Text documents (MIME types text/plain, text/html <EM>etc.</EM>),
     an implicit translation to ASCII can be used, or (if the
     users prefer to store some documents in raw ASCII form for
     faster serving, or because the files reside on a NFS-mounted
     directory tree) can be served without conversion.
     <BR>
     <STRONG>Example:</STRONG><BLOCKQUOTE>
@@ -182,19 +182,19 @@
     Similarly, any text/XXXX MIME type can be served as "raw ASCII" by
     configuring a MIME type "text/x-ascii-XXXX" for it using AddType.
    </LI><BR>
 
    <LI>
     Non-text documents are always served "binary" without conversion.
-    This seems to be the most sensible choice for, .e.g., GIF/ZIP/AU
+    This seems to be the most sensible choice for, .<EM>e.g.</EM>, GIF/ZIP/AU
     file types. This of course requires the user to copy them to the
     mainframe host using the "rcp -b" binary switch.
    </LI><BR>
 
    <LI>
-    Server parsed files are always assumed to be in native (i.e.,
+    Server parsed files are always assumed to be in native (<EM>i.e.</EM>,
     EBCDIC) format as used on the machine, and are converted after
     processing.
    </LI><BR>
 
    <LI>
     For CGI output, the CGI script determines whether a conversion is
@@ -223,13 +223,13 @@
     (the -b switch is not supported in unix rcp's).
    </P>
 
   <H3 ALIGN=CENTER>Text Documents</H3>
    <P>
     The default assumption of the server is that Text Files
-    (i.e., all files whose <SAMP>Content-Type:</SAMP> starts with
+    (<EM>i.e.</EM>, all files whose <SAMP>Content-Type:</SAMP> starts with
     <SAMP>text/</SAMP>) are stored in the native character
     set of the host, EBCDIC.
    </P>
 
   <H3 ALIGN=CENTER>Server Side Included Documents</H3>
    <P>
@@ -256,25 +256,25 @@
    <TD ALIGN=CENTER>+
    <TD>
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_actions
-   <TD ALIGN=CENTER>?
+   <TD ALIGN=CENTER>+
    <TD>
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_alias
    <TD ALIGN=CENTER>+
    <TD>
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_asis
-   <TD ALIGN=CENTER>?
+   <TD ALIGN=CENTER>+
    <TD>
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_auth
    <TD ALIGN=CENTER>+
@@ -316,24 +316,24 @@
    <TD ALIGN=CENTER>+
    <TD>
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_digest
-   <TD ALIGN=CENTER>-
-   <TD>MD5 not ported yet
+   <TD ALIGN=CENTER>+
+   <TD>
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_dir
    <TD ALIGN=CENTER>+
    <TD>
   </TR>
 
   <TR>
-   <TD ALIGN=LEFT>mod_dld
+   <TD ALIGN=LEFT>mod_so
    <TD ALIGN=CENTER>-
    <TD>no shared libs
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_env
@@ -341,13 +341,13 @@
    <TD>
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_example
    <TD ALIGN=CENTER>-
-   <TD>not tried yet
+   <TD>(test bed only)
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_expires
    <TD ALIGN=CENTER>+
    <TD>
@@ -401,13 +401,13 @@
    <TD>
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_mime_magic
    <TD ALIGN=CENTER>-
-   <TD>not tried yet
+   <TD>not ported yet
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_negotiation
    <TD ALIGN=CENTER>+
    <TD>
@@ -418,13 +418,13 @@
    <TD ALIGN=CENTER>+
    <TD>
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_rewrite
-   <TD ALIGN=CENTER>?
+   <TD ALIGN=CENTER>+
    <TD>untested
   </TR>
 
   <TR>
    <TD ALIGN=LEFT>mod_setenvif
    <TD ALIGN=CENTER>+
@@ -474,15 +474,15 @@
    <TD ALIGN=LEFT><A HREF="http://java.apache.org/">mod_jserv</A>
    <TD ALIGN=CENTER>-
    <TD>JAVA still being ported.
   </TR>
 
   <TR>
-   <TD ALIGN=LEFT><A HREF="http://www.php.net/">mod_php</A>
-   <TD ALIGN=CENTER>-
-   <TD>not ported yet
+   <TD ALIGN=LEFT><A HREF="http://www.php.net/">mod_php3</A>
+   <TD ALIGN=CENTER>+
+   <TD>mod_php3 runs fine, with LDAP and GD libraries
   </TR>
 
   <TR>
    <TD ALIGN=LEFT
    ><A HREF="http://hpwww.ec-lyon.fr/~vincent/apache/mod_put.html">mod_put</A>
    <TD ALIGN=CENTER>?
diff -BEr -U 6 apache_1.3.1/htdocs/manual/install.html apache_1.3.2/htdocs/manual/install.html
--- apache_1.3.1/htdocs/manual/install.html	1998-07-19 07:04:21.000000000 +0800
+++ apache_1.3.2/htdocs/manual/install.html	1998-09-22 03:20:47.000000000 +0800
@@ -68,13 +68,13 @@
   file to see if you need to set any of the <CODE>Rule</CODE> lines.
 
 
  <LI>
   Configure Apache for your operating system. Normally you can just
   type run the <CODE>Configure</CODE> script as given below. However
-  if this fails or you have any special requirements (e.g. to include
+  if this fails or you have any special requirements (<EM>e.g.</EM>, to include
   an additional library required by an optional module) you might need
   to edit one or more of the following options in the
   <CODE>Configuration</CODE> file:
     <CODE>EXTRA_CFLAGS, LIBS, LDFLAGS, INCLUDES</CODE>.
   <P>
 
@@ -151,16 +151,16 @@
 the <CODE>conf</CODE> directory called <CODE>mime.types</CODE>. This
 file usually does not need editing.
 
 <P>
 
 First edit <CODE>httpd.conf</CODE>.  This sets up general attributes
-about the server: the port number, the user it runs as, etc.  Next
+about the server: the port number, the user it runs as, <EM>etc.</EM>  Next
 edit the <CODE>srm.conf</CODE> file; this sets up the root of the
 document tree, special functions like server-parsed HTML or internal
-imagemap parsing, etc.  Finally, edit the <CODE>access.conf</CODE>
+imagemap parsing, <EM>etc.</EM>  Finally, edit the <CODE>access.conf</CODE>
 file to at least set the base cases of access.
 
 <P>
 
 In addition to these three files, the server behavior can be configured
 on a directory-by-directory basis by using <CODE>.htaccess</CODE>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/invoking.html apache_1.3.2/htdocs/manual/invoking.html
--- apache_1.3.1/htdocs/manual/invoking.html	1998-07-19 07:04:21.000000000 +0800
+++ apache_1.3.2/htdocs/manual/invoking.html	1998-09-22 03:20:47.000000000 +0800
@@ -35,28 +35,44 @@
 <DT><CODE>-d</CODE> <EM>serverroot</EM>
 <DD>Set the initial value for the
 <A HREF="mod/core.html#serverroot">ServerRoot</A> variable to
 <EM>serverroot</EM>. This can be overridden by the ServerRoot command in the
 configuration file. The default is <CODE>/usr/local/apache</CODE>.
 
+<DT><CODE>-D</CODE> <EM>name</EM>
+<DD>Define a name for use in in 
+<A HREF="mod/core.html#ifdefine">IfDefine</A> directives.
+This option can be used to optionally enable certain functionality in the
+configuration file, or to use a common configuration for
+several independent hosts, where host specific information is enclosed in
+&lt;IfDefine&gt; sections.
+
 <DT><CODE>-f</CODE> <EM>config</EM>
 <DD>Execute the commands in the file <EM>config</EM> on startup. If
 <EM>config</EM> does not begin with a <CODE>/</CODE>, then it is taken to be a
 path relative to the <A HREF="mod/core.html#serverroot">ServerRoot</A>. The
 default is <CODE>conf/httpd.conf</CODE>.
 
+<DT><CODE>-C</CODE> <EM>"directive"</EM>
+<DD>Process the given apache "directive" (just as if it had been part of a
+configuration file) <STRONG>before</STRONG> actually reading the regular configuration files.
+
+<DT><CODE>-c</CODE> <EM>"directive"</EM>
+<DD>Process the given apache "directive" <STRONG>after</STRONG> reading
+all the regular configuration files.
+
 <DT><CODE>-X</CODE>
 <DD>Run in single-process mode, for internal debugging purposes only; the
 daemon does not detach from the terminal or fork any children. Do <EM>NOT</EM>
 use this mode to provide ordinary web service.
 
 <DT><CODE>-v</CODE>
 <DD>Print the version of httpd and its build date, and then exit.
 
 <DT><A NAME="version"><CODE>-V</CODE></A>
-<DD>Print the base version of httpd, its sub-version if defined, its
+<DD>Print the base version of httpd, its
 build date, and a list of compile time settings which influence the
 behavior and performance of the apache server (<EM>e.g.</EM>,
 <SAMP>-DUSE_MMAP_FILES</SAMP>),
 then exit.
 
 <DT><A NAME="help"><CODE>-h</CODE></A>
@@ -67,12 +83,18 @@
 <DD>Give a list of all modules compiled into the server.
 
 <DT><CODE>-S</CODE>
 <DD>Show the settings as parsed from the config file (currently only
 shows a breakdown of the vhost settings).
 
+<DT><CODE>-t</CODE>
+<DD>Test the configuration file syntax (<EM>i.e.</EM>, read all configuration files
+and interpret them) but do not start the server. If the configuration contains
+errors, display an error message and exit with a non-zero exit status,
+otherwise display "Syntax OK" and terminate with a zero exit status.
+
 <DT><CODE>-?</CODE>
 <DD>Print a list of the httpd options, and then exit.
 </DL>
 
 <H2>Configuration files</H2>
 The server will read three files for configuration directives. Any directive
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/API.html apache_1.3.2/htdocs/manual/misc/API.html
--- apache_1.3.1/htdocs/manual/misc/API.html	1998-07-19 07:04:31.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/API.html	1998-09-22 03:20:52.000000000 +0800
@@ -17,13 +17,13 @@
  </H3>
 </DIV>
 
 <H1 ALIGN="CENTER">Apache API notes</H1>
 
 These are some notes on the Apache API and the data structures you
-have to deal with, etc.  They are not yet nearly complete, but
+have to deal with, <EM>etc.</EM>  They are not yet nearly complete, but
 hopefully, they will help you get your bearings.  Keep in mind that
 the API is still subject to change as we gain experience with it.
 (See the TODO file for what <EM>might</EM> be coming).  However,
 it will be easy to adapt modules to any changes that are made.
 (We have more modules to adapt than you do).
 <P>
@@ -112,13 +112,13 @@
 Most phases are terminated by the first module that handles them;
 however, for logging, `fixups', and non-access authentication
 checking, all handlers always run (barring an error).  Also, the
 response phase is unique in that modules may declare multiple handlers
 for it, via a dispatch table keyed on the MIME type of the requested
 object.  Modules may declare a response-phase handler which can handle
-<EM>any</EM> request, by giving it the key <CODE>*/*</CODE> (i.e., a
+<EM>any</EM> request, by giving it the key <CODE>*/*</CODE> (<EM>i.e.</EM>, a
 wildcard MIME type specification).  However, wildcard handlers are
 only invoked if the server has already tried and failed to find a more
 specific response handler for the MIME type of the requested object
 (either none existed, or they all declined).<P>
 
 The handlers themselves are functions of one argument (a
@@ -154,13 +154,13 @@
 <EM>command tables</EM> which declare their commands, and describe
 where they are permitted, and how they are to be invoked.  <P>
 
 A final note on the declared types of the arguments of some of these
 commands: a <CODE>pool</CODE> is a pointer to a <EM>resource pool</EM>
 structure; these are used by the server to keep track of the memory
-which has been allocated, files opened, etc., either to service a
+which has been allocated, files opened, <EM>etc.</EM>, either to service a
 particular request, or to handle the process of configuring itself.
 That way, when the request is over (or, for the configuration pool,
 when the server is restarting), the memory can be freed, and the files
 closed, <EM>en masse</EM>, without anyone having to write explicit code to
 track them all down and dispose of them.  Also, a
 <CODE>cmd_parms</CODE> structure contains various information about
@@ -309,14 +309,14 @@
   table *subprocess_env;
 
   /* Info about the request itself... */
 
   int header_only;     /* HEAD request, as opposed to GET */
   char *protocol;      /* Protocol, as given to us, or HTTP/0.9 */
-  char *method;        /* GET, HEAD, POST, etc. */
-  int method_number;   /* M_GET, M_POST, etc. */
+  char *method;        /* GET, HEAD, POST, <EM>etc.</EM> */
+  int method_number;   /* M_GET, M_POST, <EM>etc.</EM> */
 
   /* Info for logging */
 
   char *the_request;
   int bytes_sent;
 
@@ -328,13 +328,13 @@
 
   /* Various other config info which may change with .htaccess files
    * These are config vectors, with one void* pointer for each module
    * (the thing pointed to being the module's business).
    */
 
-  void *per_dir_config;   /* Options set in config files, etc. */
+  void *per_dir_config;   /* Options set in config files, <EM>etc.</EM> */
   void *request_config;   /* Notes on *this* request */
 
 };
 
 </PRE>
 
@@ -342,13 +342,13 @@
 
 Most <CODE>request_rec</CODE> structures are built by reading an HTTP
 request from a client, and filling in the fields.  However, there are
 a few exceptions:
 
 <UL>
-  <LI> If the request is to an imagemap, a type map (i.e., a
+  <LI> If the request is to an imagemap, a type map (<EM>i.e.</EM>, a
        <CODE>*.var</CODE> file), or a CGI script which returned a
        local `Location:', then the resource which the user requested
        is going to be ultimately located by some URI other than what
        the client originally supplied.  In this case, the server does
        an <EM>internal redirect</EM>, constructing a new
        <CODE>request_rec</CODE> for the new URI, and processing it
@@ -506,21 +506,21 @@
 response was actually sent).
 
 <H2><A NAME="pools">Resource allocation and resource pools</A></H2>
 <P>
 One of the problems of writing and designing a server-pool server is
 that of preventing leakage, that is, allocating resources (memory,
-open files, etc.), without subsequently releasing them.  The resource
+open files, <EM>etc.</EM>), without subsequently releasing them.  The resource
 pool machinery is designed to make it easy to prevent this from
 happening, by allowing resource to be allocated in such a way that
 they are <EM>automatically</EM> released when the server is done with
 them.
 </P>
 <P>
 The way this works is as follows:  the memory which is allocated, file
-opened, etc., to deal with a particular request are tied to a
+opened, <EM>etc.</EM>, to deal with a particular request are tied to a
 <EM>resource pool</EM> which is allocated for the request.  The pool
 is a data structure which itself tracks the resources in question.
 </P>
 <P>
 When the request has been processed, the pool is <EM>cleared</EM>.  At
 that point, all the memory associated with it is released for reuse,
@@ -788,13 +788,13 @@
 which the file stuff is implemented; also, <CODE>spawn_process</CODE>.
 </BLOCKQUOTE>
 <P>
 Pool cleanups live until clear_pool() is called:  clear_pool(a) recursively
 calls destroy_pool() on all subpools of a; then calls all the cleanups for a; 
 then releases all the memory for a.  destroy_pool(a) calls clear_pool(a) 
-and then releases the pool structure itself.  i.e. clear_pool(a) doesn't
+and then releases the pool structure itself.  <EM>i.e.</EM>, clear_pool(a) doesn't
 delete a, it just frees up all the resources and you can start using it
 again immediately. 
 </P>
 <H3>Fine control --- creating and dealing with sub-pools, with a note
 on sub-requests</H3>
 
@@ -971,13 +971,13 @@
     return new;
 }
 </PRE>
 
 As a note --- if there is no per-directory merge function present, the
 server will just use the subdirectory's configuration info, and ignore
-the parent's.  For some modules, that works just fine (e.g., for the
+the parent's.  For some modules, that works just fine (<EM>e.g.</EM>, for the
 includes module, whose per-directory configuration information
 consists solely of the state of the <CODE>XBITHACK</CODE>), and for
 those modules, you can just not declare one, and leave the
 corresponding structure slot in the module itself <CODE>NULL</CODE>.<P>
 
 <H3><A NAME="commands">Command handling</A></H3>
@@ -1028,13 +1028,13 @@
 
 <PRE>
 command_rec mime_cmds[] = {
 { "AddType", add_type, NULL, OR_FILEINFO, TAKE2,
     "a mime type followed by a file extension" },
 { "AddEncoding", add_encoding, NULL, OR_FILEINFO, TAKE2,
-    "an encoding (e.g., gzip), followed by a file extension" },
+    "an encoding (<EM>e.g.</EM>, gzip), followed by a file extension" },
 { NULL }
 };
 </PRE>
 
 The entries in these tables are:
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/client_block_api.html apache_1.3.2/htdocs/manual/misc/client_block_api.html
--- apache_1.3.1/htdocs/manual/misc/client_block_api.html	1998-07-19 07:04:31.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/client_block_api.html	1998-09-22 03:20:52.000000000 +0800
@@ -64,13 +64,13 @@
 
 
 <LI>When you are ready to possibly accept input, call
     <CODE>ap_should_client_block()</CODE>.
     This will tell the module whether or not to read input. If it is 0,
     the module should assume that the input is of a non-entity type
-    (e.g. a GET request). A nonzero response indicates that the module
+    (<EM>e.g.</EM>, a GET request). A nonzero response indicates that the module
     should proceed (to step 3).
     This step also sends a 100 Continue response
     to HTTP/1.1 clients, so should not be called until the module
     is <STRONG>*definitely*</STRONG> ready to read content. (otherwise, the
     point of the
     100 response is defeated). Never call this function more than once.
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/compat_notes.html apache_1.3.2/htdocs/manual/misc/compat_notes.html
--- apache_1.3.1/htdocs/manual/misc/compat_notes.html	1998-07-19 07:04:31.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/compat_notes.html	1998-09-22 03:20:52.000000000 +0800
@@ -89,13 +89,13 @@
 
 <P>
 <LI>Apache does not permit commas delimiting the methods in &lt;Limit&gt;.
 
 <P>
 <LI>Apache's <CODE>&lt;VirtualHost&gt;</CODE> treats all addresses as
-    "optional" (i.e. the server should continue booting if it can't
+    "optional" (<EM>i.e.</EM>, the server should continue booting if it can't
     resolve the address).  Whereas in NCSA the default is to fail
     booting unless an added <CODE>optional</CODE> keyword is included.
 
 <P>
 <LI>Apache does not implement <CODE>OnDeny</CODE> use
     <A HREF="../mod/core.html#errordocument"><CODE>ErrorDocument</CODE></A>
@@ -119,13 +119,13 @@
     implement the same thing under Apache.
 
 <P>
 <LI>Apache does not allow ServerRoot settings inside a VirtualHost
     container.  There is only one global ServerRoot in Apache; any desired
     changes in paths for virtual hosts need to be made with the explicit
-    directives, eg. DocumentRoot, TransferLog, etc.
+    directives, eg. DocumentRoot, TransferLog, <EM>etc.</EM>
 
 </OL>
 
 More to come when we notice them....
 
 <HR>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/custom_errordocs.html apache_1.3.2/htdocs/manual/misc/custom_errordocs.html
--- apache_1.3.1/htdocs/manual/misc/custom_errordocs.html	1998-07-19 07:04:31.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/custom_errordocs.html	1998-09-22 03:20:52.000000000 +0800
@@ -83,13 +83,13 @@
 An example of a "document not found" message for a german client might
 look like this:<BR>
 <IMG SRC="../images/custom_errordocs.gif"
  ALT="[Needs graphics capability to display]"><BR>
 All links in the document as well as links to the server's administrator
 mail address, and even the name and port of the serving virtual host
-are inserted in the error document at "run-time", i.e., when the error
+are inserted in the error document at "run-time", <EM>i.e.</EM>, when the error
 actually occurs.
 </P>
 
 <H2><A NAME="createdir">Creating an ErrorDocument directory</A></H2>
 
 For this concept to work as easily as possible, we must take advantage
@@ -128,13 +128,13 @@
      in the aliased <SAMP>/errordocs</SAMP> directory is defined.
      Note that we only define the basename of the document here
      because the MultiViews option will select the best candidate
      based on the language suffixes and the client's preferences.
      Any error situation with an error code <EM>not</EM> handled by a
      custom document will be dealt with by the server in the standard way
-     (i.e., a plain error message in english).
+     (<EM>i.e.</EM>, a plain error message in english).
  <LI>Finally, the <A HREF="../mod/core.html#allowoverride">AllowOverride</A>
      directive tells apache that it is not necessary to look for 
      a .htaccess file in the /errordocs directory: a minor speed 
      optimization.
 </OL>
 The resulting <SAMP>httpd.conf</SAMP> configuration would then look
@@ -269,13 +269,13 @@
 [406 no acceptable variant] error, listing the choices from which the client
 may select. But we're in an error message already, and important error
 information might get lost when the client had to choose a language
 representation first.
 <P>
 So, in this situation it appears to be easier to define a fallback language
-(by copying or linking, e.g., the english version to a language-less version).
+(by copying or linking, <EM>e.g.</EM>, the english version to a language-less version).
 Because the negotiation algorithm prefers "more specialized" variants over
 "more generic" variants, these generic alternatives will only be chosen
 when the normal negotiation did not succeed.
 <P> 
 A simple shell script to do it (execute within the errordocs/ dir):
 <PRE>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/descriptors.html apache_1.3.2/htdocs/manual/misc/descriptors.html
--- apache_1.3.1/htdocs/manual/misc/descriptors.html	1998-07-19 07:04:31.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/descriptors.html	1998-09-22 03:20:52.000000000 +0800
@@ -29,13 +29,13 @@
 1, and 2 respectively.
 Apache needs a descriptor for each log file, plus one for each
 network socket that it listens on, plus a handful of others.  Libraries
 that Apache uses may also require descriptors.  Normal programs don't
 open up many descriptors at all, and so there are some latent problems
 that you may experience should you start running Apache with many
-descriptors (i.e. with many virtual hosts).
+descriptors (<EM>i.e.</EM>, with many virtual hosts).
 
 <P>The operating system enforces a limit on the number of descriptors
 that a program can have open at a time.  There are typically three limits
 involved here.  One is a kernel limitation, depending on your operating
 system you will either be able to tune the number of descriptors available
 to higher numbers (this is frequently called <EM>FD_SETSIZE</EM>).  Or you
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/FAQ.html apache_1.3.2/htdocs/manual/misc/FAQ.html
--- apache_1.3.1/htdocs/manual/misc/FAQ.html	1998-07-19 07:04:31.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/FAQ.html	1998-09-22 03:20:52.000000000 +0800
@@ -17,13 +17,13 @@
   Apache HTTP Server Version 1.3
  </H3>
 </DIV>
 
   <H1 ALIGN="CENTER">Apache Server Frequently Asked Questions</H1>
   <P>
-  $Revision: 1.123 $ ($Date: 1998/07/10 00:25:35 $)
+  $Revision: 1.129 $ ($Date: 1998/09/17 14:14:52 $)
   </P>
   <P>
   The latest version of this FAQ is always available from the main
   Apache web site, at
   &lt;<A
        HREF="http://www.apache.org/docs/misc/FAQ.html"
@@ -77,13 +77,12 @@
 <!-- - Why do directory indexes appear as garbage?  (A: -lucb)      -->
 <!-- - How do I add a footer to all pages offered by my server?     -->
 <!-- - Fix midi question; a bigger problem than midi vs. x-midi is  -->
 <!--   the simple fact that older versions of Apache (and new ones  -->
 <!--   that have been upgraded without upgrading the mime.types     -->
 <!--   file) don't have the type listed at all.                     -->
-<!-- - Why is my .htaccess ignored?                                 -->
 <!-- - RewriteRule /~fraggle/* /cgi-bin/fraggle.pl does not work    -->
 <!-- - how do I disable authentication for a subdirectory?          -->
 <!--   (A: you can't but "satisfy any; allow from all" can be close -->
 <!-- - '400 malformed request' on Win32 might mean stale proxy; see -->
 <!--   PR #2300.                                                    -->
 <UL>
@@ -130,12 +129,15 @@
    <LI><A HREF="#ssi-part-i">How do I enable SSI (parsed HTML)?</A>
    </LI>
    <LI><A HREF="#ssi-part-ii">Why don't my parsed files get cached?</A>
    </LI>
    <LI><A HREF="#ssi-part-iii">How can I have my script output parsed?</A>
    </LI>
+   <LI><A HREF="#ssi-part-iv">SSIs don't work for VirtualHosts and/or 
+        user home directories</A>
+   </LI>
    <LI><A HREF="#proxy">Does or will Apache act as a Proxy server?</A>
    </LI>
    <LI><A HREF="#multiviews">What are &quot;multiviews&quot;?</A>
    </LI>
    <LI><A HREF="#fdlim">Why can't I run more than &lt;<EM>n</EM>&gt;
         virtual hosts?</A>
@@ -263,13 +265,13 @@
    </LI>
    <LI><A HREF="#cgi-spec">Where can I find the &quot;CGI
         specification&quot;?</A>
    </LI>
    <LI><A HREF="#year2000">Is Apache Year 2000 compliant?</A>
    </LI>
-   <LI><A HREF="#namevhost">I upgraded to Apache 1.3.0 and now my
+   <LI><A HREF="#namevhost">I upgraded to Apache 1.3 and now my
         virtual hosts don't work!</A>
    </LI>
    <LI><A HREF="#redhat">I'm using RedHat Linux and I have problems with httpd
         dying randomly or not restarting properly</A>
    </LI>
    <LI><A HREF="#stopping">I upgraded from an Apache version earlier
@@ -289,15 +291,20 @@
    </LI>
    <LI><A HREF="#zoom">What's the best hardware/operating system/... How do
         I get the most out of my Apache Web server?</A>
    </LI>
    <LI><A HREF="#regex">What are "regular expressions"?</A>
    </LI>
-   <li><a href="#broken-gcc">I'm using gcc and I get some compilation errors, what
-	is wrong?</a>
-   </li>
+   <LI><A HREF="#broken-gcc">I'm using gcc and I get some compilation errors, 
+	what is wrong?</A>
+   </LI>
+   <LI><A HREF="#htaccess-work">My <CODE>.htaccess</CODE> files are being
+	ignored.</A>
+   </LI>
+   <LI><A HREF="#submit_patch">How do I submit a patch to the Apache Group?</A>
+   </LI>
   </OL>
  </LI>
 </UL>
 
 <HR>
 
@@ -383,16 +390,16 @@
  </LI>
 
  <LI><A NAME="tested">
       <STRONG>How thoroughly tested is Apache?</STRONG>
      </A>
   <P>
-  Apache is run on over 500,000 Internet servers (as of July 1997). It has
+  Apache is run on over 1.2 million Internet servers (as of July 1998). It has
   been tested thoroughly by both developers and users. The Apache Group
   maintains rigorous standards before releasing new versions of their
-  server, and our server runs without a hitch on over one third of all
+  server, and our server runs without a hitch on over one half of all
   WWW servers available on the Internet.  When bugs do show up, we
   release patches and new versions as soon as they are available.
   </P>
   <P>
   The Apache project's web site includes a page with a partial list of
   <A HREF="http://www.apache.org/info/apache_users.html">sites running
@@ -414,13 +421,13 @@
    <LI>to collect suggestions for fixes/improvements from its users,
    </LI>
    <LI>to respond to needs of large volume providers as well as
     occasional users.
    </LI>
   </UL>
-  </P>
+  <P></P>
   <HR>
  </LI>
 
  <LI><A NAME="support">
       <STRONG>Whom do I contact for support?</STRONG>
      </A>
@@ -548,13 +555,13 @@
     <DL>
      <DD><CODE># cd <EM>ServerRoot</EM><BR>
       # dbx httpd core<BR>
       (dbx) where</CODE>
      </DD>
     </DL>
-    </P>
+    <P></P>
     <P>
     (Substitute the appropriate locations for your
     <SAMP>ServerRoot</SAMP> and your <SAMP>httpd</SAMP> and
     <SAMP>core</SAMP> files.  You may have to use <CODE>gdb</CODE>
     instead of <CODE>dbx</CODE>.)
     </P>
@@ -614,25 +621,25 @@
     a line such as
     <P>
     <DL>
      <DD><CODE>AddHandler cgi-script .cgi</CODE>
      </DD>
     </DL>
-    </P>
+    <P></P>
     <P>
     The server will then recognize that all files in that location (and
     its logical descendants) that end in &quot;<SAMP>.cgi</SAMP>&quot;
     are script files, not documents.
     </P>
    </LI>
    <LI>Make sure that the directory location is covered by an
     <A HREF="../mod/core.html#options"><SAMP>Options</SAMP></A>
     declaration that includes the <SAMP>ExecCGI</SAMP> option.
    </LI>
   </OL>
-  </P>
+  <P></P>
   <P>
   In some situations, you might not want to actually
   allow all files named &quot;<SAMP>*.cgi</SAMP>&quot; to be executable.
   Perhaps all you want is to enable a particular file in a normal directory to
   be executable. This can be alternatively accomplished 
   <EM>via</EM> <A HREF="../mod/mod_rewrite.html"><SAMP>mod_rewrite</SAMP></A> 
@@ -648,21 +655,21 @@
       <BR>
       RewriteBase   /~foo/bar/
       <BR>
       RewriteRule   ^quux\.cgi$  -  [T=application/x-httpd-cgi]</CODE>
      </DD>
     </DL>
-    </P>
+    <P></P>
    </LI>
    <LI>Make sure that the directory location is covered by an
     <A HREF="../mod/core.html#options"><SAMP>Options</SAMP></A>
     declaration that includes the <SAMP>ExecCGI</SAMP> and
     <SAMP>FollowSymLinks</SAMP> option.
    </LI>
   </OL>
-  </P>
+  <P></P>
   <HR>
  </LI>
 
  <LI><A NAME="premature-script-headers">
       <STRONG>What does it mean when my CGIs fail with
       &quot;<SAMP>Premature end of script headers</SAMP>&quot;?</STRONG>
@@ -699,13 +706,13 @@
     &nbsp;#<BR>
     &nbsp;$| = $oldbar;<BR>
     &nbsp;select ($cfh);<BR>
     }</CODE>
    </DD>
   </DL>
-  </P>
+  <P></P>
   <P>
   This is generally only necessary when you are calling external
   programs from your script that send output to stdout, or if there will
   be a long delay between the time the headers are sent and the actual
   content starts being emitted.  To maximize performance, you should
   turn buffer-flushing back <EM>off</EM> (with <CODE>$| = 0</CODE> or the
@@ -760,13 +767,13 @@
     directive:
     <P>
     <DL>
      <DD><CODE>AddHandler server-parsed .shtml</CODE>
      </DD>
     </DL>
-    </P>
+    <P></P>
     <P>
     This indicates that all files ending in &quot;.shtml&quot; in that
     location (or its descendants) should be parsed.  Note that using
     &quot;.html&quot; will cause all normal HTML files to be parsed,
     which may put an inordinate load on your server.
     </P>
@@ -830,12 +837,24 @@
   This is a feature The Apache Group hopes to add in the next major
   release after 1.3.
   </P>
   <HR>
  </LI>
 
+ <LI><A NAME="ssi-part-iv">
+      <STRONG>SSIs don't work for VirtualHosts and/or 
+        user home directories.</STRONG>
+     </A>
+  <P>
+  This is almost always due to having some setting in your config file that
+  sets "Options Includes" or some other setting for your DocumentRoot
+  but not for other directories.  If you set it inside a Directory
+  section, then that setting will only apply to that directory.  
+  </P>
+ </LI>
+
  <LI><A NAME="proxy">
       <STRONG>Does or will Apache act as a Proxy server?</STRONG>
      </A>
   <P>
   Apache version 1.1 and above comes with a
   <A HREF="../mod/mod_proxy.html">proxy module</A>.
@@ -1179,13 +1198,13 @@
   <DL>
    <DD><CODE>BrowserMatch Java1.0 force-response-1.0
     <BR>
     BrowserMatch JDK/1.0 force-response-1.0</CODE>
    </DD>
   </DL>
-  </P>
+  <P></P>
   <P>
   More information about this issue can be found in the
   <A HREF="http://www.apache.org/info/jdk-102.html"
   ><CITE>Java and HTTP/1.1</CITE></A>
   page at the Apache web site.
   </P>
@@ -1292,13 +1311,13 @@
    </LI>
    <LI>Add  <CODE>-DNO_WRITEV</CODE> to the <CODE>EXTRA_CFLAGS</CODE>
     line in your <SAMP>Configuration</SAMP> and reconfigure/rebuild.
     This hurts performance and should only be used as a last resort.
    </LI>
   </UL>
-  </P>
+  <P></P>
   <HR>
  </LI>
 
  <LI><A NAME="wheres-the-dump">
       <STRONG>The errorlog says Apache dumped core, but where's the dump
       file?</STRONG>
@@ -1365,13 +1384,13 @@
     <SAMP>Configuration</SAMP> file.  For example:
     <P>
     <DL>
      <DD><CODE>EXTRA_CFLAGS=-DMAXIMUM_DNS</CODE>
      </DD>
     </DL>
-    </P>
+    <P></P>
     <P>
     This will cause Apache to be very paranoid about making sure a
     particular host address is <EM>really</EM> assigned to the name it
     claims to be.  Note that this <EM>can</EM> incur a significant
     performance penalty, however, because of all the name resolution
     requests being sent to a nameserver.
@@ -1443,13 +1462,13 @@
     configuration files:
     <P>
     <DL>
      <DD><CODE>AddType audio/x-midi .mid .midi .kar</CODE>
      </DD>
     </DL>
-    </P>
+    <P></P>
     <P>
     Note that this may break browsers that <EM>do</EM> recognize the
     <SAMP>audio/midi</SAMP> MIME type unless they're prepared to also
     handle <SAMP>audio/x-midi</SAMP> the same way.
     </P>
    </LI>
@@ -1584,13 +1603,13 @@
     <BR>
     EXTRA_LDFLAGS=-L/usr/local/bind/lib
     <BR>
     EXTRA_LIBS=-lbind</CODE>
    </DD>
   </DL>
-  </P>
+  <P></P>
   <HR>
  </LI>
 
  <LI><A NAME="set-servername">
       <STRONG>Why does accessing directories only work when I include
       the trailing &quot;/&quot;
@@ -1694,13 +1713,13 @@
     <BR>
     require valid-user
     <BR>
     satisfy any</CODE>
    </DD>
   </DL>
-  </P>
+  <P></P>
   <P>
   See the <A HREF="#user-authentication">user authentication</A>
   question and the <A HREF="../mod/mod_access.html">mod_access</A>
   module for details on how the above directives work.
   </P>
   <HR>
@@ -1934,13 +1953,13 @@
  <LI><A NAME="rewrite-prefixdocroot"><STRONG>Why don't some of my URLs
       get prefixed with DocumentRoot when using mod_rewrite?</STRONG>
      </A>
   <P>
   If the rule starts with <SAMP>/somedir/...</SAMP> make sure that really no
   <SAMP>/somedir</SAMP> exists on the filesystem if you don't want to lead the
-  URL to match this directory, i.e. there must be no root directory named
+  URL to match this directory, <EM>i.e.</EM>, there must be no root directory named
   <SAMP>somedir</SAMP> on the filesystem. Because if there is such a
   directory, the URL will not get prefixed with DocumentRoot. This behaviour
   looks ugly, but is really important for some other aspects of URL
   rewriting.
   </P>
   <HR>
@@ -1985,13 +2004,13 @@
       flag?</STRONG>
      </A>
   <P>
   There is only one ugly solution: You have to surround the complete flag
   argument by quotation marks (<SAMP>"[E=...]"</SAMP>). Notice: The argument
   to quote here is not the argument to the E-flag, it is the argument of the
-  Apache config file parser, i.e. the third argument of the RewriteRule here.
+  Apache config file parser, <EM>i.e.</EM>, the third argument of the RewriteRule here.
   So you have to write <SAMP>"[E=any text with whitespaces]"</SAMP>.
   </P>
   <HR>
  </LI>
 
  <LI><A NAME="cgi-spec">
@@ -2055,13 +2074,13 @@
   at all.
   </P>
   <HR>
  </LI>
 
  <LI><A NAME="namevhost">
-      <STRONG>I upgraded to Apache 1.3.0 and now my virtual hosts don't
+      <STRONG>I upgraded to Apache 1.3 and now my virtual hosts don't
       work!</STRONG>
      </A>
   <P>
   In versions of Apache prior to 1.3b2, there was a lot of confusion
   regarding address-based virtual hosts and (HTTP/1.1) name-based
   virtual hosts, and the rules concerning how the server processed
@@ -2254,45 +2273,81 @@
   </P>
   <HR>
  </LI>
  <LI><A NAME="regex">
       <STRONG>What are "regular expressions"?</STRONG></A>
    <P>
-   Regular expressions are a way of describing a pattern - for example, "all the words
-   that begin with the letter A" or "every 10-digit phone number" or even "Every sentence
-   with two commas in it, and no capital letter Q".  Regular expressions (aka "regexp"s)
-   are useful in Apache because they let you apply certain attributes against collections
-   of files or resources in very flexible ways - for example, all .gif and .jpg files under
+   Regular expressions are a way of describing a pattern - for example, "all 
+   the words that begin with the letter A" or "every 10-digit phone number" 
+   or even "Every sentence with two commas in it, and no capital letter Q".  
+   Regular expressions (aka "regexp"s) are useful in Apache because they 
+   let you apply certain attributes against collections of files or resources 
+   in very flexible ways - for example, all .gif and .jpg files under
    any "images" directory could be written as /.*\/images\/.*[jpg|gif]/.
 
    <P>The best overview around is probably the one which comes with
    Perl.  We implement a simple subset of Perl's regexp support, but
    it's still a good way to learn what they mean.  You can start by
    going to the <A
    HREF="http://www.perl.com/CPAN-local/doc/manual/html/pod/perlre.html#Version_8_Regular_Expresions">CPAN
    page on regular expressions</A>, and branching out from there.
 
   <HR>
-  </LI>
- <li><a name="broken-gcc"><strong>I'm using gcc and I get some
-	compilation errors, what is wrong?</strong></a>
-    <p>
-    GCC parses your system header files and produces a modified subset which
+ </LI>
+ <LI><A NAME="broken-gcc"><STRONG>I'm using gcc and I get some
+	compilation errors, what is wrong?</STRONG></A>
+    <P> GCC parses your system header files and produces a modified subset which
     it uses for compiling.  This behaviour ties GCC tightly to the version
     of your operating system.  So, for example, if you were running IRIX 5.3
     when you built GCC and then upgrade to IRIX 6.2 later, you will have to
     rebuild GCC.  Similarly for Solaris 2.4, 2.5, or 2.5.1 when you upgrade
     to 2.6.  Sometimes you can type "gcc -v" and it will tell you the version
     of the operating system it was built against.
-    <p>
+    <P>
     If you fail to do this, then it is very likely that Apache will fail
-    to build.  One of the most common errors is with <code>readv</code>,
-    <code>writev</code>, or <code>uio.h</code>.  This is <b>not</b> a
+    to build.  One of the most common errors is with <CODE>readv</CODE>,
+    <CODE>writev</CODE>, or <CODE>uio.h</CODE>.  This is <STRONG>not</STRONG> a
     bug with Apache.  You will need to re-install GCC.
-   <hr>
-   </li>
+   <HR>
+  </LI>
+  <LI><A NAME="htaccess-work">
+       <STRONG>My <CODE>.htaccess</CODE> files are being ignored.</STRONG></A>
+   <P>
+   This is almost always due to your <A HREF="../mod/core.html#allowoverride">
+   AllowOverride</A> directive being set incorrectly for the directory in 
+   question.  If it is set to <CODE>None</CODE> then .htaccess files will 
+   not even be looked for.  If you do have one that is set, then be certain 
+   it covers the directory you are trying to use the .htaccess file in.  
+   This is normally accomplished by ensuring it is inside the proper 
+   <A HREF="../mod/core.html#directory">Directory</A> container.
+   <HR>
+  </LI>
+  <LI><A NAME="submit_patch">
+       <STRONG>How do I submit a patch to the Apache Group?</STRONG></A>
+   <P>
+   The Apache Group encourages patches from outside developers. There are 2 main "types"
+   of patches: small bugfixes and general improvements. Bugfixes should be sent to the
+   Apache <A HREF="http://www.apache.org/bug_report.html">bug report page</A>.
+   Improvements, modifications and additions should follow these instructions.
+   <P>
+   In general, the first course of action is to be a member of the
+   <CODE>new-httpd@apache.org</CODE> mailing list. This indicates to the Group that
+   you are closely following the latest Apache developments. Your patch file should be
+   generated using either '<CODE>diff -c</CODE>' or '<CODE>diff -u</CODE>' against the
+   latest CVS tree. To submit your patch, send Email to <CODE>new-httpd@apache.org</CODE>
+   with a <CODE>Subject:</CODE> line that starts with <CODE>[PATCH]</CODE> and
+   includes a general description of the patch. In the body of the message, the
+   patch should be clearly described and then included at the end of the message.
+   If the patch-file is long, you can note a URL to the file instead of the file
+   itself. Use of MIME enclosures/attachments should be avoided.
+   <P>
+   Be prepared to respond to any questions about your patches and possibly defend
+   your code. If your patch results in a lot of discussion, you may be asked to
+   submit an updated patch that incorporate all changes and suggestions.
+   <HR>
+  </LI>
 
   <!-- Don't forget to add HR tags at the end of each list item.. -->
 
 </OL>
 <HR>
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/fin_wait_2.html apache_1.3.2/htdocs/manual/misc/fin_wait_2.html
--- apache_1.3.1/htdocs/manual/misc/fin_wait_2.html	1998-07-19 07:04:31.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/fin_wait_2.html	1998-09-22 03:20:52.000000000 +0800
@@ -98,13 +98,13 @@
 
 It is expected that many other clients have the same problem. What a
 client <STRONG>should do</STRONG> is periodically check its open
 socket(s) to see if they have been closed by the server, and close their
 side of the connection if the server has closed.  This check need only
 occur once every few seconds, and may even be detected by a OS signal
-on some systems (e.g., Win95 and NT clients have this capability, but
+on some systems (<EM>e.g.</EM>, Win95 and NT clients have this capability, but
 they seem to be ignoring it).<P>
 
 Apache <STRONG>cannot</STRONG> avoid these FIN_WAIT_2 states unless it
 disables persistent connections for the buggy clients, just
 like we recommend doing for Navigator 2.x clients due to other bugs.
 However, non-persistent connections increase the total number of
@@ -125,13 +125,13 @@
 crash their server.  
 
 The most likely source for additional FIN_WAIT_2 states
 is a function called <CODE>lingering_close()</CODE> which was added
 between 1.1 and 1.2.  This function is necessary for the proper
 handling of persistent connections and any request which includes
-content in the message body (e.g., PUTs and POSTs).
+content in the message body (<EM>e.g.</EM>, PUTs and POSTs).
 What it does is read any data sent by the client for
 a certain time after the server closes the connection.  The exact
 reasons for doing this are somewhat complicated, but involve what
 happens if the client is making a request at the same time the
 server sends a response and closes the connection. Without lingering,
 the client might be forced to reset its TCP input buffer before it
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/howto.html apache_1.3.2/htdocs/manual/misc/howto.html
--- apache_1.3.1/htdocs/manual/misc/howto.html	1998-07-19 07:04:32.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/howto.html	1998-09-22 03:20:52.000000000 +0800
@@ -63,19 +63,20 @@
 
 This will send an HTTP 302 Redirect back to the client, and no matter
 what they gave in the original URL, they'll be sent to
 "http://www.apache.org".
 
 The second option is to set up a <CODE>ScriptAlias</CODE> pointing to
-a <STRONG>cgi script</STRONG> which outputs a 301 or 302 status and the
+a <STRONG>CGI script</STRONG> which outputs a 301 or 302 status and the
 location
 of the other server.</P>
 
-<P>By using a <STRONG>cgi-script</STRONG> you can intercept various requests
+<P>By using a <STRONG>CGI script</STRONG> you can intercept various requests
 and
-treat them specially, e.g. you might want to intercept <STRONG>POST</STRONG>
+treat them specially, <EM>e.g.</EM>, you might want to intercept
+<STRONG>POST</STRONG>
 requests, so that the client isn't redirected to a script on the other
 server which expects POST information (a redirect will lose the POST
 information.) You might also want to use a CGI script if you don't
 want to compile mod_rewrite into your server.
 
 <P>Here's how to redirect all requests to a script... In the server
@@ -111,13 +112,14 @@
 as big as the old one, but it now contains thousands (or millions) of null
 characters.</P>
 
 <P>The correct procedure is to move the logfile, then signal Apache to tell
 it to reopen the logfiles.</P>
 
-<P>Apache is signaled using the <STRONG>SIGHUP</STRONG> (-1) signal. e.g.
+<P>Apache is signaled using the <STRONG>SIGHUP</STRONG> (-1) signal.
+<EM>e.g.</EM>
 <BLOCKQUOTE><CODE>
 mv access_log access_log.old<BR>
 kill -1 `cat httpd.pid`
 </CODE></BLOCKQUOTE>
 </P>
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/index.html apache_1.3.2/htdocs/manual/misc/index.html
--- apache_1.3.1/htdocs/manual/misc/index.html	1998-07-19 07:04:32.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/index.html	1998-09-22 03:20:53.000000000 +0800
@@ -48,12 +48,25 @@
    <DT><A
         HREF="compat_notes.html"
        >Compatibility with NCSA</A>
    </DT>
    <DD>Notes about Apache's compatibility with the NCSA server.
    </DD>
+   <DT><A HREF="custom_errordocs.html">How to use XSSI and Negotiation 
+	for custom ErrorDocuments</A>
+   </DT>
+   <DD>Describes a solution which uses XSSI and negotiation
+    to custom-tailor the Apache ErrorDocuments to taste, adding the
+    advantage of returning internationalized versions of the error
+    messages depending on the client's language preferences.
+   </DD>
+   <DT><A HREF="descriptors.html">File Descriptor use in Apache</A>
+   <DD>Describes how Apache uses file descriptors and talks about various
+    limits imposed on the number of descriptors available by various 
+    operating systems.
+   </DD>
    <DT><A
         HREF="fin_wait_2.html"
        ><SAMP>FIN_WAIT_2</SAMP></A>
    </DT>
    <DD>A description of the causes of Apache processes going into the
     <SAMP>FIN_WAIT_2</SAMP> state, and what you can do about it.
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/known_client_problems.html apache_1.3.2/htdocs/manual/misc/known_client_problems.html
--- apache_1.3.1/htdocs/manual/misc/known_client_problems.html	1998-07-19 07:04:32.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/known_client_problems.html	1998-09-22 03:20:53.000000000 +0800
@@ -248,25 +248,25 @@
 </CODE></BLOCKQUOTE>
 
 <P>We don't advocate this though since bending over backwards for beta software
 is usually not a good idea; ideally it gets fixed, new betas or a final release
 comes out, and no one uses the broken old software anymore.  In theory.
 
-<h3><a name="content-type-persistence"><code>Content-Type</code> change
-is not noticed after reload</a></h3>
+<H3><A NAME="content-type-persistence"><CODE>Content-Type</CODE> change
+is not noticed after reload</A></H3>
 
-<p>Navigator (all versions?) will cache the <code>content-type</code>
+<P>Navigator (all versions?) will cache the <CODE>content-type</CODE>
 for an object "forever".  Using reload or shift-reload will not cause
-Navigator to notice a <code>content-type</code> change.  The only
+Navigator to notice a <CODE>content-type</CODE> change.  The only
 work-around is for the user to flush their caches (memory and disk).  By
-way of an example, some folks may be using an old <code>mime.types</code>
-file which does not map <code>.htm</code> to <code>text/html</code>,
-in this case Apache will default to sending <code>text/plain</code>.
-If the user requests the page and it is served as <code>text/plain</code>.
+way of an example, some folks may be using an old <CODE>mime.types</CODE>
+file which does not map <CODE>.htm</CODE> to <CODE>text/html</CODE>,
+in this case Apache will default to sending <CODE>text/plain</CODE>.
+If the user requests the page and it is served as <CODE>text/plain</CODE>.
 After the admin fixes the server, the user will have to flush their caches
-before the object will be shown with the correct <code>text/html</code>
+before the object will be shown with the correct <CODE>text/html</CODE>
 type.
 
 <HR>
 
 <H3 ALIGN="CENTER">
  Apache HTTP Server Version 1.3
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/nopgp.html apache_1.3.2/htdocs/manual/misc/nopgp.html
--- apache_1.3.1/htdocs/manual/misc/nopgp.html	1998-07-19 07:04:32.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/nopgp.html	1998-09-22 03:20:53.000000000 +0800
@@ -52,13 +52,13 @@
 more flexible security - SSL and SHTTP - so this wasn't a function
 whose absence would really be missed on a functional level.
 
 <LI>We didn't feel like being just a couple more martyrs in a fight
 being fought very well by many other people.  Rather than have the
 machine that supports the project confiscated or relocated to South
-Africa, etc., we think there are more efficient methods to address the
+Africa, <EM>etc.</EM>, we think there are more efficient methods to address the
 issue.
 
 </UL>
 
 It kind of sickens us that we had to do it, but so be it.
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/perf-bsd44.html apache_1.3.2/htdocs/manual/misc/perf-bsd44.html
--- apache_1.3.1/htdocs/manual/misc/perf-bsd44.html	1998-07-19 07:04:32.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/perf-bsd44.html	1998-09-22 03:20:53.000000000 +0800
@@ -66,13 +66,13 @@
 
 If you're running a really busy BSD Apache server, the following are useful
 things to do if the system is acting sluggish:<P>
 
 <UL>
 
-<LI> Run vmstat to check memory usage, page/swap rates, etc.
+<LI> Run vmstat to check memory usage, page/swap rates, <EM>etc.</EM>
 
 <LI> Run netstat -m to check mbuf usage
 
 <LI> Run fstat to check file descriptor usage
 
 </UL>
@@ -216,13 +216,13 @@
 
 <P>
 
 From conf/httpd.conf-dist:
 
 <PRE>
-# Limit on total number of servers running, i.e., limit on the number
+# Limit on total number of servers running, <EM>i.e.</EM>, limit on the number
 # of clients who can simultaneously connect --- if this limit is ever
 # reached, clients will be LOCKED OUT, so it should NOT BE SET TOO LOW.
 # It is intended mainly as a brake to keep a runaway server from taking
 # Unix with it as it spirals down...
 
 MaxClients 150
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/perf-dec.html apache_1.3.2/htdocs/manual/misc/perf-dec.html
--- apache_1.3.1/htdocs/manual/misc/perf-dec.html	1998-07-19 07:04:32.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/perf-dec.html	1998-09-22 03:20:53.000000000 +0800
@@ -214,13 +214,13 @@
                                 be too short, causing unnecessary duplicate
                                 packets to be sent.  The unit is specified
                                 in 1/2 seconds, the initial value is 1.
 
         tcp_keepinit            This is the amount of time a partially
                                 established connection will sit on the listen
-                                queue before timing out (e.g. if a client
+                                queue before timing out (<EM>e.g.</EM>, if a client
                                 sends a SYN but never answers our SYN/ACK).
                                 Partially established connections tie up slots
                                 on the listen queue.  If the queue starts to
                                 fill with connections in SYN_RCVD state,
                                 tcp_keepinit can be decreased to make those
                                 partial connects time out sooner.  This should
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/perf.html apache_1.3.2/htdocs/manual/misc/perf.html
--- apache_1.3.1/htdocs/manual/misc/perf.html	1998-07-19 07:04:32.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/perf.html	1998-09-22 03:20:53.000000000 +0800
@@ -23,13 +23,13 @@
 
 Running Apache on a heavily loaded web server, one often encounters
 problems related to the machine and OS configuration.  "Heavy" is
 relative, of course - but if you are seeing more than a couple hits
 per second on a sustained basis you should consult the pointers on
 this page.  In general the suggestions involve how to tune your kernel
-for the heavier TCP load, hardware/software conflicts that arise, etc.
+for the heavier TCP load, hardware/software conflicts that arise, <EM>etc.</EM>
 
 <UL>
 <LI><A HREF="#AUX">A/UX (Apple's UNIX)</A>
 <LI><A HREF="#BSD">BSD-based (BSDI, FreeBSD, etc)</A>
 <LI><A HREF="#DEC">Digital UNIX</A>
 <LI><A HREF="perf-hp.html">HPUX</A>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/perf-tuning.html apache_1.3.2/htdocs/manual/misc/perf-tuning.html
--- apache_1.3.1/htdocs/manual/misc/perf-tuning.html	1998-07-19 07:04:32.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/perf-tuning.html	1998-09-22 03:20:53.000000000 +0800
@@ -224,22 +224,22 @@
 In no event should you raise this above about 60 seconds, as
 <A HREF="http://www.research.digital.com/wrl/techreports/abstracts/95.4.html"
 >most of the benefits are lost</A>.
 
 <H3>Compile-Time Configuration Issues</H3>
 
-<H4>mod_status and Rule STATUS=yes</H4>
+<H4>mod_status and ExtendedStatus On</H4>
 
 <P>If you include <CODE>mod_status</CODE>
-and you also set <CODE>Rule STATUS=yes</CODE> when building
+and you also set <CODE>ExtendedStatus On</CODE> when building and running
 Apache, then on every request Apache will perform two calls to
 <CODE>gettimeofday(2)</CODE> (or <CODE>times(2)</CODE> depending
 on your operating system), and (pre-1.3) several extra calls to
 <CODE>time(2)</CODE>.  This is all done so that the status report
-contains timing indications.  For highest performance, set <CODE>Rule
-STATUS=no</CODE>.
+contains timing indications.  For highest performance, set
+<CODE>ExtendedStatus off</CODE> (which is the default).
 
 <H4>accept Serialization - multiple sockets</H4>
 
 <P>This discusses a shortcoming in the Unix socket API.
 Suppose your
 web server uses multiple <CODE>Listen</CODE> statements to listen on
@@ -356,13 +356,13 @@
 <DT><CODE>USE_SYSVSEM_SERIALIZED_ACCEPT</CODE>
 <DD>(1.3 or later) This method uses SysV-style semaphores to implement the
 mutex.  Unfortunately SysV-style semaphores have some bad side-effects.
 One is that it's possible Apache will die without cleaning up the semaphore
 (see the <CODE>ipcs(8)</CODE> man page).  The other is that the semaphore
 API allows for a denial of service attack by any CGIs running under the
-same uid as the webserver (i.e. all CGIs unless you use something
+same uid as the webserver (<EM>i.e.</EM>, all CGIs unless you use something
 like suexec or cgiwrapper).  For these reasons this method is not used
 on any architecture except IRIX (where the previous two are prohibitively
 expensive on most IRIX boxes).
 
 <DT><CODE>USE_USLOCK_SERIALIZED_ACCEPT</CODE>
 <DD>(1.3 or later) This method is only available on IRIX, and uses
@@ -444,19 +444,19 @@
 problems on various versions of Unix because of a shortsightedness.
 The TCP specification does not state that the FIN_WAIT_2 state has a
 timeout, but it doesn't prohibit it.  On systems without the timeout,
 Apache 1.2 induces many sockets stuck forever in the FIN_WAIT_2 state.
 In many cases this can be avoided by simply upgrading to the latest
 TCP/IP patches supplied by the vendor, in cases where the vendor has
-never released patches (i.e.  SunOS4 -- although folks with a source
+never released patches (<EM>i.e.</EM>,  SunOS4 -- although folks with a source
 license can patch it themselves) we have decided to disable this feature.
 
 <P>There are two ways of accomplishing this.  One is the
 socket option <CODE>SO_LINGER</CODE>.  But as fate would have it,
 this has never been implemented properly in most TCP/IP stacks.  Even
-on those stacks with a proper implementation (i.e. Linux 2.0.31) this
+on those stacks with a proper implementation (<EM>i.e.</EM>, Linux 2.0.31) this
 method proves to be more expensive (cputime) than the next solution.
 
 <P>For the most part, Apache implements this in a function called
 <CODE>lingering_close</CODE> (in <CODE>http_main.c</CODE>).  The
 function looks roughly like this:
 
@@ -607,13 +607,13 @@
 
 <P>To see why this is necessary, consider how a browser reacts to a closed
 connection.  If the connection was a keep-alive connection and the request
 being serviced was not the first request then the browser will quietly
 reissue the request on a new connection.  It has to do this because the
 server is always free to close a keep-alive connection in between requests
-(i.e. due to a timeout or because of a maximum number of requests).
+(<EM>i.e.</EM>, due to a timeout or because of a maximum number of requests).
 But, if the connection is closed before the first response has been
 received the typical browser will display a "document contains no data"
 dialogue (or a broken image icon).  This is done on the assumption that
 the server is broken in some way (or maybe too overloaded to respond
 at all).  So Apache tries to avoid ever deliberately closing the connection
 before it has sent a single response.  This is the cause of those
@@ -657,24 +657,24 @@
 properly implement the HTTP protocol.  The second occurs because the
 Common Log Format dictates that the log record include a timestamp of the
 end of the request.  A custom logging module could eliminate one of the
 calls.  Or you can use a method which moves the time into shared memory,
 see the <A HREF="#patches">patches section below</A>.
 
-<P>As described earlier, <CODE>Rule STATUS=yes</CODE> causes two
+<P>As described earlier, <CODE>ExtendedStatus On</CODE> causes two
 <CODE>gettimeofday</CODE> calls and a call to <CODE>times</CODE>:
 
 <BLOCKQUOTE><PRE>
 gettimeofday({873959960, 404935}, NULL) = 0
 ...
 gettimeofday({873959960, 417742}, NULL) = 0
 times({tms_utime=5, tms_stime=0, tms_cutime=0, tms_cstime=0}) = 446747
 </PRE></BLOCKQUOTE>
 
-These can be removed by either removing <CODE>mod_status</CODE> or
-setting <CODE>Rule STATUS=no</CODE>.
+These can be removed by setting <CODE>ExtendedStatus Off</CODE> (which
+is the default).
 
 <P>It might seem odd to call <CODE>stat</CODE>:
 
 <BLOCKQUOTE><PRE>
 stat("/home/dgaudet/ap/apachen/htdocs/6k", {st_mode=S_IFREG|0644, st_size=6144, ...}) = 0
 </PRE></BLOCKQUOTE>
@@ -747,13 +747,13 @@
 </PRE></BLOCKQUOTE>
 
 can be deferred by defining <CODE>BUFFERED_LOGS</CODE>.  In this case
 up to <CODE>PIPE_BUF</CODE> bytes (a POSIX defined constant) of log entries
 are buffered before writing.  At no time does it split a log entry
 across a <CODE>PIPE_BUF</CODE> boundary because those writes may not
-be atomic.  (i.e. entries from multiple children could become mixed together).
+be atomic.  (<EM>i.e.</EM>, entries from multiple children could become mixed together).
 The code does it best to flush this buffer when a child dies.
 
 <P>The lingering close code causes four system calls:
 
 <BLOCKQUOTE><PRE>
 shutdown(3, 1 /* send */)               = 0
@@ -763,13 +763,13 @@
 </PRE></BLOCKQUOTE>
 
 which were described earlier.
 
 <P>Let's apply some of these optimizations:
 <CODE>-DSINGLE_LISTEN_UNSERIALIZED_ACCEPT -DBUFFERED_LOGS</CODE> and
-<CODE>Rule STATUS=no</CODE>.  Here's the final trace:
+<CODE>ExtendedStatus Off</CODE>.  Here's the final trace:
 
 <BLOCKQUOTE><PRE>
 accept(15, {sin_family=AF_INET, sin_port=htons(22286), sin_addr=inet_addr("127.0.0.1")}, [16]) = 3
 sigaction(SIGUSR1, {SIG_IGN}, {0x8058c98, [], SA_INTERRUPT}) = 0
 getsockname(3, {sin_family=AF_INET, sin_port=htons(8080), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
 setsockopt(3, IPPROTO_TCP1, [1], 4)     = 0
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/security_tips.html apache_1.3.2/htdocs/manual/misc/security_tips.html
--- apache_1.3.1/htdocs/manual/misc/security_tips.html	1998-07-19 07:04:32.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/security_tips.html	1998-09-22 03:20:53.000000000 +0800
@@ -113,13 +113,13 @@
 <H2>CGI in general</H2>
 <P>Always remember that you must trust the writers of the CGI script/programs
 or your ability to spot potential security holes in CGI, whether they were
 deliberate or accidental.<P>
 
 All the CGI scripts will run as the same user, so they have potential to
-conflict (accidentally or deliberately) with other scripts e.g.
+conflict (accidentally or deliberately) with other scripts <EM>e.g.</EM>
 User A hates User B, so he writes a script to trash User B's CGI
 database.  One program which can be used to allow scripts to run
 as different users is <A HREF="../suexec.html">suEXEC</A> which is
 included with Apache as of 1.2 and is called from special hooks in
 the Apache server code.  Another popular way of doing this is with
 <A HREF="http://wwwcgi.umr.edu/~cgiwrap/">CGIWrap</A>.  <P>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/misc/vif-info.html apache_1.3.2/htdocs/manual/misc/vif-info.html
--- apache_1.3.1/htdocs/manual/misc/vif-info.html	1998-07-19 07:04:33.000000000 +0800
+++ apache_1.3.2/htdocs/manual/misc/vif-info.html	1998-09-22 03:20:53.000000000 +0800
@@ -372,13 +372,13 @@
 
 This will cause the device to be opened, which will if_attach the
 interfaces. If you feel like playing with the code, you may want to
 kmem_alloc() the vif_softc structure at open time, and use the minor
 number of the device to tell it how many interfaces to create.
 
-Now you can go ahead and ifconfig etc.
+Now you can go ahead and ifconfig <EM>etc.</EM>
 
 I'll be happy to answer minor questions, and hear about success and
 failure stories, but I cannot help you if you don't already know how
 to hack kernels.
 
 Good luck!
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/core.html apache_1.3.2/htdocs/manual/mod/core.html
--- apache_1.3.1/htdocs/manual/mod/core.html	1998-07-19 07:04:24.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/core.html	1998-09-22 03:20:47.000000000 +0800
@@ -31,13 +31,13 @@
 <LI><A HREF="#accessfilename">AccessFileName</A>
 <LI><A HREF="#addmodule">AddModule</A>
 <LI><A HREF="#allowoverride">AllowOverride</A>
 <LI><A HREF="#authname">AuthName</A>
 <LI><A HREF="#authtype">AuthType</A>
 <LI><A HREF="#bindaddress">BindAddress</A>
-<LI><A HREF="#bs2000authfile">BS2000AuthFile</A>
+<LI><A HREF="#bs2000account">BS2000Account</A>
 <LI><A HREF="#clearmodulelist">ClearModuleList</A>
 <LI><A HREF="#contentdigest">ContentDigest</A>
 <LI><A HREF="#coredumpdirectory">CoreDumpDirectory</A>
 <LI><A HREF="#defaulttype">DefaultType</A>
 <LI><A HREF="#directory">&lt;Directory&gt;</A>
 <LI><A HREF="#directorymatch">&lt;DirectoryMatch&gt;</A>
@@ -52,12 +52,16 @@
 <LI><A HREF="#ifdefine">&lt;IfDefine&gt;</A>
 <LI><A HREF="#ifmodule">&lt;IfModule&gt;</A>
 <LI><A HREF="#include">Include</A>
 <LI><A HREF="#keepalive">KeepAlive</A>
 <LI><A HREF="#keepalivetimeout">KeepAliveTimeout</A>
 <LI><A HREF="#limit">&lt;Limit&gt;</A>
+<LI><A HREF="#limitrequestbody">LimitRequestBody</A>
+<LI><A HREF="#limitrequestfields">LimitRequestFields</A>
+<LI><A HREF="#limitrequestfieldsize">LimitRequestFieldsize</A>
+<LI><A HREF="#limitrequestline">LimitRequestLine</A>
 <LI><A HREF="#listen">Listen</A>
 <LI><A HREF="#listenbacklog">ListenBacklog</A>
 <LI><A HREF="#location">&lt;Location&gt;</A>
 <LI><A HREF="#locationmatch">&lt;LocationMatch&gt;</A>
 <LI><A HREF="#lockfile">LockFile</A>
 <LI><A HREF="#loglevel">LogLevel</A>
@@ -221,23 +225,23 @@
 Allow use of the authorization directives
 (<A HREF="mod_auth_dbm.html#authdbmgroupfile">AuthDBMGroupFile</A>,
 <A HREF="mod_auth_dbm.html#authdbmuserfile">AuthDBMUserFile</A>,
 <A HREF="mod_auth.html#authgroupfile">AuthGroupFile</A>,
 <A HREF="#authname">AuthName</A>, <A HREF="#authtype">AuthType</A>,
 <A HREF="mod_auth.html#authuserfile">AuthUserFile</A>,
-<A HREF="#require">require</A>, etc.).
+<A HREF="#require">require</A>, <EM>etc.</EM>).
 <DT>FileInfo
 <DD>
 <!--%plaintext &lt;?INDEX {\tt FileInfo} override&gt; -->
 Allow use of the directives controlling document types
 (<A HREF="mod_mime.html#addencoding">AddEncoding</A>,
 <A HREF="mod_mime.html#addlanguage">AddLanguage</A>,
 <A HREF="mod_mime.html#addtype">AddType</A>,
 <A HREF="#defaulttype">DefaultType</A>,
 <A HREF="#errordocument">ErrorDocument</A>,
-<A HREF="mod_negotiation.html#languagepriority">LanguagePriority</A>, etc.).
+<A HREF="mod_negotiation.html#languagepriority">LanguagePriority</A>, <EM>etc.</EM>).
 <DT>Indexes
 <DD>
 <!--%plaintext &lt;?INDEX {\tt Indexes} override&gt; -->
 Allow use of the directives controlling directory indexing
 (<A HREF="mod_autoindex.html#adddescription">AddDescription</A>,
 <A HREF="mod_autoindex.html#addicon">AddIcon</A>,
@@ -246,13 +250,13 @@
 <A HREF="mod_autoindex.html#defaulticon">DefaultIcon</A>,
 <A HREF="mod_dir.html#directoryindex">DirectoryIndex</A>,
 <A HREF="mod_autoindex.html#fancyindexing">FancyIndexing</A>,
 <A HREF="mod_autoindex.html#headername">HeaderName</A>,
 <A HREF="mod_autoindex.html#indexignore">IndexIgnore</A>,
 <A HREF="mod_autoindex.html#indexoptions">IndexOptions</A>,
-<A HREF="mod_autoindex.html#readmename">ReadmeName</A>, etc.).
+<A HREF="mod_autoindex.html#readmename">ReadmeName</A>, <EM>etc.</EM>).
 <DT>Limit
 <DD>
 <!--%plaintext &lt;?INDEX {\tt Limit} override&gt; -->
 Allow use of the directives controlling host access (allow, deny and order).
 <DT>Options
 <DD>
@@ -306,13 +310,13 @@
 <A
  HREF="directive-dict.html#Status"
  REL="Help"
 ><STRONG>Status:</STRONG></A> core<P>
 
 This directive selects the type of user authentication for a directory.
-Only <CODE>Basic</CODE> is currently implemented.
+Only <CODE>Basic</CODE> and <CODE>Digest</CODE> are currently implemented.
 <!--%plaintext &lt;?INDEX {\tt Basic} authentication scheme&gt; -->
 It must be accompanied by <A HREF="#authname">AuthName</A> and
 <A HREF="#require">require</A> directives, and directives such as
 <A HREF="mod_auth.html#authuserfile">AuthUserFile</A> and
 <A HREF="mod_auth.html#authgroupfile">AuthGroupFile</A> to work.<P><HR>
 
@@ -362,18 +366,18 @@
 <A HREF="../dns-caveats.html">DNS Issues</A><BR>
 <STRONG>See Also:</STRONG>
 <A HREF="../bind.html">Setting which addresses and ports Apache uses</A></P>
 
 <HR>
 
-<H2><A NAME="bs2000authfile">BS2000AuthFile directive</A></H2>
-<!--%plaintext &lt;?INDEX {\tt BS2000AuthFile} directive&gt; -->
+<H2><A NAME="bs2000account">BS2000Account directive</A></H2>
+<!--%plaintext &lt;?INDEX {\tt BS2000Account} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> BS2000AuthFile <EM>authfile</EM><BR>
+><STRONG>Syntax:</STRONG></A> BS2000Account <EM>account</EM><BR>
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> <EM>none</EM><BR>
 <A
  HREF="directive-dict.html#Context"
@@ -383,26 +387,24 @@
  HREF="directive-dict.html#Status"
  REL="Help"
 ><STRONG>Status:</STRONG></A> core<BR>
 <A
  HREF="directive-dict.html#Compatibility"
  REL="Help"
-><STRONG>Compatibility:</STRONG></A> BS2000AuthFile is only available for
+><STRONG>Compatibility:</STRONG></A> BS2000Account is only available for
 BS2000 machines, as of Apache 1.3 and later.<P>
 
-The <CODE>BS2000AuthFile</CODE> directive is available for BS2000 hosts
-only. It must be used to define the password file which is used to
-change the BS2000 task environment of the server to the non-privileged
-account specified by the <A HREF="#user">User</A> directive. This is
-required in the BS2000 POSIX subsystem (by performing a sub-LOGON) to
-prevent CGI scripts from accessing resources of the privileged account
-which started the server, usually <SAMP>TSOS</SAMP>.<BR>
-Note that the specified <EM>authfile</EM> must be owned by the super
-user and must not be readable or writable by anyone else, otherwise
-Apache will refuse to start and exit with an error message.<BR>
-Only one <CODE>BS2000AuthFile</CODE> directive can be used. <P>
+The <CODE>BS2000Account</CODE> directive is available for BS2000 hosts
+only. It must be used to define the account number for the non-privileged
+apache server user (which was configured using the
+<A HREF="#user">User</A> directive).
+This is required by the BS2000 POSIX subsystem (to change the underlying
+BS2000 task environment by performing a sub-LOGON) to prevent CGI scripts
+from accessing resources of the privileged account which started the
+server, usually <SAMP>SYSROOT</SAMP>.<BR>
+Only one <CODE>BS2000Account</CODE> directive can be used. <P>
 
 <P><STRONG>See Also:</STRONG>
 <A HREF="../ebcdic.html">Apache EBCDIC port</A></P>
 
 <HR>
 
@@ -512,13 +514,13 @@
 
 <H2><A NAME="defaulttype">DefaultType directive</A></H2>
 <!--%plaintext &lt;?INDEX {\tt DefaultType} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> DefaultType <EM>mime-type</EM><BR>
+><STRONG>Syntax:</STRONG></A> DefaultType <EM>MIME-type</EM><BR>
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> <CODE>DefaultType text/html</CODE><BR>
 <A
  HREF="directive-dict.html#Context"
@@ -738,13 +740,13 @@
 document. Example:
 <BLOCKQUOTE><CODE>DocumentRoot /usr/web</CODE></BLOCKQUOTE>
 then an access to <CODE>http://www.my.host.com/index.html</CODE> refers
 to <CODE>/usr/web/index.html</CODE>.
 
 <P>There appears to be a bug in mod_dir which causes problems when the
-DocumentRoot has a trailing slash (i.e. "DocumentRoot /usr/web/") so
+DocumentRoot has a trailing slash (<EM>i.e.</EM>, "DocumentRoot /usr/web/") so
 please avoid that.
 
 <P><HR>
 
 <H2><A NAME="errordocument">ErrorDocument directive</A></H2>
 <!--%plaintext &lt;?INDEX {\tt ErrorDocument} directive&gt; -->
@@ -1134,13 +1136,13 @@
 
 <P>In the former case, the directives between the start and end markers are
 only processed if the parameter named <EM>parameter-name</EM> is defined.
 The second format reverses the test, and only processes the directives if
 <EM>parameter-name</EM> is <STRONG>not</STRONG> defined.
 
-<P>The <EM>paramater-name</EM> argument is a define as given on the
+<P>The <EM>parameter-name</EM> argument is a define as given on the
 <CODE>httpd</CODE> command line via <CODE>-D</CODE><EM>parameter-</EM>, at the
 time the server was started.
 
 <P>&lt;IfDefine&gt; sections are nest-able, which can be used to implement
 simple multiple-parameter tests.
 
@@ -1212,13 +1214,13 @@
 <P>&lt;IfModule&gt; sections are nest-able, which can be used to implement
 simple multiple-module tests.
 
 <P> <HR>
 
 <H2><A NAME="include">Include directive</A></H2>
-<STRONG>Syntax: (Apache 1.2)</STRONG> Include <EM>filename</EM><BR>
+<STRONG>Syntax:</STRONG> Include <EM>filename</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
 ><STRONG>Context:</STRONG></A> server config<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -1327,13 +1329,208 @@
 If an access control directive appears outside a &lt;Limit&gt;
 directive, then it applies to all access methods. The method names
 listed can be one or more of: GET, POST, PUT, DELETE, CONNECT or
 OPTIONS. <STRONG>The method name is case-sensitive.</STRONG>
 If GET is used it will also restrict HEAD requests.
 <STRONG>If you wish to limit all methods, do not include any
-&lt;Limit&gt; directive at all.</STRONG> <P><HR>
+&lt;Limit&gt; directive at all.</STRONG>
+
+<P><HR>
+
+<H2><A NAME="limitrequestbody">LimitRequestBody directive</A></H2>
+<!--%plaintext &lt;?INDEX {\tt LimitRequestBody} directive&gt; -->
+<A
+ HREF="directive-dict.html#Syntax"
+ REL="Help"
+><STRONG>Syntax:</STRONG></A> LimitRequestBody <EM>number</EM><BR>
+<A
+ HREF="directive-dict.html#Default"
+ REL="Help"
+><STRONG>Default:</STRONG></A> <CODE>LimitRequestBody 0</CODE><BR>
+<A
+ HREF="directive-dict.html#Context"
+ REL="Help"
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+.htaccess<BR>
+<A
+ HREF="directive-dict.html#Status"
+ REL="Help"
+><STRONG>Status:</STRONG></A> core<BR>
+<A
+ HREF="directive-dict.html#Compatibility"
+ REL="Help"
+><STRONG>Compatibility:</STRONG></A> LimitRequestBody is only available in
+Apache 1.3.2 and later.
+<P>
+
+<EM>Number</EM> is a long integer from 0 (meaning unlimited) to 2147483647
+(2GB).  The default value is defined by the compile-time constant
+<CODE>DEFAULT_LIMIT_REQUEST_BODY</CODE> (0 as distributed).
+<P>
+
+The LimitRequestBody directive allows the user to set a
+limit on the allowed size of an HTTP request message body within
+the context in which the directive is given (server, per-directory,
+per-file or per-location).  If the client request exceeds that limit,
+the server will return an error response instead of servicing the request.
+The size of a normal request message body will vary greatly depending
+on the nature of the resource and the methods allowed on that resource.
+CGI scripts typically use the message body for passing form information
+to the server.  Implementations of the PUT method will require a value
+at least as large as any representation that the server wishes
+to accept for that resource.
+<P>
+
+This directive gives the server administrator greater control over abnormal
+client request behavior, which may be useful for avoiding some forms
+of denial-of-service attacks.
+<P>
+
+<P><HR>
+
+<H2><A NAME="limitrequestfields">LimitRequestFields directive</A></H2>
+<!--%plaintext &lt;?INDEX {\tt LimitRequestFields} directive&gt; -->
+<A
+ HREF="directive-dict.html#Syntax"
+ REL="Help"
+><STRONG>Syntax:</STRONG></A> LimitRequestFields <EM>number</EM><BR>
+<A
+ HREF="directive-dict.html#Default"
+ REL="Help"
+><STRONG>Default:</STRONG></A> <CODE>LimitRequestFields 100</CODE><BR>
+<A
+ HREF="directive-dict.html#Context"
+ REL="Help"
+><STRONG>Context:</STRONG></A> server config<BR>
+<A
+ HREF="directive-dict.html#Status"
+ REL="Help"
+><STRONG>Status:</STRONG></A> core<BR>
+<A
+ HREF="directive-dict.html#Compatibility"
+ REL="Help"
+><STRONG>Compatibility:</STRONG></A> LimitRequestFields is only available in
+Apache 1.3.2 and later.
+<P>
+
+<EM>Number</EM> is an integer from 0 (meaning unlimited) to 32767.
+The default value is defined by the compile-time constant
+<CODE>DEFAULT_LIMIT_REQUEST_FIELDS</CODE> (100 as distributed).
+<P>
+
+The LimitRequestFields directive allows the server administrator to modify
+the limit on the number of request header fields allowed in an HTTP request.
+A server needs this value to be larger than the number of fields that a
+normal client request might include.  The number of request header fields
+used by a client rarely exceeds 20, but this may vary among different
+client implementations, often depending upon the extent to which a user
+has configured their browser to support detailed content negotiation.
+Optional HTTP extensions are often expressed using request header fields.
+<P>
+
+This directive gives the server administrator greater control over abnormal
+client request behavior, which may be useful for avoiding some forms
+of denial-of-service attacks.  The value should be increased if normal
+clients see an error response from the server that indicates too many
+fields were sent in the request.<P>
+
+<P><HR>
+
+<H2><A NAME="limitrequestfieldsize">LimitRequestFieldsize directive</A></H2>
+<!--%plaintext &lt;?INDEX {\tt LimitRequestFieldsize} directive&gt; -->
+<A
+ HREF="directive-dict.html#Syntax"
+ REL="Help"
+><STRONG>Syntax:</STRONG></A> LimitRequestFieldsize <EM>number</EM><BR>
+<A
+ HREF="directive-dict.html#Default"
+ REL="Help"
+><STRONG>Default:</STRONG></A> <CODE>LimitRequestFieldsize 8190</CODE><BR>
+<A
+ HREF="directive-dict.html#Context"
+ REL="Help"
+><STRONG>Context:</STRONG></A> server config<BR>
+<A
+ HREF="directive-dict.html#Status"
+ REL="Help"
+><STRONG>Status:</STRONG></A> core<BR>
+<A
+ HREF="directive-dict.html#Compatibility"
+ REL="Help"
+><STRONG>Compatibility:</STRONG></A> LimitRequestFieldsize is only available in
+Apache 1.3.2 and later.
+<P>
+
+<EM>Number</EM> is an integer size in bytes from 0 to the value of the
+compile-time constant <CODE>DEFAULT_LIMIT_REQUEST_FIELDSIZE</CODE>
+(8190 as distributed).
+<P>
+
+The LimitRequestFieldsize directive allows the server administrator to reduce
+the limit on the allowed size of an HTTP request header field below the
+normal input buffer size compiled with the server.  A server needs this
+value to be large enough to hold any one header field from a normal client
+request.  The size of a normal request header field will vary greatly
+among different client implementations, often depending upon the extent
+to which a user has configured their browser to support detailed
+content negotiation.
+<P>
+
+This directive gives the server administrator greater control over abnormal
+client request behavior, which may be useful for avoiding some forms
+of denial-of-service attacks.  Under normal conditions, the value should
+not be changed from the default.<P>
+
+<P><HR>
+
+<H2><A NAME="limitrequestline">LimitRequestLine directive</A></H2>
+<!--%plaintext &lt;?INDEX {\tt LimitRequestLine} directive&gt; -->
+<A
+ HREF="directive-dict.html#Syntax"
+ REL="Help"
+><STRONG>Syntax:</STRONG></A> LimitRequestLine <EM>number</EM><BR>
+<A
+ HREF="directive-dict.html#Default"
+ REL="Help"
+><STRONG>Default:</STRONG></A> <CODE>LimitRequestLine 8190</CODE><BR>
+<A
+ HREF="directive-dict.html#Context"
+ REL="Help"
+><STRONG>Context:</STRONG></A> server config<BR>
+<A
+ HREF="directive-dict.html#Status"
+ REL="Help"
+><STRONG>Status:</STRONG></A> core<BR>
+<A
+ HREF="directive-dict.html#Compatibility"
+ REL="Help"
+><STRONG>Compatibility:</STRONG></A> LimitRequestLine is only available in
+Apache 1.3.2 and later.
+<P>
+
+<EM>Number</EM> is an integer size in bytes from 0 to the value of the
+compile-time constant <CODE>DEFAULT_LIMIT_REQUEST_LINE</CODE>
+(8190 as distributed).
+<P>
+
+The LimitRequestLine directive allows the server administrator to reduce
+the limit on the allowed size of a client's HTTP request-line below the
+normal input buffer size compiled with the server.  Since the request-line
+consists of the HTTP method, URI, and protocol version, the
+LimitRequestLine directive places a restriction on the length of a
+request-URI allowed for a request on the server.  A server needs this
+value to be large enough to hold any of its resource names, including
+any information that might be passed in the query part of a GET request.
+<P>
+
+This directive gives the server administrator greater control over abnormal
+client request behavior, which may be useful for avoiding some forms
+of denial-of-service attacks.  Under normal conditions, the value should
+not be changed from the default.<P>
+
+<P><HR>
 
 <H2><A NAME="listen">Listen directive</A></H2>
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A>
@@ -1417,18 +1614,24 @@
  REL="Help"
 ><STRONG>Status:</STRONG></A> Core<BR>
 <A
  HREF="directive-dict.html#Compatibility"
  REL="Help"
 ><STRONG>Compatibility:</STRONG></A> ListenBacklog is only available in Apache
-versions after 1.2.0.<P>
+versions after 1.2.0.
 
-The maximum length of the queue of pending connections.  Generally no
+<P>The maximum length of the queue of pending connections.  Generally no
 tuning is needed or desired, however on some systems it is desirable
 to increase this when under a TCP SYN flood attack.  See
-the backlog parameter to the <CODE>listen(2)</CODE> system call.</P><HR>
+the backlog parameter to the <CODE>listen(2)</CODE> system call.
+
+<P>This will often be limited to a smaller number by the operating
+system.  This varies from OS to OS.  Also note that many OSes do not
+use exactly what is specified as the backlog, but use a number based on
+(but normally larger than) what is set.
+<HR>
 
 <H2><A NAME="location">&lt;Location&gt; directive</A></H2>
 
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
@@ -1502,13 +1705,13 @@
 </PRE>
 
 <P><STRONG>Apache 1.3 and above note about / (slash)</STRONG>:  The slash
 character has special
 meaning depending on where in a URL it appears.  People may be used
 to its behaviour in the filesystem where multiple adjacent slashes are
-frequently collapsed to a single slash (i.e. <CODE>/home///foo</CODE>
+frequently collapsed to a single slash (<EM>i.e.</EM>, <CODE>/home///foo</CODE>
 is the same as <CODE>/home/foo</CODE>).  In URL-space this is not
 necessarily true.  The <CODE>&lt;LocationMatch&gt;</CODE> directive
 and the regex version of <CODE>&lt;Location&gt;</CODE> require you
 to explicitly specify multiple slashes if that is your intention.
 For example, <CODE>&lt;LocationMatch ^/abc&gt;</CODE> would match the
 request URL <CODE>/abc</CODE> but not the request URL <CODE>//abc</CODE>.
@@ -1541,14 +1744,14 @@
  HREF="directive-dict.html#Status"
  REL="Help"
 ><STRONG>Status:</STRONG></A> core<BR>
 <A
  HREF="directive-dict.html#Compatibility"
  REL="Help"
-><STRONG>Compatibility:</STRONG></A> Location is only available in Apache
-1.3 and later.<P>
+><STRONG>Compatibility:</STRONG></A> LocationMatch is only available in 
+Apache 1.3 and later.<P>
 
 <P>The &lt;LocationMatch&gt; directive provides for access control by
 URL, in an identical manner to <A
 HREF="#location">&lt;Location&gt;</A>. However, it takes a regular
 expression as an argument instead of a simple string. For example:</P>
 
@@ -1656,13 +1859,13 @@
   <TR><TD><CODE>debug</CODE>
       <TD>Debug-level messages
   <TR><TD><TD>"Opening config file ..."
 </TABLE>
 
 <P>When a particular level is specified, messages from all other levels
-of higher significance will be reported as well.  E.g., when 
+of higher significance will be reported as well.  <EM>E.g.</EM>, when 
 <CODE>LogLevel info</CODE> is specified, then messages with log levels of
 <CODE>notice</CODE> and <CODE>warn</CODE> will also be posted.
 <P>
 Using a level of at least <CODE>crit</CODE> is recommended.
 <P><HR>
 
@@ -1682,16 +1885,23 @@
 ><STRONG>Context:</STRONG></A> server config<BR>
 <A
  HREF="directive-dict.html#Status"
  REL="Help"
 ><STRONG>Status:</STRONG></A> core<P>
 
-The MaxClients directive sets the limit on the number of simultaneous
+<P>The MaxClients directive sets the limit on the number of simultaneous
 requests that can be supported; not more than this number of child server
 processes will be created.  To configure more than 256 clients, you must
-edit the HARD_SERVER_LIMIT entry in httpd.h and recompile.<P><HR>
+edit the HARD_SERVER_LIMIT entry in httpd.h and recompile.
+
+<P>Any connection attempts over the MaxClients limit will normally
+be queued, up to a number based on the <A HREF="#listenbacklog">
+ListenBacklog</A> directive.  Once a child process is freed at the
+end of a different request, the connection will then be serviced.
+
+<HR>
 
 <H2><A NAME="maxkeepaliverequests">MaxKeepAliveRequests directive</A></H2>
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> MaxKeepAliveRequests <EM>number</EM><BR>
@@ -1845,13 +2055,13 @@
 Apache 1.3 and later<P>
 
 The NameVirtualHost directive is a required directive if you want to configure
 <A HREF="../vhosts/index.html">name-based virtual hosts</A>.<P>
 
 Although <EM>addr</EM> can be hostname it is recommended that you always use
-an IP address, e.g.
+an IP address, <EM>e.g.</EM>
 
 <BLOCKQUOTE><CODE>NameVirtualHost 111.22.33.44</CODE></BLOCKQUOTE>
 
 With the NameVirtualHost directive you specify the address to which your
 name-based virtual host names resolve.  If you have multiple name-based
 hosts on multiple addresses, repeat the directive for each address.<P>
@@ -1859,19 +2069,19 @@
 Note: the "main server" and any _default_ servers will <STRONG>never</STRONG>
 be served for a request to a NameVirtualHost IP Address (unless for some
 reason you specify NameVirtualHost but then don't define any VirtualHosts
 for that address).<P>
 
 Optionally you can specify a port number on which the name-based
-virtual hosts should be used, e.g.
+virtual hosts should be used, <EM>e.g.</EM>
 
 <BLOCKQUOTE><CODE>NameVirtualHost 111.22.33.44:8080</CODE></BLOCKQUOTE>
 
 <STRONG>See also:</STRONG>
 <A HREF="../vhosts/index.html">Apache Virtual Host documentation</A>
-
+<HR>
 <H2><A NAME="options">Options directive</A></H2>
 <!--%plaintext &lt;?INDEX {\tt Options} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> Options <EM>[+|-]option [+|-]option ...</EM><BR>
@@ -1902,18 +2112,18 @@
 <!--%plaintext &lt;?INDEX {\tt ExecCGI} option&gt; -->
 Execution of CGI scripts is permitted.
 <DT>FollowSymLinks
 <DD>
 <!--%plaintext &lt;?INDEX {\tt FollowSymLinks} option&gt; -->
 The server will follow symbolic links in this directory.
-<br>
+<BR>
 <STRONG>Note</STRONG>: even though the server follows the symlink it
 does <EM>not</EM>
 change the pathname used to match against <CODE>&lt;Directory&gt;</CODE>
 sections.
-<br>
+<BR>
 <STRONG>Note</STRONG>: this option gets ignored if set inside a
 &lt;Location&gt; section.
 
 <DT>Includes
 <DD>
 <!--%plaintext &lt;?INDEX {\tt Includes} option&gt; -->
@@ -1924,25 +2134,25 @@
 Server-side includes are permitted, but the #exec command and
 #include of CGI scripts are disabled.
 <DT>Indexes
 <DD>
 <!--%plaintext &lt;?INDEX {\tt Indexes} option&gt; -->
 If a URL which maps to a directory is requested, and the there is no
-DirectoryIndex (e.g. index.html) in that directory, then the server will
+DirectoryIndex (<EM>e.g.</EM>, index.html) in that directory, then the server will
 return a formatted listing of the directory.
 <DT>MultiViews
 <DD>
 <!--%plaintext &lt;?INDEX {\tt MultiViews} option&gt; -->
 <A HREF="../content-negotiation.html">Content negotiated</A> MultiViews are
 allowed.
 <DT>SymLinksIfOwnerMatch
 <DD>
 <!--%plaintext &lt;?INDEX {\tt SymLinksIfOwnerMatch} option&gt; -->
 The server will only follow symbolic links for which the target
 file or directory is owned by the same user id as the link.
-<br>
+<BR>
 <STRONG>Note</STRONG>: this option gets ignored if set inside a
 &lt;Location&gt; section.
 </DL>
 
 Normally, if multiple <CODE>Options</CODE> could apply to a directory,
 then the most specific one is taken complete; the options are not
@@ -2049,13 +2259,13 @@
 
 <UL>
 <LI>
 In the absence of any <A HREF="#listen">Listen</A> or
 <A HREF="#bindaddress">BindAddress</A> directives specifying a port number,
 a Port directive given in the "main server"
-(i.e. outside any <A HREF="#virtualhost">&lt;VirtualHost&gt</A> section)
+(<EM>i.e.</EM>, outside any <A HREF="#virtualhost">&lt;VirtualHost&gt</A> section)
 sets the network port on which the server listens.
 If there are any Listen or BindAddress directives specifying
 <CODE>:number</CODE> then Port has no effect on what address the server
 listens at.
 
 <LI>The Port directive
@@ -2075,13 +2285,13 @@
 the <A HREF="#servername">ServerName</A> directive.  The ServerName
 and Port together specify what you consider to be the <EM>canonical</EM>
 address of the server.
 (See also <A HREF="#usecanonicalname">UseCanonicalName</A>.)<P>
 
 Port 80 is one of Unix's special ports. All ports numbered
-below 1024 are reserved for system use, i.e. regular (non-root) users cannot
+below 1024 are reserved for system use, <EM>i.e.</EM>, regular (non-root) users cannot
 make use of them; instead they can only use higher port numbers.
 To use port 80, you must start the server from the root account.
 After binding to the port and before accepting requests, Apache will change
 to a low privileged user as set by the <A HREF="#user">User directive</A>.<P>
 
 If you cannot use port 80, choose any other unused port. Non-root users
@@ -2399,13 +2609,13 @@
  HREF="directive-dict.html#Status"
  REL="Help"
 ><STRONG>Status:</STRONG></A> core<P>
 
 The server will set the TCP buffer size to the number of bytes
 specified. Very useful to increase past standard OS defaults on high
-speed high latency (i.e. 100ms or so, such as transcontinental
+speed high latency (<EM>i.e.</EM>, 100ms or so, such as transcontinental
 fast pipes)
 <P><HR>
 
 <H2><A NAME="serveradmin">ServerAdmin directive</A></H2>
 <!--%plaintext &lt;?INDEX {\tt ServerAdmin} directive&gt; -->
 <A
@@ -2421,13 +2631,13 @@
  REL="Help"
 ><STRONG>Status:</STRONG></A> core<P>
 
 The ServerAdmin sets the e-mail address that the server includes in any
 error messages it returns to the client.<P>
 
-It may be worth setting up a dedicated address for this, e.g.
+It may be worth setting up a dedicated address for this, <EM>e.g.</EM>
 <BLOCKQUOTE><CODE>ServerAdmin www-admin@foo.bar.com</CODE></BLOCKQUOTE>
 as users do not always mention that they are talking about the server!<P><HR>
 
 <H2><A NAME="serveralias">ServerAlias directive</A></H2>
 
 <A
@@ -2616,21 +2826,21 @@
 field which is sent back to clients includes a description of the generic
 OS-type of the server as well as information about compiled-in modules.
 </P>
 <DL>
  <DT><CODE>ServerTokens Min[imal]</CODE>
  </DT>
- <DD>Server sends (e.g.): <SAMP>Server: Apache/1.3.0</SAMP>
+ <DD>Server sends (<EM>e.g.</EM>): <SAMP>Server: Apache/1.3.0</SAMP>
  </DD>
  <DT><CODE>ServerTokens OS</CODE>
  </DT>
- <DD>Server sends (e.g.): <SAMP>Server: Apache/1.3.0 (Unix)</SAMP>
+ <DD>Server sends (<EM>e.g.</EM>): <SAMP>Server: Apache/1.3.0 (Unix)</SAMP>
  </DD>
  <DT><CODE>ServerTokens Full</CODE> (or not specified)
  </DT>
- <DD>Server sends (e.g.): <SAMP>Server: Apache/1.3.0 (Unix) PHP/3.0
+ <DD>Server sends (<EM>e.g.</EM>): <SAMP>Server: Apache/1.3.0 (Unix) PHP/3.0
   MyMod/1.2</SAMP>
  </DD>
 </DL>
 <P>
 This setting applies to the entire server, and cannot be enabled or
 disabled on a virtualhost-by-virtualhost basis.
@@ -2678,13 +2888,13 @@
 <P>
 
 Standalone is the most common setting for ServerType since
 it is far more efficient. The server is started once, and services all
 subsequent connections. If you intend running Apache to serve a busy site,
 standalone will probably be your only option.<P>
-
+<HR>
 <H2><A NAME="startservers">StartServers directive</A></H2>
 <!--%plaintext &lt;?INDEX {\tt StartServers} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> StartServers <EM>number</EM><BR>
@@ -2732,13 +2942,13 @@
  REL="Help"
 ><STRONG>Context:</STRONG></A> server config<BR>
 <A
  HREF="directive-dict.html#Status"
  REL="Help"
 ><STRONG>Status:</STRONG></A> core (Windows)<BR>
-<STRONG>Compatbility:</STRONG> Available only with Apache 1.3 and later
+<STRONG>Compatibility:</STRONG> Available only with Apache 1.3 and later
 with Windows
 
 <P>This directive tells the server how many threads it should use. This
    is the maximum number of connections the server can handle at once; be
    sure and set this number high enough for your site if you get a lot of
    hits.
@@ -2876,14 +3086,14 @@
 files which are not intended to be visible to the outside world, and
 similarly, the user should not be able to execute code which is not
 meant for httpd requests. It is recommended that you set up a new user and
 group specifically for running the server. Some admins use user
 <CODE>nobody</CODE>, but this is not always possible or desirable.
 For example mod_proxy's cache, when enabled, must be accessible to this user
-(see the <A href="mod_proxy.html#cacheroot"><CODE>CacheRoot</CODE></a> 
-directive</a>).<P>
+(see the <A HREF="mod_proxy.html#cacheroot"><CODE>CacheRoot</CODE>
+directive</A>).<P>
 
 Notes: If you start the server as a non-root user, it will fail to change
 to the lesser privileged user, and will instead continue to run as
 that original user. If you do start the server as root, then it is normal
 for the parent process to remain running as root.<P>
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/directives.html apache_1.3.2/htdocs/manual/mod/directives.html
--- apache_1.3.1/htdocs/manual/mod/directives.html	1998-07-19 07:04:24.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/directives.html	1998-09-22 03:20:48.000000000 +0800
@@ -70,13 +70,13 @@
 <LI><A HREF="core.html#authname">AuthName</A>
 <LI><A HREF="core.html#authtype">AuthType</A>
 <LI><A HREF="mod_auth.html#authuserfile">AuthUserFile</A>
 <LI><A HREF="core.html#bindaddress">BindAddress</A>
 <LI><A HREF="mod_setenvif.html#BrowserMatch">BrowserMatch</A>
 <LI><A HREF="mod_setenvif.html#BrowserMatchNoCase">BrowserMatchNoCase</A>
-<LI><A HREF="core.html#bs2000authfile">BS2000AuthFile</A>
+<LI><A HREF="core.html#bs2000account">BS2000Account</A>
 <LI><A HREF="mod_proxy.html#cachedefaultexpire">CacheDefaultExpire</A>
 <LI><A HREF="mod_proxy.html#cachedirlength">CacheDirLength</A>
 <LI><A HREF="mod_proxy.html#cachedirlevels">CacheDirLevels</A>
 <LI><A HREF="mod_proxy.html#cacheforcecompletion">CacheForceCompletion</A>
 <LI><A HREF="mod_proxy.html#cachegcinterval">CacheGcInterval</A>
 <LI><A HREF="mod_proxy.html#cachelastmodifiedfactor">CacheLastModifiedFactor</A>
@@ -103,12 +103,13 @@
 <LI><A HREF="core.html#errordocument">ErrorDocument</A>
 <LI><A HREF="core.html#errorlog">ErrorLog</A>
 <LI><A HREF="mod_example.html#example">Example</A>
 <LI><A HREF="mod_expires.html#expiresactive">ExpiresActive</A>
 <LI><A HREF="mod_expires.html#expiresbytype">ExpiresByType</A>
 <LI><A HREF="mod_expires.html#expiresdefault">ExpiresDefault</A>
+<LI><A HREF="mod_status.html#extendedstatus">ExtendedStatus</A>
 <LI><A HREF="mod_autoindex.html#fancyindexing">FancyIndexing</A>
 <LI><A HREF="core.html#files">&lt;Files&gt;</A>
 <LI><A HREF="core.html#filesmatch">&lt;FilesMatch&gt;</A>
 <LI><A HREF="mod_mime.html#forcetype">ForceType</A>
 <LI><A HREF="core.html#group">Group</A>
 <LI><A HREF="mod_headers.html#header">Header</A>
@@ -124,12 +125,16 @@
 <LI><A HREF="mod_autoindex.html#indexignore">IndexIgnore</A>
 <LI><A HREF="mod_autoindex.html#indexoptions">IndexOptions</A>
 <LI><A HREF="core.html#keepalive">KeepAlive</A>
 <LI><A HREF="core.html#keepalivetimeout">KeepAliveTimeout</A>
 <LI><A HREF="mod_negotiation.html#languagepriority">LanguagePriority</A>
 <LI><A HREF="core.html#limit">&lt;Limit&gt;</A>
+<LI><A HREF="core.html#limitrequestbody">LimitRequestBody</A>
+<LI><A HREF="core.html#limitrequestfields">LimitRequestFields</A>
+<LI><A HREF="core.html#limitrequestfieldsize">LimitRequestFieldsize</A>
+<LI><A HREF="core.html#limitrequestline">LimitRequestLine</A>
 <LI><A HREF="core.html#listen">Listen</A>
 <LI><A HREF="core.html#listenbacklog">ListenBacklog</A>
 <LI><A HREF="mod_so.html#loadfile">LoadFile</A>
 <LI><A HREF="mod_so.html#loadmodule">LoadModule</A>
 <LI><A HREF="core.html#location">&lt;Location&gt;</A>
 <LI><A HREF="core.html#locationmatch">&lt;LocationMatch&gt;</A>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_access.html apache_1.3.2/htdocs/manual/mod/mod_access.html
--- apache_1.3.1/htdocs/manual/mod/mod_access.html	1998-07-19 07:04:24.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_access.html	1998-09-22 03:20:48.000000000 +0800
@@ -73,16 +73,16 @@
 <DT>A full IP address
 <DD>An IP address of a host allowed access
 <DT>A partial IP address
 <DD>The first 1 to 3 bytes of an IP address, for subnet restriction.
 <DT>A network/netmask pair (<STRONG>Apache 1.3 and later</STRONG>)
 <DD>A network a.b.c.d, and a netmask w.x.y.z.  For more fine-grained subnet
-    restriction.  (i.e. 10.1.0.0/255.255.0.0)
+    restriction.  (<EM>i.e.</EM>, 10.1.0.0/255.255.0.0)
 <DT>A network/nnn CIDR specification (<STRONG>Apache 1.3 and later</STRONG>)
 <DD>Similar to the previous case, except the netmask consists of nnn 
-    high-order 1 bits.  (i.e. 10.1.0.0/16 is the same as 10.1.0.0/255.255.0.0)
+    high-order 1 bits.  (<EM>i.e.</EM>, 10.1.0.0/16 is the same as 10.1.0.0/255.255.0.0)
 </DL>
 <P>
 Example:
 </P>
 <BLOCKQUOTE><CODE>allow from .ncsa.uiuc.edu</CODE></BLOCKQUOTE>
 <P>
@@ -180,16 +180,16 @@
 <DT>A full IP address
 <DD>An IP address of a host denied access
 <DT>A partial IP address
 <DD>The first 1 to 3 bytes of an IP address, for subnet restriction.
 <DT>A network/netmask pair (<STRONG>Apache 1.3 and later</STRONG>)
 <DD>A network a.b.c.d, and a netmask w.x.y.z.  For more fine-grained subnet
-    restriction.  (i.e. 10.1.0.0/255.255.0.0)
+    restriction.  (<EM>i.e.</EM>, 10.1.0.0/255.255.0.0)
 <DT>A network/nnn CIDR specification (<STRONG>Apache 1.3 and later</STRONG>)
 <DD>Similar to the previous case, except the netmask consists of nnn 
-    high-order 1 bits.  (i.e. 10.1.0.0/16 is the same as 10.1.0.0/255.255.0.0)
+    high-order 1 bits.  (<EM>i.e.</EM>, 10.1.0.0/16 is the same as 10.1.0.0/255.255.0.0)
 </DL>
 <P>
 Example:
 </P>
 <BLOCKQUOTE><CODE>deny from 16</CODE></BLOCKQUOTE>
 <P>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_actions.html apache_1.3.2/htdocs/manual/mod/mod_actions.html
--- apache_1.3.1/htdocs/manual/mod/mod_actions.html	1998-07-19 07:04:25.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_actions.html	1998-09-22 03:20:48.000000000 +0800
@@ -42,13 +42,13 @@
 
 <H2><A NAME="action">Action directive</A></H2>
 <P>
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> Action <EM>mime-type cgi-script</EM><BR>
+><STRONG>Syntax:</STRONG></A> Action <EM>MIME-type cgi-script</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
 ><STRONG>Context:</STRONG></A> server config, virtual host, directory,
  .htaccess<BR>
 <A
@@ -68,13 +68,13 @@
  REL="Help"
 ><STRONG>Compatibility:</STRONG></A> Action is only available in Apache 1.1
 and later
 </P>
 <P>
 This directive adds an action, which will activate <EM>cgi-script</EM> when
-a file of content type <EM>mime-type</EM> is requested. It sends the
+a file of content type <EM>MIME-type</EM> is requested. It sends the
 URL and file path of the requested document using the standard
 CGI PATH_INFO and PATH_TRANSLATED environment variables.
 </P>
 <HR>
 
 <H2><A NAME="script">Script directive</A></H2>
@@ -112,20 +112,20 @@
 </P>
 <P>
 Note that the Script command defines default actions only. If a CGI
 script is called, or some other resource that is capable of handling
 the requested method internally, it will do so. Also note that Script
 with a method of <CODE>GET</CODE> will only be called if there are
-query arguments present (e.g. foo.html?hi). Otherwise, the request
+query arguments present (<EM>e.g.</EM>, foo.html?hi). Otherwise, the request
 will proceed normally.
 </P>
 <P>
 Examples:
 </P>
 <PRE>
-    Script GET /cgi-bin/search     #e.g. for &lt;ISINDEX&gt;-style searching
+    Script GET /cgi-bin/search     #<EM>e.g.</EM> for &lt;ISINDEX&gt;-style searching
     Script PUT /~bob/put.cgi
 </PRE>
 
 <HR>
 
 <H3 ALIGN="CENTER">
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_alias.html apache_1.3.2/htdocs/manual/mod/mod_alias.html
--- apache_1.3.1/htdocs/manual/mod/mod_alias.html	1998-07-19 07:04:25.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_alias.html	1998-09-22 03:20:48.000000000 +0800
@@ -214,13 +214,14 @@
 
 <H2><A NAME="redirectmatch">RedirectMatch</A></H2>
 <P>
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> RedirectMatch [<EM>status</EM> <EM>regex url</EM>
+><STRONG>Syntax:</STRONG></A>
+    RedirectMatch [<EM>status</EM>] <EM>regex url</EM>
 <BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
 ><STRONG>Context:</STRONG></A> server config, virtual host<BR>
 <A
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_asis.html apache_1.3.2/htdocs/manual/mod/mod_asis.html
--- apache_1.3.1/htdocs/manual/mod/mod_asis.html	1998-07-19 07:04:25.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_asis.html	1998-09-22 03:20:48.000000000 +0800
@@ -34,13 +34,13 @@
 
 This can be used to send any kind of data from the server, including redirects
 and other special HTTP responses, without requiring a cgi-script or an nph
 script.
 <H2>Usage</H2>
 In the server configuration file, define a new mime type called
-<CODE>httpd/send-as-is</CODE> e.g.
+<CODE>httpd/send-as-is</CODE> <EM>e.g.</EM>
 <BLOCKQUOTE><CODE>AddType httpd/send-as-is asis</CODE></BLOCKQUOTE>
 this defines the <CODE>.asis</CODE> file extension as being of the new
 <CODE>httpd/send-as-is</CODE> mime type. The contents of any file with a
 <CODE>.asis</CODE> extension will then be sent by Apache to the client with
 almost no changes. Clients will need HTTP headers to be attached, so do not
 forget them. A Status: header is also required; the data should be the
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_auth_anon.html apache_1.3.2/htdocs/manual/mod/mod_auth_anon.html
--- apache_1.3.1/htdocs/manual/mod/mod_auth_anon.html	1998-07-19 07:04:25.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_auth_anon.html	1998-09-22 03:20:49.000000000 +0800
@@ -23,13 +23,13 @@
 This module is contained in the <CODE>mod_auth_anon.c</CODE> file and
 is not compiled in by default. It is only available in Apache 1.1 and
 later. It allows "anonymous" user access to authenticated areas.
 
 <H2>Summary</H2>
 
-It does access control in a manner similar to anonymous-ftp sites; i.e.
+It does access control in a manner similar to anonymous-ftp sites; <EM>i.e.</EM>
 have a 'magic' user id 'anonymous' and the email address as a password.
 These email addresses can be logged.
 <P>
 Combined with other (database) access control methods, this allows for
 effective user tracking and customization according to a user profile
 while still keeping the site open for 'unregistered' users. One advantage
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_auth_db.html apache_1.3.2/htdocs/manual/mod/mod_auth_db.html
--- apache_1.3.1/htdocs/manual/mod/mod_auth_db.html	1998-07-19 07:04:25.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_auth_db.html	1998-09-22 03:20:49.000000000 +0800
@@ -25,13 +25,13 @@
 is not compiled in by default. It provides for user authentication using
 Berkeley DB files. It is an alternative to <A HREF="mod_auth_dbm.html">DBM</A>
 files for those systems which support DB and not DBM. It is only
 available in Apache 1.1 and later.
 
 <P>
-On some BSD systems (e.g. FreeBSD and NetBSD) dbm is automatically mapped to
+On some BSD systems (<EM>e.g.</EM>, FreeBSD and NetBSD) dbm is automatically mapped to
 Berkeley DB. You can use either <A HREF="mod_auth_dbm.html">mod_auth_dbm</A>
 or mod_auth_db. The latter makes it more obvious that it's Berkeley DB.  On
 other platforms where you want to use the DB library you usually have to
 install it first. See 
 <A HREF="http://www.sleepycat.com/">http://www.sleepycat.com/</A> for the
 distribution. The interface this module uses is the one from DB version 1.85
@@ -204,13 +204,13 @@
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> By default; control is not passed on; and an
 unknown
 userID or rule will result in an Authorization Required reply. Not
-setting it thus keeps the system secure; and forces an NSCA compliant
+setting it thus keeps the system secure; and forces an NCSA compliant
 behaviour.  <P>
 Security: Do consider the implications of allowing a user to allow
 fall-through in his .htaccess file; and verify that this is really
 what you want; Generally it is easier to just secure a single
 .htpasswd file, than it is to secure a database which might have
 more access interfaces.
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_auth_dbm.html apache_1.3.2/htdocs/manual/mod/mod_auth_dbm.html
--- apache_1.3.1/htdocs/manual/mod/mod_auth_dbm.html	1998-07-19 07:04:25.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_auth_dbm.html	1998-09-22 03:20:49.000000000 +0800
@@ -32,14 +32,14 @@
 <LI><A HREF="#authdbmuserfile">AuthDBMUserFile</A>
 <LI><A HREF="#authdbmauthoritative">AuthDBMAuthoritative</A>
 </MENU>
 <HR>
 
 
-<H2><A NAME="authdbmgroupfile">AuthDbmGroupFile</A></H2>
-<!--%plaintext &lt;?INDEX {\tt AuthDbmGroupFile} directive&gt; -->
+<H2><A NAME="authdbmgroupfile">AuthDBMGroupFile</A></H2>
+<!--%plaintext &lt;?INDEX {\tt AuthDBMGroupFile} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> AuthDBMGroupFile <EM>filename</EM><BR>
 <A
  HREF="directive-dict.html#Context"
@@ -193,13 +193,13 @@
 
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> By default; control is not passed on; and an unknown
 userID or rule will result in an Authorization Required reply. Not
-setting it thus keeps the system secure; and forces an NSCA compliant
+setting it thus keeps the system secure; and forces an NCSA compliant
 behaviour.  <P>
 
 Security: Do consider the implications of allowing a user to allow
 fall-through in his .htaccess file; and verify that this is really
 what you want; Generally it is easier to just secure a single
 .htpasswd file, than it is to secure a database which might have
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_auth.html apache_1.3.2/htdocs/manual/mod/mod_auth.html
--- apache_1.3.1/htdocs/manual/mod/mod_auth.html	1998-07-19 07:04:25.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_auth.html	1998-09-22 03:20:49.000000000 +0800
@@ -179,13 +179,13 @@
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> By default; control is not passed on; and an
  unknown
 userID or rule will result in an Authorization Required reply. Not
-setting it thus keeps the system secure; and forces an NSCA compliant
+setting it thus keeps the system secure; and forces an NCSA compliant
 behaviour.
 
 <P>
 
 Security: Do consider the implications of allowing a user to allow
 fall-through in his .htaccess file; and verify that this is really
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_autoindex.html apache_1.3.2/htdocs/manual/mod/mod_autoindex.html
--- apache_1.3.1/htdocs/manual/mod/mod_autoindex.html	1998-07-19 07:04:25.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_autoindex.html	1998-09-22 03:20:50.000000000 +0800
@@ -90,13 +90,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> AddAlt <EM>string file file...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -122,13 +123,14 @@
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> AddAltByEncoding <EM>string MIME-encoding
     MIME-encoding...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -149,17 +151,19 @@
 <HR>
 <H2><A NAME="addaltbytype">AddAltByType</A></H2>
 <!--%plaintext &lt;?INDEX {\tt AddAltByType} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> AddAltByType <EM>string MIME-type MIME-type...</EM><BR>
+><STRONG>Syntax:</STRONG></A> AddAltByType <EM>string MIME-type MIME-type
+    ...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -185,13 +189,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> AddDescription <EM>string file file...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -216,13 +221,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> AddIcon <EM>icon name name ...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -252,18 +258,19 @@
 
 <H2><A NAME="addiconbyencoding">AddIconByEncoding</A></H2>
 <!--%plaintext &lt;?INDEX {\tt AddIconByEncoding} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> AddIconByEncoding <EM>icon mime-encoding mime-encoding
-...</EM><BR>
+><STRONG>Syntax:</STRONG></A> AddIconByEncoding <EM>icon MIME-encoding
+    MIME-encoding ...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -272,13 +279,13 @@
 <A
  HREF="directive-dict.html#Module"
  REL="Help"
 ><STRONG>Module:</STRONG></A> mod_autoindex<P>
 
 This sets the icon to display next to files with
-<EM>mime-encoding</EM> for <A HREF="#fancyindexing">FancyIndexing</A>.
+<EM>MIME-encoding</EM> for <A HREF="#fancyindexing">FancyIndexing</A>.
 <EM>Icon</EM> is either a (%-escaped) relative URL to the icon, or of the
 format (<EM>alttext</EM>,<EM>url</EM>) where <EM>alttext</EM> is the text tag
 given for an icon for non-graphical browsers.<P>
 
 <EM>Mime-encoding</EM> is a wildcard expression matching required the
 content-encoding. Examples:
@@ -288,17 +295,19 @@
 
 <H2><A NAME="addiconbytype">AddIconByType</A></H2>
 <!--%plaintext &lt;?INDEX {\tt AddIconByType} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> AddIconByType <EM>icon mime-type mime-type ...</EM><BR>
+><STRONG>Syntax:</STRONG></A> AddIconByType <EM>icon MIME-type MIME-type
+    ...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -306,13 +315,13 @@
 ><STRONG>Status:</STRONG></A> Base<BR>
 <A
  HREF="directive-dict.html#Module"
  REL="Help"
 ><STRONG>Module:</STRONG></A> mod_autoindex<P>
 
-This sets the icon to display next to files of type <EM>mime-type</EM> for
+This sets the icon to display next to files of type <EM>MIME-type</EM> for
 <A HREF="#fancyindexing">FancyIndexing</A>. <EM>Icon</EM> is either a
 (%-escaped) relative URL to the icon, or of the format
 (<EM>alttext</EM>,<EM>url</EM>) where <EM>alttext</EM> is the text tag given
 for an icon for non-graphical browsers.<P>
 <EM>Mime-type</EM> is a wildcard expression matching required the mime types.
 Examples:
@@ -326,13 +335,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> DefaultIcon <EM>url</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -356,13 +366,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> FancyIndexing <EM>boolean</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -376,29 +387,34 @@
 The FancyIndexing directive sets the FancyIndexing option for a directory.
 <EM>Boolean</EM> can be <CODE>on</CODE> or <CODE>off</CODE>. The
 <A HREF="#indexoptions">IndexOptions</A> directive should be used in
 preference.
 </P>
 <BLOCKQUOTE>
- <STRONG>Note that the <SAMP>FancyIndexing</SAMP> and
+ <STRONG>Note that in versions of Apache prior to 1.3.2, the
+ <SAMP>FancyIndexing</SAMP> and
  <SAMP>IndexOptions</SAMP> directives will override each other. You
  should use <SAMP>IndexOptions&nbsp;FancyIndexing</SAMP> in preference
- to the standalone <SAMP>FancyIndexing</SAMP> directive.</STRONG>
+ to the standalone <SAMP>FancyIndexing</SAMP> directive.
+ As of Apache 1.3.2, a standalone <SAMP>FancyIndexing</SAMP> directive
+ is combined with any <SAMP>IndexOptions</SAMP> directive already
+ specified for the current scope.</STRONG>
 </BLOCKQUOTE>
 <HR>
 
 <H2><A NAME="headername">HeaderName</A></H2>
 <!--%plaintext &lt;?INDEX {\tt HeaderName} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> HeaderName <EM>filename</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -428,13 +444,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> IndexIgnore <EM>file file ...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -460,13 +477,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> IndexOptions <EM>option option ...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -481,16 +499,20 @@
 <EM>Option</EM> can be one of
 <DL>
 <DT>FancyIndexing
 <DD><!--%plaintext &lt;?INDEX {\tt FancyIndexing} index option&gt; -->
 This turns on fancy indexing of directories.
 <BLOCKQUOTE>
- <STRONG>Note that the <SAMP>FancyIndexing</SAMP> and
+ <STRONG>Note that in versions of Apache prior to 1.3.2, the
+ <SAMP>FancyIndexing</SAMP> and
  <SAMP>IndexOptions</SAMP> directives will override each other. You
  should use <SAMP>IndexOptions&nbsp;FancyIndexing</SAMP> in preference
- to the standalone <SAMP>FancyIndexing</SAMP> directive.</STRONG>
+ to the standalone <SAMP>FancyIndexing</SAMP> directive.
+ As of Apache 1.3.2, a standalone <SAMP>FancyIndexing</SAMP> directive
+ is combined with any <SAMP>IndexOptions</SAMP> directive already
+ specified for the current scope.</STRONG>
 </BLOCKQUOTE>
 <DT>IconHeight[=pixels] (<EM>Apache 1.3 and later</EM>)
 <DD>
 <!--%plaintext &lt;?INDEX {\tt IconHeight} index option&gt; -->
 Presence of this option, when used with IconWidth, will cause the server
 to include <SAMP>HEIGHT</SAMP> and <SAMP>WIDTH</SAMP> attributes in the
@@ -511,12 +533,18 @@
 to include <SAMP>HEIGHT</SAMP> and <SAMP>WIDTH</SAMP> attributes in the
 <SAMP>IMG</SAMP> tag for the file icon.  This allows browser to
 precalculate the page layout without having to wait until all the
 images have been loaded.  If no value is given for the option, it
 defaults to the standard width of the icons supplied with the Apache
 software.
+<DT>NameLength=[<EM>n</EM> | *] (<EM>Apache 1.3.2 and later</EM>)
+<DD>
+The NameLength keyword allows you to specify the width of the
+filename column in bytes.  If the keyword value is '<SAMP>*</SAMP>',
+then the column is automatically sized to the length of the longest
+filename in the display.
 <DT>ScanHTMLTitles
 <DD><!--%plaintext &lt;?INDEX {\tt ScanHTMLTitles} index option&gt; -->
 This enables the extraction of the title from HTML documents for fancy
 indexing. If the file does not have a description given by
 <A HREF="#adddescription">AddDescription</A> then httpd will read the
 document for the value of the TITLE tag.  This is CPU and disk intensive.
@@ -575,13 +603,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> ReadmeName <EM>filename</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> Indexes<BR>
 <A
  HREF="directive-dict.html#Status"
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_cgi.html apache_1.3.2/htdocs/manual/mod/mod_cgi.html
--- apache_1.3.1/htdocs/manual/mod/mod_cgi.html	1998-07-19 07:04:25.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_cgi.html	1998-09-22 03:20:50.000000000 +0800
@@ -134,13 +134,13 @@
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> none<BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> resource config<BR>
+><STRONG>Context:</STRONG></A> server config<BR>
 <A
  HREF="directive-dict.html#Status"
  REL="Help"
 ><STRONG>Status:</STRONG></A> mod_cgi
 <P>
 
@@ -174,13 +174,13 @@
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> 10385760<BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> resource config<BR>
+><STRONG>Context:</STRONG></A> server config<BR>
 <A
  HREF="directive-dict.html#Status"
  REL="Help"
 ><STRONG>Status:</STRONG></A> mod_cgi
 <P>
 
@@ -201,13 +201,13 @@
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> 1024<BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> resource config<BR>
+><STRONG>Context:</STRONG></A> server config<BR>
 <A
  HREF="directive-dict.html#Status"
  REL="Help"
 ><STRONG>Status:</STRONG></A> mod_cgi
 <P>
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_expires.html apache_1.3.2/htdocs/manual/mod/mod_expires.html
--- apache_1.3.1/htdocs/manual/mod/mod_expires.html	1998-07-19 07:04:26.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_expires.html	1998-09-22 03:20:50.000000000 +0800
@@ -119,13 +119,13 @@
   </A></H2>
   <!--%plaintext &lt;?INDEX {\tt ExpiresByType} directive&gt; -->
   <P>
   <A
    HREF="directive-dict.html#Syntax"
    REL="Help"
-  ><STRONG>Syntax:</STRONG></A> ExpiresByType <EM>mime-type
+  ><STRONG>Syntax:</STRONG></A> ExpiresByType <EM>MIME-type
   &lt;code&gt;seconds</EM>
   <BR>
   <A
    HREF="directive-dict.html#Context"
    REL="Help"
   ><STRONG>Context:</STRONG></A> server config, virtual host, directory,
@@ -319,12 +319,17 @@
   <DL>
    <DD><CODE>ExpiresByType text/html "access plus 1 month 15 days 2 hours"
     <BR>
     ExpiresByType image/gif "modification plus 5 hours 3 minutes"</CODE>
    </DD>
   </DL>
+  <P>
+  Note that if you use a modification date based setting, the Expires
+  header will <STRONG>not</STRONG> be added to content that does
+  not come from a file on disk.  This is due to the fact that there is
+  no modification time for such content.
 
   <HR>
 
 <H3 ALIGN="CENTER">
  Apache HTTP Server Version 1.3
 </H3>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_include.html apache_1.3.2/htdocs/manual/mod/mod_include.html
--- apache_1.3.1/htdocs/manual/mod/mod_include.html	1998-07-19 07:04:29.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_include.html	1998-09-22 03:20:50.000000000 +0800
@@ -20,14 +20,14 @@
 </DIV>
 
 <H1 ALIGN="CENTER">Module mod_include</H1>
 
 This module is contained in the <CODE>mod_include.c</CODE> file, and
 is compiled in by default. It provides for server-parsed html
-documents. Several directives beyond the original NCSA definition have been
-included in Apache 1.2 - these are flagged below with the phrase
+documents. Several directives beyond the original NCSA definition were
+introduced in Apache 1.2 - these are flagged below with the phrase
 "Apache 1.2 and above".  Of particular significance are the new flow
 control directives documented at the bottom.
 
 <H2>Enabling Server-Side Includes</H2>
 
 Any document with handler of "server-parsed" will be parsed by this
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_isapi.html apache_1.3.2/htdocs/manual/mod/mod_isapi.html
--- apache_1.3.1/htdocs/manual/mod/mod_isapi.html	1998-07-19 07:04:29.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_isapi.html	1998-09-22 03:20:51.000000000 +0800
@@ -28,13 +28,13 @@
    <CODE>isapi-isa</CODE> will be processed by this module.
 
 <H2>Purpose</H2>
 
 <P>This module implements the <A
    HREF="http://www.microsoft.com/win32dev/apiext/isapimrg.htm">ISAPI
-   Extension</A> API. It allows Internet Server Applications (i.e., ISAPI
+   Extension</A> API. It allows Internet Server Applications (<EM>i.e.</EM>, ISAPI
    Extensions) to be used with Apache for Windows.
 
 <H2>Usage</H2>
 
 <P>In the server configuration file, add a handler called
    <CODE>isapi-isa</CODE>, and map it to files with a <CODE>.DLL</CODE>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_log_common.html apache_1.3.2/htdocs/manual/mod/mod_log_common.html
--- apache_1.3.1/htdocs/manual/mod/mod_log_common.html	1998-07-19 07:04:29.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_log_common.html	1998-09-22 03:20:51.000000000 +0800
@@ -101,13 +101,15 @@
 of
 <DL><DT>A filename
 <DD>A filename relative to the <A HREF="core.html#serverroot">ServerRoot</A>.
 <DT> `|' followed by a command
 <DD>A program to receive the agent log information on its standard input.
 Note the a new program will not be started for a VirtualHost if it inherits
-the TransferLog from the main server.
+the TransferLog from the main server.  See, just as an example,
+<A HREF="http://www.ford-mason.co.uk/resources/cronolog/">cronolog</A>.
+
 </DL>
 <STRONG>Security:</STRONG> if a program is used, then it will be
 run under the user who started httpd. This will be root if the server
 was started by root; be sure that the program is secure.<P>
 
 <STRONG>Security:</STRONG> See the <A
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_log_config.html apache_1.3.2/htdocs/manual/mod/mod_log_config.html
--- apache_1.3.1/htdocs/manual/mod/mod_log_config.html	1998-07-19 07:04:29.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_log_config.html	1998-09-22 03:20:51.000000000 +0800
@@ -133,13 +133,13 @@
 %...T:          The time taken to serve the request, in seconds.
 %...u:          Remote user (from auth; may be bogus if return status (%s) is 401)
 %...U:          The URL path requested.
 %...v:          The canonical ServerName of the server serving the request.
 </PRE>
 
-The `...' can be nothing at all (e.g. <CODE>"%h %u %r %s %b"</CODE>), or it can
+The `...' can be nothing at all (<EM>e.g.</EM>, <CODE>"%h %u %r %s %b"</CODE>), or it can
 indicate conditions for inclusion of the item (which will cause it
 to be replaced with `-' if the condition is not met).  Note that
 there is no escaping performed on the strings from %r, %...i and
 %...o; some with long memories may remember that I thought this was
 a bad idea, once upon a time, and I'm still not comfortable with
 it, but it is difficult to see how to `do the right thing' with all
@@ -154,13 +154,13 @@
 requests which did <STRONG>not</STRONG> return some sort of normal status.
 
 <P>
 
 Note that the common log format is defined by the string <CODE>"%h %l
 %u %t \"%r\" %s %b"</CODE>, which can be used as the basis for
-extending for format if desired (e.g. to add extra fields at the end).
+extending for format if desired (<EM>e.g.</EM>, to add extra fields at the end).
 NCSA's extended/combined log format would be <CODE>"%h %l %u %t \"%r\" %s %b \"%{Referer}i\" \"%{User-agent}i\""</CODE>.
 
 <P>
 
 Note that the canonical <A HREF="core.html#servername">ServerName</A>
 and <A HREF="core.html#port">Port</A> of the server serving the request
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_mime.html apache_1.3.2/htdocs/manual/mod/mod_mime.html
--- apache_1.3.1/htdocs/manual/mod/mod_mime.html	1998-07-19 07:04:29.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_mime.html	1998-09-22 03:20:51.000000000 +0800
@@ -37,18 +37,18 @@
 
 The directives <A HREF="#addencoding">AddEncoding</A>, <A
 HREF="#addhandler">AddHandler</A>, <A
 HREF="#addlanguage">AddLanguage</A> and <A HREF="#addtype">AddType</A>
 are all used to map file extensions onto the meta-information for that
 file.  Respectively they set the content-encoding, handler,
-content-language and mime-type (content-type) of documents.  The
+content-language and MIME-type (content-type) of documents.  The
 directive <A HREF="#typesconfig">TypesConfig</A> is used to specify a
 file which also maps extensions onto mime types. The directives <A
 HREF="#forcetype">ForceType</A> and <A
 HREF="#sethandler">SetHandler</A> are used to associated all the files
-in a given location (e.g. a particular directory) onto a particular
+in a given location (<EM>e.g.</EM>, a particular directory) onto a particular
 mime type or handler.
 
 <P>
 
 Files can have more than one extension, and the order of the
 extensions is normally irrelevant. For example, if the file
@@ -92,13 +92,13 @@
 
 <H2><A NAME="addencoding">AddEncoding</A></H2>
 <!--%plaintext &lt;?INDEX {\tt AddEncoding} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> AddEncoding <EM>mime-enc extension extension...</EM><BR>
+><STRONG>Syntax:</STRONG></A> AddEncoding <EM>MIME-enc extension extension...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
 ><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
@@ -126,13 +126,13 @@
 encoding, and .Z files to be marked as encoded with x-compress.<P>
 
 Old clients expect <CODE>x-gzip</CODE> and <CODE>x-compress</CODE>,
 however the standard dictates that they're equivalent to <CODE>gzip</CODE>
 and <CODE>compress</CODE> respectively.  Apache does content encoding
 comparisons by ignoring any leading <CODE>x-</CODE>.  When responding
-with an encoding Apache will use whatever form (i.e. <CODE>x-foo</CODE>
+with an encoding Apache will use whatever form (<EM>i.e.</EM>, <CODE>x-foo</CODE>
 or <CODE>foo</CODE>) the client requested.  If the client didn't
 specifically request a particular form Apache will use the form given by
 the <CODE>AddEncoding</CODE> directive.  To make this long story short,
 you should always use <CODE>x-gzip</CODE> and <CODE>x-compress</CODE>
 for these two specific encodings.  More recent encodings, such as
 <CODE>deflate</CODE> should be specified without the <CODE>x-</CODE>.
@@ -182,13 +182,13 @@
 
 <H2><A NAME="addlanguage">AddLanguage</A></H2>
 <!--%plaintext &lt;?INDEX {\tt AddLanguage} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> AddLanguage <EM>mime-lang extension extension...</EM><BR>
+><STRONG>Syntax:</STRONG></A> AddLanguage <EM>MIME-lang extension extension...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
 ><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
@@ -221,13 +221,13 @@
 
 <H2><A NAME="addtype">AddType</A></H2>
 <!--%plaintext &lt;?INDEX {\tt AddType} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> AddType <EM>mime-type extension extension...</EM><BR>
+><STRONG>Syntax:</STRONG></A> AddType <EM>MIME-type extension extension...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
 ><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
@@ -362,13 +362,13 @@
 The TypesConfig directive sets the location of the mime types configuration
 file. <EM>Filename</EM> is relative to the
 <A HREF="core.html#serverroot">ServerRoot</A>. This file sets the default list of
 mappings from filename extensions to content types; changing this file is not
 recommended. Use the <A HREF="#addtype">AddType</A> directive instead. The
 file contains lines in the format of the arguments to an AddType command:
-<BLOCKQUOTE><EM>mime-type extension extension ...</EM></BLOCKQUOTE>
+<BLOCKQUOTE><EM>MIME-type extension extension ...</EM></BLOCKQUOTE>
 The extensions are lower-cased. Blank lines, and lines beginning with a hash
 character (`#') are ignored.<P>
 
 <HR>
 
 <H3 ALIGN="CENTER">
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_mime_magic.html apache_1.3.2/htdocs/manual/mod/mod_mime_magic.html
--- apache_1.3.1/htdocs/manual/mod/mod_mime_magic.html	1998-07-19 07:04:29.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_mime_magic.html	1998-09-22 03:20:51.000000000 +0800
@@ -252,13 +252,13 @@
  * modified from the free "file" command.
  * - all-in-one file for compilation convenience when moving from one
  *   version of Apache to the next.
  * - Memory allocation is done through the Apache API's pool structure.
  * - All functions have had necessary Apache API request or server
  *   structures passed to them where necessary to call other Apache API
- *   routines.  (i.e. usually for logging, files, or memory allocation in
+ *   routines.  (<EM>i.e.</EM>, usually for logging, files, or memory allocation in
  *   itself or a called function.)
  * - struct magic has been converted from an array to a single-ended linked
  *   list because it only grows one record at a time, it's only accessed
  *   sequentially, and the Apache API has no equivalent of realloc().
  * - Functions have been changed to get their parameters from the server
  *   configuration instead of globals.  (It should be reentrant now but has
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_mmap_static.html apache_1.3.2/htdocs/manual/mod/mod_mmap_static.html
--- apache_1.3.1/htdocs/manual/mod/mod_mmap_static.html	1998-07-19 07:04:30.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_mmap_static.html	1998-09-22 03:20:51.000000000 +0800
@@ -111,13 +111,13 @@
   </P>
 
   <P>
   Be careful with the <EM>filename</EM> arguments: They have to literally
   match the filesystem path Apache's URL-to-filename translation handlers
   create. We cannot compare inodes or other stuff to match paths through
-  symbolic links etc. because that again would cost extra <CODE>stat()</CODE>
+  symbolic links <EM>etc.</EM> because that again would cost extra <CODE>stat()</CODE>
   system calls which is not acceptable.  This module may or may not work
   with filenames rewritten by <CODE>mod_alias</CODE> or
   <CODE>mod_rewrite</CODE>... it is an experiment after all.
   </P>
 
   <P>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_negotiation.html apache_1.3.2/htdocs/manual/mod/mod_negotiation.html
--- apache_1.3.1/htdocs/manual/mod/mod_negotiation.html	1998-07-19 07:04:30.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_negotiation.html	1998-09-22 03:20:51.000000000 +0800
@@ -139,13 +139,13 @@
 
 <H2><A NAME="languagepriority">LanguagePriority</A></H2>
 <!--%plaintext &lt;?INDEX {\tt LanguagePriority} directive&gt; -->
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> LanguagePriority <EM>mime-lang mime-lang...</EM><BR>
+><STRONG>Syntax:</STRONG></A> LanguagePriority <EM>MIME-lang MIME-lang...</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
 ><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
@@ -159,13 +159,13 @@
  HREF="directive-dict.html#Module"
  REL="Help"
 ><STRONG>Module:</STRONG></A> mod_negotiation<P>
 
 The LanguagePriority sets the precedence of language variants for the case
 where the client does not express a preference, when handling a
-MultiViews request. The list of <EM>mime-lang</EM> are in order of decreasing
+MultiViews request. The list of <EM>MIME-lang</EM> are in order of decreasing
 preference. Example:
 
 <BLOCKQUOTE><CODE>LanguagePriority en fr de</CODE></BLOCKQUOTE>
 
 For a request for <CODE>foo.html</CODE>, where <CODE>foo.html.fr</CODE>
 and <CODE>foo.html.de</CODE> both existed, but the browser did not express
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_proxy.html apache_1.3.2/htdocs/manual/mod/mod_proxy.html
--- apache_1.3.1/htdocs/manual/mod/mod_proxy.html	1998-07-19 07:04:30.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_proxy.html	1998-09-22 03:20:51.000000000 +0800
@@ -48,15 +48,17 @@
 <UL>
 <LI><A HREF="#proxyrequests">ProxyRequests</A>
 <LI><A HREF="#proxyremote">ProxyRemote</A>
 <LI><A HREF="#proxypass">ProxyPass</A>
 <LI><A HREF="#proxypassreverse">ProxyPassReverse</A>
 <LI><A HREF="#proxyblock">ProxyBlock</A>
+<LI><A HREF="#allowconnect">AllowCONNECT</A>
 <LI><A HREF="#proxyreceivebuffersize">ProxyReceiveBufferSize</A>
 <LI><A HREF="#noproxy">NoProxy</A>
 <LI><A HREF="#proxydomain">ProxyDomain</A>
+<LI><A HREF="#proxyvia">ProxyVia</A>
 <LI><A HREF="#cacheroot">CacheRoot</A>
 <LI><A HREF="#cachesize">CacheSize</A>
 <LI><A HREF="#cachemaxexpire">CacheMaxExpire</A>
 <LI><A HREF="#cachedefaultexpire">CacheDefaultExpire</A>
 <LI><A HREF="#cachelastmodifiedfactor">CacheLastModifiedFactor</A>
 <LI><A HREF="#cachegcinterval">CacheGcInterval</A>
@@ -197,13 +199,13 @@
 server; the local server does not act as a proxy in the conventional sense,
 but appears to be a mirror of the remote server. &lt;path&gt; is the name of
 a local virtual path; &lt;url&gt; is a partial URL for the remote server.
 <P>
 Suppose the local server has address <SAMP>http://wibble.org/</SAMP>; then
 <PRE>
-   ProxyPass /mirror/foo http://foo.com
+   ProxyPass /mirror/foo/ http://foo.com/
 </PRE>
 will cause a local request for the
 &lt;<SAMP>http://wibble.org/mirror/foo/bar</SAMP>&gt; to be
 internally converted into a proxy request to
 &lt;<SAMP>http://foo.com/bar</SAMP>&gt;.
 
@@ -249,14 +251,14 @@
 &lt;url&gt; is a partial URL for the remote server - the same way they are
 used for the <TT>ProxyPass</TT> directive.
 <P>
 Example:<BR>
 Suppose the local server has address <SAMP>http://wibble.org/</SAMP>; then
 <PRE>
-   ProxyPass         /mirror/foo http://foo.com
-   ProxyPassReverse  /mirror/foo http://foo.com
+   ProxyPass         /mirror/foo/ http://foo.com/
+   ProxyPassReverse  /mirror/foo/ http://foo.com/
 </PRE>
 will not only cause a local request for the
 &lt;<SAMP>http://wibble.org/mirror/foo/bar</SAMP>&gt; to be internally
 converted into a proxy request to &lt;<SAMP>http://foo.com/bar</SAMP>&gt; (the
 functionality <SAMP>ProxyPass</SAMP> provides here). It also takes care of
 redirects the server foo.com sends: when <SAMP>http://foo.com/bar</SAMP> is
@@ -271,12 +273,54 @@
  HREF="mod_rewrite.html#RewriteRule"
 ><TT>mod_rewrite</TT></A> because its doesn't depend on a corresponding
 <SAMP>ProxyPass</SAMP> directive.
 
 <HR>
 
+<H2><A NAME="allowconnect">AllowCONNECT</A></H2>
+<A
+ HREF="directive-dict.html#Syntax"
+ REL="Help"
+><STRONG>Syntax:</STRONG></A> AllowCONNECT <EM>&lt;port list&gt;</EM><BR>
+<A
+ HREF="directive-dict.html#Default"
+ REL="Help"
+><STRONG>Default:</STRONG></A> <EM><SAMP>AllowCONNECT</SAMP> 443 563</EM><BR>
+<A
+ HREF="directive-dict.html#Context"
+ REL="Help"
+><STRONG>Context:</STRONG></A> server config, virtual host<BR>
+<A
+ HREF="directive-dict.html#Override"
+ REL="Help"
+><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
+<A
+ HREF="directive-dict.html#Status"
+ REL="Help"
+><STRONG>Status:</STRONG></A> Base<BR>
+<A
+ HREF="directive-dict.html#Module"
+ REL="Help"
+><STRONG>Module:</STRONG></A> mod_proxy<BR>
+<A
+ HREF="directive-dict.html#Compatibility"
+ REL="Help"
+><STRONG>Compatibility:</STRONG></A> <SAMP>AllowCONNECT</SAMP> is only
+available in Apache 1.3.2 and later.<P>
+
+The <SAMP>AllowCONNECT</SAMP> directive specifies a list of port numbers
+to which the proxy <SAMP>CONNECT</SAMP> method may connect.
+Today's browsers use this method when a <EM>https</EM> connection
+is requested and proxy tunneling over <EM>http</EM> is in effect.<BR>
+By default, only the default https port (443) and the default
+snews port (563) are enabled. Use the <SAMP>AllowCONNECT</SAMP>
+directive to overrride this default and allow connections to the
+listed ports only.
+
+<HR>
+
 <H2><A NAME="proxyblock">ProxyBlock</A></H2>
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> ProxyBlock <EM>&lt;word/host/domain list&gt;</EM><BR>
 <A
@@ -309,13 +353,13 @@
 separated by spaces. HTTP, HTTPS, and FTP document requests to matched words,
 hosts or domains are <EM>blocked</EM> by the proxy server. The proxy module
 will also attempt to determine IP addresses of list items which may be
 hostnames during startup, and cache them for match test as well. Example:
 
 <PRE>
-  ProxyBlock joes_garage.com some_host.co.uk rocky.wotsamattau.edu
+  ProxyBlock joes-garage.com some-host.co.uk rocky.wotsamattau.edu
 </PRE>
 
 'rocky.wotsamattau.edu' would also be matched if referenced by IP address.<P>
 
 Note that 'wotsamattau' would also be sufficient to match 'wotsamattau.edu'.<P>
 
@@ -426,13 +470,13 @@
     <!-- ===================== Domain ======================= -->
     <A NAME="domain">
     <DT><EM>Domain</EM></A>
     <DD>A <EM>Domain</EM> is a partially qualified DNS domain name, preceded
         by a period.
         It represents a list of hosts which logically belong to the same DNS
-        domain or zone (i.e. the suffixes of the hostnames are all ending in 
+        domain or zone (<EM>i.e.</EM>, the suffixes of the hostnames are all ending in 
         <EM>Domain</EM>).<BR>
 		Examples: <SAMP>.com</SAMP>   <SAMP>.apache.org.</SAMP><BR>
         To distinguish <EM>Domain</EM>s from <A HREF="#hostname"><EM>Hostname</EM></A>s (both
         syntactically and semantically; a DNS domain can have a DNS A record,
         too!), <EM>Domain</EM>s are always written
         with a leading period.<BR>
@@ -462,13 +506,13 @@
          <DT><SAMP>192.168.112.0/21</SAMP>
          <DD>the subnet <SAMP>192.168.112.0/21</SAMP> with a netmask of 21
              valid bits (also used in the form 255.255.248.0)
         </DL>
 		As a degenerate case, a <EM>SubNet</EM> with 32 valid bits is the
         equivalent to an <EM>IPAddr</EM>, while a <EM>SubNet</EM> with zero
-        valid bits (e.g., 0.0.0.0/0) is the same as the constant
+        valid bits (<EM>e.g.</EM>, 0.0.0.0/0) is the same as the constant
         <EM>_Default_</EM>, matching any IP address. 
 
     <!-- ===================== IPAddr ======================= -->
     <A NAME="ipaddr">
     <DT><EM>IPAddr</EM></A>
     <DD>A <EM>IPAddr</EM> represents a fully qualified internet address in
@@ -555,12 +599,64 @@
   NoProxy         .mycompany.com 192.168.112.0/21 
   ProxyDomain     .mycompany.com
 </PRE>
 
 <HR>
 
+<H2><A NAME="proxyvia">ProxyVia</A></H2>
+<A
+ HREF="directive-dict.html#Syntax"
+ REL="Help"
+><STRONG>Syntax:</STRONG></A> ProxyVia { <EM>off</EM>
+                                       | <EM>on</EM>
+				       | <EM>full</EM>
+				       | <EM>block</EM>
+				       }<BR>
+<A
+ HREF="directive-dict.html#Default"
+ REL="Help"
+><STRONG>Default:</STRONG></A> <EM>ProxyVia off</EM><BR>
+<A
+ HREF="directive-dict.html#Context"
+ REL="Help"
+><STRONG>Context:</STRONG></A> server config, virtual host<BR>
+<A
+ HREF="directive-dict.html#Override"
+ REL="Help"
+><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
+<A
+ HREF="directive-dict.html#Status"
+ REL="Help"
+><STRONG>Status:</STRONG></A> Base<BR>
+<A
+ HREF="directive-dict.html#Module"
+ REL="Help"
+><STRONG>Module:</STRONG></A> mod_proxy<BR>
+<A
+ HREF="directive-dict.html#Compatibility"
+ REL="Help"
+><STRONG>Compatibility:</STRONG></A> ProxyVia is only available in
+Apache 1.3.2 and later.<P>
+
+This directive controls the use of the <SAMP>Via:</SAMP> HTTP header
+by the proxy. Its intended use is to control the flow of of proxy
+requests along a chain of proxy servers.
+See RFC2068 (HTTP/1.1) for an explanation of <SAMP>Via:</SAMP> header lines.<UL>
+<LI>If set to <EM>off</EM>, which is the default, no special
+processing is performed. If a request or reply contains a <SAMP>Via:</SAMP> header,
+it is passed through unchanged.
+<LI>If set to <EM>on</EM>, each request and reply will get a <SAMP>Via:</SAMP> header
+line added for the current host.
+<LI>If set to <EM>full</EM>, each generated <SAMP>Via:</SAMP> header line will
+additionally have the Apache server version shown as a <SAMP>Via:</SAMP> comment field.
+<LI>If set to <EM>block</EM>, every proxy request will have all its
+<SAMP>Via:</SAMP> header lines removed. No new <SAMP>Via:</SAMP> header will be generated.
+</UL>
+
+<HR>
+
 <H2><A NAME="cacheforcecompletion">CacheForceCompletion</A></H2>
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> CacheForceCompletion <EM>&lt;percentage&gt;</EM><BR>
 <A
@@ -629,13 +725,13 @@
  REL="Help"
 ><STRONG>Compatibility:</STRONG></A> CacheRoot is only available in
 Apache 1.1 and later.<P>
 
 Sets the name of the directory to contain cache files; this must be
 writable by the httpd server.
-(see the <A href="core.html#user"><CODE>User</CODE></a> directive</a>).<BR>
+(see the <A HREF="core.html#user"><CODE>User</CODE></A> directive).<BR>
 Setting <CODE>CacheRoot</CODE> enables proxy cacheing; without defining
 a <CODE>CacheRoot</CODE>, proxy functionality will be available
 if <CODE>ProxyRequests</CODE> are set to <CODE>On</CODE>, but no
 cacheing will be available.
 
 <HR>
@@ -950,13 +1046,13 @@
 by spaces. HTTP and non-passworded FTP documents from matched words, hosts or
 domains are <EM>not</EM> cached by the proxy server. The proxy module will
 also attempt to determine IP addresses of list items which may be hostnames
 during startup, and cache them for match test as well. Example:
 
 <PRE>
-  NoCache joes_garage.com some_host.co.uk bullwinkle.wotsamattau.edu
+  NoCache joes-garage.com some-host.co.uk bullwinkle.wotsamattau.edu
 </PRE>
 
 'bullwinkle.wotsamattau.edu' would also be matched if referenced by IP
 address.<P>
 
 Note that 'wotsamattau' would also be sufficient to match 'wotsamattau.edu'.<P>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_rewrite.html apache_1.3.2/htdocs/manual/mod/mod_rewrite.html
--- apache_1.3.1/htdocs/manual/mod/mod_rewrite.html	1998-07-19 07:04:30.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_rewrite.html	1998-09-22 03:20:51.000000000 +0800
@@ -182,13 +182,14 @@
     will be added to make the processing more clear. But this
     point has no drawbacks for the user, it is just a fact which
     should be remembered: Apache does more in the URL-to-filename hook
     then the API intends for it.
 <P>
 <LI>Unbelievably mod_rewrite provides URL manipulations in per-directory
-    context, i.e. within <CODE>.htaccess</CODE> files, although these are
+    context, <EM>i.e.</EM>, within <CODE>.htaccess</CODE> files, although
+    these are
     reached a very long time after the URLs were translated to filenames (this
     has to be this way, because <CODE>.htaccess</CODE> files stay in the
     filesystem, so processing has already been reached this stage of
     processing). In other words: According to the API phases at this time it
     is too late for any URL manipulations.  To overcome this chicken and egg
     problem mod_rewrite uses a trick: When you manipulate a URL/filename in
@@ -254,13 +255,13 @@
 looks for corresponding rule conditions. If none are present, it just
 substitutes the URL with a new value which is constructed from the string
 <EM>Substitution</EM> and goes on with its rule-looping. But if conditions But
 if conditions exists, it starts an inner loop for processing them in order
 they are listed. For conditions the logic is different: We don't match a
 pattern against the current URL. Instead we first create a string
-<EM>TestString</EM> by expanding variables, back-references, map lookups, etc.
+<EM>TestString</EM> by expanding variables, back-references, map lookups, <EM>etc.</EM>
 and then we try to match <EM>TestPattern</EM> against it. If the pattern
 doesn't match, the complete set of conditions and the corresponding rule fails.
 If the pattern matches, then the next condition is processed until no more
 condition is available. If all conditions matched processing is continued with
 the substitution of the URL with <EM>Substitution</EM>.
 
@@ -307,21 +308,24 @@
 <HR NOSHADE SIZE=1>
 
 <H3><A NAME="RewriteEngine">RewriteEngine</A></H3>
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> <CODE>RewriteEngine</CODE> {<CODE>on,off</CODE>}<BR>
+><STRONG>Syntax:</STRONG></A>
+    <CODE>RewriteEngine</CODE> {<CODE>on,off</CODE>}<BR>
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
-><STRONG>Default:</STRONG></A> <STRONG><CODE>RewriteEngine off</CODE></STRONG><BR>
+><STRONG>Default:</STRONG></A>
+    <STRONG><CODE>RewriteEngine off</CODE></STRONG><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A>
+    server config, virtual host, directory, .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> FileInfo<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -364,13 +368,14 @@
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+    .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> FileInfo<BR>
 <A
  HREF="directive-dict.html#Status"
@@ -440,18 +445,18 @@
 <EM>Server Root</EM>.  The directive should occur only once per server
 config.
 
 <P>
 <TABLE WIDTH="70%" BORDER=0 BGCOLOR="#E0E0F0" CELLSPACING=0 CELLPADDING=10>
 <TR><TD>
-<STRONG>Notice</STRONG>: To disable the logging of rewriting actions it is not recommended
-to set <EM>Filename</EM>
+<STRONG>Notice</STRONG>: To disable the logging of rewriting actions it is
+not recommended to set <EM>Filename</EM>
 to <CODE>/dev/null</CODE>, because although the rewriting engine does
 not create output to a logfile it still creates the logfile
-output internally. <STRONG>This will slow down the server with no advantage to the
-administrator!</STRONG>
+output internally. <STRONG>This will slow down the server with no advantage
+to the administrator!</STRONG>
 To disable logging either remove or comment out the
 <CODE>RewriteLog</CODE> directive or use <CODE>RewriteLogLevel 0</CODE>!
 </TD></TR>
 </TABLE>
 
 <P>
@@ -482,13 +487,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> <CODE>RewriteLogLevel</CODE> <EM>Level</EM><BR>
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
-><STRONG>Default:</STRONG></A> <STRONG><CODE>RewriteLogLevel 0</CODE></STRONG><BR>
+><STRONG>Default:</STRONG></A> <STRONG><CODE>RewriteLogLevel 0</CODE></STRONG>
+<BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
 ><STRONG>Context:</STRONG></A> server config, virtual host<BR>
 <A
  HREF="directive-dict.html#Override"
@@ -505,24 +511,26 @@
 <A
  HREF="directive-dict.html#Compatibility"
  REL="Help"
 ><STRONG>Compatibility:</STRONG></A> Apache 1.2<BR>
 
 <P>
-The <CODE>RewriteLogLevel</CODE> directive set the verbosity level of the rewriting
+The <CODE>RewriteLogLevel</CODE> directive set the verbosity level of the
+rewriting
 logfile.  The default level 0 means no logging, while 9 or more means
 that practically all actions are logged.
 
 <P>
 To disable the logging of rewriting actions simply set <EM>Level</EM> to 0.
 This disables all rewrite action logs.
 
 <P>
 <TABLE WIDTH="70%" BORDER=0 BGCOLOR="#E0E0F0" CELLSPACING=0 CELLPADDING=10>
 <TR><TD>
-<STRONG>Notice:</STRONG> Using a high value for <EM>Level</EM> will slow down your Apache
+<STRONG>Notice:</STRONG> Using a high value for <EM>Level</EM> will slow down
+your Apache
 server dramatically! Use the rewriting logfile only for debugging or at least
 at <EM>Level</EM> not greater than 2!
 </TD></TR>
 </TABLE>
 
 
@@ -580,13 +588,14 @@
 <P>
 
 <H3><A NAME="RewriteMap">RewriteMap</A></H3>
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> <CODE>RewriteMap</CODE> <EM>MapName</EM> <EM>MapType</EM><CODE>:</CODE><EM>MapSource</EM><BR>
+><STRONG>Syntax:</STRONG></A> <CODE>RewriteMap</CODE> <EM>MapName </EM>
+    <EM>MapType</EM><CODE>:</CODE><EM>MapSource</EM><BR>
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> not used per default<BR>
 <A
  HREF="directive-dict.html#Context"
@@ -636,13 +645,14 @@
 <P>
 The following combinations for <EM>MapType</EM> and <EM>MapSource</EM>
 can be used:
 
 <UL>
 <LI><STRONG>Standard Plain Text</STRONG><BR>
-    MapType: <CODE>txt</CODE>, MapSource: Unix filesystem path to valid regular file
+    MapType: <CODE>txt</CODE>, MapSource: Unix filesystem path to valid regular
+    file
     <P>
     This is the standard rewriting map feature where the <EM>MapSource</EM> is
     a plain ASCII file containing either blank lines, comment lines (starting
     with a '#' character) or pairs like the following - one per line.
 
     <BLOCKQUOTE><STRONG>
@@ -663,25 +673,29 @@
 </PRE></TD></TR>
 </TABLE>
 
 <P>
 <TABLE BORDER=0 CELLSPACING=1 CELLPADDING=5 BGCOLOR="#F0F0F0">
 <TR><TD><PRE>
-RewriteMap real-to-host txt:/path/to/file/map.txt
+RewriteMap real-to-user txt:/path/to/file/map.txt
 </PRE></TD></TR>
 </TABLE>
 
 <P>
 <LI><STRONG>Randomized Plain Text</STRONG><BR>
-    MapType: <CODE>rnd</CODE>, MapSource: Unix filesystem path to valid regular file
+    MapType: <CODE>rnd</CODE>, MapSource: Unix filesystem path to valid regular
+    file
     <P>
-    This is identical to the Standard Plain Text variant above but with a special
+    This is identical to the Standard Plain Text variant above but with a
+    special
     post-processing feature: After looking up a value it is parsed according
-    to contained ``<CODE>|</CODE>'' characters which have the meaning of ``or''.  Or
+    to contained ``<CODE>|</CODE>'' characters which have the meaning of
+    ``or''.  Or
     in other words: they indicate a set of alternatives from which the actual
-    returned value is chosen randomly. Although this sounds crazy and useless, it
+    returned value is chosen randomly. Although this sounds crazy and useless,
+    it
     was actually designed for load balancing in a reverse proxy situation where
     the looked up values are server names.
     Example:
 <P>
 <TABLE BORDER=0 CELLSPACING=1 CELLPADDING=5 BGCOLOR="#F0F0F0">
 <TR><TD><PRE>
@@ -700,13 +714,14 @@
 RewriteMap servers rnd:/path/to/file/map.txt
 </PRE></TD></TR>
 </TABLE>
 
 <P>
 <LI><STRONG>Hash File</STRONG><BR>
-    MapType: <CODE>dbm</CODE>, MapSource: Unix filesystem path to valid regular file
+    MapType: <CODE>dbm</CODE>, MapSource: Unix filesystem path to valid
+    regular file
     <P>
     Here the source is a binary NDBM format file containing the same contents
     as a <EM>Plain Text</EM> format file, but in a special representation
     which is optimized for really fast lookups. You can create such a file with
     any NDBM tool or with the following Perl script:
     <P>
@@ -742,28 +757,31 @@
         Converts the looked up key to all upper case.
     <LI><STRONG>tolower</STRONG>:<BR>
         Converts the looked up key to all lower case.
     </UL>
 <P>
 <LI><STRONG>External Rewriting Program</STRONG><BR>
-    MapType: <CODE>prg</CODE>, MapSource: Unix filesystem path to valid regular file
+    MapType: <CODE>prg</CODE>, MapSource: Unix filesystem path to valid
+    regular file
     <P>
     Here the source is a Unix program, not a map file. To create it you can use
     the language of your choice, but the result has to be a run-able Unix
-    executable (i.e. either object-code or a script with the
-    magic cookie trick '<CODE>#!/path/to/interpreter</CODE>' as the first line).
+    executable (<EM>i.e.</EM>, either object-code or a script with the
+    magic cookie trick '<CODE>#!/path/to/interpreter</CODE>' as the first
+    line).
     <P>
     This program gets started once at startup of the Apache servers and then
     communicates with the rewriting engine over its <CODE>stdin</CODE> and
     <CODE>stdout</CODE> file-handles.  For each map-function lookup it will
     receive the key to lookup as a newline-terminated string on
     <CODE>stdin</CODE>. It then has to give back the looked-up value as a
-    newline-terminated string on <CODE>stdout</CODE> or the four-character string
-    ``<CODE>NULL</CODE>'' if it fails (i.e. there is no corresponding value
+    newline-terminated string on <CODE>stdout</CODE> or the four-character
+    string ``<CODE>NULL</CODE>'' if it fails (<EM>i.e.</EM>, there is no
+    corresponding value
     for the given key). A trivial program which will implement a 1:1 map
-    (i.e. key == value) could be:
+    (<EM>i.e.</EM>, key == value) could be:
     <P>
 <TABLE BORDER=0 CELLSPACING=1 CELLPADDING=5 BGCOLOR="#F0F0F0">
 <TR><TD><PRE>
 #!/usr/bin/perl
 $| = 1;
 while (&lt;STDIN&gt;) {
@@ -777,34 +795,35 @@
     But be very careful:<BR>
     <OL>
     <LI>``<EM>Keep the program simple, stupid</EM>'' (KISS), because
         if this program hangs it will lead to a hang of the Apache server
         when the rule occurs.
     <LI>Avoid one common mistake: never do buffered I/O on <CODE>stdout</CODE>!
-        This will cause a deadloop! Hence the ``<CODE>$|=1</CODE>'' in the above
-        example...
+        This will cause a deadloop! Hence the ``<CODE>$|=1</CODE>'' in the
+        above example...
     <LI>Use the <SAMP>RewriteLock</SAMP> directive to define a lockfile
         mod_rewrite can use to synchronize the communication to the program.
         Per default no such synchronization takes place.
     </OL>
 </UL>
 
 The <CODE>RewriteMap</CODE> directive can occur more than once. For each
 mapping-function use one <CODE>RewriteMap</CODE> directive to declare its
-rewriting mapfile. While you cannot <STRONG>declare</STRONG> a map in per-directory
-context it is of course possible to <STRONG>use</STRONG> this map in per-directory
-context.
+rewriting mapfile. While you cannot <STRONG>declare</STRONG> a map in
+per-directory context it is of course possible to <STRONG>use</STRONG>
+this map in per-directory context.
 
 <P>
 <TABLE WIDTH="70%" BORDER=0 BGCOLOR="#E0E0F0" CELLSPACING=0 CELLPADDING=10>
 <TR><TD>
-<STRONG>Notice:</STRONG> For plain text and DBM format files the looked-up keys are cached in-core
+<STRONG>Notice:</STRONG> For plain text and DBM format files the looked-up
+keys are cached in-core
 until the <CODE>mtime</CODE> of the mapfile changes or the server does a
 restart. This way you can have map-functions in rules which are used
-for <STRONG>every</STRONG> request. This is no problem, because the external lookup
-only happens once!
+for <STRONG>every</STRONG> request. This is no problem, because the
+external lookup only happens once!
 </TD></TR>
 </TABLE>
 
 <P>
 <HR NOSHADE SIZE=1>
 <P>
@@ -814,13 +833,14 @@
  HREF="directive-dict.html#Syntax"
  REL="Help"
 ><STRONG>Syntax:</STRONG></A> <CODE>RewriteBase</CODE> <EM>BaseURL</EM><BR>
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
-><STRONG>Default:</STRONG></A> <EM>default is the physical directory path</EM><BR>
+><STRONG>Default:</STRONG></A> <EM>default is the physical directory path</EM>
+<BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
 ><STRONG>Context:</STRONG></A> directory, .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
@@ -840,13 +860,13 @@
 ><STRONG>Compatibility:</STRONG></A> Apache 1.2<BR>
 
 <P>
 The <CODE>RewriteBase</CODE> directive explicitly sets the base URL for
 per-directory rewrites. As you will see below, <CODE>RewriteRule</CODE> can be
 used in per-directory config files (<CODE>.htaccess</CODE>). There it will act
-locally, i.e. the local directory prefix is stripped at this stage of
+locally, <EM>i.e.</EM>, the local directory prefix is stripped at this stage of
 processing and your rewriting rules act only on the remainder. At the end
 it is automatically added.
 
 <P>
 When a substitution occurs for a new URL, this module has to re-inject the URL
 into the server processing. To be able to do this it needs to know what the
@@ -856,14 +876,15 @@
 assumption will be usually be wrong!</STRONG> There you have to use the
 <CODE>RewriteBase</CODE> directive to specify the correct URL-prefix.
 
 <P>
 <TABLE WIDTH="70%" BORDER=0 BGCOLOR="#E0E0F0" CELLSPACING=0 CELLPADDING=10>
 <TR><TD>
-<STRONG>Notice:</STRONG> If your webserver's URLs are <STRONG>not</STRONG> directly
-related to physical file paths, you have to use <CODE>RewriteBase</CODE> in every
+<STRONG>Notice:</STRONG> If your webserver's URLs are <STRONG>not</STRONG>
+directly related to physical file paths, you have to use
+<CODE>RewriteBase</CODE> in every
 <CODE>.htaccess</CODE> files where you want to use <CODE>RewriteRule</CODE>
 directives.
 </TD></TR>
 </TABLE>
 
 <P>
@@ -874,14 +895,14 @@
 
 <P>
 <TABLE BORDER=0 CELLSPACING=1 CELLPADDING=5 BGCOLOR="#F0F0F0">
 <TR><TD><PRE>
 #
 #  /abc/def/.htaccess -- per-dir config file for directory /abc/def
-#  Remember: /abc/def is the physical path of /xyz, i.e. the server
-#            has a 'Alias /xyz /abc/def' directive e.g.
+#  Remember: /abc/def is the physical path of /xyz, <EM>i.e.</EM>, the server
+#            has a 'Alias /xyz /abc/def' directive <EM>e.g.</EM>
 #
 
 RewriteEngine On
 
 #  let the server know that we are reached via /xyz and not
 #  via the physical path prefix /abc/def
@@ -890,13 +911,14 @@
 #  now the rewriting rules
 RewriteRule   ^oldstuff\.html$  newstuff.html
 </PRE></TD></TR>
 </TABLE>
 
 <P>
-In the above example, a request to <CODE>/xyz/oldstuff.html</CODE> gets correctly
+In the above example, a request to <CODE>/xyz/oldstuff.html</CODE>
+gets correctly
 rewritten to the physical file <CODE>/abc/def/newstuff.html</CODE>.
 
 <P>
 <TABLE WIDTH="70%" BORDER=0 BGCOLOR="#E0E0F0" CELLSPACING=0 CELLPADDING=10>
 <TR><TD>
 <FONT SIZE=-1>
@@ -907,16 +929,16 @@
 <P>
 <PRE>
 Request:
   /xyz/oldstuff.html
 
 Internal Processing:
-  /xyz/oldstuff.html     -&gt; /abc/def/oldstuff.html    (per-server Alias)
-  /abc/def/oldstuff.html -&gt; /abc/def/newstuff.html    (per-dir    RewriteRule)
-  /abc/def/newstuff.html -&gt; /xyz/newstuff.html        (per-dir    RewriteBase)
-  /xyz/newstuff.html     -&gt; /abc/def/newstuff.html    (per-server Alias)
+  /xyz/oldstuff.html     -&gt; /abc/def/oldstuff.html  (per-server Alias)
+  /abc/def/oldstuff.html -&gt; /abc/def/newstuff.html  (per-dir    RewriteRule)
+  /abc/def/newstuff.html -&gt; /xyz/newstuff.html      (per-dir    RewriteBase)
+  /xyz/newstuff.html     -&gt; /abc/def/newstuff.html  (per-server Alias)
 
 Result:
   /abc/def/newstuff.html
 </PRE>
 
 This seems very complicated but is the correct Apache internal processing,
@@ -938,21 +960,23 @@
 <P>
 
 <H3><A NAME="RewriteCond">RewriteCond</A></H3>
 <A
  HREF="directive-dict.html#Syntax"
  REL="Help"
-><STRONG>Syntax:</STRONG></A> <CODE>RewriteCond</CODE> <EM>TestString</EM> <EM>CondPattern</EM><BR>
+><STRONG>Syntax:</STRONG></A> <CODE>RewriteCond</CODE> <EM>TestString</EM>
+    <EM>CondPattern</EM><BR>
 <A
  HREF="directive-dict.html#Default"
  REL="Help"
 ><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
 <A
  HREF="directive-dict.html#Context"
  REL="Help"
-><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
+><STRONG>Context:</STRONG></A> server config, virtual host, directory,
+     .htaccess<BR>
 <A
  HREF="directive-dict.html#Override"
  REL="Help"
 ><STRONG>Override:</STRONG></A> <EM>FileInfo</EM><BR>
 <A
  HREF="directive-dict.html#Status"
@@ -970,20 +994,22 @@
 <P>
 The <CODE>RewriteCond</CODE> directive defines a rule condition. Precede a
 <CODE>RewriteRule</CODE> directive with one or more <CODE>RewriteCond</CODE>
 directives.
 
 The following rewriting rule is only used if its pattern matches the current
-state of the URI <STRONG>and</STRONG> if these additional conditions apply, too.
+state of the URI <STRONG>and</STRONG> if these additional conditions apply
+too.
 
 <P>
 <EM>TestString</EM> is a string which can contains the following
 expanded constructs in addition to plain text:
 
 <UL>
-<LI><STRONG>RewriteRule backreferences</STRONG>: These are backreferences of the form
+<LI><STRONG>RewriteRule backreferences</STRONG>: These are backreferences of
+    the form
 
 <BLOCKQUOTE><STRONG>
 <CODE>$N</CODE>
 </STRONG></BLOCKQUOTE>
 
 (1 &lt;= N &lt;= 9) which provide access to the grouped parts (parenthesis!)
@@ -996,15 +1022,15 @@
 the form
 
 <BLOCKQUOTE><STRONG>
 <CODE>%N</CODE>
 </STRONG></BLOCKQUOTE>
 
-(1 &lt;= N &lt;= 9) which provide access to the grouped parts (parenthesis!) of the
-pattern from the last matched <CODE>RewriteCond</CODE> directive in the current
-bunch of conditions.
+(1 &lt;= N &lt;= 9) which provide access to the grouped parts (parenthesis!) of
+the pattern from the last matched <CODE>RewriteCond</CODE> directive in the
+current bunch of conditions.
 
 <P>
 <LI><STRONG>Server-Variables</STRONG>: These are variables
     of the form
 
 <BLOCKQUOTE><STRONG>
@@ -1054,13 +1080,12 @@
 DOCUMENT_ROOT<BR>
 SERVER_ADMIN<BR>
 SERVER_NAME<BR>
 SERVER_PORT<BR>
 SERVER_PROTOCOL<BR>
 SERVER_SOFTWARE<BR>
-SERVER_VERSION<BR>
 </FONT>
 </TD>
 
 <TD VALIGN=TOP>
 <STRONG>system stuff:</STRONG><P>
 <FONT SIZE=-1>
@@ -1101,23 +1126,25 @@
 
 <P>
 Special Notes:
 
 <OL>
 <LI>The variables SCRIPT_FILENAME and REQUEST_FILENAME contain the same
-value, i.e. the value of the <CODE>filename</CODE> field of the internal
-<CODE>request_rec</CODE> structure of the Apache server. The first name is just the
+value, <EM>i.e.</EM>, the value of the <CODE>filename</CODE> field of
+the internal
+<CODE>request_rec</CODE> structure of the Apache server. The first name is
+just the
 commonly known CGI variable name while the second is the consistent
 counterpart to REQUEST_URI (which contains the value of the <CODE>uri</CODE>
 field of <CODE>request_rec</CODE>).
 
 <P>
 <LI>There is the special format: <CODE>%{ENV:variable}</CODE> where
 <EM>variable</EM> can be any environment variable. This is looked-up via
-internal Apache structures and (if not found there) via <CODE>getenv()</CODE> from
-the Apache server process.
+internal Apache structures and (if not found there) via <CODE>getenv()</CODE>
+from the Apache server process.
 
 <P>
 <LI>There is the special format: <CODE>%{HTTP:header}</CODE> where
 <EM>header</EM> can be any HTTP MIME-header name. This is looked-up
 from the HTTP request. Example: <CODE>%{HTTP:Proxy-Connection}</CODE>
 is the value of the HTTP header ``<CODE>Proxy-Connection:</CODE>''.
@@ -1141,15 +1168,16 @@
 <LI>There is the special format: <CODE>%{LA-F:variable}</CODE> which perform an
 internal (filename-based) sub-request to determine the final value of
 <EM>variable</EM>. This is the most of the time the same as LA-U above.
 </OL>
 
 <P>
-<EM>CondPattern</EM> is the condition pattern, i.e. a regular expression
-which gets applied to the current instance of the <EM>TestString</EM>, i.e.
-<EM>TestString</EM> gets evaluated and then matched against
+<EM>CondPattern</EM> is the condition pattern, <EM>i.e.</EM>, a regular
+expression
+which gets applied to the current instance of the <EM>TestString</EM>,
+<EM>i.e.</EM>, <EM>TestString</EM> gets evaluated and then matched against
 <EM>CondPattern</EM>.
 
 <P>
 <STRONG>Remember:</STRONG> <EM>CondPattern</EM> is a standard
 <EM>Extended Regular Expression</EM> with some additions:
 
@@ -1201,16 +1229,17 @@
 Checks if <EM>TestString</EM> is a valid file and accessible via all the
 server's currently-configured access controls for that path.  This uses an
 internal subrequest to determine the check, so use it with care because it
 decreases your servers performance!
 <P>
 <LI>'<STRONG>-U</STRONG>' (is existing URL via subrequest)<BR>
-Checks if <EM>TestString</EM> is a valid URL and accessible via all the server's
+Checks if <EM>TestString</EM> is a valid URL and accessible via all the
+server's
 currently-configured access controls for that path.  This uses an internal
 subrequest to determine the check, so use it with care because it decreases
-your servers performance!
+your server's performance!
 </UL>
 <P>
 <TABLE WIDTH="70%" BORDER=0 BGCOLOR="#E0E0F0" CELLSPACING=0 CELLPADDING=10>
 <TR><TD>
 <STRONG>Notice:</STRONG>
 All of these tests can also be prefixed by a not ('!') character
@@ -1228,13 +1257,13 @@
 
 as the third argument to the <CODE>RewriteCond</CODE> directive. <EM>Flags</EM>
 is a comma-separated list of the following flags:
 
 <UL>
 <LI>'<STRONG><CODE>nocase|NC</CODE></STRONG>' (<STRONG>n</STRONG>o <STRONG>c</STRONG>ase)<BR>
-    This makes the condition test case-insensitive, i.e. there is
+    This makes the condition test case-insensitive, <EM>i.e.</EM>, there is
     no difference between 'A-Z' and 'a-z' both in the expanded
     <EM>TestString</EM> and the <EM>CondPattern</EM>.
 <P>
 <LI>'<STRONG><CODE>ornext|OR</CODE></STRONG>' (<STRONG>or</STRONG> next condition)<BR>
     Use this to combine rule conditions with a local OR instead of the
     implicit AND. Typical example:
@@ -1264,14 +1293,14 @@
 
 RewriteRule  ^/$                 /homepage.std.html  [L]
 </PRE></BLOCKQUOTE>
 
 Interpretation: If you use Netscape Navigator as your browser (which identifies
 itself as 'Mozilla'), then you get the max homepage, which includes
-Frames, etc. If you use the Lynx browser (which is Terminal-based), then you
-get the min homepage, which contains no images, no tables, etc.  If you
+Frames, <EM>etc.</EM> If you use the Lynx browser (which is Terminal-based), then you
+get the min homepage, which contains no images, no tables, <EM>etc.</EM>  If you
 use any other browser you get the standard homepage.
 </BLOCKQUOTE>
 
 <P>
 <HR NOSHADE SIZE=1>
 <P>
@@ -1349,24 +1378,24 @@
 <STRONG>Anchors:</STRONG>
   <STRONG><CODE>^</CODE></STRONG>           Start of line anchor
   <STRONG><CODE>$</CODE></STRONG>           End   of line anchor
 
 <STRONG>Escaping:</STRONG>
   <STRONG><CODE>\</CODE></STRONG>char       escape that particular char
-              (for instance to specify the chars "<CODE>.[]()</CODE>" etc.)
+              (for instance to specify the chars "<CODE>.[]()</CODE>" <EM>etc.</EM>)
 </PRE>
 </TD>
 </TR>
 </TABLE>
 
 <P>
 For more information about regular expressions either have a look at your
 local regex(3) manpage or its <CODE>src/regex/regex.3</CODE> copy in the
 Apache 1.3 distribution.  When you are interested in more detailed and deeper
 information about regular expressions and its variants (POSIX regex, Perl
-regex, etc.) have a look at the following dedicated book on this topic: 
+regex, <EM>etc.</EM>) have a look at the following dedicated book on this topic: 
 
 <BLOCKQUOTE>
 <EM>Mastering Regular Expressions</EM><BR>
 Jeffrey E.F. Friedl<BR>
 Nutshell Handbook Series<BR>
 O'Reilly &amp; Associates, Inc. 1997<BR>
@@ -1418,13 +1447,13 @@
 rewriting process goes on until there are no more rules (unless explicitly
 terminated by a <CODE><STRONG>L</STRONG></CODE> flag - see below).
 
 <P>
 There is a special substitution string named '<CODE>-</CODE>' which means:
 <STRONG>NO substitution</STRONG>! Sounds silly? No, it is useful to provide rewriting
-rules which <STRONG>only</STRONG> match some URLs but do no substitution, e.g. in
+rules which <STRONG>only</STRONG> match some URLs but do no substitution, <EM>e.g.</EM>, in
 conjunction with the <STRONG>C</STRONG> (chain) flag to be able to have more than one
 pattern to be applied before a substitution occurs.
 
 <P>
 One more note: You can even create URLs in the substitution string containing
 a query string part. Just use a question mark inside the substitution string
@@ -1472,79 +1501,81 @@
     force a external redirection. If no <EM>code</EM> is given a HTTP response
     of 302 (MOVED TEMPORARILY) is used. If you want to use other response
     codes in the range 300-400 just specify them as a number or use
     one of the following symbolic names: <CODE>temp</CODE> (default), <CODE>permanent</CODE>,
     <CODE>seeother</CODE>.
     Use it for rules which should
-    canonicalize the URL and gives it back to the client, e.g. translate
+    canonicalize the URL and gives it back to the client, <EM>e.g.</EM>, translate
     ``<CODE>/~</CODE>'' into ``<CODE>/u/</CODE>'' or always append a slash to
     <CODE>/u/</CODE><EM>user</EM>, etc.<BR>
     <P>
     <STRONG>Notice:</STRONG> When you use this flag, make sure that the
     substitution field is a valid URL! If not, you are redirecting to an
     invalid location!  And remember that this flag itself only prefixes the
     URL with <CODE>http://thishost[:thisport]/</CODE>, but rewriting goes on.
     Usually you also want to stop and do the redirection immediately.  To stop
     the rewriting you also have to provide the 'L' flag.
 <P>
 <LI>'<STRONG><CODE>forbidden|F</CODE></STRONG>' (force URL to be <STRONG>f</STRONG>orbidden)<BR>
-    This forces the current URL to be forbidden, i.e. it immediately sends
+    This forces the current URL to be forbidden, <EM>i.e.</EM>, it immediately sends
     back a HTTP response of 403 (FORBIDDEN). Use this flag in conjunction with
     appropriate RewriteConds to conditionally block some URLs.
 <P>
 <LI>'<STRONG><CODE>gone|G</CODE></STRONG>' (force URL to be <STRONG>g</STRONG>one)<BR>
-    This forces the current URL to be gone, i.e. it immediately sends back a
+    This forces the current URL to be gone, <EM>i.e.</EM>, it immediately sends back a
     HTTP response of 410 (GONE). Use this flag to mark no longer existing
     pages as gone.
 <P>
 <LI>'<STRONG><CODE>proxy|P</CODE></STRONG>' (force <STRONG>p</STRONG>roxy)<BR>
     This flag forces the substitution part to be internally forced as a proxy
-    request and immediately (i.e. rewriting rule processing stops here) put
-    through the proxy module. You have to make sure that the substitution
-    string is a valid URI (e.g. typically <CODE>http://</CODE>) which can
-    be handled by the Apache proxy module. If not you get an error from
-    the proxy module. Use this flag to achieve a more powerful implementation
-    of the <CODE>mod_proxy</CODE> directive <CODE>ProxyPass</CODE>, to map
-    some remote stuff into the namespace of the local server.
+    request and immediately (<EM>i.e.</EM>, rewriting rule processing stops here) put
+    through the <A HREF="mod_proxy.html">proxy module</A>. You have to make
+    sure that the substitution string is a valid URI (<EM>e.g.</EM>,  typically starting
+    with <CODE>http://</CODE><EM>hostname</EM>) which can be handled by the
+    Apache proxy module. If not you get an error from the proxy module. Use
+    this flag to achieve a more powerful implementation of the <A
+    HREF="mod_proxy.html#proxypass">ProxyPass</A> directive, to map some
+    remote stuff into the namespace of the local server.
     <P>
-    Notice: <STRONG>You really have to put <CODE>ProxyRequests On</CODE> into your
-    server configuration to prevent proxy requests from leading to core-dumps
-    inside the Apache kernel. If you have not compiled in the proxy module,
-    then there is no core-dump problem, because mod_rewrite checks for
-    existence of the proxy module and if lost forbids proxy URLs.  </STRONG>
+    Notice: To use this functionality make sure you have the proxy module
+    compiled into your Apache server program.  If you don't know please check
+    whether <CODE>mod_proxy.c</CODE> is part of the ``<CODE>httpd -l</CODE>''
+    output. If yes, this functionality is available to mod_rewrite. If not,
+    then you first have to rebuild the ``<CODE>httpd</CODE>'' program with
+    mod_proxy enabled.
 <P>
 <LI>'<STRONG><CODE>last|L</CODE></STRONG>' (<STRONG>l</STRONG>ast rule)<BR>
     Stop the rewriting process here and
     don't apply any more rewriting rules. This corresponds to the Perl
     <CODE>last</CODE> command or the <CODE>break</CODE> command from the C
     language. Use this flag to prevent the currently rewritten URL from being
     rewritten further by following rules which may be wrong. For
     example, use it to rewrite the root-path URL ('<CODE>/</CODE>') to a real
-    one, e.g. '<CODE>/e/www/</CODE>'.
+    one, <EM>e.g.</EM>, '<CODE>/e/www/</CODE>'.
 <P>
 <LI>'<STRONG><CODE>next|N</CODE></STRONG>' (<STRONG>n</STRONG>ext round)<BR>
     Re-run the rewriting process (starting again with the first rewriting
     rule). Here the URL to match is again not the original URL but the URL
     from the last rewriting rule.  This corresponds to the Perl
     <CODE>next</CODE> command or the <CODE>continue</CODE> command from the C
-    language. Use this flag to restart the rewriting process, i.e.  to
+    language. Use this flag to restart the rewriting process, <EM>i.e.</EM>,  to
     immediately go to the top of the loop. <BR>
     <STRONG>But be careful not to create a deadloop!</STRONG>
 <P>
 <LI>'<STRONG><CODE>chain|C</CODE></STRONG>' (<STRONG>c</STRONG>hained with next rule)<BR>
     This flag chains the current rule with the next rule (which itself can
-    also be chained with its following rule, etc.). This has the following
-    effect: if a rule matches, then processing continues as usual, i.e. the
+    also be chained with its following rule, <EM>etc.</EM>). This has the following
+    effect: if a rule matches, then processing continues as usual, <EM>i.e.</EM>, the
     flag has no effect. If the rule does <STRONG>not</STRONG> match, then all following
     chained rules are skipped.   For instance, use it to remove the
     ``<CODE>.www</CODE>'' part inside a per-directory rule set when you let an
     external redirect happen (where the ``<CODE>.www</CODE>'' part should not to
     occur!).
 <P>
-<LI>'<STRONG><CODE>type|T</CODE></STRONG>=<EM>mime-type</EM>' (force MIME <STRONG>t</STRONG>ype)<BR>
-    Force the MIME-type of the target file to be <EM>mime-type</EM>. For
+<LI>'<STRONG><CODE>type|T</CODE></STRONG>=<EM>MIME-type</EM>' (force MIME <STRONG>t</STRONG>ype)<BR>
+    Force the MIME-type of the target file to be <EM>MIME-type</EM>. For
     instance, this can be used to simulate the old <CODE>mod_alias</CODE>
     directive <CODE>ScriptAlias</CODE> which internally forces all files inside
     the mapped directory to have a MIME type of
     ``<CODE>application/x-httpd-cgi</CODE>''.
 <P>
 <LI>'<STRONG><CODE>nosubreq|NS</CODE></STRONG>' (used only if <STRONG>n</STRONG>o internal <STRONG>s</STRONG>ub-request)<BR>
@@ -1569,24 +1600,24 @@
 <P>
 <LI>'<STRONG><CODE>passthrough|PT</CODE></STRONG>' (<STRONG>p</STRONG>ass <STRONG>t</STRONG>hrough to next handler)<BR>
     This flag forces the rewriting engine to set the <CODE>uri</CODE> field
     of the internal <CODE>request_rec</CODE> structure to the value
     of the <CODE>filename</CODE> field.  This flag is just a hack to be able
     to post-process the output of <CODE>RewriteRule</CODE> directives by
-    <CODE>Alias</CODE>, <CODE>ScriptAlias</CODE>, <CODE>Redirect</CODE>, etc. directives
+    <CODE>Alias</CODE>, <CODE>ScriptAlias</CODE>, <CODE>Redirect</CODE>, <EM>etc.</EM> directives
     from other URI-to-filename translators. A trivial example to show the
     semantics:
     If you want to rewrite <CODE>/abc</CODE> to <CODE>/def</CODE> via the rewriting
     engine of <CODE>mod_rewrite</CODE> and then <CODE>/def</CODE> to <CODE>/ghi</CODE>
     with <CODE>mod_alias</CODE>:
     <PRE>
     RewriteRule ^/abc(.*)  /def$1 [PT]
     Alias       /def       /ghi
     </PRE>
     If you omit the <CODE>PT</CODE> flag then <CODE>mod_rewrite</CODE>
-    will do its job fine, i.e. it rewrites <CODE>uri=/abc/...</CODE> to
+    will do its job fine, <EM>i.e.</EM>, it rewrites <CODE>uri=/abc/...</CODE> to
     <CODE>filename=/def/...</CODE> as a full API-compliant URI-to-filename
     translator should do. Then <CODE>mod_alias</CODE> comes and tries to do a
     URI-to-filename transition which will not work.
     <P>
     Notice: <STRONG>You have to use this flag if you want to intermix directives
     of different modules which contain URL-to-filename translators</STRONG>. The
@@ -1616,13 +1647,13 @@
 <LI>'<STRONG><CODE>env|E=</CODE></STRONG><EM>VAR</EM>:<EM>VAL</EM>' (set <STRONG>e</STRONG>nvironment variable)<BR>
     This forces an environment variable named <EM>VAR</EM> to be set to the
     value <EM>VAL</EM>, where <EM>VAL</EM> can contain regexp backreferences
     <CODE>$N</CODE> and <CODE>%N</CODE> which will be expanded. You can use this flag
     more than once to set more than one variable. The variables can be later
     dereferenced at a lot of situations, but the usual location will be from
-    within XSSI (via <CODE>&lt;!--#echo var="VAR"--&gt;</CODE>) or CGI (e.g.
+    within XSSI (via <CODE>&lt;!--#echo var="VAR"--&gt;</CODE>) or CGI (<EM>e.g.</EM>
     <CODE>$ENV{'VAR'}</CODE>).  But additionally you can also dereference it in a
     following RewriteCond pattern via <CODE>%{ENV:VAR}</CODE>. Use this to strip
     but remember information from URLs.
 </UL>
 
 <P>
@@ -1701,13 +1732,13 @@
 </TD>
 </TR>
 </TABLE>
 
 <P>
 <STRONG>Inside per-directory configuration for <CODE>/somepath</CODE><BR>
-(i.e. file <CODE>.htaccess</CODE> in dir <CODE>/physical/path/to/somepath</CODE> containing
+(<EM>i.e.</EM>, file <CODE>.htaccess</CODE> in dir <CODE>/physical/path/to/somepath</CODE> containing
 <CODE>RewriteBase /somepath</CODE>)<BR> for
 request ``<CODE>GET /somepath/localpath/pathinfo</CODE>'':</STRONG><BR>
 
 <P>
 <TABLE BGCOLOR="#F0F0F0" CELLSPACING=0 CELLPADDING=5>
 <TR>
@@ -1765,19 +1796,19 @@
 <CODE>/u/</CODE> <EM>Username</EM>
 <CODE>/.../</CODE> <EM>File</EM>
 <CODE>.</CODE> <EM>Language</EM>
 </BLOCKQUOTE>
 <P>
 We take the rewrite mapfile from above and save it under
-<CODE>/anywhere/map.real-to-user</CODE>. Then we only have to add the
+<CODE>/path/to/file/map.txt</CODE>. Then we only have to add the
 following lines to the Apache server configuration file:
 
 <BLOCKQUOTE>
 <PRE>
-RewriteLog   /anywhere/rewrite.log
-RewriteMap   real-to-user               txt:/anywhere/map.real-to-host
+RewriteLog   /path/to/file/rewrite.log
+RewriteMap   real-to-user               txt:/path/to/file/map.txt
 RewriteRule  ^/([^/]+)/~([^/]+)/(.*)$   /u/${real-to-user:$2|nobody}/$3.$1
 </PRE>
 </BLOCKQUOTE>
 
 </BLOCKQUOTE>
 
@@ -1798,13 +1829,13 @@
 the <EM>logical</EM> Web-view to the current resource, while the standard CGI/SSI
 variables <CODE>SCRIPT_NAME</CODE> and <CODE>SCRIPT_FILENAME</CODE> contain the
 <EM>physical</EM> System-view. 
 
 <P>
 Notice: These variables hold the URI/URL <EM>as they were initially
-requested</EM>, i.e. in a state <EM>before</EM> any rewriting. This is
+requested</EM>, <EM>i.e.</EM>, in a state <EM>before</EM> any rewriting. This is
 important because the rewriting process is primarily used to rewrite logical
 URLs to physical pathnames.
 
 <P>
 <STRONG>Example:</STRONG>
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_speling.html apache_1.3.2/htdocs/manual/mod/mod_speling.html
--- apache_1.3.1/htdocs/manual/mod/mod_speling.html	1998-07-19 07:04:30.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_speling.html	1998-09-22 03:20:52.000000000 +0800
@@ -73,13 +73,19 @@
    HREF="directive-dict.html#Default"
    REL="Help"
   ><STRONG>Default:</STRONG></A> <CODE>CheckSpelling Off</CODE><BR>
   <A
    HREF="directive-dict.html#Context"
    REL="Help"
-  ><STRONG>Context:</STRONG></A> server config, virtual host<BR>
+  ><STRONG>Context:</STRONG></A> server config, virtual host,
+   directory, .htaccess<BR>
+  <A
+   HREF="directive-dict.html#Override"
+   REL="Help" 
+  ><STRONG>Override:</STRONG></A> Options
+  <BR>
   <A
    HREF="directive-dict.html#Status"
    REL="Help"
   ><STRONG>Status:</STRONG></A> Base<BR>
   <A
    HREF="directive-dict.html#Module"
@@ -88,26 +94,35 @@
   <A
    HREF="directive-dict.html#Compatibility"
    REL="Help"
   ><STRONG>Compatibility:</STRONG></A> CheckSpelling was available as a
   separately
   available module for Apache 1.1, but was limited to miscapitalizations.
-  As of Apache 1.3, it is part of the Apache distribution<!-- or:
-  available as a separate module-->.<P>
-
+  As of Apache 1.3, it is part of the Apache distribution.  Prior to
+  Apache 1.3.2, the <SAMP>CheckSpelling</SAMP> directive was only available
+  in the "server" and "virtual host" contexts.
+  <P>
   This directive enables or disables the spelling module. When enabled,
   keep in mind that
+  </P>
   <UL>
-  <LI>the directory scan which is necessary for the spelling
-      correction will have an impact on the server's performance
-      when many spelling corrections have to be performed at the same time.
-  <LI>the document trees should not contain sensitive files which could
-      be matched inadvertently, by a spelling "correction".
-  <LI>the module is unable to correct misspelled user names
-      (as in <CODE>http://my.host/~apahce/</CODE>), just file names or
-      directory names.
+   <LI>the directory scan which is necessary for the spelling
+       correction will have an impact on the server's performance
+       when many spelling corrections have to be performed at the same time.
+   </LI>
+   <LI>the document trees should not contain sensitive files which could
+       be matched inadvertently by a spelling "correction".
+   </LI>
+   <LI>the module is unable to correct misspelled user names
+       (as in <CODE>http://my.host/~apahce/</CODE>), just file names or
+       directory names.
+   </LI>
+   <LI>spelling corrections apply strictly to existing files, so a request for
+       the <SAMP>&lt;Location /status&gt;</SAMP> may get incorrectly treated
+       as the negotiated file "<SAMP>/stats.html</SAMP>".
+   </LI>
   </UL>
 
 <HR>
 
 <H3 ALIGN="CENTER">
  Apache HTTP Server Version 1.3
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_status.html apache_1.3.2/htdocs/manual/mod/mod_status.html
--- apache_1.3.1/htdocs/manual/mod/mod_status.html	1998-07-19 07:04:30.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_status.html	1998-09-22 03:20:52.000000000 +0800
@@ -50,12 +50,50 @@
 </UL>
 
 A compile-time option must be used to display the details marked "(*)" as
 the instrumentation required for obtaining these statistics does not
 exist within standard Apache.
 
+<H2><A NAME="extendedstatus">ExtendedStatus directive</A></H2>
+<!--%plaintext &lt;?INDEX {\tt ExtendedStatus} directive&gt; -->
+<A
+ HREF="directive-dict.html#Syntax"
+ REL="Help"
+><STRONG>Syntax:</STRONG></A> ExtendedStatus <EM>On|Off</EM><BR>
+<A
+ HREF="directive-dict.html#Default"
+ REL="Help"
+><STRONG>Default:</STRONG></A> <CODE>ExtendedStatus Off</CODE><BR>
+<A
+ HREF="directive-dict.html#Context"
+ REL="Help"
+><STRONG>Context:</STRONG></A> server config <BR>
+<A
+ HREF="directive-dict.html#Status"
+ REL="Help"
+><STRONG>Status:</STRONG></A> Base<BR>
+ <A
+  HREF="directive-dict.html#Module"
+  REL="Help"
+  ><STRONG>Module:</STRONG></A> mod_status<BR>
+<A
+ HREF="directive-dict.html#Compatibility"
+ REL="Help"
+><STRONG>Compatibility:</STRONG></A> ExtendedStatus is only available
+ in Apache 1.3.2 and later.
+
+<P>
+This directive controls whether the server keeps track of extended
+status information for each request. This is only useful if the status module
+is enabled on the server.
+</P>
+<P>
+This setting applies to the entire server, and cannot be enabled or
+disabled on a virtualhost-by-virtualhost basis.
+</P>
+
 <H2>Enabling Status Support</H2>
 
 To enable status reports only for browsers from the foo.com
 domain add this code to your <CODE>access.conf</CODE> configuration file
 <PRE>
     &lt;Location /server-status&gt;
@@ -82,28 +120,12 @@
 <H3>Machine Readable Status File</H3>
 A machine-readable version of the status file is available by accessing the
 page <CODE>http://your.server.name/server-status?auto</CODE>.  This is useful
 when automatically run, see the Perl program in the <CODE>/support</CODE>
 directory of Apache, <CODE>log_server_status</CODE>.
 
-<H2>Full Instrumentation</H2>
-
-To obtain full statistics you must compile Apache with a special
-directive.  On some machines there may be a small performance loss
-if you do this.  Try full statistics and see if you notice any
-difference.  If you do please contact <A HREF="mailto:mark@ukweb.com">
-mark@ukweb.com</A> and tell me your configuration.
-
-<P>
-
-Do this by adding the following to the AUX_CFLAGS line in the
-"Configuration" file and then recompiling as usual.
-<PRE>
-        AUX_CFLAGS= (something) -DSTATUS
-</PRE>
-
 <BLOCKQUOTE>
  <STRONG>
   It should be noted that if <SAMP>mod_status</SAMP> is compiled into
   the server, its handler capability is available in <EM>all</EM>
   configuration files, including <EM>per</EM>-directory files
   (<EM>e.g.</EM>, <SAMP>.htaccess</SAMP>).  This may have
diff -BEr -U 6 apache_1.3.1/htdocs/manual/mod/mod_unique_id.html apache_1.3.2/htdocs/manual/mod/mod_unique_id.html
--- apache_1.3.1/htdocs/manual/mod/mod_unique_id.html	1998-07-19 07:04:30.000000000 +0800
+++ apache_1.3.2/htdocs/manual/mod/mod_unique_id.html	1998-09-22 03:20:52.000000000 +0800
@@ -104,13 +104,13 @@
 Suppose that time repeats itself for some reason.  That is, suppose that
 the system's clock is screwed up and it revisits a past time (or it is
 too far forward, is reset correctly, and then revisits the future time).
 In this case we can easily show that we can get pid and time stamp reuse.
 The choice of initializer for the counter is intended to help defeat this.
 Note that we really want a random number to initialize the counter,
-but there aren't any readily available numbers on most systems (i.e. you
+but there aren't any readily available numbers on most systems (<EM>i.e.</EM>, you
 can't use rand() because you need to seed the generator, and can't seed
 it with the time because time, at least at one second resolution, has
 repeated itself).  This is not a perfect defense.
 
 <P>
 How good a defense is it?  Well suppose that one of your machines serves
diff -BEr -U 6 apache_1.3.1/htdocs/manual/new_features_1_1.html apache_1.3.2/htdocs/manual/new_features_1_1.html
--- apache_1.3.1/htdocs/manual/new_features_1_1.html	1998-07-19 07:04:22.000000000 +0800
+++ apache_1.3.2/htdocs/manual/new_features_1_1.html	1998-09-22 03:20:47.000000000 +0800
@@ -164,13 +164,13 @@
 have different error messages for different sections of a site.
 
 <LI><STRONG><CODE>ForceType</CODE> Directive</STRONG>
 <BR>
 This new directive, in <CODE>&lt;Directory&gt;</CODE> sections or
 .htaccess files, allows you to override the filename extensions and
-force a single content type. (e.g. <CODE>ForceType
+force a single content type. (<EM>e.g.</EM>, <CODE>ForceType
 application/octet-stream</CODE>)
 
 <LI><STRONG>File Owner Available to Included CGI Scripts</STRONG>
 <BR>
 Server-side includes that call CGI scripts will now set a
 <CODE>USER_NAME</CODE> environment variable that contains the owner of
diff -BEr -U 6 apache_1.3.1/htdocs/manual/new_features_1_2.html apache_1.3.2/htdocs/manual/new_features_1_2.html
--- apache_1.3.1/htdocs/manual/new_features_1_2.html	1998-07-19 07:04:22.000000000 +0800
+++ apache_1.3.2/htdocs/manual/new_features_1_2.html	1998-09-22 03:20:47.000000000 +0800
@@ -142,13 +142,13 @@
 variables, input headers, POST data, output, and more. This makes CGI
 scripts much easier to debug.
 
 <LI><STRONG><A HREF="mod/core.html#rlimit">Resource Limits for CGI
 Scripts</A></STRONG><BR>
 New directives allow the limiting of resources used by CGI scripts
-(e.g. max CPU time). This is helpful in preventing 'runaway' CGI
+(<EM>e.g.</EM>, max CPU time). This is helpful in preventing 'runaway' CGI
 processes.
 
 <LI><STRONG><A HREF="mod/mod_alias.html">Redirect Directive Can Return
 Alternate Status</A></STRONG><BR>
     The Redirect directive can return permanent or temporary redirects,
     "Gone" or "See Other" HTTP status. For NCSA-compatibility,
diff -BEr -U 6 apache_1.3.1/htdocs/manual/new_features_1_3.html apache_1.3.2/htdocs/manual/new_features_1_3.html
--- apache_1.3.1/htdocs/manual/new_features_1_3.html	1998-07-19 07:04:22.000000000 +0800
+++ apache_1.3.2/htdocs/manual/new_features_1_3.html	1998-09-22 03:20:47.000000000 +0800
@@ -24,13 +24,13 @@
 problems.</P>
 
 <P>If you're upgrading from Apache 1.2, you may wish to read
 the <A HREF="upgrading_to_1_3.html">upgrade notes</A>.
 
 <P>Enhancements: <A HREF="#core">Core</A> |
-<A HREF="#perf">Performance</A> |
+<A HREF="#performance">Performance</A> |
 <A HREF="#config">Configuration</A> |
 <A HREF="#mod">Modules</A> |
 <A HREF="#api">API</A> |
 <A HREF="#misc">Misc</A>
 
 <P><HR>
@@ -40,13 +40,14 @@
 <DL>
 <DT><STRONG><A HREF="dso.html">Dynamic Shared Object (DSO) support</A></STRONG>
 <DD>Apache modules may now be loaded at runtime; this means that
     modules can be loaded into the server process space only when necessary,
     thus overall memory usage by Apache will be significantly reduced.  DSO
     currently is supported on FreeBSD, OpenBSD, NetBSD, Linux, Solaris, SunOS,
-    OSF1, IRIX, HP/UX, UnixWare, AIX, ReliantUnix and generic SVR4 platforms.
+    Digital UNIX, IRIX, HP/UX, UnixWare, AIX, ReliantUnix and generic SVR4
+    platforms.
 
 <DT><STRONG><A HREF="windows.html">Support for Windows NT/95</A></STRONG>
 <DD>Apache now experimentally supports the Windows NT and Windows 95
     operating systems.
 
 <DT><STRONG><A HREF="sourcereorg.html">Re-organized 
@@ -222,12 +223,34 @@
     every other hit.  ("Unique" has some restrictions on it.)  The
     identifier is available in the environment variable
     <CODE>UNIQUE_ID</CODE>.
 
 <DT><STRONG>mod_proxy enhancements:</STRONG>
 <UL>
+<LI>Easier and safer authentification for ftp proxy logins:
+    When no ftp user name and/or password is specified in the
+    URL, but the destination ftp server requires one, apache now
+    returns a "[401] Authorization Required" status. This status code
+    usually makes the client browser pop up an "Enter user name and
+    password" dialog, and the request is retried with the given user
+    authentification. That is slightly more secure than specifying
+    the authentication information as part of the request URL,
+    where it could be logged in plaintext by older proxy servers.
+<LI>The new <SAMP>AllowCONNECT</SAMP> directive allows configuration
+    of the port numbers to which the proxy CONNECT method may connect.
+    That allows proxying to https://some.server:8443/ which resulted
+    in an error message prior to Apache version 1.3.2.
+<LI>The proxy now supports the HTTP/1.1 "Via:" header as specified in
+    RFC2068. The new
+    <A HREF="mod/mod_proxy.html#proxyvia"><CODE>ProxyVia</CODE></A>
+    directive allows switching "Via:" support off or on, or
+    suppressing outgoing "Via:" header lines altogether for privacy
+    reasons.
+<LI>The "Max-Forwards:" TRACE header specified in HTTP/1.1 is now
+    supported. With it, you can trace the path of a request along a
+    chain of proxies (if they, too, support it).
 <LI><A
     HREF="mod/mod_proxy.html#noproxy"><CODE>NoProxy</CODE></A> and <A
     HREF="mod/mod_proxy.html#proxydomain"><CODE>ProxyDomain</CODE></A>
     directives added to proxy, useful for intranets.
 <LI>New <CODE><A HREF="mod/mod_proxy.html#proxypassreverse">
     ProxyPassReverse</A></CODE> directive.  It lets Apache adjust the
@@ -271,12 +294,18 @@
 
     <LI><STRONG><CODE>IconHeight</CODE> and <CODE>IconWidth</CODE></STRONG> let
         you set
         height and width attributes to the <CODE>&lt;IMG&gt;</CODE> tag in
         directory listings.
 
+    <LI>The <A HREF="mod/mod_autoindex.html#fancyindexing"
+        ><SAMP>FancyIndexing</SAMP></A> directive now correctly has
+        the same impact as <SAMP>IndexOptions&nbsp;FancyIndexing</SAMP>
+	without replacing the effect of any existing <SAMP>IndexOptions</SAMP>
+	directive.
+
     </UL>
 
 <DT><STRONG>Less Buffering of CGI Script Output</STRONG>
 <DD>In previous versions of Apache, the output from CGI scripts would
     be internally buffered by the server, and wouldn't be forwarded to
     the client until either the buffers were full or the CGI script
@@ -553,13 +582,13 @@
     server.  See the <CODE>src/ap/</CODE> subdirectory.
 
 <DT><STRONG>New <CODE><A HREF="mod/core.html#serversignature">
     ServerSignature</A></CODE> directive</STRONG>
 <DD>This directive optionally adds a line containing the server
     version and virtual host name to server-generated pages (error
-    documents, ftp directory listings, mod_info output etc.). This
+    documents, ftp directory listings, mod_info output <EM>etc.</EM>). This
     makes it easier for users to tell which server produced the error
     message, especially in a proxy chain (often found in intranet
     environments).
 
 <DT><STRONG>New <CODE><A HREF="mod/core.html#usecanonicalname">
     UseCanonicalName</A></CODE> directive</STRONG>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/sourcereorg.html apache_1.3.2/htdocs/manual/sourcereorg.html
--- apache_1.3.1/htdocs/manual/sourcereorg.html	1998-07-19 07:04:22.000000000 +0800
+++ apache_1.3.2/htdocs/manual/sourcereorg.html	1998-09-22 03:20:47.000000000 +0800
@@ -256,13 +256,13 @@
 from the compiler. Anything between the lines which contains
 <CODE>MODULE-DEFINITION-START</CODE> and
 <CODE>MODULE-DEFINITION-END</CODE> is used by <CODE>Configure</CODE>.
 The <CODE>Name:</CODE> line gives the module's structure name. This is
 not really necessary in this case since if not present
 <CODE>Configure</CODE> will guess at a name based on the filename
-(e.g. given "mod_demo" it will remove the leading "mod_" and append
+(<EM>e.g.</EM>, given "mod_demo" it will remove the leading "mod_" and append
 "_module" to get a structure name. This works with all modules
 distributed with Apache).
 
 <P>
 
 The lines between <CODE>ConfigStart</CODE> and <CODE>ConfigEnd</CODE>
@@ -283,13 +283,13 @@
 information to the source file. In this case it can be placed in a
 separate file which has the same base name as the object or library
 file, but with a <CODE>.module</CODE> extension. So, for example, if
 the distributed module object file is mod_demo.o, the module
 definition file should be called mod_demo.module. It contains the same
 information as above, but does not need to be inside a C comment or
-delimited with <CODE>MODULE-DEFINITION-START</CODE> etc. For example:
+delimited with <CODE>MODULE-DEFINITION-START</CODE> <EM>etc.</EM> For example:
 
 <PRE>
 Name: demo_module
 ConfigStart
  LIBS="$LIBS $DBM_LIB"
  if [ "X$DBM_LIB" != "X" ]; then
diff -BEr -U 6 apache_1.3.1/htdocs/manual/suexec.html apache_1.3.2/htdocs/manual/suexec.html
--- apache_1.3.1/htdocs/manual/suexec.html	1998-07-19 07:04:22.000000000 +0800
+++ apache_1.3.2/htdocs/manual/suexec.html	1998-09-22 03:20:47.000000000 +0800
@@ -392,24 +392,29 @@
 <STRONG>COMPILING APACHE FOR USE WITH SUEXEC</STRONG><BR>
 By default, Apache is compiled to look for the suEXEC wrapper in the following
 location.
 </P>
 
 <P ALIGN="LEFT">
-<EM>From src/httpd.h</EM>
+<EM>From src/include/httpd.h</EM>
 <PRE>
-     /* The path to the suEXEC wrapper */
-     #define SUEXEC_BIN "/usr/local/apache/sbin/suexec"
+     /* The path to the suExec wrapper, can be overridden in Configuration */
+     #ifndef SUEXEC_BIN
+     #define SUEXEC_BIN  HTTPD_ROOT "/sbin/suexec"
+     #endif
 </PRE>
 </P>
 
 <P ALIGN="LEFT">
 If your installation requires location of the wrapper program in a different
-directory, edit src/httpd.h and recompile your Apache server.
-See <A HREF="install.html">Compiling and Installing Apache</A> for more
-info on this process.
+directory, either add
+<CODE>-DSUEXEC_BIN=\"<EM>&lt;/your/path/to/suexec&gt;</EM>\"</CODE>
+to your CFLAGS (or edit src/include/httpd.h) and recompile your Apache server.
+See <A HREF="install.html">Compiling and Installing Apache</A>
+(and the <SAMP>INSTALL</SAMP> file in the source distribution)
+for more info on this process.
 </P>
 
 <P ALIGN="LEFT">
 <STRONG>COPYING THE SUEXEC BINARY TO ITS PROPER LOCATION</STRONG><BR>
 Copy the <STRONG><EM>suexec</EM></STRONG> executable created in the
 exercise above to the defined location for <STRONG>SUEXEC_BIN</STRONG>.
diff -BEr -U 6 apache_1.3.1/htdocs/manual/upgrading_to_1_3.html apache_1.3.2/htdocs/manual/upgrading_to_1_3.html
--- apache_1.3.1/htdocs/manual/upgrading_to_1_3.html	1998-07-19 07:04:24.000000000 +0800
+++ apache_1.3.2/htdocs/manual/upgrading_to_1_3.html	1998-09-22 03:20:47.000000000 +0800
@@ -75,12 +75,22 @@
       procedure for the complete Apache package.
 </UL>
 
 <H3>Run-Time Configuration Changes</H3>
 
 <UL>
+  <LI>As of 1.3.2, <A HREF="mod/mod_expires.html"><CODE>mod_expires</CODE></A>
+    will add Expires headers to content that does not come from a file 
+    on disk, unless you are using a modification time based setting.
+    Previously, it would never add an Expires header unless content came
+    from a file on disk.  This could result in Expires headers being added
+    in places where they were not previously added.
+  <LI>Standalone <STRONG><SAMP>FancyIndexing</SAMP></STRONG> directives
+    are now combined with the settings of any <SAMP>IndexOptions</SAMP>
+    directive already in effect, rather than replacing them.
+  </LI>
   <LI><STRONG><SAMP>AuthName</SAMP> strings will need to be quoted</STRONG>
     in <SAMP>.htaccess</SAMP> or server configuration files if they contain
     blank characters (like spaces). For example, if you use
     an <SAMP>AuthName</SAMP> directive like this:
     <P>
     <PRE>
@@ -201,13 +211,13 @@
     CGI scripts.  This means that data will be sent to the client
     as soon as the CGI pauses or stops output; previously, Apache would
     buffer the output up to a fixed buffer size before sending, which
     could result in the user viewing an empty page until the CGI finished
     or output a complete buffer.  It is no longer necessary to use an
     "nph-" CGI to get unbuffered output.  Given that most CGIs are written
-    in a language that by default does buffering (e.g. perl) this
+    in a language that by default does buffering (<EM>e.g.</EM>, perl) this
     shouldn't have a detrimental effect on performance.
 
     <P>"nph-" CGIs, which formerly provided a direct socket to the client
     without any server post-processing, were not fully compatible with
     HTTP/1.1 or SSL support.  As such they would have had to implement
     the transport details, such as encryption or chunking, in order
@@ -225,16 +235,17 @@
 changes in third party modules not maintained by Apache.
 
 <UL>
   <LI>
    To avoid symbol clashes with third-party code compiled into the server, the
    general prefix `<CODE>ap_</CODE>' was globally applied to the following
-   classes of symbols: Apache provided general functions (e.g.,
-   <CODE>ap_cpystrn</CODE>), public API functions (e.g., <CODE>palloc</CODE>,
+   classes of symbols: Apache provided general functions (<EM>e.g.</EM>,
+   <CODE>ap_cpystrn</CODE>), public API functions (<EM>e.g.</EM>,
+   <CODE>palloc</CODE>,
    <CODE>bgets</CODE>) and private functions which can't be made static
-   (because of cross-object usage) but should be (e.g.,
+   (because of cross-object usage) but should be (<EM>e.g.</EM>,
    <CODE>new_connection</CODE>).  For backward source compatibility with
    Apache 1.2 a new header file named <CODE>compat.h</CODE> was created which
    provides defines for the old symbol names.
    You'll either have to <CODE>#include compat.h</CODE> or update the API
    symbols you use.
   </LI>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/vhosts/details_1_2.html apache_1.3.2/htdocs/manual/vhosts/details_1_2.html
--- apache_1.3.1/htdocs/manual/vhosts/details_1_2.html	1998-07-19 07:04:33.000000000 +0800
+++ apache_1.3.2/htdocs/manual/vhosts/details_1_2.html	1998-09-22 03:20:53.000000000 +0800
@@ -32,41 +32,41 @@
 <H3>Config File Parsing</H3>
 
 <P>There is a main_server which consists of all the definitions appearing
 outside of <CODE>VirtualHost</CODE> sections.  There are virtual servers,
 called <EM>vhosts</EM>, which are defined by
 <A
- HREF="mod/core.html#virtualhost"
+ HREF="../mod/core.html#virtualhost"
 ><SAMP>VirtualHost</SAMP></A>
 sections.
 
 <P>The directives
 <A
- HREF="mod/core.html#port"
+ HREF="../mod/core.html#port"
 ><SAMP>Port</SAMP></A>,
 <A
- HREF="mod/core.html#servername"
+ HREF="../mod/core.html#servername"
 ><SAMP>ServerName</SAMP></A>,
 <A
- HREF="mod/core.html#serverpath"
+ HREF="../mod/core.html#serverpath"
 ><SAMP>ServerPath</SAMP></A>,
 and
 <A
- HREF="mod/core.html#serveralias"
+ HREF="../mod/core.html#serveralias"
 ><SAMP>ServerAlias</SAMP></A>
 can appear anywhere within the definition of
 a server.  However, each appearance overrides the previous appearance
 (within that server).
 
 <P>The default value of the <CODE>Port</CODE> field for main_server
 is 80.  The main_server has no default <CODE>ServerName</CODE>,
 <CODE>ServerPath</CODE>, or <CODE>ServerAlias</CODE>.
 
 <P>In the absence of any
 <A
- HREF="mod/core.html#listen"
+ HREF="../mod/core.html#listen"
 ><SAMP>Listen</SAMP></A>
 directives, the (final if there
 are multiple) <CODE>Port</CODE> directive in the main_server indicates
 which port httpd will listen on.
 
 <P> The <CODE>Port</CODE> and <CODE>ServerName</CODE> directives for
@@ -117,35 +117,35 @@
 After parsing has completed, the list of servers is scanned, and various
 merges and default values are set.  In particular:
 
 <OL>
 <LI>If a vhost has no
     <A
-     HREF="mod/core.html#serveradmin"
+     HREF="../mod/core.html#serveradmin"
     ><CODE>ServerAdmin</CODE></A>,
     <A
-     HREF="mod/core.html#resourceconfig"
+     HREF="../mod/core.html#resourceconfig"
     ><CODE>ResourceConfig</CODE></A>,
     <A
-     HREF="mod/core.html#accessconfig"
+     HREF="../mod/core.html#accessconfig"
     ><CODE>AccessConfig</CODE></A>,
     <A
-     HREF="mod/core.html#timeout"
+     HREF="../mod/core.html#timeout"
     ><CODE>Timeout</CODE></A>,
     <A
-     HREF="mod/core.html#keepalivetimeout"
+     HREF="../mod/core.html#keepalivetimeout"
     ><CODE>KeepAliveTimeout</CODE></A>,
     <A
-     HREF="mod/core.html#keepalive"
+     HREF="../mod/core.html#keepalive"
     ><CODE>KeepAlive</CODE></A>,
     <A
-     HREF="mod/core.html#maxkeepaliverequests"
+     HREF="../mod/core.html#maxkeepaliverequests"
     ><CODE>MaxKeepAliveRequests</CODE></A>,
     or
     <A
-     HREF="mod/core.html#sendbuffersize"
+     HREF="../mod/core.html#sendbuffersize"
     ><CODE>SendBufferSize</CODE></A>
     directive then the respective value is
     inherited from the main_server.  (That is, inherited from whatever
     the final setting of that value is in the main_server.)
 
 <LI>The &quot;lookup defaults&quot; that define the default directory
diff -BEr -U 6 apache_1.3.1/htdocs/manual/vhosts/details.html apache_1.3.2/htdocs/manual/vhosts/details.html
--- apache_1.3.1/htdocs/manual/vhosts/details.html	1998-07-19 07:04:33.000000000 +0800
+++ apache_1.3.2/htdocs/manual/vhosts/details.html	1998-09-22 03:20:53.000000000 +0800
@@ -310,13 +310,13 @@
     
 <LI>A <CODE>_default_</CODE> vhost catches a request only if there is no
     other vhost with a matching IP address <EM>and</EM> a matching port
     number for the request. The request is only caught if the port number
     to which the client sent the request matches the port number of your
     <CODE>_default_</CODE> vhost which is your standard <CODE>Port</CODE>
-    by default. A wildcard port can be specified (i.e.
+    by default. A wildcard port can be specified (<EM>i.e.</EM>,
     <CODE>_default_:*</CODE>) to catch requests to any available port.
     <P>
     
 <LI>The main_server is only used to serve a request if the IP address
     and port number to which the client connected is unspecified
     and does not match any other vhost (including a <CODE>_default_</CODE>
@@ -325,13 +325,14 @@
     <CODE>_default_</CODE> vhost which matches that port).
     <P>
     
 <LI>A <CODE>_default_</CODE> vhost or the main_server is <EM>never</EM>
     matched for a request with an unknown or missing <CODE>Host:</CODE> header
     field if the client connected to an address (and port) which is used
-    for name-based vhosts, e.g. in a <CODE>NameVirtualHost</CODE> directive.
+    for name-based vhosts, <EM>e.g.</EM>, in a <CODE>NameVirtualHost</CODE>
+    directive.
     <P>
     
 <LI>You should never specify DNS names in <CODE>VirtualHost</CODE>
     directives because it will force your server to rely on DNS to boot.
     Furthermore it poses a security threat if you do not control the
     DNS for all the domains listed.
diff -BEr -U 6 apache_1.3.1/htdocs/manual/vhosts/examples.html apache_1.3.2/htdocs/manual/vhosts/examples.html
--- apache_1.3.1/htdocs/manual/vhosts/examples.html	1998-07-19 07:04:33.000000000 +0800
+++ apache_1.3.2/htdocs/manual/vhosts/examples.html	1998-09-22 03:20:53.000000000 +0800
@@ -327,13 +327,13 @@
 <H3><A NAME="default">Using <CODE>_default_</CODE> vhosts</A></H3>
 
 <UL>
 
 <LI><STRONG>Setup 1:</STRONG> 
     Catching <EM>every</EM> request to any unspecified IP address and port,
-    i.e. an address/port combination that is not used for any other
+    <EM>i.e.</EM>, an address/port combination that is not used for any other
     virtual host.
     <P>
     <STRONG>Server configuration:</STRONG>
 
     <BLOCKQUOTE><PRE>
     ...
@@ -505,13 +505,13 @@
     information page from the primary host.<BR>
     Please note that there is one oddity: A request to
     <SAMP>http://www.sub2.domain.tld/sub1/</SAMP> is also served from
     the sub1-vhost if the client sent no <CODE>Host:</CODE> header. <BR>
     The <CODE>RewriteRule</CODE> directives are used to make sure that
     a client which sent a correct <CODE>Host:</CODE> header can use
-    both URL variants, i.e. with or without URL prefix.
+    both URL variants, <EM>i.e.</EM>, with or without URL prefix.
     </BLOCKQUOTE>
 
 </UL> 
 
 <HR>
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/vhosts/host.html apache_1.3.2/htdocs/manual/vhosts/host.html
--- apache_1.3.1/htdocs/manual/vhosts/host.html	1998-07-19 07:04:33.000000000 +0800
+++ apache_1.3.2/htdocs/manual/vhosts/host.html	1998-09-22 03:20:53.000000000 +0800
@@ -125,15 +125,15 @@
 internal users access <CODE>private.foo.com</CODE>.  Obviously,
 <CODE>Host:</CODE> header functionality now allows someone who has
 access to <CODE>www.foo.com</CODE> to get
 <CODE>private.foo.com</CODE>, if they send a <CODE>Host:
 private.foo.com</CODE> header.  It is important to note that this
 condition exists only if you only implement this policy at the IP
-layer - all security controls used by Apache (i.e., <A
-HREF="../mod/mod_access.html">allow, deny from,</A> etc.) are consistently
-respected.
+layer - all security controls used by Apache (<EM>i.e.</EM>, <A
+HREF="../mod/mod_access.html">allow, deny from,</A> <EM>etc.</EM>) are
+consistently respected.
 
 <H2>Compatibility with Older Browsers</H2>
 
 <P>As mentioned earlier, a majority of browsers do not send the
 required data for the new virtual hosts to work properly. These
 browsers will always be sent to the main server's pages. There is a
@@ -155,16 +155,16 @@
 <CODE>http://www.apache.org/</CODE>.</P>
 
 <P>In order to make this work, put a link on your main server's page
 to <CODE>http://www.apache.org/apache/</CODE> (Note: Do not use
 <CODE>http://www.apache.org/</CODE> - this would create an endless
 loop). Then, in the virtual host's pages, be sure to use either purely
-relative links (e.g. "<CODE>file.html</CODE>" or
+relative links (<EM>e.g.</EM>, "<CODE>file.html</CODE>" or
 "<CODE>../icons/image.gif</CODE>" or links containing the prefacing
 <CODE>/apache/</CODE>
-(e.g. "<CODE>http://www.apache.org/apache/file.html</CODE>" or
+(<EM>e.g.</EM>, "<CODE>http://www.apache.org/apache/file.html</CODE>" or
 "<CODE>/apache/docs/1.1/index.html</CODE>").</P>
 
 <P>This requires a bit of
 discipline, but adherence to these guidelines will, for the most part,
 ensure that your pages will work with all browsers, new and old. When
 a new browser contacts <CODE>http://www.apache.org/</CODE>, they will
diff -BEr -U 6 apache_1.3.1/htdocs/manual/vhosts/name-based.html apache_1.3.2/htdocs/manual/vhosts/name-based.html
--- apache_1.3.1/htdocs/manual/vhosts/name-based.html	1998-07-19 07:04:33.000000000 +0800
+++ apache_1.3.2/htdocs/manual/vhosts/name-based.html	1998-09-22 03:20:53.000000000 +0800
@@ -131,16 +131,16 @@
 clients sending a <SAMP>Host:</SAMP> header can also access it as
 <CODE>http://www.domain.tld/</CODE>.</P>
 
 <P>In order to make this work, put a link on your primary virtual host's page
 to <SAMP>http://www.domain.tld/domain/</SAMP>
 Then, in the virtual host's pages, be sure to use either purely
-relative links (e.g. "<SAMP>file.html</SAMP>" or
+relative links (<EM>e.g.</EM>, "<SAMP>file.html</SAMP>" or
 "<SAMP>../icons/image.gif</SAMP>" or links containing the prefacing
 <SAMP>/domain/</SAMP>
-(e.g. "<SAMP>http://www.domain.tld/domain/misc/file.html</SAMP>" or
+(<EM>e.g.</EM>, "<SAMP>http://www.domain.tld/domain/misc/file.html</SAMP>" or
 "<SAMP>/domain/misc/file.html</SAMP>").</P>
 
 <P>This requires a bit of
 discipline, but adherence to these guidelines will, for the most part,
 ensure that your pages will work with all browsers, new and old.</P>
 
diff -BEr -U 6 apache_1.3.1/htdocs/manual/vhosts/vhosts-in-depth.html apache_1.3.2/htdocs/manual/vhosts/vhosts-in-depth.html
--- apache_1.3.1/htdocs/manual/vhosts/vhosts-in-depth.html	1998-07-19 07:04:33.000000000 +0800
+++ apache_1.3.2/htdocs/manual/vhosts/vhosts-in-depth.html	1998-09-22 03:20:53.000000000 +0800
@@ -32,41 +32,41 @@
 <H3>Config File Parsing</H3>
 
 <P>There is a main_server which consists of all the definitions appearing
 outside of <CODE>VirtualHost</CODE> sections.  There are virtual servers,
 called <EM>vhosts</EM>, which are defined by
 <A
- HREF="mod/core.html#virtualhost"
+ HREF="../mod/core.html#virtualhost"
 ><SAMP>VirtualHost</SAMP></A>
 sections.
 
 <P>The directives
 <A
- HREF="mod/core.html#port"
+ HREF="../mod/core.html#port"
 ><SAMP>Port</SAMP></A>,
 <A
- HREF="mod/core.html#servername"
+ HREF="../mod/core.html#servername"
 ><SAMP>ServerName</SAMP></A>,
 <A
- HREF="mod/core.html#serverpath"
+ HREF="../mod/core.html#serverpath"
 ><SAMP>ServerPath</SAMP></A>,
 and
 <A
- HREF="mod/core.html#serveralias"
+ HREF="../mod/core.html#serveralias"
 ><SAMP>ServerAlias</SAMP></A>
 can appear anywhere within the definition of
 a server.  However, each appearance overrides the previous appearance
 (within that server).
 
 <P>The default value of the <CODE>Port</CODE> field for main_server
 is 80.  The main_server has no default <CODE>ServerName</CODE>,
 <CODE>ServerPath</CODE>, or <CODE>ServerAlias</CODE>.
 
 <P>In the absence of any
 <A
- HREF="mod/core.html#listen"
+ HREF="../mod/core.html#listen"
 ><SAMP>Listen</SAMP></A>
 directives, the (final if there
 are multiple) <CODE>Port</CODE> directive in the main_server indicates
 which port httpd will listen on.
 
 <P> The <CODE>Port</CODE> and <CODE>ServerName</CODE> directives for
@@ -117,35 +117,35 @@
 After parsing has completed, the list of servers is scanned, and various
 merges and default values are set.  In particular:
 
 <OL>
 <LI>If a vhost has no
     <A
-     HREF="mod/core.html#serveradmin"
+     HREF="../mod/core.html#serveradmin"
     ><CODE>ServerAdmin</CODE></A>,
     <A
-     HREF="mod/core.html#resourceconfig"
+     HREF="../mod/core.html#resourceconfig"
     ><CODE>ResourceConfig</CODE></A>,
     <A
-     HREF="mod/core.html#accessconfig"
+     HREF="../mod/core.html#accessconfig"
     ><CODE>AccessConfig</CODE></A>,
     <A
-     HREF="mod/core.html#timeout"
+     HREF="../mod/core.html#timeout"
     ><CODE>Timeout</CODE></A>,
     <A
-     HREF="mod/core.html#keepalivetimeout"
+     HREF="../mod/core.html#keepalivetimeout"
     ><CODE>KeepAliveTimeout</CODE></A>,
     <A
-     HREF="mod/core.html#keepalive"
+     HREF="../mod/core.html#keepalive"
     ><CODE>KeepAlive</CODE></A>,
     <A
-     HREF="mod/core.html#maxkeepaliverequests"
+     HREF="../mod/core.html#maxkeepaliverequests"
     ><CODE>MaxKeepAliveRequests</CODE></A>,
     or
     <A
-     HREF="mod/core.html#sendbuffersize"
+     HREF="../mod/core.html#sendbuffersize"
     ><CODE>SendBufferSize</CODE></A>
     directive then the respective value is
     inherited from the main_server.  (That is, inherited from whatever
     the final setting of that value is in the main_server.)
 
 <LI>The &quot;lookup defaults&quot; that define the default directory
diff -BEr -U 6 apache_1.3.1/htdocs/manual/vhosts/virtual-host.html apache_1.3.2/htdocs/manual/vhosts/virtual-host.html
--- apache_1.3.1/htdocs/manual/vhosts/virtual-host.html	1998-07-19 07:04:33.000000000 +0800
+++ apache_1.3.2/htdocs/manual/vhosts/virtual-host.html	1998-09-22 03:20:53.000000000 +0800
@@ -69,13 +69,14 @@
 Either by running a separate httpd daemon for each hostname, or by running a
 single daemon which supports all the virtual hosts.
 <P>
 Use multiple daemons when:
 <UL>
 <LI>The different virtual hosts need very different httpd configurations, such
-   as different values for: <A HREF="../mod/core.html#servertype">ServerType</A>,
+   as different values for:
+   <A HREF="../mod/core.html#servertype">ServerType</A>,
    <A HREF="../mod/core.html#user">User</A>,
    <A HREF="../mod/core.html#group">Group</A>,
    <A HREF="../mod/mod_mime.html#typesconfig">TypesConfig</A> or
    <A HREF="../mod/core.html#serverroot">ServerRoot</A>.
 <LI>The machine does not process a very high request rate.
 </UL>
@@ -214,8 +215,8 @@
  Apache HTTP Server Version 1.3
 </H3>
 
 <A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
 <A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
 
-</BODY></HTML>
-
+</BODY>
+</HTML>
diff -BEr -U 6 apache_1.3.1/htdocs/manual/windows.html apache_1.3.2/htdocs/manual/windows.html
--- apache_1.3.1/htdocs/manual/windows.html	1998-07-19 07:04:24.000000000 +0800
+++ apache_1.3.2/htdocs/manual/windows.html	1998-09-22 03:20:47.000000000 +0800
@@ -20,13 +20,13 @@
 </DIV>
 
 
 <H1 ALIGN="CENTER">Using Apache With Microsoft Windows</H1>
 
 <P>This document explains how to install, configure and run
-   Apache 1.3b6 and later under Microsoft Windows. Please note that at
+   Apache 1.3 under Microsoft Windows. Please note that at
    this time, Windows support is entirely experimental, and is
    recommended only for experienced users. The Apache Group does not
    guarantee that this software will work as documented, or even at
    all. If you find any bugs, or wish to contribute in other ways, please
    use our <A HREF="http://www.apache.org/bug_report.html">bug reporting
    page.</A></P>
@@ -50,13 +50,12 @@
   <LI><A HREF="#req">Requirements</A>
   <LI><A HREF="#down">Downloading Apache for Windows</A>
   <LI><A HREF="#inst">Installing Apache for Windows (binary install)</A>
   <LI><A HREF="#run">Running Apache for Windows</A>
   <LI><A HREF="#use">Using Apache for Windows</A>
   <LI><A HREF="#cmdline">Running Apache for Windows from the Command Line</A>
-  <LI><A HREF="#signal">Signalling Apache when running</A>
   <LI><A HREF="#comp">Compiling Apache for Windows</A>
 </UL>
 
 <HR>
 
 <H2><A NAME="req">Requirements</A></H2>
@@ -165,13 +164,14 @@
 
 <UL>
  <LI>As a "service" (available on NT only). This is the best option if
     you want Apache to automatically start when you machine boots, and to
     keep Apache running when you log-off.
 
- <LI>From a <a ref="#cmdline">console window</a>. This is the only option available for
+ <LI>From a <A HREF="#cmdline">console window</A>. This is the only option
+    available for
     Windows 95 users.
 </UL>
 
 To start Apache as a service, you first need to install it as a
 service. Run the "Install Apache as Service" option from the Start
 menu. Once this is done you can start Apache by opening the Services
@@ -263,13 +263,13 @@
       in <CODE>access.conf</CODE>):</P>
 <PRE>
     LoadModule status_module modules/ApacheModuleStatus.dll
 </PRE>
       <P>Information on <A HREF="mod/mod_so.html#creating">creating loadable
          modules</A> is also available.</P>
-  <LI><P>Apache can also load ISAPI Extensions (i.e., Internet Server
+  <LI><P>Apache can also load ISAPI Extensions (<EM>i.e.</EM>, Internet Server
          Applications), such as those used by Microsoft's IIS, and other
          Windows servers. <A HREF="mod/mod_isapi.html">More information
          is available.</A>
 </UL>
 
 <H2><A NAME="cmdline">Running Apache for Windows from the Command Line</A></H2>
@@ -279,19 +279,19 @@
 work from the command line.
 
 <P>
 When working with Apache it is important to know how it will find the
 configuration files.  Apache will try one of the following, in this order.
 
-<ul>
-<li>A ServerRoot directive via a -C switch.
-<li>The -f switch on the command line.
-<li>The -d switch on the command line.
-<li>A registry entry, created if you did a binary install.
-<li>The server root compiled into the server.
-</ul>
+<UL>
+<LI>A ServerRoot directive via a -C switch.
+<LI>The -f switch on the command line.
+<LI>The -d switch on the command line.
+<LI>A registry entry, created if you did a binary install.
+<LI>The server root compiled into the server.
+</UL>
 
 <P>
 The server root compiled into the server is usually "/apache".
 invoking apache with the -v switch will display this value
 labeled as HTTPD_ROOT.
 
@@ -305,18 +305,13 @@
 technique.
 
 <P>
 During a binary installation, a registry key will have
 been installed, for example:
 <PRE>
-  HKEY_LOCAL_MACHINE\Software\Apache Group\Apache\1.3.0\ServerRoot
-</PRE>
-
-For the 1.3 beta releases the key was:
-<PRE>
-  HKEY_LOCAL_MACHINE\Software\Apache Group\Apache\1.3 beta\ServerRoot
+  HKEY_LOCAL_MACHINE\Software\Apache Group\Apache\1.3.1\ServerRoot
 </PRE>
 
 <P>
 This key is compiled into the server and can enable you to test 
 new versions without affecting the current version.  Of course
 you must take care not to install the new version on top of the
@@ -364,45 +359,17 @@
 
 <PRE>
     apache -u
 </PRE>
 
 
-<H2><A NAME="signal">Signalling Apache when running</A></H2>
-
-<P>When Apache is running you may request that it reread it's
-configuration files as follows:
-
-<PRE>
-    apache -Z @@whatever?@@>
-</PRE>
-
-and to request that it shutdown gracefully, via:
-
-<PRE>
-    apache -Z @@whatever?@@>
-</PRE>
-
-and you can force it to stop via:
-
-<PRE>
-    apache -Z @@whatever?@@
-</PRE>
-
-
-<P>
-Other techinques of shutting down the server (e.g. using the
-task manager to "End Process", distroying the command 
-window containing the server, or using control-C to interupt
-it) all have the downside of @@whatever@@.
-
 <H2><A NAME="comp">Compiling Apache for Windows</A></H2>
 
 <P>Compiling Apache requires Microsoft Visual C++ 5.0 to be properly
    installed. It is easiest to compile with the command-line tools
-   (nmake, etc...). Consult the VC++ manual to determine how to install
+   (nmake, <EM>etc.</EM>..). Consult the VC++ manual to determine how to install
    them.</P>
 
 <P>First, unpack the Apache distribution into an appropriate
    directory. Open a command-line prompt, and change to the
    <CODE>src</CODE> subdirectory of the Apache distribution.</P>
 
@@ -416,23 +383,31 @@
 
 <P>These will both compile Apache. The latter will include debugging
    information in the resulting files, making it easier to find bugs and
    track down problems.</P>
 
 <P>Apache can also be compiled using VC++'s Visual Studio development
-   environment. Although compiling Apache in this manner is not as simple,
-   it makes it possible to easily modify the Apache source, or to compile
-   Apache if the command-line tools are not installed.</P>
-
-<P>Project files (<CODE>.DSP</CODE>) are included for each of the
-   portions of Apache. The three projects that are necessary for
-   Apache to run are <CODE>Apache.dsp</CODE>, <CODE>ap/ap.dsp</CODE>,
-   <CODE>regex/regex.dsp</CODE>, <CODE>ApacheCore.dsp</CODE> and
-   <CODE>os/win32/ApacheOS.dsp</CODE>. The <CODE>src/win32</CODE>
-   subdirectory contains project files for the optional modules (see
-   below).</P>
+   environment. Although compiling Apache in this manner is not as
+   simple, it makes it possible to easily modify the Apache source, or
+   to compile Apache if the command-line tools are not installed.
+   Project files (<CODE>.DSP</CODE>) are included for each of the
+   portions of Apache. To build Apache from the these projects files
+   you will need to build the following projects <EM>in this order</EM>:
+
+ <OL>
+   <LI><CODE>os\win32\ApacheOS.dsp</CODE>
+   <LI><CODE>regex\regex.dsp</CODE>
+   <LI><CODE>ap\ap.dsp</CODE>
+   <LI><CODE>main\gen_uri_delims.dsp</CODE>
+   <LI><CODE>main\gen_test_char.dsp</CODE>
+   <LI><CODE>ApacheCore.dsp</CODE>
+   <LI><CODE>Apache.dsp</CODE>
+ </OL>
+
+   In addition, the <CODE>src\os\win32</CODE> subdirectory contains
+   project files for the optional modules (see below).</P>
 
 <P>Once Apache has been compiled, it needs to be installed in its server
    root directory. The default is the <CODE>\Apache</CODE>
    directory, on the current hard drive. </P>
 
 <P>To install the files into the <CODE>\Apache</CODE> directory
diff -BEr -U 6 apache_1.3.1/INSTALL apache_1.3.2/INSTALL
--- apache_1.3.1/INSTALL	1998-07-08 19:09:34.000000000 +0800
+++ apache_1.3.2/INSTALL	1998-09-19 21:06:40.000000000 +0800
@@ -50,14 +50,14 @@
      o  ANSI-C Compiler: 
 
         Make sure you have an ANSI-C compiler installed. The GNU C compiler
         (GCC) from the Free Software Foundation (FSF) is recommended (version
         2.7.2 is fine). If you don't have GCC then at least make sure your
         vendors compiler is ANSI compliant. You can find the homepage of GNU
-        at http://www.gnu.ai.mit.edu/ and the GCC distribution under
-        http://www.gnu.ai.mit.edu/order/ftp.html .
+        at http://www.gnu.org/ and the GCC distribution under
+        http://www.gnu.org/order/ftp.html .
 
      o  Perl 5 Interpreter [OPTIONAL]:
 
         For some of the support scripts like `apxs' or `dbmmanage' (which are
         written in Perl) the Perl 5 interpreter is required (versions 5.003
         and 5.004 are fine). If no such interpreter is found by APACI's
@@ -78,13 +78,13 @@
         knowledge on how to compile shared objects because this is heavily
         platform-dependend. The current state is this:
 
         o Out-of-the-box supported platforms are:
            - Linux     - IRIX
            - FreeBSD   - HPUX
-           - OpenBSD   - OSF1
+           - OpenBSD   - Digital UNIX
            - NetBSD    - UnixWare
            - SunOS     - AIX
            - Solaris   - SCO
 
         o Entirely unsupported platforms are:
            - Ultrix
@@ -193,12 +193,29 @@
      Defaults are bindir=EPREFIX/bin, sbindir=EPREFIX/sbin,
      libexecdir=EPREFIX/libexec, mandir=PREFIX/man, sysconfdir=PREFIX/etc,
      datadir=PREFIX/share, includedir=PREFIX/include,
      localstatedir=PREFIX/var, runtimedir=PREFIX/var/run,
      logfiledir=PREFIX/var/log and proxycachedir=PREFIX/var/proxy.
 
+         Note: To reduce the pollution of shared installation locations
+               (like /usr/local/ or /etc) with Apache files to a minimum the
+               string ``/apache'' is automatically appended to 'libexecdir',
+               'sysconfdir', 'datadir', 'localstatedir' and 'includedir' if
+               (and only if) the following points apply for each path
+               individually:
+
+                   1. the path doesn't already contain the word ``apache''
+                   2. the path was not directly customized by the user
+
+               Keep in mind that per default these paths are derived from
+               'prefix' and 'exec-prefix', so usually its only a matter
+               whether these paths contain ``apache'' or not. Although the
+               defaults were defined with experience in mind you always should
+               make sure the paths fit your situation by checking the finally
+               chosen paths via the --layout option.
+
      Use the --compat option to install Apache into a installation tree which
      has a similar layout than the one used with Apache 1.2.
  
      Use the --layout option to check the final installation path layout while
      fiddling with the options above.
  
@@ -226,18 +243,18 @@
      a third-party configuration scheme.
  
      Use the --enable-module=NAME and --disable-module=NAME options to enable
      or disable a particular already distributed module from the Apache
      src/Configuration.tmpl file. The correct module names (no `mod_' prefix!)
      and defaults (yes=enabled, no=disabled) can be seen when running
-     `./configure --help'.  There are two special NAME variants: "all" for
-     enabling or disabling all modules and "most" for enabling or disabling
+     `./configure --help'.  There are two special NAME variants: `all' for
+     enabling or disabling all modules and `most' for enabling or disabling
      only these modules which are useable on all platforms (currently this is
-     "all" minus the modules auth_db, log_agent, log_referer, example, so and
-     mmap_static). For a compact overview of available modules see the
-     following list (remove the "mod_" prefix to get the NAME).
+     `all' minus the modules `auth_db', `log_agent', `log_referer', `example',
+     `so' and `mmap_static'). For a compact overview of available modules see
+     the following list (remove the `mod_' prefix to get the NAME).
 
      _________________________________________________________________________
      LIST OF AVAILABLE MODULES
 
      Environment creation
       (+) mod_env .......... Set environment variables for CGI/SSI scripts
@@ -268,13 +285,13 @@
       (+) mod_asis ......... Raw HTTP responses 
      Scripting
       (+) mod_include ...... Server Side Includes (SSI) support
       (+) mod_cgi .......... Common Gateway Interface (CGI) support
       (+) mod_actions ...... Map CGI scripts to act as internal `handlers'
      Internal Content Handlers
-      (-) mod_status ....... Content handler for server run-time status
+      (+) mod_status ....... Content handler for server run-time status
       (-) mod_info ......... Content handler for server configuration summary
      Request Logging
       (+) mod_log_config ... Customizable logging of requests
       (-) mod_log_agent .... Specialized HTTP User-Agent logging (deprecated)
       (-) mod_log_refer .... Specialized HTTP Referrer logging   (deprecated)
       (-) mod_usertrack .... Logging of user click-trails via HTTP Cookies
@@ -292,15 +309,16 @@
 
 
      Use the --enable-shared=NAME and --disable-shared=NAME options to enable
      or disable the shared object support for a particular module from the
      Apache src/Configuration.tmpl file. The defaults (yes=enabled,
      no=disabled) can be seen when running `./configure --help'. There are two
-     special NAME variants: "max" for enabling or disabling all modules except
-     the bootstrapping "so" module and "remain" for enabling or disabling only
-     these modules which are still not enabled. 
+     special NAME variants: `max' for enabling or disabling DSO on all modules
+     except the bootstrapping `so' module and `remain' for enabling or
+     disabling DSO for only those modules which are still not enabled (which
+     this way implicitly enables them itself). 
      
          Note 1: The --enable-shared option DOES NOT AUTOMATICALLY enable the
                  module because there are variants like `--enable-shared=all'
                  which should not imply `--enable-module=all'.  
 
          Note 2: Per default the DSO mechanism is globally disabled, i.e. no
@@ -313,12 +331,18 @@
          Note 4: When you later want to extend your Apache installation via
                  third-party modules through the DSO+APXS mechanism make sure
                  that you at least compile with mod_so included, even when no
                  distributed modules are build as shared objects. This can be
                  achieved by explicitly using --enable-module=so.
 
+         Note 5: Some platforms require --enable-rule=SHARED_CORE for
+                 the DSO mechanism to work, i.e. when you want to use
+                 --enable-shared for some modules on these platforms you also
+                 have to enable the SHARED_CORE rule. For more details please
+                 read the document `htdocs/manual/dso.html'.
+
      Use the --with-perl=FILE option to select a particular Perl interpreter
      executable to be used with Apache. Per default APACI tries to find it
      automatically. But if multiple Perl instances exist on your system you
      have to select the correct one manually.
  
      Use the --without-support option to explicitly disable the build and
@@ -392,13 +416,20 @@
      To simplify rolling a package tarball from the installed files APACI
      provides a way to override the installation root for the install step.
      Additionally you can get rid of the user message at the end of the
      installation process by using the `install-quiet' target. Example:
 
          $ make install-quiet root=/tmp/apache-root
- 
+
+     Notes for specific platforms:
+
+     NOTE: Please note that for re-installing Apache on AIX you should use the
+           command `slibclean' before using `make install' to really unload
+           any old versions of the DSO's that might still be cached by the
+           dynamic loader.  
+
   6. Testing the package
      -------------------
  
      Now you can fire up your Apache HTTP server by immediately running
  
         $ PREFIX/sbin/apachectl start
diff -BEr -U 6 apache_1.3.1/Makefile.tmpl apache_1.3.2/Makefile.tmpl
--- apache_1.3.1/Makefile.tmpl	1998-07-16 01:03:25.000000000 +0800
+++ apache_1.3.2/Makefile.tmpl	1998-09-19 20:41:48.000000000 +0800
@@ -77,16 +77,16 @@
 
 #   build tools
 CP              = cp
 LN              = ln
 RM              = rm -f
 TAR             = tar
-UMASK           = umask
 MKDIR           = $(TOP)/$(AUX)/mkdir.sh
 INSTALL         = $(TOP)/$(AUX)/install.sh -c
 INSTALL_PROGRAM = $(INSTALL) -s -m 755
+INSTALL_DSO     = $(INSTALL) -m 755
 INSTALL_SCRIPT  = $(INSTALL) -m 755
 INSTALL_DATA    = $(INSTALL) -m 644
 PERL            = @PERL@
 
 #   installation root 
 #   (overrideable by package maintainers for
@@ -236,35 +236,36 @@
 #   install the server program and optionally corresponding
 #   shared object files.
 install-programs:
 	@echo "===> [programs: Installing Apache httpd program and shared objects]"
 	$(INSTALL_PROGRAM) $(TOP)/$(SRC)/httpd $(root)$(sbindir)/httpd
 	-@if [ ".`grep 'SUBTARGET=target_shared' $(TOP)/$(SRC)/Makefile`" != . ]; then \
-		echo "$(INSTALL_PROGRAM) $(TOP)/$(SRC)/libhttpd.ep $(root)$(libexecdir)/libhttpd.ep"; \
-		$(INSTALL_SCRIPT) $(TOP)/$(SRC)/libhttpd.ep $(root)$(libexecdir)/libhttpd.ep; \
-		echo "$(INSTALL_SCRIPT) $(TOP)/$(SRC)/libhttpd.so $(root)$(libexecdir)/libhttpd.so"; \
-		$(INSTALL_SCRIPT) $(TOP)/$(SRC)/libhttpd.so $(root)$(libexecdir)/libhttpd.so; \
+		SHLIB_SUFFIX_NAME="`grep '^SHLIB_SUFFIX_NAME=' $(TOP)/$(SRC)/Makefile | sed -e 's:^.*=::'`"; \
 		SHLIB_SUFFIX_LIST="`grep '^SHLIB_SUFFIX_LIST=' $(TOP)/$(SRC)/Makefile | sed -e 's:^.*=::'`"; \
+		echo "$(INSTALL_DSO) $(TOP)/$(SRC)/libhttpd.ep $(root)$(libexecdir)/libhttpd.ep"; \
+		$(INSTALL_DSO) $(TOP)/$(SRC)/libhttpd.ep $(root)$(libexecdir)/libhttpd.ep; \
+		echo "$(INSTALL_DSO) $(TOP)/$(SRC)/libhttpd.$${SHLIB_SUFFIX_NAME} $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}"; \
+		$(INSTALL_DSO) $(TOP)/$(SRC)/libhttpd.$${SHLIB_SUFFIX_NAME} $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}; \
 		if [ ".$${SHLIB_SUFFIX_LIST}" != . ]; then \
-			echo "$(RM) $(libexecdir)/libhttpd.so.*"; \
-			$(RM) $(libexecdir)/libhttpd.so.*; \
+			echo "$(RM) $(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}.*"; \
+			$(RM) $(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}.*; \
 			for suffix in $${SHLIB_SUFFIX_LIST} ""; do \
 				[ ".$${suffix}" = . ] && continue; \
-				echo "$(LN) $(root)$(libexecdir)/libhttpd.so $(root)$(libexecdir)/libhttpd.so.$${suffix}"; \
-				$(LN) $(root)$(libexecdir)/libhttpd.so $(root)$(libexecdir)/libhttpd.so.$${suffix}; \
+				echo "$(LN) $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME} $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}.$${suffix}"; \
+				$(LN) $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME} $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}.$${suffix}; \
 			done; \
 		fi; \
 	fi
 	$(INSTALL_DATA) $(TOP)/$(SRC)/support/httpd.8 $(root)$(mandir)/man8/httpd.8
 	-@$(RM) $(SRC)/.apaci.install.conf; touch $(SRC)/.apaci.install.conf
 	-@if [ ".`grep '^[ 	]*SharedModule' $(TOP)/$(SRC)/Configuration.apaci`" != . ]; then \
 		for mod in `egrep '^[ 	]*SharedModule' $(TOP)/$(SRC)/Configuration.apaci |\
 	                sed -e 's/^[ 	]*SharedModule[ 	]*//'`; do \
 			file=`echo $${mod} | sed -e 's;^.*/\([^/]*\);\1;'`; \
-			echo "$(INSTALL_SCRIPT) $(TOP)/$(SRC)/$${mod} $(root)$(libexecdir)/$${file}"; \
-			$(INSTALL_SCRIPT) $(TOP)/$(SRC)/$${mod} $(root)$(libexecdir)/$${file}; \
+			echo "$(INSTALL_DSO) $(TOP)/$(SRC)/$${mod} $(root)$(libexecdir)/$${file}"; \
+			$(INSTALL_DSO) $(TOP)/$(SRC)/$${mod} $(root)$(libexecdir)/$${file}; \
 			name=`$(TOP)/$(AUX)/fmn.sh $(TOP)/$(SRC)/$${mod}`; \
 			echo dummy | awk '{ printf("LoadModule %-18s %s\n", modname, modpath); }' \
 			modname="$${name}" modpath="$(libexecdir_relative)$${file}" >>$(SRC)/.apaci.install.conf; \
 		done; \
 		echo "" >>$(SRC)/.apaci.install.conf; \
 		echo "#  Reconstruction of the complete module list from all available modules" >>$(SRC)/.apaci.install.conf; \
@@ -313,28 +314,29 @@
 		< $(TOP)/$(SRC)/support/apxs > $(TOP)/$(SRC)/.apaci.install.tmp && \
 		$(INSTALL_SCRIPT) $(TOP)/$(SRC)/.apaci.install.tmp $(root)$(sbindir)/apxs
 	$(INSTALL_DATA) $(TOP)/$(SRC)/support/apxs.8 $(root)$(mandir)/man8/apxs.8
 	-@if [ ".$(suexec)" = .1 ]; then \
 	    echo "$(INSTALL_PROGRAM) $(TOP)/$(SRC)/support/suexec $(root)$(sbindir)/suexec"; \
 	    $(INSTALL_PROGRAM) $(TOP)/$(SRC)/support/suexec $(root)$(sbindir)/suexec; \
-	    echo "chown root $(sbindir)/suexec"; \
-	    chown root $(sbindir)/suexec; \
-	    echo "chmod 4711 $(sbindir)/suexec"; \
-	    chmod 4711 $(sbindir)/suexec; \
+	    echo "chown root $(root)$(sbindir)/suexec"; \
+	    chown root $(root)$(sbindir)/suexec; \
+	    echo "chmod 4711 $(root)$(sbindir)/suexec"; \
+	    chmod 4711 $(root)$(sbindir)/suexec; \
 	    echo "$(INSTALL_DATA) $(TOP)/$(SRC)/support/suexec.8 $(root)$(mandir)/man8/suexec.8"; \
 	    $(INSTALL_DATA) $(TOP)/$(SRC)/support/suexec.8 $(root)$(mandir)/man8/suexec.8; \
 	fi
 	@echo "<=== [support]"
 
 #   install the Apache C header files
 install-include:
 	@echo "===> [include: Installing Apache C header files]"
-	$(UMASK) 022; $(CP) $(TOP)/$(SRC)/include/*.h $(root)$(includedir)/
+	$(CP) $(TOP)/$(SRC)/include/*.h $(root)$(includedir)/
 	@osdir=`grep '^OSDIR=' $(TOP)/$(SRC)/Makefile.config | sed -e 's:^OSDIR=.*/os:os:'`; \
-	echo "$(UMASK) 022; $(CP) $(TOP)/$(SRC)/$${osdir}/os.h $(root)$(includedir)/"; \
-	$(UMASK) 022; $(CP) $(TOP)/$(SRC)/$${osdir}/os.h $(root)$(includedir)/
+		echo "$(CP) $(TOP)/$(SRC)/$${osdir}/os.h $(root)$(includedir)/"; \
+		$(CP) $(TOP)/$(SRC)/$${osdir}/os.h $(root)$(includedir)/
+	chmod 644 $(root)$(includedir)/*.h
 	@echo "<=== [include]"
 
 #   create an initial document root containing the Apache manual,
 #   icons and distributed CGI scripts.
 install-data:
 	@echo "===> [data: Installing initial data files]"
@@ -347,17 +349,19 @@
 		find $(root)$(datadir)/htdocs/ -type d -exec chmod a+rx {} \; ; \
 		find $(root)$(datadir)/htdocs/ -type f -exec chmod a+r {} \; ; \
 	fi
 	-@if [ -f $(root)$(datadir)/cgi-bin/printenv ]; then \
 		echo "[PRESERVING EXISTING DATA SUBDIR: $(root)$(datadir)/cgi-bin/]"; \
 	else \
-		echo "Copying tree $(TOP)/cgi-bin/ -> $(root)$(datadir)/cgi-bin/"; \
-		(cd $(TOP)/cgi-bin/ && $(TAR) cf - *) |\
-		(cd $(root)$(datadir)/cgi-bin/ && $(TAR) xf -); \
-		find $(root)$(datadir)/cgi-bin/ -type d -exec chmod a+rx {} \; ; \
-		find $(root)$(datadir)/cgi-bin/ -type f -exec chmod a+r {} \; ; \
+		for script in printenv test-cgi; do \
+			cat $(TOP)/cgi-bin/$${script} |\
+			sed -e 's;^#!/.*perl;#!$(PERL);' \
+        		> $(TOP)/$(SRC)/.apaci.install.tmp; \
+			echo "$(INSTALL_DATA) $(TOP)/conf/$${script}[*] $(root)$(datadir)/cgi-bin/$${script}"; \
+			$(INSTALL_DATA) $(TOP)/$(SRC)/.apaci.install.tmp $(root)$(datadir)/cgi-bin/$${script}; \
+		done; \
 	fi
 	@echo "Copying tree $(TOP)/icons/ -> $(root)$(datadir)/icons/"; \
 	(cd $(TOP)/icons/ && $(TAR) cf - *) |\
 	(cd $(root)$(datadir)/icons/ && $(TAR) xf -); \
 	find $(root)$(datadir)/icons/ -type d -exec chmod a+rx {} \; ;\
 	find $(root)$(datadir)/icons/ -type f -exec chmod a+r {} \;
@@ -372,13 +376,12 @@
 		 echo "## $${conf} -- Apache HTTP server configuration file"; \
 		 echo "##"; \
 		 echo ""; \
 		 cat $(TOP)/conf/$${conf}-dist ) |\
 		 sed -e '/# LoadModule/r $(TOP)/$(SRC)/.apaci.install.conf' \
 			-e 's;@@ServerRoot@@/htdocs;$(datadir)/htdocs;' \
-			-e 's;@@ServerRoot@@/htdocs;$(datadir)/htdocs;' \
 			-e 's;@@ServerRoot@@/icons;$(datadir)/icons;' \
 			-e 's;@@ServerRoot@@/cgi-bin;$(datadir)/cgi-bin;' \
 			-e 's;@@ServerRoot@@/proxy;$(proxycachedir);' \
 			-e 's;@@ServerRoot@@;$(prefix);' \
 			-e 's;logs/accept.lock;$(runtimedir)/httpd.lock;' \
 			-e 's;logs/apache_runtime_status;$(runtimedir)/httpd.scoreboard;' \
diff -BEr -U 6 apache_1.3.1/README.NT apache_1.3.2/README.NT
--- apache_1.3.1/README.NT	1998-05-30 20:57:48.000000000 +0800
+++ apache_1.3.2/README.NT	1998-09-20 14:22:46.000000000 +0800
@@ -1,64 +1,76 @@
-                              Apache for Windows
-                             Version 1.3 (and up)
+                            Apache for Windows
+                           Version 1.3 (and up)
 
 What is it?
 -----------
 
 Apache is an HTTP server, originally designed for Unix systems. This
-is the first release of Apache for Windows systems.  Like the Unix
-version, it includes many frequently requested new features, and has
-an API which allows it to be extended to meet users' needs more
-easily. It also allows ISAPI extensions.
+is the first major release of Apache for Windows systems, including
+Microsoft Windows NT, 98, and 95.  Like the Unix version, it includes
+many frequently requested new features, and has an API that allows it
+to be extended to meet users' needs more easily. It also allows ISAPI
+extensions.
 
 Documentation
 -------------
 
 The documentation available as of the date of this release is also
-included, in HTML format, in the htdocs/manual/ directory. For the
-most up-to-date documentation, visit us on the WWW, at
-http://www.apache.org/. For Windows specific information, see
-http://www.apache.org/docs/windows.html.
+included, in HTML format, in the <./htdocs/manual/> directory.
+For the most up-to-date documentation, visit us on the WWW at
+<http://www.apache.org/>. For Windows specific information, see
+<http://www.apache.org/docs/windows.html>.
 
 WARNING
 -------
 
-Apache on NT has not yet been optimized for performance.  Apache still
+Apache on Win32 has not yet been optimized for performance.  Apache still
 performs best, and is most reliable on Unix platforms.  Over time we
-will improve NT performance. Folks doing comparative reviews of
-webserver performance are asked to compare against Apache on a Unix
+will improve performance for Windows NT. Folks doing comparative reviews
+of webserver performance are asked to compare against Apache on a Unix
 platform such as Solaris, FreeBSD, or Linux.
 
+Apache on Win32 should still be considered beta quality code.  It does not
+meet the normal standards of stability and security that Unix releases do.
+There is also a much greater chance of security holes being present in the
+Win32 version of Apache, due to the frequent discrepancies between the public
+documentation for the various Windows system calls and file system types
+and the reality of what is included in Windows system software.
+
 Installation or Compilation Instructions
 ----------------------------------------
 
-See the file http://www.apache.org/docs/windows.html for details of
+See the website <http://www.apache.org/docs/windows.html> for details of
 how to install Apache from a binary release or how to compile Apache
-from scratch. (This file is also available as
-htdocs/manual/windows.html in either a source or binary distribution).
+from scratch. This file is also included in the distribution as
+<./htdocs/manual/windows.html>.
 
 Known Problems
 --------------
 
+To get information about the current set of known problems, see our
+online bug reporting database at <http://www.apache.org/bug_report.html>.
+In particular, search for problem reports under the category "os-windows".
+
+This is a rough list of what we know has not been implemented on Win32.
+
 - The User directive is not supported. If you run apache as a service,
   you can change the user it runs as by going to 
   Control Panel->Services->Startup
 
 - suexec doesn't work
 
-- RFC 1413 not yet ported
+- RFC 1413 (IdentityCheck) is not yet ported
 
 - If you have a very busy server, when a server child process exits,
   any connections made to that child process that have not yet been
   accepted by it are aborted.
 
-- Problem with very long running cgi scripts (their output is garbled?)
-
-- regex does not generate *.ih headers.
+- The regex library build does not generate *.ih headers.
 
-- Multithreadng is not properly abstracted
+- Multithreading is not properly abstracted
 
 - htpasswd passwords are stored in plain text because Windows lacks a
   crypt() function
 
 Licensing
 ---------
diff -BEr -U 6 apache_1.3.1/src/ap/ap.dsp apache_1.3.2/src/ap/ap.dsp
--- apache_1.3.1/src/ap/ap.dsp	1998-06-24 03:16:29.000000000 +0800
+++ apache_1.3.2/src/ap/ap.dsp	1998-08-06 06:15:07.000000000 +0800
@@ -80,12 +80,16 @@
 # Begin Source File
 
 SOURCE=.\ap_cpystrn.c
 # End Source File
 # Begin Source File
 
+SOURCE=.\ap_fnmatch.c
+# End Source File
+# Begin Source File
+
 SOURCE=.\ap_signal.c
 # End Source File
 # Begin Source File
 
 SOURCE=.\ap_slack.c
 # End Source File
Only in apache_1.3.2/src/ap: ap_fnmatch.c
diff -BEr -U 6 apache_1.3.1/src/ap/ap.mak apache_1.3.2/src/ap/ap.mak
--- apache_1.3.1/src/ap/ap.mak	1998-06-24 03:16:30.000000000 +0800
+++ apache_1.3.2/src/ap/ap.mak	1998-08-06 06:15:07.000000000 +0800
@@ -44,12 +44,13 @@
 ALL : "$(OUTDIR)\ap.lib"
 
 !ENDIF 
 
 CLEAN :
 	-@erase "$(INTDIR)\ap_cpystrn.obj"
+	-@erase "$(INTDIR)\ap_fnmatch.obj"
 	-@erase "$(INTDIR)\ap_signal.obj"
 	-@erase "$(INTDIR)\ap_slack.obj"
 	-@erase "$(INTDIR)\ap_snprintf.obj"
 	-@erase "$(INTDIR)\vc50.idb"
 	-@erase "$(OUTDIR)\ap.lib"
 
@@ -65,12 +66,13 @@
 BSC32_SBRS= \
 	
 LIB32=link.exe -lib
 LIB32_FLAGS=/nologo /out:"$(OUTDIR)\ap.lib" 
 LIB32_OBJS= \
 	"$(INTDIR)\ap_cpystrn.obj" \
+	"$(INTDIR)\ap_fnmatch.obj" \
 	"$(INTDIR)\ap_signal.obj" \
 	"$(INTDIR)\ap_slack.obj" \
 	"$(INTDIR)\ap_snprintf.obj"
 
 "$(OUTDIR)\ap.lib" : "$(OUTDIR)" $(DEF_FILE) $(LIB32_OBJS)
     $(LIB32) @<<
@@ -94,12 +96,13 @@
 ALL : "$(OUTDIR)\ap.lib"
 
 !ENDIF 
 
 CLEAN :
 	-@erase "$(INTDIR)\ap_cpystrn.obj"
+	-@erase "$(INTDIR)\ap_fnmatch.obj"
 	-@erase "$(INTDIR)\ap_signal.obj"
 	-@erase "$(INTDIR)\ap_slack.obj"
 	-@erase "$(INTDIR)\ap_snprintf.obj"
 	-@erase "$(INTDIR)\vc50.idb"
 	-@erase "$(OUTDIR)\ap.lib"
 
@@ -115,12 +118,13 @@
 BSC32_SBRS= \
 	
 LIB32=link.exe -lib
 LIB32_FLAGS=/nologo /out:"$(OUTDIR)\ap.lib" 
 LIB32_OBJS= \
 	"$(INTDIR)\ap_cpystrn.obj" \
+	"$(INTDIR)\ap_fnmatch.obj" \
 	"$(INTDIR)\ap_signal.obj" \
 	"$(INTDIR)\ap_slack.obj" \
 	"$(INTDIR)\ap_snprintf.obj"
 
 "$(OUTDIR)\ap.lib" : "$(OUTDIR)" $(DEF_FILE) $(LIB32_OBJS)
     $(LIB32) @<<
@@ -172,19 +176,15 @@
 	"..\include\conf.h"\
 	"..\include\hsregex.h"\
 	"..\include\httpd.h"\
 	"..\include\util_uri.h"\
 	"..\os\win32\os.h"\
 	"..\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
 	
 NODEP_CPP_AP_CP=\
-	"..\include\ebcdic.h"\
-	"..\include\os.h"\
-	"..\include\sfio.h"\
+	"..\include\apctype.h"\
 	
 
 "$(INTDIR)\ap_cpystrn.obj" : $(SOURCE) $(DEP_CPP_AP_CP) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ap - Win32 Debug"
@@ -197,18 +197,39 @@
 	"..\include\hsregex.h"\
 	"..\include\httpd.h"\
 	"..\include\util_uri.h"\
 	"..\os\win32\os.h"\
 	"..\os\win32\readdir.h"\
 	
+NODEP_CPP_AP_CP=\
+	"..\include\hide.h"\
+	
 
 "$(INTDIR)\ap_cpystrn.obj" : $(SOURCE) $(DEP_CPP_AP_CP) "$(INTDIR)"
 
 
 !ENDIF 
 
+SOURCE=.\ap_fnmatch.c
+DEP_CPP_AP_FN=\
+	"..\include\ap_config.h"\
+	"..\include\ap_ctype.h"\
+	"..\include\fnmatch.h"\
+	"..\include\hsregex.h"\
+	"..\os\win32\os.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_AP_FN=\
+	"..\include\ap_config_auto.h"\
+	"..\include\os.h"\
+	
+
+"$(INTDIR)\ap_fnmatch.obj" : $(SOURCE) $(DEP_CPP_AP_FN) "$(INTDIR)"
+
+
 SOURCE=.\ap_signal.c
 
 !IF  "$(CFG)" == "ap - Win32 Release"
 
 DEP_CPP_AP_SI=\
 	"..\include\alloc.h"\
@@ -217,19 +238,15 @@
 	"..\include\conf.h"\
 	"..\include\hsregex.h"\
 	"..\include\httpd.h"\
 	"..\include\util_uri.h"\
 	"..\os\win32\os.h"\
 	"..\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
 	
 NODEP_CPP_AP_SI=\
-	"..\include\ebcdic.h"\
-	"..\include\os.h"\
-	"..\include\sfio.h"\
+	"..\include\apctype.h"\
 	
 
 "$(INTDIR)\ap_signal.obj" : $(SOURCE) $(DEP_CPP_AP_SI) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ap - Win32 Debug"
@@ -242,12 +259,15 @@
 	"..\include\hsregex.h"\
 	"..\include\httpd.h"\
 	"..\include\util_uri.h"\
 	"..\os\win32\os.h"\
 	"..\os\win32\readdir.h"\
 	
+NODEP_CPP_AP_SI=\
+	"..\include\hide.h"\
+	
 
 "$(INTDIR)\ap_signal.obj" : $(SOURCE) $(DEP_CPP_AP_SI) "$(INTDIR)"
 
 
 !ENDIF 
 
@@ -263,19 +283,15 @@
 	"..\include\hsregex.h"\
 	"..\include\http_log.h"\
 	"..\include\httpd.h"\
 	"..\include\util_uri.h"\
 	"..\os\win32\os.h"\
 	"..\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
 	
 NODEP_CPP_AP_SL=\
-	"..\include\ebcdic.h"\
-	"..\include\os.h"\
-	"..\include\sfio.h"\
+	"..\include\apctype.h"\
 	
 
 "$(INTDIR)\ap_slack.obj" : $(SOURCE) $(DEP_CPP_AP_SL) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ap - Win32 Debug"
@@ -289,12 +305,15 @@
 	"..\include\http_log.h"\
 	"..\include\httpd.h"\
 	"..\include\util_uri.h"\
 	"..\os\win32\os.h"\
 	"..\os\win32\readdir.h"\
 	
+NODEP_CPP_AP_SL=\
+	"..\include\hide.h"\
+	
 
 "$(INTDIR)\ap_slack.obj" : $(SOURCE) $(DEP_CPP_AP_SL) "$(INTDIR)"
 
 
 !ENDIF 
 
@@ -309,36 +328,29 @@
 	"..\include\conf.h"\
 	"..\include\hsregex.h"\
 	"..\include\httpd.h"\
 	"..\include\util_uri.h"\
 	"..\os\win32\os.h"\
 	"..\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
 	
 NODEP_CPP_AP_SN=\
-	"..\include\ebcdic.h"\
-	"..\include\os.h"\
-	"..\include\sfio.h"\
+	"..\include\apctype.h"\
 	
 
 "$(INTDIR)\ap_snprintf.obj" : $(SOURCE) $(DEP_CPP_AP_SN) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ap - Win32 Debug"
 
 DEP_CPP_AP_SN=\
-	"..\include\alloc.h"\
-	"..\include\ap.h"\
-	"..\include\buff.h"\
 	"..\include\conf.h"\
 	"..\include\hsregex.h"\
-	"..\include\httpd.h"\
-	"..\include\util_uri.h"\
 	"..\os\win32\os.h"\
-	"..\os\win32\readdir.h"\
+	
+NODEP_CPP_AP_SN=\
+	"..\include\hide.h"\
 	
 
 "$(INTDIR)\ap_snprintf.obj" : $(SOURCE) $(DEP_CPP_AP_SN) "$(INTDIR)"
 
 
 !ENDIF 
diff -BEr -U 6 apache_1.3.1/src/ap/Makefile.tmpl apache_1.3.2/src/ap/Makefile.tmpl
--- apache_1.3.1/src/ap/Makefile.tmpl	1998-07-13 19:32:32.000000000 +0800
+++ apache_1.3.2/src/ap/Makefile.tmpl	1998-09-07 14:59:32.000000000 +0800
@@ -3,13 +3,13 @@
 INCLUDES=$(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)
 LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS)
 
 LIB=libap.a
 
 OBJS=ap_execve.o ap_cpystrn.o ap_signal.o \
-     ap_slack.o ap_snprintf.o
+     ap_slack.o ap_snprintf.o ap_fnmatch.o
 
 .c.o:
 	$(CC) -c $(INCLUDES) $(CFLAGS) $<
 
 all: $(LIB)
 
@@ -37,25 +37,29 @@
 	           -e '1,$$s: $(OSDIR)/: $$(OSDIR)/:g' Makefile.new \
 		> Makefile.tmpl \
 	    && rm Makefile.new
 
 # DO NOT REMOVE
 ap_cpystrn.o: ap_cpystrn.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h
 ap_execve.o: ap_execve.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h
+ap_fnmatch.o: ap_fnmatch.c $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
  $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h
+ $(INCDIR)/hsregex.h $(INCDIR)/fnmatch.h
 ap_signal.o: ap_signal.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h
 ap_slack.o: ap_slack.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_log.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_log.h
 ap_snprintf.o: ap_snprintf.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h
diff -BEr -U 6 apache_1.3.1/src/ApacheCore.dsp apache_1.3.2/src/ApacheCore.dsp
--- apache_1.3.1/src/ApacheCore.dsp	1998-05-30 02:20:34.000000000 +0800
+++ apache_1.3.2/src/ApacheCore.dsp	1998-08-06 06:15:01.000000000 +0800
@@ -107,16 +107,12 @@
 # Begin Source File
 
 SOURCE=.\buildmark.c
 # End Source File
 # Begin Source File
 
-SOURCE=.\main\fnmatch.c
-# End Source File
-# Begin Source File
-
 SOURCE=.\os\win32\getopt.c
 # End Source File
 # Begin Source File
 
 SOURCE=.\main\http_config.c
 # End Source File
@@ -279,12 +275,16 @@
 # Begin Source File
 
 SOURCE=.\include\ap.h
 # End Source File
 # Begin Source File
 
+SOURCE=.\include\ap_md5.h
+# End Source File
+# Begin Source File
+
 SOURCE=.\include\buff.h
 # End Source File
 # Begin Source File
 
 SOURCE=.\include\conf.h
 # End Source File
@@ -339,16 +339,12 @@
 # Begin Source File
 
 SOURCE=.\include\httpd.h
 # End Source File
 # Begin Source File
 
-SOURCE=.\include\ap_md5.h
-# End Source File
-# Begin Source File
-
 SOURCE=.\modules\standard\mod_mime.h
 # End Source File
 # Begin Source File
 
 SOURCE=.\include\multithread.h
 # End Source File
diff -BEr -U 6 apache_1.3.1/src/ApacheCore.mak apache_1.3.2/src/ApacheCore.mak
--- apache_1.3.1/src/ApacheCore.mak	1998-05-30 02:20:34.000000000 +0800
+++ apache_1.3.2/src/ApacheCore.mak	1998-08-09 22:33:09.000000000 +0800
@@ -25,16 +25,12 @@
 !IF "$(OS)" == "Windows_NT"
 NULL=
 !ELSE 
 NULL=nul
 !ENDIF 
 
-CPP=cl.exe
-MTL=midl.exe
-RSC=rc.exe
-
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 OUTDIR=.\CoreR
 INTDIR=.\CoreR
 # Begin Custom Macros
 OutDir=.\.\CoreR
@@ -51,13 +47,12 @@
 !ENDIF 
 
 CLEAN :
 	-@erase "$(INTDIR)\alloc.obj"
 	-@erase "$(INTDIR)\buff.obj"
 	-@erase "$(INTDIR)\buildmark.obj"
-	-@erase "$(INTDIR)\fnmatch.obj"
 	-@erase "$(INTDIR)\getopt.obj"
 	-@erase "$(INTDIR)\http_config.obj"
 	-@erase "$(INTDIR)\http_core.obj"
 	-@erase "$(INTDIR)\http_log.obj"
 	-@erase "$(INTDIR)\http_main.obj"
 	-@erase "$(INTDIR)\http_protocol.obj"
@@ -99,18 +94,52 @@
 	-@erase "$(OUTDIR)\ApacheCore.exp"
 	-@erase "$(OUTDIR)\ApacheCore.lib"
 
 "$(OUTDIR)" :
     if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
 
+CPP=cl.exe
 CPP_PROJ=/nologo /MD /W3 /GX /O2 /I ".\include" /D "WIN32" /D "NDEBUG" /D\
  "_WINDOWS" /Fp"$(INTDIR)\ApacheCore.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\"\
  /FD /c 
 CPP_OBJS=.\CoreR/
 CPP_SBRS=.
+
+.c{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cpp{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cxx{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.c{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cpp{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cxx{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+MTL=midl.exe
 MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32 
+RSC=rc.exe
 BSC32=bscmake.exe
 BSC32_FLAGS=/nologo /o"$(OUTDIR)\ApacheCore.bsc" 
 BSC32_SBRS= \
 	
 LINK32=link.exe
 LINK32_FLAGS=os\win32\ApacheOSR\ApacheOS.lib regex\release\regex.lib\
@@ -122,13 +151,12 @@
 DEF_FILE= \
 	".\ApacheCore.def"
 LINK32_OBJS= \
 	"$(INTDIR)\alloc.obj" \
 	"$(INTDIR)\buff.obj" \
 	"$(INTDIR)\buildmark.obj" \
-	"$(INTDIR)\fnmatch.obj" \
 	"$(INTDIR)\getopt.obj" \
 	"$(INTDIR)\http_config.obj" \
 	"$(INTDIR)\http_core.obj" \
 	"$(INTDIR)\http_log.obj" \
 	"$(INTDIR)\http_main.obj" \
 	"$(INTDIR)\http_protocol.obj" \
@@ -193,14 +221,12 @@
 	-@erase "$(INTDIR)\alloc.obj"
 	-@erase "$(INTDIR)\alloc.sbr"
 	-@erase "$(INTDIR)\buff.obj"
 	-@erase "$(INTDIR)\buff.sbr"
 	-@erase "$(INTDIR)\buildmark.obj"
 	-@erase "$(INTDIR)\buildmark.sbr"
-	-@erase "$(INTDIR)\fnmatch.obj"
-	-@erase "$(INTDIR)\fnmatch.sbr"
 	-@erase "$(INTDIR)\getopt.obj"
 	-@erase "$(INTDIR)\getopt.sbr"
 	-@erase "$(INTDIR)\http_config.obj"
 	-@erase "$(INTDIR)\http_config.sbr"
 	-@erase "$(INTDIR)\http_core.obj"
 	-@erase "$(INTDIR)\http_core.sbr"
@@ -285,25 +311,58 @@
 	-@erase "$(OUTDIR)\ApacheCore.lib"
 	-@erase "$(OUTDIR)\ApacheCore.pdb"
 
 "$(OUTDIR)" :
     if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
 
+CPP=cl.exe
 CPP_PROJ=/nologo /MDd /W3 /Gm /GX /Zi /Od /I ".\include" /D "WIN32" /D "_DEBUG"\
  /D "_WINDOWS" /FR"$(INTDIR)\\" /Fp"$(INTDIR)\ApacheCore.pch" /YX\
  /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 
 CPP_OBJS=.\CoreD/
 CPP_SBRS=.\CoreD/
+
+.c{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cpp{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cxx{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.c{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cpp{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cxx{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+MTL=midl.exe
 MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32 
+RSC=rc.exe
 BSC32=bscmake.exe
 BSC32_FLAGS=/nologo /o"$(OUTDIR)\ApacheCore.bsc" 
 BSC32_SBRS= \
 	"$(INTDIR)\alloc.sbr" \
 	"$(INTDIR)\buff.sbr" \
 	"$(INTDIR)\buildmark.sbr" \
-	"$(INTDIR)\fnmatch.sbr" \
 	"$(INTDIR)\getopt.sbr" \
 	"$(INTDIR)\http_config.sbr" \
 	"$(INTDIR)\http_core.sbr" \
 	"$(INTDIR)\http_log.sbr" \
 	"$(INTDIR)\http_main.sbr" \
 	"$(INTDIR)\http_protocol.sbr" \
@@ -356,13 +415,12 @@
 DEF_FILE= \
 	".\ApacheCore.def"
 LINK32_OBJS= \
 	"$(INTDIR)\alloc.obj" \
 	"$(INTDIR)\buff.obj" \
 	"$(INTDIR)\buildmark.obj" \
-	"$(INTDIR)\fnmatch.obj" \
 	"$(INTDIR)\getopt.obj" \
 	"$(INTDIR)\http_config.obj" \
 	"$(INTDIR)\http_core.obj" \
 	"$(INTDIR)\http_log.obj" \
 	"$(INTDIR)\http_main.obj" \
 	"$(INTDIR)\http_protocol.obj" \
@@ -404,54 +462,25 @@
     $(LINK32) @<<
   $(LINK32_FLAGS) $(LINK32_OBJS)
 <<
 
 !ENDIF 
 
-.c{$(CPP_OBJS)}.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
-.cpp{$(CPP_OBJS)}.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
-.cxx{$(CPP_OBJS)}.obj::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
-.c{$(CPP_SBRS)}.sbr::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
-.cpp{$(CPP_SBRS)}.sbr::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
-.cxx{$(CPP_SBRS)}.sbr::
-   $(CPP) @<<
-   $(CPP_PROJ) $< 
-<<
-
 
 !IF "$(CFG)" == "ApacheCore - Win32 Release" || "$(CFG)" ==\
  "ApacheCore - Win32 Debug"
 SOURCE=.\main\alloc.c
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_ALLOC=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\multithread.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
@@ -464,21 +493,30 @@
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_ALLOC=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\multithread.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_ALLOC=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\alloc.obj"	"$(INTDIR)\alloc.sbr" : $(SOURCE) $(DEP_CPP_ALLOC)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -489,14 +527,15 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_BUFF_=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
@@ -509,21 +548,30 @@
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_BUFF_=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_BUFF_=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\buff.obj"	"$(INTDIR)\buff.sbr" : $(SOURCE) $(DEP_CPP_BUFF_)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -534,82 +582,54 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_BUILD=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_BUILD=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\buildmark.obj" : $(SOURCE) $(DEP_CPP_BUILD) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_BUILD=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_BUILD=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\buildmark.obj"	"$(INTDIR)\buildmark.sbr" : $(SOURCE)\
  $(DEP_CPP_BUILD) "$(INTDIR)"
 
 
 !ENDIF 
 
-SOURCE=.\main\fnmatch.c
-
-!IF  "$(CFG)" == "ApacheCore - Win32 Release"
-
-DEP_CPP_FNMAT=\
-	".\include\conf.h"\
-	".\include\fnmatch.h"\
-	".\include\hsregex.h"\
-	".\os\win32\os.h"\
-	
-
-"$(INTDIR)\fnmatch.obj" : $(SOURCE) $(DEP_CPP_FNMAT) "$(INTDIR)"
-	$(CPP) $(CPP_PROJ) $(SOURCE)
-
-
-!ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
-
-DEP_CPP_FNMAT=\
-	".\include\conf.h"\
-	".\include\fnmatch.h"\
-	".\include\hsregex.h"\
-	".\os\win32\os.h"\
-	
-
-"$(INTDIR)\fnmatch.obj"	"$(INTDIR)\fnmatch.sbr" : $(SOURCE) $(DEP_CPP_FNMAT)\
- "$(INTDIR)"
-	$(CPP) $(CPP_PROJ) $(SOURCE)
-
-
-!ENDIF 
-
 SOURCE=.\os\win32\getopt.c
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 
 "$(INTDIR)\getopt.obj" : $(SOURCE) "$(INTDIR)"
@@ -629,58 +649,61 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_HTTP_=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\explain.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_request.h"\
 	".\include\http_vhost.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_HTTP_=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_config.obj" : $(SOURCE) $(DEP_CPP_HTTP_) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_HTTP_=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\explain.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_request.h"\
 	".\include\http_vhost.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_HTTP_=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_config.obj"	"$(INTDIR)\http_config.sbr" : $(SOURCE)\
  $(DEP_CPP_HTTP_) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -691,70 +714,73 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_HTTP_C=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
+	".\include\ap_md5.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\fnmatch.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\http_vhost.h"\
 	".\include\httpd.h"\
-	".\include\ap_md5.h"\
 	".\include\rfc1413.h"\
 	".\include\scoreboard.h"\
 	".\include\util_md5.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_HTTP_C=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_core.obj" : $(SOURCE) $(DEP_CPP_HTTP_C) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_HTTP_C=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
+	".\include\ap_md5.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\fnmatch.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\http_vhost.h"\
 	".\include\httpd.h"\
-	".\include\ap_md5.h"\
 	".\include\rfc1413.h"\
 	".\include\scoreboard.h"\
 	".\include\util_md5.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_HTTP_C=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_core.obj"	"$(INTDIR)\http_core.sbr" : $(SOURCE)\
  $(DEP_CPP_HTTP_C) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -765,52 +791,55 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_HTTP_L=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_HTTP_L=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_log.obj" : $(SOURCE) $(DEP_CPP_HTTP_L) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_HTTP_L=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_HTTP_L=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_log.obj"	"$(INTDIR)\http_log.sbr" : $(SOURCE) $(DEP_CPP_HTTP_L)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -821,14 +850,15 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_HTTP_M=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\explain.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
@@ -843,32 +873,26 @@
 	".\include\util_uri.h"\
 	".\os\win32\getopt.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
 	".\os\win32\registry.h"\
 	".\os\win32\service.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_HTTP_M=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_main.obj" : $(SOURCE) $(DEP_CPP_HTTP_M) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_HTTP_M=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\explain.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
@@ -883,12 +907,20 @@
 	".\include\util_uri.h"\
 	".\os\win32\getopt.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
 	".\os\win32\registry.h"\
 	".\os\win32\service.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_HTTP_M=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_main.obj"	"$(INTDIR)\http_main.sbr" : $(SOURCE)\
  $(DEP_CPP_HTTP_M) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -899,14 +931,15 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_HTTP_P=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
@@ -915,32 +948,26 @@
 	".\include\http_vhost.h"\
 	".\include\httpd.h"\
 	".\include\util_date.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_HTTP_P=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_protocol.obj" : $(SOURCE) $(DEP_CPP_HTTP_P) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_HTTP_P=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
@@ -949,12 +976,20 @@
 	".\include\http_vhost.h"\
 	".\include\httpd.h"\
 	".\include\util_date.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_HTTP_P=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_protocol.obj"	"$(INTDIR)\http_protocol.sbr" : $(SOURCE)\
  $(DEP_CPP_HTTP_P) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -965,14 +1000,15 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_HTTP_R=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\fnmatch.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
@@ -980,32 +1016,26 @@
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\scoreboard.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_HTTP_R=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_request.obj" : $(SOURCE) $(DEP_CPP_HTTP_R) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_HTTP_R=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\fnmatch.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
@@ -1013,12 +1043,20 @@
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\scoreboard.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_HTTP_R=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_request.obj"	"$(INTDIR)\http_request.sbr" : $(SOURCE)\
  $(DEP_CPP_HTTP_R) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1029,54 +1067,57 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_HTTP_V=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_log.h"\
 	".\include\http_protocol.h"\
 	".\include\http_vhost.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_HTTP_V=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_vhost.obj" : $(SOURCE) $(DEP_CPP_HTTP_V) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_HTTP_V=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_log.h"\
 	".\include\http_protocol.h"\
 	".\include\http_vhost.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_HTTP_V=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\http_vhost.obj"	"$(INTDIR)\http_vhost.sbr" : $(SOURCE)\
  $(DEP_CPP_HTTP_V) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1085,34 +1126,38 @@
 
 SOURCE=.\main\md5c.c
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MD5C_=\
-	".\include\conf.h"\
-	".\include\hsregex.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\ap_md5.h"\
+	".\include\hsregex.h"\
 	".\os\win32\os.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MD5C_=\
-	".\include\os.h"\
 	
 
 "$(INTDIR)\md5c.obj" : $(SOURCE) $(DEP_CPP_MD5C_) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MD5C_=\
-	".\include\conf.h"\
-	".\include\hsregex.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\ap_md5.h"\
+	".\include\hsregex.h"\
 	".\os\win32\os.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MD5C_=\
+	".\include\ap_config_auto.h"\
+	".\include\os.h"\
+	".\main\ebcdic.h"\
 	
 
 "$(INTDIR)\md5c.obj"	"$(INTDIR)\md5c.sbr" : $(SOURCE) $(DEP_CPP_MD5C_)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1123,52 +1168,55 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_A=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_A=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_access.obj" : $(SOURCE) $(DEP_CPP_MOD_A) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_A=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_A=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_access.obj"	"$(INTDIR)\mod_access.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_A) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1179,58 +1227,61 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_AC=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_AC=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_actions.obj" : $(SOURCE) $(DEP_CPP_MOD_AC) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_AC=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_AC=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_actions.obj"	"$(INTDIR)\mod_actions.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_AC) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1241,46 +1292,49 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_AL=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_AL=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_alias.obj" : $(SOURCE) $(DEP_CPP_MOD_AL) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_AL=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_AL=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_alias.obj"	"$(INTDIR)\mod_alias.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_AL) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1291,56 +1345,59 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_AS=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_AS=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_asis.obj" : $(SOURCE) $(DEP_CPP_MOD_AS) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_AS=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_AS=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_asis.obj"	"$(INTDIR)\mod_asis.sbr" : $(SOURCE) $(DEP_CPP_MOD_AS)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1351,52 +1408,55 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_AU=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_protocol.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_AU=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_auth.obj" : $(SOURCE) $(DEP_CPP_MOD_AU) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_AU=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_protocol.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_AU=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_auth.obj"	"$(INTDIR)\mod_auth.sbr" : $(SOURCE) $(DEP_CPP_MOD_AU)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1407,58 +1467,61 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_AUT=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_AUT=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_autoindex.obj" : $(SOURCE) $(DEP_CPP_MOD_AUT) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_AUT=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_AUT=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_autoindex.obj"	"$(INTDIR)\mod_autoindex.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_AUT) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1469,14 +1532,15 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_C=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
@@ -1484,32 +1548,26 @@
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_C=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_cgi.obj" : $(SOURCE) $(DEP_CPP_MOD_C) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_C=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
@@ -1517,12 +1575,20 @@
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_C=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_cgi.obj"	"$(INTDIR)\mod_cgi.sbr" : $(SOURCE) $(DEP_CPP_MOD_C)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1533,58 +1599,61 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_D=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_D=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_dir.obj" : $(SOURCE) $(DEP_CPP_MOD_D) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_D=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_D=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_dir.obj"	"$(INTDIR)\mod_dir.sbr" : $(SOURCE) $(DEP_CPP_MOD_D)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1595,46 +1664,49 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_E=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_E=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_env.obj" : $(SOURCE) $(DEP_CPP_MOD_E) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_E=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_E=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_env.obj"	"$(INTDIR)\mod_env.sbr" : $(SOURCE) $(DEP_CPP_MOD_E)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1645,58 +1717,61 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_I=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_I=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_imap.obj" : $(SOURCE) $(DEP_CPP_MOD_I) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_I=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_I=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_imap.obj"	"$(INTDIR)\mod_imap.sbr" : $(SOURCE) $(DEP_CPP_MOD_I)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1707,60 +1782,63 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_IN=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_IN=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
-	".\modules\standard\config.h"\
-	".\modules\standard\modules\perl\mod_perl.h"\
 	
 
 "$(INTDIR)\mod_include.obj" : $(SOURCE) $(DEP_CPP_MOD_IN) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_IN=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_IN=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
+	".\modules\standard\config.h"\
+	".\modules\standard\modules\perl\mod_perl.h"\
 	
 
 "$(INTDIR)\mod_include.obj"	"$(INTDIR)\mod_include.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_IN) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1771,55 +1849,58 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_IS=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_IS=\
-	".\include\ebcdic.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_isapi.obj" : $(SOURCE) $(DEP_CPP_MOD_IS) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_IS=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_protocol.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_IS=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_isapi.obj"	"$(INTDIR)\mod_isapi.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_IS) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1830,50 +1911,53 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_L=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_L=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_log_config.obj" : $(SOURCE) $(DEP_CPP_MOD_L) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_L=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_L=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_log_config.obj"	"$(INTDIR)\mod_log_config.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_L) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1884,46 +1968,51 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_M=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
+	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_M=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_mime.obj" : $(SOURCE) $(DEP_CPP_MOD_M) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_M=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
+	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_M=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_mime.obj"	"$(INTDIR)\mod_mime.sbr" : $(SOURCE) $(DEP_CPP_MOD_M)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1934,54 +2023,57 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_N=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_N=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_negotiation.obj" : $(SOURCE) $(DEP_CPP_MOD_N) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_N=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_request.h"\
 	".\include\httpd.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_N=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_negotiation.obj"	"$(INTDIR)\mod_negotiation.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_N) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -1992,50 +2084,53 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_S=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_S=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_setenvif.obj" : $(SOURCE) $(DEP_CPP_MOD_S) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_S=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_S=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_setenvif.obj"	"$(INTDIR)\mod_setenvif.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_S) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2046,48 +2141,51 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_SO=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_SO=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_so.obj" : $(SOURCE) $(DEP_CPP_MOD_SO) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_SO=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_SO=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_so.obj"	"$(INTDIR)\mod_so.sbr" : $(SOURCE) $(DEP_CPP_MOD_SO)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2098,46 +2196,49 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MOD_U=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_U=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_userdir.obj" : $(SOURCE) $(DEP_CPP_MOD_U) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MOD_U=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MOD_U=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_userdir.obj"	"$(INTDIR)\mod_userdir.sbr" : $(SOURCE)\
  $(DEP_CPP_MOD_U) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2148,45 +2249,48 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MODUL=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MODUL=\
-	".\include\ebcdic.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\modules.obj" : $(SOURCE) $(DEP_CPP_MODUL) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MODUL=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_config.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MODUL=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\modules.obj"	"$(INTDIR)\modules.sbr" : $(SOURCE) $(DEP_CPP_MODUL)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2195,58 +2299,59 @@
 
 SOURCE=.\os\win32\multithread.c
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_MULTI=\
-	".\include\conf.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\hsregex.h"\
 	".\include\multithread.h"\
 	".\os\win32\os.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
 	
 
 "$(INTDIR)\multithread.obj" : $(SOURCE) $(DEP_CPP_MULTI) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_MULTI=\
-	".\include\conf.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\hsregex.h"\
 	".\include\multithread.h"\
 	".\os\win32\os.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_MULTI=\
+	".\include\ap_config_auto.h"\
 	
 
 "$(INTDIR)\multithread.obj"	"$(INTDIR)\multithread.sbr" : $(SOURCE)\
  $(DEP_CPP_MULTI) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ENDIF 
 
 SOURCE=.\os\win32\readdir.c
-
-!IF  "$(CFG)" == "ApacheCore - Win32 Release"
-
 DEP_CPP_READD=\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\types.h"\
 	
 
+!IF  "$(CFG)" == "ApacheCore - Win32 Release"
+
+
 "$(INTDIR)\readdir.obj" : $(SOURCE) $(DEP_CPP_READD) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
-DEP_CPP_READD=\
-	".\os\win32\readdir.h"\
-	
 
 "$(INTDIR)\readdir.obj"	"$(INTDIR)\readdir.sbr" : $(SOURCE) $(DEP_CPP_READD)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
@@ -2256,45 +2361,48 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_REGIS=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_REGIS=\
-	".\include\ebcdic.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\registry.obj" : $(SOURCE) $(DEP_CPP_REGIS) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_REGIS=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_REGIS=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\registry.obj"	"$(INTDIR)\registry.sbr" : $(SOURCE) $(DEP_CPP_REGIS)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2305,50 +2413,53 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_RFC14=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\httpd.h"\
 	".\include\rfc1413.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_RFC14=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\rfc1413.obj" : $(SOURCE) $(DEP_CPP_RFC14) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_RFC14=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\httpd.h"\
 	".\include\rfc1413.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_RFC14=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\rfc1413.obj"	"$(INTDIR)\rfc1413.sbr" : $(SOURCE) $(DEP_CPP_RFC14)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2359,55 +2470,58 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_SERVI=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\httpd.h"\
 	".\include\multithread.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
 	".\os\win32\registry.h"\
 	".\os\win32\service.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_SERVI=\
-	".\include\ebcdic.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\service.obj" : $(SOURCE) $(DEP_CPP_SERVI) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_SERVI=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
 	".\include\httpd.h"\
 	".\include\multithread.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
 	".\os\win32\registry.h"\
 	".\os\win32\service.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_SERVI=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\service.obj"	"$(INTDIR)\service.sbr" : $(SOURCE) $(DEP_CPP_SERVI)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2418,50 +2532,53 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_UTIL_=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\main\test_char.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_UTIL_=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util.obj" : $(SOURCE) $(DEP_CPP_UTIL_) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_UTIL_=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\main\test_char.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_UTIL_=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util.obj"	"$(INTDIR)\util.sbr" : $(SOURCE) $(DEP_CPP_UTIL_)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2470,34 +2587,37 @@
 
 SOURCE=.\main\util_date.c
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_UTIL_D=\
-	".\include\conf.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\hsregex.h"\
 	".\include\util_date.h"\
 	".\os\win32\os.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_UTIL_D=\
-	".\include\os.h"\
 	
 
 "$(INTDIR)\util_date.obj" : $(SOURCE) $(DEP_CPP_UTIL_D) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_UTIL_D=\
-	".\include\conf.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\hsregex.h"\
 	".\include\util_date.h"\
 	".\os\win32\os.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_UTIL_D=\
+	".\include\ap_config_auto.h"\
+	".\include\os.h"\
 	
 
 "$(INTDIR)\util_date.obj"	"$(INTDIR)\util_date.sbr" : $(SOURCE)\
  $(DEP_CPP_UTIL_D) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2508,48 +2628,51 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_UTIL_M=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
+	".\include\ap_md5.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\httpd.h"\
-	".\include\ap_md5.h"\
 	".\include\util_md5.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_UTIL_M=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util_md5.obj" : $(SOURCE) $(DEP_CPP_UTIL_M) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_UTIL_M=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
+	".\include\ap_md5.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\httpd.h"\
-	".\include\ap_md5.h"\
 	".\include\util_md5.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_UTIL_M=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util_md5.obj"	"$(INTDIR)\util_md5.sbr" : $(SOURCE) $(DEP_CPP_UTIL_M)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2560,14 +2683,15 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_UTIL_S=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
@@ -2576,32 +2700,26 @@
 	".\include\httpd.h"\
 	".\include\util_date.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_UTIL_S=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util_script.obj" : $(SOURCE) $(DEP_CPP_UTIL_S) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_UTIL_S=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_config.h"\
 	".\include\http_core.h"\
 	".\include\http_log.h"\
 	".\include\http_main.h"\
@@ -2610,12 +2728,20 @@
 	".\include\httpd.h"\
 	".\include\util_date.h"\
 	".\include\util_script.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_UTIL_S=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util_script.obj"	"$(INTDIR)\util_script.sbr" : $(SOURCE)\
  $(DEP_CPP_UTIL_S) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2626,50 +2752,53 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_UTIL_U=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\main\uri_delims.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_UTIL_U=\
-	".\include\ebcdic.h"\
-	".\include\os.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util_uri.obj" : $(SOURCE) $(DEP_CPP_UTIL_U) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_UTIL_U=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
 	".\include\http_conf_globals.h"\
 	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\main\uri_delims.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_UTIL_U=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\os.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util_uri.obj"	"$(INTDIR)\util_uri.sbr" : $(SOURCE) $(DEP_CPP_UTIL_U)\
  "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
@@ -2680,43 +2809,48 @@
 
 !IF  "$(CFG)" == "ApacheCore - Win32 Release"
 
 DEP_CPP_UTIL_W=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
+	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_UTIL_W=\
-	".\include\ebcdic.h"\
-	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util_win32.obj" : $(SOURCE) $(DEP_CPP_UTIL_W) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheCore - Win32 Debug"
 
 DEP_CPP_UTIL_W=\
 	".\include\alloc.h"\
 	".\include\ap.h"\
+	".\include\ap_config.h"\
+	".\include\ap_ctype.h"\
 	".\include\buff.h"\
-	".\include\conf.h"\
 	".\include\hsregex.h"\
+	".\include\http_log.h"\
 	".\include\httpd.h"\
 	".\include\util_uri.h"\
 	".\os\win32\os.h"\
 	".\os\win32\readdir.h"\
+	{$(INCLUDE)}"sys\stat.h"\
+	{$(INCLUDE)}"sys\types.h"\
+	
+NODEP_CPP_UTIL_W=\
+	".\include\ap_config_auto.h"\
+	".\include\ebcdic.h"\
+	".\include\sfio.h"\
 	
 
 "$(INTDIR)\util_win32.obj"	"$(INTDIR)\util_win32.sbr" : $(SOURCE)\
  $(DEP_CPP_UTIL_W) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
Only in apache_1.3.2/src: BUILD.NOTES
diff -BEr -U 6 apache_1.3.1/src/CHANGES apache_1.3.2/src/CHANGES
--- apache_1.3.1/src/CHANGES	1998-07-19 06:50:15.000000000 +0800
+++ apache_1.3.2/src/CHANGES	1998-09-20 05:54:55.000000000 +0800
@@ -1,6 +1,396 @@
+Changes with Apache 1.3.2
+
+  *) Fix bug in ap_remove_module(), which caused problems for dso's 
+     who were the top_module.  [Doug MacEachern]
+
+  *) Add support for Berkeley-DB/2.x (in addition to Berkeley-DB/1.x) to
+     mod_auth_db to both be friendly to users who wants to use this version
+     and to avoid problems under platforms where only version 2.x is present.
+     [Dan Jacobowitz <drow@false.org>, Ralf S. Engelschall]
+
+  *) When using ap_log_rerror(), make the error message available to the
+     *ERROR_NOTES envariables by default.  [Ken Coar]
+
+  *) BS2000 platform only: get rid of the nasty BS2000AuthFile.
+     You now must define a BS2000Account name for the server User.
+     This has fewer security implications than the old approach.
+     [Martin Kraemer]
+
+  *) Fix SHARED_CORE feature for HPUX platform: We now use extension `.sl'
+     instead of `.so' and `SHLIB_PATH' instead of `LD_LIBRARY_PATH' on this
+     platform to make the braindead HPUX linker happy. Notice, for the module
+     DSOs we don't have to use this, because these are loaded manually (and
+     not via HPUX' dld). [Ralf S. Engelschall] PR#2905, PR#2968
+
+  *) Remove 64 thread limit on Win32.
+     [Bill Stoddard <stoddard@raleigh.ibm.com>]
+
+  *) Remove redundant substitutions in top-level Makefile.tmpl.
+     [Ralf S. Engelschall]
+
+  *) Fix APACI's `Group' configuration adjustment - especially for Linux
+     platforms where `nogroup' exists in /etc/group. [Ralf S. Engelschall]
+ 
+  *) Make PrintPath work generically instead of having one version
+     strictly for OS/2. [Jim Jagielski, Brian Havard]
+
+  *) Fix the recently introduced C header file checking: We now use the C
+     pre-processor pass only (and no longer the complete compiler pass) to
+     determine whether a C header file exists or not. Because only this way
+     we're safe against inter-header dependencies (which caused horrible
+     portability problems). The only drawback is that we now have a CPP
+     configuration variable which has to be determined first (we do a similar
+     approach as GNU Autoconf does here). When all fails the user still has
+     the possibility to override it manually via APACI or src/Configuration.
+     As a fallback for the header check itself we can directly check the
+     existance of the file under /usr/include, too.
+     [Ralf S. Engelschall] PR#2777
+
+  *) PORT: Added RHAPSODY (Mac OS X Server) support. MAP_TMPFILE defined
+     as an alternate mechanism for mmap'd shared memory for RHAPSODY.
+     ap_private_extern defined to hide symbols that conflict with loaded
+     dynamic libraries on the NEXT and RHAPSODY platforms.
+     [Wilfredo Sanchez <wsanchez@apple.com>]
+
+  *) Delete PID file on clean shutdowns.
+     [Charles Randall <crandall@matchlogic.com>] PR#2947
+
+  *) Fix mod_auth_*.html documents: NSCA -> NCSA
+     [Youichirou Koga <y-koga@jp.FreeBSD.org>] PR#2991
+
+  *) Fix INSTALL document: www.gnu.ai.mit.edu -> www.gnu.org
+     [Karl Berry <karl@gnu.org>] PR#2994
+
+  *) Fix dbmmanage.1 manual page.
+     [Youichirou Koga <y-koga@jp.FreeBSD.org>] PR#2992
+     
+  *) Fix possible buffer overflow situation in suexec.c.
+     [Jeff Stewart <jws@purdue.edu>] PR#2790
+
+  *) Add some more LIBS for the SCO5 platform which are needed for the already
+     used -lprot. It's actually a bug in SCO5, of course.
+     [Ronald Record <rr@sco.com>] PR#2533
+
+  *) Fix documentation of ProxyPass/ProxyPassReverse according to the
+     trailing slash problem. [Jon Drukman <jsd@gamespot.com>] PR#2933
+  
+  *) Remove `-msym' option from LDFLAGS_SHLIB for the Digital UNIX (OSF/1)
+     platform, because it's only supported under version 4.0 and higher. But
+     because our GuessOS is still unaware of Digital UNIX versions and the
+     -msym is just to optimize the DSO statup time a little bit it's safe and
+     best when we leave it out now.  [Ralf S. Engelschall] PR#2969
+
+  *) Fix the ap_log_error_old(), ap_log_unixerr() and ap_log_printf()
+     functions: First all three functions no longer fail on strings containing
+     "%" chars and second ap_log_printf() no longer does a double-formatting
+     (instead it directly passes through the message to be formatted to the
+     real internal formatting function). [Ralf S. Engelschall] PR#2941
+
+  *) Allow "Include" directives anywhere in the server config
+     files (but not .htaccess files).  [Ken Coar] PR#2727
+
+  *) The proxy was refusing to serve CONNECT requests except to
+     port 443 (https://) and 563 (snews://). The new AllowCONNECT
+     directive allows the configuration of the ports to which a
+     CONNECT is allowed.  [Sameer Parekh, Martin Kraemer]
+
+  *) mod_expires will now act on content that is not sent from a file
+     on disk.  Previously it would never add an Expires: header to
+     any response that did not come from a file on disk; the only
+     case where it still doesn't (and can't) add one for that type of 
+     content is if you are using a modification date based setting.  
+     [Marc Slemko, Paul Phillips <paulp@go2net.com>]
+
+  *) Problems encountered during .htaccess parsing or CGI execution
+     that lead to a "500 Server Error" condition now provide explanatory
+     text (in the *ERROR_NOTES envariable) to ErrorDocument 500 scripts.
+     [Ken Coar] PR#1291
+
+  *) Add NameWidth keyword to IndexOptions directive so that the
+     width of the filename column is customisable.  [Ken Coar, Dean Gaudet]
+     PR#1949, 2324.
+
+  *) Recognize lowercase _and_ uppercase `uname' results under
+     SCO OpenServer. [David Coelho <drc@ppt.com>]
+
+  *) As duplicate "HTTP/1.0 200 OK" lines within the header seem to be
+     a common problem of (mis-administrated?) IIS servers, make the apache
+     proxy immune to these errors (and ignore the duplicates, but log
+     the fact to error_log). [Martin Kraemer], after the proposal in PR#2914 
+     
+  *) The <IfModule and <IfDefine block starting directives now only
+     allow exactly one argument. Previously, the optional negation
+     character '!' could be separated by whitespace without a syntax
+     error being reported, albeit defeating the IfModule functionality
+     (enclosed directives would ALWAYS be executed). By using the
+     stricter syntax, these hard-to-track errors can be avoided.
+     [Martin Kraemer]
+
+  *) Simplify handling of IndexOptions in mod_autoindex -- and BTW
+     cause the standalone FancyIndexing directive to logically OR
+     into any existing IndexOptions settings rather than wiping
+     them out.  [Ken Coar]
+
+  *) Changes in ftp proxy: make URL parsing simpler by using the
+     parsed_uri stuff.
+     + Add display of the "current directory" in cases where it's
+     different from the supplied path (e.g., ftp://user@host/ lives
+     in /home/user, not in /, therefore clicking on "../" in the
+     starting directory might send us to /home/).
+     + When ftp login fails, (esp. when a user name was part of the
+     URL already), we now return [401 Unauthorized ] to allow the
+     browser to pop up an authorization dialog. This makes passwords
+     slightly less visible (they don't appear in the regular log files)
+     and implements a functionality that other www proxy servers
+     already offered.
+     [Martin Kraemer]
+
+  *) Triggered by the recent "Via:" header changes, the proxy module would
+     dump core for replies with invalid headers (e.g., duplicate
+     "HTTP/1.0 200 OK" lines). These errors are now logged and the
+     core dump is avoided. Also, broken replies are not cached.
+     [Martin Kraemer] PR#2914
+
+  *) new `GprofDir' directive when compiled with -DGPROF, where gprof can
+     plop gmon.out profile data for each child [Doug MacEachern]
+   
+  *) Use the construct ``"$@"'' instead of ``$*'' in the generated
+     config.status script to be immune against arguments with whitespaces.
+     [Yves Arrouye <yves@apple.com>] PR#2866
+
+  *) Replace the inlined information grabbing stuff for the configuration
+     adjustment feature (no --without-confadjust) with calls to a new helper
+     script `buildinfo.sh' which is both more flexible and already proofed to
+     be more robust against platform differences. This mainly fixes the
+     recently occured ``sed: command garbled: ...'' problems.
+     [Ralf S. Engelschall] PR#2776, PR#2848
+
+  *) Make ab.c again pass ``gcc -Wall -Wshadow -Wpointer-arith -Wcast-align
+     -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Winline''
+     without complains after we recently added the POST feature.
+     [Ralf S. Engelschall]
+
+  *) Renamed is_HTTP_xxx() macros to ap_is_HTTP_xxx() name. They are used inside
+     modules as API functions and we forgot them at the big symbol renaming.
+     [Ralf S. Engelschall]
+
+  *) Remove bad reference to non-existing SERVER_VERSION in mod_rewrite.html
+     [Youichirou Koga <y-koga@jp.FreeBSD.ORG>] PR#2895
+
+  *) Dynamically size the filename column of mod_autoindex output.
+     [Dean Gaudet]
+
+  *) Add the ability to do POST requests to the ab benchmarking tool.
+     [Kurt Sussman <kls@best.com>] PR#2871
+
+  *) Bump up MAX_ENV_FLAGS in mod_rewrite.h from the too conservatice limit of
+     5 to 10 because there are some users out there who always have 5 to 8
+     variables in one RewriteRule and had to patch mod_rewrite.h for every
+     release. So 15 should be now more than enough, even for them. (I never
+     needed more than 4 in my RewriteRules ;-)
+     [Ralf S. Engelschall]
+
+  *) Make the proxy generate and understand Via: headers
+     [Martin Kraemer]
+
+  *) Change the proxy to use tables instead of array_headers for
+     the header lines. [Martin Kraemer]
+
+  *) Make sure the config.status file is not overridden when just
+     ``configure --help'' is used. [Ralf S. Engelschall] PR#2844
+
+  *) Split MODULE_MAGIC_NUMBER into _MAJOR/_MINOR numbers. This should
+     provide a way to trace API changes that add functionality but do
+     not create a compatibility issue for precompiled modules, etc.
+     See include/ap_mmn.h for more details.  [Randy Terbush]
+
+  *) Fix suexec installation under `make install root=xxx' situation.
+     [Ralf S. Engelschall]
+
+  *) Extend the output of the -V switch to include the paths of all
+     compiled-in configuration files, if they were overridden at
+     compile time, for least astonishment of the user.
+     [Martin Kraemer]
+
+  *) When READing a request in ExtendedStatus mode, the "old"
+     vhost, request and client information is not displayed.
+     [Jim Jagielski]
+
+  *) STATUS is no longer available. Full status information now
+     run-time configurable using the ExtendedStatus directive.
+     [Jim Jagielski]
+
+  *) SECURITY: Eliminate O(n^2) space DoS attacks (and other O(n^2)
+     cpu time attacks) in header parsing.  Add ap_overlap_tables(),
+     a function which can be used to perform bulk update operations
+     on tables in a more efficient manner.  [Dean Gaudet]
+
+  *) SECURITY: Added compile-time and configurable limits for
+     various aspects of reading a client request to avoid some simple
+     denial of service attacks, including limits on maximum request-line
+     size (LimitRequestLine), number of header fields (LimitRequestFields),
+     and size of any one header field (LimitRequestFieldsize).  Also added
+     a configurable directive LimitRequestBody for limiting the size of the
+     request message body.  [Roy Fielding]
+
+  *) Make status module aware of DNS and logging states, even if
+     STATUS not defined.  [Jim Jagielski]
+
+  *) Fix a problem with the new OS/2 mutexes.  [Brian Havard]
+
+  *) Enhance mod_speling so that CheckSpelling can be used in
+     <Directory> containers and .htaccess files.  [Ken Coar]
+
+  *) API: new ap_custom_response() function for hooking into the
+     ErrorDocument mechanism at runtime [Doug MacEachern]
+
+  *) API: new ap_uuencode() function [Doug MacEachern]
+
+  *) API: scan_script_header_err_core() now "public" and renamed
+     ap_scan_script_header_err_core() [Doug MacEachern]
+
+  *) The 'status' module will now show the process pid's and their
+     state even without full STATUS accounting. [Jim Jagielski]
+
+  *) Restore the client IP address to the error log messages, this
+     was lost during the transition from 1.2 to 1.3.  Add a new
+     function ap_log_rerror() which takes a request_rec * and
+     formats it appropriately.  [Dean Gaudet] PR#2661
+
+  *) Cure ap_cfg_getline() of its nasty habit of compressing internal
+     whitespace in input lines -- including within quoted strings.
+     [Ken Coar]
+     but leading and trailing whitespace should continue to be
+     stripped [Martin Kraemer]
+
+  *) Cleanup of the PrintPath/PrintPathOS2 helper functions. Avoid
+     the ugly use of an env. variable and use command-line args for
+     alternate $PATH. Make more like advanced 'type's as well.
+     [Jim Jagielski]
+
+  *) The IRIXN32 Rule was being ignored. Configure now correctly adds
+     -n32 only if IRIXN32 says to. [Jim Jagielski, Alain St-Denis
+     <alain.st-denis@ec.gc.ca>] PR#2736
+
+  *) Clean up a warning in mod_proxy. [Ralf S. Engelschall]
+
+  *) Renamed __EMX__ (internal define of the gcc port under OS/2) to OS2
+     following the same idea as "MSVC vs WIN32". Additionally the src/os/emx/
+     directory was renamed to src/os/os2/ for consistency.
+     [Brian Havard, Ralf S. Engelschall]
+
+  *) Add new Rule SHARED_CHAIN which can be used to enable linking of DSO
+     files (here modules) against other DSO files (here shared libraries).
+     This is done by determining a subset of LIBS which can be safely used for
+     linking the DSOs, i.e. PIC libs and shared libs.  Currently the rule is
+     disabled for all platforms to avoid problems with this (experimental)
+     rule. But we provide it now for those people how ran into problems and
+     want to came out by forcing linking against DSOs.
+     [Ralf S. Engelschall] PR#2587
+
+  *) Fix suEXEC start message: Has to be of `notice' level to really get
+     printed together with the standard startup message because the `notice'
+     level is handled special inside ap_log_error() for startup messages.
+     [Ralf S. Engelschall] PR#2761 PR#2761 PR#2765
+
+  *) Add correct `model' MIME types from RFC2077 to mime.types file.
+     [Ralf S. Engelschall] PR#2732
+
+  *) Fixed examples in mod_rewrite.html document. 
+     [Youichirou Koga <y-koga@jp.FreeBSD.org>, Ralf S. Engelschall] PR#2756
+
+  *) Allow ap_read_request errors to propagate through the normal request
+     handling loop so that the connection can be properly closed with
+     lingering_close, thus avoiding a potential TCP reset that would
+     cause the client to miss the HTTP error response.  [Roy Fielding]
+
+  *) One more portability fix for APACI shadow tree support: Swap order of awk
+     and sed in top-level configure script to avoid sed fails on some
+     platforms (for instance SunOS 4.1.3 and NCR SysV) because of the
+     non-newline-termined output of Awk. [Ralf S. Engelschall] PR#2729
+
+  *) PORT: NEC EWS4800 support.
+     [MATSUURA Takanori <t-matsuu@protein.osaka-u.ac.jp>]
+
+  *) Fix a segfault in the proxy on OS/2.  [Brian Havard]
+
+  *) Fix Win32 part of ap_spawn_child() by providing a reasonable child_info
+     structure instead of just NULL. This fixes at least the RewriteMap
+     programs under Win32. [Marco De Michele <mdemichele@tin.it>] PR#2483
+
+  *) Add workaround to top-level `configure' script for brain dead 
+     `echo' commands which interpet escape sequences per default.
+     [Ralf S. Engelschall] PR#2654
+
+  *) Make sure that the path to the Perl interpreter is correctly
+     adjusted under `make install' also for the printenv CGI script.
+     [Ralf S. Engelschall] PR#2595
+ 
+  *) Update the mod_rewrite.html document to correctly reflect the situation
+     of the `proxy' (`[P]') feature. [Ralf S. Engelschall] PR#2679
+
+  *) Fix `install-includes' sub-target of `install' target in top-level
+     Makefile.tmpl: The umask+cp approach didn't work as expected (especially
+     for users which extracted the distribution under 'umask 077'), so replace
+     it by an explicit cp+chmod approach.
+     [Richard Lloyd, Curt Sampson, Ralf S. Engelschall] PR#2656 PR#2626
+ 
+  *) Fix `distclean' and `clean' targets in src/Makefile.tmpl to have same
+     behavior and to cleanup correctly even under enabled SHARED_CORE rule.
+     [Ralf S. Engelschall]
+
+  *) Use a more straight forward and thus less problematic Sed command in
+     src/helper/mkdir.sh script.  [Ralf S. Engelschall]
+
+  *) Make sure the `configure' scripts doesn't fail when trying to guess the
+     domainname of the machine and there are multiple `domainname' and
+     `search' entries in /etc/resolv.conf.
+     [Ralf S. Engelschall] PR#2710
+
+  *) Add note about the SHARED_CORE requirement on some platforms also to the
+     INSTALL file because a lot of users don't read htdocs/manual/dso.html
+     first. [Ralf S. Engelschall] PR#2701
+
+  *) Fix document "hyperlink" for dso.html in src/Configuration.tmpl
+     [Knut A.Syed <Knut.Syed@nhh.no>] PR#2674
+
+  *) Modify mod_rewrite to update the Vary response field if the URL rewriting
+     engine does any manipulations or decisions based upon request fields. 
+     [Ken Coar] PR#1644
+
+  *) Document the special APACI behavior for installation paths where
+     ``/apache'' is appended to paths under some (well defined, of course)
+     situations to prevent pollution of system locations with Apache files.
+     [Ralf S. Engelschall] PR#2660
+
+  *) Fixed problem with buffered response message not being sent for
+     the read_request error conditions of URI-too-long (414) and
+     malformed header fields (400).  [Roy Fielding] PR#2646
+
+  *) Add support for the Max-Forwards: header line required by RFC2068 for
+     the TRACE method. This allows apache to TRACE along a chain of proxies
+     up to a predetermined depth. [Martin Kraemer]
+
+  *) Fix SHARED_CORE rule: The CFLAGS_SHLIB variable is no longer doubled
+     (compilers complained) and the .so.V.R.P filename extension was adjusted
+     to correctly reflect the 1.3.2 version.
+     [Ralf S. Engelschall] PR#2644
+
+  *) SECURITY: Plug "..." and other canonicalization holes under OS/2.
+     [Brian Havard]
+  
+  *) PORT: implement serialized accepts for OS/2.  [Brian Havard]
+
+  *) mod_include had problems with the fsize and flastmod directives
+     under WIN32.  Fix also avoids the minor security hole of using
+     ".." paths for fsize and flastmod.
+     [Manoj Kasichainula <manojk@raleigh.ibm.com>] PR#2355
+
+  *) Fixed some Makefile dependency problems.  [Dean Gaudet]
+
 Changes with Apache 1.3.1
 
   *) Disable the incorrect entry for application/msword in the 
      mod_mime_magic "magic" file because it also matches other Office
      documents.  [Ralf S. Engelschall] PR#2608
 
@@ -35,13 +425,13 @@
      This experimental module has to do some black magic to operate 
      inside the current API and thus creates side-effects for other 
      modules under some circumstances.
      [Ralf S. Engelschall]
  
   *) Add conservative ticks around more egrep arguments in top-level configure
-     to avoid problems under brain-dead platforms like Digital Unix (OSF1).
+     to avoid problems under brain-dead platforms like Digital UNIX (OSF1).
      [Ralf S. Engelschall] PR#2596
 
   *) mod_rewrite created RewriteLock files under the UID of the parent
      process, thus the child processes had no write access to the files.
      Now a chown() is done on the file to the uid of the children,
      if applicable.  [Lars Eilebrecht, Ralf S. Engelschall] PR#2341
@@ -1176,13 +1566,13 @@
   *) rputs() did not calculate r->sent_bodyct properly.
      [Siegmund Stirnweiss <siegst@kat.ina.de>] PR#1900
 
   *) The CGI spec says that REMOTE_HOST should be set to the remote hosts's
      name, or left unset if this value is unavailable.  Apache was setting
      it to the IP address when unavailable.
-     [Tony Fincg <fanf@demon.net>] PR#1925
+     [Tony Finch <fanf@demon.net>] PR#1925
 
   *) Various improvements to the configuration and build support for compiling
      modules as shared objects. Especially Solaris 2.x, SunOS 4.1, IRIX and
      OSF1 support with GCC and vendor compilers was added.  This way shared
      object support is now provided out-of-the-box for FreeBSD, Linux,
      Solaris, SunOS, IRIX and OSF1. In short: On all major platforms!
diff -BEr -U 6 apache_1.3.1/src/Configuration apache_1.3.2/src/Configuration
--- apache_1.3.1/src/Configuration	1998-07-19 07:03:37.000000000 +0800
+++ apache_1.3.2/src/Configuration	1998-09-22 03:19:48.000000000 +0800
@@ -55,12 +55,13 @@
 EXTRA_LDFLAGS=
 EXTRA_LIBS=
 EXTRA_INCLUDES=
 EXTRA_DEPS=
 
 #CC=
+#CPP=
 #OPTIM=
 #RANLIB=
 
 ################################################################
 # Dynamic Shared Object (DSO) support
 #
@@ -69,14 +70,13 @@
 # maximum runtime flexibility.
 #
 # The Configure script currently has only limited built-in
 # knowledge on how to compile these DSO files because this is
 # heavily platform-dependent. The current state of supported and
 # explicitly unsupported platforms can be found in the file 
-# "htdocs/manual/sharedobjects.html", under 
-# "Supported Platforms".
+# "htdocs/manual/dso.html", under "Supported Platforms".
 #
 # For other platforms where you want to use the DSO mechanism you
 # first have to make sure it supports the pragmatic dlopen()
 # system call and then you have to provide the appropriate
 # compiler and linker flags below to create the DSO files on your
 # particular platform.
@@ -87,28 +87,42 @@
 # runtime without recompilation is triggered by `SharedModule'
 # commands. To be able to use the latter one first enable the
 # module mod_so (see corresponding `AddModule' command below).
 # Then enable the DSO feature for particular modules individually
 # by replacing their `AddModule' command with `SharedModule' and
 # change the filename extension from `.o' to `.so'. 
+#
+# Sometimes the DSO files need to be linked against other shared
+# libraries to explicitly resolve symbols from them when the
+# httpd program not already contains references to them. For
+# instance when buidling mod_auth_db as a DSO you need to link
+# the DSO against the libdb explicity because the Apache kernel
+# has no references for this library. But the problem is that
+# this "chaining" is not supported on all platforms. Although one
+# usually can link a DSO against another DSO without linker
+# complains the linkage is not really done on these platforms.
+# So, when you receive "unresolved symbol" errors under runtime
+# when using the LoadModule directive for a particular module try
+# to enable the SHARED_CHAIN rule below.
 
 #CFLAGS_SHLIB=
 #LD_SHLIB=
 #LDFLAGS_SHLIB=
 #LDFLAGS_SHLIB_EXPORT=
 
 Rule SHARED_CORE=default
+Rule SHARED_CHAIN=default
 
 ################################################################
 # Rules configuration
 #
 # These are used to let Configure know that we want certain
 # functions. The format is: Rule RULE=value
 #
 # At present, only the following RULES are known: WANTHSREGEX, SOCKS4,
-# SOCKS5, STATUS, IRIXNIS, IRIXN32 and PARANOID.
+# SOCKS5, IRIXNIS, IRIXN32 and PARANOID.
 #
 # For all Rules, if set to "yes", then Configure knows we want that
 # capability and does what is required to add it in. If set to "default"
 # then Configure makes a "best guess"; if set to anything else, or not
 # present, then nothing is done.
 #
@@ -119,18 +133,12 @@
 #
 # SOCKS5:
 #  If SOCKS5 is set to 'yes', be sure that you add the socks5 library
 #  location to EXTRA_LIBS, otherwise Configure will assume
 #  "-L/usr/local/lib -lsocks5"
 #
-# STATUS:
-#  If Configure determines that you are using the status_module,
-#  it will automatically enable full status information if set
-#  to 'yes'. If the status module is not included, having STATUS
-#  set to 'yes' has no impact.
-#
 # IRIXNIS:
 #  Only takes effect if Configure determines that you are running
 #  SGI IRIX.  If you are using a (ancient) 4.x version of IRIX, you
 #  need this if you are using NIS and Apache needs access to it for
 #  things like mod_userdir.  This is not required on 5.x and later
 #  and you should not enable it on such systems.
@@ -145,13 +153,12 @@
 #  Configure runs in. This allows modules to control how Configure
 #  works. Normally, Configure will simply note that a module
 #  is performing this function. If PARANOID is set to yes, it will
 #  actually print-out the code that the modules execute
 #
 
-Rule STATUS=yes
 Rule SOCKS4=no
 Rule SOCKS5=no
 Rule IRIXNIS=no
 Rule IRIXN32=yes
 Rule PARANOID=no
 
@@ -233,16 +240,16 @@
 
 ##
 ## Content delivery modules
 ##
 ## The status module allows the server to display current details about 
 ## how well it is performing and what it is doing.  Consider also enabling 
-## STATUS=yes (see the Rules section near the start of this file) to allow
-## full status information.  Check conf/access.conf on how to enable this.
+## the 'ExtendedStatus On' directive to allow full status information.
+## Please note that doing so can result in a palpable performance hit.
 
-# AddModule modules/standard/mod_status.o
+AddModule modules/standard/mod_status.o
 
 ## The Info module displays configuration information for the server and 
 ## all included modules. It's very useful for debugging.
 
 # AddModule modules/standard/mod_info.o
 
diff -BEr -U 6 apache_1.3.1/src/Configuration.tmpl apache_1.3.2/src/Configuration.tmpl
--- apache_1.3.1/src/Configuration.tmpl	1998-07-12 00:44:33.000000000 +0800
+++ apache_1.3.2/src/Configuration.tmpl	1998-09-17 03:38:26.000000000 +0800
@@ -55,12 +55,13 @@
 EXTRA_LDFLAGS=
 EXTRA_LIBS=
 EXTRA_INCLUDES=
 EXTRA_DEPS=
 
 #CC=
+#CPP=
 #OPTIM=
 #RANLIB=
 
 ################################################################
 # Dynamic Shared Object (DSO) support
 #
@@ -69,14 +70,13 @@
 # maximum runtime flexibility.
 #
 # The Configure script currently has only limited built-in
 # knowledge on how to compile these DSO files because this is
 # heavily platform-dependent. The current state of supported and
 # explicitly unsupported platforms can be found in the file 
-# "htdocs/manual/sharedobjects.html", under 
-# "Supported Platforms".
+# "htdocs/manual/dso.html", under "Supported Platforms".
 #
 # For other platforms where you want to use the DSO mechanism you
 # first have to make sure it supports the pragmatic dlopen()
 # system call and then you have to provide the appropriate
 # compiler and linker flags below to create the DSO files on your
 # particular platform.
@@ -87,28 +87,42 @@
 # runtime without recompilation is triggered by `SharedModule'
 # commands. To be able to use the latter one first enable the
 # module mod_so (see corresponding `AddModule' command below).
 # Then enable the DSO feature for particular modules individually
 # by replacing their `AddModule' command with `SharedModule' and
 # change the filename extension from `.o' to `.so'. 
+#
+# Sometimes the DSO files need to be linked against other shared
+# libraries to explicitly resolve symbols from them when the
+# httpd program not already contains references to them. For
+# instance when buidling mod_auth_db as a DSO you need to link
+# the DSO against the libdb explicity because the Apache kernel
+# has no references for this library. But the problem is that
+# this "chaining" is not supported on all platforms. Although one
+# usually can link a DSO against another DSO without linker
+# complains the linkage is not really done on these platforms.
+# So, when you receive "unresolved symbol" errors under runtime
+# when using the LoadModule directive for a particular module try
+# to enable the SHARED_CHAIN rule below.
 
 #CFLAGS_SHLIB=
 #LD_SHLIB=
 #LDFLAGS_SHLIB=
 #LDFLAGS_SHLIB_EXPORT=
 
 Rule SHARED_CORE=default
+Rule SHARED_CHAIN=default
 
 ################################################################
 # Rules configuration
 #
 # These are used to let Configure know that we want certain
 # functions. The format is: Rule RULE=value
 #
 # At present, only the following RULES are known: WANTHSREGEX, SOCKS4,
-# SOCKS5, STATUS, IRIXNIS, IRIXN32 and PARANOID.
+# SOCKS5, IRIXNIS, IRIXN32 and PARANOID.
 #
 # For all Rules, if set to "yes", then Configure knows we want that
 # capability and does what is required to add it in. If set to "default"
 # then Configure makes a "best guess"; if set to anything else, or not
 # present, then nothing is done.
 #
@@ -119,18 +133,12 @@
 #
 # SOCKS5:
 #  If SOCKS5 is set to 'yes', be sure that you add the socks5 library
 #  location to EXTRA_LIBS, otherwise Configure will assume
 #  "-L/usr/local/lib -lsocks5"
 #
-# STATUS:
-#  If Configure determines that you are using the status_module,
-#  it will automatically enable full status information if set
-#  to 'yes'. If the status module is not included, having STATUS
-#  set to 'yes' has no impact.
-#
 # IRIXNIS:
 #  Only takes effect if Configure determines that you are running
 #  SGI IRIX.  If you are using a (ancient) 4.x version of IRIX, you
 #  need this if you are using NIS and Apache needs access to it for
 #  things like mod_userdir.  This is not required on 5.x and later
 #  and you should not enable it on such systems.
@@ -145,13 +153,12 @@
 #  Configure runs in. This allows modules to control how Configure
 #  works. Normally, Configure will simply note that a module
 #  is performing this function. If PARANOID is set to yes, it will
 #  actually print-out the code that the modules execute
 #
 
-Rule STATUS=yes
 Rule SOCKS4=no
 Rule SOCKS5=no
 Rule IRIXNIS=no
 Rule IRIXN32=yes
 Rule PARANOID=no
 
@@ -233,16 +240,16 @@
 
 ##
 ## Content delivery modules
 ##
 ## The status module allows the server to display current details about 
 ## how well it is performing and what it is doing.  Consider also enabling 
-## STATUS=yes (see the Rules section near the start of this file) to allow
-## full status information.  Check conf/access.conf on how to enable this.
+## the 'ExtendedStatus On' directive to allow full status information.
+## Please note that doing so can result in a palpable performance hit.
 
-# AddModule modules/standard/mod_status.o
+AddModule modules/standard/mod_status.o
 
 ## The Info module displays configuration information for the server and 
 ## all included modules. It's very useful for debugging.
 
 # AddModule modules/standard/mod_info.o
 
diff -BEr -U 6 apache_1.3.1/src/Configure apache_1.3.2/src/Configure
--- apache_1.3.1/src/Configure	1998-07-18 18:51:52.000000000 +0800
+++ apache_1.3.2/src/Configure	1998-09-20 23:48:57.000000000 +0800
@@ -74,12 +74,13 @@
 #	GuessOS: Uses uname to determine OS/platform
 #	PrintPath: generic "type" or "whence" replacement
 #	TestCompile: Can check for libs and if $(CC) is ANSI
 #	 (i.e., a simple "sanity check")
 #	mfhead:
 #	fp2rp:
+#	slo.sh:
 
 exitcode=0
 trap 'rm -f $tmpfile $tmpfile2 $tmpfile3 $tmpconfig $awkfile; exit $exitcode' 0 1 2 3 15
 
 ####################################################################
 ## Set up some defaults
@@ -234,12 +235,13 @@
 RULE_SOCKS4=`./helpers/CutRule SOCKS4 $file`
 RULE_SOCKS5=`./helpers/CutRule SOCKS5 $file`
 RULE_IRIXNIS=`./helpers/CutRule IRIXNIS $file`
 RULE_IRIXN32=`./helpers/CutRule IRIXN32 $file`
 RULE_PARANOID=`./helpers/CutRule PARANOID $file`
 RULE_SHARED_CORE=`./helpers/CutRule SHARED_CORE $file`
+RULE_SHARED_CHAIN=`./helpers/CutRule SHARED_CHAIN $file`
 
 ####################################################################
 ## Rule SHARED_CORE implies required DSO support
 ##
 if [ "$RULE_SHARED_CORE" = "yes" ]; then
 	using_shlib=1
@@ -251,15 +253,14 @@
 ##
 DBM_LIB="-ldbm"
 DB_LIB="-ldb"
 SHELL="/bin/sh"
 TARGET="httpd"
 SUBTARGET="target_static"
+SHLIB_SUFFIX_NAME=""
 SHLIB_SUFFIX_LIST=""
-AP_PRINTPATH=PrintPath
-export AP_PRINTPATH
 CAT="cat"
 
 ####################################################################
 ## Now we determine the OS/Platform automagically, thanks to
 ## GuessOS, a home-brewed OS-determiner ala config.guess
 ##
@@ -337,22 +338,20 @@
     *-dg-dgux*)
 	OS='DG/UX 5.4'
 	CFLAGS="$CFLAGS -DDGUX"
 	DEF_WANTHSREGEX=yes
 	;;
     *OS/2*)
-	OSDIR="os/emx"
+	OSDIR="os/os2"
 	DEF_WANTHSREGEX=yes
 	OS='EMX OS/2'
-	CFLAGS="$CFLAGS -Zbsd-signals -Zbin-files -DTCPIPV4 -g"
+	CFLAGS="$CFLAGS -DOS2 -Zbsd-signals -Zbin-files -DTCPIPV4 -g"
 	LDFLAGS="$LDFLAGS -Zexe"
 	LIBS="$LIBS -lsocket -lufc -lbsd"
 	DBM_LIB="-lgdbm"
 	SHELL=sh
-	AP_PRINTPATH=PrintPathOS2
-	export AP_PRINTPATH
 	;;
     *-hi-hiux)
 	OS='HI-UX'
 	CFLAGS="$CFLAGS -DHIUX"
 	;;
     *-hp-hpux11.*)
@@ -478,27 +477,32 @@
 	;;
     *-openbsd*)
 	OS='OpenBSD'
 	DBM_LIB=""
 	;;
     *-next-nextstep*)
-	OS='NeXT'
+	OS='NeXTStep'
 	OPTIM='-O'
 	CFLAGS="$CFLAGS -DNEXT"
 	DEF_WANTHSREGEX=yes
 	;;
     *-next-openstep*)
-	OS='Openstep for Mach'
+	OS='OpenStep/Mach'
 	CC='cc'
 	OPTIM='-O'
 	CFLAGS="$CFLAGS -DNEXT"
 	CFLAGS_SHLIB='-dynamic -fno-common'
 	LD_SHLIB='cc'
 	LDFLAGS_SHLIB='-dynamiclib -undefined warning'
 	DEF_WANTHSREGEX=yes
 	;;
+    *-apple-rhapsody*)
+	OS='Mac OS X Server'
+	CFLAGS="$CFLAGS -DRHAPSODY"
+	DEF_WANTHSREGEX=yes
+	;;
     *-dec-osf*)
 	OS='DEC OSF/1'
 	CFLAGS="$CFLAGS -DOSF1"
 	LIBS="$LIBS -lm"
 	;;
     *-qnx)
@@ -527,16 +531,16 @@
 	LIBS="$LIBS -lPW -lsocket -lmalloc -lcrypt_i"
 	DEF_WANTHSREGEX=yes
 	;;
     *-sco5*)
 	OS='SCO 5'
 	CFLAGS="$CFLAGS -DSCO5"
-	LIBS="$LIBS -lsocket -lmalloc -lprot"
+	LIBS="$LIBS -lsocket -lmalloc -lprot -ltinfo -lx -lm"
 	DEF_WANTHSREGEX=no
 	;;
-    *-sco_sv*)
+    *-sco_sv*|*-SCO_SV*)
 	OS='SCO SV'
 	CFLAGS="$CFLAGS -DSCO"
 	LIBS="$LIBS -lPW -lsocket -lmalloc -lcrypt_i"
 	DEF_WANTHSREGEX=yes
 	;;
     *-solaris2*)
@@ -759,13 +763,13 @@
     if [ "x$CC" = "x" ]; then
         # At this point, CC is not set in Configuration or above, so we
         # try to find one
 	for compilers in "gcc" "cc" "acc" "c89"
 	do
 	    lookedfor="$lookedfor $compilers"
-	    if ./helpers/$AP_PRINTPATH -s $compilers; then
+	    if ./helpers/PrintPath -s $compilers; then
 		COMPILER="$compilers"
 		break
 	    fi
 	done
 	if [ "x$COMPILER" = "x" ]; then
 	    echo "Error: could not find any of these C compilers"
@@ -789,12 +793,69 @@
     echo "CC=$CC" >> Makefile.config
 else
     CC=$TCC
 fi
 
 ####################################################################
+## Now check how we can _directly_ run the C pre-processor
+##
+TCPP=`egrep '^CPP=' Makefile.config | tail -1 | awk -F= '{print $2}'`
+if [ ".$TCPP" != . ]; then
+    CPP=`CC=$CC CPP=$TCPP ./helpers/findcpp.sh`
+else
+    CPP=`CC=$CC ./helpers/findcpp.sh`
+fi
+if [ ".$TCPP" = . ]; then
+    echo "CPP=$CPP" >> Makefile.config
+fi 
+echo " + setting C pre-processor to $CPP"
+
+####################################################################
+## Now check for existance of non-standard system header files
+## and start generation of the ap_config_auto.h header
+##
+AP_CONFIG_AUTO_H="include/ap_config_auto.h"
+echo "/*" >$AP_CONFIG_AUTO_H
+echo " *  ap_config_auto.h -- Automatically determined configuration stuff" >>$AP_CONFIG_AUTO_H
+echo " *  THIS FILE WAS AUTOMATICALLY GENERATED - DO NOT EDIT!" >>$AP_CONFIG_AUTO_H
+echo " */" >>$AP_CONFIG_AUTO_H
+echo "" >>$AP_CONFIG_AUTO_H
+echo "#ifndef AP_CONFIG_AUTO_H" >>$AP_CONFIG_AUTO_H
+echo "#define AP_CONFIG_AUTO_H" >>$AP_CONFIG_AUTO_H
+
+echo " + checking for system header files"
+CHECK_FOR_HEADERS="dlfcn.h dl.h bstring.h crypt.h unistd.h sys/resource.h sys/select.h sys/processor.h"
+for header in $CHECK_FOR_HEADERS; do
+    echo "" >>$AP_CONFIG_AUTO_H
+    echo "/* check: #include <$header> */" >>$AP_CONFIG_AUTO_H
+    name="`echo $header | sed -e 's:/:_:g' -e 's:\.:_:g' | tr '[a-z]' '[A-Z]'`"
+    CPP=$CPP ./helpers/checkheader.sh $header
+    if [ $? -eq 0 ]; then
+        echo "#ifndef HAVE_${name}" >>$AP_CONFIG_AUTO_H
+        echo "#define HAVE_${name} 1" >>$AP_CONFIG_AUTO_H
+        echo "#endif" >>$AP_CONFIG_AUTO_H
+    else
+        echo "#ifdef HAVE_${name}" >>$AP_CONFIG_AUTO_H
+        echo "#undef HAVE_${name}" >>$AP_CONFIG_AUTO_H
+        echo "#endif" >>$AP_CONFIG_AUTO_H
+    fi
+done
+
+####################################################################
+# Special AIX 4.x support: need to check for sys/processor.h
+# to decide whether the Processor Binding can be used or not
+case "$PLAT" in
+    *-ibm-aix*)
+        CPP=$CPP ./helpers/checkheader.sh sys/processor.h
+        if [ $? -eq 0 ]; then
+            CFLAGS="$CFLAGS -DAIX_BIND_PROCESSOR"
+        fi
+        ;;
+esac
+
+####################################################################
 ## Look for OPTIM and save for later
 ##
 TOPTIM=`egrep '^OPTIM=' Makefile.config | tail -1 | awk -F= '{print $2}'`
 TRANLIB=`egrep '^RANLIB=' Makefile.config | tail -1 | awk -F= '{print $2}'`
 
 ####################################################################
@@ -809,12 +870,14 @@
 ## We adjust now CFLAGS_SHLIB, LDFLAGS_SHLIB and LDFLAGS_SHLIB_EXPORT as
 ## required.  For more platforms just add the required lines below.
 ##
 if [ "x$using_shlib" = "x1" ] ; then
     LD_SHLIB="ld"
     DEF_SHARED_CORE=no
+    DEF_SHARED_CHAIN=no
+    SHLIB_SUFFIX_NAME=so
     SHLIB_SUFFIX_DEPTH=all
     SHLIB_EXPORT_FILES=no
     case "$PLAT" in
         *-linux1)
             CFLAGS_SHLIB="-fpic"
             LDFLAGS_SHLIB="-Bshareable"
@@ -847,12 +910,19 @@
         *-netbsd*)
             CFLAGS_SHLIB="-fpic -DPIC"
             LDFLAGS_SHLIB="-Bshareable"
             LDFLAGS_SHLIB_EXPORT=""
             SHLIB_SUFFIX_DEPTH=2
             ;;
+        *-apple-rhapsody*)
+            LD_SHLIB="cc"
+            CFLAGS_SHLIB=""
+            LDFLAGS_SHLIB="-bundle -undefined suppress"
+            LDFLAGS_SHLIB_EXPORT=""
+            SHLIB_SUFFIX_DEPTH=0
+            ;;
         *-solaris2*)
             case $CC in
                 */gcc|gcc ) CFLAGS_SHLIB="-fpic" ;;
                 */cc|cc   ) CFLAGS_SHLIB="-KPIC" ;;
             esac
             LDFLAGS_SHLIB="-G"
@@ -882,12 +952,30 @@
                 LDFLAGS_SHLIB="$N32FLAG -shared"
             else
                 LDFLAGS_SHLIB="-shared"
             fi
             LDFLAGS_SHLIB_EXPORT=""
             ;;
+        *-sgi-irix64)
+            case $CC in
+                */gcc|gcc )
+		    CFLAGS_SHLIB="-fpic"
+		    N32FLAG=""
+		    ;;
+                */cc|cc )
+		    CFLAGS_SHLIB="-KPIC"
+		    N32FLAG="-n32"
+		    ;;
+            esac
+            if [ "$RULE_IRIXN32" = "yes" ]; then
+                LDFLAGS_SHLIB="$N32FLAG -shared"
+            else
+                LDFLAGS_SHLIB="-shared"
+            fi
+            LDFLAGS_SHLIB_EXPORT=""
+            ;;
         *-sgi-irix)
             case $CC in
                 */gcc|gcc ) CFLAGS_SHLIB="-fpic" ;;
                 */cc|cc   ) CFLAGS_SHLIB="-KPIC" ;;
             esac
             LDFLAGS_SHLIB="-shared"
@@ -895,13 +983,13 @@
             ;;
         *-dec-osf*)
             case $CC in
                 */gcc|gcc ) CFLAGS_SHLIB="-fpic" ;;
                 */cc|cc   ) CFLAGS_SHLIB="" ;;
             esac
-            LDFLAGS_SHLIB="-shared -expect_unresolved '*' -msym -s"
+            LDFLAGS_SHLIB="-shared -expect_unresolved '*' -s"
             LDFLAGS_SHLIB_EXPORT=""
             ;;
         *-unixware2)
             case $CC in
                 */gcc|gcc ) CFLAGS_SHLIB="-fpic" ;;
                 */cc|cc   ) CFLAGS_SHLIB="-KPIC" ;;
@@ -959,20 +1047,22 @@
             case $CC in
                 */gcc|gcc ) CFLAGS_SHLIB="-fpic" ;;
                 */cc|cc   ) CFLAGS_SHLIB="+z" ;;
             esac
             LDFLAGS_SHLIB="-b"
             LDFLAGS_SHLIB_EXPORT="-Wl,-E -Wl,-B,deferred"
+            SHLIB_SUFFIX_NAME=sl
             ;;
         *-hp-hpux10.*|*-hp-hpux11.*)
             case $CC in
                 */gcc|gcc ) CFLAGS_SHLIB="-fpic" ;;
                 */cc|cc   ) CFLAGS_SHLIB="+z" ;;
             esac
             LDFLAGS_SHLIB="-b"
-            LDFLAGS_SHLIB_EXPORT="-Wl,-E -Wl,-B,deferred"
+            LDFLAGS_SHLIB_EXPORT="-Wl,-E -Wl,-B,deferred -Wl,+s"
+            SHLIB_SUFFIX_NAME=sl
             ;;
         *-ibm-aix*)
             case $CC in
                 */gcc|gcc ) CFLAGS_SHLIB="-fpic" ;;
                 */cc|cc   ) CFLAGS_SHLIB="" ;;
             esac
@@ -1054,31 +1144,12 @@
         echo ""
         exit 1
     fi
 fi
 
 ####################################################################
-## Set the value of the shared libary flags, if they aren't explicitly
-## set in the configuration file
-##
-if [ "x$using_shlib" = "x1" ] ; then
-    if [ "x$TCFLAGS_SHLIB" = "x" ]; then
-        echo "CFLAGS_SHLIB=$CFLAGS_SHLIB -DSHARED_MODULE" >> Makefile.config
-    fi
-    if [ "x$TLD_SHLIB" = "x" ]; then
-        echo "LD_SHLIB=$LD_SHLIB" >> Makefile.config
-    fi
-    if [ "x$TLDFLAGS_SHLIB" = "x" ]; then
-        echo "LDFLAGS_SHLIB=$LDFLAGS_SHLIB" >> Makefile.config
-    fi
-    if [ "x$TLDFLAGS_SHLIB_EXPORT" = "x" ]; then
-        echo "LDFLAGS_SHLIB_EXPORT=$LDFLAGS_SHLIB_EXPORT" >> Makefile.config
-    fi
-fi
-
-####################################################################
 ## Now we do some OS specific adjustments... for some OSs, we need
 ## to adjust CFLAGS and/or OPTIM depending on which compiler we
 ## are going to use. This is easy, since this can be gleamed from
 ## Makefile.config
 ##
 case "$OS" in
@@ -1108,26 +1179,30 @@
 		OPTIM=" "
 		TOPTIM=""
 	    ;;
 	esac
 	;;
     *IRIX-64*)
-	case "$CC" in
-	    */cc|cc )
-		CFLAGS="$CFLAGS -n32"
-		LDFLAGS="$LDFLAGS -n32"
-	    ;;
-	esac
+	if [ "$RULE_IRIXN32" = "yes" ]; then
+	    case "$CC" in
+		*/cc|cc )
+		    CFLAGS="$CFLAGS -n32"
+		    LDFLAGS="$LDFLAGS -n32"
+		;;
+	    esac
+	fi
 	;;
     *IRIX-32*)
-	case "$CC" in
-	    */cc|cc )
-		CFLAGS="$CFLAGS -n32"
-		LDFLAGS="$LDFLAGS -n32"
-	    ;;
-	esac
+	if [ "$RULE_IRIXN32" = "yes" ]; then
+	    case "$CC" in
+		*/cc|cc )
+		    CFLAGS="$CFLAGS -n32"
+		    LDFLAGS="$LDFLAGS -n32"
+		;;
+	    esac
+	fi
 	;;
     IBM?AIX?4.[123])
 	case $CC in
 	    */cc|cc ) 
 		CFLAGS="$CFLAGS -qnogenpcomp -qnousepcomp"
 	    ;;
@@ -1146,13 +1221,13 @@
 ## OK, now handle RANLIB
 ##
 if [ ".$RANLIB" = . ]; then
     if [ ".$TRANLIB" != . ]; then
         RANLIB=$TRANLIB
     else
-        if ./helpers/$AP_PRINTPATH -s ranlib; then
+        if ./helpers/PrintPath -s ranlib; then
             RANLIB="ranlib"
         else
             RANLIB="true"
         fi
     fi
 fi
@@ -1217,23 +1292,12 @@
         *-solaris2* )
             LIBS="$LIBS -lresolv"
             ;;
     esac
 fi
 
-# AIX 4.x support: Special Case: need to check for sys/processor.h
-# before we usually would.
-# Processor Binding
-case "$PLAT" in
-    *-ibm-aix*)
-        if ./helpers/TestCompile header sys/processor.h ; then
-            CFLAGS="$CFLAGS -DAIX_BIND_PROCESSOR"
-        fi
-        ;;
-esac
-
 ####################################################################
 ## Find out what modules we want and try and configure things for them
 ## Module lines can look like this:
 ##
 ##  Module  name_module    some/path/mod_name[.[oa]]
 ##  AddModule              some/path/mod_name[.[oa]]
@@ -1391,29 +1455,48 @@
     REGLIB="regex/libregex.a"
     SUBDIRS="regex $SUBDIRS"
     CFLAGS="$CFLAGS -DUSE_HSREGEX"
 fi
 
 ####################################################################
+## Now the SHARED_CHAIN stuff
+##
+LIBS_SHLIB=''
+if [ "x$using_shlib" = "x1" ] ; then
+    if [ ".$RULE_SHARED_CHAIN" = .default ] ; then
+        RULE_SHARED_CHAIN=$DEF_SHARED_CHAIN
+    fi
+    if [ ".$RULE_SHARED_CHAIN" = .yes ]; then
+        echo " + enabling DSO files to be linked against others"
+        #   determine libraries which can be safely linked
+        #   to our DSO files, i.e. PIC libraries and shared libraries
+        extra_ldflags="`grep EXTRA_LDFLAGS= Makefile.config`"
+        extra_libs="`grep EXTRA_LIBS= Makefile.config`"
+        eval "`./helpers/slo.sh $LDFLAGS $LIBS $extra_ldflags $extra_libs`"
+        LIBS_SHLIB="$SLO_DIRS_PIC $SLO_LIBS_PIC $SLO_DIRS_DSO $SLO_LIBS_DSO"
+    fi
+fi
+
+####################################################################
 ## Now the SHARED_CORE stuff
 ##
 if [ "x$using_shlib" = "x1" ] ; then
     if [ ".$RULE_SHARED_CORE" = .default ] ; then
         RULE_SHARED_CORE=$DEF_SHARED_CORE
     fi
     if [ ".$RULE_SHARED_CORE" = .yes ]; then
-    echo " + enabling generation of Apache core as DSO"
+        echo " + enabling generation of Apache core as DSO"
         #    shuffle compiler flags from shlib variant to standard
         CFLAGS="$CFLAGS $CFLAGS_SHLIB"
         CFLAGS_SHLIB=""
         #    indicate that Rule SHARED_CORE is active
         CFLAGS="$CFLAGS -DSHARED_CORE"
         #    select the special subtarget for shared core generation
         SUBTARGET=target_shared
         #    determine additional suffixes for libhttpd.so
-        V=1 R=3 P=0
+        V=1 R=3 P=2
         if [ ".$SHLIB_SUFFIX_DEPTH" = .0 ]; then
             SHLIB_SUFFIX_LIST=""
         fi
         if [ ".$SHLIB_SUFFIX_DEPTH" = .1 ]; then
             SHLIB_SUFFIX_LIST="$V"
         fi
@@ -1427,15 +1510,34 @@
             SHLIB_SUFFIX_LIST="$V $V.$R $V.$R.$P"
         fi
     fi
 fi
 
 ####################################################################
+## Set the value of the shared libary flags, if they aren't explicitly
+## set in the configuration file
+##
+if [ "x$using_shlib" = "x1" ] ; then
+    if [ "x$TCFLAGS_SHLIB" = "x" ]; then
+        echo "CFLAGS_SHLIB=$CFLAGS_SHLIB -DSHARED_MODULE" >> Makefile.config
+    fi
+    if [ "x$TLD_SHLIB" = "x" ]; then
+        echo "LD_SHLIB=$LD_SHLIB" >> Makefile.config
+    fi
+    if [ "x$TLDFLAGS_SHLIB" = "x" ]; then
+        echo "LDFLAGS_SHLIB=$LDFLAGS_SHLIB" >> Makefile.config
+    fi
+    if [ "x$TLDFLAGS_SHLIB_EXPORT" = "x" ]; then
+        echo "LDFLAGS_SHLIB_EXPORT=$LDFLAGS_SHLIB_EXPORT" >> Makefile.config
+    fi
+fi
+
+####################################################################
 ## Now create modules.c
 ##
-sed 's/_module//' $tmpfile | awk >modules.c '
+cat $tmpfile | sed 's/_module//' | awk >modules.c '
     BEGIN {
 	modules[n++] = "core"
 	pmodules[pn++] = "core"
     } 
     /^Module/ { modules[n++] = $2 ; pmodules[pn++] = $2 } 
     /^%Module/ { pmodules[pn++] = $2 } 
@@ -1565,12 +1667,13 @@
 ####################################################################
 ## Now add the target for the main Makefile
 ##
 echo "TARGET=$TARGET" >> Makefile
 echo "SUBDIRS=$SUBDIRS" >> Makefile
 echo "SUBTARGET=$SUBTARGET" >> Makefile
+echo "SHLIB_SUFFIX_NAME=$SHLIB_SUFFIX_NAME" >> Makefile
 echo "SHLIB_SUFFIX_LIST=$SHLIB_SUFFIX_LIST" >> Makefile
 echo "" >> Makefile
 
 ####################################################################
 ## Now add -DSERVER_SUBVERSION if $SUBVERSION is set
 ##
@@ -1597,12 +1700,13 @@
 ##
 echo "CFLAGS1=$CFLAGS">> Makefile.config
 echo "OSDIR=\$(SRCDIR)/$OSDIR">> Makefile.config
 echo "INCDIR=\$(SRCDIR)/include" >>Makefile.config
 echo "INCLUDES0=-I\$(OSDIR) -I\$(INCDIR)">> Makefile.config
 echo "INCLUDES1=$INCLUDES">> Makefile.config
+echo "LIBS_SHLIB=$LIBS_SHLIB">> Makefile.config
 echo "LDFLAGS1=$LDFLAGS">> Makefile.config
 echo "MFLAGS_STATIC=$MFLAGS_STATIC">> Makefile.config
 echo "REGLIB=$REGLIB">> Makefile.config
 echo "RANLIB=$RANLIB">> Makefile.config
 echo "SHELL=$SHELL">> Makefile.config
 
@@ -1639,41 +1743,12 @@
         LIBS="$LIBS $DL_LIB"
         echo " + using $DL_LIB for vendor DSO support"
     fi
 fi
 
 ####################################################################
-## Now check for existance of non-standard system header files
-## and start generation of the ap_config_auto.h header
-##
-AP_CONFIG_AUTO_H="include/ap_config_auto.h"
-echo "/*" >$AP_CONFIG_AUTO_H
-echo " *  ap_config_auto.h -- Automatically determined configuration stuff" >>$AP_CONFIG_AUTO_H
-echo " *  THIS FILE WAS AUTOMATICALLY GENERATED - DO NOT EDIT!" >>$AP_CONFIG_AUTO_H
-echo " */" >>$AP_CONFIG_AUTO_H
-echo "" >>$AP_CONFIG_AUTO_H
-echo "#ifndef AP_CONFIG_AUTO_H" >>$AP_CONFIG_AUTO_H
-echo "#define AP_CONFIG_AUTO_H" >>$AP_CONFIG_AUTO_H
-
-echo " + checking for system header files"
-CHECK_FOR_HEADERS="dlfcn.h dl.h bstring.h crypt.h unistd.h sys/resource.h sys/select.h sys/processor.h"
-for header in $CHECK_FOR_HEADERS; do
-    echo "" >>$AP_CONFIG_AUTO_H
-    echo "/* check: #include <$header> */" >>$AP_CONFIG_AUTO_H
-    name="`echo $header | sed -e 's:/:_:g' -e 's:\.:_:g' | tr '[a-z]' '[A-Z]'`"
-    if ./helpers/TestCompile header $header; then
-        echo "#ifndef HAVE_${name}" >>$AP_CONFIG_AUTO_H
-        echo "#define HAVE_${name} 1" >>$AP_CONFIG_AUTO_H
-        echo "#endif" >>$AP_CONFIG_AUTO_H
-    else
-        echo "#ifdef HAVE_${name}" >>$AP_CONFIG_AUTO_H
-        echo "#undef HAVE_${name}" >>$AP_CONFIG_AUTO_H
-        echo "#endif" >>$AP_CONFIG_AUTO_H
-    fi
-done
-
 ## Finish building ap_config_auto.h
 ##
 ## We pick out all -D's from CFLAGS and insert them as defines into
 ## ap_config_auto.h so they are available to external modules needing to
 ## include Apache header files.
 ##
@@ -1836,13 +1911,13 @@
 
 .c.o:
 	$(CC) -c $(INCLUDES) $(CFLAGS) $<
 
 .c.so:
 	$(CC) -c $(INCLUDES) $(CFLAGS) $(CFLAGS_SHLIB) $< && mv $*.o $*.lo
-	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o $@ $*.lo
+	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o $@ $*.lo $(LIBS_SHLIB)
 
 clean:
 	rm -f $(LIB) $(OBJS) $(SHLIBS) $(OBJS_PIC)
 
 distclean: clean
 	rm -f Makefile
Only in apache_1.3.2/src/helpers: buildinfo.sh
Only in apache_1.3.2/src/helpers: checkheader.sh
Only in apache_1.3.2/src/helpers: findcpp.sh
Only in apache_1.3.1/src/helpers: findprg.sh
diff -BEr -U 6 apache_1.3.1/src/helpers/fmn.sh apache_1.3.2/src/helpers/fmn.sh
--- apache_1.3.1/src/helpers/fmn.sh	1998-03-29 20:27:34.000000000 +0800
+++ apache_1.3.2/src/helpers/fmn.sh	1998-09-17 04:49:24.000000000 +0800
@@ -3,12 +3,16 @@
 ##  fmn.sh -- find a modules (structure) name
 ##
 ##  Extracted from the Configure script by
 ##  Ralf S. Engelschall <rse@apache.org> for use with 
 ##  Apache's Autoconf-style Interface (APACI).
 ##
+#
+# This script falls under the Apache License.
+# See http://www.apache.org/docs/LICENSE
+
 
 #   input: the modules source file
 modfile=$1
 
 #   the part from the Configure script
 tmpfile=/tmp/fmn.tmp.$$
diff -BEr -U 6 apache_1.3.1/src/helpers/GuessOS apache_1.3.2/src/helpers/GuessOS
--- apache_1.3.1/src/helpers/GuessOS	1998-06-29 20:21:04.000000000 +0800
+++ apache_1.3.2/src/helpers/GuessOS	1998-09-17 04:49:23.000000000 +0800
@@ -1,15 +1,17 @@
 #!/bin/sh
 #
 # Simple OS/Platform guesser. Similar to config.guess but
 # much, much smaller. Since it was developed for use with
 # Apache, it follows under Apache's regular licensing
-# with one specific addition: Any changes or additions
-# to this script should be Emailed to the Apache
-# group (apache@apache.org) in general and to
-# Jim Jagielski (jim@jaguNET.com) in specific.
+# (see http://www.apache.org/docs/LICENSE)  with one specific
+# addition: Any changes or additions to this script should be
+# Emailed to the Apache group (apache@apache.org) in general
+# and to Jim Jagielski (jim@apache.org) in specific.
+#
+# Blame Jim; he wrote it (plus a cast of dozens)
 #
 # Be as similar to the output of config.guess/config.sub
 # as possible.
 
 # First get uname entries that we use below
 
@@ -216,16 +218,29 @@
 	;;
     
     UNIX_SV:*:*:maxion)
 	echo "${MACHINE}-ccur-sysv4"; exit 0;
 	;;
     
+    UNIX_SV:*)
+	if [ -d /usr/nec ];then
+		echo "mips-nec-sysv4"; exit 0;
+	fi
+	;;
+
     NonStop-UX:4.[02]*:[BC]*:*)
 	echo "${MACHINE}-tandem-sysv4"; exit 0;
 	;;
 
+    Rhapsody:*:*:*)
+	case "${MACHINE}" in
+	    Power*) MACHINE=powerpc ;;
+	esac
+	echo "${MACHINE}-apple-rhapsody${RELEASE}"; exit 0
+	;;
+
     "RISC iX":*)
 	echo "arm-whatever-riscix"; exit 0;
 	;;
 
     *:4.0:2:*)
 	echo "whatever-unisys-sysv4"; exit 0;
diff -BEr -U 6 apache_1.3.1/src/helpers/install.sh apache_1.3.2/src/helpers/install.sh
--- apache_1.3.1/src/helpers/install.sh	1998-03-29 20:27:34.000000000 +0800
+++ apache_1.3.2/src/helpers/install.sh	1998-09-17 04:49:25.000000000 +0800
@@ -4,12 +4,16 @@
 ##
 ##  Based on `install-sh' from the X Consortium's X11R5 distribution
 ##  as of 89/12/18 which is freely available.
 ##  Cleaned up for Apache's Autoconf-style Interface (APACI)
 ##  by Ralf S. Engelschall <rse@apache.org>
 ##
+#
+# This script falls under the Apache License.
+# See http://www.apache.org/docs/LICENSE
+
 
 #
 #   put in absolute paths if you don't have them in your path; 
 #   or use env. vars.
 #
 mvprog="${MVPROG-mv}"
diff -BEr -U 6 apache_1.3.1/src/helpers/MakeEtags apache_1.3.2/src/helpers/MakeEtags
--- apache_1.3.1/src/helpers/MakeEtags	1998-07-15 04:25:15.000000000 +0800
+++ apache_1.3.2/src/helpers/MakeEtags	1998-09-17 04:49:23.000000000 +0800
@@ -2,12 +2,15 @@
 
 # This file illustrates how to generate a useful TAGS file via etags
 # for emacs.  This should be invoked from the src directory i.e.:
 #   > helpers/MakeEtags
 # and will create a TAGS file in the src directory.
 
+# This script falls under the Apache License.
+# See http://www.apache.org/docs/LICENSE
+
 # Once you have created src/TAGS in emacs you'll need to setup
 # tag-table-alist with an entry to assure it finds the single src/TAGS
 # file from the many source directories.  Something along these lines:
 # (setq tag-table-alist
 #	'(("/home/me/work/apache-1.3/src/" 
 #	   . "/home/me/work/apache-1.3/src/")
diff -BEr -U 6 apache_1.3.1/src/helpers/mkdir.sh apache_1.3.2/src/helpers/mkdir.sh
--- apache_1.3.1/src/helpers/mkdir.sh	1998-04-26 03:27:04.000000000 +0800
+++ apache_1.3.2/src/helpers/mkdir.sh	1998-09-17 04:49:25.000000000 +0800
@@ -4,18 +4,22 @@
 ##
 ##  Based on `mkinstalldirs' from Noah Friedman <friedman@prep.ai.mit.edu>
 ##  as of 1994-03-25, which was placed in the Public Domain.
 ##  Cleaned up for Apache's Autoconf-style Interface (APACI)
 ##  by Ralf S. Engelschall <rse@apache.org>
 ##
+#
+# This script falls under the Apache License.
+# See http://www.apache.org/docs/LICENSE
+
 
 umask 022
 errstatus=0
 for file in ${1+"$@"} ; do 
     set fnord `echo ":$file" |\
-               sed -ne 's/^:\//#/;s/^://;s/\// /g;s/^#/\//;p'`
+               sed -e 's/^:\//%/' -e 's/^://' -e 's/\// /g' -e 's/^%/\//'`
     shift
     pathcomp=
     for d in ${1+"$@"}; do
         pathcomp="$pathcomp$d"
         case "$pathcomp" in
             -* ) pathcomp=./$pathcomp ;;
diff -BEr -U 6 apache_1.3.1/src/helpers/mkshadow.sh apache_1.3.2/src/helpers/mkshadow.sh
--- apache_1.3.1/src/helpers/mkshadow.sh	1998-05-07 23:24:44.000000000 +0800
+++ apache_1.3.2/src/helpers/mkshadow.sh	1998-09-17 04:49:25.000000000 +0800
@@ -3,12 +3,16 @@
 ##  mkshadow.sh -- create a shadow tree
 ##
 ##  Written by Ralf S. Engelschall <rse@apache.org>
 ##  for the shadow tree generation option (--shadow) of 
 ##  Apache's Autoconf-style Interface (APACI) 
 ##
+#
+# This script falls under the Apache License.
+# See http://www.apache.org/docs/LICENSE
+
 
 #   default IFS
 DIFS=' 	
 '
 
 #   source and destination directory
diff -BEr -U 6 apache_1.3.1/src/helpers/ppl.sh apache_1.3.2/src/helpers/ppl.sh
--- apache_1.3.1/src/helpers/ppl.sh	1998-03-29 20:27:35.000000000 +0800
+++ apache_1.3.2/src/helpers/ppl.sh	1998-09-17 04:49:25.000000000 +0800
@@ -5,12 +5,16 @@
 ##            between Unix platforms
 ##
 ##  Written by Ralf S. Engelschall <rse@apache.org>
 ##  for pretty printing lists in the --help option of
 ##  Apache's Autoconf-style Interface (APACI)
 ##
+#
+# This script falls under the Apache License.
+# See http://www.apache.org/docs/LICENSE
+
 
 list=`
 IFS=:
 for entry in $*; do
     if [ ".$entry" != . ]; then
         echo $entry
diff -BEr -U 6 apache_1.3.1/src/helpers/PrintPath apache_1.3.2/src/helpers/PrintPath
--- apache_1.3.1/src/helpers/PrintPath	1998-04-11 23:45:59.000000000 +0800
+++ apache_1.3.2/src/helpers/PrintPath	1998-09-17 12:09:41.000000000 +0800
@@ -1,51 +1,104 @@
 #!/bin/sh
-# Look for $1 somewhere in $PATH. As an extra bonus,
-#  if $AP_PPSEARCHPATH is set, this will look for $i
-#  in there instead. Will print out the full pathname unless
-#  called with the '-s' option
+# Look for program[s] somewhere in $PATH.
 #
-# We do some funny stuff to check to see
-# if test/[] knows about -x
+# Options:
+#  -s
+#    Do not print out full pathname. (silent)
+#  -pPATHNAME
+#    Look in PATHNAME instead of $PATH
 #
-testfile="pp.t.$$"
+# Usage:
+#  PrintPath [-s] [-pPATHNAME] program [program ...]
+#
+# Blame Jim; he wrote it.
+#
+# This script falls under the Apache License.
+# See http://www.apache.org/docs/LICENSE
+
+##
+# Some "constants"
+##
+pathname=$PATH
+echo="yes"
+
+##
+# Find out what OS we are running for later on
+##
+os=`(uname) 2>/dev/null`
+
+##
+# Parse command line
+##
+for args in $*
+do
+    case $args in
+	-s  ) echo="no" ;;
+	-p* ) pathname="`echo $args | sed 's/^..//'`" ;;
+	*   ) programs="$programs $args" ;;
+    esac
+done
+
+##
+# Now we make the adjustments required for OS/2 and everyone
+# else :)
+#
+# First of all, all OS/2 programs have the '.exe' extension.
+# Next, we adjust PATH (or what was given to us as PATH) to
+# be whitespace seperated directories.
+# Finally, we try to determine the best flag to use for
+# test/[] to look for an executable file. OS/2 just has '-r'
+# but with other OSs, we do some funny stuff to check to see
+# if test/[] knows about -x, which is the prefered flag.
+##
+
+if [ "x$os" = "xOS/2" ]
+then
+    ext=".exe"
+    pathname=`echo -E $pathname |
+     sed 's/^;/.;/
+	  s/;;/;.;/g
+	  s/;$/;./
+	  s/;/ /g
+	  s/\\\\/\\//g' `
+    test_exec_flag="-r"
+else
+    ext=""	# No default extensions
+    pathname=`echo $pathname |
+     sed 's/^:/.:/
+	  s/::/:.:/g
+	  s/:$/:./
+	  s/:/ /g' `
+    # Here is how we test to see if test/[] can handle -x
+    testfile="pp.t.$$"
 
-cat > $testfile <<ENDTEST
+    cat > $testfile <<ENDTEST
 #!/bin/sh
 if [ -x / ] || [ -x /bin ] || [ -x /bin/ls ]; then
- exit 0
+    exit 0
 fi
 exit 1
 ENDTEST
 
-if `/bin/sh $testfile 2>/dev/null`; then
-    test_exec_flag="-x"
-else
-    test_exec_flag="-r"
-fi
-rm -f $testfile
-
-if [ "x$1" = "x-s" ]; then
-    shift
-else
-    echo="yes"
-fi
-
-if [ "x$AP_PPSEARCHPATH" = "x" ] ; then
-    AP_PPSEARCHPATH=$PATH
+    if `/bin/sh $testfile 2>/dev/null`; then
+	test_exec_flag="-x"
+    else
+	test_exec_flag="-r"
+    fi
+    rm -f $testfile
 fi
 
-for path in `echo $AP_PPSEARCHPATH |
- sed 's/^:/.:/
-      s/::/:.:/g
-      s/:$/:./
-      s/:/ /g' `
+for program in $programs
 do
-    if [ $test_exec_flag $path/$1 ] && [ ! -d $path/$1 ]; then
-        if [ "$echo" = "yes" ]; then
-	    echo $path/$1
+    for path in $pathname
+    do
+	if [ $test_exec_flag $path/${program}${ext} ] && \
+	   [ ! -d $path/${program}${ext} ]; then
+	    if [ "$echo" = "yes" ]; then
+		echo $path/${program}${ext}
+	    fi
+	    exit 0
 	fi
-	exit 0
-    fi
+    done
 done
 exit 1
 
Only in apache_1.3.1/src/helpers: PrintPathOS2
Only in apache_1.3.2/src/helpers: slo.sh
diff -BEr -U 6 apache_1.3.1/src/helpers/TestCompile apache_1.3.2/src/helpers/TestCompile
--- apache_1.3.1/src/helpers/TestCompile	1998-07-18 23:30:41.000000000 +0800
+++ apache_1.3.2/src/helpers/TestCompile	1998-09-22 01:12:04.000000000 +0800
@@ -29,12 +29,17 @@
 #
 # This must be run as './helpers/TestCompile' from
 # the ./src directory (same directory that Configure is
 # located) if you want to test it out. Configure must
 # also call it as './helpers/TestCompile'
 #
+# Blame Jim; he wrote it (along with a cast of dozens).
+#
+# This script falls under the Apache License.
+# See http://www.apache.org/docs/LICENSE
+
 
 cd ./helpers
 
 #
 # Handle "verbose" and "silent" flags
 #
@@ -65,13 +70,13 @@
 	    ERRDIR='2>/dev/null'
 	fi
 	if [ "x$3" = "x" ]; then
 	    TARGET='dummy'
 	else
 	    TARGET='testfunc'
-	    echo "void main(void) { $3(); }" > testfunc.c
+	    echo "int main(void) { $3(); return(0); }" > testfunc.c
 	fi
 	;;
     "sanity")
 	TLIB=""
 	if [ "$VERBOSE" = "no" ]; then
 	    ERRDIR='2>/dev/null'
@@ -89,14 +94,15 @@
 	    ERRDIR=""
 	else
 	    ERRDIR='2>/dev/null'
 	fi
 	TARGET='testfunc'
 	cat <<EOF >testfunc.c
-void main(void) {
+int main(void) {
     $2();
+    return(0);
 }
 EOF
 	;;
     "header")
 	if [ "x$2" = "x" ]; then
 	    exit
@@ -107,13 +113,15 @@
 	else
 	    ERRDIR='2>/dev/null'
 	fi
 	TARGET='testfunc'
 	cat <<EOF >testfunc.c
 #include <$2>
-void main(void) { }
+int main(void) {
+    return(0);
+}
 EOF
 	;;
     *)
     	exit
 	;;
 esac
@@ -139,19 +147,12 @@
 # Now run that Makefile
 eval "make $TARGET >/dev/null $ERRDIR"
 
 # And see if dummy exists and is executable, if so, then we
 # assume the condition we are testing for is good
 #
-# Use our PrintPath helper script, knowing that we have
-# 2 versions of it though... Configure should set AP_PRINTPATH
-# but if not, just assume we use our "generic" version. We
-# also use the AP_PPSEARCHPATH "hack" to have PrintPath
-# just search this directory.
-
-if [ "x$AP_PRINTPATH" = "x" ] ; then
-    AP_PRINTPATH=PrintPath
-fi
+# Use our PrintPath helper script using the "-p" option to
+# have PrintPath just search this directory.
 
-if AP_PPSEARCHPATH=`pwd` ./$AP_PRINTPATH -s $TARGET ; then
+if ./PrintPath -s -p`pwd` $TARGET ; then
     exstat=0
 fi
diff -BEr -U 6 apache_1.3.1/src/include/alloc.h apache_1.3.2/src/include/alloc.h
--- apache_1.3.1/src/include/alloc.h	1998-06-28 02:09:28.000000000 +0800
+++ apache_1.3.2/src/include/alloc.h	1998-08-14 10:49:45.000000000 +0800
@@ -189,12 +189,38 @@
 API_EXPORT(void) ap_table_addn(table *, const char *name, const char *val);
 API_EXPORT(void) ap_table_do(int (*comp) (void *, const char *, const char *), void *rec,
 			  const table *t,...);
 
 API_EXPORT(table *) ap_overlay_tables(pool *p, const table *overlay, const table *base);
 
+/* Conceptually, ap_overlap_tables does this:
+
+    array_header *barr = ap_table_elts(b);
+    table_entry *belt = (table_entry *)barr->elts;
+    int i;
+
+    for (i = 0; i < barr->nelts; ++i) {
+	if (flags & AP_OVERLAP_TABLES_MERGE) {
+	    ap_table_mergen(a, belt[i].key, belt[i].val);
+	}
+	else {
+	    ap_table_setn(a, belt[i].key, belt[i].val);
+	}
+    }
+
+    Except that it is more efficient (less space and cpu-time) especially
+    when b has many elements.
+
+    Notice the assumptions on the keys and values in b -- they must be
+    in an ancestor of a's pool.  In practice b and a are usually from
+    the same pool.
+*/
+#define AP_OVERLAP_TABLES_SET	(0)
+#define AP_OVERLAP_TABLES_MERGE	(1)
+API_EXPORT(void) ap_overlap_tables(table *a, const table *b, unsigned flags);
+
 /* XXX: these know about the definition of struct table in alloc.c.  That
  * definition is not here because it is supposed to be private, and by not
  * placing it here we are able to get compile-time diagnostics from modules
  * written which assume that a table is the same as an array_header. -djg
  */
 #define ap_table_elts(t) ((array_header *)(t))
diff -BEr -U 6 apache_1.3.1/src/include/ap_config.h apache_1.3.2/src/include/ap_config.h
--- apache_1.3.1/src/include/ap_config.h	1998-07-18 23:30:43.000000000 +0800
+++ apache_1.3.2/src/include/ap_config.h	1998-09-18 14:49:12.000000000 +0800
@@ -64,12 +64,14 @@
 
 /*
  * ap_config.h: system-dependant #defines and includes...
  * See PORTING for a listing of what they mean
  */
 
+#include "ap_mmn.h"		/* MODULE_MAGIC_NUMBER_ */
+
 /*
  * Support for platform dependent autogenerated defines
  */
 #ifndef WIN32
 #include "ap_config_auto.h"
 #else
@@ -167,14 +169,16 @@
 #elif defined(IRIX)
 #undef HAVE_GMTOFF
 /* IRIX has killpg, but it's only in _BSD_COMPAT, so don't use it in case
  * there's some weird conflict with non-BSD signals */
 #define NO_KILLPG
 #undef NO_SETSID
-#if !defined(USE_FCNTL_SERIALIZED_ACCEPT) && !defined(USE_USLOCK_SERIALIZED_ACCEPT)
-#define USE_SYSVSEM_SERIALIZED_ACCEPT
+#if !defined(USE_FLOCK_SERIALIZED_ACCEPT) && \
+    !defined(USE_USLOCK_SERIALIZED_ACCEPT) && \
+    !defined(USE_SYSVSEM_SERIALIZED_ACCEPT)
+#define USE_FCNTL_SERIALIZED_ACCEPT
 #endif
 #define HAVE_SHMGET 1
 #define USE_SHMGET_SCOREBOARD
 #define HAVE_MMAP 1
 #define USE_MMAP_FILES
 #define NO_LONG_DOUBLE
@@ -251,12 +255,15 @@
 #endif
 #if AIX >= 42
 #define NET_SIZE_T size_t
 #endif
 
 #elif defined(ULTRIX)
+/* we don't want to use sys/resource.h under
+   Ultrix although this header exists. */
+#undef HAVE_SYS_RESOURCE_H
 #define HAVE_GMTOFF 1
 #undef NO_KILLPG
 #undef NO_SETSID
 #define ULTRIX_BRAIN_DEATH
 #define NEED_STRDUP
 /* If you have Ultrix 4.3, and are using cc, const is broken */
@@ -355,12 +362,49 @@
 
 typedef int pid_t;
 #define USE_LONGJMP
 #define NO_USE_SIGACTION
 #define HAVE_SYSLOG 1
 
+#elif defined(RHAPSODY) /* Mac OS X Server */
+#define HAVE_GMTOFF
+#define HAVE_MMAP
+#define USE_MMAP_FILES
+#define USE_MMAP_SCOREBOARD
+#define MAP_TMPFILE
+#define HAVE_RESOURCE
+#define HAVE_SYS_RESOURCE_H /* apaci should catch this but doesn't */
+#define HAVE_SNPRINTF
+#define JMP_BUF jmp_buf
+#define USE_LONGJMP
+#define USE_FLOCK_SERIALIZED_ACCEPT
+#define SINGLE_LISTEN_UNSERIALIZED_ACCEPT
+/*
+ * If you are using APACI, (you should be on Rhapsody) these
+ * values are set at configure time. These are here as reference;
+ * the apache that is built into Rhapsody is configured with
+ * these values.
+ */
+#if 0
+#define HTTPD_ROOT              "/Local/Library/WebServer"
+#define DOCUMENT_LOCATION       HTTPD_ROOT "/Documents"
+#define DEFAULT_XFERLOG         "Logs/Access"
+#define DEFAULT_ERRORLOG        "Logs/Errors"
+#define DEFAULT_PIDLOG          "Logs/Process"
+#define DEFAULT_SCOREBOARD      "Logs/Status"
+#define DEFAULT_LOCKFILE        "Logs/Lock"
+#define SERVER_CONFIG_FILE      "Configuration/Server"
+#define RESOURCE_CONFIG_FILE    "Configuration/Resources"
+#define TYPES_CONFIG_FILE       "Configuration/MIME"
+#define ACCESS_CONFIG_FILE      "Configuration/Access"
+#define DEFAULT_USER_DIR        "Library/Web Documents"
+#define DEFAULT_USER            "nobody"
+#define DEFAULT_GROUP           "nogroup"
+#define DEFAULT_PATH            "/bin:/usr/bin:/usr/local/bin"
+#endif
+
 #elif defined(LINUX)
 
 #if LINUX > 1
 #include <features.h>
 
 /* libc4 systems probably still work, it probably doesn't define
@@ -652,13 +696,13 @@
 #define USE_FCNTL_SERIALIZED_ACCEPT
 #define HAVE_MMAP 1
 #define USE_MMAP_SCOREBOARD
 #define USE_MMAP_FILES
 #define HAVE_SYSLOG 1
 
-#elif defined(__EMX__)
+#elif defined(OS2)
 /* Defines required for EMX OS/2 port. */
 #define NO_KILLPG
 #define NEED_STRCASECMP
 #define NEED_STRNCASECMP
 #define NO_SETSID
 #define NO_TIMES
@@ -668,12 +712,14 @@
 /* Add some drive name support */
 #define chdir _chdir2
 #include <sys/time.h>
 #define MAXSOCKETS 4096
 #define USE_OS2_SCOREBOARD
 #define NO_RELIABLE_PIPED_LOGS
+#define USE_OS2SEM_SERIALIZED_ACCEPT
+#define SINGLE_LISTEN_UNSERIALIZED_ACCEPT
 
 #elif defined(__MACHTEN__)
 typedef int rlim_t;
 #undef NO_KILLPG
 #define NO_SETSID
 #define HAVE_GMTOFF 1
@@ -798,12 +844,23 @@
 #define CORE_EXPORT	API_EXPORT
 #endif
 #ifndef CORE_EXPORT_NONSTD
 #define CORE_EXPORT_NONSTD	API_EXPORT_NONSTD
 #endif
 
+/* On OpenStep and Rhapsody, symbols that conflict with loaded dylibs
+ * (eg. System framework) need to be declared as private symbols with
+ * __private_extern__.
+ * For other systems, make that a no-op.
+ */
+#if defined(RHAPSODY) || defined(NEXT)
+#define ap_private_extern __private_extern__
+#else
+#define ap_private_extern
+#endif
+
 /* So that we can use inline on some critical functions, and use
  * GNUC attributes (such as to get -Wall warnings for printf-like
  * functions).  Only do this in gcc 2.7 or later ... it may work
  * on earlier stuff, but why chance it.
  *
  * We've since discovered that the gcc shipped with NeXT systems
@@ -902,13 +959,13 @@
 #ifdef SUNOS4
 int getrlimit(int, struct rlimit *);
 int setrlimit(int, struct rlimit *);
 #endif
 #endif
 #ifdef USE_MMAP_SCOREBOARD
-#if !defined(__EMX__) && !defined(WIN32)
+#if !defined(OS2) && !defined(WIN32)
 /* This file is not needed for OS/2 */
 #include <sys/mman.h>
 #endif
 #endif
 #if !defined(MAP_ANON) && defined(MAP_ANONYMOUS)
 #define MAP_ANON MAP_ANONYMOUS
diff -BEr -U 6 apache_1.3.1/src/include/ap.h apache_1.3.2/src/include/ap.h
--- apache_1.3.1/src/include/ap.h	1998-07-09 02:02:16.000000000 +0800
+++ apache_1.3.2/src/include/ap.h	1998-09-06 00:39:47.000000000 +0800
@@ -64,14 +64,12 @@
 #ifdef __cplusplus
 extern "C" {
 #endif
 
 API_EXPORT(char *) ap_cpystrn(char *, const char *, size_t);
 int ap_slack(int, int);
-API_EXPORT(int) ap_snprintf(char *, size_t, const char *, ...);
-API_EXPORT(int) ap_vsnprintf(char *, size_t, const char *, va_list ap);
 int ap_execle(const char *, const char *, ...);
 int ap_execve(const char *, const char *argv[], const char *envp[]);
 
 /* small utility macros to make things easier to read */
 
 #ifdef WIN32
Only in apache_1.3.2/src/include: ap_mmn.h
diff -BEr -U 6 apache_1.3.1/src/include/hsregex.h apache_1.3.2/src/include/hsregex.h
--- apache_1.3.1/src/include/hsregex.h	1998-07-09 08:04:57.000000000 +0800
+++ apache_1.3.2/src/include/hsregex.h	1998-09-16 03:47:40.000000000 +0800
@@ -13,12 +13,18 @@
 #define API_EXPORT(type)    __declspec(dllexport) type __stdcall
 #else
 #define API_EXPORT(type)    type
 #endif
 #endif
 
+#if defined(RHAPSODY) || defined(NEXT)
+#define ap_private_extern __private_extern__
+#else
+#define ap_private_extern
+#endif
+
 typedef off_t regoff_t;
 typedef struct {
 	int re_magic;
 	size_t re_nsub;		/* number of parenthesized subexpressions */
 	const char *re_endp;	/* end pointer for REG_PEND */
 	struct re_guts *re_g;	/* none of your business :-) */
diff -BEr -U 6 apache_1.3.1/src/include/http_conf_globals.h apache_1.3.2/src/include/http_conf_globals.h
--- apache_1.3.1/src/include/http_conf_globals.h	1998-06-16 11:37:24.000000000 +0800
+++ apache_1.3.2/src/include/http_conf_globals.h	1998-08-13 03:22:18.000000000 +0800
@@ -82,12 +82,13 @@
 extern int ap_daemons_min_free;
 extern int ap_daemons_max_free;
 extern int ap_daemons_limit;
 extern MODULE_VAR_EXPORT int ap_suexec_enabled;
 extern int ap_listenbacklog;
 extern int ap_dump_settings;
+extern API_VAR_EXPORT int ap_extended_status;
 
 extern char *ap_pid_fname;
 extern char *ap_scoreboard_fname;
 extern char *ap_lock_fname;
 extern MODULE_VAR_EXPORT char *ap_server_argv0;
 
diff -BEr -U 6 apache_1.3.1/src/include/http_config.h apache_1.3.2/src/include/http_config.h
--- apache_1.3.1/src/include/http_config.h	1998-07-13 19:32:35.000000000 +0800
+++ apache_1.3.2/src/include/http_config.h	1998-08-13 09:33:55.000000000 +0800
@@ -187,12 +187,15 @@
 
 typedef struct module_struct {
     int version;		/* API version, *not* module version;
 				 * check that module is compatible with this
 				 * version of the server.
 				 */
+    int minor_version;          /* API minor version. Provides API feature
+                                 * milestones. Not checked during module init
+				 */
     int module_index;		/* Index to this modules structures in
 				 * config vectors.
 				 */
 
     const char *name;
 
@@ -266,20 +269,27 @@
     void (*child_exit) (server_rec *, pool *);
 #endif
     int (*post_read_request) (request_rec *);
 } module;
 
 /* Initializer for the first few module slots, which are only
- * really set up once we start running.  Note that the first word
- * is a version check; this should allow us to deal with changes to
- * the API (the server can detect an old-format module, and either
- * handle it back-compatibly, or at least signal an error).
+ * really set up once we start running.  Note that the first two slots
+ * provide a version check; this should allow us to deal with changes to
+ * the API. The major number should reflect changes to the API handler table
+ * itself or removal of functionality. The minor number should reflect
+ * additions of functionality to the existing API. (the server can detect
+ * an old-format module, and either handle it back-compatibly, or at least
+ * signal an error). See src/include/ap_mmn.h for MMN version history.
  */
 
-#define MODULE_MAGIC_NUMBER 19980713
-#define STANDARD_MODULE_STUFF MODULE_MAGIC_NUMBER, -1, __FILE__, NULL, NULL
+#define STANDARD_MODULE_STUFF	MODULE_MAGIC_NUMBER_MAJOR, \
+				MODULE_MAGIC_NUMBER_MINOR, \
+				-1, \
+				__FILE__, \
+				NULL, \
+				NULL
 
 /* Generic accessors for other modules to get at their own module-specific
  * data
  */
 
 API_EXPORT(void *) ap_get_module_config(void *conf_vector, module *m);
diff -BEr -U 6 apache_1.3.1/src/include/http_core.h apache_1.3.2/src/include/http_core.h
--- apache_1.3.1/src/include/http_core.h	1998-07-02 05:19:51.000000000 +0800
+++ apache_1.3.2/src/include/http_core.h	1998-08-27 04:01:21.000000000 +0800
@@ -83,15 +83,34 @@
 #define OPT_INCNOEXEC 32
 #define OPT_SYM_OWNER 64
 #define OPT_MULTI 128
 #define OPT_ALL (OPT_INDEXES|OPT_INCLUDES|OPT_SYM_LINKS|OPT_EXECCGI)
 
 /* options for get_remote_host() */
+/* REMOTE_HOST returns the hostname, or NULL if the hostname
+ * lookup fails.  It will force a DNS lookup according to the
+ * HostnameLookups setting.
+ */
 #define REMOTE_HOST (0)
+
+/* REMOTE_NAME returns the hostname, or the dotted quad if the
+ * hostname lookup fails.  It will force a DNS lookup according
+ * to the HostnameLookups setting.
+ */
 #define REMOTE_NAME (1)
+
+/* REMOTE_NOLOOKUP is like REMOTE_NAME except that a DNS lookup is
+ * never forced.
+ */
 #define REMOTE_NOLOOKUP (2)
+
+/* REMOTE_DOUBLE_REV will always force a DNS lookup, and also force
+ * a double reverse lookup, regardless of the HostnameLookups
+ * setting.  The result is the (double reverse checked) hostname,
+ * or NULL if any of the lookups fail.
+ */
 #define REMOTE_DOUBLE_REV (3)
 
 #define SATISFY_ALL 0
 #define SATISFY_ANY 1
 #define SATISFY_NOSPEC 2
 
@@ -109,13 +128,15 @@
 /* Used for constructing self-referencing URLs, and things like SERVER_PORT,
  * and SERVER_NAME.
  */
 API_EXPORT(char *) ap_construct_url(pool *p, const char *uri, const request_rec *r);
 API_EXPORT(const char *) ap_get_server_name(const request_rec *r);
 API_EXPORT(unsigned) ap_get_server_port(const request_rec *r);
-     
+API_EXPORT(unsigned long) ap_get_limit_req_body(const request_rec *r);
+API_EXPORT(void) ap_custom_response(request_rec *r, int status, char *string);
+
 /* Authentication stuff.  This is one of the places where compatibility
  * with the old config files *really* hurts; they don't discriminate at
  * all between different authentication schemes, meaning that we need
  * to maintain common state for all of them in the core, and make it
  * available to the other modules through interfaces.
  */
@@ -213,12 +234,13 @@
 #if defined (RLIMIT_DATA) || defined (RLIMIT_VMEM) || defined(RLIMIT_AS)
     struct rlimit *limit_mem;
 #endif
 #ifdef RLIMIT_NPROC
     struct rlimit *limit_nproc;
 #endif
+    unsigned long limit_req_body;  /* limit on bytes in request msg body */
 
     /* logging options */
     enum { srv_sig_off, srv_sig_on, srv_sig_withmail } server_signature;
     int loglevel;
     
     /* Access control */
@@ -228,12 +250,16 @@
 } core_dir_config;
 
 /* Per-server core configuration */
 
 typedef struct {
   
+#ifdef GPROF
+    char *gprof_dir;
+#endif
+
     /* Name translations --- we want the core to be able to do *something*
      * so it's at least a minimally functional web server on its own (and
      * can be tested that way).  But let's keep it to the bare minimum:
      */
     char *ap_document_root;
   
diff -BEr -U 6 apache_1.3.1/src/include/httpd.h apache_1.3.2/src/include/httpd.h
--- apache_1.3.1/src/include/httpd.h	1998-07-19 06:57:27.000000000 +0800
+++ apache_1.3.2/src/include/httpd.h	1998-09-22 03:12:17.000000000 +0800
@@ -76,13 +76,13 @@
 /* ----------------------------- config dir ------------------------------ */
 
 /* Define this to be the default server home dir. Most things later in this
  * file with a relative pathname will have this added.
  */
 #ifndef HTTPD_ROOT
-#ifdef __EMX__
+#ifdef OS2
 /* Set default for OS/2 file system */
 #define HTTPD_ROOT "/os2httpd"
 #elif defined(WIN32)
 /* Set default for Windows file system */
 #define HTTPD_ROOT "/apache"
 #else
@@ -91,13 +91,13 @@
 #endif /* HTTPD_ROOT */
 
 /* Default location of documents.  Can be overridden by the DocumentRoot
  * directive.
  */
 #ifndef DOCUMENT_LOCATION
-#ifdef __EMX__
+#ifdef OS2
 /* Set default for OS/2 file system */
 #define DOCUMENT_LOCATION  HTTPD_ROOT "/docs"
 #else
 #define DOCUMENT_LOCATION  HTTPD_ROOT "/htdocs"
 #endif
 #endif /* DOCUMENT_LOCATION */
@@ -119,12 +119,14 @@
  */
 
 
 /* -- Internal representation for a HTTP protocol number, e.g., HTTP/1.1 -- */
 
 #define HTTP_VERSION(major,minor) (1000*(major)+(minor))
+#define HTTP_VERSION_MAJOR(number) ((number)/1000)
+#define HTTP_VERSION_MINOR(number) ((number)%1000)
 
 
 /* -------------- Port number for server running standalone --------------- */
 
 #define DEFAULT_HTTP_PORT	80
 #define DEFAULT_HTTPS_PORT	443
@@ -141,22 +143,22 @@
 #ifndef DEFAULT_GROUP
 #define DEFAULT_GROUP "#-1"
 #endif
 
 /* The name of the log files */
 #ifndef DEFAULT_XFERLOG
-#ifdef __EMX__
+#ifdef OS2
 /* Set default for OS/2 file system */
 #define DEFAULT_XFERLOG "logs/access.log"
 #else
 #define DEFAULT_XFERLOG "logs/access_log"
 #endif
 #endif /* DEFAULT_XFERLOG */
 
 #ifndef DEFAULT_ERRORLOG
-#ifdef __EMX__
+#ifdef OS2
 /* Set default for OS/2 file system */
 #define DEFAULT_ERRORLOG "logs/error.log"
 #else
 #define DEFAULT_ERRORLOG "logs/error_log"
 #endif
 #endif /* DEFAULT_ERRORLOG */
@@ -186,13 +188,13 @@
 #ifndef DEFAULT_CONTENT_TYPE
 #define DEFAULT_CONTENT_TYPE "text/plain"
 #endif
 
 /* Define this to be what your per-directory security files are called */
 #ifndef DEFAULT_ACCESS_FNAME
-#ifdef __EMX__
+#ifdef OS2
 /* Set default for OS/2 file system */
 #define DEFAULT_ACCESS_FNAME "htaccess"
 #else
 #define DEFAULT_ACCESS_FNAME ".htaccess"
 #endif
 #endif /* DEFAULT_ACCESS_FNAME */
@@ -230,13 +232,13 @@
 #ifndef DEFAULT_PATH
 #define DEFAULT_PATH "/bin:/usr/bin:/usr/ucb:/usr/bsd:/usr/local/bin"
 #endif
 
 /* The path to the shell interpreter, for parsed docs */
 #ifndef SHELL_PATH
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
 /* Set default for OS/2 and Windows file system */
 #define SHELL_PATH "CMD.EXE"
 #else
 #define SHELL_PATH "/bin/sh"
 #endif
 #endif /* SHELL_PATH */
@@ -366,12 +368,38 @@
  */
 
 #ifndef DEFAULT_LISTENBACKLOG
 #define DEFAULT_LISTENBACKLOG 511
 #endif
 
+/* Limits on the size of various request items.  These limits primarily
+ * exist to prevent simple denial-of-service attacks on a server based
+ * on misuse of the protocol.  The recommended values will depend on the
+ * nature of the server resources -- CGI scripts and database backends
+ * might require large values, but most servers could get by with much
+ * smaller limits than we use below.  The request message body size can
+ * be limited by the per-dir config directive LimitRequestBody.
+ *
+ * Internal buffer sizes are two bytes more than the DEFAULT_LIMIT_REQUEST_LINE
+ * and DEFAULT_LIMIT_REQUEST_FIELDSIZE below, which explains the 8190.
+ * These two limits can be lowered (but not raised) by the server config
+ * directives LimitRequestLine and LimitRequestFieldsize, respectively.
+ *
+ * DEFAULT_LIMIT_REQUEST_FIELDS can be modified or disabled (set = 0) by
+ * the server config directive LimitRequestFields.
+ */
+#ifndef DEFAULT_LIMIT_REQUEST_LINE
+#define DEFAULT_LIMIT_REQUEST_LINE 8190
+#endif /* default limit on bytes in Request-Line (Method+URI+HTTP-version) */
+#ifndef DEFAULT_LIMIT_REQUEST_FIELDSIZE
+#define DEFAULT_LIMIT_REQUEST_FIELDSIZE 8190
+#endif /* default limit on bytes in any one header field  */
+#ifndef DEFAULT_LIMIT_REQUEST_FIELDS
+#define DEFAULT_LIMIT_REQUEST_FIELDS 100
+#endif /* default limit on number of request header fields */
+
 /*
  * The below defines the base string of the Server: header. Additional
  * tokens can be added via the ap_add_version_component() API call.
  *
  * The tokens are listed in order of their significance for identifying the
  * application.
@@ -379,13 +407,13 @@
  * "Product tokens should be short and to the point -- use of them for 
  * advertizing or other non-essential information is explicitly forbidden."
  *
  * Example: "Apache/1.1.0 MrWidget/0.1-alpha" 
  */
 
-#define SERVER_BASEVERSION "Apache/1.3.1"	/* SEE COMMENTS ABOVE */
+#define SERVER_BASEVERSION "Apache/1.3.2"	/* SEE COMMENTS ABOVE */
 #define SERVER_VERSION  SERVER_BASEVERSION
 enum server_token_type {
     SrvTk_MIN,		/* eg: Apache/1.3.0 */
     SrvTk_OS,		/* eg: Apache/1.3.0 (UNIX) */
     SrvTk_FULL		/* eg: Apache/1.3.0 (UNIX) PHP/3.0 FooBar/1.2b */
 };
@@ -396,13 +424,13 @@
 
 /* Numeric release version identifier: major minor bugfix betaseq
  * Always increases along the same track as the source branch.
  * For a final release, 'betaseq' should be set to '99'.
  * For example, Apache 1.4.2 should be '1040299'
  */
-#define APACHE_RELEASE 1030199
+#define APACHE_RELEASE 1030299
 
 #define SERVER_PROTOCOL "HTTP/1.1"
 #ifndef SERVER_SUPPORT
 #define SERVER_SUPPORT "http://www.apache.org/"
 #endif
 
@@ -472,18 +500,18 @@
 #define PRECONDITION_FAILED HTTP_PRECONDITION_FAILED
 #define SERVER_ERROR        HTTP_INTERNAL_SERVER_ERROR
 #define NOT_IMPLEMENTED     HTTP_NOT_IMPLEMENTED
 #define BAD_GATEWAY         HTTP_BAD_GATEWAY
 #define VARIANT_ALSO_VARIES HTTP_VARIANT_ALSO_VARIES
 
-#define is_HTTP_INFO(x)         (((x) >= 100)&&((x) < 200))
-#define is_HTTP_SUCCESS(x)      (((x) >= 200)&&((x) < 300))
-#define is_HTTP_REDIRECT(x)     (((x) >= 300)&&((x) < 400))
-#define is_HTTP_ERROR(x)        (((x) >= 400)&&((x) < 600))
-#define is_HTTP_CLIENT_ERROR(x) (((x) >= 400)&&((x) < 500))
-#define is_HTTP_SERVER_ERROR(x) (((x) >= 500)&&((x) < 600))
+#define ap_is_HTTP_INFO(x)         (((x) >= 100)&&((x) < 200))
+#define ap_is_HTTP_SUCCESS(x)      (((x) >= 200)&&((x) < 300))
+#define ap_is_HTTP_REDIRECT(x)     (((x) >= 300)&&((x) < 400))
+#define ap_is_HTTP_ERROR(x)        (((x) >= 400)&&((x) < 600))
+#define ap_is_HTTP_CLIENT_ERROR(x) (((x) >= 400)&&((x) < 500))
+#define ap_is_HTTP_SERVER_ERROR(x) (((x) >= 500)&&((x) < 600))
 
 #define status_drops_connection(x) (((x) == HTTP_BAD_REQUEST)           || \
                                     ((x) == HTTP_REQUEST_TIME_OUT)      || \
                                     ((x) == HTTP_LENGTH_REQUIRED)       || \
                                     ((x) == HTTP_REQUEST_ENTITY_TOO_LARGE) || \
                                     ((x) == HTTP_REQUEST_URI_TOO_LARGE) || \
@@ -819,14 +847,18 @@
     char *path;			/* Pathname for ServerPath */
     int pathlen;		/* Length of path */
 
     array_header *names;	/* Normal names for ServerAlias servers */
     array_header *wild_names;	/* Wildcarded names for ServerAlias servers */
 
-    uid_t server_uid;		/* effective user id when calling exec wrapper */
-    gid_t server_gid;		/* effective group id when calling exec wrapper */
+    uid_t server_uid;        /* effective user id when calling exec wrapper */
+    gid_t server_gid;        /* effective group id when calling exec wrapper */
+
+    int limit_req_line;      /* limit on size of the HTTP request line    */
+    int limit_req_fieldsize; /* limit on size of any request header field */
+    int limit_req_fields;    /* limit on number of request header fields  */
 };
 
 /* These are more like real hosts than virtual hosts */
 struct listen_rec {
     listen_rec *next;
     struct sockaddr_in local_addr;	/* local IP address and port */
@@ -886,13 +918,14 @@
 API_EXPORT(char *) ap_make_full_path(pool *a, const char *dir, const char *f);
 
 API_EXPORT(int) ap_is_matchexp(const char *str);
 API_EXPORT(int) ap_strcmp_match(const char *str, const char *exp);
 API_EXPORT(int) ap_strcasecmp_match(const char *str, const char *exp);
 API_EXPORT(char *) ap_uudecode(pool *, const char *);
-#ifdef __EMX__
+API_EXPORT(char *) ap_uuencode(pool *p, char *string); 
+#ifdef OS2
 void os2pathname(char *path);
 #endif
 
 API_EXPORT(char *) ap_pregsub(pool *p, const char *input, const char *source,
 			   size_t nmatch, regmatch_t pmatch[]);
 
@@ -948,18 +981,18 @@
 #define ap_os_canonical_filename(p,f)  (f)
 #else
 API_EXPORT(char *) ap_os_canonical_filename(pool *p, const char *file);
 #endif
 
 #ifdef _OSD_POSIX
-extern const char *os_set_authfile(pool *p, const char *filename);
+extern const char *os_set_account(pool *p, const char *account);
 extern int os_init_job_environment(server_rec *s, const char *user_name);
 #endif /* _OSD_POSIX */
 
 char *ap_get_local_host(pool *);
-unsigned long ap_get_virthost_addr(const char *hostname, unsigned short *port);
+unsigned long ap_get_virthost_addr(char *hostname, unsigned short *port);
 
 extern API_VAR_EXPORT time_t ap_restart_time;
 
 /*
  * Apache tries to keep all of its long term filehandles (such as log files,
  * and sockets) above this number.  This is to workaround problems in many
diff -BEr -U 6 apache_1.3.1/src/include/http_log.h apache_1.3.2/src/include/http_log.h
--- apache_1.3.1/src/include/http_log.h	1998-05-04 01:31:08.000000000 +0800
+++ apache_1.3.2/src/include/http_log.h	1998-08-07 01:30:24.000000000 +0800
@@ -105,15 +105,21 @@
 #define APLOG_MARK	__FILE__,__LINE__
 
 void ap_open_logs (server_rec *, pool *p);
 API_EXPORT(void) ap_log_error(const char *file, int line, int level,
 			     const server_rec *s, const char *fmt, ...)
 			    __attribute__((format(printf,5,6)));
+API_EXPORT(void) ap_log_rerror(const char *file, int line, int level,
+			     const request_rec *s, const char *fmt, ...)
+			    __attribute__((format(printf,5,6)));
 API_EXPORT(void) ap_error_log2stderr (server_rec *);     
 
 void ap_log_pid (pool *p, char *fname);
+/* These are for legacy code, new code should use ap_log_error,
+ * or ap_log_rerror.
+ */
 API_EXPORT(void) ap_log_error_old(const char *err, server_rec *s);
 API_EXPORT(void) ap_log_unixerr(const char *routine, const char *file,
 			     const char *msg, server_rec *s);
 API_EXPORT(void) ap_log_printf(const server_rec *s, const char *fmt, ...)
 			    __attribute__((format(printf,2,3)));
 API_EXPORT(void) ap_log_reason(const char *reason, const char *fname,
diff -BEr -U 6 apache_1.3.1/src/include/http_protocol.h apache_1.3.2/src/include/http_protocol.h
--- apache_1.3.1/src/include/http_protocol.h	1998-07-02 05:19:51.000000000 +0800
+++ apache_1.3.2/src/include/http_protocol.h	1998-08-09 22:33:10.000000000 +0800
@@ -86,18 +86,18 @@
 /* Send the Status-Line and header fields for HTTP response */
 
 API_EXPORT(void) ap_send_http_header(request_rec *l);
 
 /* Send the response to special method requests */
 
-int ap_send_http_trace(request_rec *r);
+API_EXPORT(int) ap_send_http_trace(request_rec *r);
 int ap_send_http_options(request_rec *r);
 
 /* Finish up stuff after a request */
 
-void ap_finalize_request_protocol(request_rec *r);
+API_EXPORT(void) ap_finalize_request_protocol(request_rec *r);
 
 /* Send error back to client... last arg indicates error status in case
  * we get an error in the process of trying to deal with an ErrorDocument
  * to handle some other error.  In that case, we print the default report
  * for the first thing that went wrong, and more briefly report on the
  * problem with the ErrorDocument.
diff -BEr -U 6 apache_1.3.1/src/include/http_request.h apache_1.3.2/src/include/http_request.h
--- apache_1.3.1/src/include/http_request.h	1998-05-04 01:31:09.000000000 +0800
+++ apache_1.3.2/src/include/http_request.h	1998-08-09 22:33:10.000000000 +0800
@@ -101,13 +101,13 @@
 API_EXPORT(int) ap_is_initial_req(request_rec *r);
 API_EXPORT(time_t) ap_update_mtime(request_rec *r, time_t dependency_mtime);
 
 #ifdef CORE_PRIVATE
 /* Function called by main.c to handle first-level request */
 void ap_process_request(request_rec *);
-void ap_die(int type, request_rec *r);
+API_EXPORT(void) ap_die(int type, request_rec *r);
 #endif
 
 #ifdef __cplusplus
 }
 #endif
 
diff -BEr -U 6 apache_1.3.1/src/include/scoreboard.h apache_1.3.2/src/include/scoreboard.h
--- apache_1.3.1/src/include/scoreboard.h	1998-05-04 01:31:10.000000000 +0800
+++ apache_1.3.2/src/include/scoreboard.h	1998-08-11 08:09:43.000000000 +0800
@@ -106,13 +106,12 @@
 typedef struct {
 #ifdef OPTIMIZE_TIMEOUTS
     vtime_t cur_vtime;		/* the child's current vtime */
     unsigned short timeout_len;	/* length of the timeout */
 #endif
     unsigned char status;
-#if defined(STATUS)
     unsigned long access_count;
     unsigned long bytes_served;
     unsigned long my_access_count;
     unsigned long my_bytes_served;
     unsigned long conn_bytes;
     unsigned short conn_count;
@@ -129,13 +128,12 @@
 #ifndef OPTIMIZE_TIMEOUTS
     time_t last_used;
 #endif
     char client[32];		/* Keep 'em small... */
     char request[64];		/* We just want an idea... */
     char vhost[32];		/* What virtual host is being accessed? */
-#endif
 } short_score;
 
 typedef struct {
     int exit_generation;	/* Set by the main process if a graceful
 				   restart is required */
 } global_score;
diff -BEr -U 6 apache_1.3.1/src/include/util_md5.h apache_1.3.2/src/include/util_md5.h
--- apache_1.3.1/src/include/util_md5.h	1998-05-30 02:20:49.000000000 +0800
+++ apache_1.3.2/src/include/util_md5.h	1998-09-07 01:12:18.000000000 +0800
@@ -61,13 +61,14 @@
 #ifdef __cplusplus
 extern "C" {
 #endif
 
 #include "ap_md5.h"
 
-API_EXPORT(char *) ap_md5(pool *a, unsigned char *string);
+API_EXPORT(char *) ap_md5(pool *a, const unsigned char *string);
+API_EXPORT(char *) ap_md5_binary(pool *a, const unsigned char *buf, int len);
 API_EXPORT(char *) ap_md5contextTo64(pool *p, AP_MD5_CTX * context);
 API_EXPORT(char *) ap_md5digest(pool *p, FILE *infile);
 
 #ifdef __cplusplus
 }
 #endif
diff -BEr -U 6 apache_1.3.1/src/include/util_script.h apache_1.3.2/src/include/util_script.h
--- apache_1.3.1/src/include/util_script.h	1998-06-13 23:22:49.000000000 +0800
+++ apache_1.3.2/src/include/util_script.h	1998-08-07 02:58:20.000000000 +0800
@@ -75,12 +75,15 @@
 API_EXPORT(void) ap_add_cgi_vars(request_rec *r);
 API_EXPORT(void) ap_add_common_vars(request_rec *r);
 #define scan_script_header(a1,a2) ap_scan_script_header_err(a1,a2,NULL)
 API_EXPORT(int) ap_scan_script_header_err(request_rec *r, FILE *f, char *buffer);
 API_EXPORT(int) ap_scan_script_header_err_buff(request_rec *r, BUFF *f,
                                                char *buffer);
+API_EXPORT(int) ap_scan_script_header_err_core(request_rec *r, char *buffer,
+				       int (*getsfunc) (char *, int, void *),
+				       void *getsfunc_data);
 API_EXPORT(void) ap_send_size(size_t size, request_rec *r);
 API_EXPORT(int) ap_call_exec(request_rec *r, child_info *pinfo, char *argv0, char **env,
                           int shellcmd);
 
 #ifdef __cplusplus
 }
diff -BEr -U 6 apache_1.3.1/src/main/alloc.c apache_1.3.2/src/main/alloc.c
--- apache_1.3.1/src/main/alloc.c	1998-06-13 23:22:52.000000000 +0800
+++ apache_1.3.2/src/main/alloc.c	1998-08-14 10:49:47.000000000 +0800
@@ -1383,12 +1383,169 @@
 	}
     } while (argp && ((argp = va_arg(vp, char *)) != NULL));
 
     va_end(vp);
 }
 
+/* Curse libc and the fact that it doesn't guarantee a stable sort.  We
+ * have to enforce stability ourselves by using the order field.  If it
+ * provided a stable sort then we wouldn't even need temporary storage to
+ * do the work below. -djg
+ *
+ * ("stable sort" means that equal keys retain their original relative
+ * ordering in the output.)
+ */
+typedef struct {
+    char *key;
+    char *val;
+    int order;
+} overlap_key;
+
+static int sort_overlap(const void *va, const void *vb)
+{
+    const overlap_key *a = va;
+    const overlap_key *b = vb;
+    int r;
+
+    r = strcasecmp(a->key, b->key);
+    if (r) {
+	return r;
+    }
+    return a->order - b->order;
+}
+
+/* prefer to use the stack for temp storage for overlaps smaller than this */
+#ifndef AP_OVERLAP_TABLES_ON_STACK
+#define AP_OVERLAP_TABLES_ON_STACK	(512)
+#endif
+
+API_EXPORT(void) ap_overlap_tables(table *a, const table *b, unsigned flags)
+{
+    overlap_key cat_keys_buf[AP_OVERLAP_TABLES_ON_STACK];
+    overlap_key *cat_keys;
+    int nkeys;
+    table_entry *e;
+    table_entry *last_e;
+    overlap_key *left;
+    overlap_key *right;
+    overlap_key *last;
+
+    nkeys = a->a.nelts + b->a.nelts;
+    if (nkeys < AP_OVERLAP_TABLES_ON_STACK) {
+	cat_keys = cat_keys_buf;
+    }
+    else {
+	/* XXX: could use scratch free space in a or b's pool instead...
+	 * which could save an allocation in b's pool.
+	 */
+	cat_keys = ap_palloc(b->a.pool, sizeof(overlap_key) * nkeys);
+    }
+
+    nkeys = 0;
+
+    /* Create a list of the entries from a concatenated with the entries
+     * from b.
+     */
+    e = (table_entry *)a->a.elts;
+    last_e = e + a->a.nelts;
+    while (e < last_e) {
+	cat_keys[nkeys].key = e->key;
+	cat_keys[nkeys].val = e->val;
+	cat_keys[nkeys].order = nkeys;
+	++nkeys;
+	++e;
+    }
+
+    e = (table_entry *)b->a.elts;
+    last_e = e + b->a.nelts;
+    while (e < last_e) {
+	cat_keys[nkeys].key = e->key;
+	cat_keys[nkeys].val = e->val;
+	cat_keys[nkeys].order = nkeys;
+	++nkeys;
+	++e;
+    }
+
+    qsort(cat_keys, nkeys, sizeof(overlap_key), sort_overlap);
+
+    /* Now iterate over the sorted list and rebuild a.
+     * Start by making sure it has enough space.
+     */
+    a->a.nelts = 0;
+    if (a->a.nalloc < nkeys) {
+	a->a.elts = ap_palloc(a->a.pool, a->a.elt_size * nkeys * 2);
+	a->a.nalloc = nkeys * 2;
+    }
+
+    /*
+     * In both the merge and set cases we retain the invariant:
+     *
+     * left->key, (left+1)->key, (left+2)->key, ..., (right-1)->key
+     * are all equal keys.  (i.e. strcasecmp returns 0)
+     *
+     * We essentially need to find the maximal
+     * right for each key, then we can do a quick merge or set as
+     * appropriate.
+     */
+
+    if (flags & AP_OVERLAP_TABLES_MERGE) {
+	left = cat_keys;
+	last = left + nkeys;
+	while (left < last) {
+	    right = left + 1;
+	    if (right == last
+		|| strcasecmp(left->key, right->key)) {
+		ap_table_addn(a, left->key, left->val);
+		left = right;
+	    }
+	    else {
+		char *strp;
+		char *value;
+		size_t len;
+
+		/* Have to merge some headers.  Let's re-use the order field,
+		 * since it's handy... we'll store the length of val there.
+		 */
+		left->order = strlen(left->val);
+		len = left->order;
+		do {
+		    right->order = strlen(right->val);
+		    len += 2 + right->order;
+		    ++right;
+		} while (right < last
+			&& !strcasecmp(left->key, right->key));
+		/* right points one past the last header to merge */
+		value = ap_palloc(a->a.pool, len + 1);
+		strp = value;
+		for (;;) {
+		    memcpy(strp, left->val, left->order);
+		    strp += left->order;
+		    ++left;
+		    if (left == right) break;
+		    *strp++ = ',';
+		    *strp++ = ' ';
+		}
+		*strp = 0;
+		ap_table_addn(a, (left-1)->key, value);
+	    }
+	}
+    }
+    else {
+	left = cat_keys;
+	last = left + nkeys;
+	while (left < last) {
+	    right = left + 1;
+	    while (right < last && !strcasecmp(left->key, right->key)) {
+		++right;
+	    }
+	    ap_table_addn(a, (right-1)->key, (right-1)->val);
+	    left = right;
+	}
+    }
+}
+
 /*****************************************************************
  *
  * Managing generic cleanups.  
  */
 
 struct cleanup {
@@ -1797,13 +1954,13 @@
 #define os_pipe(fds) _pipe(fds, 512, O_BINARY | O_NOINHERIT)
 #else
 #define os_pipe(fds) pipe(fds)
 #endif /* WIN32 */
 
 /* for ap_fdopen, to get binary mode */
-#if defined (__EMX__) || defined (WIN32)
+#if defined (OS2) || defined (WIN32)
 #define BINMODE	"b"
 #else
 #define BINMODE
 #endif
 
 static int spawn_child_core(pool *p, int (*func) (void *, child_info *),
@@ -1847,12 +2004,13 @@
 #ifdef WIN32
 
     {
 	HANDLE thread_handle;
 	int hStdIn, hStdOut, hStdErr;
 	int old_priority;
+	child_info info;
 
 	(void) ap_acquire_mutex(spawn_mutex);
 	thread_handle = GetCurrentThread();	/* doesn't need to be closed */
 	old_priority = GetThreadPriority(thread_handle);
 	SetThreadPriority(thread_handle, THREAD_PRIORITY_HIGHEST);
 	/* Now do the right thing with your pipes */
@@ -1873,13 +2031,17 @@
 	    hStdErr = dup(fileno(stderr));
 	    if(dup2(err_fds[1], fileno(stderr)))
 		ap_log_error(APLOG_MARK, APLOG_ERR, NULL, "dup2(stdin) failed");
 	    close(err_fds[1]);
 	}
 
-	pid = (*func) (data, NULL);
+	info.hPipeInputRead   = GetStdHandle(STD_INPUT_HANDLE);
+	info.hPipeOutputWrite = GetStdHandle(STD_OUTPUT_HANDLE);
+	info.hPipeErrorWrite  = GetStdHandle(STD_ERROR_HANDLE);
+
+	pid = (*func) (data, &info);
         if (pid == -1) pid = 0;   /* map Win32 error code onto Unix default */
 
         if (!pid) {
 	    save_errno = errno;
 	    close(in_fds[1]);
 	    close(out_fds[0]);
diff -BEr -U 6 apache_1.3.1/src/main/buff.c apache_1.3.2/src/main/buff.c
--- apache_1.3.1/src/main/buff.c	1998-07-05 02:22:11.000000000 +0800
+++ apache_1.3.2/src/main/buff.c	1998-09-05 00:47:46.000000000 +0800
@@ -1190,14 +1190,20 @@
 API_EXPORT(int) ap_bwrite(BUFF *fb, const void *buf, int nbyte)
 {
     int i, nwr, useable_bufsiz;
 #ifdef CHARSET_EBCDIC
     static char *cbuf = NULL;
     static int csize = 0;
+#endif /*CHARSET_EBCDIC*/
+
+    if (fb->flags & (B_WRERR | B_EOUT))
+	return -1;
+    if (nbyte == 0)
+	return 0;
 
-    /* XXX: martin don't you want to do this after the error tests below? */
+#ifdef CHARSET_EBCDIC
     if (ap_bgetflag(fb, B_EBCDIC2ASCII)) {
         if (nbyte > csize) {
             if (cbuf != NULL)
                 free(cbuf);
             cbuf = malloc(csize = nbyte+HUGE_STRING_LEN);
             if (cbuf == NULL)
@@ -1205,17 +1211,12 @@
         }
         ebcdic2ascii((cbuf) ? cbuf : (void*)buf, buf, nbyte);
         buf = (cbuf) ? cbuf : buf;
     }
 #endif /*CHARSET_EBCDIC*/
 
-    if (fb->flags & (B_WRERR | B_EOUT))
-	return -1;
-    if (nbyte == 0)
-	return 0;
-
     if (!(fb->flags & B_WR)) {
 /* unbuffered write -- have to use bcwrite since we aren't taking care
  * of chunking any other way */
 	return bcwrite(fb, buf, nbyte);
     }
 
Only in apache_1.3.1/src/main: fnmatch.c
diff -BEr -U 6 apache_1.3.1/src/main/http_config.c apache_1.3.2/src/main/http_config.c
--- apache_1.3.1/src/main/http_config.c	1998-07-07 12:06:20.000000000 +0800
+++ apache_1.3.2/src/main/http_config.c	1998-09-20 05:54:57.000000000 +0800
@@ -507,13 +507,13 @@
             if (result != DECLINED)
                 return result;
         }
     }
 
     if (result == NOT_IMPLEMENTED && r->handler) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_WARNING, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_WARNING, r,
             "handler \"%s\" not found for: %s", r->handler, r->filename);
     }
 
     /* Pass two --- wildcard matches */
 
     for (handp = wildhandlers; handp->hr.content_type; ++handp) {
@@ -535,21 +535,16 @@
 {
     /* This could be called from an AddModule httpd.conf command,
      * after the file has been linked and the module structure within it
      * teased out...
      */
 
-    /* At some point, we may want to offer back-compatibility for
-     * loading modules that are for older versions of Apache. For now,
-     * though, we don't.
-     */
-
-    if (m->version != MODULE_MAGIC_NUMBER) {
+    if (m->version != MODULE_MAGIC_NUMBER_MAJOR) {
 	fprintf(stderr, "httpd: module \"%s\" is not compatible with this "
 		"version of Apache.\n", m->name);
-	fprintf(stderr, "Please contact the author for the correct version.\n");
+	fprintf(stderr, "Please contact the vendor for the correct version.\n");
 	exit(1);
     }
 
     if (m->next == NULL) {
 	m->next = top_module;
 	top_module = m;
@@ -600,12 +595,13 @@
     module *modp;
 
     modp = top_module;
     if (modp == m) {
 	/* We are the top module, special case */
 	top_module = modp->next;
+	m->next = NULL;
     }
     else {
 	/* Not the top module, find use. When found modp will
 	 * point to the module _before_ us in the list
 	 */
 
@@ -1240,26 +1236,30 @@
 
 	errmsg = ap_srm_command_loop(&parms, dc);
 
 	ap_cfg_closefile(f);
 
 	if (errmsg) {
-	    ap_log_error(APLOG_MARK, APLOG_ALERT|APLOG_NOERRNO, r->server, "%s: %s",
+	    ap_log_rerror(APLOG_MARK, APLOG_ALERT|APLOG_NOERRNO, r, "%s: %s",
                         filename, errmsg);
+	    ap_table_setn(r->notes, "error-notes", errmsg);
             return HTTP_INTERNAL_SERVER_ERROR;
 	}
 
 	*result = dc;
     }
     else {
 	if (errno == ENOENT || errno == ENOTDIR)
 	    dc = NULL;
 	else {
-	    ap_log_error(APLOG_MARK, APLOG_CRIT, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_CRIT, r,
 			"%s pcfg_openfile: unable to check htaccess file, ensure it is readable",
 			filename);
+	    ap_table_setn(r->notes, "error-notes",
+			  "Server unable to read htaccess file, denying "
+			  "access to be safe");
 	    return HTTP_FORBIDDEN;
 	}
     }
 
 /* cache it */
     new = ap_palloc(r->pool, sizeof(struct htaccess_result));
@@ -1314,12 +1314,16 @@
     s->module_config = create_empty_config(p);
     s->lookup_defaults = ap_create_per_dir_config(p);
 
     s->server_uid = ap_user_id;
     s->server_gid = ap_group_id;
 
+    s->limit_req_line = main_server->limit_req_line;
+    s->limit_req_fieldsize = main_server->limit_req_fieldsize;
+    s->limit_req_fields = main_server->limit_req_fields;
+
     *ps = s;
 
     return ap_parse_vhost_addrs(p, hostname, s);
 }
 
 
@@ -1387,12 +1391,13 @@
     ap_scoreboard_fname = DEFAULT_SCOREBOARD;
     ap_lock_fname = DEFAULT_LOCKFILE;
     ap_max_requests_per_child = DEFAULT_MAX_REQUESTS_PER_CHILD;
     ap_bind_address.s_addr = htonl(INADDR_ANY);
     ap_listeners = NULL;
     ap_listenbacklog = DEFAULT_LISTENBACKLOG;
+    ap_extended_status = 0;
 
     /* Global virtual host hash bucket pointers.  Init to null. */
     ap_init_vhost_config(p);
 
     ap_cpystrn(ap_coredump_dir, ap_server_root, sizeof(ap_coredump_dir));
 }
@@ -1406,12 +1411,15 @@
     s->server_hostname = NULL;
     s->error_fname = DEFAULT_ERRORLOG;
     s->error_log = stderr;
     s->loglevel = DEFAULT_LOGLEVEL;
     s->srm_confname = RESOURCE_CONFIG_FILE;
     s->access_confname = ACCESS_CONFIG_FILE;
+    s->limit_req_line = DEFAULT_LIMIT_REQUEST_LINE;
+    s->limit_req_fieldsize = DEFAULT_LIMIT_REQUEST_FIELDSIZE;
+    s->limit_req_fields = DEFAULT_LIMIT_REQUEST_FIELDS;
     s->timeout = DEFAULT_TIMEOUT;
     s->keep_alive_timeout = DEFAULT_KEEPALIVE_TIMEOUT;
     s->keep_alive_max = DEFAULT_KEEPALIVE;
     s->keep_alive = 1;
     s->next = NULL;
     s->addrs = ap_pcalloc(p, sizeof(server_addr_rec));
diff -BEr -U 6 apache_1.3.1/src/main/http_core.c apache_1.3.2/src/main/http_core.c
--- apache_1.3.1/src/main/http_core.c	1998-07-13 19:32:39.000000000 +0800
+++ apache_1.3.2/src/main/http_core.c	1998-09-18 04:23:45.000000000 +0800
@@ -140,12 +140,13 @@
     conf->limit_mem = NULL;
 #endif
 #ifdef RLIMIT_NPROC
     conf->limit_nproc = NULL;
 #endif
 
+    conf->limit_req_body = 0;
     conf->sec = ap_make_array(a, 2, sizeof(void *));
 
     return (void *)conf;
 }
 
 static void *merge_core_dir_configs(pool *a, void *basev, void *newv)
@@ -250,12 +251,15 @@
 #ifdef RLIMIT_NPROC    
     if (new->limit_nproc) {
         conf->limit_nproc = new->limit_nproc;
     }
 #endif
 
+    if (new->limit_req_body) {
+        conf->limit_req_body = new->limit_req_body;
+    }
     conf->sec = ap_append_arrays(a, base->sec, new->sec);
 
     if (new->satisfy != SATISFY_NOSPEC) {
         conf->satisfy = new->satisfy;
     }
     return (void*)conf;
@@ -264,12 +268,15 @@
 static void *create_core_server_config(pool *a, server_rec *s)
 {
     core_server_config *conf;
     int is_virtual = s->is_virtual;
   
     conf = (core_server_config *)ap_pcalloc(a, sizeof(core_server_config));
+#ifdef GPROF
+    conf->gprof_dir = NULL;
+#endif
     conf->access_name = is_virtual ? NULL : DEFAULT_ACCESS_FNAME;
     conf->ap_document_root = is_virtual ? NULL : DOCUMENT_LOCATION;
     conf->sec = ap_make_array(a, 40, sizeof(void *));
     conf->sec_url = ap_make_array(a, 40, sizeof(void *));
     
     return (void *)conf;
@@ -329,13 +336,13 @@
  * followed by the "special" sections.  A section is "special" if it's a regex,
  * or if it doesn't start with / -- consider proxy: matching.  All movements
  * are in-order to preserve the ordering of the sections from the config files.
  * See directory_walk().
  */
 
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
 #define IS_SPECIAL(entry_core)	\
     ((entry_core)->r != NULL \
 	|| ((entry_core)->d[0] != '/' && (entry_core)->d[1] != ':'))
 #else
 #define IS_SPECIAL(entry_core)	\
     ((entry_core)->r != NULL || (entry_core)->d[0] != '/')
@@ -552,15 +559,13 @@
 API_EXPORT(const char *) ap_get_remote_host(conn_rec *conn, void *dir_config,
 					    int type)
 {
     struct in_addr *iaddr;
     struct hostent *hptr;
     int hostname_lookups;
-#ifdef STATUS
     int old_stat = SERVER_DEAD;	/* we shouldn't ever be in this state */
-#endif
 
     /* If we haven't checked the host name, and we want to */
     if (dir_config) {
 	hostname_lookups =
 	    ((core_dir_config *)ap_get_module_config(dir_config, &core_module))
 		->hostname_lookups;
@@ -574,16 +579,14 @@
     }
 
     if (type != REMOTE_NOLOOKUP
 	&& conn->remote_host == NULL
 	&& (type == REMOTE_DOUBLE_REV
 	    || hostname_lookups != HOSTNAME_LOOKUP_OFF)) {
-#ifdef STATUS
 	old_stat = ap_update_child_status(conn->child_num, SERVER_BUSY_DNS,
 					  (request_rec*)NULL);
-#endif /* STATUS */
 	iaddr = &(conn->remote_addr.sin_addr);
 	hptr = gethostbyaddr((char *)iaddr, sizeof(struct in_addr), AF_INET);
 	if (hptr != NULL) {
 	    conn->remote_host = ap_pstrdup(conn->pool, (void *)hptr->h_name);
 	    ap_str_tolower(conn->remote_host);
 	   
@@ -602,18 +605,16 @@
     if (type == REMOTE_DOUBLE_REV) {
 	do_double_reverse(conn);
 	if (conn->double_reverse == -1) {
 	    return NULL;
 	}
     }
-#ifdef STATUS
     if (old_stat != SERVER_DEAD) {
 	(void)ap_update_child_status(conn->child_num, old_stat,
 				     (request_rec*)NULL);
     }
-#endif /* STATUS */
 
 /*
  * Return the desired information; either the remote DNS name, if found,
  * or either NULL (if the hostname was requested) or the IP address
  * (if any identifier was requested).
  */
@@ -711,12 +712,20 @@
     if (ap_is_default_port(port, r)) {
 	return ap_pstrcat(p, ap_http_method(r), "://", host, uri, NULL);
     }
     return ap_psprintf(p, "%s://%s:%u%s", ap_http_method(r), host, port, uri);
 }
 
+API_EXPORT(unsigned long) ap_get_limit_req_body(const request_rec *r)
+{
+    core_dir_config *d =
+      (core_dir_config *)ap_get_module_config(r->per_dir_config, &core_module);
+    
+    return d->limit_req_body;
+}
+
 /*****************************************************************
  *
  * Commands... this module handles almost all of the NCSA httpd.conf
  * commands, but most of the old srm.conf is in the the modules.
  */
 
@@ -784,12 +793,29 @@
     }
 
     conf->access_name = ap_pstrdup(cmd->pool, arg);
     return NULL;
 }
 
+#ifdef GPROF
+static const char *set_gprof_dir(cmd_parms *cmd, void *dummy, char *arg)
+{
+    void *sconf = cmd->server->module_config;
+    core_server_config *conf = ap_get_module_config(sconf, &core_module);
+
+    const char *err = ap_check_cmd_context(cmd,
+					   NOT_IN_DIR_LOC_FILE|NOT_IN_LIMIT);
+    if (err != NULL) {
+        return err;
+    }
+
+    conf->gprof_dir = ap_pstrdup(cmd->pool, arg);
+    return NULL;
+}
+#endif /*GPROF*/
+
 static const char *set_document_root(cmd_parms *cmd, void *dummy, char *arg)
 {
     void *sconf = cmd->server->module_config;
     core_server_config *conf = ap_get_module_config(sconf, &core_module);
   
     const char *err = ap_check_cmd_context(cmd,
@@ -810,12 +836,32 @@
     }
     
     conf->ap_document_root = arg;
     return NULL;
 }
 
+API_EXPORT(void) ap_custom_response(request_rec *r, int status, char *string)
+{
+    core_dir_config *conf = 
+	ap_get_module_config(r->per_dir_config, &core_module);
+    int idx;
+
+    if(conf->response_code_strings == NULL) {
+        conf->response_code_strings = 
+	    ap_pcalloc(r->pool,
+		    sizeof(*conf->response_code_strings) * 
+		    RESPONSE_CODES);
+    }
+
+    idx = ap_index_of_response(status);
+
+    conf->response_code_strings[idx] = 
+       ((ap_is_url(string) || (*string == '/')) && (*string != '"')) ? 
+       ap_pstrdup(r->pool, string) : ap_pstrcat(r->pool, "\"", string, NULL);
+}
+
 static const char *set_error_document(cmd_parms *cmd, core_dir_config *conf,
 				      char *line)
 {
     int error_number, index_number, idx500;
     char *w;
                 
@@ -1085,17 +1131,23 @@
 #endif
 
 static const char *end_nested_section(cmd_parms *cmd, void *dummy)
 {
     if (cmd->end_token == NULL) {
 	return ap_pstrcat(cmd->pool, cmd->cmd->name,
-	    " without matching <", cmd->cmd->name + 2, " section", NULL);
+			  " without matching <", cmd->cmd->name + 2, 
+			  " section", NULL);
     }
+    /*
+     * This '!=' may look weird on a string comparison, but it's correct --
+     * it's been set up so that checking for two pointers to the same datum
+     * is valid here.  And faster.
+     */
     if (cmd->cmd->name != cmd->end_token) {
 	return ap_pstrcat(cmd->pool, "Expected ", cmd->end_token, " but saw ",
-	    cmd->cmd->name, NULL);
+			  cmd->cmd->name, NULL);
     }
     return cmd->end_token;
 }
 
 static const char *dirsection(cmd_parms *cmd, void *dummy, const char *arg)
 {
@@ -1117,13 +1169,13 @@
 
     if (endp) {
         *endp = '\0';
     }
 
     cmd->path = ap_getword_conf(cmd->pool, &arg);
-#ifdef __EMX__
+#ifdef OS2
     /* Fix OS/2 HPFS filename case problem. */
     cmd->path = strlwr(cmd->path);
 #endif    
     cmd->override = OR_ALL|ACCESS_CONF;
 
     if (thiscmd->cmd_data) { /* <DirectoryMatch> */
@@ -1630,13 +1682,13 @@
 	    cmd->server->server_uid = ap_user_id;
 	    fprintf(stderr,
 		    "Warning: User directive in <VirtualHost> "
 		    "requires SUEXEC wrapper.\n");
 	}
     }
-#if !defined (BIG_SECURITY_HOLE) && !defined (__EMX__)
+#if !defined (BIG_SECURITY_HOLE) && !defined (OS2)
     if (cmd->server->server_uid == 0) {
 	fprintf(stderr,
 		"Error:\tApache has not been designed to serve pages while\n"
 		"\trunning as root.  There are known race conditions that\n"
 		"\twill allow any local user to read any file on the system.\n"
 		"\tShould you still desire to serve pages as root then\n"
@@ -1908,13 +1960,13 @@
     ap_daemons_limit = atoi(arg);
     if (ap_daemons_limit > HARD_SERVER_LIMIT) {
        fprintf(stderr, "WARNING: MaxClients of %d exceeds compile time limit "
            "of %d servers,\n", ap_daemons_limit, HARD_SERVER_LIMIT);
        fprintf(stderr, " lowering MaxClients to %d.  To increase, please "
            "see the\n", HARD_SERVER_LIMIT);
-       fprintf(stderr, " HARD_SERVER_LIMIT define in src/httpd.h.\n");
+       fprintf(stderr, " HARD_SERVER_LIMIT define in src/include/httpd.h.\n");
        ap_daemons_limit = HARD_SERVER_LIMIT;
     } 
     else if (ap_daemons_limit < 1) {
 	fprintf(stderr, "WARNING: Require MaxClients > 0, setting to 1\n");
 	ap_daemons_limit = 1;
     }
@@ -1936,17 +1988,24 @@
     const char *err = ap_check_cmd_context(cmd, GLOBAL_ONLY);
     if (err != NULL) {
         return err;
     }
 
     ap_threads_per_child = atoi(arg);
-#ifdef WIN32
-    if (ap_threads_per_child > 64) {
-	return "Can't have more than 64 threads in Windows (for now)";
+    if (ap_threads_per_child > HARD_SERVER_LIMIT) {
+        fprintf(stderr, "WARNING: ThreadsPerChild of %d exceeds compile time limit "
+                "of %d threads,\n", ap_threads_per_child, HARD_SERVER_LIMIT);
+        fprintf(stderr, " lowering ThreadsPerChild to %d.  To increase, please "
+                "see the\n", HARD_SERVER_LIMIT);
+        fprintf(stderr, " HARD_SERVER_LIMIT define in src/include/httpd.h.\n");
+        ap_threads_per_child = HARD_SERVER_LIMIT;
+    } 
+    else if (ap_threads_per_child < 1) {
+	fprintf(stderr, "WARNING: Require ThreadsPerChild > 0, setting to 1\n");
+	ap_threads_per_child = 1;
     }
-#endif
 
     return NULL;
 }
 
 static const char *set_excess_requests(cmd_parms *cmd, void *dummy, char *arg) 
 {
@@ -2240,20 +2299,20 @@
 
     aconfig->ap_auth_name = ap_escape_quotes(cmd->pool, word1);
     return NULL;
 }
 
 #ifdef _OSD_POSIX /* BS2000 Logon Passwd file */
-static const char *set_bs2000_authfile(cmd_parms *cmd, void *dummy, char *name)
+static const char *set_bs2000_account(cmd_parms *cmd, void *dummy, char *name)
 {
     const char *err = ap_check_cmd_context(cmd, GLOBAL_ONLY);
     if (err != NULL) {
         return err;
     }
 
-    return os_set_authfile(cmd->pool, name);
+    return os_set_account(cmd->pool, name);
 }
 #endif /*_OSD_POSIX*/
 
 /*
  * Handle a request to include the server's OS platform in the Server
  * response header field (the ServerTokens directive).  Unfortunately
@@ -2278,12 +2337,95 @@
     else {
         ap_server_tokens = SrvTk_FULL;
     }
     return NULL;
 }
 
+static const char *set_limit_req_line(cmd_parms *cmd, void *dummy, char *arg)
+{
+    const char *err = ap_check_cmd_context(cmd,
+                                           NOT_IN_DIR_LOC_FILE|NOT_IN_LIMIT);
+    int lim;
+
+    if (err != NULL) {
+        return err;
+    }
+    lim = atoi(arg);
+    if (lim < 0) {
+        return ap_pstrcat(cmd->temp_pool, "LimitRequestLine \"", arg, 
+                          "\" must be a non-negative integer", NULL);
+    }
+    if (lim > DEFAULT_LIMIT_REQUEST_LINE) {
+        return ap_psprintf(cmd->temp_pool, "LimitRequestLine \"%s\" "
+                           "must not exceed the precompiled maximum of %d",
+                           arg, DEFAULT_LIMIT_REQUEST_LINE);
+    }
+    cmd->server->limit_req_line = lim;
+    return NULL;
+}
+
+static const char *set_limit_req_fieldsize(cmd_parms *cmd, void *dummy,
+                                           char *arg)
+{
+    const char *err = ap_check_cmd_context(cmd,
+                                           NOT_IN_DIR_LOC_FILE|NOT_IN_LIMIT);
+    int lim;
+
+    if (err != NULL) {
+        return err;
+    }
+    lim = atoi(arg);
+    if (lim < 0) {
+        return ap_pstrcat(cmd->temp_pool, "LimitRequestFieldsize \"", arg, 
+                          "\" must be a non-negative integer (0 = no limit)",
+                          NULL);
+    }
+    if (lim > DEFAULT_LIMIT_REQUEST_FIELDSIZE) {
+        return ap_psprintf(cmd->temp_pool, "LimitRequestFieldsize \"%s\" "
+                          "must not exceed the precompiled maximum of %d",
+                           arg, DEFAULT_LIMIT_REQUEST_FIELDSIZE);
+    }
+    cmd->server->limit_req_fieldsize = lim;
+    return NULL;
+}
+
+static const char *set_limit_req_fields(cmd_parms *cmd, void *dummy, char *arg)
+{
+    const char *err = ap_check_cmd_context(cmd,
+                                           NOT_IN_DIR_LOC_FILE|NOT_IN_LIMIT);
+    int lim;
+
+    if (err != NULL) {
+        return err;
+    }
+    lim = atoi(arg);
+    if (lim < 0) {
+        return ap_pstrcat(cmd->temp_pool, "LimitRequestFields \"", arg, 
+                          "\" must be a non-negative integer (0 = no limit)",
+                          NULL);
+    }
+    cmd->server->limit_req_fields = lim;
+    return NULL;
+}
+
+static const char *set_limit_req_body(cmd_parms *cmd, core_dir_config *conf,
+                                      char *arg) 
+{
+    const char *err = ap_check_cmd_context(cmd, NOT_IN_LIMIT);
+    if (err != NULL) {
+        return err;
+    }
+
+    /* WTF: If strtoul is not portable, then write a replacement.
+     *      Instead we have an idiotic define in httpd.h that prevents
+     *      it from being used even when it is available. Sheesh.
+     */
+    conf->limit_req_body = (unsigned long)strtol(arg, (char **)NULL, 10);
+    return NULL;
+}
+
 /* Note --- ErrorDocument will now work from .htaccess files.  
  * The AllowOverride of Fileinfo allows webmasters to turn it off
  */
 
 static const command_rec core_cmds[] = {
 
@@ -2309,17 +2451,17 @@
 { end_files_section, end_nested_section, NULL, OR_ALL, NO_ARGS,
   "Marks end of <Files>" },
 { "<Limit", ap_limit_section, NULL, OR_ALL, RAW_ARGS, "Container for "
   "authentication directives when accessed using specified HTTP methods" },
 { "</Limit>", endlimit_section, NULL, OR_ALL, NO_ARGS,
   "Marks end of <Limit>" },
-{ "<IfModule", start_ifmod, NULL, OR_ALL, RAW_ARGS,
+{ "<IfModule", start_ifmod, NULL, OR_ALL, TAKE1,
   "Container for directives based on existance of specified modules" },
 { end_ifmodule_section, end_ifmod, NULL, OR_ALL, NO_ARGS,
   "Marks end of <IfModule>" },
-{ "<IfDefine", start_ifdefine, NULL, OR_ALL, RAW_ARGS,
+{ "<IfDefine", start_ifdefine, NULL, OR_ALL, TAKE1,
   "Container for directives based on existance of command line defines" },
 { end_ifdefine_section, end_ifdefine, NULL, OR_ALL, NO_ARGS,
   "Marks end of <IfDefine>" },
 { "<DirectoryMatch", dirsection, (void*)1, RSRC_CONF, RAW_ARGS,
   "Container for directives affecting resources located in the "
   "specified directories" },
@@ -2340,12 +2482,16 @@
 { "AuthName", set_authname, NULL, OR_AUTHCFG, TAKE1,
   "The authentication realm (e.g. \"Members Only\")" },
 { "Require", require, NULL, OR_AUTHCFG, RAW_ARGS,
   "Selects which authenticated users or groups may access a protected space" },
 { "Satisfy", satisfy, NULL, OR_AUTHCFG, TAKE1,
   "access policy if both allow and require used ('all' or 'any')" },    
+#ifdef GPROF
+{ "GprofDir", set_gprof_dir, NULL, RSRC_CONF, TAKE1,
+  "Directory to plop gmon.out files" },
+#endif
 
 /* Old resource config file commands */
   
 { "AccessFileName", set_access_name, NULL, RSRC_CONF, RAW_ARGS,
   "Name(s) of per-directory config files (default: .htaccess)" },
 { "DocumentRoot", set_document_root, NULL, RSRC_CONF, TAKE1,
@@ -2468,24 +2614,34 @@
   "Maximum number of requests a particular child serves after it is ready "
   "to die." },
 { "ListenBacklog", set_listenbacklog, NULL, RSRC_CONF, TAKE1,
   "Maximum length of the queue of pending connections, as used by listen(2)" },
 { "CoreDumpDirectory", set_coredumpdir, NULL, RSRC_CONF, TAKE1,
   "The location of the directory Apache changes to before dumping core" },
-{ "Include", include_config, NULL, RSRC_CONF, TAKE1,
+{ "Include", include_config, NULL, (RSRC_CONF | ACCESS_CONF), TAKE1,
   "Name of the config file to be included" },
 { "LogLevel", set_loglevel, NULL, RSRC_CONF, TAKE1,
   "Level of verbosity in error logging" },
 { "NameVirtualHost", ap_set_name_virtual_host, NULL, RSRC_CONF, TAKE1,
   "A numeric IP address:port, or the name of a host" },
 #ifdef _OSD_POSIX
-{ "BS2000AuthFile", set_bs2000_authfile, NULL, RSRC_CONF, TAKE1,
-  "Name of server User's bs2000 logon password file (read-protected)" },
+{ "BS2000Account", set_bs2000_account, NULL, RSRC_CONF, TAKE1,
+  "Name of server User's bs2000 logon account name" },
 #endif
 { "ServerTokens", set_serv_tokens, NULL, RSRC_CONF, TAKE1,
   "Determine tokens displayed in the Server: header - Min(imal), OS or Full" },
+{ "LimitRequestLine", set_limit_req_line, NULL, RSRC_CONF, TAKE1,
+  "Limit on maximum size of an HTTP request line"},
+{ "LimitRequestFieldsize", set_limit_req_fieldsize, NULL, RSRC_CONF, TAKE1,
+  "Limit on maximum size of an HTTP request header field"},
+{ "LimitRequestFields", set_limit_req_fields, NULL, RSRC_CONF, TAKE1,
+  "Limit (0 = unlimited) on max number of header fields in a request message"},
+{ "LimitRequestBody", set_limit_req_body,
+  (void*)XtOffsetOf(core_dir_config, limit_req_body),
+  RSRC_CONF|ACCESS_CONF|OR_ALL, TAKE1,
+  "Limit (in bytes) on maximum size of request message body" },
 { NULL },
 };
 
 /*****************************************************************
  *
  * Core handlers for various phases of server operation...
@@ -2497,13 +2653,13 @@
     core_server_config *conf = ap_get_module_config(sconf, &core_module);
   
     if (r->proxyreq) {
         return HTTP_FORBIDDEN;
     }
     if ((r->uri[0] != '/') && strcmp(r->uri, "*")) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		     "Invalid URI in request %s", r->the_request);
 	return BAD_REQUEST;
     }
     
     if (r->server->path 
 	&& !strncmp(r->uri, r->server->path, r->server->pathlen)
@@ -2562,44 +2718,50 @@
         return errstatus;
     }
 
     r->allowed |= (1 << M_GET) | (1 << M_OPTIONS);
 
     if (r->method_number == M_INVALID) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "Invalid method in request %s", r->the_request);
 	return NOT_IMPLEMENTED;
     }
     if (r->method_number == M_OPTIONS) {
         return ap_send_http_options(r);
     }
     if (r->method_number == M_PUT) {
         return METHOD_NOT_ALLOWED;
     }
 
     if (r->finfo.st_mode == 0 || (r->path_info && *r->path_info)) {
-	ap_log_error(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r->server, 
-                    "File does not exist: %s", 
-		     r->path_info 
-		         ? ap_pstrcat(r->pool, r->filename, r->path_info, NULL)
-		         : r->filename);
-	return NOT_FOUND;
+	char *emsg;
+
+	emsg = "File does not exist: ";
+	if (r->path_info == NULL) {
+	    emsg = ap_pstrcat(r->pool, emsg, r->filename, NULL);
+	}
+	else {
+	    emsg = ap_pstrcat(r->pool, emsg, r->filename, r->path_info, NULL);
+	}
+	ap_log_rerror(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r, emsg);
+	ap_table_setn(r->notes, "error-notes", emsg);
+	return HTTP_NOT_FOUND;
     }
     if (r->method_number != M_GET) {
         return METHOD_NOT_ALLOWED;
     }
 	
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
     /* Need binary mode for OS/2 */
     f = ap_pfopen(r->pool, r->filename, "rb");
 #else
     f = ap_pfopen(r->pool, r->filename, "r");
 #endif
 
     if (f == NULL) {
-        ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		     "file permissions deny server access: %s", r->filename);
         return FORBIDDEN;
     }
 	
     ap_update_mtime(r, r->finfo.st_mtime);
     ap_set_last_modified(r);
@@ -2616,13 +2778,13 @@
 	&& (!r->header_only || (d->content_md5 & 1))) {
 	/* we need to protect ourselves in case we die while we've got the
  	 * file mmapped */
 	mm = mmap(NULL, r->finfo.st_size, PROT_READ, MAP_PRIVATE,
 		  fileno(f), 0);
 	if (mm == (caddr_t)-1) {
-	    ap_log_error(APLOG_MARK, APLOG_CRIT, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_CRIT, r,
 			 "default_handler: mmap failed: %s", r->filename);
 	}
     }
     else {
 	mm = (caddr_t)-1;
     }
diff -BEr -U 6 apache_1.3.1/src/main/http_log.c apache_1.3.2/src/main/http_log.c
--- apache_1.3.1/src/main/http_log.c	1998-06-05 04:13:19.000000000 +0800
+++ apache_1.3.2/src/main/http_log.c	1998-09-22 01:29:45.000000000 +0800
@@ -167,13 +167,13 @@
     /* No concept of a child process on Win32 */
     signal (SIGHUP, SIG_IGN);
 #endif /* ndef SIGHUP */
 #if defined(WIN32)
     child_pid = spawnl (_P_NOWAIT, SHELL_PATH, SHELL_PATH, "/c", (char *)cmd, NULL);
     return(child_pid);
-#elif defined(__EMX__)
+#elif defined(OS2)
     /* For OS/2 we need to use a '/' */
     execl (SHELL_PATH, SHELL_PATH, "/c", (char *)cmd, NULL);
 #else    
     execl (SHELL_PATH, SHELL_PATH, "-c", (char *)cmd, NULL);
 #endif    
     exit (1);
@@ -272,16 +272,16 @@
 
 API_EXPORT(void) ap_error_log2stderr (server_rec *s) {
     if(fileno(s->error_log) != STDERR_FILENO)
         dup2(fileno(s->error_log),STDERR_FILENO);
 }
 
-API_EXPORT(void) ap_log_error (const char *file, int line, int level,
-			      const server_rec *s, const char *fmt, ...)
+static void log_error_core (const char *file, int line, int level,
+			   const server_rec *s, const request_rec *r,
+			   const char *fmt, va_list args)
 {
-    va_list args;
     char errstr[MAX_STRING_LEN];
     size_t len;
     int save_errno = errno;
     FILE *logf;
 
     if (s == NULL) {
@@ -343,12 +343,21 @@
 	    file = tmp;
 	}
 #endif /*_OSD_POSIX*/
 	len += ap_snprintf(errstr + len, sizeof(errstr) - len,
 		"%s(%d): ", file, line);
     }
+    if (r) {
+	/* XXX: TODO: add a method of selecting whether logged client
+	 * addresses are in dotted quad or resolved form... dotted
+	 * quad is the most secure, which is why I'm implementing it
+	 * first. -djg
+	 */
+	len += ap_snprintf(errstr + len, sizeof(errstr) - len,
+		"[client %s] ", r->connection->remote_ip);
+    }
     if (!(level & APLOG_NOERRNO)
 	&& (save_errno != 0)
 #ifdef WIN32
 	&& !(level & APLOG_WIN32ERROR)
 #endif
 	) {
@@ -396,15 +405,13 @@
 		errstr[len-1] = ' ';
 	    }
 	}
     }
 #endif
 
-    va_start(args, fmt);
     len += ap_vsnprintf(errstr + len, sizeof(errstr) - len, fmt, args);
-    va_end(args);
 
     /* NULL if we are logging to syslog */
     if (logf) {
 	fputs(errstr, logf);
 	fputc('\n', logf);
 	fflush(logf);
@@ -413,47 +420,91 @@
     else {
 	syslog(level & APLOG_LEVELMASK, "%s", errstr);
     }
 #endif
 }
     
+API_EXPORT(void) ap_log_error (const char *file, int line, int level,
+			      const server_rec *s, const char *fmt, ...)
+{
+    va_list args;
+
+    va_start(args, fmt);
+    log_error_core(file, line, level, s, NULL, fmt, args);
+    va_end(args);
+}
+
+API_EXPORT(void) ap_log_rerror(const char *file, int line, int level,
+			       const request_rec *r, const char *fmt, ...)
+{
+    va_list args;
+
+    va_start(args, fmt);
+    log_error_core(file, line, level, r->server, r, fmt, args);
+    if (ap_table_get(r->notes, "error-notes") == NULL) {
+	char errstr[MAX_STRING_LEN];
+
+	ap_vsnprintf(errstr, sizeof(errstr), fmt, args);
+	ap_table_set(r->notes, "error-notes", errstr);
+    }
+    va_end(args);
+}
 
 void ap_log_pid (pool *p, char *fname)
 {
     FILE *pid_file;
+    struct stat finfo;
+    static pid_t saved_pid = -1;
+    pid_t mypid;
 
     if (!fname) return;
+
     fname = ap_server_root_relative (p, fname);
+    mypid = getpid();
+    if (mypid != saved_pid && stat(fname,&finfo) == 0) {
+      /* USR1 and HUP call this on each restart.
+       * Only warn on first time through for this pid.
+       *
+       * XXX: Could just write first time through too, although
+       *      that may screw up scripts written to do something
+       *      based on the last modification time of the pid file.
+       */
+      ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_WARNING, NULL,
+		   ap_psprintf(p,
+			       "pid file %s overwritten -- Unclean shutdown of previous apache run?",
+			       fname)
+		   );
+    }
+
     if(!(pid_file = fopen(fname,"w"))) {
 	perror("fopen");
         fprintf(stderr,"httpd: could not log pid to file %s\n", fname);
         exit(1);
     }
-    fprintf(pid_file,"%ld\n",(long)getpid());
+    fprintf(pid_file,"%ld\n",(long)mypid);
     fclose(pid_file);
+    saved_pid = mypid;
 }
 
 API_EXPORT(void) ap_log_error_old (const char *err, server_rec *s)
 {
-    ap_log_error(APLOG_MARK, APLOG_ERR, s, err);
+    ap_log_error(APLOG_MARK, APLOG_ERR, s, "%s", err);
 }
 
 API_EXPORT(void) ap_log_unixerr (const char *routine, const char *file,
 			      const char *msg, server_rec *s)
 {
-    ap_log_error(file, 0, APLOG_ERR, s, msg);
+    ap_log_error(file, 0, APLOG_ERR, s, "%s", msg);
 }
 
 API_EXPORT(void) ap_log_printf (const server_rec *s, const char *fmt, ...)
 {
-    char buf[MAX_STRING_LEN];
     va_list args;
     
     va_start(args, fmt);
-    ap_vsnprintf(buf, sizeof(buf), fmt, args);
-    ap_log_error(APLOG_MARK, APLOG_ERR, s, buf);
+    log_error_core(APLOG_MARK, APLOG_ERR, s, NULL, fmt, args);
     va_end(args);
 }
 
 API_EXPORT(void) ap_log_reason (const char *reason, const char *file, request_rec *r) 
 {
     ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
@@ -632,13 +683,13 @@
 #ifdef SIGHUP
     signal (SIGHUP, SIG_IGN);
 #endif
 #if defined(WIN32)
     child_pid = spawnl (_P_NOWAIT, SHELL_PATH, SHELL_PATH, "/c", (char *)cmd, NULL);
     return(child_pid);
-#elif defined(__EMX__)
+#elif defined(OS2)
     /* For OS/2 we need to use a '/' */
     execl (SHELL_PATH, SHELL_PATH, "/c", (char *)cmd, NULL);
 #else
     execl (SHELL_PATH, SHELL_PATH, "-c", (char *)cmd, NULL);
 #endif
     perror ("exec");
diff -BEr -U 6 apache_1.3.1/src/main/http_main.c apache_1.3.2/src/main/http_main.c
--- apache_1.3.1/src/main/http_main.c	1998-07-14 17:57:56.000000000 +0800
+++ apache_1.3.2/src/main/http_main.c	1998-09-21 18:16:11.000000000 +0800
@@ -80,12 +80,13 @@
 
 #ifndef SHARED_CORE_BOOTSTRAP
 #ifndef SHARED_CORE_TIESTATIC
 
 #ifdef SHARED_CORE
 #define REALMAIN ap_main
+int ap_main(int argc, char *argv[]);
 #else
 #define REALMAIN main
 #endif
 
 #define CORE_PRIVATE
 
@@ -187,12 +188,13 @@
 #endif
 
 #ifdef USE_OS2_SCOREBOARD
     /* Add MMAP style functionality to OS/2 */
 #define INCL_DOSMEMMGR
 #define INCL_DOSEXCEPTIONS
+#define INCL_DOSSEMAPHORES
 #include <os2.h>
 #include <umalloc.h>
 #include <stdio.h>
 caddr_t create_shared_heap(const char *, size_t);
 caddr_t get_shared_heap(const char *);
 #endif
@@ -243,12 +245,13 @@
 int ap_daemons_max_free;
 int ap_daemons_limit;
 time_t ap_restart_time;
 int ap_suexec_enabled = 0;
 int ap_listenbacklog;
 int ap_dump_settings;
+API_VAR_EXPORT int ap_extended_status = 0;
 
 /*
  * The max child slot ever assigned, preserved across restarts.  Necessary
  * to deal with MaxClients changes across SIGUSR1 restarts.  We use this
  * value to optimize routines that have to scan the entire scoreboard.
  */
@@ -348,22 +351,22 @@
 /* Global, alas, so http_core can talk to us */
 enum server_token_type ap_server_tokens = SrvTk_FULL;
 
 /*
  * This routine is called when the pconf pool is vacuumed.  It resets the
  * server version string to a known value and [re]enables modifications
- * (which are disabled by configuration completion).
+ * (which are disabled by configuration completion). 
  */
 static void reset_version(void *dummy)
 {
     version_locked = 0;
     ap_server_tokens = SrvTk_FULL;
     server_version = NULL;
 }
 
-API_EXPORT(const char *) ap_get_server_version()
+API_EXPORT(const char *) ap_get_server_version(void)
 {
     return (server_version ? server_version : SERVER_BASEVERSION);
 }
 
 API_EXPORT(void) ap_add_version_component(const char *component)
 {
@@ -390,13 +393,13 @@
 }
 
 /*
  * This routine adds the real server base identity to the version string,
  * and then locks out changes until the next reconfig.
  */
-static void ap_set_version()
+static void ap_set_version(void)
 {
     if (ap_server_tokens == SrvTk_MIN) {
 	ap_add_version_component(SERVER_BASEVERSION);
     }
     else {
 	ap_add_version_component(SERVER_BASEVERSION " (" PLATFORM ")");
@@ -409,19 +412,57 @@
 	version_locked++;
     }
 }
 
 static APACHE_TLS int volatile exit_after_unblock = 0;
 
+#ifdef GPROF
+/* 
+ * change directory for gprof to plop the gmon.out file
+ * configure in httpd.conf:
+ * GprofDir logs/   -> $ServerRoot/logs/gmon.out
+ * GprofDir logs/%  -> $ServerRoot/logs/gprof.$pid/gmon.out
+ */
+static void chdir_for_gprof(void)
+{
+    core_server_config *sconf = 
+	ap_get_module_config(server_conf->module_config, &core_module);    
+    char *dir = sconf->gprof_dir;
+
+    if(dir) {
+	char buf[512];
+	int len = strlen(sconf->gprof_dir) - 1;
+	if(*(dir + len) == '%') {
+	    dir[len] = '\0';
+	    ap_snprintf(buf, sizeof(buf), "%sgprof.%d", dir, (int)getpid());
+	} 
+	dir = ap_server_root_relative(pconf, buf[0] ? buf : dir);
+	if(mkdir(dir, 0755) < 0 && errno != EEXIST) {
+	    ap_log_error(APLOG_MARK, APLOG_ERR, server_conf,
+			 "gprof: error creating directory %s", dir);
+	}
+    }
+    else {
+	dir = ap_server_root_relative(pconf, "logs");
+    }
+
+    chdir(dir);
+}
+#else
+#define chdir_for_gprof()
+#endif
+
 /* a clean exit from a child with proper cleanup */
-static void __attribute__((noreturn)) clean_child_exit(int code)
+static void clean_child_exit(int code) __attribute__ ((noreturn));
+static void clean_child_exit(int code)
 {
     if (pchild) {
 	ap_child_exit_modules(pchild, server_conf);
 	ap_destroy_pool(pchild);
     }
+    chdir_for_gprof();
     exit(code);
 }
 
 #if defined(USE_FCNTL_SERIALIZED_ACCEPT) || defined(USE_FLOCK_SERIALIZED_ACCEPT)
 static void expand_lock_fname(pool *p)
 {
@@ -467,13 +508,13 @@
     if ((uslock = usnewlock(us)) == NULL) {
 	perror("usnewlock");
 	exit(-1);
     }
 }
 
-static void accept_mutex_on()
+static void accept_mutex_on(void)
 {
     switch (ussetlock(uslock)) {
     case 1:
 	/* got lock */
 	break;
     case 0:
@@ -482,13 +523,13 @@
     case -1:
 	perror("ussetlock");
 	clean_child_exit(APEXIT_CHILDFATAL);
     }
 }
 
-static void accept_mutex_off()
+static void accept_mutex_off(void)
 {
     if (usunsetlock(uslock) == -1) {
 	perror("usunsetlock");
 	clean_child_exit(APEXIT_CHILDFATAL);
     }
 }
@@ -564,13 +605,13 @@
     sigdelset(&accept_block_mask, SIGHUP);
     sigdelset(&accept_block_mask, SIGTERM);
     sigdelset(&accept_block_mask, SIGUSR1);
     ap_register_cleanup(p, NULL, accept_mutex_cleanup, ap_null_cleanup);
 }
 
-static void accept_mutex_on()
+static void accept_mutex_on(void)
 {
     int err;
 
     if (sigprocmask(SIG_BLOCK, &accept_block_mask, &accept_previous_mask)) {
 	perror("sigprocmask(SIG_BLOCK)");
 	clean_child_exit(APEXIT_CHILDFATAL);
@@ -580,13 +621,13 @@
 	perror("pthread_mutex_lock");
 	clean_child_exit(APEXIT_CHILDFATAL);
     }
     have_accept_mutex = 1;
 }
 
-static void accept_mutex_off()
+static void accept_mutex_off(void)
 {
     int err;
 
     if ((err = pthread_mutex_unlock(accept_mutex))) {
 	errno = err;
 	perror("pthread_mutex_unlock");
@@ -686,21 +727,21 @@
     op_on.sem_flg = SEM_UNDO;
     op_off.sem_num = 0;
     op_off.sem_op = 1;
     op_off.sem_flg = SEM_UNDO;
 }
 
-static void accept_mutex_on()
+static void accept_mutex_on(void)
 {
     if (semop(sem_id, &op_on, 1) < 0) {
 	perror("accept_mutex_on");
 	clean_child_exit(APEXIT_CHILDFATAL);
     }
 }
 
-static void accept_mutex_off()
+static void accept_mutex_off(void)
 {
     if (semop(sem_id, &op_off, 1) < 0) {
 	perror("accept_mutex_off");
 	clean_child_exit(APEXIT_CHILDFATAL);
     }
 }
@@ -835,12 +876,76 @@
 	ap_log_error(APLOG_MARK, APLOG_EMERG, server_conf,
 		    "flock: LOCK_UN: Error freeing accept lock. Exiting!");
 	clean_child_exit(APEXIT_CHILDFATAL);
     }
 }
 
+#elif defined(USE_OS2SEM_SERIALIZED_ACCEPT)
+
+static HMTX lock_sem = -1;
+
+static void accept_mutex_cleanup(void *foo)
+{
+    DosReleaseMutexSem(lock_sem);
+    DosCloseMutexSem(lock_sem);
+}
+
+/*
+ * Initialize mutex lock.
+ * Done by each child at it's birth
+ */
+static void accept_mutex_child_init(pool *p)
+{
+    int rc = DosOpenMutexSem(NULL, &lock_sem);
+
+    if (rc != 0) {
+	ap_log_error(APLOG_MARK, APLOG_EMERG, server_conf,
+		    "Child cannot open lock semaphore");
+	clean_child_exit(APEXIT_CHILDINIT);
+    }
+}
+
+/*
+ * Initialize mutex lock.
+ * Must be safe to call this on a restart.
+ */
+static void accept_mutex_init(pool *p)
+{
+    int rc = DosCreateMutexSem(NULL, &lock_sem, DC_SEM_SHARED, FALSE);
+
+    if (rc != 0) {
+	ap_log_error(APLOG_MARK, APLOG_EMERG, server_conf,
+		    "Parent cannot create lock semaphore");
+	exit(APEXIT_INIT);
+    }
+
+    ap_register_cleanup(p, NULL, accept_mutex_cleanup, ap_null_cleanup);
+}
+
+static void accept_mutex_on(void)
+{
+    int rc = DosRequestMutexSem(lock_sem, SEM_INDEFINITE_WAIT);
+
+    if (rc != 0) {
+	ap_log_error(APLOG_MARK, APLOG_EMERG, server_conf,
+		    "OS2SEM: Error %d getting accept lock. Exiting!", rc);
+	clean_child_exit(APEXIT_CHILDFATAL);
+    }
+}
+
+static void accept_mutex_off(void)
+{
+    int rc = DosReleaseMutexSem(lock_sem);
+    
+    if (rc != 0) {
+	ap_log_error(APLOG_MARK, APLOG_EMERG, server_conf,
+		    "OS2SEM: Error %d freeing accept lock. Exiting!", rc);
+	clean_child_exit(APEXIT_CHILDFATAL);
+    }
+}
+
 #else
 /* Default --- no serialization.  Other methods *could* go here,
  * as #elifs...
  */
 #if !defined(MULTITHREAD)
 /* Multithreaded systems don't complete between processes for
@@ -932,22 +1037,22 @@
     else
 	dirconf = current_conn->server->lookup_defaults;
     if (!current_conn->keptalive) {
 	if (sig == SIGPIPE) {
 	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_INFO,
 			current_conn->server,
-			"%s client stopped connection before %s completed",
-			ap_get_remote_host(current_conn, dirconf, REMOTE_NAME),
+			"(client %s) stopped connection before %s completed",
+			current_conn->remote_ip,
 			timeout_name ? timeout_name : "request");
 	}
 	else {
 	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_INFO,
 			current_conn->server,
-			"%s timed out for %s",
-			timeout_name ? timeout_name : "request",
-			ap_get_remote_host(current_conn, dirconf, REMOTE_NAME));
+			"(client %s) %s timed out",
+			current_conn->remote_ip,
+			timeout_name ? timeout_name : "request");
 	}
     }
 
     if (timeout_req) {
 	/* Someone has asked for this transaction to just be aborted
 	 * if it times out...
@@ -990,18 +1095,18 @@
 /*
  * These two called from alloc.c to protect its critical sections...
  * Note that they can nest (as when destroying the sub_pools of a pool
  * which is itself being cleared); we have to support that here.
  */
 
-API_EXPORT(void) ap_block_alarms()
+API_EXPORT(void) ap_block_alarms(void)
 {
     ++alarms_blocked;
 }
 
-API_EXPORT(void) ap_unblock_alarms()
+API_EXPORT(void) ap_unblock_alarms(void)
 {
     --alarms_blocked;
     if (alarms_blocked == 0) {
 	if (exit_after_unblock) {
 	    /* We have a couple race conditions to deal with here, we can't
 	     * allow a timeout that comes in this small interval to allow
@@ -1433,20 +1538,20 @@
 {
     ap_assert(!ap_scoreboard_image);
     ap_scoreboard_image = (scoreboard *) malloc(SCOREBOARD_SIZE);
     memset(ap_scoreboard_image, 0, SCOREBOARD_SIZE);
 }
 
-void cleanup_scoreboard()
+void cleanup_scoreboard(void)
 {
     ap_assert(ap_scoreboard_image);
     free(ap_scoreboard_image);
     ap_scoreboard_image = NULL;
 }
 
-API_EXPORT(void) ap_sync_scoreboard_image()
+API_EXPORT(void) ap_sync_scoreboard_image(void)
 {
 }
 
 
 #else /* MULTITHREAD */
 #if defined(USE_OS2_SCOREBOARD)
@@ -1619,12 +1724,31 @@
     {
 	unsigned len = SCOREBOARD_SIZE;
 
 	m = mmap((caddr_t) 0xC0000000, &len,
 		 PROT_READ | PROT_WRITE, MAP_ANON | MAP_SHARED, NOFD, 0);
     }
+#elif defined(MAP_TMPFILE)
+    {
+	char mfile[] = "/tmp/apache_shmem_XXXX";
+	int fd = mkstemp(mfile);
+	if (fd == -1) {
+	    perror("open");
+	    fprintf(stderr, "httpd: Could not open %s\n", mfile);
+	    exit(APEXIT_INIT);
+	}
+	m = mmap((caddr_t) 0, SCOREBOARD_SIZE,
+		PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);
+	if (m == (caddr_t) - 1) {
+	    perror("mmap");
+	    fprintf(stderr, "httpd: Could not mmap %s\n", mfile);
+	    exit(APEXIT_INIT);
+	}
+	close(fd);
+	unlink(mfile);
+    }
 #else
     m = mmap((caddr_t) 0, SCOREBOARD_SIZE,
 	     PROT_READ | PROT_WRITE, MAP_ANON | MAP_SHARED, -1, 0);
 #endif
     if (m == (caddr_t) - 1) {
 	perror("mmap");
@@ -1870,13 +1994,14 @@
     lseek(scoreboard_fd, (long) child_num * sizeof(short_score), 0);
     force_write(scoreboard_fd, new_score_rec, sizeof(short_score));
 #endif
 }
 
 /* a clean exit from the parent with proper cleanup */
-static void __attribute__((noreturn)) clean_parent_exit(int code)
+static void clean_parent_exit(int code) __attribute__((noreturn));
+static void clean_parent_exit(int code)
 {
     /* Clear the pool - including any registered cleanups */
     ap_destroy_pool(pconf);
     exit(code);
 }
 
@@ -1893,46 +2018,45 @@
     old_status = ss->status;
     ss->status = status;
 #ifdef OPTIMIZE_TIMEOUTS
     ++ss->cur_vtime;
 #endif
 
-#if defined(STATUS)
+    if (ap_extended_status) {
 #ifndef OPTIMIZE_TIMEOUTS
-    ss->last_used = time(NULL);
+	ss->last_used = time(NULL);
 #endif
-    if (status == SERVER_READY || status == SERVER_DEAD) {
-	/*
-	 * Reset individual counters
-	 */
-	if (status == SERVER_DEAD) {
-	    ss->my_access_count = 0L;
-	    ss->my_bytes_served = 0L;
-	}
-	ss->conn_count = (unsigned short) 0;
-	ss->conn_bytes = (unsigned long) 0;
-    }
-    if (r) {
-	conn_rec *c = r->connection;
-	ap_cpystrn(ss->client, ap_get_remote_host(c, r->per_dir_config,
-			      REMOTE_NOLOOKUP), sizeof(ss->client));
-    if (r->the_request == NULL) {
-		ap_cpystrn(ss->request, "NULL", sizeof(ss->request));
-	} else if (r->parsed_uri.password == NULL) {
-		ap_cpystrn(ss->request, r->the_request, sizeof(ss->request));
-	} else {
-	    /* Don't reveal the password in the server-status view */
-		ap_cpystrn(ss->request, ap_pstrcat(r->pool, r->method, " ",
-					   ap_unparse_uri_components(r->pool, &r->parsed_uri, UNP_OMITPASSWORD),
-					   r->assbackwards ? NULL : " ", r->protocol, NULL),
-				   sizeof(ss->request));
+	if (status == SERVER_READY || status == SERVER_DEAD) {
+	    /*
+	     * Reset individual counters
+	     */
+	    if (status == SERVER_DEAD) {
+		ss->my_access_count = 0L;
+		ss->my_bytes_served = 0L;
+	    }
+	    ss->conn_count = (unsigned short) 0;
+	    ss->conn_bytes = (unsigned long) 0;
+	}
+	if (r) {
+	    conn_rec *c = r->connection;
+	    ap_cpystrn(ss->client, ap_get_remote_host(c, r->per_dir_config,
+				  REMOTE_NOLOOKUP), sizeof(ss->client));
+	    if (r->the_request == NULL) {
+		    ap_cpystrn(ss->request, "NULL", sizeof(ss->request));
+	    } else if (r->parsed_uri.password == NULL) {
+		    ap_cpystrn(ss->request, r->the_request, sizeof(ss->request));
+	    } else {
+		/* Don't reveal the password in the server-status view */
+		    ap_cpystrn(ss->request, ap_pstrcat(r->pool, r->method, " ",
+					       ap_unparse_uri_components(r->pool, &r->parsed_uri, UNP_OMITPASSWORD),
+					       r->assbackwards ? NULL : " ", r->protocol, NULL),
+				       sizeof(ss->request));
+	    }
+	    ap_cpystrn(ss->vhost, r->server->server_hostname, sizeof(ss->vhost));
 	}
-	ap_cpystrn(ss->vhost, r->server->server_hostname, sizeof(ss->vhost));
     }
-#endif
-
     put_scoreboard_info(child_num, ss);
 
     return old_status;
 }
 
 static void update_scoreboard_global(void)
@@ -1942,13 +2066,12 @@
 	  (char *) &ap_scoreboard_image->global -(char *) ap_scoreboard_image, 0);
     force_write(scoreboard_fd, &ap_scoreboard_image->global,
 		sizeof ap_scoreboard_image->global);
 #endif
 }
 
-#if defined(STATUS)
 void ap_time_process_request(int child_num, int status)
 {
     short_score *ss;
 #if defined(NO_GETTIMEOFDAY) && !defined(NO_TIMES)
     struct tms tms_blk;
 #endif
@@ -2011,15 +2134,12 @@
     ss->my_bytes_served += (unsigned long) bs;
     ss->conn_bytes += (unsigned long) bs;
 
     put_scoreboard_info(child_num, ss);
 }
 
-#endif
-
-
 static int find_child_by_pid(int pid)
 {
     int i;
 
     for (i = 0; i < max_daemons_limit; ++i)
 	if (ap_scoreboard_image->parent[i].pid == pid)
@@ -2629,13 +2749,13 @@
 static void detach(void)
 {
 #if !defined(WIN32)
     int x;
 
     chdir("/");
-#if !defined(MPE) && !defined(__EMX__)
+#if !defined(MPE) && !defined(OS2)
 /* Don't detach for MPE because child processes can't survive the death of
    the parent. */
     if ((x = fork()) > 0)
 	exit(0);
     else if (x == -1) {
 	perror("fork");
@@ -2653,13 +2773,13 @@
 #elif defined(NEXT) || defined(NEWSOS)
     if (setpgrp(0, getpid()) == -1 || (pgrp = getpgrp(0)) == -1) {
 	perror("setpgrp");
 	fprintf(stderr, "httpd: setpgrp or getpgrp failed\n");
 	exit(1);
     }
-#elif defined(__EMX__)
+#elif defined(OS2)
     /* OS/2 don't support process group IDs */
     pgrp = getpid();
 #elif defined(MPE)
     /* MPE uses negative pid for process group */
     pgrp = -getpid();
 #else
@@ -2720,13 +2840,13 @@
 
 	    name = ent->pw_name;
 	}
 	else
 	    name = ap_user_name;
 
-#ifndef __EMX__
+#ifndef OS2
 	/* OS/2 dosen't support groups. */
 
 	/* Reset `groups' attributes. */
 
 	if (initgroups(name, ap_group_id) == -1) {
 	    ap_log_error(APLOG_MARK, APLOG_ALERT, server_conf,
@@ -3160,23 +3280,21 @@
 #endif
 
 static void show_compile_settings(void)
 {
     printf("Server version: %s\n", ap_get_server_version());
     printf("Server built:   %s\n", ap_get_server_built());
-    printf("Server's Module Magic Number: %u\n", MODULE_MAGIC_NUMBER);
+    printf("Server's Module Magic Number: %u:%u\n",
+	   MODULE_MAGIC_NUMBER_MAJOR, MODULE_MAGIC_NUMBER_MINOR);
     printf("Server compiled with....\n");
 #ifdef BIG_SECURITY_HOLE
     printf(" -D BIG_SECURITY_HOLE\n");
 #endif
 #ifdef SECURITY_HOLE_PASS_AUTHORIZATION
     printf(" -D SECURITY_HOLE_PASS_AUTHORIZATION\n");
 #endif
-#ifdef HTTPD_ROOT
-    printf(" -D HTTPD_ROOT=\"" HTTPD_ROOT "\"\n");
-#endif
 #ifdef HAVE_MMAP
     printf(" -D HAVE_MMAP\n");
 #endif
 #ifdef HAVE_SHMGET
     printf(" -D HAVE_SHMGET\n");
 #endif
@@ -3243,12 +3361,50 @@
 #ifdef NEED_HASHBANG_EMUL
     printf(" -D NEED_HASHBANG_EMUL\n");
 #endif
 #ifdef SHARED_CORE
     printf(" -D SHARED_CORE\n");
 #endif
+
+/* This list displays the compiled-in default paths: */
+#ifdef HTTPD_ROOT
+    printf(" -D HTTPD_ROOT=\"" HTTPD_ROOT "\"\n");
+#endif
+#ifdef SUEXEC_BIN
+    printf(" -D SUEXEC_BIN=\"" SUEXEC_BIN "\"\n");
+#endif
+#ifdef SHARED_CORE_DIR
+    printf(" -D SHARED_CORE_DIR=\"" SHARED_CORE_DIR "\"\n");
+#endif
+#ifdef DEFAULT_PIDLOG
+    printf(" -D DEFAULT_PIDLOG=\"" DEFAULT_PIDLOG "\"\n");
+#endif
+#ifdef DEFAULT_SCOREBOARD
+    printf(" -D DEFAULT_SCOREBOARD=\"" DEFAULT_SCOREBOARD "\"\n");
+#endif
+#ifdef DEFAULT_LOCKFILE
+    printf(" -D DEFAULT_LOCKFILE=\"" DEFAULT_LOCKFILE "\"\n");
+#endif
+#ifdef DEFAULT_XFERLOG
+    printf(" -D DEFAULT_XFERLOG=\"" DEFAULT_XFERLOG "\"\n");
+#endif
+#ifdef DEFAULT_ERRORLOG
+    printf(" -D DEFAULT_ERRORLOG=\"" DEFAULT_ERRORLOG "\"\n");
+#endif
+#ifdef TYPES_CONFIG_FILE
+    printf(" -D TYPES_CONFIG_FILE=\"" TYPES_CONFIG_FILE "\"\n");
+#endif
+#ifdef SERVER_CONFIG_FILE
+    printf(" -D SERVER_CONFIG_FILE=\"" SERVER_CONFIG_FILE "\"\n");
+#endif
+#ifdef ACCESS_CONFIG_FILE
+    printf(" -D ACCESS_CONFIG_FILE=\"" ACCESS_CONFIG_FILE "\"\n");
+#endif
+#ifdef RESOURCE_CONFIG_FILE
+    printf(" -D RESOURCE_CONFIG_FILE=\"" RESOURCE_CONFIG_FILE "\"\n");
+#endif
 }
 
 
 /* Some init code that's common between win32 and unix... well actually
  * some of it is #ifdef'd but was duplicated before anyhow.  This stuff
  * is still a mess.
@@ -3365,21 +3521,21 @@
 
     /*
      * Setup the jump buffers so that we can return here after
      * a signal or a timeout (yeah, I know, same thing).
      */
     ap_setjmp(jmpbuffer);
-#ifndef __EMX__
+#ifndef OS2
 #ifdef SIGURG
     signal(SIGURG, timeout);
 #endif
 #endif
     signal(SIGPIPE, timeout);
     signal(SIGALRM, alrm_handler);
 
-#ifdef __EMX__
+#ifdef OS2
 /* Stop Ctrl-C/Ctrl-Break signals going to child processes */
     {
         unsigned long ulTimes;
         DosSetSignalExceptionFocus(0, &ulTimes);
     }
 #endif
@@ -3632,17 +3788,19 @@
 	    /* read_request_line has already done a
 	     * signal (SIGUSR1, SIG_IGN);
 	     */
 
 	    (void) ap_update_child_status(my_child_num, SERVER_BUSY_WRITE, r);
 
-	    ap_process_request(r);
+	    /* process the request if it was read without error */
 
-#if defined(STATUS)
-	    increment_counts(my_child_num, r);
-#endif
+	    if (r->status == HTTP_OK)
+		ap_process_request(r);
+
+	    if(ap_extended_status)
+		increment_counts(my_child_num, r);
 
 	    if (!current_conn->keepalive || current_conn->aborted)
 		break;
 
 	    ap_destroy_pool(r->pool);
 	    (void) ap_update_child_status(my_child_num, SERVER_BUSY_KEEPALIVE,
@@ -3989,13 +4147,13 @@
 #define STANDALONE_MAIN standalone_main
 
 static void standalone_main(int argc, char **argv)
 {
     int remaining_children_to_start;
 
-#ifdef __EMX__
+#ifdef OS2
     printf("%s \n", ap_get_server_version());
 #endif
 
     ap_standalone = 1;
 
     is_graceful = 0;
@@ -4069,18 +4227,18 @@
 	    hold_off_on_exponential_spawning = 10;
 	}
 
 	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_NOTICE, server_conf,
 		    "%s configured -- resuming normal operations",
 		    ap_get_server_version());
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_INFO, server_conf,
-		    "Server built: %s", ap_get_server_built());
 	if (ap_suexec_enabled) {
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_INFO, server_conf,
+	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_NOTICE, server_conf,
 		         "suEXEC mechanism enabled (wrapper: %s)", SUEXEC_BIN);
 	}
+	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_INFO, server_conf,
+		    "Server built: %s", ap_get_server_built());
 	restart_pending = shutdown_pending = 0;
 
 	while (!restart_pending && !shutdown_pending) {
 	    int child_slot;
 	    ap_wait_t status;
 	    int pid = wait_or_timeout(&status);
@@ -4149,15 +4307,26 @@
 	     * Kill child processes, tell them to call child_exit, etc...
 	     */
 	    if (ap_killpg(pgrp, SIGTERM) < 0) {
 		ap_log_error(APLOG_MARK, APLOG_WARNING, server_conf, "killpg SIGTERM");
 	    }
 	    reclaim_child_processes(1);		/* Start with SIGTERM */
+
+	    /* cleanup pid file on normal shutdown */
+	    {
+		const char *pidfile = NULL;
+		pidfile = ap_server_root_relative (pconf, ap_pid_fname);
+		if ( pidfile != NULL && unlink(pidfile) == 0)
+		    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_INFO,
+				 server_conf,
+				 "httpd: removed PID file %s (pid=%ld)",
+				 pidfile, (long)getpid());
+	    }
+
 	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_NOTICE, server_conf,
 			"httpd: caught SIGTERM, shutting down");
-
 	    clean_parent_exit(0);
 	}
 
 	/* we've been told to restart */
 	signal(SIGHUP, SIG_IGN);
 	signal(SIGUSR1, SIG_IGN);
@@ -4399,21 +4568,22 @@
 	cio->fd = fileno(stdout);
 #endif
 	cio->fd_in = fileno(stdin);
 	conn = new_connection(ptrans, server_conf, cio,
 			          (struct sockaddr_in *) &sa_client,
 			          (struct sockaddr_in *) &sa_server, -1);
-	r = ap_read_request(conn);
-	if (r)
-	    ap_process_request(r);	/* else premature EOF (ignore) */
 
-	while (r && conn->keepalive && !conn->aborted) {
-	    ap_destroy_pool(r->pool);
-	    r = ap_read_request(conn);
-	    if (r)
+	while ((r = ap_read_request(conn)) != NULL) {
+
+	    if (r->status == HTTP_OK)
 		ap_process_request(r);
+
+	    if (!conn->keepalive || conn->aborted)
+		break;
+
+	    ap_destroy_pool(r->pool);
 	}
 
 	ap_bclose(cio);
     }
     exit(0);
 }
@@ -4544,13 +4714,13 @@
 	allowed_globals.jobhead = new_job;
     allowed_globals.jobcount++;
     release_semaphore(allowed_globals.jobsemaphore);
     ap_release_mutex(allowed_globals.jobmutex);
 }
 
-int remove_job()
+int remove_job(void)
 {
     joblist *job;
     int sock;
 
 #ifdef UNGRACEFUL_RESTART
     HANDLE hObjects[2];
@@ -4712,17 +4882,17 @@
 	 * until no requests are left or we decide to close.
 	 */
 
 	while ((r = ap_read_request(current_conn)) != NULL) {
 	    (void) ap_update_child_status(child_num, SERVER_BUSY_WRITE, r);
 
-	    ap_process_request(r);
+	    if (r->status == HTTP_OK)
+		ap_process_request(r);
 
-#if defined(STATUS)
-	    increment_counts(child_num, r);
-#endif
+	    if (ap_extended_status)
+		increment_counts(child_num, r);
 
 	    if (!current_conn->keepalive || current_conn->aborted)
 		break;
 
 	    ap_destroy_pool(r->pool);
 	    (void) ap_update_child_status(child_num, SERVER_BUSY_KEEPALIVE,
@@ -4779,25 +4949,64 @@
 
     free_thread(handles[thread_to_clean]);
     for (i = thread_to_clean; i < ((*thread_cnt) - 1); i++)
 	handles[i] = handles[i + 1];
     (*thread_cnt)--;
 }
-
+#ifdef WIN32
+/*
+ * The Win32 call WaitForMultipleObjects will only allow you to wait for 
+ * a maximum of MAXIMUM_WAIT_OBJECTS (current 64).  Since the threading 
+ * model in the multithreaded version of apache wants to use this call, 
+ * we are restricted to a maximum of 64 threads.  This is a simplistic 
+ * routine that will increase this size.
+ */
+DWORD wait_for_many_objects(DWORD nCount, CONST HANDLE *lpHandles, 
+                            DWORD dwSeconds)
+{
+    time_t tStopTime;
+    DWORD dwRet = WAIT_TIMEOUT;
+    DWORD dwIndex=0;
+    BOOL bFirst = TRUE;
+  
+    tStopTime = time(NULL) + dwSeconds;
+  
+    do {
+        if (!bFirst)
+            Sleep(1000);
+        else
+            bFirst = FALSE;
+          
+        for (dwIndex = 0; dwIndex * MAXIMUM_WAIT_OBJECTS < nCount; dwIndex++) {
+            dwRet = WaitForMultipleObjects(
+                        min(MAXIMUM_WAIT_OBJECTS, 
+                            nCount - (dwIndex * MAXIMUM_WAIT_OBJECTS)),
+                        lpHandles + (dwIndex * MAXIMUM_WAIT_OBJECTS), 
+                        0, 0);
+                                           
+            if (dwRet != WAIT_TIMEOUT) {                                          
+              break;
+            }
+        }
+    } while((time(NULL) < tStopTime) && (dwRet == WAIT_TIMEOUT));
+    
+    return dwRet;
+}
+#endif
 /*****************************************************************
  * Executive routines.
  */
 
 extern void main_control_server(void *); /* in hellop.c */
 
 event *exit_event;
 mutex *start_mutex;
 
 #define MAX_SELECT_ERRORS 100
 
-void worker_main()
+void worker_main(void)
 {
     /*
      * I am writing this stuff specifically for NT.
      * have pulled out a lot of the restart and
      * graceful restart stuff, because that is only
      * useful on Unix (not sure it even makes sense
@@ -4934,13 +5143,13 @@
 	    if (rv == WAIT_OBJECT_0) {
 		APD1("child: exit event signalled, exiting");
 		start_exit = 1;
 		/* Lets not break yet - we may have threads to clean up */
 		/* break;*/
 	    }
-	    rv = WaitForMultipleObjects(nthreads, child_handles, 0, 0);
+	    rv = wait_for_many_objects(nthreads, child_handles, 0);
 	    ap_assert(rv != WAIT_FAILED);
 	    if (rv != WAIT_TIMEOUT) {
 		rv = rv - WAIT_OBJECT_0;
 		ap_assert((rv >= 0) && (rv < nthreads));
 		cleanup_thread(child_handles, &nthreads, rv);
 		break;
@@ -5045,13 +5254,14 @@
 #endif
 
     APD2("process PID %d waiting for worker threads to exit", my_pid);
     /* Wait for all your children */
     end_time = time(NULL) + 180;
     while (nthreads) {
-	rv = WaitForMultipleObjects(nthreads, child_handles, 0, (end_time - time(NULL)) * 1000);
+        rv = wait_for_many_objects(nthreads, child_handles, 
+                                   end_time - time(NULL));
 	if (rv != WAIT_TIMEOUT) {
 	    rv = rv - WAIT_OBJECT_0;
 	    ap_assert((rv >= 0) && (rv < nthreads));
 	    cleanup_thread(child_handles, &nthreads, rv);
 	    continue;
 	}
@@ -5368,12 +5578,23 @@
 	ap_log_error(APLOG_MARK,APLOG_ERR|APLOG_NOERRNO, server_conf,
  	    "forcing termination of child #%d (handle %d)", i, process_handles[i]);
 	TerminateProcess((HANDLE) process_handles[i], 1);
     }
     service_set_status(SERVICE_STOPPED);
 
+    /* cleanup pid file on normal shutdown */
+    {
+	const char *pidfile = NULL;
+	pidfile = ap_server_root_relative (pparent, ap_pid_fname);
+	if ( pidfile != NULL && unlink(pidfile) == 0)
+	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_INFO,
+			 server_conf,
+			 "httpd: removed PID file %s (pid=%ld)",
+			 pidfile, (long)getpid());
+    }
+
     if (pparent) {
 	ap_destroy_pool(pparent);
     }
 
     ap_destroy_mutex(start_mutex);
     return (0);
@@ -5504,13 +5725,13 @@
     ap_init_modules(pconf, server_conf);
     ap_suexec_enabled = init_suexec();
     version_locked++;
     ap_open_logs(server_conf, pconf);
     set_group_privs();
 
-#ifdef __EMX__
+#ifdef OS2
     printf("%s \n", ap_get_server_version());
 #endif
 #ifdef WIN32
     if (!child) {
 	printf("%s \n", ap_get_server_version());
     }
@@ -5551,15 +5772,16 @@
 **  It's purpose is to tie the static libraries and 
 **  the shared core library under link-time and  
 **  passing execution control to the real main function
 **  in the shared core library under run-time.
 */
 
+extern int ap_main(int argc, char *argv[]);
+
 int main(int argc, char *argv[]) 
 {
-    extern int ap_main(int argc, char *argv[]);
     return ap_main(argc, argv);
 }
 
 #endif /* ndef SHARED_CORE_TIESTATIC */
 #else  /* ndef SHARED_CORE_BOOTSTRAP */
 
@@ -5577,26 +5799,31 @@
 #include <stdlib.h>
 #include <string.h>
 
 #include "ap_config.h"
 #include "httpd.h"
 
+#if defined(HPUX) || defined(HPUX10) || defined(HPUX11)
+#define VARNAME "SHLIB_PATH"
+#else
 #define VARNAME "LD_LIBRARY_PATH"
+#endif
 
 #ifndef SHARED_CORE_DIR 
 #define SHARED_CORE_DIR HTTPD_ROOT "/libexec"
 #endif
 
 #ifndef SHARED_CORE_EXECUTABLE_PROGRAM
 #define SHARED_CORE_EXECUTABLE_PROGRAM "libhttpd.ep"
 #endif
 
+extern char *optarg;
+extern int   optind;
+
 int main(int argc, char *argv[], char *envp[]) 
 {
-    extern char *optarg;
-    extern int optind;
     char prog[MAX_STRING_LEN];
     char llp_buf[MAX_STRING_LEN];
     char **llp_slot;
     char *llp_existing;
     char *llp_dir;
     char **envpnew;
diff -BEr -U 6 apache_1.3.1/src/main/http_protocol.c apache_1.3.2/src/main/http_protocol.c
--- apache_1.3.1/src/main/http_protocol.c	1998-07-09 01:47:05.000000000 +0800
+++ apache_1.3.2/src/main/http_protocol.c	1998-08-25 17:15:31.000000000 +0800
@@ -296,13 +296,14 @@
          (r->status == HTTP_NO_CONTENT) ||
          r->header_only ||
          ap_table_get(r->headers_out, "Content-Length") ||
          ap_find_last_token(r->pool,
                          ap_table_get(r->headers_out, "Transfer-Encoding"),
                          "chunked") ||
-         ((r->proto_num >= HTTP_VERSION(1,1)) && (r->chunked = 1))) &&
+         ((r->proto_num >= HTTP_VERSION(1,1)) &&
+	  (r->chunked = 1))) && /* THIS CODE IS CORRECT, see comment above. */
         r->server->keep_alive &&
         (r->server->keep_alive_timeout > 0) &&
         ((r->server->keep_alive_max == 0) ||
          (r->server->keep_alive_max > r->connection->keepalives)) &&
         !status_drops_connection(r->status) &&
         !wimpy &&
@@ -387,13 +388,13 @@
      * to be more accurate than checks relative to the modification time.
      * However, not all documents are guaranteed to *have* ETags, and some
      * might have Last-Modified values w/o ETags, so this gets a little
      * complicated.
      */
 
-    if (!is_HTTP_SUCCESS(r->status) || r->no_local_copy) {
+    if (!ap_is_HTTP_SUCCESS(r->status) || r->no_local_copy) {
         return OK;
     }
 
     mtime = (r->mtime != 0) ? r->mtime : time(NULL);
 
     /* If an If-Match request-header field was given
@@ -584,24 +585,24 @@
 	status = ap_parse_hostinfo_components(r->pool, uri, &r->parsed_uri);
     } else {
 	/* Simple syntax Errors in URLs are trapped by parse_uri_components(). */
 	status = ap_parse_uri_components(r->pool, uri, &r->parsed_uri);
     }
 
-    if (is_HTTP_SUCCESS(status)) {
+    if (ap_is_HTTP_SUCCESS(status)) {
 	/* if it has a scheme we may need to do absoluteURI vhost stuff */
 	if (r->parsed_uri.scheme
 	    && !strcasecmp(r->parsed_uri.scheme, ap_http_method(r))) {
 	    r->hostname = r->parsed_uri.hostname;
 	} else if (r->method_number == M_CONNECT) {
 	    r->hostname = r->parsed_uri.hostname;
 	}
 	r->args = r->parsed_uri.query;
 	r->uri = r->parsed_uri.path ? r->parsed_uri.path
 				    : ap_pstrdup(r->pool, "/");
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
 	/* Handle path translations for OS/2 and plug security hole.
 	 * This will prevent "http://www.wherever.com/..\..\/" from
 	 * returning a directory for the root drive.
 	 */
 	{
 	    char *x;
@@ -610,26 +611,27 @@
 		*x = '/';
 #ifndef WIN32   /* for OS/2 only: */
 	    /* Fix OS/2 HPFS filename case problem. */
 	    ap_str_tolower(r->uri);
 #endif
 	}
-#endif  /* __EMX__ || WIN32 */
+#endif  /* OS2 || WIN32 */
     }
     else {
 	r->args = NULL;
 	r->hostname = NULL;
 	r->status = status;             /* set error status */
 	r->uri = ap_pstrdup(r->pool, uri);
     }
 }
 
 static int read_request_line(request_rec *r)
 {
-    char l[HUGE_STRING_LEN];
-    const char *ll = l, *uri;
+    char l[DEFAULT_LIMIT_REQUEST_LINE + 2]; /* getline's two extra for \n\0 */
+    const char *ll = l;
+    const char *uri;
     conn_rec *conn = r->connection;
     int major = 1, minor = 0;   /* Assume HTTP/1.0 if non-"HTTP" protocol */
     int len;
 
     /* Read past empty lines until we get a real request line,
      * a read error, the connection closes (EOF), or we timeout.
@@ -643,35 +645,24 @@
      * If the requests aren't pipelined, then the client is still waiting
      * for the final buffer flush from us, and we will block in the implicit
      * read().  B_SAFEREAD ensures that the BUFF layer flushes if it will
      * have to block during a read.
      */
     ap_bsetflag(conn->client, B_SAFEREAD, 1);
-    while ((len = getline(l, HUGE_STRING_LEN, conn->client, 0)) <= 0) {
+    while ((len = getline(l, sizeof(l), conn->client, 0)) <= 0) {
         if ((len < 0) || ap_bgetflag(conn->client, B_EOF)) {
             ap_bsetflag(conn->client, B_SAFEREAD, 0);
             return 0;
         }
     }
     /* we've probably got something to do, ignore graceful restart requests */
 #ifdef SIGUSR1
     signal(SIGUSR1, SIG_IGN);
-#endif                          /* SIGUSR1 */
+#endif
+
     ap_bsetflag(conn->client, B_SAFEREAD, 0);
-    if (len == (HUGE_STRING_LEN - 1)) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
-                    "request failed for %s, reason: URI too long",
-            ap_get_remote_host(r->connection, r->per_dir_config, REMOTE_NAME));
-	/* hack to deal with the HTTP_REQUEST_TIME_OUT setting up above: */
-	if (r->status == HTTP_REQUEST_TIME_OUT) {
-	    r->status = HTTP_OK;
-	}
-	r->request_time = time(NULL);
-	ap_die (HTTP_REQUEST_URI_TOO_LARGE, r);
-        return 0;
-    }
 
     r->request_time = time(NULL);
     r->the_request = ap_pstrdup(r->pool, l);
     r->method = ap_getword_white(r->pool, &ll);
     uri = ap_getword_white(r->pool, &ll);
 
@@ -696,14 +687,26 @@
         r->method_number = M_TRACE;
     else
         r->method_number = M_INVALID;   /* Will eventually croak. */
 
     ap_parse_uri(r, uri);
 
+    /* getline returns (size of max buffer - 1) if it fills up the
+     * buffer before finding the end-of-line.  This is only going to
+     * happen if it exceeds the configured limit for a request-line.
+     */
+    if (len > r->server->limit_req_line) {
+        r->status    = HTTP_REQUEST_URI_TOO_LARGE;
+        r->proto_num = HTTP_VERSION(1,0);
+        r->protocol  = ap_pstrdup(r->pool, "HTTP/1.0");
+        return 0;
+    }
+
     r->assbackwards = (ll[0] == '\0');
     r->protocol = ap_pstrdup(r->pool, ll[0] ? ll : "HTTP/0.9");
+
     if (2 == sscanf(r->protocol, "HTTP/%u.%u", &major, &minor)
       && minor < HTTP_VERSION(1,0))	/* don't allow HTTP/0.1000 */
 	r->proto_num = HTTP_VERSION(major, minor);
     else
 	r->proto_num = HTTP_VERSION(1,0);
 
@@ -709,57 +712,70 @@
 
     return 1;
 }
 
 static void get_mime_headers(request_rec *r)
 {
+    char field[DEFAULT_LIMIT_REQUEST_FIELDSIZE + 2]; /* getline's two extra */
     conn_rec *c = r->connection;
-    int len;
     char *value;
-    char field[MAX_STRING_LEN];
+    char *copy;
+    int len;
+    unsigned int fields_read = 0;
+    table *tmp_headers;
+
+    /* We'll use ap_overlap_tables later to merge these into r->headers_in. */
+    tmp_headers = ap_make_table(r->pool, 50);
 
     /*
      * Read header lines until we get the empty separator line, a read error,
-     * the connection closes (EOF), or we timeout.
+     * the connection closes (EOF), reach the server limit, or we timeout.
      */
-    while ((len = getline(field, MAX_STRING_LEN, c->client, 1)) > 0) {
-        char *copy = ap_palloc(r->pool, len + 1);
+    while ((len = getline(field, sizeof(field), c->client, 1)) > 0) {
+
+        if (r->server->limit_req_fields &&
+            (++fields_read > r->server->limit_req_fields)) {
+            r->status = HTTP_BAD_REQUEST;
+            ap_table_setn(r->notes, "error-notes",
+                          "The number of request header fields exceeds "
+                          "this server's limit.<P>\n");
+            return;
+        }
+        /* getline returns (size of max buffer - 1) if it fills up the
+         * buffer before finding the end-of-line.  This is only going to
+         * happen if it exceeds the configured limit for a field size.
+         */
+        if (len > r->server->limit_req_fieldsize) {
+            r->status = HTTP_BAD_REQUEST;
+            ap_table_setn(r->notes, "error-notes", ap_pstrcat(r->pool,
+                "Size of a request header field exceeds server limit.<P>\n"
+                "<PRE>\n", field, "</PRE>\n", NULL));
+            return;
+        }
+        copy = ap_palloc(r->pool, len + 1);
         memcpy(copy, field, len + 1);
-	
+
 	if (!(value = strchr(copy, ':'))) {     /* Find the colon separator */
-	    /* if there's none, this request is screwed up.
-	     * a hack to deal with how we set HTTP_REQUEST_TIME_OUT earlier.*/
-	    if (r->status == HTTP_REQUEST_TIME_OUT)
-		r->status = HTTP_OK;
-	    
-	    ap_die (HTTP_BAD_REQUEST, r);
+            r->status = HTTP_BAD_REQUEST;       /* or abort the bad request */
+            ap_table_setn(r->notes, "error-notes", ap_pstrcat(r->pool,
+                "Request header field is missing colon separator.<P>\n"
+                "<PRE>\n", copy, "</PRE>\n", NULL));
 	    return;
 	}
 
         *value = '\0';
         ++value;
-	/* XXX: RFC2068 defines only SP and HT as whitespace, this test is
-	 * wrong... and so are many others probably.
-	 */
-        while (ap_isspace(*value))
+        while (*value == ' ' || *value == '\t')
             ++value;            /* Skip to start of value   */
 
 	/* XXX: should strip trailing whitespace as well */
 
-        ap_table_mergen(r->headers_in, copy, value);
-
-	/* the header was too long; at the least we should skip extra data */
-	if (len >= MAX_STRING_LEN - 1) { 
-	    while ((len = getline(field, MAX_STRING_LEN, c->client, 1))
-		    >= MAX_STRING_LEN - 1) {
-		/* soak up the extra data */
-	    }
-	    if (len == 0) /* time to exit the larger loop as well */
-		break;
-	}
+	ap_table_addn(tmp_headers, copy, value);
     }
+
+    ap_overlap_tables(r->headers_in, tmp_headers, AP_OVERLAP_TABLES_MERGE);
 }
 
 request_rec *ap_read_request(conn_rec *conn)
 {
     request_rec *r;
     int access_status;
@@ -792,40 +808,48 @@
     r->read_length     = 0;
     r->read_body       = REQUEST_NO_BODY;
 
     r->status          = HTTP_REQUEST_TIME_OUT;  /* Until we get a request */
     r->the_request     = NULL;
 
-    /* Get the request... */
-
 #ifdef CHARSET_EBCDIC
     ap_bsetflag(r->connection->client, B_ASCII2EBCDIC|B_EBCDIC2ASCII, 1);
-#endif /* CHARSET_EBCDIC */
+#endif
+
+    /* Get the request... */
+
     ap_keepalive_timeout("read request line", r);
     if (!read_request_line(r)) {
         ap_kill_timeout(r);
-	if (r->status != HTTP_REQUEST_TIME_OUT) {
-	    /* we must have had an error.*/
+        if (r->status == HTTP_REQUEST_URI_TOO_LARGE) {
+
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
+                         "request failed: URI too long");
+            ap_send_error_response(r, 0);
+            ap_bflush(r->connection->client);
 	    ap_log_transaction(r);
+            return r;
 	}
         return NULL;
     }
     if (!r->assbackwards) {
         ap_hard_timeout("read request headers", r);
         get_mime_headers(r);
-        if (r->status != HTTP_REQUEST_TIME_OUT) {/* we must have had an error.*/
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
-		         "request failed for %s: error reading the headers",
-		         ap_get_remote_host(r->connection, r->per_dir_config, 
-					    REMOTE_NAME));
+        ap_kill_timeout(r);
+        if (r->status != HTTP_REQUEST_TIME_OUT) {
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
+                         "request failed: error reading the headers");
+            ap_send_error_response(r, 0);
+            ap_bflush(r->connection->client);
 	    ap_log_transaction(r);
-	    return NULL;
+            return r;
 	}
-
     }
-    ap_kill_timeout(r);
+    else {
+        ap_kill_timeout(r);
+    }
 
     r->status = HTTP_OK;                         /* Until further notice. */
 
     /* update what we think the virtual host is based on the headers we've
      * now read
      */
@@ -921,25 +945,25 @@
     const char *t;
 
     if (!(t = ap_auth_type(r)) || strcasecmp(t, "Basic"))
         return DECLINED;
 
     if (!ap_auth_name(r)) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR,
-		    r->server, "need AuthName: %s", r->uri);
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR,
+		    r, "need AuthName: %s", r->uri);
         return SERVER_ERROR;
     }
 
     if (!auth_line) {
         ap_note_basic_auth_failure(r);
         return AUTH_REQUIRED;
     }
 
     if (strcasecmp(ap_getword(r->pool, &auth_line, ' '), "Basic")) {
         /* Client tried to authenticate using wrong auth scheme */
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "client used wrong authentication scheme: %s", r->uri);
         ap_note_basic_auth_failure(r);
         return AUTH_REQUIRED;
     }
 
     t = ap_uudecode(r->pool, auth_line);
@@ -1132,13 +1156,13 @@
                        (r->allowed & (1 << M_DELETE)) ? ", DELETE" : "",
                        (r->allowed & (1 << M_OPTIONS)) ? ", OPTIONS" : "",
                        ", TRACE",
                        NULL);
 }
 
-int ap_send_http_trace(request_rec *r)
+API_EXPORT(int) ap_send_http_trace(request_rec *r)
 {
     int rv;
 
     /* Get the original request */
     while (r->prev)
         r = r->prev;
@@ -1295,13 +1319,13 @@
 
 /* finalize_request_protocol is called at completion of sending the
  * response.  It's sole purpose is to send the terminating protocol
  * information for any wrappers around the response message body
  * (i.e., transfer encodings).  It should have been named finalize_response.
  */
-void ap_finalize_request_protocol(request_rec *r)
+API_EXPORT(void) ap_finalize_request_protocol(request_rec *r)
 {
     if (r->chunked && !r->connection->aborted) {
         /*
          * Turn off chunked encoding --- we can only do this once.
          */
         r->chunked = 0;
@@ -1355,52 +1379,61 @@
  */
 
 API_EXPORT(int) ap_setup_client_block(request_rec *r, int read_policy)
 {
     const char *tenc = ap_table_get(r->headers_in, "Transfer-Encoding");
     const char *lenp = ap_table_get(r->headers_in, "Content-Length");
+    unsigned long max_body;
 
     r->read_body = read_policy;
     r->read_chunked = 0;
     r->remaining = 0;
 
     if (tenc) {
         if (strcasecmp(tenc, "chunked")) {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "Unknown Transfer-Encoding %s", tenc);
             return HTTP_NOT_IMPLEMENTED;
         }
         if (r->read_body == REQUEST_CHUNKED_ERROR) {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "chunked Transfer-Encoding forbidden: %s", r->uri);
             return (lenp) ? HTTP_BAD_REQUEST : HTTP_LENGTH_REQUIRED;
         }
 
         r->read_chunked = 1;
     }
     else if (lenp) {
         const char *pos = lenp;
 
         while (ap_isdigit(*pos) || ap_isspace(*pos))
             ++pos;
         if (*pos != '\0') {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "Invalid Content-Length %s", lenp);
             return HTTP_BAD_REQUEST;
         }
 
         r->remaining = atol(lenp);
     }
 
     if ((r->read_body == REQUEST_NO_BODY) &&
         (r->read_chunked || (r->remaining > 0))) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "%s with body is not allowed for %s", r->method, r->uri);
         return HTTP_REQUEST_ENTITY_TOO_LARGE;
     }
 
+    max_body = ap_get_limit_req_body(r);
+    if (max_body && (r->remaining > max_body)) {
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
+          "Request content-length of %s is larger than the configured "
+          "limit of %lu", lenp, max_body);
+        return HTTP_REQUEST_ENTITY_TOO_LARGE;
+    }
+
     return OK;
 }
 
 API_EXPORT(int) ap_should_client_block(request_rec *r)
 {
     /* First check if we have already read the request body */
@@ -1455,12 +1488,13 @@
  */
 API_EXPORT(long) ap_get_client_block(request_rec *r, char *buffer, int bufsiz)
 {
     int c;
     long len_read, len_to_read;
     long chunk_start = 0;
+    unsigned long max_body;
 
     if (!r->read_chunked) {     /* Content-length read */
         len_to_read = (r->remaining > bufsiz) ? bufsiz : r->remaining;
         len_read = ap_bread(r->connection->client, buffer, len_to_read);
         if (len_read <= 0) {
             if (len_read < 0)
@@ -1479,12 +1513,26 @@
      */
     if (r->read_body == REQUEST_CHUNKED_PASS)
         bufsiz -= 2;
     if (bufsiz <= 0)
         return -1;              /* Cannot read chunked with a small buffer */
 
+    /* Check to see if we have already read too much request data.
+     * For efficiency reasons, we only check this at the top of each
+     * caller read pass, since the limit exists just to stop infinite
+     * length requests and nobody cares if it goes over by one buffer.
+     */
+    max_body = ap_get_limit_req_body(r);
+    if (max_body && (r->read_length > max_body)) {
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
+            "Chunked request body is larger than the configured limit of %lu",
+            max_body);
+        r->connection->keepalive = -1;
+        return -1;
+    }
+
     if (r->remaining == 0) {    /* Start of new chunk */
 
         chunk_start = getline(buffer, bufsiz, r->connection->client, 0);
         if ((chunk_start <= 0) || (chunk_start >= (bufsiz - 1))
             || !isxdigit(*buffer)) {
             r->connection->keepalive = -1;
@@ -1592,13 +1640,13 @@
  * failing to read the request body would cause it to be interpreted
  * as the next request on a persistent connection.
  *
  * Since we return an error status if the request is malformed, this
  * routine should be called at the beginning of a no-body handler, e.g.,
  *
- *    if ((retval = discard_request_body(r)) != OK)
+ *    if ((retval = ap_discard_request_body(r)) != OK)
  *        return retval;
  */
 API_EXPORT(int) ap_discard_request_body(request_rec *r)
 {
     int rv;
 
@@ -1664,17 +1712,14 @@
             else if (w < 0) {
                 if (r->connection->aborted)
                     break;
                 else if (errno == EAGAIN)
                     continue;
                 else {
-                    ap_log_error(APLOG_MARK, APLOG_INFO, r->server,
-                     "%s client stopped connection before send body completed",
-                                ap_get_remote_host(r->connection,
-                                                r->per_dir_config,
-                                                REMOTE_NAME));
+                    ap_log_rerror(APLOG_MARK, APLOG_INFO, r,
+                     "client stopped connection before send body completed");
                     ap_bsetflag(r->connection->client, B_EOUT, 1);
                     r->connection->aborted = 1;
                     break;
                 }
             }
         }
@@ -1781,17 +1826,14 @@
             else if (w < 0) {
                 if (r->connection->aborted)
                     break;
                 else if (errno == EAGAIN)
                     continue;
                 else {
-                    ap_log_error(APLOG_MARK, APLOG_INFO, r->server,
-                     "%s client stopped connection before send body completed",
-                                ap_get_remote_host(r->connection,
-                                                r->per_dir_config,
-                                                REMOTE_NAME));
+                    ap_log_rerror(APLOG_MARK, APLOG_INFO, r,
+                     "client stopped connection before send body completed");
                     ap_bsetflag(r->connection->client, B_EOUT, 1);
                     r->connection->aborted = 1;
                     break;
                 }
             }
         }
@@ -1849,17 +1891,14 @@
             else if (w < 0) {
                 if (r->connection->aborted)
                     break;
                 else if (errno == EAGAIN)
                     continue;
                 else {
-                    ap_log_error(APLOG_MARK, APLOG_INFO, r->server,
-                     "%s client stopped connection before send mmap completed",
-                                ap_get_remote_host(r->connection,
-                                                r->per_dir_config,
-                                                REMOTE_NAME));
+                    ap_log_rerror(APLOG_MARK, APLOG_INFO, r,
+                     "client stopped connection before send mmap completed");
                     ap_bsetflag(r->connection->client, B_EOUT, 1);
                     r->connection->aborted = 1;
                     break;
                 }
             }
         }
@@ -2011,13 +2050,13 @@
          */
         r->headers_out = r->err_headers_out;
         r->err_headers_out = tmp;
         ap_clear_table(r->err_headers_out);
 
         if (location && *location
-            && (is_HTTP_REDIRECT(status) || status == HTTP_CREATED))
+            && (ap_is_HTTP_REDIRECT(status) || status == HTTP_CREATED))
             ap_table_setn(r->headers_out, "Location", location);
 
         r->content_language = NULL;
         r->content_languages = NULL;
         r->content_encoding = NULL;
         r->clength = 0;
diff -BEr -U 6 apache_1.3.1/src/main/http_request.c apache_1.3.2/src/main/http_request.c
--- apache_1.3.1/src/main/http_request.c	1998-07-02 05:19:54.000000000 +0800
+++ apache_1.3.2/src/main/http_request.c	1998-08-11 08:09:46.000000000 +0800
@@ -68,12 +68,13 @@
 #define CORE_PRIVATE
 #include "httpd.h"
 #include "http_config.h"
 #include "http_request.h"
 #include "http_core.h"
 #include "http_protocol.h"
+#include "http_conf_globals.h"	/* for ap_extended_status */
 #include "http_log.h"
 #include "http_main.h"
 #include "scoreboard.h"
 #include "fnmatch.h"
 
 /*****************************************************************
@@ -100,22 +101,22 @@
     if (r->finfo.st_mode == 0         /* doesn't exist */
         || S_ISDIR(r->finfo.st_mode)
         || S_ISREG(r->finfo.st_mode)
         || S_ISLNK(r->finfo.st_mode)) {
         return OK;
     }
-    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                 "object is not a file, directory or symlink: %s",
                 r->filename);
     return HTTP_FORBIDDEN;
 }
 
 
 static int check_symlinks(char *d, int opts)
 {
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
     /* OS/2 doesn't have symlinks */
     return OK;
 #else
     struct stat lfi, fi;
     char *lastp;
     int res;
@@ -243,16 +244,14 @@
                 --cp;
         }
         else {
 #if defined(EACCES)
             if (errno != EACCES)
 #endif
-                ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
-                            "access to %s failed for %s", r->uri,
-                            ap_get_remote_host(r->connection, r->per_dir_config,
-                                            REMOTE_NOLOOKUP));
+                ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
+                            "access to %s failed", r->uri);
             return HTTP_FORBIDDEN;
         }
 #else
 #error ENOENT || ENOTDIR not defined; please see the
 #error comments at this line in the source for a workaround.
         /*
@@ -405,13 +404,13 @@
         /*
          * Do symlink checks first, because they are done with the
          * permissions appropriate to the *parent* directory...
          */
 
         if ((res = check_symlinks(test_dirname, core_dir->opts))) {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "Symbolic link not allowed: %s", test_dirname);
             return res;
         }
 
         /*
          * Begin *this* level by looking for matching <Directory> sections
@@ -500,13 +499,13 @@
      * you access /symlink (or /symlink/) you would get a 403 without this
      * S_ISDIR test.  But if you accessed /symlink/index.html, for example,
      * you would *not* get the 403.
      */
     if (!S_ISDIR(r->finfo.st_mode)
         && (res = check_symlinks(r->filename, ap_allow_options(r)))) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "Symbolic link not allowed: %s", r->filename);
         return res;
     }
     return OK;                  /* Can only "fail" if access denied by the
                                  * symlink goop. */
 }
@@ -794,13 +793,13 @@
             if (!res) {
                 res = file_walk(rnew);
             }
         }
         else {
             if ((res = check_symlinks(rnew->filename, ap_allow_options(rnew)))) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, rnew->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, rnew,
                             "Symbolic link not allowed: %s", rnew->filename);
                 rnew->status = res;
                 return rnew;
             }
             /*
              * do a file_walk, if it doesn't change the per_dir_config then
@@ -872,13 +871,13 @@
 
 /*****************************************************************
  *
  * Mainline request processing...
  */
 
-void ap_die(int type, request_rec *r)
+API_EXPORT(void) ap_die(int type, request_rec *r)
 {
     int error_index = ap_index_of_response(type);
     char *custom_response = ap_response_code_string(r, error_index);
     int recursive_error = 0;
 
     if (type == DONE) {
@@ -968,24 +967,24 @@
         else {
             /*
              * Dumb user has given us a bad url to redirect to --- fake up
              * dying with a recursive server error...
              */
             recursive_error = SERVER_ERROR;
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "Invalid error redirection directive: %s",
                         custom_response);
         }
     }
     ap_send_error_response(r, recursive_error);
 }
 
 static void decl_die(int status, char *phase, request_rec *r)
 {
     if (status == DECLINED) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_CRIT, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_CRIT, r,
                     "configuration error:  couldn't %s: %s", phase, r->uri);
         ap_die(SERVER_ERROR, r);
     }
     else
         ap_die(status, r);
 }
@@ -1022,13 +1021,13 @@
     if (r->assbackwards && r->header_only) {
         /*
          * Client asked for headers only with HTTP/0.9, which doesn't send
          * headers!  Have to dink things even to make sure the error message
          * comes through...
          */
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "client sent illegal HTTP/0.9 request: %s", r->uri);
         r->header_only = 0;
         ap_die(BAD_REQUEST, r);
         return;
     }
 
@@ -1038,13 +1037,13 @@
          * Client sent us a HTTP/1.1 or later request without telling us the
          * hostname, either with a full URL or a Host: header. We therefore
          * need to (as per the 1.1 spec) send an error.  As a special case,
 	 * HTTP/1.1 mentions twice (S9, S14.23) that a request MUST contain
 	 * a Host: header, and the server MUST respond with 400 if it doesn't.
          */
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                "client sent HTTP/1.1 request without hostname (see RFC2068 section 9, and 14.23): %s", r->uri);
         ap_die(BAD_REQUEST, r);
         return;
     }
 
     /* Ignore embedded %2F's in path for proxy requests */
@@ -1179,39 +1178,35 @@
     /* Take care of little things that need to happen when we're done */
     ap_finalize_request_protocol(r);
 }
 
 void ap_process_request(request_rec *r)
 {
-#ifdef STATUS
     int old_stat;
 
-    ap_time_process_request(r->connection->child_num, START_PREQUEST);
-#endif
+    if (ap_extended_status)
+	ap_time_process_request(r->connection->child_num, START_PREQUEST);
 
     process_request_internal(r);
 
-#ifdef STATUS
     old_stat = ap_update_child_status(r->connection->child_num,
                                    SERVER_BUSY_LOG, r);
-#endif
 
     /*
      * We want to flush the last packet if this isn't a pipelining connection
      * *before* we start into logging.  Suppose that the logging causes a DNS
      * lookup to occur, which may have a high latency.  If we hold off on
      * this packet, then it'll appear like the link is stalled when really
      * it's the application that's stalled.
      */
     ap_bhalfduplex(r->connection->client);
     ap_log_transaction(r);
 
-#ifdef STATUS
     (void) ap_update_child_status(r->connection->child_num, old_stat, r);
-    ap_time_process_request(r->connection->child_num, STOP_PREQUEST);
-#endif
+    if (ap_extended_status)
+	ap_time_process_request(r->connection->child_num, STOP_PREQUEST);
 }
 
 static table *rename_original_env(pool *p, table *t)
 {
     array_header *env_arr = ap_table_elts(t);
     table_entry *elts = (table_entry *) env_arr->elts;
diff -BEr -U 6 apache_1.3.1/src/main/Makefile.tmpl apache_1.3.2/src/main/Makefile.tmpl
--- apache_1.3.1/src/main/Makefile.tmpl	1998-07-13 19:32:38.000000000 +0800
+++ apache_1.3.2/src/main/Makefile.tmpl	1998-09-07 14:59:33.000000000 +0800
@@ -8,13 +8,13 @@
 HEADERS= test_char.h uri_delims.h 
 
 OBJS= alloc.o buff.o \
       http_config.o http_core.o http_log.o \
       http_main.o http_protocol.o http_request.o http_vhost.o \
       util.o util_date.o util_script.o util_uri.o util_md5.o \
-      md5c.o rfc1413.o fnmatch.o
+      md5c.o rfc1413.o
 
 .c.o:
 	$(CC) -c $(INCLUDES) $(CFLAGS) $<
 
 all: $(HEADERS) $(LIB)
 
@@ -56,110 +56,113 @@
 #Dependencies
 
 $(OBJS): Makefile
 
 # DO NOT REMOVE
 alloc.o: alloc.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/multithread.h \
- $(INCDIR)/http_log.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/multithread.h $(INCDIR)/http_log.h
 buff.o: buff.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_main.h $(INCDIR)/http_log.h
+gen_test_char.o: gen_test_char.c $(INCDIR)/httpd.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
  $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
  $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_main.h \
- $(INCDIR)/http_log.h
-fnmatch.o: fnmatch.c $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/fnmatch.h
-gen_test_char.o: gen_test_char.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
- $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h
+ $(INCDIR)/ap.h $(INCDIR)/util_uri.h
 gen_uri_delims.o: gen_uri_delims.c
 http_config.o: http_config.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
- $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_config.h $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_request.h $(INCDIR)/http_conf_globals.h \
  $(INCDIR)/http_vhost.h $(INCDIR)/explain.h
 http_core.o: http_core.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
- $(INCDIR)/http_core.h $(INCDIR)/http_protocol.h \
- $(INCDIR)/http_request.h $(INCDIR)/http_conf_globals.h \
- $(INCDIR)/http_vhost.h $(INCDIR)/http_main.h $(INCDIR)/http_log.h \
- $(INCDIR)/rfc1413.h $(INCDIR)/util_md5.h $(INCDIR)/ap_md5.h \
- $(INCDIR)/scoreboard.h $(INCDIR)/fnmatch.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_config.h $(INCDIR)/http_core.h \
+ $(INCDIR)/http_protocol.h $(INCDIR)/http_request.h \
+ $(INCDIR)/http_conf_globals.h $(INCDIR)/http_vhost.h \
+ $(INCDIR)/http_main.h $(INCDIR)/http_log.h $(INCDIR)/rfc1413.h \
+ $(INCDIR)/util_md5.h $(INCDIR)/ap_md5.h $(INCDIR)/scoreboard.h \
+ $(INCDIR)/fnmatch.h
 http_log.o: http_log.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
- $(INCDIR)/http_core.h $(INCDIR)/http_log.h $(INCDIR)/http_main.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_config.h $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
+ $(INCDIR)/http_main.h
 http_main.o: http_main.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_main.h \
- $(INCDIR)/http_log.h $(INCDIR)/http_config.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_main.h $(INCDIR)/http_log.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/http_request.h \
  $(INCDIR)/http_conf_globals.h $(INCDIR)/http_core.h \
  $(INCDIR)/http_vhost.h $(INCDIR)/util_script.h \
  $(INCDIR)/scoreboard.h $(INCDIR)/multithread.h $(INCDIR)/explain.h
 http_protocol.o: http_protocol.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
- $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
- $(INCDIR)/http_config.h $(INCDIR)/http_core.h \
- $(INCDIR)/http_protocol.h $(INCDIR)/http_main.h \
- $(INCDIR)/http_request.h $(INCDIR)/http_vhost.h \
- $(INCDIR)/http_log.h $(INCDIR)/util_date.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
+ $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
+ $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
+ $(INCDIR)/http_core.h $(INCDIR)/http_protocol.h \
+ $(INCDIR)/http_main.h $(INCDIR)/http_request.h \
+ $(INCDIR)/http_vhost.h $(INCDIR)/http_log.h $(INCDIR)/util_date.h \
  $(INCDIR)/http_conf_globals.h
 http_request.o: http_request.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
- $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
- $(INCDIR)/http_config.h $(INCDIR)/http_request.h \
- $(INCDIR)/http_core.h $(INCDIR)/http_protocol.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
+ $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
+ $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
+ $(INCDIR)/http_request.h $(INCDIR)/http_core.h \
+ $(INCDIR)/http_protocol.h $(INCDIR)/http_conf_globals.h \
  $(INCDIR)/http_log.h $(INCDIR)/http_main.h $(INCDIR)/scoreboard.h \
  $(INCDIR)/fnmatch.h
 http_vhost.o: http_vhost.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_config.h $(INCDIR)/http_conf_globals.h \
+ $(INCDIR)/http_log.h $(INCDIR)/http_vhost.h \
+ $(INCDIR)/http_protocol.h
+md5c.o: md5c.c $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
  $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
- $(INCDIR)/http_conf_globals.h $(INCDIR)/http_log.h \
- $(INCDIR)/http_vhost.h $(INCDIR)/http_protocol.h
-md5c.o: md5c.c $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
- $(INCDIR)/ap_md5.h
+ $(INCDIR)/hsregex.h $(INCDIR)/ap_md5.h
 rfc1413.o: rfc1413.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_log.h \
- $(INCDIR)/rfc1413.h $(INCDIR)/http_main.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_log.h $(INCDIR)/rfc1413.h $(INCDIR)/http_main.h
 util.o: util.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_conf_globals.h \
- $(INCDIR)/http_log.h test_char.h
-util_date.o: util_date.c $(INCDIR)/ap_config.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_conf_globals.h $(INCDIR)/http_log.h test_char.h
+util_date.o: util_date.c $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
  $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
  $(INCDIR)/hsregex.h $(INCDIR)/util_date.h
 util_md5.o: util_md5.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/util_md5.h \
- $(INCDIR)/ap_md5.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/util_md5.h $(INCDIR)/ap_md5.h
 util_script.o: util_script.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
- $(INCDIR)/http_conf_globals.h $(INCDIR)/http_main.h \
- $(INCDIR)/http_log.h $(INCDIR)/http_protocol.h \
- $(INCDIR)/http_core.h $(INCDIR)/http_request.h \
- $(INCDIR)/util_script.h $(INCDIR)/util_date.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_config.h $(INCDIR)/http_conf_globals.h \
+ $(INCDIR)/http_main.h $(INCDIR)/http_log.h \
+ $(INCDIR)/http_protocol.h $(INCDIR)/http_core.h \
+ $(INCDIR)/http_request.h $(INCDIR)/util_script.h \
+ $(INCDIR)/util_date.h
 util_uri.o: util_uri.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
- $(INCDIR)/hsregex.h $(INCDIR)/alloc.h $(INCDIR)/buff.h \
- $(INCDIR)/ap.h $(INCDIR)/util_uri.h $(INCDIR)/http_log.h \
- $(INCDIR)/http_conf_globals.h uri_delims.h
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h $(INCDIR)/alloc.h \
+ $(INCDIR)/buff.h $(INCDIR)/ap.h $(INCDIR)/util_uri.h \
+ $(INCDIR)/http_log.h $(INCDIR)/http_conf_globals.h uri_delims.h
diff -BEr -U 6 apache_1.3.1/src/main/util.c apache_1.3.2/src/main/util.c
--- apache_1.3.1/src/main/util.c	1998-07-13 19:32:41.000000000 +0800
+++ apache_1.3.2/src/main/util.c	1998-09-17 23:56:08.000000000 +0800
@@ -698,13 +698,14 @@
     return res;
 }
 
 API_EXPORT(int) ap_cfg_closefile(configfile_t *cfp)
 {
 #ifdef DEBUG
-    ap_log_error(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, NULL, "Done with config file %s", fp->name);
+    ap_log_error(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, NULL, 
+        "Done with config file %s", cfp->name);
 #endif
     return (cfp->close == NULL) ? 0 : cfp->close(cfp->param);
 }
 
 /* Common structure that holds the file and pool for ap_pcfg_openfile */
 typedef struct {
@@ -860,34 +861,26 @@
 		    }   
 		}
 	    }
 	    break;
 	}
 
-	/* Compress the line, reducing all blanks and tabs to one space.
+	/*
 	 * Leading and trailing white space is eliminated completely
 	 */
-	src = dst = buf;
+	src = buf;
 	while (ap_isspace(*src))
 	    ++src;
-	while (*src != '\0')
-	{
-	    /* Copy words */
-	    while (!ap_isspace(*dst = *src) && *src != '\0') {
-		++src;
-		++dst;
-	    }
-	    if (*src == '\0') break;
-	    *dst++ = ' ';
-	    while (ap_isspace(*src))
-		++src;
-	}
-	*dst = '\0';
 	/* blast trailing whitespace */
-	while (--dst >= buf && ap_isspace(*dst))
+	dst = &src[strlen(src)];
+	while (--dst >= src && ap_isspace(*dst))
 	    *dst = '\0';
+        /* Zap leading whitespace by shifting */
+        if (src != buf)
+	    for (dst = buf; (*dst++ = *src++) != '\0'; )
+	        ;
 
 #ifdef DEBUG_CFG_LINES
 	ap_log_error(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, NULL, "Read config: %s", buf);
 #endif
 	return 0;
     } else {
@@ -1061,13 +1054,13 @@
 
     cmd = ap_palloc(p, 2 * strlen(str) + 1);	/* Be safe */
     d = (unsigned char *)cmd;
     s = (const unsigned char *)str;
     for (; *s; ++s) {
 
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
 	/* Don't allow '&' in parameters under OS/2. */
 	/* This can be used to send commands to the shell. */
 	if (*s == '&') {
 	    *d++ = ' ';
 	    continue;
 	}
@@ -1320,13 +1313,13 @@
 
 API_EXPORT(int) ap_can_exec(const struct stat *finfo)
 {
 #ifdef MULTIPLE_GROUPS
     int cnt;
 #endif
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
     /* OS/2 dosen't have Users and Groups */
     return 1;
 #else
     if (ap_user_id == finfo->st_uid)
 	if (finfo->st_mode & S_IXUSR)
 	    return 1;
@@ -1546,13 +1539,13 @@
 
 
 /*
  * Parses a host of the form <address>[:port]
  * :port is permitted if 'port' is not NULL
  */
-unsigned long ap_get_virthost_addr(const char *w, unsigned short *ports)
+unsigned long ap_get_virthost_addr(char *w, unsigned short *ports)
 {
     struct hostent *hep;
     unsigned long my_addr;
     char *p;
 
     p = strchr(w, ':');
@@ -1567,13 +1560,13 @@
     if (strcmp(w, "*") == 0) {
 	if (p != NULL)
 	    *p = ':';
 	return htonl(INADDR_ANY);
     }
 
-    my_addr = ap_inet_addr(w);
+    my_addr = ap_inet_addr((char *)w);
     if (my_addr != INADDR_NONE) {
 	if (p != NULL)
 	    *p = ':';
 	return my_addr;
     }
 
@@ -1626,13 +1619,13 @@
 	perror("Unable to gethostname");
 	exit(1);
     }
     str[MAXHOSTNAMELEN] = '\0';
     if ((!(p = gethostbyname(str))) || (!(server_hostname = find_fqdn(a, p)))) {
 	fprintf(stderr, "httpd: cannot determine local host name.\n");
-	fprintf(stderr, "Use ServerName to set it manually.\n");
+	fprintf(stderr, "Use the ServerName directive to set it manually.\n");
 	exit(1);
     }
 
     return server_hostname;
 }
 
@@ -1731,13 +1724,35 @@
     }
     bufplain[nbytesdecoded] = '\0';
 #endif /*CHARSET_EBCDIC*/
     return bufplain;
 }
 
-#ifdef __EMX__
+static const char basis_64[] = 
+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"; 
+ 
+API_EXPORT(char *) ap_uuencode(pool *a, char *string) 
+{ 
+    int i, len = strlen(string); 
+    char *p; 
+    char *encoded = (char *) ap_pcalloc(a, (len+2) / 3 * 4); 
+ 
+    p = encoded; 
+    for (i = 0; i < len; i += 3) { 
+        *p++ = basis_64[string[i] >> 2]; 
+        *p++ = basis_64[((string[i] & 0x3) << 4) | ((int) (string[i + 1] & 0xF0) >> 4)]; 
+        *p++ = basis_64[((string[i + 1] & 0xF) << 2) | ((int) (string[i + 2] & 0xC0) >> 6)]; 
+        *p++ = basis_64[string[i + 2] & 0x3F]; 
+    } 
+    *p-- = '\0'; 
+    *p-- = '='; 
+    *p-- = '='; 
+    return encoded; 
+} 
+
+#ifdef OS2
 void os2pathname(char *path)
 {
     char newpath[MAX_STRING_LEN];
     int loop;
     int offset;
 
diff -BEr -U 6 apache_1.3.1/src/main/util_md5.c apache_1.3.2/src/main/util_md5.c
--- apache_1.3.1/src/main/util_md5.c	1998-04-11 20:00:32.000000000 +0800
+++ apache_1.3.2/src/main/util_md5.c	1998-09-07 01:12:18.000000000 +0800
@@ -84,34 +84,39 @@
 /* md5.c --Module Interface to MD5. */
 /* Jeff Hostetler, Spyglass, Inc., 1994. */
 
 #include "httpd.h"
 #include "util_md5.h"
 
-API_EXPORT(char *) ap_md5(pool *p, unsigned char *string)
+API_EXPORT(char *) ap_md5_binary(pool *p, const unsigned char *buf, int length)
 {
     AP_MD5_CTX my_md5;
     unsigned char hash[16];
     char *r, result[33];
     int i;
 
     /*
      * Take the MD5 hash of the string argument.
      */
 
     ap_MD5Init(&my_md5);
-    ap_MD5Update(&my_md5, string, strlen((const char *) string));
+    ap_MD5Update(&my_md5, buf, length);
     ap_MD5Final(hash, &my_md5);
 
     for (i = 0, r = result; i < 16; i++, r += 2)
 	sprintf(r, "%02x", hash[i]);
     *r = '\0';
 
     return ap_pstrdup(p, result);
 }
 
+API_EXPORT(char *) ap_md5(pool *p, const unsigned char *string)
+{
+    return ap_md5_binary(p, string, strlen(string));
+}
+
 /* these portions extracted from mpack, John G. Myers - jgm+@cmu.edu */
 
 /* (C) Copyright 1993,1994 by Carnegie Mellon University
  * All Rights Reserved.
  *
  * Permission to use, copy, modify, distribute, and sell this software
diff -BEr -U 6 apache_1.3.1/src/main/util_script.c apache_1.3.2/src/main/util_script.c
--- apache_1.3.1/src/main/util_script.c	1998-07-10 16:33:36.000000000 +0800
+++ apache_1.3.2/src/main/util_script.c	1998-09-15 00:10:22.000000000 +0800
@@ -187,13 +187,13 @@
     env[j] = NULL;
     return env;
 }
 
 API_EXPORT(void) ap_add_common_vars(request_rec *r)
 {
-    table *e = r->subprocess_env;
+    table *e;
     server_rec *s = r->server;
     conn_rec *c = r->connection;
     const char *rem_logname;
     char *env_path;
 #ifdef WIN32
     char *env_temp;
@@ -196,17 +196,21 @@
     const char *rem_logname;
     char *env_path;
 #ifdef WIN32
     char *env_temp;
 #endif
     const char *host;
-
     array_header *hdrs_arr = ap_table_elts(r->headers_in);
     table_entry *hdrs = (table_entry *) hdrs_arr->elts;
     int i;
 
+    /* use a temporary table which we'll overlap onto
+     * r->subprocess_env later
+     */
+    e = ap_make_table(r->pool, 25 + hdrs_arr->nelts);
+
     /* First, add environment vars from headers... this is as per
      * CGI specs, though other sorts of scripting interfaces see
      * the same vars...
      */
 
     for (i = 0; i < hdrs_arr->nelts; ++i) {
@@ -217,16 +221,16 @@
 	/* A few headers are special cased --- Authorization to prevent
 	 * rogue scripts from capturing passwords; content-type and -length
 	 * for no particular reason.
 	 */
 
 	if (!strcasecmp(hdrs[i].key, "Content-type")) {
-	    ap_table_setn(e, "CONTENT_TYPE", hdrs[i].val);
+	    ap_table_addn(e, "CONTENT_TYPE", hdrs[i].val);
 	}
 	else if (!strcasecmp(hdrs[i].key, "Content-length")) {
-	    ap_table_setn(e, "CONTENT_LENGTH", hdrs[i].val);
+	    ap_table_addn(e, "CONTENT_LENGTH", hdrs[i].val);
 	}
 	/*
 	 * You really don't want to disable this check, since it leaves you
 	 * wide open to CGIs stealing passwords and people viewing them
 	 * in the environment with "ps -e".  But, if you must...
 	 */
@@ -234,70 +238,72 @@
 	else if (!strcasecmp(hdrs[i].key, "Authorization") 
 		 || !strcasecmp(hdrs[i].key, "Proxy-Authorization")) {
 	    continue;
 	}
 #endif
 	else {
-	    ap_table_setn(e, http2env(r->pool, hdrs[i].key), hdrs[i].val);
+	    ap_table_addn(e, http2env(r->pool, hdrs[i].key), hdrs[i].val);
 	}
     }
 
     if (!(env_path = getenv("PATH"))) {
 	env_path = DEFAULT_PATH;
     }
 
 #ifdef WIN32
     if (env_temp = getenv("SystemRoot")) {
-        ap_table_setn(e, "SystemRoot", env_temp);         
+        ap_table_addn(e, "SystemRoot", env_temp);         
     }
     if (env_temp = getenv("COMSPEC")) {
-        ap_table_setn(e, "COMSPEC", env_temp);            
+        ap_table_addn(e, "COMSPEC", env_temp);            
     }
     if (env_temp = getenv("WINDIR")) {
-        ap_table_setn(e, "WINDIR", env_temp);
+        ap_table_addn(e, "WINDIR", env_temp);
     }
 #endif
 
-    ap_table_setn(e, "PATH", env_path);
-    ap_table_setn(e, "SERVER_SOFTWARE", ap_get_server_version());
-    ap_table_setn(e, "SERVER_NAME", ap_get_server_name(r));
-    ap_table_setn(e, "SERVER_PORT",
+    ap_table_addn(e, "PATH", env_path);
+    ap_table_addn(e, "SERVER_SOFTWARE", ap_get_server_version());
+    ap_table_addn(e, "SERVER_NAME", ap_get_server_name(r));
+    ap_table_addn(e, "SERVER_PORT",
 		  ap_psprintf(r->pool, "%u", ap_get_server_port(r)));
     host = ap_get_remote_host(c, r->per_dir_config, REMOTE_HOST);
     if (host) {
-	ap_table_setn(e, "REMOTE_HOST", host);
+	ap_table_addn(e, "REMOTE_HOST", host);
     }
-    ap_table_setn(e, "REMOTE_ADDR", c->remote_ip);
-    ap_table_setn(e, "DOCUMENT_ROOT", ap_document_root(r));	/* Apache */
-    ap_table_setn(e, "SERVER_ADMIN", s->server_admin);	/* Apache */
-    ap_table_setn(e, "SCRIPT_FILENAME", r->filename);	/* Apache */
+    ap_table_addn(e, "REMOTE_ADDR", c->remote_ip);
+    ap_table_addn(e, "DOCUMENT_ROOT", ap_document_root(r));	/* Apache */
+    ap_table_addn(e, "SERVER_ADMIN", s->server_admin);	/* Apache */
+    ap_table_addn(e, "SCRIPT_FILENAME", r->filename);	/* Apache */
 
-    ap_table_setn(e, "REMOTE_PORT",
+    ap_table_addn(e, "REMOTE_PORT",
 		  ap_psprintf(r->pool, "%d", ntohs(c->remote_addr.sin_port)));
 
     if (c->user) {
-	ap_table_setn(e, "REMOTE_USER", c->user);
+	ap_table_addn(e, "REMOTE_USER", c->user);
     }
     if (c->ap_auth_type) {
-	ap_table_setn(e, "AUTH_TYPE", c->ap_auth_type);
+	ap_table_addn(e, "AUTH_TYPE", c->ap_auth_type);
     }
     rem_logname = ap_get_remote_logname(r);
     if (rem_logname) {
-	ap_table_setn(e, "REMOTE_IDENT", ap_pstrdup(r->pool, rem_logname));
+	ap_table_addn(e, "REMOTE_IDENT", ap_pstrdup(r->pool, rem_logname));
     }
 
     /* Apache custom error responses. If we have redirected set two new vars */
 
     if (r->prev) {
         if (r->prev->args) {
-	    ap_table_setn(e, "REDIRECT_QUERY_STRING", r->prev->args);
+	    ap_table_addn(e, "REDIRECT_QUERY_STRING", r->prev->args);
 	}
 	if (r->prev->uri) {
-	    ap_table_setn(e, "REDIRECT_URL", r->prev->uri);
+	    ap_table_addn(e, "REDIRECT_URL", r->prev->uri);
 	}
     }
+
+    ap_overlap_tables(r->subprocess_env, e, AP_OVERLAP_TABLES_SET);
 }
 
 /* This "cute" little function comes about because the path info on
  * filenames and URLs aren't always the same. So we take the two,
  * and find as much of the two that match as possible.
  */
@@ -407,35 +413,57 @@
 	}
 	ap_destroy_sub_req(pa_req);
     }
 }
 
 
-static int scan_script_header_err_core(request_rec *r, char *buffer,
+static int set_cookie_doo_doo(void *v, const char *key, const char *val)
+{
+    ap_table_addn(v, key, val);
+    return 1;
+}
+
+API_EXPORT(int) ap_scan_script_header_err_core(request_rec *r, char *buffer,
 				       int (*getsfunc) (char *, int, void *),
 				       void *getsfunc_data)
 {
     char x[MAX_STRING_LEN];
     char *w, *l;
     int p;
     int cgi_status = HTTP_OK;
+    table *merge;
+    table *cookie_table;
 
     if (buffer) {
 	*buffer = '\0';
     }
     w = buffer ? buffer : x;
 
     ap_hard_timeout("read script header", r);
 
+    /* temporary place to hold headers to merge in later */
+    merge = ap_make_table(r->pool, 10);
+
+    /* The HTTP specification says that it is legal to merge duplicate
+     * headers into one.  Some browsers that support Cookies don't like
+     * merged headers and prefer that each Set-Cookie header is sent
+     * separately.  Lets humour those browsers by not merging.
+     * Oh what a pain it is.
+     */
+    cookie_table = ap_make_table(r->pool, 2);
+    ap_table_do(set_cookie_doo_doo, cookie_table, r->err_headers_out, "Set-Cookie", NULL);
+
     while (1) {
 
 	if ((*getsfunc) (w, MAX_STRING_LEN - 1, getsfunc_data) == 0) {
 	    ap_kill_timeout(r);
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
-			 "Premature end of script headers: %s", r->filename);
-	    return SERVER_ERROR;
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
+			  "Premature end of script headers: %s", r->filename);
+	    ap_table_setn(r->notes, "error-notes",
+			  "Premature end of script headers");
+	    return HTTP_INTERNAL_SERVER_ERROR;
 	}
 
 	/* Delete terminal (CR?)LF */
 
 	p = strlen(w);
 	if (p > 0 && w[p - 1] == '\n') {
@@ -463,17 +491,44 @@
 	    int cond_status = OK;
 
 	    ap_kill_timeout(r);
 	    if ((cgi_status == HTTP_OK) && (r->method_number == M_GET)) {
 		cond_status = ap_meets_conditions(r);
 	    }
+	    ap_overlap_tables(r->err_headers_out, merge,
+		AP_OVERLAP_TABLES_MERGE);
+	    if (!ap_is_empty_table(cookie_table)) {
+		r->err_headers_out = ap_overlay_tables(r->pool,
+		    r->err_headers_out, cookie_table);
+	    }
 	    return cond_status;
 	}
 
 	/* if we see a bogus header don't ignore it. Shout and scream */
 
+#ifdef CHARSET_EBCDIC
+	    /* Chances are that we received an ASCII header text instead of
+	     * the expected EBCDIC header lines. Try to auto-detect:
+	     */
+	if (!(l = strchr(w, ':'))) {
+	    int maybeASCII = 0, maybeEBCDIC = 0;
+	    char *cp;
+
+	    for (cp = w; *cp != '\0'; ++cp) {
+		if (isprint(*cp) && !isprint(os_toebcdic[*cp]))
+		    ++maybeEBCDIC;
+		if (!isprint(*cp) && isprint(os_toebcdic[*cp]))
+		    ++maybeASCII;
+		}
+	    if (maybeASCII > maybeEBCDIC) {
+		ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+			 "CGI Interface Error: Script headers apparently ASCII: (CGI = %s)", r->filename);
+		ascii2ebcdic(w, w, cp - w);
+	    }
+	}
+#endif
 	if (!(l = strchr(w, ':'))) {
 	    char malformed[(sizeof MALFORMED_MESSAGE) + 1
 			   + MALFORMED_HEADER_LENGTH_TO_SHOW];
 
 	    strcpy(malformed, MALFORMED_MESSAGE);
 	    strncat(malformed, w, MALFORMED_HEADER_LENGTH_TO_SHOW);
@@ -483,15 +538,17 @@
 	        while ((*getsfunc) (w, MAX_STRING_LEN - 1, getsfunc_data)) {
 		    continue;
 		}
 	    }
 
 	    ap_kill_timeout(r);
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
-			 "%s: %s", malformed, r->filename);
-	    return SERVER_ERROR;
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
+			  "%s: %s", malformed, r->filename);
+	    ap_table_setn(r->notes, "error-notes",
+			  ap_pstrdup(r->pool, malformed));
+	    return HTTP_INTERNAL_SERVER_ERROR;
 	}
 
 	*l++ = '\0';
 	while (*l && ap_isspace(*l)) {
 	    ++l;
 	}
@@ -534,46 +591,41 @@
 	else if (!strcasecmp(w, "Last-Modified")) {
 	    time_t mtime = ap_parseHTTPdate(l);
 
 	    ap_update_mtime(r, mtime);
 	    ap_set_last_modified(r);
 	}
-	/* The HTTP specification says that it is legal to merge duplicate
-	 * headers into one.  Some browsers that support Cookies don't like
-	 * merged headers and prefer that each Set-Cookie header is sent
-	 * separately.  Lets humour those browsers.
-	 */
 	else if (!strcasecmp(w, "Set-Cookie")) {
-	    ap_table_add(r->err_headers_out, w, l);
+	    ap_table_add(cookie_table, w, l);
 	}
 	else {
-	    ap_table_merge(r->err_headers_out, w, l);
+	    ap_table_add(merge, w, l);
 	}
     }
 }
 
 static int getsfunc_FILE(char *buf, int len, void *f)
 {
     return fgets(buf, len, (FILE *) f) != NULL;
 }
 
 API_EXPORT(int) ap_scan_script_header_err(request_rec *r, FILE *f,
 					  char *buffer)
 {
-    return scan_script_header_err_core(r, buffer, getsfunc_FILE, f);
+    return ap_scan_script_header_err_core(r, buffer, getsfunc_FILE, f);
 }
 
 static int getsfunc_BUFF(char *w, int len, void *fb)
 {
     return ap_bgets(w, len, (BUFF *) fb) > 0;
 }
 
 API_EXPORT(int) ap_scan_script_header_err_buff(request_rec *r, BUFF *fb,
 					       char *buffer)
 {
-    return scan_script_header_err_core(r, buffer, getsfunc_BUFF, fb);
+    return ap_scan_script_header_err_core(r, buffer, getsfunc_BUFF, fb);
 }
 
 
 API_EXPORT(void) ap_send_size(size_t size, request_rec *r)
 {
     /* XXX: this -1 thing is a gross hack */
@@ -594,13 +646,13 @@
     }
     else {
 	ap_rprintf(r, "%4dM", (size + 524288) / 1048576);
     }
 }
 
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
 static char **create_argv_cmd(pool *p, char *av0, const char *args, char *path)
 {
     register int x, n;
     char **av;
     char *w;
 
@@ -692,22 +744,22 @@
 			 "setrlimit(RLIMIT_VMEM): failed to set memory "
 			 "usage limit");
 	}
     }
 #endif
 
-#ifdef __EMX__
+#ifdef OS2
     {
 	/* Additions by Alec Kloss, to allow exec'ing of scripts under OS/2 */
 	int is_script;
 	char interpreter[2048];	/* hope it's enough for the interpreter path */
 	FILE *program;
 
 	program = fopen(r->filename, "rt");
 	if (!program) {
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server, "fopen(%s) failed",
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r, "fopen(%s) failed",
 			 r->filename);
 	    return (pid);
 	}
 	fgets(interpreter, sizeof(interpreter), program);
 	fclose(program);
 	if (!strncmp(interpreter, "#!", 2)) {
@@ -776,12 +828,13 @@
 	int is_binary = 0;
 	char interpreter[2048];	/* hope it's enough for the interpreter path */
 	FILE *program;
 	int i, sz;
 	char *dot;
 	char *exename;
+        char *quoted_filename;
 	int is_exe = 0;
 	STARTUPINFO si;
 	PROCESS_INFORMATION pi;
         char *pCommand;
         char *pEnvBlock, *pNext;
         int iEnvBlockLen;
@@ -789,113 +842,121 @@
 	memset(&si, 0, sizeof(si));
 	memset(&pi, 0, sizeof(pi));
 
 	interpreter[0] = 0;
 	pid = -1;
 
-	exename = strrchr(r->filename, '/');
-	if (!exename) {
-	    exename = strrchr(r->filename, '\\');
-	}
-	if (!exename) {
-	    exename = r->filename;
-	}
-	else {
-	    exename++;
-	}
-	dot = strrchr(exename, '.');
-	if (dot) {
-	    if (!strcasecmp(dot, ".BAT")
-		|| !strcasecmp(dot, ".CMD")
-		|| !strcasecmp(dot, ".EXE")
-		||  !strcasecmp(dot, ".COM")) {
-		is_exe = 1;
-	    }
-	}
+        quoted_filename = ap_pstrcat(r->pool, "\"", r->filename, "\"", NULL);
 
-	if (!is_exe) {
-	    program = fopen(r->filename, "rb");
-	    if (!program) {
-		ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
-			     "fopen(%s) failed", r->filename);
-		return (pid);
+        if (!shellcmd) {
+            exename = strrchr(r->filename, '/');
+            if (!exename) {
+                exename = strrchr(r->filename, '\\');
 	    }
-	    sz = fread(interpreter, 1, sizeof(interpreter) - 1, program);
-	    if (sz < 0) {
-		ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
-			     "fread of %s failed", r->filename);
-		fclose(program);
-		return (pid);
+            if (!exename) {
+                exename = r->filename;
 	    }
-	    interpreter[sz] = 0;
-	    fclose(program);
-	    if (!strncmp(interpreter, "#!", 2)) {
-		is_script = 1;
-		for (i = 2; i < sizeof(interpreter); i++) {
-		    if ((interpreter[i] == '\r')
-			|| (interpreter[i] == '\n')) {
-			break;
-		    }
+            else {
+                exename++;
+            }
+            dot = strrchr(exename, '.');
+            if (dot) {
+                if (!strcasecmp(dot, ".BAT")
+                    || !strcasecmp(dot, ".CMD")
+                    || !strcasecmp(dot, ".EXE")
+                    ||  !strcasecmp(dot, ".COM")) {
+                    is_exe = 1;
 		}
-		interpreter[i] = 0;
-		for (i = 2; interpreter[i] == ' '; ++i)
-		    ;
-		memmove(interpreter+2,interpreter+i,strlen(interpreter+i)+1);
 	    }
-	    else {
-	        /* Check to see if it's a executable */
-                IMAGE_DOS_HEADER *hdr = (IMAGE_DOS_HEADER*)interpreter;
-                if (hdr->e_magic == IMAGE_DOS_SIGNATURE && hdr->e_cblp < 512) {
-                    is_binary = 1;
+
+            if (!is_exe) {
+                program = fopen(r->filename, "rb");
+                if (!program) {
+                    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
+                                 "fopen(%s) failed", r->filename);
+                    return (pid);
+                }
+                sz = fread(interpreter, 1, sizeof(interpreter) - 1, program);
+                if (sz < 0) {
+                    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
+                                 "fread of %s failed", r->filename);
+                    fclose(program);
+                    return (pid);
+                }
+                interpreter[sz] = 0;
+                fclose(program);
+                if (!strncmp(interpreter, "#!", 2)) {
+                    is_script = 1;
+                    for (i = 2; i < sizeof(interpreter); i++) {
+                        if ((interpreter[i] == '\r')
+                            || (interpreter[i] == '\n')) {
+                            break;
+                        }
+                    }
+                    interpreter[i] = 0;
+                    for (i = 2; interpreter[i] == ' '; ++i)
+                        ;
+                    memmove(interpreter+2,interpreter+i,strlen(interpreter+i)+1);
+                }
+                else {
+                    /* Check to see if it's a executable */
+                    IMAGE_DOS_HEADER *hdr = (IMAGE_DOS_HEADER*)interpreter;
+                    if (hdr->e_magic == IMAGE_DOS_SIGNATURE && hdr->e_cblp < 512) {
+                        is_binary = 1;
+                    }
 		}
 	    }
+            /* Bail out if we haven't figured out what kind of
+             * file this is by now..
+             */
+            if (!is_exe && !is_script && !is_binary) {
+                ap_log_rerror(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r,
+                             "%s is not executable; ensure interpreted scripts have "
+                             "\"#!\" first line", 
+                             r->filename);
+                return (pid);
+            }
 	}
-        /* Bail out if we haven't figured out what kind of
-         * file this is by now..
-         */
-        if (!is_exe && !is_script && !is_binary) {
-            ap_log_error(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r->server,
-		"%s is not executable; ensure interpreted scripts have "
-		"\"#!\" first line", 
-		r->filename);
-            return (pid);
-	}
-
-	/*
-	 * Make child process use hPipeOutputWrite as standard out,
-	 * and make sure it does not show on screen.
-	 */
-	si.cb = sizeof(si);
-	si.dwFlags     = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES;
-	si.wShowWindow = SW_HIDE;
-	si.hStdInput   = pinfo->hPipeInputRead;
-	si.hStdOutput  = pinfo->hPipeOutputWrite;
-	si.hStdError   = pinfo->hPipeErrorWrite;
 
-	if ((!r->args) || (!r->args[0]) || strchr(r->args, '=')) { 
+        if (shellcmd) {
+            char *shell_cmd = "CMD.EXE /C ";
+            OSVERSIONINFO osver;
+            osver.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
+         
+            /*
+             * Use CMD.EXE for NT, COMMAND.COM for WIN95
+             */
+            if (GetVersionEx(&osver)) {
+                if (osver.dwPlatformId != VER_PLATFORM_WIN32_NT) {
+                    shell_cmd = "COMMAND.COM /C ";
+                }
+            }       
+            pCommand = ap_pstrcat(r->pool, shell_cmd, argv0, NULL);
+        }
+ 	else if ((!r->args) || (!r->args[0]) || strchr(r->args, '=')) { 
 	    if (is_exe || is_binary) {
 	        /*
 	         * When the CGI is a straight binary executable, 
 		 * we can run it as is
 	         */
-	        pCommand = r->filename;
+	        pCommand = quoted_filename;
 	    }
 	    else if (is_script) {
                 /* When an interpreter is needed, we need to create 
                  * a command line that has the interpreter name
                  * followed by the CGI script name.  
 		 */
 	        pCommand = ap_pstrcat(r->pool, interpreter + 2, " ", 
-				      r->filename, NULL);
+				      quoted_filename, NULL);
 	    }
 	    else {
 	        /* If not an executable or script, just execute it
                  * from a command prompt.  
                  */
 	        pCommand = ap_pstrcat(r->pool, SHELL_PATH, " /C ", 
-				      r->filename, NULL);
+				      quoted_filename, NULL);
 	    }
 	}
 	else {
 
             /* If we are in this leg, there are some other arguments
              * that we must include in the execution of the CGI.
@@ -935,31 +996,41 @@
            
 	    /*
 	     * The argument list should now be good to use, 
 	     * so now build the command line.
 	     */
 	    if (is_exe || is_binary) {
-	        pCommand = ap_pstrcat(r->pool, r->filename, " ", 
+	        pCommand = ap_pstrcat(r->pool, quoted_filename, " ", 
 				      arguments, NULL);
 	    }
 	    else if (is_script) {
 	        pCommand = ap_pstrcat(r->pool, interpreter + 2, " ", 
-				      r->filename, " ", arguments, NULL);
+				      quoted_filename, " ", arguments, NULL);
 	    }
 	    else {
 	        pCommand = ap_pstrcat(r->pool, SHELL_PATH, " /C ", 
-				      r->filename, " ", arguments, NULL);
+				      quoted_filename, " ", arguments, NULL);
 	    }
 	}
+
+	/*
+	 * Make child process use hPipeOutputWrite as standard out,
+	 * and make sure it does not show on screen.
+	 */
+	si.cb = sizeof(si);
+	si.dwFlags     = STARTF_USESHOWWINDOW | STARTF_USESTDHANDLES;
+	si.wShowWindow = SW_HIDE;
+	si.hStdInput   = pinfo->hPipeInputRead;
+	si.hStdOutput  = pinfo->hPipeOutputWrite;
+	si.hStdError   = pinfo->hPipeErrorWrite;
   
         /*
          * Win32's CreateProcess call requires that the environment
          * be passed in an environment block, a null terminated block of
          * null terminated strings.
-         */
-  
+         */  
         i = 0;
         iEnvBlockLen = 1;
         while (env[i]) {
             iEnvBlockLen += strlen(env[i]) + 1;
             i++;
         }
@@ -1036,13 +1107,13 @@
 
 	    if (pos) {
 		*pos = '\0';
 	    }
 
 	    if ((pw = getpwnam(username)) == NULL) {
-		ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			     "getpwnam: invalid username %s", username);
 		return (pid);
 	    }
 	    execuser = ap_pstrcat(r->pool, "~", pw->pw_name, NULL);
 	    user_gid = pw->pw_gid;
 
@@ -1057,21 +1128,21 @@
 	    else {
 		grpname = gr->gr_name;
 	    }
 	}
 	else {
 	    if ((pw = getpwuid(r->server->server_uid)) == NULL) {
-		ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			     "getpwuid: invalid userid %ld",
 			     (long) r->server->server_uid);
 		return (pid);
 	    }
 	    execuser = ap_pstrdup(r->pool, pw->pw_name);
 
 	    if ((gr = getgrgid(r->server->server_gid)) == NULL) {
-		ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			     "getgrgid: invalid groupid %ld",
 			     (long) r->server->server_gid);
 		return (pid);
 	    }
 	    grpname = gr->gr_name;
 	}
diff -BEr -U 6 apache_1.3.1/src/Makefile.tmpl apache_1.3.2/src/Makefile.tmpl
--- apache_1.3.1/src/Makefile.tmpl	1998-07-13 19:32:29.000000000 +0800
+++ apache_1.3.2/src/Makefile.tmpl	1998-09-17 22:43:21.000000000 +0800
@@ -31,26 +31,26 @@
 	      -o $(TARGET) buildmark.o $(OBJS) $(REGLIB) $(LIBS)
 
 target_shared: libhttpd.ep
 	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
 	      -o $(TARGET) -DSHARED_CORE_BOOTSTRAP main/http_main.c
 
-libhttpd.ep: libhttpd.so
+libhttpd.ep: libhttpd.$(SHLIB_SUFFIX_NAME)
 	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
 	      -o libhttpd.ep -DSHARED_CORE_TIESTATIC main/http_main.c \
 		  -L. -lhttpd $(LIBS)
 
-libhttpd.so: subdirs modules.o
+libhttpd.$(SHLIB_SUFFIX_NAME): subdirs modules.o
 	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c
-	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o libhttpd.so buildmark.o $(OBJS) $(REGLIB)
+	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o libhttpd.$(SHLIB_SUFFIX_NAME) buildmark.o $(OBJS) $(REGLIB)
 	@if [ ".$(SHLIB_SUFFIX_LIST)" != . ]; then \
-		rm -f libhttpd.so.*; \
+		rm -f libhttpd.$(SHLIB_SUFFIX_NAME).*; \
 		for suffix in $(SHLIB_SUFFIX_LIST) ""; do \
 			[ ".$$suffix" = . ] && continue; \
-		    echo "ln libhttpd.so libhttpd.so.$$suffix"; \
-		    ln libhttpd.so libhttpd.so.$$suffix; \
+		    echo "ln libhttpd.$(SHLIB_SUFFIX_NAME) libhttpd.$(SHLIB_SUFFIX_NAME).$$suffix"; \
+		    ln libhttpd.$(SHLIB_SUFFIX_NAME) libhttpd.$(SHLIB_SUFFIX_NAME).$$suffix; \
 		done; \
 	fi
 
 subdirs:
 	@for i in $(SUBDIRS); do \
 		echo "===> $(SDP)$$i"; \
@@ -63,21 +63,21 @@
 support-dir:
 	@echo "===> $(SDP)support"; \
 	cd support; $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)'; \
 	echo "<=== $(SDP)support"
 
 clean:
-	rm -f $(TARGET) libhttpd.* *.o
+	-rm -f $(TARGET) libhttpd.* *.o
 	@for i in $(SUBDIRS); do \
 		echo "===> $(SDP)$$i"; \
 		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' $@ ) || exit 1; \
 		echo "<=== $(SDP)$$i"; \
 	done
 
 distclean:
-	-rm -f $(TARGET) *.o
+	-rm -f $(TARGET) libhttpd.* *.o
 	@for i in $(SUBDIRS); do \
 		echo "===> $(SDP)$$i"; \
 		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' $@ ) || exit 1; \
 		echo "<=== $(SDP)$$i"; \
 	done
 	-rm -f include/ap_config_auto.h
@@ -105,16 +105,17 @@
 	for i in $(SUBDIRS); do \
 	    ( cd $$i && $(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' depend ) || exit 1; \
 	done
 
 #Dependencies
 
-$(OBJS): Makefile
+$(OBJS): Makefile subdirs
 
 # DO NOT REMOVE
-buildmark.o: buildmark.c include/ap_config.h include/ap_config_auto.h \
- os/unix/os.h include/ap_ctype.h include/hsregex.h include/httpd.h \
- include/alloc.h include/buff.h include/ap.h include/util_uri.h
-modules.o: modules.c include/httpd.h include/ap_config.h \
+buildmark.o: buildmark.c include/ap_config.h include/ap_mmn.h \
  include/ap_config_auto.h os/unix/os.h include/ap_ctype.h \
- include/hsregex.h include/alloc.h include/buff.h include/ap.h \
- include/util_uri.h include/http_config.h
+ include/hsregex.h include/httpd.h include/alloc.h include/buff.h \
+ include/ap.h include/util_uri.h
+modules.o: modules.c include/httpd.h include/ap_config.h \
+ include/ap_mmn.h include/ap_config_auto.h os/unix/os.h \
+ include/ap_ctype.h include/hsregex.h include/alloc.h include/buff.h \
+ include/ap.h include/util_uri.h include/http_config.h
diff -BEr -U 6 apache_1.3.1/src/modules/example/Makefile.tmpl apache_1.3.2/src/modules/example/Makefile.tmpl
--- apache_1.3.1/src/modules/example/Makefile.tmpl	1998-07-13 19:32:44.000000000 +0800
+++ apache_1.3.2/src/modules/example/Makefile.tmpl	1998-09-07 14:59:33.000000000 +0800
@@ -2,13 +2,14 @@
 #Dependencies
 
 $(OBJS) $(OBJS_PIC): Makefile
 
 # DO NOT REMOVE
 mod_example.o: mod_example.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_main.h $(INCDIR)/http_protocol.h \
  $(INCDIR)/util_script.h
diff -BEr -U 6 apache_1.3.1/src/modules/example/mod_example.c apache_1.3.2/src/modules/example/mod_example.c
--- apache_1.3.1/src/modules/example/mod_example.c	1998-06-15 05:10:25.000000000 +0800
+++ apache_1.3.2/src/modules/example/mod_example.c	1998-08-31 21:50:04.000000000 +0800
@@ -1131,11 +1131,19 @@
     example_check_user_id,      /* [5] check/validate user_id */
     example_auth_checker,       /* [6] check user_id is valid *here* */
     example_access_checker,     /* [4] check access by host address */
     example_type_checker,       /* [7] MIME type checker/setter */
     example_fixer_upper,        /* [8] fixups */
     example_logger,             /* [10] logger */
+#if MODULE_MAGIC_NUMBER >= 19970103
     example_header_parser,      /* [3] header parser */
+#endif
+#if MODULE_MAGIC_NUMBER >= 19970719
     example_child_init,         /* process initializer */
+#endif
+#if MODULE_MAGIC_NUMBER >= 19970728
     example_child_exit,         /* process exit/cleanup */
+#endif
+#if MODULE_MAGIC_NUMBER >= 19970902
     example_post_read_request   /* [1] post read_request handling */
+#endif
 };
diff -BEr -U 6 apache_1.3.1/src/modules/experimental/Makefile.tmpl apache_1.3.2/src/modules/experimental/Makefile.tmpl
--- apache_1.3.1/src/modules/experimental/Makefile.tmpl	1998-07-13 19:32:44.000000000 +0800
+++ apache_1.3.2/src/modules/experimental/Makefile.tmpl	1998-09-07 14:59:34.000000000 +0800
@@ -2,12 +2,13 @@
 #Dependencies
 
 $(OBJS) $(OBJS_PIC): Makefile
 
 # DO NOT REMOVE
 mod_mmap_static.o: mod_mmap_static.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_log.h $(INCDIR)/http_protocol.h \
  $(INCDIR)/http_request.h $(INCDIR)/http_core.h
diff -BEr -U 6 apache_1.3.1/src/modules/proxy/ApacheModuleProxy.mak apache_1.3.2/src/modules/proxy/ApacheModuleProxy.mak
--- apache_1.3.1/src/modules/proxy/ApacheModuleProxy.mak	1998-05-30 02:20:58.000000000 +0800
+++ apache_1.3.2/src/modules/proxy/ApacheModuleProxy.mak	1998-08-09 22:33:13.000000000 +0800
@@ -27,16 +27,12 @@
 !IF "$(OS)" == "Windows_NT"
 NULL=
 !ELSE 
 NULL=nul
 !ENDIF 
 
-CPP=cl.exe
-MTL=midl.exe
-RSC=rc.exe
-
 !IF  "$(CFG)" == "ApacheModuleProxy - Win32 Release"
 
 OUTDIR=.\Release
 INTDIR=.\Release
 # Begin Custom Macros
 OutDir=.\.\Release
@@ -64,18 +60,52 @@
 	-@erase "$(OUTDIR)\ApacheModuleProxy.exp"
 	-@erase "$(OUTDIR)\ApacheModuleProxy.lib"
 
 "$(OUTDIR)" :
     if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
 
+CPP=cl.exe
 CPP_PROJ=/nologo /MD /W3 /GX /O2 /I "..\..\include" /D "NDEBUG" /D "WIN32" /D\
  "_WINDOWS" /D "SHARED_MODULE" /Fp"$(INTDIR)\ApacheModuleProxy.pch" /YX\
  /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 
 CPP_OBJS=.\Release/
 CPP_SBRS=.
+
+.c{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cpp{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cxx{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.c{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cpp{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cxx{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+MTL=midl.exe
 MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32 
+RSC=rc.exe
 BSC32=bscmake.exe
 BSC32_FLAGS=/nologo /o"$(OUTDIR)\ApacheModuleProxy.bsc" 
 BSC32_SBRS= \
 	
 LINK32=link.exe
 LINK32_FLAGS=..\..\CoreR\ApacheCore.lib kernel32.lib user32.lib gdi32.lib\
@@ -129,42 +159,18 @@
 	-@erase "$(OUTDIR)\ApacheModuleProxy.lib"
 	-@erase "$(OUTDIR)\ApacheModuleProxy.pdb"
 
 "$(OUTDIR)" :
     if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
 
-CPP_PROJ=/nologo /MDd /W4 /Gm /GX /Zi /Od /I "..\..\include" /D "_DEBUG" /D\
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm /GX /Zi /Od /I "..\..\include" /D "_DEBUG" /D\
  "WIN32" /D "_WINDOWS" /D "SHARED_MODULE" /Fp"$(INTDIR)\ApacheModuleProxy.pch"\
  /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 
 CPP_OBJS=.\Debug/
 CPP_SBRS=.
-MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32 
-BSC32=bscmake.exe
-BSC32_FLAGS=/nologo /o"$(OUTDIR)\ApacheModuleProxy.bsc" 
-BSC32_SBRS= \
-	
-LINK32=link.exe
-LINK32_FLAGS=..\..\CoreD\ApacheCore.lib kernel32.lib user32.lib gdi32.lib\
- winspool.lib comdlg32.lib advapi32.lib shell32.lib wsock32.lib /nologo\
- /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\ApacheModuleProxy.pdb"\
- /debug /machine:I386 /out:"$(OUTDIR)\ApacheModuleProxy.dll"\
- /implib:"$(OUTDIR)\ApacheModuleProxy.lib" 
-LINK32_OBJS= \
-	"$(INTDIR)\mod_proxy.obj" \
-	"$(INTDIR)\proxy_cache.obj" \
-	"$(INTDIR)\proxy_connect.obj" \
-	"$(INTDIR)\proxy_ftp.obj" \
-	"$(INTDIR)\proxy_http.obj" \
-	"$(INTDIR)\proxy_util.obj"
-
-"$(OUTDIR)\ApacheModuleProxy.dll" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
-    $(LINK32) @<<
-  $(LINK32_FLAGS) $(LINK32_OBJS)
-<<
-
-!ENDIF 
 
 .c{$(CPP_OBJS)}.obj::
    $(CPP) @<<
    $(CPP_PROJ) $< 
 <<
 
@@ -190,54 +196,78 @@
 
 .cxx{$(CPP_SBRS)}.sbr::
    $(CPP) @<<
    $(CPP_PROJ) $< 
 <<
 
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32 
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\ApacheModuleProxy.bsc" 
+BSC32_SBRS= \
+	
+LINK32=link.exe
+LINK32_FLAGS=..\..\CoreD\ApacheCore.lib kernel32.lib user32.lib gdi32.lib\
+ winspool.lib comdlg32.lib advapi32.lib shell32.lib wsock32.lib /nologo\
+ /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\ApacheModuleProxy.pdb"\
+ /debug /machine:I386 /out:"$(OUTDIR)\ApacheModuleProxy.dll"\
+ /implib:"$(OUTDIR)\ApacheModuleProxy.lib" 
+LINK32_OBJS= \
+	"$(INTDIR)\mod_proxy.obj" \
+	"$(INTDIR)\proxy_cache.obj" \
+	"$(INTDIR)\proxy_connect.obj" \
+	"$(INTDIR)\proxy_ftp.obj" \
+	"$(INTDIR)\proxy_http.obj" \
+	"$(INTDIR)\proxy_util.obj"
+
+"$(OUTDIR)\ApacheModuleProxy.dll" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+
+!ENDIF 
+
 
 !IF "$(CFG)" == "ApacheModuleProxy - Win32 Release" || "$(CFG)" ==\
  "ApacheModuleProxy - Win32 Debug"
 SOURCE=.\mod_proxy.c
 
 !IF  "$(CFG)" == "ApacheModuleProxy - Win32 Release"
 
 DEP_CPP_MOD_P=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_protocol.h"\
+	"..\..\include\http_request.h"\
 	"..\..\include\http_vhost.h"\
 	"..\..\include\httpd.h"\
 	"..\..\include\util_uri.h"\
 	"..\..\os\win32\os.h"\
 	"..\..\os\win32\readdir.h"\
 	".\mod_proxy.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_P=\
-	"..\..\include\ebcdic.h"\
-	"..\..\include\os.h"\
-	"..\..\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_proxy.obj" : $(SOURCE) $(DEP_CPP_MOD_P) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ApacheModuleProxy - Win32 Debug"
 
 DEP_CPP_MOD_P=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_protocol.h"\
 	"..\..\include\http_vhost.h"\
@@ -257,56 +287,50 @@
 
 !IF  "$(CFG)" == "ApacheModuleProxy - Win32 Release"
 
 DEP_CPP_PROXY=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
+	"..\..\include\ap_md5.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
 	"..\..\include\httpd.h"\
-	"..\..\include\ap_md5.h"\
 	"..\..\include\multithread.h"\
 	"..\..\include\util_date.h"\
 	"..\..\include\util_uri.h"\
 	"..\..\os\win32\os.h"\
 	"..\..\os\win32\readdir.h"\
 	".\mod_proxy.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	{$(INCLUDE)}"sys\utime.h"\
-	
-NODEP_CPP_PROXY=\
-	"..\..\include\ebcdic.h"\
-	"..\..\include\os.h"\
-	"..\..\include\sfio.h"\
 	
 
 "$(INTDIR)\proxy_cache.obj" : $(SOURCE) $(DEP_CPP_PROXY) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ApacheModuleProxy - Win32 Debug"
 
 DEP_CPP_PROXY=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
+	"..\..\include\ap_md5.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
 	"..\..\include\httpd.h"\
-	"..\..\include\ap_md5.h"\
 	"..\..\include\multithread.h"\
 	"..\..\include\util_date.h"\
 	"..\..\include\util_uri.h"\
 	"..\..\os\win32\os.h"\
 	"..\..\os\win32\readdir.h"\
 	".\mod_proxy.h"\
@@ -321,44 +345,39 @@
 
 !IF  "$(CFG)" == "ApacheModuleProxy - Win32 Release"
 
 DEP_CPP_PROXY_=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
 	"..\..\include\httpd.h"\
 	"..\..\include\util_uri.h"\
 	"..\..\os\win32\os.h"\
 	"..\..\os\win32\readdir.h"\
 	".\mod_proxy.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_PROXY_=\
-	"..\..\include\ebcdic.h"\
-	"..\..\include\os.h"\
-	"..\..\include\sfio.h"\
 	
 
 "$(INTDIR)\proxy_connect.obj" : $(SOURCE) $(DEP_CPP_PROXY_) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ApacheModuleProxy - Win32 Debug"
 
 DEP_CPP_PROXY_=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
@@ -378,47 +397,43 @@
 
 !IF  "$(CFG)" == "ApacheModuleProxy - Win32 Release"
 
 DEP_CPP_PROXY_F=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
 	"..\..\include\httpd.h"\
 	"..\..\include\util_uri.h"\
 	"..\..\os\win32\os.h"\
 	"..\..\os\win32\readdir.h"\
 	".\mod_proxy.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_PROXY_F=\
-	"..\..\include\ebcdic.h"\
-	"..\..\include\os.h"\
-	"..\..\include\sfio.h"\
 	
 
 "$(INTDIR)\proxy_ftp.obj" : $(SOURCE) $(DEP_CPP_PROXY_F) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ApacheModuleProxy - Win32 Debug"
 
 DEP_CPP_PROXY_F=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
+	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
 	"..\..\include\httpd.h"\
 	"..\..\include\util_uri.h"\
 	"..\..\os\win32\os.h"\
 	"..\..\os\win32\readdir.h"\
@@ -434,14 +449,15 @@
 
 !IF  "$(CFG)" == "ApacheModuleProxy - Win32 Release"
 
 DEP_CPP_PROXY_H=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
@@ -449,31 +465,25 @@
 	"..\..\include\httpd.h"\
 	"..\..\include\util_date.h"\
 	"..\..\include\util_uri.h"\
 	"..\..\os\win32\os.h"\
 	"..\..\os\win32\readdir.h"\
 	".\mod_proxy.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_PROXY_H=\
-	"..\..\include\ebcdic.h"\
-	"..\..\include\os.h"\
-	"..\..\include\sfio.h"\
 	
 
 "$(INTDIR)\proxy_http.obj" : $(SOURCE) $(DEP_CPP_PROXY_H) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ApacheModuleProxy - Win32 Debug"
 
 DEP_CPP_PROXY_H=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
@@ -495,54 +505,49 @@
 
 !IF  "$(CFG)" == "ApacheModuleProxy - Win32 Release"
 
 DEP_CPP_PROXY_U=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
+	"..\..\include\ap_md5.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
 	"..\..\include\httpd.h"\
-	"..\..\include\ap_md5.h"\
 	"..\..\include\multithread.h"\
 	"..\..\include\util_uri.h"\
 	"..\..\os\win32\os.h"\
 	"..\..\os\win32\readdir.h"\
 	".\mod_proxy.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_PROXY_U=\
-	"..\..\include\ebcdic.h"\
-	"..\..\include\os.h"\
-	"..\..\include\sfio.h"\
 	
 
 "$(INTDIR)\proxy_util.obj" : $(SOURCE) $(DEP_CPP_PROXY_U) "$(INTDIR)"
 
 
 !ELSEIF  "$(CFG)" == "ApacheModuleProxy - Win32 Debug"
 
 DEP_CPP_PROXY_U=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
+	"..\..\include\ap_md5.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\explain.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
 	"..\..\include\httpd.h"\
-	"..\..\include\ap_md5.h"\
 	"..\..\include\multithread.h"\
 	"..\..\include\util_uri.h"\
 	"..\..\os\win32\os.h"\
 	"..\..\os\win32\readdir.h"\
 	".\mod_proxy.h"\
 	
diff -BEr -U 6 apache_1.3.1/src/modules/proxy/Makefile.tmpl apache_1.3.2/src/modules/proxy/Makefile.tmpl
--- apache_1.3.1/src/modules/proxy/Makefile.tmpl	1998-07-13 19:32:45.000000000 +0800
+++ apache_1.3.2/src/modules/proxy/Makefile.tmpl	1998-09-07 14:59:34.000000000 +0800
@@ -16,13 +16,13 @@
 	rm -f $@
 	ar cr $@ $(OBJS)
 	$(RANLIB) $@
 
 libproxy.so: $(OBJS_PIC)
 	rm -f $@
-	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o $@ $(OBJS_PIC)
+	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o $@ $(OBJS_PIC) $(LIBS_SHLIB)
 
 .SUFFIXES: .o .lo
 
 .c.o:
 	$(CC) -c $(INCLUDES) $(CFLAGS) $<
 
@@ -50,51 +50,59 @@
 #Dependencies
 
 $(OBJS) $(OBJS_PIC): Makefile
 
 # DO NOT REMOVE
 mod_proxy.o: mod_proxy.c mod_proxy.h $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
- $(INCDIR)/http_log.h $(INCDIR)/http_vhost.h
+ $(INCDIR)/http_log.h $(INCDIR)/http_vhost.h \
+ $(INCDIR)/http_request.h
 proxy_cache.o: proxy_cache.c mod_proxy.h $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
  $(INCDIR)/http_log.h $(INCDIR)/http_main.h \
  $(INCDIR)/util_date.h $(INCDIR)/multithread.h \
  $(INCDIR)/ap_md5.h
 proxy_connect.o: proxy_connect.c mod_proxy.h $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
  $(INCDIR)/http_log.h $(INCDIR)/http_main.h
 proxy_ftp.o: proxy_ftp.c mod_proxy.h $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
  $(INCDIR)/http_main.h $(INCDIR)/http_log.h
 proxy_http.o: proxy_http.c mod_proxy.h $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
  $(INCDIR)/http_log.h $(INCDIR)/http_main.h \
  $(INCDIR)/http_core.h $(INCDIR)/util_date.h
 proxy_util.o: proxy_util.c mod_proxy.h $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
  $(INCDIR)/http_main.h $(INCDIR)/ap_md5.h \
- $(INCDIR)/multithread.h $(INCDIR)/http_log.h
+ $(INCDIR)/multithread.h $(INCDIR)/http_log.h \
+ $(INCDIR)/util_date.h
diff -BEr -U 6 apache_1.3.1/src/modules/proxy/mod_proxy.c apache_1.3.2/src/modules/proxy/mod_proxy.c
--- apache_1.3.1/src/modules/proxy/mod_proxy.c	1998-07-10 03:45:55.000000000 +0800
+++ apache_1.3.2/src/modules/proxy/mod_proxy.c	1998-09-09 05:15:55.000000000 +0800
@@ -53,25 +53,29 @@
  * For more information on the Apache Group and the Apache HTTP server
  * project, please see <http://www.apache.org/>.
  *
  */
 
 #include "mod_proxy.h"
+
+#define CORE_PRIVATE
+
 #include "http_log.h"
 #include "http_vhost.h"
+#include "http_request.h"
 
 /* Some WWW schemes and their default ports; this is basically /etc/services */
 /* This will become global when the protocol abstraction comes */
 static struct proxy_services defports[] =
 {
+    {"http", DEFAULT_HTTP_PORT},
     {"ftp", DEFAULT_FTP_PORT},
+    {"https", DEFAULT_HTTPS_PORT},
     {"gopher", DEFAULT_GOPHER_PORT},
-    {"http", DEFAULT_HTTP_PORT},
     {"nntp", DEFAULT_NNTP_PORT},
     {"wais", DEFAULT_WAIS_PORT},
-    {"https", DEFAULT_HTTPS_PORT},
     {"snews", DEFAULT_SNEWS_PORT},
     {"prospero", DEFAULT_PROSPERO_PORT},
     {NULL, -1}			/* unknown port */
 };
 
 /*
@@ -264,13 +268,13 @@
 				     domain, NULL);
     nuri = ap_unparse_uri_components(r->pool,
 				  &r->parsed_uri,
 				  UNP_REVEALPASSWORD);
 
     ap_table_set(r->headers_out, "Location", nuri);
-    ap_log_error(APLOG_MARK, APLOG_INFO|APLOG_NOERRNO, r->server,
+    ap_log_rerror(APLOG_MARK, APLOG_INFO|APLOG_NOERRNO, r,
 		"Domain missing: %s sent to %s%s%s", r->uri,
 		ap_unparse_uri_components(r->pool, &r->parsed_uri,
 		      UNP_OMITUSERINFO),
 		ref ? " from " : "", ref ? ref : "");
 
     return HTTP_MOVED_PERMANENTLY;
@@ -285,18 +289,35 @@
     void *sconf = r->server->module_config;
     proxy_server_conf *conf =
     (proxy_server_conf *) ap_get_module_config(sconf, &proxy_module);
     array_header *proxies = conf->proxies;
     struct proxy_remote *ents = (struct proxy_remote *) proxies->elts;
     int i, rc;
-    struct cache_req *cr;
+    cache_req *cr;
     int direct_connect = 0;
+    const char *maxfwd_str;
 
     if (!r->proxyreq || strncmp(r->filename, "proxy:", 6) != 0)
 	return DECLINED;
 
+    if (r->method_number == M_TRACE &&
+	(maxfwd_str = ap_table_get(r->headers_in, "Max-Forwards")) != NULL) {
+	int maxfwd = strtol(maxfwd_str, NULL, 10);
+	if (maxfwd < 1) {
+	    int access_status;
+	    r->proxyreq = 0;
+	    if ((access_status = ap_send_http_trace(r)))
+		ap_die(access_status, r);
+	    else
+		ap_finalize_request_protocol(r);
+	    return OK;
+	}
+	ap_table_setn(r->headers_in, "Max-Forwards", 
+		      ap_psprintf(r->pool, "%d", (maxfwd > 0) ? maxfwd-1 : 0));
+    }
+
     if ((rc = ap_setup_client_block(r, REQUEST_CHUNKED_ERROR)))
 	return rc;
 
     url = r->filename + 6;
     p = strchr(url, ':');
     if (p == NULL)
@@ -306,13 +327,13 @@
     if (rc != DECLINED)
 	return rc;
 
     /* If the host doesn't have a domain name, add one and redirect. */
     if (conf->domain != NULL) {
 	rc = proxy_needsdomain(r, url, conf->domain);
-	if (is_HTTP_REDIRECT(rc))
+	if (ap_is_HTTP_REDIRECT(rc))
 	    return HTTP_MOVED_PERMANENTLY;
     }
 
     *p = '\0';
     scheme = ap_pstrdup(r->pool, url);
     *p = ':';
@@ -326,13 +347,13 @@
 	struct dirconn_entry *list = (struct dirconn_entry *) conf->dirconn->elts;
 
 	for (direct_connect = ii = 0; ii < conf->dirconn->nelts && !direct_connect; ii++) {
 	    direct_connect = list[ii].matcher(&list[ii], r);
 	}
 #if DEBUGGING
-	ap_log_error(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, r,
 		     (direct_connect) ? "NoProxy for %s" : "UseProxy for %s",
 		     r->uri);
 #endif
     }
 
 /* firstly, try a proxy, unless a NoProxy directive is active */
@@ -390,13 +411,15 @@
     ps->proxies = ap_make_array(p, 10, sizeof(struct proxy_remote));
     ps->aliases = ap_make_array(p, 10, sizeof(struct proxy_alias));
     ps->raliases = ap_make_array(p, 10, sizeof(struct proxy_alias));
     ps->noproxies = ap_make_array(p, 10, sizeof(struct noproxy_entry));
     ps->dirconn = ap_make_array(p, 10, sizeof(struct dirconn_entry));
     ps->nocaches = ap_make_array(p, 10, sizeof(struct nocache_entry));
+    ps->allowed_connect_ports = ap_make_array(p, 10, sizeof(int));
     ps->domain = NULL;
+    ps->viaopt = via_off; /* initially backward compatible with 1.3.1 */
     ps->req = 0;
 
     ps->cache.root = NULL;
     ps->cache.space = DEFAULT_CACHE_SPACE;
     ps->cache.maxexpire = DEFAULT_CACHE_MAXEXPIRE;
     ps->cache.defaultexpire = DEFAULT_CACHE_EXPIRE;
@@ -509,12 +532,31 @@
 	else
 	    new->addr.s_addr = 0;
     }
     return NULL;
 }
 
+/*
+ * Set the ports CONNECT can use
+ */
+static const char *
+    set_allowed_ports(cmd_parms *parms, void *dummy, char *arg)
+{
+    server_rec *s = parms->server;
+    proxy_server_conf *conf =
+      ap_get_module_config(s->module_config, &proxy_module);
+    int *New;
+
+    if (!isdigit(arg[0]))
+	return "AllowCONNECT: port number must be numeric";
+
+    New = ap_push_array(conf->allowed_connect_ports);
+    *New = atoi(arg);
+    return NULL;
+}
+
 /* Similar to set_proxy_exclude(), but defining directly connected hosts,
  * which should never be accessed via the configured ProxyRemote servers
  */
 static const char *
      set_proxy_dirconn(cmd_parms *parms, void *dummy, char *arg)
 {
@@ -756,12 +798,34 @@
 
     if (s > 0)
       psf->cache.cache_completion = ((float)s / 100);
     return NULL;    
 }
 
+static const char*
+    set_via_opt(cmd_parms *parms, void *dummy, char *arg)
+{
+    proxy_server_conf *psf =
+    ap_get_module_config(parms->server->module_config, &proxy_module);
+
+    if (strcasecmp(arg, "Off") == 0)
+        psf->viaopt = via_off;
+    else if (strcasecmp(arg, "On") == 0)
+        psf->viaopt = via_on;
+    else if (strcasecmp(arg, "Block") == 0)
+        psf->viaopt = via_block;
+    else if (strcasecmp(arg, "Full") == 0)
+        psf->viaopt = via_full;
+    else {
+	return "ProxyVia must be one of: "
+               "off | on | full | block";
+    }
+
+    return NULL;    
+}
+
 static const handler_rec proxy_handlers[] =
 {
     {"proxy-server", proxy_handler},
     {NULL}
 };
 
@@ -780,12 +844,14 @@
     {"ProxyReceiveBufferSize", set_recv_buffer_size, NULL, RSRC_CONF, TAKE1,
      "Receive buffer size for outgoing HTTP and FTP connections in bytes"},
     {"NoProxy", set_proxy_dirconn, NULL, RSRC_CONF, ITERATE,
      "A list of domains, hosts, or subnets to which the proxy will connect directly"},
     {"ProxyDomain", set_proxy_domain, NULL, RSRC_CONF, TAKE1,
      "The default intranet domain name (in absence of a domain in the URL)"},
+    {"AllowCONNECT", set_allowed_ports, NULL, RSRC_CONF, ITERATE,
+     "A list of ports which CONNECT may connect to"},
     {"CacheRoot", set_cache_root, NULL, RSRC_CONF, TAKE1,
      "The directory to store cache files"},
     {"CacheSize", set_cache_size, NULL, RSRC_CONF, TAKE1,
      "The maximum disk space used by the cache in Kb"},
     {"CacheMaxExpire", set_cache_maxex, NULL, RSRC_CONF, TAKE1,
      "The maximum time in hours to cache a document"},
@@ -800,12 +866,14 @@
     {"CacheDirLength", set_cache_dirlength, NULL, RSRC_CONF, TAKE1,
      "The number of characters in subdirectory names"},
     {"NoCache", set_cache_exclude, NULL, RSRC_CONF, ITERATE,
      "A list of names, hosts or domains for which caching is *not* provided"},
     {"CacheForceCompletion", set_cache_completion, NULL, RSRC_CONF, TAKE1,
      "Force a http cache completion after this percentage is loaded"},
+    {"ProxyVia", set_via_opt, NULL, RSRC_CONF, TAKE1,
+     "Configure Via: proxy header header to one of: on | off | block | full"},
     {NULL}
 };
 
 module MODULE_VAR_EXPORT proxy_module =
 {
     STANDARD_MODULE_STUFF,
diff -BEr -U 6 apache_1.3.1/src/modules/proxy/mod_proxy.h apache_1.3.2/src/modules/proxy/mod_proxy.h
--- apache_1.3.1/src/modules/proxy/mod_proxy.h	1998-07-10 03:45:56.000000000 +0800
+++ apache_1.3.2/src/modules/proxy/mod_proxy.h	1998-09-09 05:15:56.000000000 +0800
@@ -52,12 +52,15 @@
  * Supercomputing Applications, University of Illinois, Urbana-Champaign.
  * For more information on the Apache Group and the Apache HTTP server
  * project, please see <http://www.apache.org/>.
  *
  */
 
+#ifndef MOD_PROXY_H
+#define MOD_PROXY_H 
+
 /*
  * Main include file for the Apache proxy
  */
 
 /*
 
@@ -204,24 +207,31 @@
     array_header *proxies;
     array_header *aliases;
     array_header *raliases;
     array_header *noproxies;
     array_header *dirconn;
     array_header *nocaches;
+    array_header *allowed_connect_ports;
     char *domain;		/* domain name to use in absence of a domain name in the request */
     int req;			/* true if proxy requests are enabled */
+    enum {
+      via_off,
+      via_on,
+      via_block,
+      via_full
+    } viaopt;                   /* how to deal with proxy Via: headers */
     size_t recv_buffer_size;
 } proxy_server_conf;
 
 struct hdr_entry {
     const char *field;
     const char *value;
 };
 
 /* caching information about a request */
-struct cache_req {
+typedef struct {
     request_rec *req;		/* the request */
     char *url;			/* the URL requested */
     char *filename;		/* name of the cache file, or NULL if no cache */
     char *tempfile;		/* name of the temporary file, of NULL if not caching */
     time_t ims;			/* if-modified-since date of request; -1 if no header */
     BUFF *fp;			/* the cache file descriptor if the file is cached
@@ -234,67 +244,73 @@
     off_t len;			/* content length */
     char *protocol;		/* Protocol, and major/minor number, e.g. HTTP/1.1 */
     int status;			/* the status of the cached file */
     unsigned int written;	/* total *content* bytes written to cache */
     float cache_completion;	/* specific to this request */
     char *resp_line;		/* the whole status like (protocol, code + message) */
-    array_header *hdrs;		/* the HTTP headers of the file */
+    table *hdrs;		/* the HTTP headers of the file */
+} cache_req;
+
+/* Additional information passed to the function called by ap_table_do() */
+struct tbl_do_args {
+    request_rec *req;
+    cache_req *cache;
 };
 
 /* Function prototypes */
 
 /* proxy_cache.c */
 
-void ap_proxy_cache_tidy(struct cache_req *c);
+void ap_proxy_cache_tidy(cache_req *c);
 int ap_proxy_cache_check(request_rec *r, char *url, struct cache_conf *conf,
-		      struct cache_req **cr);
-int ap_proxy_cache_update(struct cache_req *c, array_header *resp_hdrs,
+		      cache_req **cr);
+int ap_proxy_cache_update(cache_req *c, table *resp_hdrs,
 		       const int is_HTTP1, int nocache);
 void ap_proxy_garbage_coll(request_rec *r);
 
 /* proxy_connect.c */
 
-int ap_proxy_connect_handler(request_rec *r, struct cache_req *c, char *url,
+int ap_proxy_connect_handler(request_rec *r, cache_req *c, char *url,
 			  const char *proxyhost, int proxyport);
 
 /* proxy_ftp.c */
 
 int ap_proxy_ftp_canon(request_rec *r, char *url);
-int ap_proxy_ftp_handler(request_rec *r, struct cache_req *c, char *url);
+int ap_proxy_ftp_handler(request_rec *r, cache_req *c, char *url);
 
 /* proxy_http.c */
 
 int ap_proxy_http_canon(request_rec *r, char *url, const char *scheme,
 		     int def_port);
-int ap_proxy_http_handler(request_rec *r, struct cache_req *c, char *url,
+int ap_proxy_http_handler(request_rec *r, cache_req *c, char *url,
 		       const char *proxyhost, int proxyport);
 
 /* proxy_util.c */
 
 int ap_proxy_hex2c(const char *x);
 void ap_proxy_c2hex(int ch, char *x);
 char *ap_proxy_canonenc(pool *p, const char *x, int len, enum enctype t,
 		     int isenc);
 char *ap_proxy_canon_netloc(pool *p, char **const urlp, char **userp,
 			 char **passwordp, char **hostp, int *port);
 const char *ap_proxy_date_canon(pool *p, const char *x);
-array_header *ap_proxy_read_headers(pool *p, char *buffer, int size, BUFF *f);
-long int ap_proxy_send_fb(BUFF *f, request_rec *r, BUFF *f2, struct cache_req *c);
-struct hdr_entry *ap_proxy_get_header(array_header *hdrs_arr, const char *name);
-struct hdr_entry *ap_proxy_add_header(array_header *hdrs_arr, const char *field,
-				      const char *value, int rep);
-void ap_proxy_del_header(array_header *hdrs_arr, const char *field);
-void ap_proxy_send_headers(request_rec *r, const char *respline,
-			array_header *hdrs_arr);
+table *ap_proxy_read_headers(request_rec *r, char *buffer, int size, BUFF *f);
+long int ap_proxy_send_fb(BUFF *f, request_rec *r, cache_req *c);
+void ap_proxy_send_headers(request_rec *r, const char *respline, table *hdrs);
 int ap_proxy_liststr(const char *list, const char *val);
 void ap_proxy_hash(const char *it, char *val, int ndepth, int nlength);
 int ap_proxy_hex2sec(const char *x);
 void ap_proxy_sec2hex(int t, char *y);
-BUFF *ap_proxy_cache_error(struct cache_req *r);
+cache_req *ap_proxy_cache_error(cache_req *r);
 int ap_proxyerror(request_rec *r, const char *message);
 const char *ap_proxy_host2addr(const char *host, struct hostent *reqhp);
 int ap_proxy_is_ipaddr(struct dirconn_entry *This, pool *p);
 int ap_proxy_is_domainname(struct dirconn_entry *This, pool *p);
 int ap_proxy_is_hostname(struct dirconn_entry *This, pool *p);
 int ap_proxy_is_word(struct dirconn_entry *This, pool *p);
 int ap_proxy_doconnect(int sock, struct sockaddr_in *addr, request_rec *r);
 int ap_proxy_garbage_init(server_rec *, pool *);
+/* This function is called by ap_table_do() for all header lines */
+int ap_proxy_send_hdr_line(void *p, const char *key, const char *value);
+unsigned ap_proxy_bputs2(const char *data, BUFF *client, cache_req *cache);
+
+#endif /*MOD_PROXY_H*/
diff -BEr -U 6 apache_1.3.1/src/modules/proxy/proxy_cache.c apache_1.3.2/src/modules/proxy/proxy_cache.c
--- apache_1.3.1/src/modules/proxy/proxy_cache.c	1998-07-10 03:45:56.000000000 +0800
+++ apache_1.3.2/src/modules/proxy/proxy_cache.c	1998-09-01 03:51:59.000000000 +0800
@@ -115,13 +115,13 @@
 }
 
 
 static int sub_garbage_coll(request_rec *r, array_header *files,
 			    const char *cachedir, const char *cachesubdir);
 static void help_proxy_garbage_coll(request_rec *r);
-#if !defined(WIN32) && !defined(MPE) && !defined(__EMX__)
+#if !defined(WIN32) && !defined(MPE) && !defined(OS2)
 static void detached_proxy_garbage_coll(request_rec *r);
 #endif
 
 
 void ap_proxy_garbage_coll(request_rec *r)
 {
@@ -134,13 +134,13 @@
     }
     else
 	inside = 1;
     (void) ap_release_mutex(garbage_mutex);
 
     ap_block_alarms();		/* avoid SIGALRM on big cache cleanup */
-#if !defined(WIN32) && !defined(MPE) && !defined(__EMX__)
+#if !defined(WIN32) && !defined(MPE) && !defined(OS2)
     detached_proxy_garbage_coll(r);
 #else
     help_proxy_garbage_coll(r);
 #endif
     ap_unblock_alarms();
 
@@ -194,13 +194,13 @@
     else if (a->expire < b->expire)
 	return -1;
     else
 	return 0;
 }
 
-#if !defined(WIN32) && !defined(MPE) && !defined(__EMX__)
+#if !defined(WIN32) && !defined(MPE) && !defined(OS2)
 static void detached_proxy_garbage_coll(request_rec *r)
 {
     pid_t pid;
     int status;
     pid_t pgrp;
 
@@ -420,13 +420,13 @@
 	++nfiles;
 /* is it another file? */
 	/* FIXME: Shouldn't any unexpected files be deleted? */
 	/*      if (strlen(ent->d_name) != HASH_LEN) continue; */
 
 /* under OS/2 use dirent's d_attr to identify a diretory */
-#ifdef __EMX__
+#ifdef OS2
 /* is it a directory? */
 	if (ent->d_attr & A_DIR) {
 	    char newcachedir[HUGE_STRING_LEN];
 	    ap_snprintf(newcachedir, sizeof(newcachedir),
 			"%s%s/", cachesubdir, ent->d_name);
 	    if (!sub_garbage_coll(r, files, cachebasedir, newcachedir)) {
@@ -456,13 +456,13 @@
 			 "proxy gc: fstat(%s)", filename);
 	    close(fd);
 	    continue;
 	}
 
 /* In OS/2 this has already been done above */
-#ifndef __EMX__
+#ifndef OS2
 	if (S_ISDIR(buf.st_mode)) {
 	    char newcachedir[HUGE_STRING_LEN];
 	    close(fd);
 	    ap_snprintf(newcachedir, sizeof(newcachedir),
 			"%s%s/", cachesubdir, ent->d_name);
 	    if (!sub_garbage_coll(r, files, cachebasedir, newcachedir)) {
@@ -532,22 +532,22 @@
 /*
  * read a cache file;
  * returns 1 on success,
  *         0 on failure (bad file or wrong URL)
  *        -1 on UNIX error
  */
-static int rdcache(pool *p, BUFF *cachefp, struct cache_req *c)
+static int rdcache(request_rec *r, BUFF *cachefp, cache_req *c)
 {
     char urlbuff[1034], *strp;
     int len;
 /* read the data from the cache file */
 /* format
  * date SP lastmod SP expire SP count SP content-length CRLF
  * dates are stored as hex seconds since 1970
  */
-    len = ap_bgets(urlbuff, 1034, cachefp);
+    len = ap_bgets(urlbuff, sizeof urlbuff, cachefp);
     if (len == -1)
 	return -1;
     if (len == 0 || urlbuff[len - 1] != '\n')
 	return 0;
     urlbuff[len - 1] = '\0';
 
@@ -559,46 +559,43 @@
     c->lmod = ap_proxy_hex2sec(urlbuff + 9);
     c->expire = ap_proxy_hex2sec(urlbuff + 18);
     c->version = ap_proxy_hex2sec(urlbuff + 27);
     c->len = ap_proxy_hex2sec(urlbuff + 36);
 
 /* check that we have the same URL */
-    len = ap_bgets(urlbuff, 1034, cachefp);
+    len = ap_bgets(urlbuff, sizeof urlbuff, cachefp);
     if (len == -1)
 	return -1;
     if (len == 0 || strncmp(urlbuff, "X-URL: ", 7) != 0 ||
 	urlbuff[len - 1] != '\n')
 	return 0;
     urlbuff[len - 1] = '\0';
     if (strcmp(urlbuff + 7, c->url) != 0)
 	return 0;
 
 /* What follows is the message */
-    len = ap_bgets(urlbuff, 1034, cachefp);
+    len = ap_bgets(urlbuff, sizeof urlbuff, cachefp);
     if (len == -1)
 	return -1;
     if (len == 0 || urlbuff[len - 1] != '\n')
 	return 0;
     urlbuff[--len] = '\0';
 
-    c->resp_line = ap_pstrdup(p, urlbuff);
+    c->resp_line = ap_pstrdup(r->pool, urlbuff);
     strp = strchr(urlbuff, ' ');
     if (strp == NULL)
 	return 0;
 
     c->status = atoi(strp);
-    c->hdrs = ap_proxy_read_headers(p, urlbuff, 1034, cachefp);
+    c->hdrs = ap_proxy_read_headers(r, urlbuff, sizeof urlbuff, cachefp);
     if (c->hdrs == NULL)
 	return -1;
     if (c->len != -1) {		/* add a content-length header */
-	struct hdr_entry *q;
-	q = ap_proxy_get_header(c->hdrs, "Content-Length");
-	if (q == NULL) {
-	    strp = ap_palloc(p, 15);
-	    ap_snprintf(strp, 15, "%lu", (unsigned long)c->len);
-	    ap_proxy_add_header(c->hdrs, "Content-Length", strp, HDR_REP);
+	if (ap_table_get(c->hdrs, "Content-Length") == NULL) {
+	    ap_table_set(c->hdrs, "Content-Length",
+			 ap_psprintf(r->pool, "%lu", (unsigned long)c->len));
 	}
     }
     return 1;
 }
 
 
@@ -614,26 +611,26 @@
  *         else send 304 Not modified
  *      else
  *         if last modified after if-modified-since then add
  *            last modified date to request
  */
 int ap_proxy_cache_check(request_rec *r, char *url, struct cache_conf *conf,
-		      struct cache_req **cr)
+		      cache_req **cr)
 {
     char hashfile[66];
     const char *imstr, *pragma, *auth;
-    struct cache_req *c;
+    cache_req *c;
     time_t now;
     BUFF *cachefp;
     int cfd, i;
     const long int zero = 0L;
     void *sconf = r->server->module_config;
     proxy_server_conf *pconf =
     (proxy_server_conf *) ap_get_module_config(sconf, &proxy_module);
 
-    c = ap_pcalloc(r->pool, sizeof(struct cache_req));
+    c = ap_pcalloc(r->pool, sizeof(cache_req));
     *cr = c;
     c->req = r;
     c->url = ap_pstrdup(r->pool, url);
 
 /* get the If-Modified-Since date of the request */
     c->ims = BAD_DATE;
@@ -667,60 +664,56 @@
 	if (cfd != -1) {
 	    ap_note_cleanups_for_fd(r->pool, cfd);
 	    cachefp = ap_bcreate(r->pool, B_RD | B_WR);
 	    ap_bpushfd(cachefp, cfd, cfd);
 	}
 	else if (errno != ENOENT)
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "proxy: error opening cache file %s",
 			 c->filename);
 #ifdef EXPLAIN
 	else
 	    Explain1("File %s not found", c->filename);
 #endif
     }
 
     if (cachefp != NULL) {
-	i = rdcache(r->pool, cachefp, c);
+	i = rdcache(r, cachefp, c);
 	if (i == -1)
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "proxy: error reading cache file %s", 
 			 c->filename);
 	else if (i == 0)
-	    ap_log_error(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r,
 			 "proxy: bad (short?) cache file: %s", c->filename);
 	if (i != 1) {
 	    ap_pclosef(r->pool, cachefp->fd);
 	    cachefp = NULL;
 	}
     }
 /* fixed?  in this case, we want to get the headers from the remote server
    it will be handled later if we don't do this (I hope ;-)
     if (cachefp == NULL)
-	c->hdrs = ap_make_array(r->pool, 2, sizeof(struct hdr_entry));
+	c->hdrs = ap_make_table(r->pool, 20);
 */
     /* FIXME: Shouldn't we check the URL somewhere? */
     now = time(NULL);
 /* Ok, have we got some un-expired data? */
     if (cachefp != NULL && c->expire != BAD_DATE && now < c->expire) {
 	Explain0("Unexpired data available");
 /* check IMS */
 	if (c->lmod != BAD_DATE && c->ims != BAD_DATE && c->ims >= c->lmod) {
 /* has the cached file changed since this request? */
 	    if (c->date == BAD_DATE || c->date > c->ims) {
 /* No, but these header values may have changed, so we send them with the
- * 304 response
+ * 304 HTTP_NOT_MODIFIED response
  */
-		/* CHECKME: surely this was wrong? (Ben)
-		   p = table_get(r->headers_in, "Expires");
-		 */
-		struct hdr_entry *q;
-
-		q = ap_proxy_get_header(c->hdrs, "Expires");
-		if (q != NULL && q->value != NULL)
-		    ap_table_set(r->headers_out, "Expires", q->value);
+		const char *q;
+
+		if ((q = ap_table_get(c->hdrs, "Expires")) != NULL)
+		    ap_table_set(r->headers_out, "Expires", q);
 	    }
 	    ap_pclosef(r->pool, cachefp->fd);
 	    Explain0("Use local copy, cached file hasn't changed");
 	    return HTTP_NOT_MODIFIED;
 	}
 
@@ -733,13 +726,13 @@
 	    ap_proxy_send_headers(r, c->resp_line, c->hdrs);
 	    ap_kill_timeout(r);
 	}
 	ap_bsetopt(r->connection->client, BO_BYTECT, &zero);
 	r->sent_bodyct = 1;
 	if (!r->header_only)
-	    ap_proxy_send_fb(cachefp, r, NULL, NULL);
+	    ap_proxy_send_fb(cachefp, r, NULL);
 	ap_pclosef(r->pool, cachefp->fd);
 	return OK;
     }
 
 /* if we already have data and a last-modified date, and it is not a head
  * request, then add an If-Modified-Since
@@ -748,19 +741,17 @@
     if (cachefp != NULL && c->lmod != BAD_DATE && !r->header_only) {
 /*
  * use the later of the one from the request and the last-modified date
  * from the cache
  */
 	if (c->ims == BAD_DATE || c->ims < c->lmod) {
-	    struct hdr_entry *q;
+	    const char *q;
 
-	    q = ap_proxy_get_header(c->hdrs, "Last-Modified");
-
-	    if (q != NULL && q->value != NULL)
+	    if ((q = ap_table_get(c->hdrs, "Last-Modified")) != NULL)
 		ap_table_set(r->headers_in, "If-Modified-Since",
-			  (char *) q->value);
+			  (char *) q);
 	}
     }
     c->fp = cachefp;
 
     Explain0("Local copy not present or expired. Declining.");
 
@@ -776,22 +767,22 @@
  *  check for an uncachable response
  *  calculate an expiry date, if one is not provided
  *  if the remote file has not been modified, then return the document
  *  from the cache, maybe updating the header line
  *  otherwise, delete the old cached file and open a new temporary file
  */
-int ap_proxy_cache_update(struct cache_req *c, array_header *resp_hdrs,
+int ap_proxy_cache_update(cache_req *c, table *resp_hdrs,
 		       const int is_HTTP1, int nocache)
 {
 #ifdef ULTRIX_BRAIN_DEATH
   extern char *mktemp(char *template);
 #endif 
     request_rec *r = c->req;
     char *p;
     int i;
-    struct hdr_entry *expire, *dates, *lmods, *clen;
+    const char *expire, *lmods, *dates, *clen;
     time_t expc, date, lmod, now;
     char buff[46];
     void *sconf = r->server->module_config;
     proxy_server_conf *conf =
     (proxy_server_conf *) ap_get_module_config(sconf, &proxy_module);
     const long int zero = 0L;
@@ -799,101 +790,103 @@
     c->tempfile = NULL;
 
 /* we've received the response */
 /* read expiry date; if a bad date, then leave it so the client can
  * read it
  */
-    expire = ap_proxy_get_header(resp_hdrs, "Expires");
+    expire = ap_table_get(resp_hdrs, "Expires");
     if (expire != NULL)
-	expc = ap_parseHTTPdate(expire->value);
+	expc = ap_parseHTTPdate(expire);
     else
 	expc = BAD_DATE;
 
 /*
  * read the last-modified date; if the date is bad, then delete it
  */
-    lmods = ap_proxy_get_header(resp_hdrs, "Last-Modified");
+    lmods = ap_table_get(resp_hdrs, "Last-Modified");
     if (lmods != NULL) {
-	lmod = ap_parseHTTPdate(lmods->value);
+	lmod = ap_parseHTTPdate(lmods);
 	if (lmod == BAD_DATE) {
 /* kill last modified date */
-	    lmods->value = NULL;
 	    lmods = NULL;
 	}
     }
     else
 	lmod = BAD_DATE;
 
 /*
  * what responses should we not cache?
  * Unknown status responses and those known to be uncacheable
- * 304 response when we have no valid cache file, or
- * 200 response from HTTP/1.0 and up without a Last-Modified header, or
+ * 304 HTTP_NOT_MODIFIED response when we have no valid cache file, or
+ * 200 HTTP_OK response from HTTP/1.0 and up without a Last-Modified header, or
  * HEAD requests, or
  * requests with an Authorization header, or
  * protocol requests nocache (e.g. ftp with user/password)
  */
-    if ((r->status != 200 && r->status != 301 && r->status != 304) ||
+/* @@@ XXX FIXME: is the test "r->status != HTTP_MOVED_PERMANENTLY" corerct?
+ * or shouldn't it be "ap_is_HTTP_REDIRECT(r->status)" ? -MnKr */
+    if ((r->status != HTTP_OK && r->status != HTTP_MOVED_PERMANENTLY && r->status != HTTP_NOT_MODIFIED) ||
 	(expire != NULL && expc == BAD_DATE) ||
-	(r->status == 304 && c->fp == NULL) ||
-	(r->status == 200 && lmods == NULL && is_HTTP1) ||
+	(r->status == HTTP_NOT_MODIFIED && (c == NULL || c->fp == NULL)) ||
+	(r->status == HTTP_OK && lmods == NULL && is_HTTP1) ||
 	r->header_only ||
 	ap_table_get(r->headers_in, "Authorization") != NULL ||
 	nocache) {
 	Explain1("Response is not cacheable, unlinking %s", c->filename);
 /* close the file */
 	if (c->fp != NULL) {
 	    ap_pclosef(r->pool, c->fp->fd);
 	    c->fp = NULL;
 	}
 /* delete the previously cached file */
-	unlink(c->filename);
+        if (c->filename)
+            unlink(c->filename);
 	return DECLINED;	/* send data to client but not cache */
     }
 
 /* otherwise, we are going to cache the response */
 /*
  * Read the date. Generate one if one is not supplied
  */
-    dates = ap_proxy_get_header(resp_hdrs, "Date");
+    dates = ap_table_get(resp_hdrs, "Date");
     if (dates != NULL)
-	date = ap_parseHTTPdate(dates->value);
+	date = ap_parseHTTPdate(dates);
     else
 	date = BAD_DATE;
 
     now = time(NULL);
 
     if (date == BAD_DATE) {	/* No, or bad date */
 /* no date header! */
 /* add one; N.B. use the time _now_ rather than when we were checking the cache
  */
 	date = now;
-	p = ap_gm_timestr_822(r->pool, now);
-	dates = ap_proxy_add_header(resp_hdrs, "Date", p, HDR_REP);
+	dates = ap_gm_timestr_822(r->pool, now);
+	ap_table_set(resp_hdrs, "Date", dates);
 	Explain0("Added date header");
     }
 
 /* check last-modified date */
     if (lmod != BAD_DATE && lmod > date)
 /* if its in the future, then replace by date */
     {
 	lmod = date;
-	lmods->value = dates->value;
+	lmods = dates;
 	Explain0("Last modified is in the future, replacing with now");
     }
 /* if the response did not contain the header, then use the cached version */
     if (lmod == BAD_DATE && c->fp != NULL) {
 	lmod = c->lmod;
 	Explain0("Reusing cached last modified");
     }
 
 /* we now need to calculate the expire data for the object. */
     if (expire == NULL && c->fp != NULL) {	/* no expiry data sent in response */
-	expire = ap_proxy_get_header(c->hdrs, "Expires");
+	expire = ap_table_get(c->hdrs, "Expires");
 	if (expire != NULL)
-	    expc = ap_parseHTTPdate(expire->value);
+	    expc = ap_parseHTTPdate(expire);
     }
 /* so we now have the expiry date */
 /* if no expiry date then
  *   if lastmod
  *      expiry date = now + min((date - lastmod) * factor, maxexpire)
  *   else
@@ -911,17 +904,17 @@
 	else
 	    expc = now + conf->cache.defaultexpire;
 	Explain1("Expiry date calculated %ld", expc);
     }
 
 /* get the content-length header */
-    clen = ap_proxy_get_header(resp_hdrs, "Content-Length");
+    clen = ap_table_get(resp_hdrs, "Content-Length");
     if (clen == NULL)
 	c->len = -1;
     else
-	c->len = atoi(clen->value);
+	c->len = atoi(clen);
 
     ap_proxy_sec2hex(date, buff);
     buff[8] = ' ';
     ap_proxy_sec2hex(lmod, buff + 9);
     buff[17] = ' ';
     ap_proxy_sec2hex(expc, buff + 18);
@@ -930,24 +923,24 @@
     buff[35] = ' ';
     ap_proxy_sec2hex(c->len, buff + 36);
     buff[44] = '\n';
     buff[45] = '\0';
 
 /* if file not modified */
-    if (r->status == 304) {
+    if (r->status == HTTP_NOT_MODIFIED) {
 	if (c->ims != BAD_DATE && lmod != BAD_DATE && lmod <= c->ims) {
 /* set any changed headers somehow */
 /* update dates and version, but not content-length */
 	    if (lmod != c->lmod || expc != c->expire || date != c->date) {
 		off_t curpos = lseek(c->fp->fd, 0, SEEK_SET);
 		if (curpos == -1)
-		    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+		    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 				 "proxy: error seeking on cache file %s",
 				 c->filename);
 		else if (write(c->fp->fd, buff, 35) == -1)
-		    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+		    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 				 "proxy: error updating cache file %s",
 				 c->filename);
 	    }
 	    ap_pclosef(r->pool, c->fp->fd);
 	    Explain0("Remote document not modified, use local copy");
 	    /* CHECKME: Is this right? Shouldn't we check IMS again here? */
@@ -963,24 +956,24 @@
 		ap_proxy_send_headers(r, c->resp_line, c->hdrs);
 		ap_kill_timeout(r);
 	    }
 	    ap_bsetopt(r->connection->client, BO_BYTECT, &zero);
 	    r->sent_bodyct = 1;
 	    if (!r->header_only)
-		ap_proxy_send_fb(c->fp, r, NULL, NULL);
+		ap_proxy_send_fb(c->fp, r, NULL);
 /* set any changed headers somehow */
 /* update dates and version, but not content-length */
 	    if (lmod != c->lmod || expc != c->expire || date != c->date) {
 		off_t curpos = lseek(c->fp->fd, 0, SEEK_SET);
 
 		if (curpos == -1)
-		    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+		    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 				 "proxy: error seeking on cache file %s",
 				 c->filename);
 		else if (write(c->fp->fd, buff, 35) == -1)
-		    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+		    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 				 "proxy: error updating cache file %s",
 				 c->filename);
 	    }
 	    ap_pclosef(r->pool, c->fp->fd);
 	    return OK;
 	}
@@ -1007,39 +1000,41 @@
 	return DECLINED;
 
     Explain1("Create temporary file %s", c->tempfile);
 
     i = open(c->tempfile, O_WRONLY | O_CREAT | O_EXCL | O_BINARY, 0622);
     if (i == -1) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		     "proxy: error creating cache file %s",
 		     c->tempfile);
 	return DECLINED;
     }
     ap_note_cleanups_for_fd(r->pool, i);
     c->fp = ap_bcreate(r->pool, B_WR);
     ap_bpushfd(c->fp, -1, i);
 
     if (ap_bvputs(c->fp, buff, "X-URL: ", c->url, "\n", NULL) == -1) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		     "proxy: error writing cache file(%s)", c->tempfile);
 	ap_pclosef(r->pool, c->fp->fd);
 	unlink(c->tempfile);
 	c->fp = NULL;
     }
     return DECLINED;
 }
 
-void ap_proxy_cache_tidy(struct cache_req *c)
+void ap_proxy_cache_tidy(cache_req *c)
 {
-    server_rec *s = c->req->server;
+    server_rec *s;
     long int bc;
 
-    if (c->fp == NULL)
+    if (c == NULL || c->fp == NULL)
 	return;
 
+    s = c->req->server;
+
 /* don't care how much was sent, but rather how much was written to cache
     ap_bgetopt(c->req->connection->client, BO_BYTECT, &bc);
  */
     bc = c->written;
 
     if (c->len != -1) {
@@ -1113,13 +1108,13 @@
 		ap_log_error(APLOG_MARK, APLOG_ERR, s,
 			     "proxy: error creating cache directory %s",
 			     c->filename);
 	    *p = '/';
 	    ++p;
 	}
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
 	/* Under OS/2 use rename. */
 	if (rename(c->tempfile, c->filename) == -1)
 	    ap_log_error(APLOG_MARK, APLOG_ERR, s,
 			 "proxy: error renaming cache file %s to %s",
 			 c->tempfile, c->filename);
     }
diff -BEr -U 6 apache_1.3.1/src/modules/proxy/proxy_connect.c apache_1.3.2/src/modules/proxy/proxy_connect.c
--- apache_1.3.1/src/modules/proxy/proxy_connect.c	1998-06-08 22:23:50.000000000 +0800
+++ apache_1.3.2/src/modules/proxy/proxy_connect.c	1998-09-15 00:30:42.000000000 +0800
@@ -94,13 +94,27 @@
  *        client.
  * FIXME: should allow authentication, but hopefully the
  *        generic proxy authentication is good enough.
  * FIXME: no check for r->assbackwards, whatever that is.
  */
 
-int ap_proxy_connect_handler(request_rec *r, struct cache_req *c, char *url,
+static int
+allowed_port(proxy_server_conf *conf, int port)
+{
+    int i;
+    int *list = (int *) conf->allowed_connect_ports->elts;
+
+    for(i = 0; i < conf->allowed_connect_ports->nelts; i++) {
+	if(port == list[i])
+	    return 1;
+    }
+    return 0;
+}
+
+
+int ap_proxy_connect_handler(request_rec *r, cache_req *c, char *url,
 			  const char *proxyhost, int proxyport)
 {
     struct sockaddr_in server;
     struct in_addr destaddr;
     struct hostent server_hp;
     const char *host, *err;
@@ -134,19 +148,24 @@
     for (i = 0; i < conf->noproxies->nelts; i++) {
 	if ((npent[i].name != NULL && strstr(host, npent[i].name) != NULL)
 	    || destaddr.s_addr == npent[i].addr.s_addr || npent[i].name[0] == '*')
 	    return ap_proxyerror(r, "Connect to remote machine blocked");
     }
 
-    switch (port) {
-	case DEFAULT_HTTPS_PORT:
+    /* Check if it is an allowed port */
+    if (conf->allowed_connect_ports->nelts == 0) {
+	/* Default setting if not overridden by AllowCONNECT */
+	switch (port) {
+	    case DEFAULT_HTTPS_PORT:
 	    case DEFAULT_SNEWS_PORT:
-	    break;
-	default:
-	    return HTTP_SERVICE_UNAVAILABLE;
-    }
+		break;
+	    default:
+		return HTTP_FORBIDDEN;
+	}
+    } else if(!allowed_port(conf, port))
+	return HTTP_FORBIDDEN;
 
     if (proxyhost) {
 	Explain2("CONNECT to remote proxy %s on port %d", proxyhost, proxyport);
     }
     else {
 	Explain2("CONNECT to %s on port %d", host, port);
@@ -157,13 +176,13 @@
 
     if (err != NULL)
 	return ap_proxyerror(r, err);	/* give up */
 
     sock = ap_psocket(r->pool, PF_INET, SOCK_STREAM, IPPROTO_TCP);
     if (sock == -1) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "proxy: error creating socket");
 	return HTTP_INTERNAL_SERVER_ERROR;
     }
 
 #ifndef WIN32
     if (sock >= FD_SETSIZE) {
diff -BEr -U 6 apache_1.3.1/src/modules/proxy/proxy_ftp.c apache_1.3.2/src/modules/proxy/proxy_ftp.c
--- apache_1.3.1/src/modules/proxy/proxy_ftp.c	1998-07-10 03:45:56.000000000 +0800
+++ apache_1.3.2/src/modules/proxy/proxy_ftp.c	1998-08-28 19:27:21.000000000 +0800
@@ -58,12 +58,14 @@
 /* FTP routines for Apache proxy */
 
 #include "mod_proxy.h"
 #include "http_main.h"
 #include "http_log.h"
 
+#define AUTODETECT_PWD
+
 DEF_Explain
 
 /*
  * Decodes a '%' escaped string, and returns the number of characters
  */
 static int decodeenc(char *x)
@@ -260,121 +262,85 @@
 	    mb = ap_cpystrn(mb, linebuff+4, me - mb);
 	} while (memcmp(linebuff, buff, 4) != 0);
     }
     return status;
 }
 
-static long int send_dir(BUFF *f, request_rec *r, BUFF *f2, struct cache_req *c, char *url)
+static long int send_dir(BUFF *f, request_rec *r, cache_req *c, char *cwd)
 {
     char buf[IOBUFSIZE];
     char buf2[IOBUFSIZE];
     char *filename;
-    char *tempurl;
     int searchidx = 0;
     char *searchptr = NULL;
     int firstfile = 1;
-    char urlptr[HUGE_STRING_LEN];
     unsigned long total_bytes_sent = 0;
     register int n, o, w;
-    int hostlen;
     conn_rec *con = r->connection;
-    char *dir, *path, *reldir, *site, *psite;
-    const char *sig;
-
-    tempurl = ap_pstrdup(r->pool, url);
-
-    (void)decodeenc(tempurl);
-
-    /* Determine length of "scheme://site" prefix */
-    for (hostlen=0; tempurl[hostlen]!='/'; ++hostlen)
-	continue;
-    if (tempurl[hostlen] == '/' && tempurl[hostlen+1] == '/') {
-	for (hostlen+=2; tempurl[hostlen]!='/' && tempurl[hostlen]!='?'; ++hostlen)
-	    continue;
-    } else {
-	hostlen = 0;
-    }
-
-    /* Save "scheme://site" prefix */
-    site = psite = ap_pstrndup(r->pool, tempurl, hostlen);
-
-    if ((n = strcspn(tempurl, "@")) != strlen(tempurl) && n < hostlen) {    /* hide user/passwd */
-	memmove(tempurl + (n - 5), tempurl, 6);
-	tempurl += n - 5;	/* leave room for ftp:// */
-	hostlen -= (n-5);
+    char *dir, *path, *reldir, *site;
 
-	/* Save "scheme://site" prefix without user/password */
-	site = ap_pstrndup(r->pool, tempurl, hostlen);
-    }
+    /* Save "scheme://site" prefix without password */
+    site = ap_unparse_uri_components(r->pool, &r->parsed_uri, UNP_OMITPASSWORD|UNP_OMITPATHINFO);
+    /* ... and path without query args */
+    path = ap_unparse_uri_components(r->pool, &r->parsed_uri, UNP_OMITSITEPART|UNP_OMITQUERY);
+    (void)decodeenc(path);
 
     /* Copy path, strip (all except the last) trailing slashes */
-    path = dir = ap_pstrcat(r->pool, tempurl+hostlen, "/", NULL);
+    path = dir = ap_pstrcat(r->pool, path, "/", NULL);
     while ((n = strlen(path)) > 1 && path[n-1] == '/' && path[n-2] == '/')
 	path[n-1] = '\0';
 
     /* print "ftp://host/" */
-    ap_snprintf(buf, sizeof(buf), "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n"
-		"<HTML><HEAD><TITLE>%s</TITLE>\n"
+    n = ap_snprintf(buf, sizeof(buf), "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n"
+		"<HTML><HEAD><TITLE>%s%s</TITLE>\n"
 		"<BASE HREF=\"%s%s\"></HEAD>\n"
 		"<BODY><H2>Directory of "
 		"<A HREF=\"/\">%s</A>/",
-		tempurl, psite, path, site);
-    ap_bputs(buf, con->client);
-    if (f2 != NULL)
-	ap_bputs(buf, f2);
-    total_bytes_sent += strlen(buf);
+		site, path, site, path, site);
+    total_bytes_sent += ap_proxy_bputs2(buf, con->client, c);
 
     while ((dir = strchr(dir+1, '/')) != NULL)
     {
 	*dir = '\0';
 	if ((reldir = strrchr(path+1, '/'))==NULL)
 	    reldir = path+1;
 	else
 	    ++reldir;
 	/* print "path/" component */
 	ap_snprintf(buf, sizeof(buf), "<A HREF=\"/%s/\">%s</A>/", path+1, reldir);
-	ap_bputs(buf, con->client);
-    if (f2 != NULL)
-	    ap_bputs(buf, f2);
-	total_bytes_sent += strlen(buf);
+	total_bytes_sent += ap_proxy_bputs2(buf, con->client, c);
 	*dir = '/';
     }
-    ap_snprintf(buf, sizeof(buf), "</H2>\n<HR><PRE>");
-    ap_bputs(buf, con->client);
-    if (f2 != NULL)
-	    ap_bputs(buf, f2);
-    total_bytes_sent += strlen(buf);
-
-    for (hostlen=0; url[hostlen]!='/'; ++hostlen)
-	continue;
-    if (url[hostlen] == '/' && url[hostlen+1] == '/') {
-	for (hostlen+=2; url[hostlen]!='/' && url[hostlen]!='?'; ++hostlen)
-	    continue;
-    } else
-	hostlen = 0;
+    /* If the caller has determined the current directory, and it differs */
+    /* from what the client requested, then show the real name */
+    if (cwd == NULL || strncmp (cwd, path, strlen(cwd)) == 0) {
+	ap_snprintf(buf, sizeof(buf), "</H2>\n<HR><PRE>");
+    } else {
+	ap_snprintf(buf, sizeof(buf), "</H2>\n(%s)\n<HR><PRE>", cwd);
+    }
+    total_bytes_sent += ap_proxy_bputs2(buf, con->client, c);
 
     while (!con->aborted) {
 	n = ap_bgets(buf, sizeof buf, f);
 	if (n == -1) {		/* input error */
-	    if (f2 != NULL)
-		f2 = ap_proxy_cache_error(c);
+	    if (c != NULL)
+		c = ap_proxy_cache_error(c);
 	    break;
 	}
 	if (n == 0)
 	    break;		/* EOF */
 	if (buf[0] == 'l' && (filename=strstr(buf, " -> ")) != NULL) {
 	    char *link_ptr = filename;
 
-	    do
+	    do {
 		filename--;
-	    while (filename[0] != ' ');
-	    *(filename++) = 0;
-	    *(link_ptr++) = 0;
+	    } while (filename[0] != ' ');
+	    *(filename++) = '\0';
+	    *(link_ptr++) = '\0';
 	    if ((n = strlen(link_ptr)) > 1 && link_ptr[n - 1] == '\n')
 	      link_ptr[n - 1] = '\0';
-	    ap_snprintf(urlptr, sizeof(urlptr), "%s%s%s", url+hostlen, (url[strlen(url) - 1] == '/' ? "" : "/"), filename);
 	    ap_snprintf(buf2, sizeof(buf2), "%s <A HREF=\"%s\">%s %s</A>\n", buf, filename, filename, link_ptr);
 	    ap_cpystrn(buf, buf2, sizeof(buf));
 	    n = strlen(buf);
 	}
 	else if (buf[0] == 'd' || buf[0] == '-' || buf[0] == 'l' || ap_isdigit(buf[0])) {
 	    if (ap_isdigit(buf[0])) {	/* handle DOS dir */
@@ -413,71 +379,89 @@
 	    n = strlen(buf);
 	}
 
 	o = 0;
 	total_bytes_sent += n;
 
-	if (f2 != NULL)
-	    if (ap_bwrite(f2, buf, n) != n)
-		f2 = ap_proxy_cache_error(c);
+	if (c != NULL && c->fp && ap_bwrite(c->fp, buf, n) != n)
+	    c = ap_proxy_cache_error(c);
 
 	while (n && !r->connection->aborted) {
 	    w = ap_bwrite(con->client, &buf[o], n);
 	    if (w <= 0)
 		break;
 	    ap_reset_timeout(r);	/* reset timeout after successfule write */
 	    n -= w;
 	    o += w;
 	}
     }
-    site = "</PRE><HR>\n";
-    ap_bputs(site, con->client);
-    if (f2 != NULL)
-	ap_bputs(site, f2);
-    total_bytes_sent += strlen(site);
-
-    sig = ap_psignature("", r);
-    ap_bputs(sig, con->client);
-    if (f2 != NULL)
-	ap_bputs(sig, f2);
-    total_bytes_sent += strlen(sig);
-
-    site = "</BODY></HTML>\n";
-    ap_bputs(site, con->client);
-    if (f2 != NULL)
-	ap_bputs(site, f2);
-    total_bytes_sent += strlen(site);
+
+    total_bytes_sent += ap_proxy_bputs2("</PRE><HR>\n", con->client, c);
+    total_bytes_sent += ap_proxy_bputs2(ap_psignature("", r), con->client, c);
+    total_bytes_sent += ap_proxy_bputs2("</BODY></HTML>\n", con->client, c);
+
     ap_bflush(con->client);
 
     return total_bytes_sent;
 }
 
+/* Common routine for failed authorization (i.e., missing or wrong password)
+ * to an ftp service. This causes most browsers to retry the request
+ * with username and password (which was presumably queried from the user)
+ * supplied in the Authorization: header.
+ * Note that we "invent" a realm name which consists of the
+ * ftp://user@host part of the reqest (sans password -if supplied but invalid-)
+ */
+static int ftp_unauthorized (request_rec *r, int log_it)
+{
+    r->proxyreq = 0;
+    /* Log failed requests if they supplied a password
+     * (log username/password guessing attempts)
+     */
+    if (log_it)
+	ap_log_rerror(APLOG_MARK, APLOG_INFO|APLOG_NOERRNO, r,
+		      "proxy: missing or failed auth to %s",
+		      ap_unparse_uri_components(r->pool,
+		      &r->parsed_uri, UNP_OMITPATHINFO));
+
+    ap_table_setn(r->err_headers_out, "WWW-Authenticate",
+                  ap_pstrcat(r->pool, "Basic realm=\"",
+		  ap_unparse_uri_components(r->pool, &r->parsed_uri,
+					    UNP_OMITPASSWORD|UNP_OMITPATHINFO),
+		  "\"", NULL));
+
+    return HTTP_UNAUTHORIZED;
+}
+
 /*
  * Handles direct access of ftp:// URLs
  * Original (Non-PASV) version from
  * Troy Morrison <spiffnet@zoom.com>
  * PASV added by Chuck
  */
-int ap_proxy_ftp_handler(request_rec *r, struct cache_req *c, char *url)
+int ap_proxy_ftp_handler(request_rec *r, cache_req *c, char *url)
 {
-    char *host, *path, *strp, *user, *password, *parms;
+    char *host, *path, *strp, *parms;
+    char *cwd = NULL;
+    char *user = NULL;
+/*    char *account = NULL; how to supply an account in a URL? */
+    const char *password = NULL;
     const char *err;
-    int port, userlen, i, j, len, sock, dsock, rc, nocache;
-    int passlen = 0;
+    int port, i, j, len, sock, dsock, rc, nocache = 0;
     int csd = 0;
     struct sockaddr_in server;
     struct hostent server_hp;
-    struct hdr_entry *hdr;
     struct in_addr destaddr;
-    array_header *resp_hdrs;
-    BUFF *f, *cache;
+    table *resp_hdrs;
+    BUFF *f;
     BUFF *data = NULL;
     pool *p = r->pool;
     int one = 1;
     const long int zero = 0L;
     NET_SIZE_T clen;
+    struct tbl_do_args tdo;
 
     void *sconf = r->server->module_config;
     proxy_server_conf *conf =
     (proxy_server_conf *) ap_get_module_config(sconf, &proxy_module);
     struct noproxy_entry *npent = (struct noproxy_entry *) conf->noproxies->elts;
     struct nocache_entry *ncent = (struct nocache_entry *) conf->nocaches->elts;
@@ -489,73 +473,70 @@
     struct sockaddr_in data_addr;
     int pasvmode = 0;
     char pasv[64];
     char *pstr;
 
 /* stuff for responses */
-    char *resp;
-    int resplen;
+    char resp[MAX_STRING_LEN];
     char *size = NULL;
 
 /* we only support GET and HEAD */
 
     if (r->method_number != M_GET)
 	return HTTP_NOT_IMPLEMENTED;
 
-/* allocate a buffer for the response message */
-	resplen = MAX_STRING_LEN;
-	resp = (char *)ap_palloc(r->pool, resplen);
-
 /* We break the URL into host, port, path-search */
 
-    host = ap_pstrdup(p, url + 6);
-    port = DEFAULT_FTP_PORT;
-    path = strchr(host, '/');
-    if (path == NULL)
-	path = "";
-    else
-	*(path++) = '\0';
-
-    user = password = NULL;
-    nocache = 0;
-    strp = strchr(host, '@');
-    if (strp != NULL) {
-	(*strp++) = '\0';
-	user = host;
-	host = strp;
-/* find password */
-	strp = strchr(user, ':');
-	if (strp != NULL) {
-	    *(strp++) = '\0';
-	    password = strp;
-	    passlen = decodeenc(password);
+    host = r->parsed_uri.hostname;
+    port = (r->parsed_uri.port != 0)
+	    ? r->parsed_uri.port
+	    : ap_default_port_for_request(r);
+    path = ap_pstrdup(p, r->parsed_uri.path);
+    path = (path != NULL && path[0] != '\0') ? &path[1] : "";
+
+    /* The "Authorization:" header must be checked first.
+     * We allow the user to "override" the URL-coded user [ & password ]
+     * in the Browsers' User&Password Dialog.
+     * NOTE that this is only marginally more secure than having the
+     * password travel in plain as part of the URL, because Basic Auth
+     * simply uuencodes the plain text password. 
+     * But chances are still smaller that the URL is logged regularly.
+     */
+    if ((password = ap_table_get(r->headers_in, "Authorization")) != NULL
+	&& strcasecmp(ap_getword(r->pool, &password, ' '), "Basic") == 0
+	&& (password = ap_uudecode(r->pool, password))[0] != ':') {
+	/* Note that this allocation has to be made from r->connection->pool
+	 * because it has the lifetime of the connection.  The other allocations
+	 * are temporary and can be tossed away any time.
+	 */
+	user = ap_getword_nulls (r->connection->pool, &password, ':');
+	r->connection->ap_auth_type = "Basic";
+	r->connection->user = r->parsed_uri.user = user;
+	nocache = 1;	/* This resource only accessible with username/password */
+    }
+    else if ((user = r->parsed_uri.user) != NULL) {
+	user = ap_pstrdup(p, user);
+	decodeenc(user);
+	if ((password = r->parsed_uri.password) != NULL) {
+	    char *tmp = ap_pstrdup(p, password);
+	    decodeenc(tmp);
+	    password = tmp;
 	}
-	userlen = decodeenc(user);
-	nocache = 1;		/* don't cache when a username is supplied */
+	nocache = 1;	/* This resource only accessible with username/password */
     }
     else {
 	user = "anonymous";
-	userlen = 9;
-
 	password = "apache_proxy@";
-	passlen = strlen(password);
-    }
-
-    strp = strchr(host, ':');
-    if (strp != NULL) {
-	*(strp++) = '\0';
-	if (ap_isdigit(*strp))
-	    port = atoi(strp);
     }
 
 /* check if ProxyBlock directive on this host */
     destaddr.s_addr = ap_inet_addr(host);
     for (i = 0; i < conf->noproxies->nelts; i++) {
 	if ((npent[i].name != NULL && strstr(host, npent[i].name) != NULL)
 	    || destaddr.s_addr == npent[i].addr.s_addr || npent[i].name[0] == '*')
-	    return ap_proxyerror(r, "Connect to remote machine blocked");
+	    return ap_proxyerror(r, /*HTTP_FORBIDDEN*/ "Connect to remote machine blocked");
     }
 
     Explain2("FTP: connect to %s:%d", host, port);
 
     parms = strchr(path, ';');
     if (parms != NULL)
@@ -567,30 +548,29 @@
     err = ap_proxy_host2addr(host, &server_hp);
     if (err != NULL)
 	return ap_proxyerror(r, err);	/* give up */
 
     sock = ap_psocket(p, PF_INET, SOCK_STREAM, IPPROTO_TCP);
     if (sock == -1) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		     "proxy: error creating socket");
 	return HTTP_INTERNAL_SERVER_ERROR;
     }
 
-    if (conf->recv_buffer_size) {
-	if (setsockopt(sock, SOL_SOCKET, SO_RCVBUF,
+    if (conf->recv_buffer_size > 0
+	&& setsockopt(sock, SOL_SOCKET, SO_RCVBUF,
 		       (const char *) &conf->recv_buffer_size, sizeof(int))
 	    == -1) {
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "setsockopt(SO_RCVBUF): Failed to set ProxyReceiveBufferSize, using default");
-	}
     }
 
     if (setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (void *) &one,
 		   sizeof(one)) == -1) {
 #ifndef _OSD_POSIX /* BS2000 has this option "always on" */
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		     "proxy: error setting reuseaddr option: setsockopt(SO_REUSEADDR)");
 	ap_pclosesocket(p, sock);
 	return HTTP_INTERNAL_SERVER_ERROR;
 #endif /*_OSD_POSIX*/
     }
 
@@ -628,102 +608,140 @@
 /* shouldn't we implement telnet control options here? */
 
 #ifdef CHARSET_EBCDIC
     ap_bsetflag(f, B_ASCII2EBCDIC|B_EBCDIC2ASCII, 1);
 #endif /*CHARSET_EBCDIC*/
 
-/* possible results: 120, 220, 421 */
+/* possible results: */
+    /* 120 Service ready in nnn minutes. */
+    /* 220 Service ready for new user. */
+    /* 421 Service not available, closing control connection. */
     ap_hard_timeout("proxy ftp", r);
-    i = ftp_getrc(f);
+    i = ftp_getrc_msg(f, resp, sizeof resp);
     Explain1("FTP: returned status %d", i);
     if (i == -1) {
 	ap_kill_timeout(r);
-	return ap_proxyerror(r, "Error reading from remote server");
+	return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
+    }
+#if 0
+    if (i == 120) {
+	ap_kill_timeout(r);
+	/* RFC2068 states:
+	 * 14.38 Retry-After
+	 * 
+	 *  The Retry-After response-header field can be used with a 503 (Service
+	 *  Unavailable) response to indicate how long the service is expected to
+	 *  be unavailable to the requesting client. The value of this field can
+	 *  be either an HTTP-date or an integer number of seconds (in decimal)
+	 *  after the time of the response.
+	 *     Retry-After  = "Retry-After" ":" ( HTTP-date | delta-seconds )
+	 */
+	ap_set_header("Retry-After", ap_psprintf(p, "%u", 60*wait_mins);
+	return ap_proxyerror(r, /*HTTP_SERVICE_UNAVAILABLE*/ resp);
     }
+#endif
     if (i != 220) {
 	ap_kill_timeout(r);
-	return HTTP_BAD_GATEWAY;
+	return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ resp);
     }
 
     Explain0("FTP: connected.");
 
-    ap_bputs("USER ", f);
-    ap_bwrite(f, user, userlen);
-    ap_bputs(CRLF, f);
+    ap_bvputs(f, "USER ", user, CRLF, NULL);
     ap_bflush(f);			/* capture any errors */
     Explain1("FTP: USER %s", user);
 
 /* possible results; 230, 331, 332, 421, 500, 501, 530 */
 /* states: 1 - error, 2 - success; 3 - send password, 4,5 fail */
+    /* 230 User logged in, proceed. */
+    /* 331 User name okay, need password. */
+    /* 332 Need account for login. */
+    /* 421 Service not available, closing control connection. */
+    /* 500 Syntax error, command unrecognized. */
+    /*     (This may include errors such as command line too long.) */
+    /* 501 Syntax error in parameters or arguments. */
+    /* 530 Not logged in. */
     i = ftp_getrc(f);
     Explain1("FTP: returned status %d", i);
     if (i == -1) {
 	ap_kill_timeout(r);
-	return ap_proxyerror(r, "Error sending to remote server");
+	return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
     }
     if (i == 530) {
 	ap_kill_timeout(r);
-	return ap_proxyerror(r, "Not logged in");
+	return ftp_unauthorized (r, 1);	/* log it: user name guessing attempt? */
     }
     if (i != 230 && i != 331) {
 	ap_kill_timeout(r);
 	return HTTP_BAD_GATEWAY;
     }
 
     if (i == 331) {		/* send password */
-	if (password == NULL)
-	    return HTTP_FORBIDDEN;
-	ap_bputs("PASS ", f);
-	ap_bwrite(f, password, passlen);
-	ap_bputs(CRLF, f);
+	if (password == NULL) {
+	    return ftp_unauthorized (r, 0);
+	}
+	ap_bvputs(f, "PASS ", password, CRLF, NULL);
 	ap_bflush(f);
 	Explain1("FTP: PASS %s", password);
 /* possible results 202, 230, 332, 421, 500, 501, 503, 530 */
+    /* 230 User logged in, proceed. */
+    /* 332 Need account for login. */
+    /* 421 Service not available, closing control connection. */
+    /* 500 Syntax error, command unrecognized. */
+    /* 501 Syntax error in parameters or arguments. */
+    /* 503 Bad sequence of commands. */
+    /* 530 Not logged in. */
 	i = ftp_getrc(f);
 	Explain1("FTP: returned status %d", i);
 	if (i == -1) {
 	    ap_kill_timeout(r);
-	    return ap_proxyerror(r, "Error sending to remote server");
+	    return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
 	}
 	if (i == 332) {
 	    ap_kill_timeout(r);
-	    return ap_proxyerror(r, "Need account for login");
+	    return ap_proxyerror(r, /*HTTP_UNAUTHORIZED*/ "Need account for login");
 	}
+	/* @@@ questionable -- we might as well return a 403 Forbidden here */
 	if (i == 530) {
 	    ap_kill_timeout(r);
-	    return ap_proxyerror(r, "Not logged in");
+	    return ftp_unauthorized (r, 1); /* log it: passwd guessing attempt? */
 	}
 	if (i != 230 && i != 202) {
 	    ap_kill_timeout(r);
 	    return HTTP_BAD_GATEWAY;
 	}
     }
 
-/* set the directory */
-/* this is what we must do if we don't know the OS type of the remote
+/* set the directory (walk directory component by component):
+ * this is what we must do if we don't know the OS type of the remote
  * machine
  */
     for (;;) {
 	strp = strchr(path, '/');
 	if (strp == NULL)
 	    break;
 	*strp = '\0';
 
 	len = decodeenc(path);
-	ap_bputs("CWD ", f);
-	ap_bwrite(f, path, len);
-	ap_bputs(CRLF, f);
+	ap_bvputs(f, "CWD ", path, CRLF, NULL);
 	ap_bflush(f);
 	Explain1("FTP: CWD %s", path);
+	*strp = '/';
 /* responses: 250, 421, 500, 501, 502, 530, 550 */
-/* 1,3 error, 2 success, 4,5 failure */
+    /* 250 Requested file action okay, completed. */
+    /* 421 Service not available, closing control connection. */
+    /* 500 Syntax error, command unrecognized. */
+    /* 501 Syntax error in parameters or arguments. */
+    /* 502 Command not implemented. */
+    /* 530 Not logged in. */
+    /* 550 Requested action not taken. */
 	i = ftp_getrc(f);
 	Explain1("FTP: returned status %d", i);
 	if (i == -1) {
 	    ap_kill_timeout(r);
-	    return ap_proxyerror(r, "Error sending to remote server");
+	    return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
 	}
 	if (i == 550) {
 	    ap_kill_timeout(r);
 	    return HTTP_NOT_FOUND;
 	}
 	if (i != 250) {
@@ -750,17 +768,23 @@
 	/* TM - Added \015\012 to the end of TYPE I, otherwise it hangs the
 	   connection */
 	ap_bputs("TYPE I" CRLF, f);
 	ap_bflush(f);
 	Explain0("FTP: TYPE I");
 /* responses: 200, 421, 500, 501, 504, 530 */
+    /* 200 Command okay. */
+    /* 421 Service not available, closing control connection. */
+    /* 500 Syntax error, command unrecognized. */
+    /* 501 Syntax error in parameters or arguments. */
+    /* 504 Command not implemented for that parameter. */
+    /* 530 Not logged in. */
 	i = ftp_getrc(f);
 	Explain1("FTP: returned status %d", i);
 	if (i == -1) {
 	    ap_kill_timeout(r);
-	    return ap_proxyerror(r, "Error sending to remote server");
+	    return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
 	}
 	if (i != 200 && i != 504) {
 	    ap_kill_timeout(r);
 	    return HTTP_BAD_GATEWAY;
 	}
 /* Allow not implemented */
@@ -768,35 +792,40 @@
 	    parms[0] = '\0';
     }
 
 /* try to set up PASV data connection first */
     dsock = ap_psocket(p, PF_INET, SOCK_STREAM, IPPROTO_TCP);
     if (dsock == -1) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		     "proxy: error creating PASV socket");
 	ap_bclose(f);
 	ap_kill_timeout(r);
 	return HTTP_INTERNAL_SERVER_ERROR;
     }
 
     if (conf->recv_buffer_size) {
 	if (setsockopt(dsock, SOL_SOCKET, SO_RCVBUF,
 	       (const char *) &conf->recv_buffer_size, sizeof(int)) == -1) {
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "setsockopt(SO_RCVBUF): Failed to set ProxyReceiveBufferSize, using default");
 	}
     }
 
     ap_bputs("PASV" CRLF, f);
     ap_bflush(f);
     Explain0("FTP: PASV command issued");
 /* possible results: 227, 421, 500, 501, 502, 530 */
+    /* 227 Entering Passive Mode (h1,h2,h3,h4,p1,p2). */
+    /* 421 Service not available, closing control connection. */
+    /* 500 Syntax error, command unrecognized. */
+    /* 501 Syntax error in parameters or arguments. */
+    /* 502 Command not implemented. */
+    /* 530 Not logged in. */
     i = ap_bgets(pasv, sizeof(pasv), f);
-
     if (i == -1) {
-	ap_log_error(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r,
 		     "PASV: control connection is toast");
 	ap_pclosesocket(p, dsock);
 	ap_bclose(f);
 	ap_kill_timeout(r);
 	return HTTP_INTERNAL_SERVER_ERROR;
     }
@@ -845,32 +874,32 @@
 	    ap_pclosesocket(p, dsock);	/* and try the regular way */
     }
 
     if (!pasvmode) {		/* set up data connection */
 	clen = sizeof(struct sockaddr_in);
 	if (getsockname(sock, (struct sockaddr *) &server, &clen) < 0) {
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "proxy: error getting socket address");
 	    ap_bclose(f);
 	    ap_kill_timeout(r);
 	    return HTTP_INTERNAL_SERVER_ERROR;
 	}
 
 	dsock = ap_psocket(p, PF_INET, SOCK_STREAM, IPPROTO_TCP);
 	if (dsock == -1) {
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "proxy: error creating socket");
 	    ap_bclose(f);
 	    ap_kill_timeout(r);
 	    return HTTP_INTERNAL_SERVER_ERROR;
 	}
 
 	if (setsockopt(dsock, SOL_SOCKET, SO_REUSEADDR, (void *) &one,
 		       sizeof(one)) == -1) {
 #ifndef _OSD_POSIX /* BS2000 has this option "always on" */
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "proxy: error setting reuseaddr option");
 	    ap_pclosesocket(p, dsock);
 	    ap_bclose(f);
 	    ap_kill_timeout(r);
 	    return HTTP_INTERNAL_SERVER_ERROR;
 #endif /*_OSD_POSIX*/
@@ -878,51 +907,55 @@
 
 	if (bind(dsock, (struct sockaddr *) &server,
 		 sizeof(struct sockaddr_in)) == -1) {
 	    char buff[22];
 
 	    ap_snprintf(buff, sizeof(buff), "%s:%d", inet_ntoa(server.sin_addr), server.sin_port);
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "proxy: error binding to ftp data socket %s", buff);
 	    ap_bclose(f);
 	    ap_pclosesocket(p, dsock);
 	    return HTTP_INTERNAL_SERVER_ERROR;
 	}
 	listen(dsock, 2);	/* only need a short queue */
     }
 
-/* set request */
+/* set request; "path" holds last path component */
     len = decodeenc(path);
 
     /* TM - if len == 0 then it must be a directory (you can't RETR nothing) */
 
     if (len == 0) {
 	parms = "d";
     }
     else {
-	ap_bputs("SIZE ", f);
-	ap_bwrite(f, path, len);
-	ap_bputs(CRLF, f);
+	ap_bvputs(f, "SIZE ", path, CRLF, NULL);
 	ap_bflush(f);
 	Explain1("FTP: SIZE %s", path);
-	i = ftp_getrc_msg(f, resp, resplen);
+	i = ftp_getrc_msg(f, resp, sizeof resp);
 	Explain2("FTP: returned status %d with response %s", i, resp);
 	if (i != 500) {		/* Size command not recognized */
 	    if (i == 550) {	/* Not a regular file */
 		Explain0("FTP: SIZE shows this is a directory");
 		parms = "d";
-		ap_bputs("CWD ", f);
-		ap_bwrite(f, path, len);
-		ap_bputs(CRLF, f);
+		ap_bvputs(f, "CWD ", path, CRLF, NULL);
 		ap_bflush(f);
 		Explain1("FTP: CWD %s", path);
 		i = ftp_getrc(f);
+		/* possible results: 250, 421, 500, 501, 502, 530, 550 */
+		/* 250 Requested file action okay, completed. */
+		/* 421 Service not available, closing control connection. */
+		/* 500 Syntax error, command unrecognized. */
+		/* 501 Syntax error in parameters or arguments. */
+		/* 502 Command not implemented. */
+		/* 530 Not logged in. */
+		/* 550 Requested action not taken. */
 		Explain1("FTP: returned status %d", i);
 		if (i == -1) {
 		    ap_kill_timeout(r);
-		    return ap_proxyerror(r, "Error sending to remote server");
+		    return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
 		}
 		if (i == 550) {
 		    ap_kill_timeout(r);
 		    return HTTP_NOT_FOUND;
 		}
 		if (i != 250) {
@@ -930,97 +963,169 @@
 		    return HTTP_BAD_GATEWAY;
 		}
 		path = "";
 		len = 0;
 	    }
 	    else if (i == 213) { /* Size command ok */
-		for (j = 0; j < resplen && ap_isdigit(resp[j]); j++)
+		for (j = 0; j < sizeof resp && ap_isdigit(resp[j]); j++)
 			;
 		resp[j] = '\0';
 		if (resp[0] != '\0')
 		    size = ap_pstrdup(p, resp);
 	    }
 	}
     }
 
+#ifdef AUTODETECT_PWD
+    ap_bvputs(f, "PWD", CRLF, NULL);
+    ap_bflush(f);
+    Explain0("FTP: PWD");
+/* responses: 257, 500, 501, 502, 421, 550 */
+    /* 257 "<directory-name>" <commentary> */
+    /* 421 Service not available, closing control connection. */
+    /* 500 Syntax error, command unrecognized. */
+    /* 501 Syntax error in parameters or arguments. */
+    /* 502 Command not implemented. */
+    /* 550 Requested action not taken. */
+    i = ftp_getrc_msg(f, resp, sizeof resp);
+    Explain1("FTP: PWD returned status %d", i);
+    if (i == -1 || i == 421) {
+	ap_kill_timeout(r);
+	return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
+    }
+    if (i == 550) {
+	ap_kill_timeout(r);
+	return HTTP_NOT_FOUND;
+    }
+    if (i == 257) {
+	const char *dirp = resp;
+	cwd = ap_getword_conf(r->pool, &dirp);
+    }
+#endif /*AUTODETECT_PWD*/
+
     if (parms[0] == 'd') {
 	if (len != 0)
-	    ap_bputs("LIST ", f);
+	    ap_bvputs(f, "LIST ", path, CRLF, NULL);
 	else
-	    ap_bputs("LIST -lag", f);
+	    ap_bputs("LIST -lag" CRLF, f);
 	Explain1("FTP: LIST %s", (len == 0 ? "" : path));
     }
     else {
-	ap_bputs("RETR ", f);
+	ap_bvputs(f, "RETR ", path, CRLF, NULL);
 	Explain1("FTP: RETR %s", path);
     }
-    ap_bwrite(f, path, len);
-    ap_bputs(CRLF, f);
     ap_bflush(f);
 /* RETR: 110, 125, 150, 226, 250, 421, 425, 426, 450, 451, 500, 501, 530, 550
    NLST: 125, 150, 226, 250, 421, 425, 426, 450, 451, 500, 501, 502, 530 */
+    /* 110 Restart marker reply. */
+    /* 125 Data connection already open; transfer starting. */
+    /* 150 File status okay; about to open data connection. */
+    /* 226 Closing data connection. */
+    /* 250 Requested file action okay, completed. */
+    /* 421 Service not available, closing control connection. */
+    /* 425 Can't open data connection. */
+    /* 426 Connection closed; transfer aborted. */
+    /* 450 Requested file action not taken. */
+    /* 451 Requested action aborted. Local error in processing. */
+    /* 500 Syntax error, command unrecognized. */
+    /* 501 Syntax error in parameters or arguments. */
+    /* 530 Not logged in. */
+    /* 550 Requested action not taken. */
     rc = ftp_getrc(f);
     Explain1("FTP: returned status %d", rc);
     if (rc == -1) {
 	ap_kill_timeout(r);
-	return ap_proxyerror(r, "Error sending to remote server");
+	return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
     }
     if (rc == 550) {
 	Explain0("FTP: RETR failed, trying LIST instead");
 	parms = "d";
-	ap_bputs("CWD ", f);
-	ap_bwrite(f, path, len);
-	ap_bputs(CRLF, f);
+	ap_bvputs(f, "CWD ", path, CRLF, NULL);
 	ap_bflush(f);
 	Explain1("FTP: CWD %s", path);
+	/* possible results: 250, 421, 500, 501, 502, 530, 550 */
+	/* 250 Requested file action okay, completed. */
+	/* 421 Service not available, closing control connection. */
+	/* 500 Syntax error, command unrecognized. */
+	/* 501 Syntax error in parameters or arguments. */
+	/* 502 Command not implemented. */
+	/* 530 Not logged in. */
+	/* 550 Requested action not taken. */
 	rc = ftp_getrc(f);
 	Explain1("FTP: returned status %d", rc);
 	if (rc == -1) {
 	    ap_kill_timeout(r);
-	    return ap_proxyerror(r, "Error sending to remote server");
+	    return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
 	}
 	if (rc == 550) {
 	    ap_kill_timeout(r);
 	    return HTTP_NOT_FOUND;
 	}
 	if (rc != 250) {
 	    ap_kill_timeout(r);
 	    return HTTP_BAD_GATEWAY;
 	}
 
+#ifdef AUTODETECT_PWD
+	ap_bvputs(f, "PWD", CRLF, NULL);
+	ap_bflush(f);
+	Explain0("FTP: PWD");
+/* responses: 257, 500, 501, 502, 421, 550 */
+	/* 257 "<directory-name>" <commentary> */
+	/* 421 Service not available, closing control connection. */
+	/* 500 Syntax error, command unrecognized. */
+	/* 501 Syntax error in parameters or arguments. */
+	/* 502 Command not implemented. */
+	/* 550 Requested action not taken. */
+	i = ftp_getrc_msg(f, resp, sizeof resp);
+	Explain1("FTP: PWD returned status %d", i);
+	if (i == -1 || i == 421) {
+	    ap_kill_timeout(r);
+	    return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
+	}
+	if (i == 550) {
+	    ap_kill_timeout(r);
+	    return HTTP_NOT_FOUND;
+	}
+	if (i == 257) {
+	    const char *dirp = resp;
+	    cwd = ap_getword_conf(r->pool, &dirp);
+	}
+#endif /*AUTODETECT_PWD*/
+
 	ap_bputs("LIST -lag" CRLF, f);
 	ap_bflush(f);
 	Explain0("FTP: LIST -lag");
 	rc = ftp_getrc(f);
 	Explain1("FTP: returned status %d", rc);
 	if (rc == -1)
-	    return ap_proxyerror(r, "Error sending to remote server");
+	    return ap_proxyerror(r, /*HTTP_BAD_GATEWAY*/ "Error reading from remote server");
     }
     ap_kill_timeout(r);
     if (rc != 125 && rc != 150 && rc != 226 && rc != 250)
 	return HTTP_BAD_GATEWAY;
 
-    r->status = 200;
+    r->status = HTTP_OK;
     r->status_line = "200 OK";
 
-    resp_hdrs = ap_make_array(p, 2, sizeof(struct hdr_entry));
+    resp_hdrs = ap_make_table(p, 2);
     c->hdrs = resp_hdrs;
 
     if (parms[0] == 'd')
-	ap_proxy_add_header(resp_hdrs, "Content-Type", "text/html", HDR_REP);
+	ap_table_set(resp_hdrs, "Content-Type", "text/html");
     else {
 	if (r->content_type != NULL) {
-	    ap_proxy_add_header(resp_hdrs, "Content-Type", r->content_type,
-			     HDR_REP);
+	    ap_table_set(resp_hdrs, "Content-Type", r->content_type);
 	    Explain1("FTP: Content-Type set to %s", r->content_type);
 	}
 	else {
-	    ap_proxy_add_header(resp_hdrs, "Content-Type", "text/plain", HDR_REP);
+	    ap_table_set(resp_hdrs, "Content-Type", "text/plain");
 	}
 	if (parms[0] != 'a' && size != NULL) {
-	    ap_proxy_add_header(resp_hdrs, "Content-Length", size, HDR_REP);
+	    /* We "trust" the ftp server to really serve (size) bytes... */
+	    ap_table_set(resp_hdrs, "Content-Length", size);
 	    Explain1("FTP: Content-Length set to %s", size);
 	}
     }
 
 /* check if NoCache directive on this host */
     for (i = 0; i < conf->nocaches->nelts; i++) {
@@ -1034,29 +1139,26 @@
     if (i != DECLINED) {
 	ap_pclosesocket(p, dsock);
 	ap_bclose(f);
 	return i;
     }
 
-    cache = c->fp;
-
-    c->hdrs = resp_hdrs;
-
     if (!pasvmode) {		/* wait for connection */
 	ap_hard_timeout("proxy ftp data connect", r);
 	clen = sizeof(struct sockaddr_in);
 	do
 	    csd = accept(dsock, (struct sockaddr *) &server, &clen);
 	while (csd == -1 && errno == EINTR);
 	if (csd == -1) {
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "proxy: failed to accept data connection");
 	    ap_pclosesocket(p, dsock);
 	    ap_bclose(f);
 	    ap_kill_timeout(r);
-	    ap_proxy_cache_error(c);
+	    if (c != NULL)
+		c = ap_proxy_cache_error(c);
 	    return HTTP_BAD_GATEWAY;
 	}
 	ap_note_cleanups_for_socket(p, csd);
 	data = ap_bcreate(p, B_RDWR | B_SOCKET);
 	ap_bpushfd(data, csd, -1);
 	ap_kill_timeout(r);
@@ -1072,74 +1174,75 @@
 
     ap_hard_timeout("proxy receive", r);
 /* send response */
 /* write status line */
     if (!r->assbackwards)
 	ap_rvputs(r, "HTTP/1.0 ", r->status_line, CRLF, NULL);
-    if (cache != NULL)
-	if (ap_bvputs(cache, "HTTP/1.0 ", r->status_line, CRLF,
-		   NULL) == -1)
-	    cache = ap_proxy_cache_error(c);
+    if (c != NULL && c->fp != NULL
+	&& ap_bvputs(c->fp, "HTTP/1.0 ", r->status_line, CRLF, NULL) == -1)
+	c = ap_proxy_cache_error(c);
 
 /* send headers */
-    len = resp_hdrs->nelts;
-    hdr = (struct hdr_entry *) resp_hdrs->elts;
-    for (i = 0; i < len; i++) {
-	if (hdr[i].field == NULL || hdr[i].value == NULL ||
-	    hdr[i].value[0] == '\0')
-	    continue;
-	if (!r->assbackwards)
-	    ap_rvputs(r, hdr[i].field, ": ", hdr[i].value, CRLF, NULL);
-	if (cache != NULL)
-	    if (ap_bvputs(cache, hdr[i].field, ": ", hdr[i].value, CRLF,
-		       NULL) == -1)
-		cache = ap_proxy_cache_error(c);
-    }
+    tdo.req = r;
+    tdo.cache = c;
+    ap_table_do(ap_proxy_send_hdr_line, &tdo, resp_hdrs, NULL);
 
     if (!r->assbackwards)
 	ap_rputs(CRLF, r);
-    if (cache != NULL)
-	if (ap_bputs(CRLF, cache) == -1)
-	    cache = ap_proxy_cache_error(c);
+    if (c != NULL && c->fp != NULL && ap_bputs(CRLF, c->fp) == -1)
+	c = ap_proxy_cache_error(c);
 
     ap_bsetopt(r->connection->client, BO_BYTECT, &zero);
     r->sent_bodyct = 1;
 /* send body */
     if (!r->header_only) {
 	if (parms[0] != 'd') {
 /* we need to set this for ap_proxy_send_fb()... */
-	    c->cache_completion = 0;
-	    ap_proxy_send_fb(data, r, cache, c);
+	    if (c != NULL)
+		c->cache_completion = 0;
+	    ap_proxy_send_fb(data, r, c);
 	} else
-	    send_dir(data, r, cache, c, url);
+	    send_dir(data, r, c, cwd);
 
 	if (rc == 125 || rc == 150)
 	    rc = ftp_getrc(f);
+
+	/* XXX: we checked for 125||150||226||250 above. This is redundant. */
 	if (rc != 226 && rc != 250)
-	    ap_proxy_cache_error(c);
+	    c = ap_proxy_cache_error(c);
     }
     else {
 /* abort the transfer */
 	ap_bputs("ABOR" CRLF, f);
 	ap_bflush(f);
 	if (!pasvmode)
 	    ap_bclose(data);
 	Explain0("FTP: ABOR");
 /* responses: 225, 226, 421, 500, 501, 502 */
+    /* 225 Data connection open; no transfer in progress. */
+    /* 226 Closing data connection. */
+    /* 421 Service not available, closing control connection. */
+    /* 500 Syntax error, command unrecognized. */
+    /* 501 Syntax error in parameters or arguments. */
+    /* 502 Command not implemented. */
 	i = ftp_getrc(f);
 	Explain1("FTP: returned status %d", i);
     }
 
     ap_kill_timeout(r);
     ap_proxy_cache_tidy(c);
 
 /* finish */
     ap_bputs("QUIT" CRLF, f);
     ap_bflush(f);
     Explain0("FTP: QUIT");
 /* responses: 221, 500 */
+    /* 221 Service closing control connection. */
+    /* 500 Syntax error, command unrecognized. */
+    i = ftp_getrc(f);
+    Explain1("FTP: QUIT: status %d", i);
 
     if (pasvmode)
 	ap_bclose(data);
     ap_bclose(f);
 
     ap_rflush(r);	/* flush before garbage collection */
diff -BEr -U 6 apache_1.3.1/src/modules/proxy/proxy_http.c apache_1.3.2/src/modules/proxy/proxy_http.c
--- apache_1.3.1/src/modules/proxy/proxy_http.c	1998-07-10 03:45:56.000000000 +0800
+++ apache_1.3.2/src/modules/proxy/proxy_http.c	1998-09-01 03:51:59.000000000 +0800
@@ -162,32 +162,35 @@
  * go via the proxy.
  * Note that if a proxy is used, then URLs other than http: can be accessed,
  * also, if we have trouble which is clearly specific to the proxy, then
  * we return DECLINED so that we can try another proxy. (Or the direct
  * route.)
  */
-int ap_proxy_http_handler(request_rec *r, struct cache_req *c, char *url,
+int ap_proxy_http_handler(request_rec *r, cache_req *c, char *url,
 		       const char *proxyhost, int proxyport)
 {
     const char *strp;
     char *strp2;
     const char *err, *desthost;
     int i, j, sock, len, backasswards;
-    array_header *reqhdrs_arr, *resp_hdrs;
+    array_header *reqhdrs_arr;
+    table *resp_hdrs;
     table_entry *reqhdrs;
     struct sockaddr_in server;
     struct in_addr destaddr;
     struct hostent server_hp;
-    BUFF *f, *cache;
-    struct hdr_entry *hdr;
+    BUFF *f;
     char buffer[HUGE_STRING_LEN];
+    char portstr[32];
     pool *p = r->pool;
     const long int zero = 0L;
     int destport = 0;
     char *destportstr = NULL;
     const char *urlptr = NULL;
+    const char *datestr;
+    struct tbl_do_args tdo;
 
     void *sconf = r->server->module_config;
     proxy_server_conf *conf =
     (proxy_server_conf *) ap_get_module_config(sconf, &proxy_module);
     struct noproxy_entry *npent = (struct noproxy_entry *) conf->noproxies->elts;
     struct nocache_entry *ncent = (struct nocache_entry *) conf->nocaches->elts;
@@ -245,22 +248,22 @@
 	if (err != NULL)
 	    return ap_proxyerror(r, err);	/* give up */
     }
 
     sock = ap_psocket(p, PF_INET, SOCK_STREAM, IPPROTO_TCP);
     if (sock == -1) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "proxy: error creating socket");
 	return HTTP_INTERNAL_SERVER_ERROR;
     }
 
     if (conf->recv_buffer_size) {
 	if (setsockopt(sock, SOL_SOCKET, SO_RCVBUF,
 		       (const char *) &conf->recv_buffer_size, sizeof(int))
 	    == -1) {
-	    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			 "setsockopt(SO_RCVBUF): Failed to set ProxyReceiveBufferSize, using default");
 	}
     }
 
 #ifdef SINIX_D_RESOLVER_BUG
     {
@@ -298,51 +301,89 @@
     f = ap_bcreate(p, B_RDWR | B_SOCKET);
     ap_bpushfd(f, sock, sock);
 
     ap_hard_timeout("proxy send", r);
     ap_bvputs(f, r->method, " ", proxyhost ? url : urlptr, " HTTP/1.0" CRLF,
 	   NULL);
-    ap_bvputs(f, "Host: ", desthost, NULL);
     if (destportstr != NULL && destport != DEFAULT_HTTP_PORT)
-	ap_bvputs(f, ":", destportstr, CRLF, NULL);
+	ap_bvputs(f, "Host: ", desthost, ":", destportstr, CRLF, NULL);
     else
-	ap_bputs(CRLF, f);
+	ap_bvputs(f, "Host: ", desthost, CRLF, NULL);
+
+    if (conf->viaopt == via_block) {
+	/* Block all outgoing Via: headers */
+	ap_table_unset(r->headers_in, "Via");
+    } else if (conf->viaopt != via_off) {
+	/* Create a "Via:" request header entry and merge it */
+	i = ap_get_server_port(r);
+	if (ap_is_default_port(i,r)) {
+	    strcpy(portstr,"");
+	} else {
+	    ap_snprintf(portstr, sizeof portstr, ":%d", i);
+	}
+	/* Generate outgoing Via: header with/without server comment: */
+	ap_table_mergen(r->headers_in, "Via",
+		    (conf->viaopt == via_full)
+			? ap_psprintf(p, "%d.%d %s%s (%s)",
+				HTTP_VERSION_MAJOR(r->proto_num),
+				HTTP_VERSION_MINOR(r->proto_num),
+				ap_get_server_name(r), portstr,
+				SERVER_BASEVERSION)
+			: ap_psprintf(p, "%d.%d %s%s",
+				HTTP_VERSION_MAJOR(r->proto_num),
+				HTTP_VERSION_MINOR(r->proto_num),
+				ap_get_server_name(r), portstr)
+			);
+    }
 
     reqhdrs_arr = ap_table_elts(r->headers_in);
     reqhdrs = (table_entry *) reqhdrs_arr->elts;
     for (i = 0; i < reqhdrs_arr->nelts; i++) {
 	if (reqhdrs[i].key == NULL || reqhdrs[i].val == NULL
 	/* Clear out headers not to send */
 	    || !strcasecmp(reqhdrs[i].key, "Host")	/* Already sent */
-	    ||!strcasecmp(reqhdrs[i].key, "Proxy-Authorization"))
+	    /* XXX: @@@ FIXME: "Proxy-Authorization" should *only* be 
+	     * suppressed if THIS server requested the authentication,
+	     * not when a frontend proxy requested it!
+	     */
+	    || !strcasecmp(reqhdrs[i].key, "Proxy-Authorization"))
 	    continue;
 	ap_bvputs(f, reqhdrs[i].key, ": ", reqhdrs[i].val, CRLF, NULL);
     }
 
     ap_bputs(CRLF, f);
 /* send the request data, if any. N.B. should we trap SIGPIPE ? */
 
     if (ap_should_client_block(r)) {
-	while ((i = ap_get_client_block(r, buffer, HUGE_STRING_LEN)) > 0)
+	while ((i = ap_get_client_block(r, buffer, sizeof buffer)) > 0)
 	    ap_bwrite(f, buffer, i);
     }
     ap_bflush(f);
     ap_kill_timeout(r);
 
     ap_hard_timeout("proxy receive", r);
 
-    len = ap_bgets(buffer, HUGE_STRING_LEN - 1, f);
+    len = ap_bgets(buffer, sizeof buffer - 1, f);
     if (len == -1 || len == 0) {
 	ap_bclose(f);
 	ap_kill_timeout(r);
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
+		     "ap_bgets() - proxy receive - Error reading from remote server %s",
+		     proxyhost ? proxyhost : desthost);
 	return ap_proxyerror(r, "Error reading from remote server");
     }
 
 /* Is it an HTTP/1 response?  This is buggy if we ever see an HTTP/1.10 */
     if (ap_checkmask(buffer, "HTTP/#.# ###*")) {
-/* If not an HTTP/1 messsage or if the status line was > 8192 bytes */
+	int major, minor;
+	if (2 != sscanf(buffer, "HTTP/%u.%u", &major, &minor)) {
+	    major = 1;
+	    minor = 0;
+	}
+
+/* If not an HTTP/1 message or if the status line was > 8192 bytes */
 	if (buffer[5] != '1' || buffer[len - 1] != '\n') {
 	    ap_bclose(f);
 	    ap_kill_timeout(r);
 	    return HTTP_BAD_GATEWAY;
 	}
 	backasswards = 0;
@@ -354,48 +395,72 @@
 	r->status_line = ap_pstrdup(p, &buffer[9]);
 
 /* read the headers. */
 /* N.B. for HTTP/1.0 clients, we have to fold line-wrapped headers */
 /* Also, take care with headers with multiple occurences. */
 
-	resp_hdrs = ap_proxy_read_headers(p, buffer, HUGE_STRING_LEN, f);
+	resp_hdrs = ap_proxy_read_headers(r, buffer, HUGE_STRING_LEN, f);
+	if (resp_hdrs == NULL) {
+	    ap_log_error(APLOG_MARK, APLOG_WARNING|APLOG_NOERRNO, r->server,
+		 "proxy: Bad HTTP/%d.%d header returned by %s (%s)",
+		 major, minor, r->uri, r->method);
+	    resp_hdrs = ap_make_table(p, 20);
+	    nocache = 1;    /* do not cache this broken file */
+	}
+
+	if (conf->viaopt != via_off && conf->viaopt != via_block) {
+	    /* Create a "Via:" response header entry and merge it */
+	    i = ap_get_server_port(r);
+	    if (ap_is_default_port(i,r)) {
+		strcpy(portstr,"");
+	    } else {
+		ap_snprintf(portstr, sizeof portstr, ":%d", i);
+	    }
+	    ap_table_mergen((table *)resp_hdrs, "Via",
+			    (conf->viaopt == via_full)
+			    ? ap_psprintf(p, "%d.%d %s%s (%s)",
+				major, minor,
+				ap_get_server_name(r), portstr,
+				SERVER_BASEVERSION)
+			    : ap_psprintf(p, "%d.%d %s%s",
+				major, minor,
+				ap_get_server_name(r), portstr)
+			    );
+	}
 
-	clear_connection(p, (table *) resp_hdrs);	/* Strip Connection hdrs */
+	clear_connection(p, resp_hdrs);	/* Strip Connection hdrs */
     }
     else {
 /* an http/0.9 response */
 	backasswards = 1;
 	r->status = 200;
 	r->status_line = "200 OK";
 
 /* no headers */
-	resp_hdrs = ap_make_array(p, 2, sizeof(struct hdr_entry));
+	resp_hdrs = ap_make_table(p, 20);
     }
 
     c->hdrs = resp_hdrs;
 
     ap_kill_timeout(r);
 
 /*
  * HTTP/1.0 requires us to accept 3 types of dates, but only generate
  * one type
  */
-
-    hdr = (struct hdr_entry *) resp_hdrs->elts;
-    for (i = 0; i < resp_hdrs->nelts; i++) {
-	if (hdr[i].value[0] == '\0')
-	    continue;
-	strp = hdr[i].field;
-	if (strcasecmp(strp, "Date") == 0 ||
-	    strcasecmp(strp, "Last-Modified") == 0 ||
-	    strcasecmp(strp, "Expires") == 0)
-	    hdr[i].value = ap_proxy_date_canon(p, hdr[i].value);
-	if (strcasecmp(strp, "Location") == 0 ||
-	    strcasecmp(strp, "URI") == 0)
-	    hdr[i].value = proxy_location_reverse_map(r, hdr[i].value);
-    }
+    if ((datestr = ap_table_get(resp_hdrs, "Date")) != NULL)
+	ap_table_set(resp_hdrs, "Date", ap_proxy_date_canon(p, datestr));
+    if ((datestr = ap_table_get(resp_hdrs, "Last-Modified")) != NULL)
+	ap_table_set(resp_hdrs, "Last-Modified", ap_proxy_date_canon(p, datestr));
+    if ((datestr = ap_table_get(resp_hdrs, "Expires")) != NULL)
+	ap_table_set(resp_hdrs, "Expires", ap_proxy_date_canon(p, datestr));
+
+    if ((datestr = ap_table_get(resp_hdrs, "Location")) != NULL)
+	ap_table_set(resp_hdrs, "Location", proxy_location_reverse_map(r, datestr));
+    if ((datestr = ap_table_get(resp_hdrs, "URI")) != NULL)
+	ap_table_set(resp_hdrs, "URI", proxy_location_reverse_map(r, datestr));
 
 /* check if NoCache directive on this host */
     for (i = 0; i < conf->nocaches->nelts; i++) {
 	if ((ncent[i].name != NULL && strstr(desthost, ncent[i].name) != NULL)
 	    || destaddr.s_addr == ncent[i].addr.s_addr || ncent[i].name[0] == '*')
 	    nocache = 1;
@@ -404,52 +469,38 @@
     i = ap_proxy_cache_update(c, resp_hdrs, !backasswards, nocache);
     if (i != DECLINED) {
 	ap_bclose(f);
 	return i;
     }
 
-    cache = c->fp;
-
     ap_hard_timeout("proxy receive", r);
 
 /* write status line */
     if (!r->assbackwards)
 	ap_rvputs(r, "HTTP/1.0 ", r->status_line, CRLF, NULL);
-    if (cache != NULL)
-	if (ap_bvputs(cache, "HTTP/1.0 ", r->status_line, CRLF, NULL) == -1)
-	    cache = ap_proxy_cache_error(c);
+    if (c != NULL && c->fp != NULL &&
+	ap_bvputs(c->fp, "HTTP/1.0 ", r->status_line, CRLF, NULL) == -1)
+	c = ap_proxy_cache_error(c);
 
 /* send headers */
-    for (i = 0; i < resp_hdrs->nelts; i++) {
-	if (hdr[i].field == NULL || hdr[i].value == NULL ||
-	    hdr[i].value[0] == '\0')
-	    continue;
-	if (!r->assbackwards) {
-	    ap_rvputs(r, hdr[i].field, ": ", hdr[i].value, CRLF, NULL);
-	    ap_table_set(r->headers_out, hdr[i].field, hdr[i].value);
-	}
-	if (cache != NULL)
-	    if (ap_bvputs(cache, hdr[i].field, ": ", hdr[i].value, CRLF,
-		       NULL) == -1)
-		cache = ap_proxy_cache_error(c);
-    }
+    tdo.req = r;
+    tdo.cache = c;
+    ap_table_do(ap_proxy_send_hdr_line, &tdo, resp_hdrs, NULL);
 
     if (!r->assbackwards)
 	ap_rputs(CRLF, r);
-    if (cache != NULL)
-	if (ap_bputs(CRLF, cache) == -1)
-	    cache = ap_proxy_cache_error(c);
+    if (c != NULL && c->fp != NULL && ap_bputs(CRLF, c->fp) == -1)
+	c = ap_proxy_cache_error(c);
 
     ap_bsetopt(r->connection->client, BO_BYTECT, &zero);
     r->sent_bodyct = 1;
 /* Is it an HTTP/0.9 respose? If so, send the extra data */
     if (backasswards) {
 	ap_bwrite(r->connection->client, buffer, len);
-	if (cache != NULL)
-	    if (ap_bwrite(f, buffer, len) != len)
-		cache = ap_proxy_cache_error(c);
+	if (c != NULL && c->fp != NULL && ap_bwrite(c->fp, buffer, len) != len)
+	    c = ap_proxy_cache_error(c);
     }
     ap_kill_timeout(r);
 
 #ifdef CHARSET_EBCDIC
     /* What we read/write after the header should not be modified
      * (i.e., the cache copy is ASCII, not EBCDIC, even for text/html)
@@ -461,13 +512,13 @@
 /* send body */
 /* if header only, then cache will be NULL */
 /* HTTP/1.0 tells us to read to EOF, rather than content-length bytes */
     if (!r->header_only) {
 /* we need to set this for ap_proxy_send_fb()... */
 	c->cache_completion = conf->cache.cache_completion;
-	ap_proxy_send_fb(f, r, cache, c);
+	ap_proxy_send_fb(f, r, c);
     }
 
     ap_proxy_cache_tidy(c);
 
     ap_bclose(f);
 
diff -BEr -U 6 apache_1.3.1/src/modules/proxy/proxy_util.c apache_1.3.2/src/modules/proxy/proxy_util.c
--- apache_1.3.1/src/modules/proxy/proxy_util.c	1998-07-10 03:45:57.000000000 +0800
+++ apache_1.3.2/src/modules/proxy/proxy_util.c	1998-09-01 03:51:59.000000000 +0800
@@ -59,12 +59,13 @@
 #include "mod_proxy.h"
 #include "http_main.h"
 #include "ap_md5.h"
 #include "multithread.h"
 #include "http_log.h"
 #include "util_uri.h"
+#include "util_date.h"	/* get ap_checkmask() decl. */
 
 static int proxy_match_ipaddr(struct dirconn_entry *This, request_rec *r);
 static int proxy_match_domainname(struct dirconn_entry *This, request_rec *r);
 static int proxy_match_hostname(struct dirconn_entry *This, request_rec *r);
 static int proxy_match_word(struct dirconn_entry *This, request_rec *r);
 
@@ -356,95 +357,139 @@
     q = ap_palloc(p, 30);
     ap_snprintf(q, 30, "%s, %.2d %s %d %.2d:%.2d:%.2d GMT", ap_day_snames[wk], mday,
 		ap_month_snames[mon], year, hour, min, sec);
     return q;
 }
 
+
+/* NOTE: This routine is taken from http_protocol::getline()
+ * because the old code found in the proxy module was too
+ * difficult to understand and maintain.
+ */
+/* Get a line of protocol input, including any continuation lines
+ * caused by MIME folding (or broken clients) if fold != 0, and place it
+ * in the buffer s, of size n bytes, without the ending newline.
+ *
+ * Returns -1 on error, or the length of s.
+ *
+ * Note: Because bgets uses 1 char for newline and 1 char for NUL,
+ *       the most we can get is (n - 2) actual characters if it
+ *       was ended by a newline, or (n - 1) characters if the line
+ *       length exceeded (n - 1).  So, if the result == (n - 1),
+ *       then the actual input line exceeded the buffer length,
+ *       and it would be a good idea for the caller to puke 400 or 414.
+ */
+static int proxy_getline(char *s, int n, BUFF *in, int fold)
+{
+    char *pos, next;
+    int retval;
+    int total = 0;
+
+    pos = s;
+
+    do {
+        retval = ap_bgets(pos, n, in);     /* retval == -1 if error, 0 if EOF */
+
+        if (retval <= 0)
+            return ((retval < 0) && (total == 0)) ? -1 : total;
+
+        /* retval is the number of characters read, not including NUL      */
+
+        n -= retval;            /* Keep track of how much of s is full     */
+        pos += (retval - 1);    /* and where s ends                        */
+        total += retval;        /* and how long s has become               */
+
+        if (*pos == '\n') {     /* Did we get a full line of input?        */
+            *pos = '\0';
+            --total;
+            ++n;
+        }
+        else
+            return total;       /* if not, input line exceeded buffer size */
+
+        /* Continue appending if line folding is desired and
+         * the last line was not empty and we have room in the buffer and
+         * the next line begins with a continuation character.
+         */
+    } while (fold && (retval != 1) && (n > 1)
+                  && (ap_blookc(&next, in) == 1)
+                  && ((next == ' ') || (next == '\t')));
+
+    return total;
+}
+
+
 /*
  * Reads headers from a buffer and returns an array of headers.
  * Returns NULL on file error
+ * This routine tries to deal with too long lines and continuation lines.
+ * @@@: XXX: FIXME: currently the headers are passed thru un-merged. 
+ * Is that okay, or should they be collapsed where possible?
  */
-array_header *
-             ap_proxy_read_headers(pool *p, char *buffer, int size, BUFF *f)
+table *ap_proxy_read_headers(request_rec *r, char *buffer, int size, BUFF *f)
 {
-    int gotcr, len, i, j;
-    array_header *resp_hdrs;
-    struct hdr_entry *hdr;
-    char *strp;
-    const char *strcp;
-
-    resp_hdrs = ap_make_array(p, 10, sizeof(struct hdr_entry));
-    hdr = NULL;
-
-    gotcr = 1;
-    for (;;) {
-	len = ap_bgets(buffer, size, f);
-	if (len == -1)
-	    return NULL;
-	if (len == 0)
-	    break;
-	if (buffer[len - 1] == '\n') {
-	    buffer[--len] = '\0';
-	    i = 1;
-	}
-	else
-	    i = 0;
+    table *resp_hdrs;
+    int len;
+    char *value, *end;
+    char field[MAX_STRING_LEN];
+
+    resp_hdrs = ap_make_table(r->pool, 20);
+
+    /*
+     * Read header lines until we get the empty separator line, a read error,
+     * the connection closes (EOF), or we timeout.
+     */
+    while ((len = proxy_getline(buffer, size, f, 1)) > 0) {
+	
+	if (!(value = strchr(buffer, ':'))) {     /* Find the colon separator */
+
+	    /* Buggy MS IIS servers sometimes return invalid headers
+	     * (an extra "HTTP/1.0 200, OK" line sprinkled in between
+	     * the usual MIME headers). Try to deal with it in a sensible
+	     * way, but log the fact.
+	     * XXX: The mask check is buggy if we ever see an HTTP/1.10 */
 
-	if (!gotcr || buffer[0] == ' ' || buffer[0] == '\t') {
-	    /* a continuation header */
-	    if (hdr == NULL) {
-		/* error!! */
-		if (!i) {
-		    i = ap_bskiplf(f);
-		    if (i == -1)
-			return NULL;
-		}
-		gotcr = 1;
-		continue;
+	    if (!ap_checkmask(buffer, "HTTP/#.# ###*")) {
+		/* Nope, it wasn't even an extra HTTP header. Give up. */
+		return NULL;
 	    }
-	    hdr->value = ap_pstrcat(p, hdr->value, buffer, NULL);
+
+	    ap_log_error(APLOG_MARK, APLOG_WARNING|APLOG_NOERRNO, r->server,
+			 "proxy: Ignoring duplicate HTTP header "
+			 "returned by %s (%s)", r->uri, r->method);
+	    continue;
 	}
-	else if (gotcr && len == 0)
-	    break;
-	else {
-	    strp = strchr(buffer, ':');
-	    if (strp == NULL) {
-		/* error!! */
-		if (!gotcr) {
-		    i = ap_bskiplf(f);
-		    if (i == -1)
-			return NULL;
-		}
-		gotcr = 1;
-		hdr = NULL;
-		continue;
+
+        *value = '\0';
+        ++value;
+	/* XXX: RFC2068 defines only SP and HT as whitespace, this test is
+	 * wrong... and so are many others probably.
+	 */
+        while (ap_isspace(*value))
+            ++value;            /* Skip to start of value   */
+
+	/* should strip trailing whitespace as well */
+	for (end = &value[strlen(value)-1]; end > value && ap_isspace(*end); --end)
+	    *end = '\0';
+
+        ap_table_add(resp_hdrs, buffer, value);
+
+	/* the header was too long; at the least we should skip extra data */
+	if (len >= size - 1) { 
+	    while ((len = proxy_getline(field, MAX_STRING_LEN, f, 1))
+		    >= MAX_STRING_LEN - 1) {
+		/* soak up the extra data */
 	    }
-	    hdr = ap_push_array(resp_hdrs);
-	    *(strp++) = '\0';
-	    hdr->field = ap_pstrdup(p, buffer);
-	    while (*strp == ' ' || *strp == '\t')
-		strp++;
-	    hdr->value = ap_pstrdup(p, strp);
-	    gotcr = i;
+	    if (len == 0) /* time to exit the larger loop as well */
+		break;
 	}
     }
-
-    hdr = (struct hdr_entry *) resp_hdrs->elts;
-    for (i = 0; i < resp_hdrs->nelts; i++) {
-	strcp = hdr[i].value;
-	j = strlen(strcp);
-	while (j > 0 && (strcp[j - 1] == ' ' || strcp[j - 1] == '\t'))
-	    j--;
-	/* Note that this is OK, coz we created the header above */
-	((char *)strcp)[j] = '\0';
-    }
-
     return resp_hdrs;
 }
 
-long int ap_proxy_send_fb(BUFF *f, request_rec *r, BUFF *f2, struct cache_req *c)
+long int ap_proxy_send_fb(BUFF *f, request_rec *r, cache_req *c)
 {
     int  ok = 1;
     char buf[IOBUFSIZE];
     long total_bytes_rcv;
     register int n, o, w;
     conn_rec *con = r->connection;
@@ -454,14 +499,14 @@
     if (c)
         c->written = 0;
 
 #ifdef CHARSET_EBCDIC
     /* The cache copy is ASCII, not EBCDIC, even for text/html) */
     ap_bsetflag(f, B_ASCII2EBCDIC|B_EBCDIC2ASCII, 0);
-    if (f2 != NULL)
-	ap_bsetflag(f2, B_ASCII2EBCDIC|B_EBCDIC2ASCII, 0);
+    if (c != NULL && c->fp != NULL)
+	ap_bsetflag(c->fp, B_ASCII2EBCDIC|B_EBCDIC2ASCII, 0);
     ap_bsetflag(con->client, B_ASCII2EBCDIC|B_EBCDIC2ASCII, 0);
 #endif
 
     /* Since we are reading from one buffer and writing to another,
      * it is unsafe to do a soft_timeout here, at least until the proxy
      * has its own timeout handler which can set both buffers to EOUT.
@@ -489,67 +534,70 @@
     } else {
         ap_hard_timeout("proxy send body", r);
         alt_to = 0;
     }
 #endif
 
-    while (ok && f != NULL) {
+    while (ok) {
         if (alt_to)
             ap_hard_timeout("proxy send body", r);
 
+	/* Read block from server */
 	n = ap_bread(f, buf, IOBUFSIZE);
 
         if (alt_to)
             ap_kill_timeout(r);
         else
             ap_reset_timeout(r);
 
 	if (n == -1) {		/* input error */
-	    if (f2 != NULL)
-		f2 = ap_proxy_cache_error(c);
+	    if (c != NULL)
+		c = ap_proxy_cache_error(c);
 	    break;
 	}
 	if (n == 0)
 	    break;		/* EOF */
 	o = 0;
 	total_bytes_rcv += n;
 
-        if (f2 != NULL) {
-            if (ap_bwrite(f2, &buf[0], n) != n) {
-                f2 = ap_proxy_cache_error(c);
+	/* Write to cache first. */
+        if (c != NULL && c->fp != NULL) {
+            if (ap_bwrite(c->fp, &buf[0], n) != n) {
+                c = ap_proxy_cache_error(c);
             } else {
                 c->written += n;
             }
         }
 
+	/* Write the block to the client, detect aborted transfers */
         while (n && !con->aborted) {
             if (alt_to)
                 ap_soft_timeout("proxy send body", r);
 
             w = ap_bwrite(con->client, &buf[o], n);
 
             if (alt_to)
                 ap_kill_timeout(r);
             else
                 ap_reset_timeout(r);
 
             if (w <= 0) {
-                if (f2 != NULL) {
+                if (c != NULL) {
                     /* when a send failure occurs, we need to decide
                      * whether to continue loading and caching the
                      * document, or to abort the whole thing
                      */
                     ok = (c->len > 0) &&
                          (c->cache_completion > 0) &&
                          (c->len * c->cache_completion < total_bytes_rcv);
 
                     if (! ok) {
                         ap_pclosef(c->req->pool, c->fp->fd);
                         c->fp = NULL;
-                        f2 = NULL;
                         unlink(c->tempfile);
+			c = NULL;
                     }
                 }
                 con->aborted = 1;
                 break;
             }
             n -= w;
@@ -562,89 +610,34 @@
 
     ap_kill_timeout(r);
     return total_bytes_rcv;
 }
 
 /*
- * Read a header from the array, returning the first entry
- */
-struct hdr_entry *
-          ap_proxy_get_header(array_header *hdrs_arr, const char *name)
-{
-    struct hdr_entry *hdrs;
-    int i;
-
-    hdrs = (struct hdr_entry *) hdrs_arr->elts;
-    for (i = 0; i < hdrs_arr->nelts; i++)
-	if (hdrs[i].field != NULL && strcasecmp(name, hdrs[i].field) == 0)
-	    return &hdrs[i];
-
-    return NULL;
-}
-
-/*
- * Add to the header reply, either concatenating, or replacing existin
- * headers. It stores the pointers provided, so make sure the data
- * is not subsequently overwritten
- */
-struct hdr_entry *
-          ap_proxy_add_header(array_header *hdrs_arr, const char *field, const char *value,
-			   int rep)
-{
-    int i;
-    struct hdr_entry *hdrs;
-
-    hdrs = (struct hdr_entry *) hdrs_arr->elts;
-    if (rep)
-	for (i = 0; i < hdrs_arr->nelts; i++)
-	    if (hdrs[i].field != NULL && strcasecmp(field, hdrs[i].field) == 0) {
-		hdrs[i].value = value;
-		return hdrs;
-	    }
-
-    hdrs = ap_push_array(hdrs_arr);
-    hdrs->field = field;
-    hdrs->value = value;
-
-    return hdrs;
-}
-
-void ap_proxy_del_header(array_header *hdrs_arr, const char *field)
-{
-    int i;
-    struct hdr_entry *hdrs;
-
-    hdrs = (struct hdr_entry *) hdrs_arr->elts;
-
-    for (i = 0; i < hdrs_arr->nelts; i++)
-	if (hdrs[i].field != NULL && strcasecmp(field, hdrs[i].field) == 0)
-	    hdrs[i].value = NULL;
-}
-
-/*
  * Sends response line and headers.  Uses the client fd and the 
  * headers_out array from the passed request_rec to talk to the client
  * and to properly set the headers it sends for things such as logging.
  * 
  * A timeout should be set before calling this routine.
  */
-void ap_proxy_send_headers(request_rec *r, const char *respline, array_header *hdrs_arr)
+void ap_proxy_send_headers(request_rec *r, const char *respline, table *t)
 {
-    struct hdr_entry *hdrs;
     int i;
     BUFF *fp = r->connection->client;
-
-    hdrs = (struct hdr_entry *) hdrs_arr->elts;
+    table_entry *elts = (table_entry *) ap_table_elts(t)->elts;
 
     ap_bputs(respline, fp);
     ap_bputs(CRLF, fp);
-    for (i = 0; i < hdrs_arr->nelts; i++) {
-	if (hdrs[i].field == NULL)
-	    continue;
-	ap_bvputs(fp, hdrs[i].field, ": ", hdrs[i].value, CRLF, NULL);
-	ap_table_set(r->headers_out, hdrs[i].field, hdrs[i].value);
+
+    for (i = 0; i < ap_table_elts(t)->nelts; ++i) {
+	if (elts[i].key != NULL) {
+	    ap_bvputs(fp, elts[i].key, ": ", elts[i].val, CRLF, NULL);
+	    /* FIXME: @@@ This used to be ap_table_set(), but I think
+	     * ap_table_addn() is correct. MnKr */
+	    ap_table_addn(r->headers_out, elts[i].key, elts[i].val);
+	}
     }
 
     ap_bputs(CRLF, fp);
 }
 
 
@@ -824,16 +817,16 @@
 	else
 	    y[i] = ch + '0';
     }
     y[8] = '\0';
 }
 
-BUFF *
-     ap_proxy_cache_error(struct cache_req *c)
+
+cache_req *ap_proxy_cache_error(cache_req *c)
 {
-    ap_log_error(APLOG_MARK, APLOG_ERR, c->req->server,
+    ap_log_rerror(APLOG_MARK, APLOG_ERR, c->req,
 		 "proxy: error writing to cache file %s", c->tempfile);
     ap_pclosef(c->req->pool, c->fp->fd);
     c->fp = NULL;
     unlink(c->tempfile);
     return NULL;
 }
@@ -905,13 +898,13 @@
 
     url = ap_pstrdup(r->pool, &url[1]);	/* make it point to "//", which is what proxy_canon_netloc expects */
 
     err = ap_proxy_canon_netloc(r->pool, &url, &user, &password, &host, &port);
 
     if (err != NULL)
-	ap_log_error(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR|APLOG_NOERRNO, r,
 		     "%s", err);
 
     r->hostname = host;
 
     return host;		/* ought to return the port, too */
 }
@@ -1240,14 +1233,41 @@
 #ifdef WIN32
 	if (i == SOCKET_ERROR)
 	    errno = WSAGetLastError();
 #endif /* WIN32 */
     } while (i == -1 && errno == EINTR);
     if (i == -1) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		     "proxy connect to %s port %d failed",
 		     inet_ntoa(addr->sin_addr), ntohs(addr->sin_port));
     }
     ap_kill_timeout(r);
 
     return i;
 }
+
+/* This function is called by ap_table_do() for all header lines */
+/* (from proxy_http.c and proxy_ftp.c) */
+/* It is passed a table_do_args struct pointer and a MIME field and value pair */
+int ap_proxy_send_hdr_line(void *p, const char *key, const char *value)
+{
+    struct tbl_do_args *parm = (struct tbl_do_args *)p;
+
+    if (key == NULL || value == NULL || value[0] == '\0')
+	return 1;
+    if (!parm->req->assbackwards)
+	ap_rvputs(parm->req, key, ": ", value, CRLF, NULL);
+    if (parm->cache != NULL && parm->cache->fp != NULL &&
+	ap_bvputs(parm->cache->fp, key, ": ", value, CRLF, NULL) == -1)
+	    parm->cache = ap_proxy_cache_error(parm->cache);
+    return 1; /* tell ap_table_do() to continue calling us for more headers */
+}
+
+/* send a text line to one or two BUFF's; return line length */
+unsigned ap_proxy_bputs2(const char *data, BUFF *client, cache_req *cache)
+{
+    unsigned len = ap_bputs(data, client);
+    if (cache != NULL && cache->fp != NULL)
+	ap_bputs(data, cache->fp);
+    return len;
+}
+
diff -BEr -U 6 apache_1.3.1/src/modules/standard/Makefile.tmpl apache_1.3.2/src/modules/standard/Makefile.tmpl
--- apache_1.3.1/src/modules/standard/Makefile.tmpl	1998-07-13 19:32:46.000000000 +0800
+++ apache_1.3.2/src/modules/standard/Makefile.tmpl	1998-09-07 14:59:35.000000000 +0800
@@ -2,230 +2,255 @@
 #Dependencies
 
 $(OBJS) $(OBJS_PIC): Makefile
 
 # DO NOT REMOVE
 mod_access.o: mod_access.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_core.h \
  $(INCDIR)/http_config.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_request.h
 mod_actions.o: mod_actions.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_request.h $(INCDIR)/http_core.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/http_main.h \
  $(INCDIR)/http_log.h $(INCDIR)/util_script.h
 mod_alias.o: mod_alias.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h
 mod_asis.o: mod_asis.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/http_log.h \
  $(INCDIR)/util_script.h $(INCDIR)/http_main.h \
  $(INCDIR)/http_request.h
 mod_auth.o: mod_auth.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_protocol.h
 mod_auth_anon.o: mod_auth_anon.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/http_request.h
 mod_auth_db.o: mod_auth_db.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_protocol.h
 mod_auth_dbm.o: mod_auth_dbm.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_protocol.h
 mod_autoindex.o: mod_autoindex.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_request.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_main.h $(INCDIR)/util_script.h
 mod_cern_meta.o: mod_cern_meta.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/util_script.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_request.h
 mod_cgi.o: mod_cgi.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_request.h $(INCDIR)/http_core.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/http_main.h \
  $(INCDIR)/http_log.h $(INCDIR)/util_script.h \
  $(INCDIR)/http_conf_globals.h
 mod_digest.o: mod_digest.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/util_md5.h \
  $(INCDIR)/ap_md5.h
 mod_dir.o: mod_dir.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_request.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_main.h $(INCDIR)/util_script.h
 mod_env.o: mod_env.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h
 mod_expires.o: mod_expires.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_log.h
 mod_headers.o: mod_headers.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h
 mod_imap.o: mod_imap.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_request.h $(INCDIR)/http_core.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/http_main.h \
  $(INCDIR)/http_log.h $(INCDIR)/util_script.h
 mod_include.o: mod_include.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_request.h $(INCDIR)/http_core.h \
  $(INCDIR)/http_protocol.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_main.h $(INCDIR)/util_script.h
 mod_info.o: mod_info.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_main.h $(INCDIR)/http_protocol.h \
  $(INCDIR)/util_script.h $(INCDIR)/http_conf_globals.h
 mod_log_agent.o: mod_log_agent.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_log.h
 mod_log_config.o: mod_log_config.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h
 mod_log_referer.o: mod_log_referer.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_log.h
 mod_mime.o: mod_mime.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_log.h
 mod_mime_magic.o: mod_mime_magic.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_request.h $(INCDIR)/http_core.h \
  $(INCDIR)/http_log.h $(INCDIR)/http_protocol.h
 mod_negotiation.o: mod_negotiation.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_request.h $(INCDIR)/http_core.h \
  $(INCDIR)/http_log.h $(INCDIR)/util_script.h
 mod_rewrite.o: mod_rewrite.c mod_rewrite.h $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_conf_globals.h $(INCDIR)/http_request.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h \
  $(INCDIR)/http_vhost.h
 mod_setenvif.o: mod_setenvif.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_log.h
 mod_so.o: mod_so.c $(INCDIR)/httpd.h $(INCDIR)/ap_config.h \
- $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_log.h
 mod_speling.o: mod_speling.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_core.h \
  $(INCDIR)/http_config.h $(INCDIR)/http_log.h
 mod_status.o: mod_status.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h $(INCDIR)/http_protocol.h \
- $(INCDIR)/http_main.h $(INCDIR)/util_script.h \
- $(INCDIR)/scoreboard.h $(INCDIR)/http_log.h
+ $(INCDIR)/http_conf_globals.h $(INCDIR)/http_main.h \
+ $(INCDIR)/util_script.h $(INCDIR)/scoreboard.h \
+ $(INCDIR)/http_log.h
 mod_unique_id.o: mod_unique_id.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_log.h $(INCDIR)/multithread.h
 mod_userdir.o: mod_userdir.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h
 mod_usertrack.o: mod_usertrack.c $(INCDIR)/httpd.h \
- $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
+ $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
+ $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
  $(INCDIR)/alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
  $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
  $(INCDIR)/http_core.h
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_access.c apache_1.3.2/src/modules/standard/mod_access.c
--- apache_1.3.1/src/modules/standard/mod_access.c	1998-07-09 01:47:12.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_access.c	1998-08-07 01:30:52.000000000 +0800
@@ -373,15 +373,15 @@
 	else
 	    ret = FORBIDDEN;
     }
 
     if (ret == FORBIDDEN
 	&& (ap_satisfies(r) != SATISFY_ANY || !ap_some_auth_required(r))) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
-		  "client %pI denied by server configuration: %s",
-		  &r->connection->remote_addr, r->filename);
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
+		  "client denied by server configuration: %s",
+		  r->filename);
     }
 
     return ret;
 }
 
 
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_actions.c apache_1.3.2/src/modules/standard/mod_actions.c
--- apache_1.3.1/src/modules/standard/mod_actions.c	1998-06-13 23:23:04.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_actions.c	1998-08-07 01:30:53.000000000 +0800
@@ -188,13 +188,13 @@
 
     /* Second, check for actions (which override the method scripts) */
     if ((t = ap_table_get(conf->action_types,
 		       action ? action : ap_default_type(r)))) {
 	script = t;
 	if (r->finfo.st_mode == 0) {
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			"File does not exist: %s", r->filename);
 	    return NOT_FOUND;
 	}
     }
 
     if (script == NULL)
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_alias.c apache_1.3.2/src/modules/standard/mod_alias.c
--- apache_1.3.1/src/modules/standard/mod_alias.c	1998-07-09 01:47:13.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_alias.c	1998-08-25 17:15:36.000000000 +0800
@@ -187,13 +187,13 @@
     if (use_regex) {
 	r = ap_pregcomp(cmd->pool, f, REG_EXTENDED);
 	if (r == NULL)
 	    return "Regular expression could not be compiled.";
     }
 
-    if (is_HTTP_REDIRECT(status)) {
+    if (ap_is_HTTP_REDIRECT(status)) {
 	if (!url)
 	    return "URL to redirect to is missing";
 	if (!use_regex && !ap_is_url(url))
 	    return "Redirect to non-URL";
     }
     else {
@@ -354,13 +354,13 @@
     int status;
 
     if (r->uri[0] != '/' && r->uri[0] != '\0')
 	return DECLINED;
 
     if ((ret = try_alias_list(r, serverconf->redirects, 1, &status)) != NULL) {
-	if (is_HTTP_REDIRECT(status)) {
+	if (ap_is_HTTP_REDIRECT(status)) {
 	    /* include QUERY_STRING if any */
 	    if (r->args) {
 		ret = ap_pstrcat(r->pool, ret, "?", r->args, NULL);
 	    }
 	    ap_table_setn(r->headers_out, "Location", ret);
 	}
@@ -383,13 +383,13 @@
     char *ret;
     int status;
 
     /* It may have changed since last time, so try again */
 
     if ((ret = try_alias_list(r, dirconf->redirects, 1, &status)) != NULL) {
-	if (is_HTTP_REDIRECT(status))
+	if (ap_is_HTTP_REDIRECT(status))
 	    ap_table_setn(r->headers_out, "Location", ret);
 	return status;
     }
 
     return DECLINED;
 }
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_asis.c apache_1.3.2/src/modules/standard/mod_asis.c
--- apache_1.3.1/src/modules/standard/mod_asis.c	1998-06-13 23:23:05.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_asis.c	1998-08-25 17:15:37.000000000 +0800
@@ -69,30 +69,30 @@
     const char *location;
 
     r->allowed |= (1 << M_GET);
     if (r->method_number != M_GET)
 	return DECLINED;
     if (r->finfo.st_mode == 0) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "File does not exist: %s", r->filename);
 	return NOT_FOUND;
     }
 
     f = ap_pfopen(r->pool, r->filename, "r");
 
     if (f == NULL) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "file permissions deny server access: %s", r->filename);
 	return FORBIDDEN;
     }
 
     scan_script_header(r, f);
     location = ap_table_get(r->headers_out, "Location");
 
     if (location && location[0] == '/' &&
-	((r->status == HTTP_OK) || is_HTTP_REDIRECT(r->status))) {
+	((r->status == HTTP_OK) || ap_is_HTTP_REDIRECT(r->status))) {
 
 	ap_pfclose(r->pool, f);
 
 	/* Internal redirect -- fake-up a pseudo-request */
 	r->status = HTTP_OK;
 
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_auth_anon.c apache_1.3.2/src/modules/standard/mod_auth_anon.c
--- apache_1.3.1/src/modules/standard/mod_auth_anon.c	1998-07-04 06:08:49.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_auth_anon.c	1998-08-07 01:30:54.000000000 +0800
@@ -249,21 +249,21 @@
 	   && ((!sec->auth_anon_mustemail) || strlen(sent_pw))
     /* does the password look like an email address ? */
 	   && ((!sec->auth_anon_verifyemail)
 	       || ((strpbrk("@", sent_pw) != NULL)
 		   && (strpbrk(".", sent_pw) != NULL)))) {
 	if (sec->auth_anon_logemail && ap_is_initial_req(r)) {
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_INFO, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_INFO, r,
 			"Anonymous: Passwd <%s> Accepted",
 			sent_pw ? sent_pw : "\'none\'");
 	}
 	return OK;
     }
     else {
 	if (sec->auth_anon_authoritative) {
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			"Anonymous: Authoritative, Passwd <%s> not accepted",
 			sent_pw ? sent_pw : "\'none\'");
 	    return AUTH_REQUIRED;
 	}
 	/* Drop out the bottom to return DECLINED */
     }
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_auth.c apache_1.3.2/src/modules/standard/mod_auth.c
--- apache_1.3.1/src/modules/standard/mod_auth.c	1998-07-10 14:33:24.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_auth.c	1998-08-07 01:30:54.000000000 +0800
@@ -123,13 +123,13 @@
 {
     configfile_t *f;
     char l[MAX_STRING_LEN];
     const char *rpw, *w;
 
     if (!(f = ap_pcfg_openfile(r->pool, auth_pwfile))) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "Could not open password file: %s", auth_pwfile);
 	return NULL;
     }
     while (!(ap_cfg_getline(l, MAX_STRING_LEN, f))) {
 	if ((l[0] == '#') || (!l[0]))
 	    continue;
@@ -211,20 +211,20 @@
     if (!sec->auth_pwfile)
 	return DECLINED;
 
     if (!(real_pw = get_pw(r, c->user, sec->auth_pwfile))) {
 	if (!(sec->auth_authoritative))
 	    return DECLINED;
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "user %s not found: %s", c->user, r->uri);
 	ap_note_basic_auth_failure(r);
 	return AUTH_REQUIRED;
     }
     /* anyone know where the prototype for crypt is? */
     if (strcmp(real_pw, (char *) crypt(sent_pw, real_pw))) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "user %s: password mismatch: %s", c->user, r->uri);
 	ap_note_basic_auth_failure(r);
 	return AUTH_REQUIRED;
     }
     return OK;
 }
@@ -289,17 +289,15 @@
     if (!method_restricted)
 	return OK;
 
     if (!(sec->auth_authoritative))
 	return DECLINED;
 
-    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
-	"access to %s failed for %s, reason: user %s not allowed access",
-	r->uri,
-	ap_get_remote_host(r->connection, r->per_dir_config, REMOTE_NAME),
-	user);
+    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
+	"access to %s failed, reason: user %s not allowed access",
+	r->uri, user);
 	
     ap_note_basic_auth_failure(r);
     return AUTH_REQUIRED;
 }
 
 module MODULE_VAR_EXPORT auth_module =
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_auth_db.c apache_1.3.2/src/modules/standard/mod_auth_db.c
--- apache_1.3.1/src/modules/standard/mod_auth_db.c	1998-07-04 06:08:50.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_auth_db.c	1998-09-19 20:12:36.000000000 +0800
@@ -94,12 +94,16 @@
 #include "http_config.h"
 #include "http_core.h"
 #include "http_log.h"
 #include "http_protocol.h"
 #include <db.h>
 
+#if defined(DB_VERSION_MAJOR) && (DB_VERSION_MAJOR == 2)
+#define DB2
+#endif
+
 typedef struct {
 
     char *auth_dbpwfile;
     char *auth_dbgrpfile;
     int auth_dbauthoritative;
 } db_auth_config_rec;
@@ -151,25 +155,37 @@
     DBT d, q;
     char *pw = NULL;
 
     q.data = user;
     q.size = strlen(q.data);
 
+#ifdef DB2
+    if (db_open(auth_dbpwfile, DB_HASH, O_RDONLY, 0664, NULL, NULL,  &f) != 0) {
+#else
     if (!(f = dbopen(auth_dbpwfile, O_RDONLY, 0664, DB_HASH, NULL))) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+#endif
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "could not open db auth file: %s", auth_dbpwfile);
 	return NULL;
     }
 
+#ifdef DB2
+    if (!((f->get) (f, NULL, &q, &d, 0))) {
+#else
     if (!((f->get) (f, &q, &d, 0))) {
+#endif
 	pw = ap_palloc(r->pool, d.size + 1);
 	strncpy(pw, d.data, d.size);
 	pw[d.size] = '\0';	/* Terminate the string */
     }
 
+#ifdef DB2
+    (f->close) (f, 0);
+#else
     (f->close) (f);
+#endif
     return pw;
 }
 
 /* We do something strange with the group file.  If the group file
  * contains any : we assume the format is
  *      key=username value=":"groupname [":"anything here is ignored]
@@ -215,24 +231,24 @@
     if (!sec->auth_dbpwfile)
 	return DECLINED;
 
     if (!(real_pw = get_db_pw(r, c->user, sec->auth_dbpwfile))) {
 	if (!(sec->auth_dbauthoritative))
 	    return DECLINED;
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "DB user %s not found: %s", c->user, r->filename);
 	ap_note_basic_auth_failure(r);
 	return AUTH_REQUIRED;
     }
     /* Password is up to first : if exists */
     colon_pw = strchr(real_pw, ':');
     if (colon_pw)
 	*colon_pw = '\0';
     /* anyone know where the prototype for crypt is? */
     if (strcmp(real_pw, (char *) crypt(sent_pw, real_pw))) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "DB user %s: password mismatch: %s", c->user, r->uri);
 	ap_note_basic_auth_failure(r);
 	return AUTH_REQUIRED;
     }
     return OK;
 }
@@ -271,13 +287,13 @@
 	    const char *orig_groups, *groups;
 	    char *v;
 
 	    if (!(groups = get_db_grp(r, user, sec->auth_dbgrpfile))) {
 		if (!(sec->auth_dbauthoritative))
 		    return DECLINED;
-		ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			    "user %s not in DB group file %s: %s",
 			    user, sec->auth_dbgrpfile, r->filename);
 		ap_note_basic_auth_failure(r);
 		return AUTH_REQUIRED;
 	    }
 	    orig_groups = groups;
@@ -287,13 +303,13 @@
 		while (groups[0]) {
 		    v = ap_getword(r->pool, &groups, ',');
 		    if (!strcmp(v, w))
 			return OK;
 		}
 	    }
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			"user %s not in right group: %s", user, r->filename);
 	    ap_note_basic_auth_failure(r);
 	    return AUTH_REQUIRED;
 	}
     }
 
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_auth_dbm.c apache_1.3.2/src/modules/standard/mod_auth_dbm.c
--- apache_1.3.1/src/modules/standard/mod_auth_dbm.c	1998-07-04 06:08:50.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_auth_dbm.c	1998-08-07 01:30:55.000000000 +0800
@@ -151,13 +151,13 @@
 #else
     q.dsize = strlen(q.dptr) + 1;
 #endif
 
 
     if (!(f = dbm_open(auth_dbmpwfile, O_RDONLY, 0664))) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "could not open dbm auth file: %s", auth_dbmpwfile);
 	return NULL;
     }
 
     d = dbm_fetch(f, q);
 
@@ -216,24 +216,24 @@
     if (!sec->auth_dbmpwfile)
 	return DECLINED;
 
     if (!(real_pw = get_dbm_pw(r, c->user, sec->auth_dbmpwfile))) {
 	if (!(sec->auth_dbmauthoritative))
 	    return DECLINED;
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "DBM user %s not found: %s", c->user, r->filename);
 	ap_note_basic_auth_failure(r);
 	return AUTH_REQUIRED;
     }
     /* Password is up to first : if exists */
     colon_pw = strchr(real_pw, ':');
     if (colon_pw)
 	*colon_pw = '\0';
     /* anyone know where the prototype for crypt is? */
     if (strcmp(real_pw, (char *) crypt(sent_pw, real_pw))) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "user %s: password mismatch: %s", c->user, r->uri);
 	ap_note_basic_auth_failure(r);
 	return AUTH_REQUIRED;
     }
     return OK;
 }
@@ -272,13 +272,13 @@
 	    const char *orig_groups, *groups;
 	    char *v;
 
 	    if (!(groups = get_dbm_grp(r, user, sec->auth_dbmgrpfile))) {
 		if (!(sec->auth_dbmauthoritative))
 		    return DECLINED;
-		ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			    "user %s not in DBM group file %s: %s",
 			    user, sec->auth_dbmgrpfile, r->filename);
 		ap_note_basic_auth_failure(r);
 		return AUTH_REQUIRED;
 	    }
 	    orig_groups = groups;
@@ -288,13 +288,13 @@
 		while (groups[0]) {
 		    v = ap_getword(r->pool, &groups, ',');
 		    if (!strcmp(v, w))
 			return OK;
 		}
 	    }
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			"user %s not in right group: %s",
 			user, r->filename);
 	    ap_note_basic_auth_failure(r);
 	    return AUTH_REQUIRED;
 	}
     }
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_auth_db.module apache_1.3.2/src/modules/standard/mod_auth_db.module
--- apache_1.3.1/src/modules/standard/mod_auth_db.module	1998-03-05 20:42:32.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_auth_db.module	1998-09-19 20:12:35.000000000 +0800
@@ -1,20 +1,36 @@
 Name: db_auth_module
 ConfigStart
-    if ./helpers/TestCompile func dbopen; then
-        :
+    DB_VERSION=''
+    DB_LIB=''
+    if ./helpers/TestCompile func db_open; then
+        DB_VERSION='Berkeley-DB/2.x'
     else
-	case "$PLAT" in
-	    *-linux*)
-		# many systems have -ldb installed
-		DB_LIB=""
+        if ./helpers/TestCompile lib db db_open; then
+            DB_VERSION='Berkeley-DB/2.x'
+            DB_LIB='-ldb'
+        else
+            if ./helpers/TestCompile func dbopen; then
+                DB_VERSION='Berkeley-DB/1.x'
+            else
 		if ./helpers/TestCompile lib db dbopen; then
-		    DB_LIB="-ldb"
+                    DB_VERSION='Berkeley-DB/1.x'
+                    DB_LIB='-ldb'
 		fi
-		;;
-	esac
-	LIBS="$LIBS $DB_LIB"
-	if [ "X$DB_LIB" != "X" ]; then
-	    echo " + using $DB_LIB for mod_auth_db"
+            fi 
 	fi
     fi
+    if [ ".$DB_VERSION" != . ]; then
+        if [ ".$DB_LIB" != . ]; then
+            LIBS="$LIBS $DB_LIB"
+            echo "      using $DB_VERSION for mod_auth_db ($DB_LIB)"
+        else
+            echo "      using $DB_VERSION for mod_auth_db (-lc)"
+        fi
+    else
+        echo "Error: Neither Berkeley-DB/1.x nor Berkeley-DB/2.x library found."
+        echo "       Either disable mod_auth_db or provide us with the paths"
+        echo "       to the Berkeley-DB include and library files."
+        echo "       (Hint: INCLUDES, LDFLAGS, LIBS)"
+        exit 1
+    fi
 ConfigEnd
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_autoindex.c apache_1.3.2/src/modules/standard/mod_autoindex.c
--- apache_1.3.1/src/modules/standard/mod_autoindex.c	1998-07-09 01:47:14.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_autoindex.c	1998-09-03 05:04:41.000000000 +0800
@@ -91,12 +91,15 @@
 #define SUPPRESS_LAST_MOD 8
 #define SUPPRESS_SIZE 16
 #define SUPPRESS_DESC 32
 #define SUPPRESS_PREAMBLE 64
 #define SUPPRESS_COLSORT 128
 
+#define K_PAD 1
+#define K_NOPAD 0
+
 /*
  * Define keys for sorting.
  */
 #define K_NAME 'N'		/* Sort by file name (default) */
 #define K_LAST_MOD 'M'		/* Last modification date */
 #define K_SIZE 'S'		/* Size (absolute, not as displayed) */
@@ -108,27 +111,35 @@
 /*
  * These are the dimensions of the default icons supplied with Apache.
  */
 #define DEFAULT_ICON_WIDTH 20
 #define DEFAULT_ICON_HEIGHT 22
 
+/*
+ * Other default dimensions.
+ */
+#define DEFAULT_NAME_WIDTH 23
+
 struct item {
     char *type;
     char *apply_to;
     char *apply_path;
     char *data;
 };
 
 typedef struct autoindex_config_struct {
 
     char *default_icon;
+    int opts;
+    int name_width;
+    int name_adjust;
     int icon_width;
     int icon_height;
 
     array_header *icon_list, *alt_list, *desc_list, *ign_list;
-    array_header *hdr_list, *rdme_list, *opts_list;
+    array_header *hdr_list, *rdme_list;
 
 } autoindex_config_rec;
 
 static char c_by_encoding, c_by_type, c_by_path;
 
 #define BY_ENCODING &c_by_encoding
@@ -268,23 +279,26 @@
     }
     push_item(((autoindex_config_rec *) d)->rdme_list, 0, NULL, cmd->path,
 	      name);
     return NULL;
 }
 
-
-static const char *add_opts_int(cmd_parms *cmd, void *d, int opts)
-{
-    push_item(((autoindex_config_rec *) d)->opts_list, (char *) (long) opts,
-	      NULL, cmd->path, NULL);
-    return NULL;
-}
-
+/* A legacy directive, FancyIndexing is superseded by the IndexOptions
+ * keyword.  But for compatibility..
+ */
 static const char *fancy_indexing(cmd_parms *cmd, void *d, int arg)
 {
-    return add_opts_int(cmd, d, arg ? FANCY_INDEXING : 0);
+    int curopts;
+    int newopts;
+    autoindex_config_rec *cfg;
+
+    cfg = (autoindex_config_rec *) d;
+    curopts = cfg->opts;
+    newopts = (arg ? (curopts | FANCY_INDEXING) : (curopts & !FANCY_INDEXING));
+    cfg->opts = newopts;
+    return NULL;
 }
 
 static const char *add_opts(cmd_parms *cmd, void *d, const char *optstr)
 {
     char *w;
     int opts = 0;
@@ -316,41 +330,43 @@
         else if (!strcasecmp(w, "SuppressColumnSorting")) {
             opts |= SUPPRESS_COLSORT;
 	}
 	else if (!strcasecmp(w, "None")) {
 	    opts = 0;
 	}
-	else if (!strncasecmp(w, "IconWidth", 9)) {
-	    if (strchr(w, '=') != NULL) {
-		const char *x = ap_pstrdup(cmd->pool, w);
-		char *val;
-		val = ap_getword(cmd->pool, &x, '=');
-		val = ap_getword(cmd->pool, &x, '=');
-		d_cfg->icon_width = atoi(val);
-	    }
-	    else {
-		d_cfg->icon_width = DEFAULT_ICON_WIDTH;
-	    }
+	else if (!strcasecmp(w, "IconWidth")) {
+	    d_cfg->icon_width = DEFAULT_ICON_WIDTH;
+	}
+	else if (!strncasecmp(w, "IconWidth=", 10)) {
+	    d_cfg->icon_width = atoi(&w[10]);
+	}
+	else if (!strcasecmp(w, "IconHeight")) {
+	    d_cfg->icon_height = DEFAULT_ICON_HEIGHT;
+	}
+	else if (!strncasecmp(w, "IconHeight=", 11)) {
+	    d_cfg->icon_height = atoi(&w[11]);
 	}
-	else if (!strncasecmp(w, "IconHeight", 10)) {
-	    if (strchr(w, '=') != NULL) {
-		const char *x = ap_pstrdup(cmd->pool, w);
-		char *val;
-		val = ap_getword(cmd->pool, &x, '=');
-		val = ap_getword(cmd->pool, &x, '=');
-		d_cfg->icon_height = atoi(val);
+	else if (!strncasecmp(w, "NameWidth=", 10)) {
+	    if (w[10] == '*') {
+		d_cfg->name_adjust = 1;
 	    }
 	    else {
-		d_cfg->icon_height = DEFAULT_ICON_HEIGHT;
+		int width = atoi(&w[10]);
+
+		if (width < 1) {
+		    return "NameWidth value must be greater than 1";
+		}
+		d_cfg->name_width = width;
 	    }
 	}
 	else {
 	    return "Invalid directory indexing option";
 	}
     }
-    return add_opts_int(cmd, d, opts);
+    d_cfg->opts = opts;
+    return NULL;
 }
 
 #define DIR_CMD_PERMS OR_INDEXES
 
 static const command_rec autoindex_cmds[] =
 {
@@ -386,19 +402,21 @@
 {
     autoindex_config_rec *new =
     (autoindex_config_rec *) ap_pcalloc(p, sizeof(autoindex_config_rec));
 
     new->icon_width = 0;
     new->icon_height = 0;
+    new->name_width = DEFAULT_NAME_WIDTH;
+    new->name_adjust = 0;
     new->icon_list = ap_make_array(p, 4, sizeof(struct item));
     new->alt_list = ap_make_array(p, 4, sizeof(struct item));
     new->desc_list = ap_make_array(p, 4, sizeof(struct item));
     new->ign_list = ap_make_array(p, 4, sizeof(struct item));
     new->hdr_list = ap_make_array(p, 4, sizeof(struct item));
     new->rdme_list = ap_make_array(p, 4, sizeof(struct item));
-    new->opts_list = ap_make_array(p, 4, sizeof(struct item));
+    new->opts = 0;
 
     return (void *) new;
 }
 
 static void *merge_autoindex_configs(pool *p, void *basev, void *addv)
 {
@@ -415,13 +433,15 @@
     new->alt_list = ap_append_arrays(p, add->alt_list, base->alt_list);
     new->ign_list = ap_append_arrays(p, add->ign_list, base->ign_list);
     new->hdr_list = ap_append_arrays(p, add->hdr_list, base->hdr_list);
     new->desc_list = ap_append_arrays(p, add->desc_list, base->desc_list);
     new->icon_list = ap_append_arrays(p, add->icon_list, base->icon_list);
     new->rdme_list = ap_append_arrays(p, add->rdme_list, base->rdme_list);
-    new->opts_list = ap_append_arrays(p, add->opts_list, base->opts_list);
+    new->opts = add->opts;
+    new->name_width = add->name_width;
+    new->name_adjust = add->name_adjust;
 
     return new;
 }
 
 /****************************************************************
  *
@@ -491,13 +511,13 @@
 #define find_icon(d,p,t) find_item(p,d->icon_list,t)
 #define find_alt(d,p,t) find_item(p,d->alt_list,t)
 #define find_desc(d,p) find_item(p,d->desc_list,0)
 #define find_header(d,p) find_item(p,d->hdr_list,0)
 #define find_readme(d,p) find_item(p,d->rdme_list,0)
 
-static char *find_default_icon(autoindex_config_rec * d, char *bogus_name)
+static char *find_default_icon(autoindex_config_rec *d, char *bogus_name)
 {
     request_rec r;
 
     /* Bleah.  I tried to clean up find_item, and it lead to this bit
      * of ugliness.   Note that the fields initialized are precisely
      * those that find_item looks at...
@@ -506,13 +526,13 @@
     r.filename = bogus_name;
     r.content_type = r.content_encoding = NULL;
 
     return find_item(&r, d->icon_list, 1);
 }
 
-static int ignore_entry(autoindex_config_rec * d, char *path)
+static int ignore_entry(autoindex_config_rec *d, char *path)
 {
     array_header *list = d->ign_list;
     struct item *items = (struct item *) list->elts;
     char *tt;
     int i;
 
@@ -551,29 +571,12 @@
 	}
 #endif /* !CASE_BLIND_FILESYSTEM */
     }
     return 0;
 }
 
-static int find_opts(autoindex_config_rec * d, request_rec *r)
-{
-    char *path = r->filename;
-    array_header *list = d->opts_list;
-    struct item *items = (struct item *) list->elts;
-    int i;
-
-    for (i = 0; i < list->nelts; ++i) {
-	struct item *p = &items[i];
-
-	if (!ap_strcmp_match(path, p->apply_path)) {
-	    return (int) (long) p->type;
-	}
-    }
-    return 0;
-}
-
 /*****************************************************************
  *
  * Actually generating output
  */
 
 /*
@@ -590,13 +593,13 @@
     request_rec *rr;
     autoindex_config_rec *cfg;
     int autoindex_opts;
 
     cfg = (autoindex_config_rec *) ap_get_module_config(r->per_dir_config,
 							&autoindex_module);
-    autoindex_opts = find_opts(cfg, r);
+    autoindex_opts = cfg->opts;
     /* XXX: this is a load of crap, it needs to do a full sub_req_lookup_uri */
     fn = ap_make_full_path(r->pool, name, readme_fname);
     fn = ap_pstrcat(r->pool, fn, ".html", NULL);
     if (stat(fn, &finfo) == -1) {
 	/* A brief fake multiviews search for README.html */
 	fn[strlen(fn) - 5] = '\0';
@@ -723,13 +726,13 @@
 	ap_pfclose(r->pool, thefile);
     }
     return NULL;
 }
 
 static struct ent *make_autoindex_entry(char *name, int autoindex_opts,
-					autoindex_config_rec * d,
+					autoindex_config_rec *d,
 					request_rec *r, char keyid,
 					char direction)
 {
     struct ent *p;
 
     if ((name[0] == '.') && (!name[1])) {
@@ -789,13 +792,13 @@
 	    p->lm = 0;
 	}
     }
     return (p);
 }
 
-static char *terminate_description(autoindex_config_rec * d, char *desc,
+static char *terminate_description(autoindex_config_rec *d, char *desc,
 				   int autoindex_opts)
 {
     int maxsize = 23;
     register int x;
 
     if (autoindex_opts & SUPPRESS_LAST_MOD) {
@@ -858,24 +861,76 @@
     }
     else {
         ap_rputs(anchor, r);
     }
 }
 
+/*
+ * Fit a string into a specified buffer width, marking any
+ * truncation.  The size argument is the actual buffer size, including
+ * the \0 termination byte.  The buffer will be prefilled with blanks.
+ * If the pad argument is false, any extra spaces at the end of the
+ * buffer are omitted.  (Used when constructing anchors.)
+ */
+static ap_inline char *widthify(const char *s, char *buff, int size, int pad)
+{
+    int s_len;
+
+    memset(buff, ' ', size);
+    buff[size - 1] = '\0';
+    s_len = strlen(s);
+    if (s_len > (size - 1)) {
+	ap_cpystrn(buff, s, size);
+	if (size > 1) {
+	    buff[size - 2] = '>';
+	}
+	if (size > 2) {
+	    buff[size - 3] = '.';
+	}
+	if (size > 3) {
+	    buff[size - 4] = '.';
+	}
+    }
+    else {
+	ap_cpystrn(buff, s, s_len + 1);
+	if (pad) {
+	    buff[s_len] = ' ';
+	}
+    }
+    return buff;
+}
+
 static void output_directories(struct ent **ar, int n,
-			       autoindex_config_rec * d, request_rec *r,
-			     int autoindex_opts, char keyid, char direction)
+			       autoindex_config_rec *d, request_rec *r,
+			       int autoindex_opts, char keyid, char direction)
 {
-    int x, len;
+    int x;
     char *name = r->uri;
     char *tp;
     int static_columns = (autoindex_opts & SUPPRESS_COLSORT);
     pool *scratch = ap_make_sub_pool(r->pool);
+    int name_width;
+    char *name_scratch;
 
-    if (name[0] == '\0')
+    if (name[0] == '\0') {
 	name = "/";
+    }
+
+    name_width = d->name_width;
+    if (d->name_adjust) {
+	for (x = 0; x < n; x++) {
+	    int t = strlen(ar[x]->name);
+	    if (t > name_width) {
+		name_width = t;
+	    }
+	}
+    }
+    ++name_width;
+    name_scratch = ap_palloc(r->pool, name_width + 1);
+    memset(name_scratch, ' ', name_width);
+    name_scratch[name_width] = '\0';
 
     if (autoindex_opts & FANCY_INDEXING) {
 	ap_rputs("<PRE>", r);
 	if ((tp = find_default_icon(d, "^^BLANKICON^^"))) {
 	    ap_rvputs(r, "<IMG SRC=\"", ap_escape_html(scratch, tp),
 		   "\" ALT=\"     \"", NULL);
@@ -887,14 +942,24 @@
 			d->icon_height,
 			d->icon_width
 		    );
 	    }
 	    ap_rputs("> ", r);
 	}
-        emit_link(r, "Name", K_NAME, keyid, direction, static_columns);
-	ap_rputs("                   ", r);
+        emit_link(r, widthify("Name", name_scratch,
+			      (name_width > 5) ? 5 : name_width, K_NOPAD),
+		  K_NAME, keyid, direction, static_columns);
+	if (name_width > 5) {
+	    memset(name_scratch, ' ', name_width);
+	    name_scratch[name_width] = '\0';
+	    ap_rputs(&name_scratch[5], r);
+	}
+	/*
+	 * Emit the guaranteed-at-least-one-space-between-columns byte.
+	 */
+	ap_rputs(" ", r);
 	if (!(autoindex_opts & SUPPRESS_LAST_MOD)) {
             emit_link(r, "Last modified", K_LAST_MOD, keyid, direction,
                       static_columns);
 	    ap_rputs("       ", r);
 	}
 	if (!(autoindex_opts & SUPPRESS_SIZE)) {
@@ -909,56 +974,39 @@
     }
     else {
 	ap_rputs("<UL>", r);
     }
 
     for (x = 0; x < n; x++) {
-	char *anchor = NULL, *t = NULL, *t2 = NULL;
+	char *anchor, *t, *t2;
+	char *pad;
+	int nwidth;
 
 	ap_clear_pool(scratch);
 
 	if (is_parent(ar[x]->name)) {
 	    t = ap_make_full_path(scratch, name, "../");
 	    ap_getparents(t);
 	    if (t[0] == '\0') {
 		t = "/";
 	    }
-	    anchor = ap_pstrcat(scratch, "<A HREF=\"",
-				ap_escape_html(scratch,
-					       ap_os_escape_path(scratch, t,
-								 0)),
-				"\">", NULL);
-	    t2 = "Parent Directory</A>       ";
+	       /* 1234567890123456 */
+	    t2 = "Parent Directory";
+	    pad = name_scratch + 16;
+	    anchor = ap_escape_html(scratch, ap_os_escape_path(scratch, t, 0));
 	}
 	else {
 	    t = ar[x]->name;
-	    len = strlen(t);
-	    if (len > 23) {
-		t2 = ap_pstrdup(scratch, t);
-		t2[21] = '.';
-		t2[22] = '.';
-		t2[23] = '\0';
-		t2 = ap_escape_html(scratch, t2);
-		t2 = ap_pstrcat(scratch, t2, "</A>", NULL);
-	    }
-	    else {
-		char buff[24] = "                       ";
-		t2 = ap_escape_html(scratch, t);
-		buff[23 - len] = '\0';
-		t2 = ap_pstrcat(scratch, t2, "</A>", buff, NULL);
-	    }
-	    anchor = ap_pstrcat(scratch, "<A HREF=\"",
-				ap_escape_html(scratch,
-					       ap_os_escape_path(scratch, t,
-								 0)),
-				"\">", NULL);
+	    pad = name_scratch + strlen(t);
+	    t2 = ap_escape_html(scratch, t);
+	    anchor = ap_escape_html(scratch, ap_os_escape_path(scratch, t, 0));
 	}
 
 	if (autoindex_opts & FANCY_INDEXING) {
 	    if (autoindex_opts & ICONS_ARE_LINKS) {
-		ap_rputs(anchor, r);
+		ap_rvputs(r, "<A HREF=\"", anchor, "\">", NULL);
 	    }
 	    if ((ar[x]->icon) || d->default_icon) {
 		ap_rvputs(r, "<IMG SRC=\"",
 			  ap_escape_html(scratch,
 					 ar[x]->icon ? ar[x]->icon
 					             : d->default_icon),
@@ -971,13 +1019,28 @@
 		ap_rputs(">", r);
 	    }
 	    if (autoindex_opts & ICONS_ARE_LINKS) {
 		ap_rputs("</A>", r);
 	    }
 
-	    ap_rvputs(r, " ", anchor, t2, NULL);
+	    ap_rvputs(r, " <A HREF=\"", anchor, "\">",
+		      widthify(t2, name_scratch, name_width, K_NOPAD),
+		      "</A>", NULL);
+	    /*
+	     * We know that widthify() prefilled the buffer with spaces
+	     * before doing its thing, so use them.
+	     */
+	    nwidth = strlen(t2);
+	    if (nwidth < (name_width - 1)) {
+		name_scratch[nwidth] = ' ';
+		ap_rputs(&name_scratch[nwidth], r);
+	    }
+	    /*
+	     * The blank before the storm.. er, before the next field.
+	     */
+	    ap_rputs(" ", r);
 	    if (!(autoindex_opts & SUPPRESS_LAST_MOD)) {
 		if (ar[x]->lm != -1) {
 		    char time_str[MAX_STRING_LEN];
 		    struct tm *ts = localtime(&ar[x]->lm);
 		    strftime(time_str, MAX_STRING_LEN, "%d-%b-%Y %H:%M  ", ts);
 		    ap_rputs(time_str, r);
@@ -995,13 +1058,14 @@
 		    ap_rputs(terminate_description(d, ar[x]->desc,
 						   autoindex_opts), r);
 		}
 	    }
 	}
 	else {
-	    ap_rvputs(r, "<LI> ", anchor, " ", t2, NULL);
+	    ap_rvputs(r, "<LI><A HREF=\"", anchor, "\"> ", t2,
+		      "</A>", pad, NULL);
 	}
 	ap_rputc('\n', r);
     }
     if (autoindex_opts & FANCY_INDEXING) {
 	ap_rputs("</PRE>", r);
     }
@@ -1068,31 +1132,32 @@
         break;
     }
     return strcmp(c1->name, c2->name);
 }
 
 
-static int index_directory(request_rec *r, autoindex_config_rec * autoindex_conf)
+static int index_directory(request_rec *r,
+			   autoindex_config_rec *autoindex_conf)
 {
     char *title_name = ap_escape_html(r->pool, r->uri);
     char *title_endp;
     char *name = r->filename;
 
     DIR *d;
     struct DIR_TYPE *dstruct;
     int num_ent = 0, x;
     struct ent *head, *p;
     struct ent **ar = NULL;
     char *tmp;
     const char *qstring;
-    int autoindex_opts = find_opts(autoindex_conf, r);
+    int autoindex_opts = autoindex_conf->opts;
     char keyid;
     char direction;
 
     if (!(d = ap_popendir(r->pool, name))) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "Can't open directory for index: %s", r->filename);
 	return HTTP_FORBIDDEN;
     }
 
     r->content_type = "text/html";
 
@@ -1220,13 +1285,13 @@
 	if (r->filename[strlen(r->filename) - 1] != '/') {
 	    r->filename = ap_pstrcat(r->pool, r->filename, "/", NULL);
 	}
 	return index_directory(r, d);
     }
     else {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		     "Directory index forbidden by rule: %s", r->filename);
 	return HTTP_FORBIDDEN;
     }
 }
 
 
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_cern_meta.c apache_1.3.2/src/modules/standard/mod_cern_meta.c
--- apache_1.3.1/src/modules/standard/mod_cern_meta.c	1998-07-09 01:47:14.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_cern_meta.c	1998-08-14 10:49:56.000000000 +0800
@@ -223,18 +223,23 @@
      "the name of the directory containing meta files"},
     {"MetaSuffix", set_metasuffix, NULL, DIR_CMD_PERMS, TAKE1,
      "the filename suffix for meta files"},
     {NULL}
 };
 
+/* XXX: this is very similar to ap_scan_script_header_err_core...
+ * are the differences deliberate, or just a result of bit rot?
+ */
 static int scan_meta_file(request_rec *r, FILE *f)
 {
     char w[MAX_STRING_LEN];
     char *l;
     int p;
+    table *tmp_headers;
 
+    tmp_headers = ap_make_table(r->pool, 5);
     while (fgets(w, MAX_STRING_LEN - 1, f) != NULL) {
 
 	/* Delete terminal (CR?)LF */
 
 	p = strlen(w);
 	if (p > 0 && w[p - 1] == '\n') {
@@ -248,13 +253,13 @@
 	    return OK;
 	}
 
 	/* if we see a bogus header don't ignore it. Shout and scream */
 
 	if (!(l = strchr(w, ':'))) {
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			"malformed header in meta file: %s", r->filename);
 	    return SERVER_ERROR;
 	}
 
 	*l++ = '\0';
 	while (*l && ap_isspace(*l))
@@ -274,15 +279,16 @@
 	}
 	else if (!strcasecmp(w, "Status")) {
 	    sscanf(l, "%d", &r->status);
 	    r->status_line = ap_pstrdup(r->pool, l);
 	}
 	else {
-	    ap_table_set(r->headers_out, w, l);
+	    ap_table_set(tmp_headers, w, l);
 	}
     }
+    ap_overlap_tables(r->headers_out, tmp_headers, AP_OVERLAP_TABLES_SET);
     return OK;
 }
 
 static int add_cern_meta_data(request_rec *r)
 {
     char *metafilename;
@@ -321,13 +327,13 @@
 	real_file = last_slash;
 	real_file++;
 	*last_slash = '\0';
     }
     else {
 	/* no last slash, buh?! */
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "internal error in mod_cern_meta: %s", r->filename);
 	/* should really barf, but hey, let's be friends... */
 	return DECLINED;
     };
 
     metafilename = ap_pstrcat(r->pool, "/", scrap_book, "/",
@@ -350,13 +356,13 @@
 
     f = ap_pfopen(r->pool, metafilename, "r");
     if (f == NULL) {
 	if (errno == ENOENT) {
 	    return DECLINED;
 	}
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 	      "meta file permissions deny server access: %s", metafilename);
 	return FORBIDDEN;
     };
 
     /* read the headers in */
     rv = scan_meta_file(r, f);
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_cgi.c apache_1.3.2/src/modules/standard/mod_cgi.c
--- apache_1.3.1/src/modules/standard/mod_cgi.c	1998-06-28 02:09:31.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_cgi.c	1998-09-04 06:40:42.000000000 +0800
@@ -166,13 +166,13 @@
 static int log_scripterror(request_rec *r, cgi_server_conf * conf, int ret,
 			   int show_errno, char *error)
 {
     FILE *f;
     struct stat finfo;
 
-    ap_log_error(APLOG_MARK, show_errno|APLOG_ERR, r->server, 
+    ap_log_rerror(APLOG_MARK, show_errno|APLOG_ERR, r, 
 		"%s: %s", error, r->filename);
 
     if (!conf->logname ||
 	((stat(ap_server_root_relative(r->pool, conf->logname), &finfo) == 0)
 	 &&   (finfo.st_size > conf->logbytes)) ||
          ((f = ap_pfopen(r->pool, ap_server_root_relative(r->pool, conf->logname),
@@ -286,13 +286,13 @@
     struct cgi_child_stuff *cld = (struct cgi_child_stuff *) child_stuff;
     request_rec *r = cld->r;
     char *argv0 = cld->argv0;
     int child_pid;
 
 #ifdef DEBUG_CGI
-#ifdef __EMX__
+#ifdef OS2
     /* Under OS/2 need to use device con. */
     FILE *dbg = fopen("con", "w");
 #else
     FILE *dbg = fopen("/dev/tty", "w");
 #endif
     int i;
@@ -379,13 +379,13 @@
 	return log_scripterror(r, conf, FORBIDDEN, APLOG_NOERRNO,
 			       "Options ExecCGI is off in this directory");
     if (nph && is_included)
 	return log_scripterror(r, conf, FORBIDDEN, APLOG_NOERRNO,
 			       "attempt to include NPH CGI script");
 
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
     /* Allow for cgi files without the .EXE extension on them under OS/2 */
     if (r->finfo.st_mode == 0) {
 	struct stat statbuf;
 
 	r->filename = ap_pstrcat(r->pool, r->filename, ".EXE", NULL);
 
@@ -428,15 +428,16 @@
      * waiting for free_proc_chain to cleanup in the middle of an
      * SSI request -djg
      */
     if (!ap_bspawn_child(r->main ? r->main->pool : r->pool, cgi_child,
 			 (void *) &cld, kill_after_timeout,
 			 &script_out, &script_in, &script_err)) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "couldn't spawn child process: %s", r->filename);
-	return SERVER_ERROR;
+	ap_table_setn(r->notes, "error-notes", "Couldn't spawn child process");
+	return HTTP_INTERNAL_SERVER_ERROR;
     }
 
     /* Transfer any put/post args, CERN style...
      * Note that if a buggy script fails to read everything we throw
      * at it, or a buggy client sends too much, we get a SIGPIPE, so
      * we have to ignore SIGPIPE while doing this.  CERN does the same
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_digest.c apache_1.3.2/src/modules/standard/mod_digest.c
--- apache_1.3.1/src/modules/standard/mod_digest.c	1998-07-09 01:47:14.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_digest.c	1998-08-10 05:03:25.000000000 +0800
@@ -109,13 +109,13 @@
     configfile_t *f;
     char l[MAX_STRING_LEN];
     const char *rpw;
     char *w, *x;
 
     if (!(f = ap_pcfg_openfile(r->pool, auth_pwfile))) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "Could not open password file: %s", auth_pwfile);
 	return NULL;
     }
     while (!(ap_cfg_getline(l, MAX_STRING_LEN, f))) {
 	if ((l[0] == '#') || (!l[0]))
 	    continue;
@@ -140,31 +140,33 @@
                                     r->proxyreq ? "Proxy-Authorization"
                                     : "Authorization");
     int l;
     int s, vk = 0, vv = 0;
     const char *t;
     char *key, *value;
+    const char *scheme;
 
     if (!(t = ap_auth_type(r)) || strcasecmp(t, "Digest"))
 	return DECLINED;
 
     if (!ap_auth_name(r)) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "need AuthName: %s", r->uri);
 	return SERVER_ERROR;
     }
 
     if (!auth_line) {
 	ap_note_digest_auth_failure(r);
 	return AUTH_REQUIRED;
     }
 
-    if (strcasecmp(ap_getword(r->pool, &auth_line, ' '), "Digest")) {
+    if (strcasecmp(scheme=ap_getword(r->pool, &auth_line, ' '), "Digest")) {
 	/* Client tried to authenticate using wrong auth scheme */
 	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
-		    "client used wrong authentication scheme: %s", r->uri);
+		    "client used wrong authentication scheme: %s for %s", 
+		    scheme, r->uri);
 	ap_note_digest_auth_failure(r);
 	return AUTH_REQUIRED;
     }
 
     l = strlen(auth_line);
 
@@ -294,19 +296,19 @@
 	return res;
 
     if (!sec->pwfile)
 	return DECLINED;
 
     if (!(a1 = get_hash(r, c->user, sec->pwfile))) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "user %s not found: %s", c->user, r->uri);
 	ap_note_digest_auth_failure(r);
 	return AUTH_REQUIRED;
     }
     if (strcmp(response->digest, find_digest(r, response, a1))) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "user %s: password mismatch: %s", c->user, r->uri);
 	ap_note_digest_auth_failure(r);
 	return AUTH_REQUIRED;
     }
     return OK;
 }
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_dir.c apache_1.3.2/src/modules/standard/mod_dir.c
--- apache_1.3.1/src/modules/standard/mod_dir.c	1998-04-11 20:00:46.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_dir.c	1998-08-25 17:15:37.000000000 +0800
@@ -173,13 +173,13 @@
             ap_internal_redirect(new_uri, r);
             return OK;
         }
 
         /* If the request returned a redirect, propagate it to the client */
 
-        if (is_HTTP_REDIRECT(rr->status) ||
+        if (ap_is_HTTP_REDIRECT(rr->status) ||
             (rr->status == HTTP_NOT_ACCEPTABLE && num_names == 1)) {
 
             error_notfound = rr->status;
             r->notes = ap_overlay_tables(r->pool, r->notes, rr->notes);
             r->headers_out = ap_overlay_tables(r->pool, r->headers_out,
                                             rr->headers_out);
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_expires.c apache_1.3.2/src/modules/standard/mod_expires.c
--- apache_1.3.1/src/modules/standard/mod_expires.c	1998-07-09 01:47:15.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_expires.c	1998-09-05 02:15:47.000000000 +0800
@@ -404,24 +404,21 @@
     char *code;
     time_t base;
     time_t additional;
     time_t expires;
     char age[20];
 
-    if (is_HTTP_ERROR(r->status))       /* Don't add Expires headers to errors */
+    if (ap_is_HTTP_ERROR(r->status))       /* Don't add Expires headers to errors */
         return DECLINED;
 
     if (r->main != NULL)        /* Say no to subrequests */
         return DECLINED;
 
-    if (r->finfo.st_mode == 0)  /* no file ? shame. */
-        return DECLINED;
-
     conf = (expires_dir_config *) ap_get_module_config(r->per_dir_config, &expires_module);
     if (conf == NULL) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "internal error: %s", r->filename);
         return SERVER_ERROR;
     };
 
     if (conf->active != ACTIVE_ON)
         return DECLINED;
@@ -451,12 +448,18 @@
     };
 
     /* we have our code */
 
     switch (code[0]) {
     case 'M':
+	if (r->finfo.st_mode == 0) { 
+	    /* file doesn't exist on disk, so we can't do anything based on
+	     * modification time.  Note that this does _not_ log an error.
+	     */
+	    return DECLINED;
+	}
         base = r->finfo.st_mtime;
         additional = atoi(&code[1]);
         break;
     case 'A':
         /* there's been some discussion and it's possible that 
          * 'access time' will be stored in request structure
@@ -465,13 +468,13 @@
         additional = atoi(&code[1]);
         break;
     default:
         /* expecting the add_* routines to be case-hardened this 
          * is just a reminder that module is beta
          */
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "internal error: bad expires code: %s", r->filename);
         return SERVER_ERROR;
     };
 
     expires = base + additional;
     ap_snprintf(age, sizeof(age), "max-age=%d", (int) expires - (int) r->request_time);
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_imap.c apache_1.3.2/src/modules/standard/mod_imap.c
--- apache_1.3.1/src/modules/standard/mod_imap.c	1998-07-09 01:47:15.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_imap.c	1998-08-07 01:30:58.000000000 +0800
@@ -403,13 +403,13 @@
 	return ap_construct_url(r->pool, "/", r);
     }
 
     /* must be a relative URL to be combined with base */
     if (strchr(base, '/') == NULL && (!strncmp(value, "../", 3)
         || !strcmp(value, ".."))) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "invalid base directive in map file: %s", r->uri);
         return NULL;
     }
     my_base = ap_pstrdup(r->pool, base);
     string_pos = my_base;
     while (*string_pos) {
@@ -463,13 +463,13 @@
             }
 
             value += 2;         /* jump over the '..' that we found in the
                                    value */
         }
         else if (directory) {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "invalid directory name in map file: %s", r->uri);
             return NULL;
         }
 
         if (!strncmp(value, "/../", 4) || !strcmp(value, "/..")) {
             value++;            /* step over the '/' if there are more '..'
@@ -864,13 +864,13 @@
     }
 
     return HTTP_INTERNAL_SERVER_ERROR;        /* If we make it this far,
                                                  we failed. They lose! */
 
 need_2_fields:
-    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		"map file %s, line %d syntax error: requires at "
                 "least two fields", r->uri, imap->line_number);
     /* fall through */
 menu_bail:
     ap_cfg_closefile(imap);
     if (showmenu) {
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_include.c apache_1.3.2/src/modules/standard/mod_include.c
--- apache_1.3.1/src/modules/standard/mod_include.c	1998-07-09 01:47:16.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_include.c	1998-09-07 11:42:03.000000000 +0800
@@ -110,12 +110,13 @@
 
 /* just need some arbitrary non-NULL pointer which can't also be a request_rec */
 #define NESTED_INCLUDE_MAGIC	(&includes_module)
 
 /* ------------------------ Environment function -------------------------- */
 
+/* XXX: could use ap_table_overlap here */
 static void add_include_vars(request_rec *r, char *timefmt)
 {
 #ifndef WIN32
     struct passwd *pw;
 #endif /* ndef WIN32 */
     table *e = r->subprocess_env;
@@ -510,14 +511,14 @@
 		expansion = in - 1;
 		if (*in == '{') {
 		    ++in;
 		    start_of_var_name = in;
 		    in = strchr(in, '}');
 		    if (in == NULL) {
-                        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR,
-				    r->server, "Missing '}' on variable \"%s\"",
+                        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR,
+				    r, "Missing '}' on variable \"%s\"",
 				    expansion);
                         *next = '\0';
                         return;
                     }
 		    end_of_var_name = in;
 		    ++in;
@@ -603,13 +604,13 @@
 
     rr->content_type = CGI_MAGIC_TYPE;
 
     /* Run it. */
 
     rr_status = ap_run_sub_req(rr);
-    if (is_HTTP_REDIRECT(rr_status)) {
+    if (ap_is_HTTP_REDIRECT(rr_status)) {
         const char *location = ap_table_get(rr->headers_out, "Location");
         location = ap_escape_html(rr->pool, location);
         ap_rvputs(r, "<A HREF=\"", location, "\">", location, "</A>", NULL);
     }
 
     ap_destroy_sub_req(rr);
@@ -708,14 +709,14 @@
                 error_fmt = "unable to include \"%s\" in parsed file %s";
             }
 #ifndef WIN32
             ap_chdir_file(r->filename);
 #endif
             if (error_fmt) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR,
-			    r->server, error_fmt, tag_val, r->filename);
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR,
+			    r, error_fmt, tag_val, r->filename);
                 ap_rputs(error, r);
             }
 
 	    /* destroy the sub request if it's not a nested include */
             if (rr != NULL
 		&& ap_get_module_config(rr->request_config, &includes_module)
@@ -724,13 +725,13 @@
             }
         }
         else if (!strcmp(tag, "done")) {
             return 0;
         }
         else {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "unknown parameter \"%s\" to tag include in %s",
                         tag, r->filename);
             ap_rputs(error, r);
         }
     }
 }
@@ -744,26 +745,26 @@
 {
     request_rec *r = ((include_cmd_arg *) arg)->r;
     char *s = ((include_cmd_arg *) arg)->s;
     table *env = r->subprocess_env;
     int child_pid = 0;
 #ifdef DEBUG_INCLUDE_CMD
+#ifdef OS2
+    /* under OS/2 /dev/tty is referenced as con */
+    FILE *dbg = fopen("con", "w");
+#else
     FILE *dbg = fopen("/dev/tty", "w");
 #endif
+#endif
 #ifndef WIN32
     char err_string[MAX_STRING_LEN];
 #endif
 
 #ifdef DEBUG_INCLUDE_CMD
-#ifdef __EMX__
-    /* under OS/2 /dev/tty is referenced as con */
-    FILE *dbg = fopen("con", "w");
-#else
     fprintf(dbg, "Attempting to include command '%s'\n", s);
 #endif
-#endif
 
     if (r->path_info && r->path_info[0] != '\0') {
         request_rec *pa_req;
 
         ap_table_setn(env, "PATH_INFO", ap_escape_shell_cmd(r->pool, r->path_info));
 
@@ -820,13 +821,13 @@
 
     arg.r = r;
     arg.s = s;
 
     if (!ap_bspawn_child(r->pool, include_cmd_child, &arg,
 			 kill_after_timeout, NULL, &script_in, NULL)) {
-        ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		     "couldn't spawn include command");
         return -1;
     }
 
     ap_send_fb(script_in, r);
     ap_bclose(script_in);
@@ -844,13 +845,13 @@
         if (!(tag_val = get_tag(r->pool, in, tag, sizeof(tag), 1))) {
             return 1;
         }
         if (!strcmp(tag, "cmd")) {
             parse_string(r, tag_val, parsed_string, sizeof(parsed_string), 1);
             if (include_cmd(parsed_string, r) == -1) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "execution failure for parameter \"%s\" "
                             "to tag exec in file %s",
                             tag, r->filename);
                 ap_rputs(error, r);
             }
             /* just in case some stooge changed directories */
@@ -858,26 +859,26 @@
             ap_chdir_file(r->filename);
 #endif
         }
         else if (!strcmp(tag, "cgi")) {
             parse_string(r, tag_val, parsed_string, sizeof(parsed_string), 0);
             if (include_cgi(parsed_string, r) == -1) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "invalid CGI ref \"%s\" in %s", tag_val, file);
                 ap_rputs(error, r);
             }
             /* grumble groan */
 #ifndef WIN32
             ap_chdir_file(r->filename);
 #endif
         }
         else if (!strcmp(tag, "done")) {
             return 0;
         }
         else {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "unknown parameter \"%s\" to tag exec in %s",
                         tag, file);
             ap_rputs(error, r);
         }
     }
 
@@ -903,13 +904,13 @@
             }
         }
         else if (!strcmp(tag, "done")) {
             return 0;
         }
         else {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "unknown parameter \"%s\" to tag echo in %s",
                         tag, r->filename);
             ap_rputs(error, r);
         }
     }
 }
@@ -921,13 +922,13 @@
     char parsed_string[MAX_STRING_LEN];
     char *tag_val;
     SV *sub = Nullsv;
     AV *av = newAV();
 
     if (!(ap_allow_options(r) & OPT_INCLUDES)) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "httpd: #perl SSI disallowed by IncludesNoExec in %s",
                     r->filename);
         return DECLINED;
     }
     while (1) {
         if (!(tag_val = get_tag(r->pool, in, tag, sizeof(tag), 1))) {
@@ -988,60 +989,77 @@
             }
         }
         else if (!strcmp(tag, "done")) {
             return 0;
         }
         else {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "unknown parameter \"%s\" to tag config in %s",
                         tag, r->filename);
             ap_rputs(error, r);
         }
     }
 }
 
 
 static int find_file(request_rec *r, const char *directive, const char *tag,
                      char *tag_val, struct stat *finfo, const char *error)
 {
     char *to_send;
+    request_rec *rr;
+    int ret=0;
 
     if (!strcmp(tag, "file")) {
         ap_getparents(tag_val);    /* get rid of any nasties */
-        to_send = ap_make_full_path(r->pool, "./", tag_val);
-        if (stat(to_send, finfo) == -1) {
-            ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
-                        "unable to get information about \"%s\" "
+        
+        rr = ap_sub_req_lookup_file(tag_val, r);
+
+        if (rr->status == HTTP_OK && rr->finfo.st_mode != 0) {
+            to_send = rr->filename;
+            if ((ret = stat(to_send, finfo)) == -1) {
+                ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
+                            "unable to get information about \"%s\" "
+                            "in parsed file %s",
+                            to_send, r->filename);
+                ap_rputs(error, r);
+            }
+        }
+        else {
+            ret = -1;
+            ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
+                        "unable to lookup information about \"%s\" "
                         "in parsed file %s",
-                        to_send, r->filename);
+                        tag_val, r->filename);
             ap_rputs(error, r);
-            return -1;
         }
-        return 0;
+        
+        ap_destroy_sub_req(rr);
+        
+        return ret;
     }
     else if (!strcmp(tag, "virtual")) {
-        request_rec *rr = ap_sub_req_lookup_uri(tag_val, r);
+        rr = ap_sub_req_lookup_uri(tag_val, r);
 
         if (rr->status == HTTP_OK && rr->finfo.st_mode != 0) {
             memcpy((char *) finfo, (const char *) &rr->finfo,
                    sizeof(struct stat));
             ap_destroy_sub_req(rr);
             return 0;
         }
         else {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "unable to get information about \"%s\" "
                         "in parsed file %s",
                         tag_val, r->filename);
             ap_rputs(error, r);
             ap_destroy_sub_req(rr);
             return -1;
         }
     }
     else {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "unknown parameter \"%s\" to tag %s in %s",
                     tag, directive, r->filename);
         ap_rputs(error, r);
         return -1;
     }
 }
@@ -1115,13 +1133,13 @@
 {
     regex_t *compiled;
     int regex_error;
 
     compiled = ap_pregcomp(r->pool, rexp, REG_EXTENDED | REG_NOSUB);
     if (compiled == NULL) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "unable to compile pattern \"%s\"", rexp);
         return -1;
     }
     regex_error = regexec(compiled, string, 0, (regmatch_t *) NULL, 0);
     ap_pregfree(r->pool, compiled);
     return (!regex_error);
@@ -1360,13 +1378,13 @@
             case token_le:
             case token_lt:
                 new->parent = current;
                 current = current->right = new;
                 break;
             default:
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "Invalid expression \"%s\" in file %s",
                             expr, r->filename);
                 ap_rputs(error, r);
                 goto RETURN;
             }
             break;
@@ -1374,13 +1392,13 @@
         case token_and:
         case token_or:
 #ifdef DEBUG_INCLUDE
             ap_rputs("     Token: and/or\n", r);
 #endif
             if (current == (struct parse_node *) NULL) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "Invalid expression \"%s\" in file %s",
                             expr, r->filename);
                 ap_rputs(error, r);
                 goto RETURN;
             }
             /* Percolate upwards */
@@ -1399,13 +1417,13 @@
                 case token_lt:
                     current = current->parent;
                     continue;
                 case token_lbrace:
                     break;
                 default:
-                    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                                 "Invalid expression \"%s\" in file %s",
                                 expr, r->filename);
                     ap_rputs(error, r);
                     goto RETURN;
                 }
                 break;
@@ -1444,13 +1462,13 @@
                 case token_ge:
                 case token_gt:
                 case token_le:
                 case token_lt:
                     break;
                 default:
-                    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                                 "Invalid expression \"%s\" in file %s",
                                 expr, r->filename);
                     ap_rputs(error, r);
                     goto RETURN;
                 }
                 break;
@@ -1476,13 +1494,13 @@
         case token_le:
         case token_lt:
 #ifdef DEBUG_INCLUDE
             ap_rputs("     Token: eq/ne/ge/gt/le/lt\n", r);
 #endif
             if (current == (struct parse_node *) NULL) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "Invalid expression \"%s\" in file %s",
                             expr, r->filename);
                 ap_rputs(error, r);
                 goto RETURN;
             }
             /* Percolate upwards */
@@ -1501,13 +1519,13 @@
                 case token_ne:
                 case token_ge:
                 case token_gt:
                 case token_le:
                 case token_lt:
                 default:
-                    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                                 "Invalid expression \"%s\" in file %s",
                                 expr, r->filename);
                     ap_rputs(error, r);
                     goto RETURN;
                 }
                 break;
@@ -1535,13 +1553,13 @@
                     current->token.type = token_group;
                     break;
                 }
                 current = current->parent;
             }
             if (current == (struct parse_node *) NULL) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "Unmatched ')' in \"%s\" in file %s",
 			    expr, r->filename);
                 ap_rputs(error, r);
                 goto RETURN;
             }
             break;
@@ -1568,13 +1586,13 @@
                 case token_le:
                 case token_lt:
                     break;
                 case token_string:
                 case token_group:
                 default:
-                    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                                 "Invalid expression \"%s\" in file %s",
                                 expr, r->filename);
                     ap_rputs(error, r);
                     goto RETURN;
                 }
                 break;
@@ -1616,13 +1634,13 @@
         case token_or:
 #ifdef DEBUG_INCLUDE
             ap_rputs("     Evaluate and/or\n", r);
 #endif
             if (current->left == (struct parse_node *) NULL ||
                 current->right == (struct parse_node *) NULL) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "Invalid expression \"%s\" in file %s",
                             expr, r->filename);
                 ap_rputs(error, r);
                 goto RETURN;
             }
             if (!current->left->done) {
@@ -1681,13 +1699,13 @@
             ap_rputs("     Evaluate eq/ne\n", r);
 #endif
             if ((current->left == (struct parse_node *) NULL) ||
                 (current->right == (struct parse_node *) NULL) ||
                 (current->left->token.type != token_string) ||
                 (current->right->token.type != token_string)) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "Invalid expression \"%s\" in file %s",
                             expr, r->filename);
                 ap_rputs(error, r);
                 goto RETURN;
             }
             parse_string(r, current->left->token.value,
@@ -1702,13 +1720,13 @@
                 int len;
                 len = strlen(current->right->token.value);
                 if (current->right->token.value[len - 1] == '/') {
                     current->right->token.value[len - 1] = '\0';
                 }
                 else {
-                    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                                 "Invalid rexp \"%s\" in file %s",
                                 current->right->token.value, r->filename);
                     ap_rputs(error, r);
                     goto RETURN;
                 }
 #ifdef DEBUG_INCLUDE
@@ -1746,13 +1764,13 @@
             ap_rputs("     Evaluate ge/gt/le/lt\n", r);
 #endif
             if ((current->left == (struct parse_node *) NULL) ||
                 (current->right == (struct parse_node *) NULL) ||
                 (current->left->token.type != token_string) ||
                 (current->right->token.type != token_string)) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "Invalid expression \"%s\" in file %s",
                             expr, r->filename);
                 ap_rputs(error, r);
                 goto RETURN;
             }
             parse_string(r, current->left->token.value,
@@ -1829,27 +1847,27 @@
 #endif
             current->done = 1;
             current = current->parent;
             break;
 
         case token_lbrace:
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "Unmatched '(' in \"%s\" in file %s",
                         expr, r->filename);
             ap_rputs(error, r);
             goto RETURN;
 
         case token_rbrace:
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "Unmatched ')' in \"%s\" in file %s",
                         expr, r->filename);
             ap_rputs(error, r);
             goto RETURN;
 
         default:
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			"bad token type");
             ap_rputs(error, r);
             goto RETURN;
         }
     }
 
@@ -1871,13 +1889,13 @@
         tag_val = get_tag(r->pool, in, tag, sizeof(tag), 0);
         if (*tag == '\0') {
             return 1;
         }
         else if (!strcmp(tag, "done")) {
 	    if (expr == NULL) {
-		ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			    "missing expr in if statement: %s",
 			    r->filename);
 		ap_rputs(error, r);
 		return 1;
 	    }
             *printing = *conditional_status = parse_expr(r, expr, error);
@@ -1891,13 +1909,13 @@
             expr = tag_val;
 #ifdef DEBUG_INCLUDE
             ap_rvputs(r, "**** if expr=\"", expr, "\"\n", NULL);
 #endif
         }
         else {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "unknown parameter \"%s\" to tag if in %s",
                         tag, r->filename);
             ap_rputs(error, r);
         }
     }
 }
@@ -1922,13 +1940,13 @@
 #endif
             if (*conditional_status) {
                 *printing = 0;
                 return (0);
             }
 	    if (expr == NULL) {
-		ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			    "missing expr in elif statement: %s",
 			    r->filename);
 		ap_rputs(error, r);
 		return 1;
 	    }
             *printing = *conditional_status = parse_expr(r, expr, error);
@@ -1942,13 +1960,13 @@
             expr = tag_val;
 #ifdef DEBUG_INCLUDE
             ap_rvputs(r, "**** if expr=\"", expr, "\"\n", NULL);
 #endif
         }
         else {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "unknown parameter \"%s\" to tag if in %s",
                         tag, r->filename);
             ap_rputs(error, r);
         }
     }
 }
@@ -1968,13 +1986,13 @@
 #endif
         *printing = !(*conditional_status);
         *conditional_status = 1;
         return 0;
     }
     else {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "else directive does not take tags in %s",
 		    r->filename);
         if (*printing) {
             ap_rputs(error, r);
         }
         return -1;
@@ -1996,13 +2014,13 @@
 #endif
         *printing = 1;
         *conditional_status = 1;
         return 0;
     }
     else {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "endif directive does not take tags in %s",
 		    r->filename);
         ap_rputs(error, r);
         return -1;
     }
 }
@@ -2024,23 +2042,23 @@
         }
         else if (!strcmp(tag, "var")) {
             var = tag_val;
         }
         else if (!strcmp(tag, "value")) {
             if (var == (char *) NULL) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "variable must precede value in set directive in %s",
 			    r->filename);
                 ap_rputs(error, r);
                 return -1;
             }
             parse_string(r, tag_val, parsed_string, sizeof(parsed_string), 0);
             ap_table_setn(r->subprocess_env, var, ap_pstrdup(r->pool, parsed_string));
         }
         else {
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                         "Invalid tag for set directive in %s", r->filename);
             ap_rputs(error, r);
             return -1;
         }
     }
 }
@@ -2060,13 +2078,13 @@
         for (i = 0; i < arr->nelts; ++i) {
             ap_rvputs(r, elts[i].key, "=", elts[i].val, "\n", NULL);
         }
         return 0;
     }
     else {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "printenv directive does not take tags in %s",
 		    r->filename);
         ap_rputs(error, r);
         return -1;
     }
 }
@@ -2107,13 +2125,13 @@
                   ap_escape_shell_cmd(r->pool, arg_copy));
     }
 
     while (1) {
         if (!find_string(f, STARTING_SEQUENCE, r, printing)) {
             if (get_directive(f, directive, sizeof(directive), r->pool)) {
-		ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 			    "mod_include: error reading directive in %s",
 			    r->filename);
 		ap_rputs(error, r);
                 return;
             }
             if (!strcmp(directive, "if")) {
@@ -2153,13 +2171,13 @@
             }
             if (!printing) {
                 continue;
             }
             if (!strcmp(directive, "exec")) {
                 if (noexec) {
-                    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                                 "httpd: exec used but not allowed in %s",
                                 r->filename);
                     if (printing) {
                         ap_rputs(error, r);
                     }
                     ret = find_string(f, ENDING_SEQUENCE, r, 0);
@@ -2192,23 +2210,23 @@
 #ifdef USE_PERL_SSI
             else if (!strcmp(directive, "perl")) {
                 ret = handle_perl(f, r, error);
             }
 #endif
             else {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "httpd: unknown directive \"%s\" "
                             "in parsed doc %s",
                             directive, r->filename);
                 if (printing) {
                     ap_rputs(error, r);
                 }
                 ret = find_string(f, ENDING_SEQUENCE, r, 0);
             }
             if (ret) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                             "httpd: premature EOF in parsed file %s",
                             r->filename);
                 return;
             }
         }
         else {
@@ -2274,28 +2292,28 @@
     }
     r->allowed |= (1 << M_GET);
     if (r->method_number != M_GET) {
         return DECLINED;
     }
     if (r->finfo.st_mode == 0) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "File does not exist: %s",
                     (r->path_info
                      ? ap_pstrcat(r->pool, r->filename, r->path_info, NULL)
                      : r->filename));
         return HTTP_NOT_FOUND;
     }
 
     if (!(f = ap_pfopen(r->pool, r->filename, "r"))) {
-        ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
                     "file permissions deny server access: %s", r->filename);
         return HTTP_FORBIDDEN;
     }
 
     if ((*state == xbithack_full)
-#if !defined(__EMX__) && !defined(WIN32)
+#if !defined(OS2) && !defined(WIN32)
     /*  OS/2 dosen't support Groups. */
         && (r->finfo.st_mode & S_IXGRP)
 #endif
         ) {
         ap_update_mtime(r, r->finfo.st_mtime);
         ap_set_last_modified(r);
@@ -2360,13 +2378,13 @@
     r->content_type = "text/html";
     return send_parsed_file(r);
 }
 
 static int xbithack_handler(request_rec *r)
 {
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
     /* OS/2 dosen't currently support the xbithack. This is being worked on. */
     return DECLINED;
 #else
     enum xbithack *state;
 
     if (!(r->finfo.st_mode & S_IXUSR)) {
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_info.c apache_1.3.2/src/modules/standard/mod_info.c
--- apache_1.3.1/src/modules/standard/mod_info.c	1998-04-11 20:00:48.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_info.c	1998-08-13 10:51:38.000000000 +0800
@@ -168,13 +168,13 @@
     configfile_t *fp;
     info_cfg_lines *new, *ret, *prev;
     const char *t;
 
     fp = ap_pcfg_openfile(p, filename);
     if (!fp) {
-        ap_log_error(APLOG_MARK, APLOG_WARNING, r->server, 
+        ap_log_rerror(APLOG_MARK, APLOG_WARNING, r, 
 		    "mod_info: couldn't open config file %s",
 		    filename);
         return NULL;
     }
     ret = NULL;
     prev = NULL;
@@ -403,14 +403,14 @@
                         "<font size=+1><tt>%s</tt></a></font><br>\n",
                         ap_get_server_version());
             ap_rprintf(r, "<strong>Server Built:</strong> "
                         "<font size=+1><tt>%s</tt></a></font><br>\n",
                         ap_get_server_built());
             ap_rprintf(r, "<strong>API Version:</strong> "
-                        "<tt>%d</tt><br>\n",
-                        MODULE_MAGIC_NUMBER);
+                        "<tt>%d:%d</tt><br>\n",
+                        MODULE_MAGIC_NUMBER_MAJOR, MODULE_MAGIC_NUMBER_MINOR);
             ap_rprintf(r, "<strong>Run Mode:</strong> <tt>%s</tt><br>\n",
                         (ap_standalone ? "standalone" : "inetd"));
             ap_rprintf(r, "<strong>User/Group:</strong> "
                         "<tt>%s(%d)/%d</tt><br>\n",
                         ap_user_name, (int) ap_user_id, (int) ap_group_id);
             ap_rprintf(r, "<strong>Hostname/port:</strong> "
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_log_agent.c apache_1.3.2/src/modules/standard/mod_log_agent.c
--- apache_1.3.1/src/modules/standard/mod_log_agent.c	1998-06-15 05:10:26.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_log_agent.c	1998-08-03 17:15:12.000000000 +0800
@@ -60,13 +60,13 @@
 #include "http_config.h"
 #include "http_log.h"
 
 module agent_log_module;
 
 static int xfer_flags = (O_WRONLY | O_APPEND | O_CREAT);
-#ifdef __EMX__
+#ifdef OS2
 /* OS/2 dosen't support users and groups */
 static mode_t xfer_mode = (S_IREAD | S_IWRITE);
 #else
 static mode_t xfer_mode = (S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
 #endif
 
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_log_config.c apache_1.3.2/src/modules/standard/mod_log_config.c
--- apache_1.3.1/src/modules/standard/mod_log_config.c	1998-07-09 01:47:16.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_log_config.c	1998-08-03 17:15:12.000000000 +0800
@@ -173,13 +173,13 @@
 #include "http_log.h"
 #include <limits.h>
 
 module MODULE_VAR_EXPORT config_log_module;
 
 static int xfer_flags = (O_WRONLY | O_APPEND | O_CREAT);
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
 /* OS/2 dosen't support users and groups */
 static mode_t xfer_mode = (S_IREAD | S_IWRITE);
 #else
 static mode_t xfer_mode = (S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
 #endif
 
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_log_referer.c apache_1.3.2/src/modules/standard/mod_log_referer.c
--- apache_1.3.1/src/modules/standard/mod_log_referer.c	1998-06-15 05:10:27.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_log_referer.c	1998-08-03 17:15:13.000000000 +0800
@@ -61,13 +61,13 @@
 #include "http_log.h"
 
 module referer_log_module;
 
 static int xfer_flags = (O_WRONLY | O_APPEND | O_CREAT);
 
-#ifdef __EMX__
+#ifdef OS2
 /* OS/2 lacks support for users and groups */
 static mode_t xfer_mode = (S_IREAD | S_IWRITE);
 #else
 static mode_t xfer_mode = (S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
 #endif
 
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_mime_magic.c apache_1.3.2/src/modules/standard/mod_mime_magic.c
--- apache_1.3.1/src/modules/standard/mod_mime_magic.c	1998-07-09 01:47:17.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_mime_magic.c	1998-08-07 01:31:00.000000000 +0800
@@ -572,13 +572,13 @@
     magic_req_rec *req_dat = (magic_req_rec *)
 		    ap_get_module_config(r->request_config, &mime_magic_module);
     magic_rsl *rsl;
 
     /* make sure we have a list to put it in */
     if (!req_dat) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 		    MODNAME ": request config should not be NULL");
 	if (!(req_dat = magic_set_config(r))) {
 	    /* failure */
 	    return -1;
 	}
     }
@@ -674,13 +674,13 @@
 	}
     }
 
     /* clean up and return */
     result[res_pos] = 0;
 #if MIME_MAGIC_DEBUG
-    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 	     MODNAME ": rsl_strdup() %d chars: %s", res_pos - 1, result);
 #endif
     return result;
 }
 
 /* states for the state-machine algorithm in magic_rsl_to_request() */
@@ -746,13 +746,13 @@
 		    frag = req_dat->tail;
 		    break;
 		}
 		else {
 		    /* should not be possible */
 		    /* abandon malfunctioning module */
-		    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+		    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 				MODNAME ": bad state %d (ws)", state);
 		    return DECLINED;
 		}
 		/* NOTREACHED */
 	    }
 	    else if (state == rsl_type &&
@@ -790,13 +790,13 @@
 		    encoding_len++;
 		    continue;
 		}
 		else {
 		    /* should not be possible */
 		    /* abandon malfunctioning module */
-		    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+		    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 				MODNAME ": bad state %d (ns)", state);
 		    return DECLINED;
 		}
 		/* NOTREACHED */
 	    }
 	    /* NOTREACHED */
@@ -865,23 +865,23 @@
 	/* fatal error, bail out */
 	return result;
     }
 
     if ((fd = ap_popenf(r->pool, r->filename, O_RDONLY, 0)) < 0) {
 	/* We can't open it, but we were able to stat it. */
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    MODNAME ": can't read `%s'", r->filename);
 	/* let some other handler decide what the problem is */
 	return DECLINED;
     }
 
     /*
      * try looking at the first HOWMANY bytes
      */
     if ((nbytes = read(fd, (char *) buf, sizeof(buf) - 1)) == -1) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    MODNAME ": read failed: %s", r->filename);
 	return HTTP_INTERNAL_SERVER_ERROR;
     }
 
     if (nbytes == 0)
 	magic_rsl_puts(r, MIME_TEXT_UNKNOWN);
@@ -1476,13 +1476,13 @@
 #endif
 #ifdef    S_IFLNK
     case S_IFLNK:
 	/* We used stat(), the only possible reason for this is that the
 	 * symlink is broken.
 	 */
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 		    MODNAME ": broken symlink (%s)", fn);
 	return HTTP_INTERNAL_SERVER_ERROR;
 #endif
 #ifdef    S_IFSOCK
 #ifndef __COHERENT__
     case S_IFSOCK:
@@ -1490,13 +1490,13 @@
 	return DONE;
 #endif
 #endif
     case S_IFREG:
 	break;
     default:
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 		    MODNAME ": invalid mode 0%o.", (unsigned int)r->finfo.st_mode);
 	return HTTP_INTERNAL_SERVER_ERROR;
     }
 
     /*
      * regular file, check next possibility
@@ -1557,13 +1557,13 @@
     union VALUETYPE p;
     magic_server_config_rec *conf = (magic_server_config_rec *)
 		ap_get_module_config(r->server->module_config, &mime_magic_module);
     struct magic *m;
 
 #if MIME_MAGIC_DEBUG
-    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		MODNAME ": match conf=%x file=%s m=%s m->next=%s last=%s",
 		conf,
 		conf->magicfile ? conf->magicfile : "NULL",
 		conf->magic ? "set" : "NULL",
 		(conf->magic && conf->magic->next) ? "set" : "NULL",
 		conf->last ? "set" : "NULL");
@@ -1572,13 +1572,13 @@
 #if MIME_MAGIC_DEBUG
     for (m = conf->magic; m; m = m->next) {
 	if (ap_isprint((((unsigned long) m) >> 24) & 255) &&
 	    ap_isprint((((unsigned long) m) >> 16) & 255) &&
 	    ap_isprint((((unsigned long) m) >> 8) & 255) &&
 	    ap_isprint(((unsigned long) m) & 255)) {
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 			MODNAME ": match: POINTER CLOBBERED! "
 			"m=\"%c%c%c%c\"",
 			(((unsigned long) m) >> 24) & 255,
 			(((unsigned long) m) >> 16) & 255,
 			(((unsigned long) m) >> 8) & 255,
 			((unsigned long) m) & 255);
@@ -1587,13 +1587,13 @@
     }
 #endif
 
     for (m = conf->magic; m; m = m->next) {
 #if MIME_MAGIC_DEBUG
 	rule_counter++;
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		    MODNAME ": line=%d desc=%s", m->lineno, m->desc);
 #endif
 
 	/* check if main entry matches */
 	if (!mget(r, &p, s, m, nbytes) ||
 	    !mcheck(r, &p, m)) {
@@ -1607,13 +1607,13 @@
 	    }
 
 	    m_cont = m->next;
 	    while (m_cont && (m_cont->cont_level != 0)) {
 #if MIME_MAGIC_DEBUG
 		rule_counter++;
-		ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 			MODNAME ": line=%d mc=%x mc->next=%x cont=%d desc=%s",
 			    m_cont->lineno, m_cont,
 			    m_cont->next, m_cont->cont_level,
 			    m_cont->desc);
 #endif
 		/*
@@ -1626,13 +1626,13 @@
 	    continue;
 	}
 
 	/* if we get here, the main entry rule was a match */
 	/* this will be the last run through the loop */
 #if MIME_MAGIC_DEBUG
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		    MODNAME ": rule matched, line=%d type=%d %s",
 		    m->lineno, m->type,
 		    (m->type == STRING) ? m->value.s : "");
 #endif
 
 	/* print the match */
@@ -1650,13 +1650,13 @@
 	 * while (m && m->next && m->next->cont_level != 0 && ( m = m->next
 	 * ))
 	 */
 	m = m->next;
 	while (m && (m->cont_level != 0)) {
 #if MIME_MAGIC_DEBUG
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 			MODNAME ": match line=%d cont=%d type=%d %s",
 			m->lineno, m->cont_level, m->type,
 			(m->type == STRING) ? m->value.s : "");
 #endif
 	    if (cont_level >= m->cont_level) {
 		if (cont_level > m->cont_level) {
@@ -1694,19 +1694,19 @@
 	    }
 
 	    /* move to next continuation record */
 	    m = m->next;
 	}
 #if MIME_MAGIC_DEBUG
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		    MODNAME ": matched after %d rules", rule_counter);
 #endif
 	return 1;		/* all through */
     }
 #if MIME_MAGIC_DEBUG
-    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		MODNAME ": failed after %d rules", rule_counter);
 #endif
     return 0;			/* no match at all */
 }
 
 static void mprint(request_rec *r, union VALUETYPE *p, struct magic *m)
@@ -1747,13 +1747,13 @@
 	pp = ctime((time_t *) & p->l);
 	if ((rt = strchr(pp, '\n')) != NULL)
 	    *rt = '\0';
 	(void) magic_rsl_printf(r, m->desc, pp);
 	return;
     default:
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 		    MODNAME ": invalid m->type (%d) in mprint().",
 		    m->type);
 	return;
     }
 
     v = signextend(r->server, m, v) & m->mask;
@@ -1793,13 +1793,13 @@
     case LELONG:
     case LEDATE:
 	p->l = (long)
 	    ((p->hl[3] << 24) | (p->hl[2] << 16) | (p->hl[1] << 8) | (p->hl[0]));
 	return 1;
     default:
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 		    MODNAME ": invalid type %d in mconvert().", m->type);
 	return 0;
     }
 }
 
 
@@ -1845,13 +1845,13 @@
 {
     register unsigned long l = m->value.l;
     register unsigned long v;
     int matched;
 
     if ((m->value.s[0] == 'x') && (m->value.s[1] == '\0')) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 		    MODNAME ": BOINK");
 	return 1;
     }
 
     switch (m->type) {
     case BYTE:
@@ -1890,98 +1890,98 @@
 		if ((v = *b++ - *a++) != 0)
 		    break;
 	}
 	break;
     default:
 	/*  bogosity, pretend that it just wasn't a match */
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 		    MODNAME ": invalid type %d in mcheck().", m->type);
 	return 0;
     }
 
     v = signextend(r->server, m, v) & m->mask;
 
     switch (m->reln) {
     case 'x':
 #if MIME_MAGIC_DEBUG
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		    "%lu == *any* = 1", v);
 #endif
 	matched = 1;
 	break;
 
     case '!':
 	matched = v != l;
 #if MIME_MAGIC_DEBUG
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		    "%lu != %lu = %d", v, l, matched);
 #endif
 	break;
 
     case '=':
 	matched = v == l;
 #if MIME_MAGIC_DEBUG
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		    "%lu == %lu = %d", v, l, matched);
 #endif
 	break;
 
     case '>':
 	if (m->flag & UNSIGNED) {
 	    matched = v > l;
 #if MIME_MAGIC_DEBUG
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 			"%lu > %lu = %d", v, l, matched);
 #endif
 	}
 	else {
 	    matched = (long) v > (long) l;
 #if MIME_MAGIC_DEBUG
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 			"%ld > %ld = %d", v, l, matched);
 #endif
 	}
 	break;
 
     case '<':
 	if (m->flag & UNSIGNED) {
 	    matched = v < l;
 #if MIME_MAGIC_DEBUG
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 			"%lu < %lu = %d", v, l, matched);
 #endif
 	}
 	else {
 	    matched = (long) v < (long) l;
 #if MIME_MAGIC_DEBUG
-	    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 			"%ld < %ld = %d", v, l, matched);
 #endif
 	}
 	break;
 
     case '&':
 	matched = (v & l) == l;
 #if MIME_MAGIC_DEBUG
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		    "((%lx & %lx) == %lx) = %d", v, l, l, matched);
 #endif
 	break;
 
     case '^':
 	matched = (v & l) != l;
 #if MIME_MAGIC_DEBUG
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		    "((%lx & %lx) != %lx) = %d", v, l, l, matched);
 #endif
 	break;
 
     default:
 	/* bogosity, pretend it didn't match */
 	matched = 0;
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_ERR, r,
 		    MODNAME ": mcheck: can't happen: invalid relation %d.",
 		    m->reln);
 	break;
     }
 
     return matched;
@@ -2150,13 +2150,13 @@
 #if defined(WIN32)
     child_pid = spawnvp(compr[parm->method].argv[0],
 			compr[parm->method].argv);
     return (child_pid);
 #else
     execvp(compr[parm->method].argv[0], compr[parm->method].argv);
-    ap_log_error(APLOG_MARK, APLOG_ERR, parm->r->server,
+    ap_log_rerror(APLOG_MARK, APLOG_ERR, parm->r,
 		MODNAME ": could not execute `%s'.",
 		compr[parm->method].argv[0]);
     return -1;
 #endif
 }
 
@@ -2176,28 +2176,28 @@
      * where we would end up with LOTS of zombies.
      */
     sub_pool = ap_make_sub_pool(r->pool);
 
     if (!ap_bspawn_child(sub_pool, uncompress_child, &parm, kill_always,
 			 &bin, &bout, NULL)) {
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    MODNAME ": couldn't spawn uncompress process: %s", r->uri);
 	return -1;
     }
 
     if (ap_bwrite(bin, old, n) != n) {
 	ap_destroy_pool(sub_pool);
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    MODNAME ": write failed.");
 	return -1;
     }
     ap_bclose(bin);
     *newch = (unsigned char *) ap_palloc(r->pool, n);
     if ((n = ap_bread(bout, *newch, n)) <= 0) {
 	ap_destroy_pool(sub_pool);
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 	    MODNAME ": read failed %s", r->filename);
 	return -1;
     }
     ap_destroy_pool(sub_pool);
     return n;
 }
@@ -2298,13 +2298,13 @@
 {
     int suffix_pos, result;
     char *sub_filename;
     request_rec *sub;
 
 #if MIME_MAGIC_DEBUG
-    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		MODNAME ": revision_suffix checking %s", r->filename);
 #endif /* MIME_MAGIC_DEBUG */
 
     /* check for recognized revision suffix */
     suffix_pos = strlen(r->filename) - 1;
     if (!ap_isdigit(r->filename[suffix_pos])) {
@@ -2317,22 +2317,22 @@
     }
 
     /* perform sub-request for the file name without the suffix */
     result = 0;
     sub_filename = ap_pstrndup(r->pool, r->filename, suffix_pos);
 #if MIME_MAGIC_DEBUG
-    ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		MODNAME ": subrequest lookup for %s", sub_filename);
 #endif /* MIME_MAGIC_DEBUG */
     sub = ap_sub_req_lookup_file(sub_filename, r);
 
     /* extract content type/encoding/language from sub-request */
     if (sub->content_type) {
 	r->content_type = ap_pstrdup(r->pool, sub->content_type);
 #if MIME_MAGIC_DEBUG
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_DEBUG, r,
 		    MODNAME ": subrequest %s got %s",
 		    sub_filename, r->content_type);
 #endif /* MIME_MAGIC_DEBUG */
 	if (sub->content_encoding)
 	    r->content_encoding =
 		ap_pstrdup(r->pool, sub->content_encoding);
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_negotiation.c apache_1.3.2/src/modules/standard/mod_negotiation.c
--- apache_1.3.1/src/modules/standard/mod_negotiation.c	1998-07-09 01:47:18.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_negotiation.c	1998-08-07 01:31:00.000000000 +0800
@@ -678,23 +678,23 @@
 
     for ( ; *cp && *cp != ':' ; ++cp) {
         *cp = ap_tolower(*cp);
     }
 
     if (!*cp) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "Syntax error in type map --- no ':': %s", r->filename);
         return NULL;
     }
 
     do {
         ++cp;
     } while (*cp && ap_isspace(*cp));
 
     if (!*cp) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "Syntax error in type map --- no header body: %s",
                     r->filename);
         return NULL;
     }
 
     return cp;
@@ -710,13 +710,13 @@
 
     /* We are not using multiviews */
     neg->count_multiviews_variants = 0;
 
     map = ap_pfopen(neg->pool, rr->filename, "r");
     if (map == NULL) {
-        ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
                     "cannot access type map file: %s", rr->filename);
         return HTTP_FORBIDDEN;
     }
 
     clean_var_rec(&mime_info);
 
@@ -802,13 +802,13 @@
     ++filp;
     prefix_len = strlen(filp);
 
     dirp = ap_popendir(neg->pool, neg->dir_name);
 
     if (dirp == NULL) {
-        ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
                     "cannot read directory for multi: %s", neg->dir_name);
         return HTTP_FORBIDDEN;
     }
 
     while ((dir_entry = readdir(dirp))) {
         request_rec *sub_req;
@@ -2049,13 +2049,13 @@
         set_neg_headers(r, neg, na_list);
         store_variant_list(r, neg);
         return MULTIPLE_CHOICES;
     }
 
     if (!best) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "no acceptable variant: %s", r->filename);
 
         set_neg_headers(r, neg, na_result);
         store_variant_list(r, neg);
         return NOT_ACCEPTABLE;
     }
@@ -2136,13 +2136,13 @@
         store_variant_list(r, neg);
         res = MULTIPLE_CHOICES;
         goto return_from_multi;
     }
 
     if (!best) {
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                     "no acceptable variant: %s", r->filename);
 
         set_neg_headers(r, neg, na_result);
         store_variant_list(r, neg);
         res = NOT_ACCEPTABLE;
         goto return_from_multi;
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_rewrite.c apache_1.3.2/src/modules/standard/mod_rewrite.c
--- apache_1.3.1/src/modules/standard/mod_rewrite.c	1998-07-18 23:30:46.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_rewrite.c	1998-08-25 17:15:39.000000000 +0800
@@ -850,13 +850,13 @@
             else if (strcasecmp(val, "seeother") == 0) {
                 status = HTTP_SEE_OTHER;
             }
             else if (ap_isdigit(*val)) {
                 status = atoi(val);
             }
-            if (!is_HTTP_REDIRECT(status)) {
+            if (!ap_is_HTTP_REDIRECT(status)) {
                 return "RewriteRule: invalid HTTP response code "
                        "for flag 'R'";
             }
             cfg->forced_responsecode = status;
         }
     }
@@ -1094,13 +1094,13 @@
             /* it should be go on as an internal proxy request */
 
             /* check if the proxy module is enabled, so
              * we can actually use it!
              */
             if (!proxy_available) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                              "attempt to make remote request from mod_rewrite "
                              "without proxy enabled: %s", r->filename);
                 return FORBIDDEN;
             }
 
             /* make sure the QUERY_STRING and
@@ -1154,13 +1154,13 @@
             if (r->args != NULL) {
                r->filename = ap_pstrcat(r->pool, r->filename,
                                         "?", r->args, NULL);
             }
 
             /* determine HTTP redirect response code */
-            if (is_HTTP_REDIRECT(r->status)) {
+            if (ap_is_HTTP_REDIRECT(r->status)) {
                 n = r->status;
                 r->status = HTTP_OK; /* make Apache kernel happy */
             }
             else {
                 n = REDIRECT;
             }
@@ -1331,13 +1331,13 @@
     /*
      *  only do something under runtime if the engine is really enabled,
      *  for this directory, else return immediately!
      */
     if (!(ap_allow_options(r) & (OPT_SYM_LINKS | OPT_SYM_OWNER))) {
         /* FollowSymLinks is mandatory! */
-        ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
                      "Options FollowSymLinks or SymLinksIfOwnerMatch is off "
                      "which implies that RewriteRule directive is forbidden: "
                      "%s", r->filename);
         return FORBIDDEN;
     }
     else {
@@ -1443,13 +1443,13 @@
             if (r->args != NULL) {
                 r->filename = ap_pstrcat(r->pool, r->filename,
                                          "?", r->args, NULL);
             }
 
             /* determine HTTP redirect response code */
-            if (is_HTTP_REDIRECT(r->status)) {
+            if (ap_is_HTTP_REDIRECT(r->status)) {
                 n = r->status;
                 r->status = HTTP_OK; /* make Apache kernel happy */
             }
             else {
                 n = REDIRECT;
             }
@@ -1725,12 +1725,13 @@
  */
 static int apply_rewrite_rule(request_rec *r, rewriterule_entry *p,
                               char *perdir)
 {
     char *uri;
     char *output;
+    const char *vary;
     char newuri[MAX_STRING_LEN];
     char env[MAX_STRING_LEN];
     regex_t *regexp;
     regmatch_t regmatch[MAX_NMATCH];
     backrefinfo *briRR = NULL;
     backrefinfo *briRC = NULL;
@@ -1838,12 +1839,13 @@
              *  The "OR" case
              */
             if (rc == 0) {
                 /*  One condition is false, but another can be
                  *  still true, so we have to continue...
                  */
+	        ap_table_unset(r->notes, VARY_KEY_THIS);
                 continue;
             }
             else {
                 /*  One true condition is enough in "or" case, so
                  *  skip the other conditions which are "ornext"
                  *  chained
@@ -1863,19 +1865,36 @@
              */
             if (rc == 0) {
                 failed = 1;
                 break;
             }
         }
+	vary = ap_table_get(r->notes, VARY_KEY_THIS);
+	if (vary != NULL) {
+	    ap_table_merge(r->notes, VARY_KEY, vary);
+	    ap_table_unset(r->notes, VARY_KEY_THIS);
+	}
     }
     /*  if any condition fails the complete rule fails  */
     if (failed) {
+        ap_table_unset(r->notes, VARY_KEY);
+        ap_table_unset(r->notes, VARY_KEY_THIS);
         return 0;
     }
 
     /*
+     * Regardless of what we do next, we've found a match.  Check to see
+     * if any of the request header fields were involved, and add them
+     * to the Vary field of the response.
+     */
+    if ((vary = ap_table_get(r->notes, VARY_KEY)) != NULL) {
+        ap_table_merge(r->headers_out, "Vary", vary);
+	ap_table_unset(r->notes, VARY_KEY);
+    }
+
+    /*
      *  If this is a pure matching rule (`RewriteRule <pat> -')
      *  we stop processing and return immediately. The only thing
      *  we have not to forget are the environment variables
      *  (`RewriteRule <pat> - [E=...]')
      */
     if (strcmp(output, "-") == 0) {
@@ -2151,13 +2170,13 @@
             if (S_ISREG(sb.st_mode) && sb.st_size > 0) {
                 rc = 1;
             }
         }
     }
     else if (strcmp(p->pattern, "-l") == 0) {
-#if !defined(__EMX__) && !defined(WIN32)
+#if !defined(OS2) && !defined(WIN32)
         if (lstat(input, &sb) == 0) {
             if (S_ISLNK(sb.st_mode)) {
                 rc = 1;
             }
         }
 #endif
@@ -2592,25 +2611,25 @@
             }
 
             cpT = lookup_map(r, mapname, mapkey);
             if (cpT != NULL) {
                 n = strlen(cpT);
                 if (cpO + n >= newuri + sizeof(newuri)) {
-                    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR,
-                                 r->server, "insufficient space in "
+                    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR,
+                                 r, "insufficient space in "
                                  "expand_map_lookups, aborting");
                     return;
                 }
                 memcpy(cpO, cpT, n);
                 cpO += n;
             }
             else {
                 n = strlen(defaultvalue);
                 if (cpO + n >= newuri + sizeof(newuri)) {
-                    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 
-                                 r->server, "insufficient space in "
+                    ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 
+                                 r, "insufficient space in "
                                  "expand_map_lookups, aborting");
                     return;
                 }
                 memcpy(cpO, defaultvalue, n);
                 cpO += n;
             }
@@ -2618,14 +2637,14 @@
         else {
             cpT = strstr(cpI, "${");
             if (cpT == NULL)
                 cpT = cpI+strlen(cpI);
             n = cpT-cpI;
             if (cpO + n >= newuri + sizeof(newuri)) {
-                ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 
-                             r->server, "insufficient space in "
+                ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, 
+                             r, "insufficient space in "
                              "expand_map_lookups, aborting");
                 return;
             }
             memcpy(cpO, cpI, n);
             cpO += n;
             cpI += n;
@@ -2669,13 +2688,13 @@
     entries = (rewritemap_entry *)rewritemaps->elts;
     for (i = 0; i < rewritemaps->nelts; i++) {
         s = &entries[i];
         if (strcmp(s->name, name) == 0) {
             if (s->type == MAPTYPE_TXT) {
                 if (stat(s->checkfile, &st) == -1) {
-                    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+                    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
                                  "mod_rewrite: can't access text RewriteMap "
                                  "file %s", s->checkfile);
                     rewritelog(r, 1, "can't open RewriteMap file, "
                                "see error log");
                     return NULL;
                 }
@@ -2704,13 +2723,13 @@
                     return value;
                 }
             }
             else if (s->type == MAPTYPE_DBM) {
 #ifndef NO_DBM_REWRITEMAP
                 if (stat(s->checkfile, &st) == -1) {
-                    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+                    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
                                  "mod_rewrite: can't access DBM RewriteMap "
                                  "file %s", s->checkfile);
                     rewritelog(r, 1, "can't open DBM RewriteMap file, "
                                "see error log");
                     return NULL;
                 }
@@ -2764,13 +2783,13 @@
                     rewritelog(r, 5, "map lookup FAILED: map=%s key=%s",
                                s->name, key);
                 }
             }
             else if (s->type == MAPTYPE_RND) {
                 if (stat(s->checkfile, &st) == -1) {
-                    ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+                    ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
                                  "mod_rewrite: can't access text RewriteMap "
                                  "file %s", s->checkfile);
                     rewritelog(r, 1, "can't open RewriteMap file, "
                                "see error log");
                     return NULL;
                 }
@@ -3210,13 +3229,13 @@
                                          REWRITELOCK_MODE)) < 0) {
         ap_log_error(APLOG_MARK, APLOG_ERR, s,
                      "mod_rewrite: Parent could not create RewriteLock "
                      "file %s", conf->rewritelockfile);
         exit(1);
     }
-#if !defined(__EMX__) && !defined(WIN32)
+#if !defined(OS2) && !defined(WIN32)
     /* make sure the childs have access to this file */
     if (geteuid() == 0 /* is superuser */)
         chown(conf->rewritelockfile, ap_user_id, -1 /* no gid change */);
 #endif
 
     return;
@@ -3389,13 +3408,13 @@
                           environ, NULL, &si, &pi)) {
             CloseHandle(pi.hProcess);
             CloseHandle(pi.hThread);
             child_pid = pi.dwProcessId;
         }
     }
-#elif defined(__EMX__)
+#elif defined(OS2)
     /* IBM OS/2 */
     execl(SHELL_PATH, SHELL_PATH, "/c", (char *)cmd, NULL);
 #else
     /* Standard Unix */
     execl(SHELL_PATH, SHELL_PATH, "-c", (char *)cmd, NULL);
 #endif
@@ -3563,13 +3582,14 @@
         result = r->protocol;
     }
     else if (strcasecmp(var, "SERVER_SOFTWARE") == 0) {
         result = ap_get_server_version();
     }
     else if (strcasecmp(var, "API_VERSION") == 0) { /* non-standard */
-        ap_snprintf(resultbuf, sizeof(resultbuf), "%d", MODULE_MAGIC_NUMBER);
+        ap_snprintf(resultbuf, sizeof(resultbuf), "%d:%d",
+		    MODULE_MAGIC_NUMBER_MAJOR, MODULE_MAGIC_NUMBER_MINOR);
         result = resultbuf;
     }
 
     /* underlaying Unix system stuff */
     else if (strcasecmp(var, "TIME_YEAR") == 0) {
         tc = time(NULL);
@@ -3715,12 +3735,13 @@
     hdrs = (table_entry *)hdrs_arr->elts;
     for (i = 0; i < hdrs_arr->nelts; ++i) {
         if (hdrs[i].key == NULL) {
             continue;
         }
         if (strcasecmp(hdrs[i].key, name) == 0) {
+	    ap_table_merge(r->notes, VARY_KEY_THIS, name);
             return hdrs[i].val;
         }
     }
     return NULL;
 }
 
@@ -4069,13 +4090,13 @@
     lseek(fd, 0, SEEK_SET);
     rc = _locking(fd, _LK_LOCK, 1);
     lseek(fd, 0, SEEK_END);
 #endif
 
     if (rc < 0) {
-        ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
                      "mod_rewrite: failed to lock file descriptor");
         exit(1);
     }
     return;
 }
 
@@ -4099,13 +4120,13 @@
     lseek(fd, 0, SEEK_SET);
     rc = _locking(fd, _LK_UNLCK, 1);
     lseek(fd, 0, SEEK_END);
 #endif
 
     if (rc < 0) {
-        ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+        ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
                      "mod_rewrite: failed to unlock file descriptor");
         exit(1);
     }
 }
 
 /*
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_rewrite.h apache_1.3.2/src/modules/standard/mod_rewrite.h
--- apache_1.3.1/src/modules/standard/mod_rewrite.h	1998-07-13 19:32:46.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_rewrite.h	1998-08-18 02:36:18.000000000 +0800
@@ -110,12 +110,19 @@
 #include "http_conf_globals.h"
 #include "http_request.h"
 #include "http_core.h"
 #include "http_log.h"
 #include "http_vhost.h"
 
+    /*
+     * The key in the r->notes table wherein we store our accumulated
+     * Vary values, and the one used for per-condition checks in a chain.
+     */
+#define VARY_KEY "rewrite-Vary"
+#define VARY_KEY_THIS "rewrite-Vary-this"
+
     /* The NDBM support:
      * We support only NDBM files.
      * But we have to stat the file for the mtime,
      * so we also need to know the file extension
      */
 #ifndef NO_DBM_REWRITEMAP
@@ -226,13 +233,13 @@
 #endif
 
 #ifndef LONG_STRING_LEN
 #define LONG_STRING_LEN 2048
 #endif
 
-#define MAX_ENV_FLAGS 5
+#define MAX_ENV_FLAGS 15
 
 #define MAX_NMATCH    10
 
 #define MAPFILE_PATTERN "^([^ \t]+)[ \t]+([^ \t]+).*$"
 #define MAPFILE_OUTPUT  "$1,$2"
 
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_so.c apache_1.3.2/src/modules/standard/mod_so.c
--- apache_1.3.1/src/modules/standard/mod_so.c	1998-05-06 23:18:02.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_so.c	1998-09-19 20:27:24.000000000 +0800
@@ -150,12 +150,16 @@
 {
     so_server_conf *soc;
 
     soc = (so_server_conf *)ap_pcalloc(p, sizeof(so_server_conf));
     soc->loaded_modules = ap_make_array(p, DYNAMIC_MODULE_LIMIT, 
                                      sizeof(moduleinfo));
+#ifndef NO_DLOPEN
+    ap_os_dso_init();
+#endif
+
     return (void *)soc;
 }
 
 #ifndef NO_DLOPEN
 
 /*
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_speling.c apache_1.3.2/src/modules/standard/mod_speling.c
--- apache_1.3.1/src/modules/standard/mod_speling.c	1998-07-09 01:47:18.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_speling.c	1998-09-19 20:16:38.000000000 +0800
@@ -65,13 +65,14 @@
  *
  * This module is transparent, and simple. It attempts to correct
  * misspellings of URLs that users might have entered, namely by checking
  * capitalizations. If it finds a match, it sends a redirect.
  *
  * 08-Aug-1997 <Martin.Kraemer@Mch.SNI.De>
- * o Upgraded module interface to apache_1.3a2-dev API (more NULL's in speling_module).
+ * o Upgraded module interface to apache_1.3a2-dev API (more NULL's in
+ *   speling_module).
  * o Integrated tcsh's "spelling correction" routine which allows one
  *   misspelling (character insertion/omission/typo/transposition).
  *   Rewrote it to ignore case as well. This ought to catch the majority
  *   of misspelled requests.
  * o Commented out the second pass where files' suffixes are stripped.
  *   Given the better hit rate of the first pass, this rather ugly
@@ -81,35 +82,70 @@
  *
  * Activate it with "CheckSpelling On"
  */
 
 MODULE_VAR_EXPORT module speling_module;
 
-/* We use the "unconventional" mod_userdir approach here. And heck,
- * here it's just one int!
+typedef struct {
+    int enabled;
+} spconfig;
+
+/*
+ * Create a configuration specific to this module for a server or directory
+ * location, and fill it with the default settings.
+ *
+ * The API says that in the absence of a merge function, the record for the
+ * closest ancestor is used exclusively.  That's what we want, so we don't
+ * bother to have such a function.
+ */
+
+static void *mkconfig(pool *p)
+{
+    spconfig *cfg = ap_pcalloc(p, sizeof(spconfig));
+
+    cfg->enabled = 0;
+    return cfg;
+}
+
+/*
+ * Respond to a callback to create configuration record for a server or
+ * vhost environment.
  */
+static void *create_mconfig_for_server(pool *p, server_rec *s)
+{
+    return mkconfig(p);
+}
 
-static void *create_speling_config(pool *dummy, server_rec *s)
+/*
+ * Respond to a callback to create a config record for a specific directory.
+ */
+static void *create_mconfig_for_directory(pool *p, char *dir)
 {
-    return (void *) 0;
+    return mkconfig(p);
 }
 
-static const char *set_speling(cmd_parms *cmd, void *dummy, int arg)
+/*
+ * Handler for the CheckSpelling directive, which is FLAG.
+ */
+static const char *set_speling(cmd_parms *cmd, void *mconfig, int arg)
 {
-    void *server_conf = cmd->server->module_config;
+    spconfig *cfg = (spconfig *) mconfig;
 
-    /* any non-NULL pointer means speling is enabled */
-    ap_set_module_config(server_conf, &speling_module, arg ? (void *) &speling_module : NULL);
+    cfg->enabled = arg;
     return NULL;
 }
 
+/*
+ * Define the directives specific to this module.  This structure is referenced
+ * later by the 'module' structure.
+ */
 static const command_rec speling_cmds[] =
 {
-    {"CheckSpelling", set_speling, NULL, RSRC_CONF, FLAG,
-     "whether or not to fix miscapitalized/misspelled requests"},
-    {NULL}
+    { "CheckSpelling", set_speling, NULL, OR_OPTIONS, FLAG,
+      "whether or not to fix miscapitalized/misspelled requests" },
+    { NULL }
 };
 
 typedef enum {
     SP_IDENTICAL = 0,
     SP_MISCAPITALIZED = 1,
     SP_TRANSPOSITION = 2,
@@ -153,101 +189,120 @@
  * NOTE that is still allows only _one_ real "typo",
  * it does NOT try to correct multiple errors.
  */
 
 static sp_reason spdist(const char *s, const char *t)
 {
-    for (; ap_tolower(*s) == ap_tolower(*t); t++, s++)
-        if (*t == '\0')
+    for (; ap_tolower(*s) == ap_tolower(*t); t++, s++) {
+        if (*t == '\0') {
             return SP_MISCAPITALIZED;   /* exact match (sans case) */
+	}
+    }
     if (*s) {
         if (*t) {
-            if (s[1] && t[1] && ap_tolower(*s) == ap_tolower(t[1]) &&
-              ap_tolower(*t) == ap_tolower(s[1]) && strcasecmp(s + 2, t + 2) == 0)
+            if (s[1] && t[1] && ap_tolower(*s) == ap_tolower(t[1])
+		&& ap_tolower(*t) == ap_tolower(s[1])
+		&& strcasecmp(s + 2, t + 2) == 0) {
                 return SP_TRANSPOSITION;        /* transposition */
-            if (strcasecmp(s + 1, t + 1) == 0)
+	    }
+            if (strcasecmp(s + 1, t + 1) == 0) {
                 return SP_SIMPLETYPO;   /* 1 char mismatch */
+	    }
         }
-        if (strcasecmp(s + 1, t) == 0)
+        if (strcasecmp(s + 1, t) == 0) {
             return SP_EXTRACHAR;        /* extra character */
+	}
     }
-    if (*t && strcasecmp(s, t + 1) == 0)
+    if (*t && strcasecmp(s, t + 1) == 0) {
         return SP_MISSINGCHAR;  /* missing character */
+    }
     return SP_VERYDIFFERENT;    /* distance too large to fix. */
 }
 
 static int sort_by_quality(const void *left, const void *rite)
 {
     return (int) (((misspelled_file *) left)->quality)
         - (int) (((misspelled_file *) rite)->quality);
 }
 
 static int check_speling(request_rec *r)
 {
-    void *server_conf = r->server->module_config;
+    spconfig *cfg;
     char *good, *bad, *postgood, *url;
     int filoc, dotloc, urlen, pglen;
     DIR *dirp;
     struct DIR_TYPE *dir_entry;
     array_header *candidates = NULL;
 
-    if (!ap_get_module_config(server_conf, &speling_module))
+    cfg = ap_get_module_config(r->per_dir_config, &speling_module);
+    if (!cfg->enabled) {
         return DECLINED;
+    }
 
     /* We only want to worry about GETs */
-    if (r->method_number != M_GET)
+    if (r->method_number != M_GET) {
         return DECLINED;
+    }
 
     /* We've already got a file of some kind or another */
-    if (r->proxyreq || (r->finfo.st_mode != 0))
+    if (r->proxyreq || (r->finfo.st_mode != 0)) {
         return DECLINED;
+    }
 
     /* This is a sub request - don't mess with it */
-    if (r->main)
+    if (r->main) {
         return DECLINED;
+    }
 
     /*
      * The request should end up looking like this:
      * r->uri: /correct-url/mispelling/more
      * r->filename: /correct-file/mispelling r->path_info: /more
      *
      * So we do this in steps. First break r->filename into two pieces
      */
 
     filoc = ap_rind(r->filename, '/');
-    /* Don't do anything if the request doesn't contain a slash, or requests "/" */
-    if (filoc == -1 || strcmp(r->uri, "/") == 0)
+    /*
+     * Don't do anything if the request doesn't contain a slash, or
+     * requests "/" 
+     */
+    if (filoc == -1 || strcmp(r->uri, "/") == 0) {
         return DECLINED;
+    }
 
     /* good = /correct-file */
     good = ap_pstrndup(r->pool, r->filename, filoc);
     /* bad = mispelling */
     bad = ap_pstrdup(r->pool, r->filename + filoc + 1);
     /* postgood = mispelling/more */
     postgood = ap_pstrcat(r->pool, bad, r->path_info, NULL);
 
     urlen = strlen(r->uri);
     pglen = strlen(postgood);
 
     /* Check to see if the URL pieces add up */
-    if (strcmp(postgood, r->uri + (urlen - pglen)))
+    if (strcmp(postgood, r->uri + (urlen - pglen))) {
         return DECLINED;
+    }
 
     /* url = /correct-url */
     url = ap_pstrndup(r->pool, r->uri, (urlen - pglen));
 
     /* Now open the directory and do ourselves a check... */
     dirp = ap_popendir(r->pool, good);
-    if (dirp == NULL)           /* Oops, not a directory... */
+    if (dirp == NULL) {          /* Oops, not a directory... */
         return DECLINED;
+    }
 
     candidates = ap_make_array(r->pool, 2, sizeof(misspelled_file));
 
     dotloc = ap_ind(bad, '.');
-    if (dotloc == -1)
+    if (dotloc == -1) {
         dotloc = strlen(bad);
+    }
 
     while ((dir_entry = readdir(dirp)) != NULL) {
         sp_reason q;
 
         /*
          * If we end up with a "fixed" URL which is identical to the
@@ -260,40 +315,47 @@
         }
         /*
          * miscapitalization errors are checked first (like, e.g., lower case
          * file, upper case request)
          */
         else if (strcasecmp(bad, dir_entry->d_name) == 0) {
-            misspelled_file *sp_new = (misspelled_file *) ap_push_array(candidates);
+            misspelled_file *sp_new;
+
+	    sp_new = (misspelled_file *) ap_push_array(candidates);
             sp_new->name = ap_pstrdup(r->pool, dir_entry->d_name);
             sp_new->quality = SP_MISCAPITALIZED;
         }
         /*
          * simple typing errors are checked next (like, e.g.,
          * missing/extra/transposed char)
          */
         else if ((q = spdist(bad, dir_entry->d_name)) != SP_VERYDIFFERENT) {
-            misspelled_file *sp_new = (misspelled_file *) ap_push_array(candidates);
+            misspelled_file *sp_new;
+
+	    sp_new = (misspelled_file *) ap_push_array(candidates);
             sp_new->name = ap_pstrdup(r->pool, dir_entry->d_name);
             sp_new->quality = q;
         }
-        /* The spdist() should have found the majority of the misspelled requests.
-         * it is of questionable use to continue looking for files with the same
-         * base name, but potentially of totally wrong type (index.html <-> index.db)
+        /*
+	 * The spdist() should have found the majority of the misspelled
+	 * requests.  It is of questionable use to continue looking for
+	 * files with the same base name, but potentially of totally wrong
+	 * type (index.html <-> index.db).
          * I would propose to not set the WANT_BASENAME_MATCH define.
          *      08-Aug-1997 <Martin.Kraemer@Mch.SNI.De>
          *
          * However, Alexei replied giving some reasons to add it anyway:
          * > Oh, by the way, I remembered why having the
          * > extension-stripping-and-matching stuff is a good idea:
          * >
-         * > If you're using MultiViews, and have a file named foobar.html, which you
-         * > refer to as "foobar", and someone tried to access "Foobar", mod_speling
-         * > won't find it, because it won't find anything matching that
-         * > spelling. With the extension-munging, it would locate "foobar.html". Not
-         * > perfect, but I ran into that problem when I first wrote the module.
+         * > If you're using MultiViews, and have a file named foobar.html,
+	 * > which you refer to as "foobar", and someone tried to access
+	 * > "Foobar", mod_speling won't find it, because it won't find
+	 * > anything matching that spelling. With the extension-munging,
+	 * > it would locate "foobar.html". Not perfect, but I ran into
+	 * > that problem when I first wrote the module.
          */
         else {
 #ifdef WANT_BASENAME_MATCH
             /*
              * Okay... we didn't find anything. Now we take out the hard-core
              * power tools. There are several cases here. Someone might have
@@ -303,18 +365,21 @@
              * figure we got us a match. This can result in wrong things if
              * there are files of different content types but the same prefix
              * (e.g. foo.gif and foo.html) This code will pick the first one
              * it finds. Better than a Not Found, though.
              */
             int entloc = ap_ind(dir_entry->d_name, '.');
-            if (entloc == -1)
+            if (entloc == -1) {
                 entloc = strlen(dir_entry->d_name);
+	    }
 
             if ((dotloc == entloc)
                 && !strncasecmp(bad, dir_entry->d_name, dotloc)) {
-                misspelled_file *sp_new = (misspelled_file *) ap_push_array(candidates);
+                misspelled_file *sp_new;
+
+		sp_new = (misspelled_file *) ap_push_array(candidates);
                 sp_new->name = ap_pstrdup(r->pool, dir_entry->d_name);
                 sp_new->quality = SP_VERYDIFFERENT;
             }
 #endif
         }
     }
@@ -332,29 +397,32 @@
         qsort((void *) candidates->elts, candidates->nelts,
               sizeof(misspelled_file), sort_by_quality);
 
         /*
          * Conditions for immediate redirection: 
          *     a) the first candidate was not found by stripping the suffix 
-         * AND b) there exists only one candidate OR the best match is not ambigous
+         * AND b) there exists only one candidate OR the best match is not
+	 *        ambiguous
          * then return a redirection right away.
          */
-        if (variant[0].quality != SP_VERYDIFFERENT &&
-            (candidates->nelts == 1 || variant[0].quality != variant[1].quality)) {
+        if (variant[0].quality != SP_VERYDIFFERENT
+	    && (candidates->nelts == 1
+		|| variant[0].quality != variant[1].quality)) {
 
             nuri = ap_pstrcat(r->pool, url, variant[0].name, r->path_info,
 			      r->parsed_uri.query ? "?" : "",
-			      r->parsed_uri.query ? r->parsed_uri.query : "", NULL);
+			      r->parsed_uri.query ? r->parsed_uri.query : "",
+			      NULL);
 
             ap_table_setn(r->headers_out, "Location",
-                      ap_construct_url(r->pool, nuri, r));
+			  ap_construct_url(r->pool, nuri, r));
 
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_INFO, r->server,
-                        ref ? "Fixed spelling: %s to %s from %s"
-                        : "Fixed spelling: %s to %s",
-                        r->uri, nuri, ref);
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_INFO, r,
+			 ref ? "Fixed spelling: %s to %s from %s"
+			     : "Fixed spelling: %s to %s",
+			 r->uri, nuri, ref);
 
             return HTTP_MOVED_PERMANENTLY;
         }
         /*
          * Otherwise, a "[300] Multiple Choices" list with the variants is
          * returned.
@@ -371,77 +439,90 @@
             else {
                 p = r->main->pool;
                 notes = r->main->notes;
             }
 
             /* Generate the response text. */
-            /* Since the text is expanded by repeated calls of
+            /*
+	     * Since the text is expanded by repeated calls of
              * t = pstrcat(p, t, ".."), we can avoid a little waste
              * of memory by adding the header AFTER building the list.
              * XXX: FIXME: find a way to build a string concatenation
              *             without repeatedly requesting new memory
              * XXX: FIXME: Limit the list to a maximum number of entries
              */
             t = "";
 
             for (i = 0; i < candidates->nelts; ++i) {
 
                 /* The format isn't very neat... */
                 t = ap_pstrcat(p, t, "<li><a href=\"", url,
-			       variant[i].name, r->path_info, "\">",
 			       variant[i].name, r->path_info,
 			       r->parsed_uri.query ? "?" : "",
 			       r->parsed_uri.query ? r->parsed_uri.query : "",
+			       "\">", variant[i].name, r->path_info,
+			       r->parsed_uri.query ? "?" : "",
+			       r->parsed_uri.query ? r->parsed_uri.query : "",
 			       "</a> (",
-                    sp_reason_str[(int) (variant[i].quality)], ")\n", NULL);
+			       sp_reason_str[(int) (variant[i].quality)],
+			       ")\n", NULL);
 
                 /*
                  * when we have printed the "close matches" and there are
                  * more "distant matches" (matched by stripping the suffix),
                  * then we insert an additional separator text to suggest
                  * that the user LOOK CLOSELY whether these are really the
                  * files she wanted.
                  */
                 if (i > 0 && i < candidates->nelts - 1
                     && variant[i].quality != SP_VERYDIFFERENT
                     && variant[i + 1].quality == SP_VERYDIFFERENT) {
-                    t = ap_pstrcat(p, t, "</ul>\nFurthermore, the following related documents were found:\n<ul>\n", NULL);
+                    t = ap_pstrcat(p, t, 
+				   "</ul>\nFurthermore, the following related "
+				   "documents were found:\n<ul>\n", NULL);
                 }
             }
             t = ap_pstrcat(p, "The document name you requested (<code>",
-                     r->uri, "</code>) could not be found on this server.\n"
-                        "However, we found documents with names similar to the one you requested.<p>"
-                        "Available documents:\n<ul>\n", t, "</ul>\n", NULL);
+			   r->uri,
+			   "</code>) could not be found on this server.\n"
+			   "However, we found documents with names similar "
+			   "to the one you requested.<p>"
+			   "Available documents:\n<ul>\n", t, "</ul>\n", NULL);
 
             /* If we know there was a referring page, add a note: */
-            if (ref != NULL)
-                t = ap_pstrcat(p, t, "Please consider informing the owner of the <a href=\"",
-                ref, "\">referring page</a> about the broken link.\n", NULL);
+            if (ref != NULL) {
+                t = ap_pstrcat(p, t,
+			       "Please consider informing the owner of the "
+			       "<a href=\"", ref, 
+			       "\">referring page</a> "
+			       "about the broken link.\n",
+			       NULL);
+	    }
 
             /* Pass our table to http_protocol.c (see mod_negotiation): */
             ap_table_setn(notes, "variant-list", t);
 
-            ap_log_error(APLOG_MARK, APLOG_NOERRNO | APLOG_INFO, r->server,
-                        ref ? "Spelling fix: %s: %d candidates from %s"
-                        : "Spelling fix: %s: %d candidates",
-                        r->uri, candidates->nelts, ref);
+            ap_log_rerror(APLOG_MARK, APLOG_NOERRNO | APLOG_INFO, r,
+			 ref ? "Spelling fix: %s: %d candidates from %s"
+			     : "Spelling fix: %s: %d candidates",
+			 r->uri, candidates->nelts, ref);
 
             return HTTP_MULTIPLE_CHOICES;
         }
     }
 
     return OK;
 }
 
 module MODULE_VAR_EXPORT speling_module =
 {
     STANDARD_MODULE_STUFF,
     NULL,                       /* initializer */
-    NULL,                       /* create per-dir config */
+    create_mconfig_for_directory,  /* create per-dir config */
     NULL,                       /* merge per-dir config */
-    create_speling_config,      /* server config */
+    create_mconfig_for_server,  /* server config */
     NULL,                       /* merge server config */
     speling_cmds,               /* command table */
     NULL,                       /* handlers */
     NULL,                       /* filename translation */
     NULL,                       /* check_user_id */
     NULL,                       /* check auth */
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_status.c apache_1.3.2/src/modules/standard/mod_status.c
--- apache_1.3.1/src/modules/standard/mod_status.c	1998-06-16 00:46:13.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_status.c	1998-08-12 18:23:46.000000000 +0800
@@ -88,33 +88,22 @@
  * 18.4.96  Added per child and per slot counters [Jim Jagielski]
  * 01.5.96  Table format, cleanup, even more spiffy data [Chuck Murcko/Jim J.]
  * 18.5.96  Adapted to use new rprintf() routine, incidentally fixing a missing
  *          piece in short reports [Ben Laurie]
  * 21.5.96  Additional Status codes (DNS and LOGGING only enabled if
  *          extended STATUS is enabled) [George Burgyan/Jim J.]
+ * 10.8.98  Allow for extended status info at runtime (no more STATUS)
+ *          [Jim J.]
  */
 
-/*
- * Module definition information - the part between the -START and -END
- * lines below is used by Configure. This could be stored in a separate
- * instead.
- *
- * MODULE-DEFINITION-START
- * Name: status_module
- * ConfigStart
- if [ "$RULE_STATUS" = "yes" ]; then
- CFLAGS="$CFLAGS -DSTATUS"
- fi
- * ConfigEnd
- * MODULE-DEFINITION-END
- */
-
+#define CORE_PRIVATE
 #include "httpd.h"
 #include "http_config.h"
 #include "http_core.h"
 #include "http_protocol.h"
+#include "http_conf_globals.h"	/* for ap_extended_status */
 #include "http_main.h"
 #include "util_script.h"
 #include <time.h>
 #include "scoreboard.h"
 #include "http_log.h"
 
@@ -139,15 +128,39 @@
 #ifndef DEFAULT_TIME_FORMAT 
 #define DEFAULT_TIME_FORMAT "%A, %d-%b-%Y %H:%M:%S %Z"
 #endif
 
 module MODULE_VAR_EXPORT status_module;
 
-#ifdef STATUS
-/* Format the number of bytes nicely */
+/*
+ *command-related code. This is here to prevent use of ExtendedStatus
+ * without status_module included.
+ */
+static const char *set_extended_status(cmd_parms *cmd, void *dummy, char *arg) 
+{
+    const char *err = ap_check_cmd_context(cmd, GLOBAL_ONLY);
+    if (err != NULL) {
+        return err;
+    }
+    if (!strcasecmp(arg, "off") || !strcmp(arg, "0")) {
+	ap_extended_status = 0;
+    }
+    else {
+	ap_extended_status = 1;
+    }
+    return NULL;
+}
 
+static const command_rec status_module_cmds[] =
+{
+    { "ExtendedStatus", set_extended_status, NULL, RSRC_CONF, TAKE1,
+      "\"On\" to enable extended status information, \"Off\" to disable" },
+    {NULL}
+};
+
+/* Format the number of bytes nicely */
 static void format_byte_out(request_rec *r, unsigned long bytes)
 {
     if (bytes < (5 * KBYTE))
 	ap_rprintf(r, "%d B", (int) bytes);
     else if (bytes < (MBYTE / 2))
 	ap_rprintf(r, "%.1f kB", (float) bytes / KBYTE);
@@ -164,14 +177,12 @@
     else if (kbytes < MBYTE)
 	ap_rprintf(r, "%.1f MB", (float) kbytes / KBYTE);
     else
 	ap_rprintf(r, "%.1f GB", (float) kbytes / MBYTE);
 }
 
-#endif
-
 static void show_time(request_rec *r, time_t tsecs)
 {
     long days, hrs, mins, secs;
 
     secs = tsecs % 60;
     tsecs /= 60;
@@ -219,37 +230,36 @@
     char *loc;
     time_t nowtime = time(NULL);
     time_t up_time;
     int i, res;
     int ready = 0;
     int busy = 0;
-#if defined(STATUS)
     unsigned long count = 0;
     unsigned long lres, bytes;
     unsigned long my_lres, my_bytes, conn_bytes;
     unsigned short conn_lres;
     unsigned long bcount = 0;
     unsigned long kbcount = 0;
     long req_time;
 #if defined(NEXT)
     float tick = HZ;
 #elif !defined(NO_TIMES)
     float tick = sysconf(_SC_CLK_TCK);
 #endif
-#endif /* STATUS */
     int short_report = 0;
     int no_table_report = 0;
     short_score score_record;
     parent_score ps_record;
     char stat_buffer[HARD_SERVER_LIMIT];
+    int pid_buffer[HARD_SERVER_LIMIT];
     clock_t tu, ts, tcu, tcs;
 
     tu = ts = tcu = tcs = 0;
 
     if (!ap_exists_scoreboard_image()) {
-	ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_NOERRNO|APLOG_ERR, r,
 		    "Server status unavailable in inetd mode");
 	return HTTP_INTERNAL_SERVER_ERROR;
     }
     r->allowed = (1 << M_GET);
     if (r->method_number != M_GET)
 	return DECLINED;
@@ -264,16 +274,18 @@
 	i = 0;
 	while (status_options[i].id != STAT_OPT_END) {
 	    if ((loc = strstr(r->args, status_options[i].form_data_str)) != NULL) {
 		switch (status_options[i].id) {
 		case STAT_OPT_REFRESH:
 		    if (*(loc + strlen(status_options[i].form_data_str)) == '=')
-			ap_table_set(r->headers_out, status_options[i].hdr_out_str,
-				  loc + strlen(status_options[i].hdr_out_str) + 1);
+			ap_table_set(r->headers_out,
+			      status_options[i].hdr_out_str,
+			      loc + strlen(status_options[i].hdr_out_str) + 1);
 		    else
-			ap_table_set(r->headers_out, status_options[i].hdr_out_str, "1");
+			ap_table_set(r->headers_out,
+			      status_options[i].hdr_out_str, "1");
 		    break;
 		case STAT_OPT_NOTABLE:
 		    no_table_report = 1;
 		    break;
 		case STAT_OPT_AUTO:
 		    r->content_type = "text/plain";
@@ -293,110 +305,118 @@
     ap_sync_scoreboard_image();
     for (i = 0; i < HARD_SERVER_LIMIT; ++i) {
 	score_record = ap_scoreboard_image->servers[i];
 	ps_record = ap_scoreboard_image->parent[i];
 	res = score_record.status;
 	stat_buffer[i] = status_flags[res];
+	pid_buffer[i] = (int) ps_record.pid;
 	if (res == SERVER_READY)
 	    ready++;
 	else if (res != SERVER_DEAD)
 	    busy++;
-#if defined(STATUS)
-	lres = score_record.access_count;
-	bytes = score_record.bytes_served;
-	if (lres != 0 || (res != SERVER_READY && res != SERVER_DEAD)) {
+	if (ap_extended_status) {
+	    lres = score_record.access_count;
+	    bytes = score_record.bytes_served;
+	    if (lres != 0 || (res != SERVER_READY && res != SERVER_DEAD)) {
 #ifndef NO_TIMES
-	    tu += score_record.times.tms_utime;
-	    ts += score_record.times.tms_stime;
-	    tcu += score_record.times.tms_cutime;
-	    tcs += score_record.times.tms_cstime;
+		tu += score_record.times.tms_utime;
+		ts += score_record.times.tms_stime;
+		tcu += score_record.times.tms_cutime;
+		tcs += score_record.times.tms_cstime;
 #endif /* NO_TIMES */
-	    count += lres;
-	    bcount += bytes;
-	    if (bcount >= KBYTE) {
-		kbcount += (bcount >> 10);
-		bcount = bcount & 0x3ff;
+		count += lres;
+		bcount += bytes;
+		if (bcount >= KBYTE) {
+		    kbcount += (bcount >> 10);
+		    bcount = bcount & 0x3ff;
+		}
 	    }
 	}
-#endif /* STATUS */
     }
 
     up_time = nowtime - ap_restart_time;
 
     ap_hard_timeout("send status info", r);
 
     if (!short_report) {
 	ap_rputs("<HTML><HEAD>\n<TITLE>Apache Status</TITLE>\n</HEAD><BODY>\n", r);
 	ap_rputs("<H1>Apache Server Status for ", r);
 	ap_rvputs(r, ap_get_server_name(r), "</H1>\n\n", NULL);
-	ap_rvputs(r, "Server Version: ", ap_get_server_version(), "<br>\n",
-	       NULL);
-	ap_rvputs(r, "Server Built: ", ap_get_server_built(), "<br>\n<hr>\n",
-	       NULL);
-	ap_rvputs(r, "Current Time: ", ap_ht_time(r->pool, nowtime, DEFAULT_TIME_FORMAT, 0), 
-               "<br>\n", NULL);
-	ap_rvputs(r, "Restart Time: ", ap_ht_time(r->pool, ap_restart_time, DEFAULT_TIME_FORMAT, 0), 
-	       "<br>\n", NULL);
+	ap_rvputs(r, "Server Version: ",
+	  ap_get_server_version(), "<br>\n", NULL);
+	ap_rvputs(r, "Server Built: ",
+	  ap_get_server_built(), "<br>\n<hr>\n", NULL);
+	ap_rvputs(r, "Current Time: ",
+	  ap_ht_time(r->pool, nowtime, DEFAULT_TIME_FORMAT, 0), "<br>\n", NULL);
+	ap_rvputs(r, "Restart Time: ",
+	  ap_ht_time(r->pool, ap_restart_time, DEFAULT_TIME_FORMAT, 0), 
+	  "<br>\n", NULL);
 	ap_rputs("Server uptime: ", r);
 	show_time(r, up_time);
 	ap_rputs("<br>\n", r);
     }
 
-#if defined(STATUS)
-    if (short_report) {
-	ap_rprintf(r, "Total Accesses: %lu\nTotal kBytes: %lu\n", count, kbcount);
+    if (ap_extended_status) {
+	if (short_report) {
+	    ap_rprintf(r, "Total Accesses: %lu\nTotal kBytes: %lu\n",
+		count, kbcount);
 
 #ifndef NO_TIMES
-	/* Allow for OS/2 not having CPU stats */
-	if (ts || tu || tcu || tcs)
-	    ap_rprintf(r, "CPULoad: %g\n", (tu + ts + tcu + tcs) / tick / up_time * 100.);
+	    /* Allow for OS/2 not having CPU stats */
+	    if (ts || tu || tcu || tcs)
+		ap_rprintf(r, "CPULoad: %g\n",
+		    (tu + ts + tcu + tcs) / tick / up_time * 100.);
 #endif
 
-	ap_rprintf(r, "Uptime: %ld\n", (long) (up_time));
-	if (up_time > 0)
-	    ap_rprintf(r, "ReqPerSec: %g\n", (float) count / (float) up_time);
-
-	if (up_time > 0)
-	    ap_rprintf(r, "BytesPerSec: %g\n", KBYTE * (float) kbcount / (float) up_time);
+	    ap_rprintf(r, "Uptime: %ld\n", (long) (up_time));
+	    if (up_time > 0)
+		ap_rprintf(r, "ReqPerSec: %g\n",
+		    (float) count / (float) up_time);
 
-	if (count > 0)
-	    ap_rprintf(r, "BytesPerReq: %g\n", KBYTE * (float) kbcount / (float) count);
-    }
-    else {			/* !short_report */
-	ap_rprintf(r, "Total accesses: %lu - Total Traffic: ", count);
-	format_kbyte_out(r, kbcount);
+	    if (up_time > 0)
+		ap_rprintf(r, "BytesPerSec: %g\n",
+		    KBYTE * (float) kbcount / (float) up_time);
+
+	    if (count > 0)
+		ap_rprintf(r, "BytesPerReq: %g\n",
+		    KBYTE * (float) kbcount / (float) count);
+	}
+	else {			/* !short_report */
+	    ap_rprintf(r, "Total accesses: %lu - Total Traffic: ", count);
+	    format_kbyte_out(r, kbcount);
 
 #ifndef NO_TIMES
-	/* Allow for OS/2 not having CPU stats */
-	ap_rputs("<br>\n", r);
-	ap_rprintf(r, "CPU Usage: u%g s%g cu%g cs%g",
-		tu / tick, ts / tick, tcu / tick, tcs / tick);
+	    /* Allow for OS/2 not having CPU stats */
+	    ap_rputs("<br>\n", r);
+	    ap_rprintf(r, "CPU Usage: u%g s%g cu%g cs%g",
+		    tu / tick, ts / tick, tcu / tick, tcs / tick);
 
-	if (ts || tu || tcu || tcs)
-	    ap_rprintf(r, " - %.3g%% CPU load", (tu + ts + tcu + tcs) / tick / up_time * 100.);
+	    if (ts || tu || tcu || tcs)
+		ap_rprintf(r, " - %.3g%% CPU load",
+		    (tu + ts + tcu + tcs) / tick / up_time * 100.);
 #endif
 
-	ap_rputs("<br>\n", r);
+	    ap_rputs("<br>\n", r);
 
-	if (up_time > 0)
-	    ap_rprintf(r, "%.3g requests/sec - ",
-		    (float) count / (float) up_time);
+	    if (up_time > 0)
+		ap_rprintf(r, "%.3g requests/sec - ",
+			(float) count / (float) up_time);
 
-	if (up_time > 0) {
-	    format_byte_out(r, KBYTE * (float) kbcount / (float) up_time);
-	    ap_rputs("/second - ", r);
-	}
+	    if (up_time > 0) {
+		format_byte_out(r, KBYTE * (float) kbcount / (float) up_time);
+		ap_rputs("/second - ", r);
+	    }
 
-	if (count > 0) {
-	    format_byte_out(r, KBYTE * (float) kbcount / (float) count);
-	    ap_rputs("/request", r);
-	}
+	    if (count > 0) {
+		format_byte_out(r, KBYTE * (float) kbcount / (float) count);
+		ap_rputs("/request", r);
+	    }
 
-	ap_rputs("<br>\n", r);
-    }				/* short_report */
-#endif /* STATUS */
+	    ap_rputs("<br>\n", r);
+	}				/* short_report */
+    }					/* ap_extended_status */
 
     if (!short_report)
 	ap_rprintf(r, "\n%d requests currently being processed, %d idle servers\n"
 		,busy, ready);
     else
 	ap_rprintf(r, "BusyServers: %d\nIdleServers: %d\n", busy, ready);
@@ -425,200 +445,224 @@
 	ap_rputs("\"<B><code>W</code></B>\" Sending Reply, \n", r);
 	ap_rputs("\"<B><code>K</code></B>\" Keepalive (read), \n", r);
 	ap_rputs("\"<B><code>D</code></B>\" DNS Lookup,<BR>\n", r);
 	ap_rputs("\"<B><code>L</code></B>\" Logging, \n", r);
 	ap_rputs("\"<B><code>G</code></B>\" Gracefully finishing, \n", r);
 	ap_rputs("\"<B><code>.</code></B>\" Open slot with no current process<P>\n", r);
+	ap_rputs("<P>\n", r);
+	if (!ap_extended_status) {
+	    int j = 0;
+	    ap_rputs("PID Key: <br>\n", r);
+	    ap_rputs("<PRE>\n", r);
+	    for (i = 0; i < HARD_SERVER_LIMIT; ++i) {
+		if (stat_buffer[i] != '.') {
+		    ap_rprintf(r, "   %d in state: %c ", pid_buffer[i],
+		     stat_buffer[i]);
+		    if (++j >= 3) {
+		    	ap_rputs("\n", r);
+			j = 0;
+		    } else
+		    	ap_rputs(",", r);
+		}
+	    }
+	    ap_rputs("\n", r);
+	    ap_rputs("</PRE>\n", r);
+	}
     }
 
-#if defined(STATUS)
-    if (!short_report) {
-	if (no_table_report)
-	    ap_rputs("<p><hr><h2>Server Details</h2>\n\n", r);
-	else
+    if (ap_extended_status) {
+	if (!short_report) {
+	    if (no_table_report)
+		ap_rputs("<p><hr><h2>Server Details</h2>\n\n", r);
+	    else
 #ifdef NO_TIMES
-	    /* Allow for OS/2 not having CPU stats */
-	    ap_rputs("<p>\n\n<table border=0><tr><th>Srv<th>PID<th>Acc<th>M\n<th>SS<th>Req<th>Conn<th>Child<th>Slot<th>Host<th>VHost<th>Request</tr>\n\n", r);
+		/* Allow for OS/2 not having CPU stats */
+		ap_rputs("<p>\n\n<table border=0><tr><th>Srv<th>PID<th>Acc<th>M\n<th>SS<th>Req<th>Conn<th>Child<th>Slot<th>Client<th>VHost<th>Request</tr>\n\n", r);
 #else
-	    ap_rputs("<p>\n\n<table border=0><tr><th>Srv<th>PID<th>Acc<th>M<th>CPU\n<th>SS<th>Req<th>Conn<th>Child<th>Slot<th>Host<th>VHost<th>Request</tr>\n\n", r);
+		ap_rputs("<p>\n\n<table border=0><tr><th>Srv<th>PID<th>Acc<th>M<th>CPU\n<th>SS<th>Req<th>Conn<th>Child<th>Slot<th>Client<th>VHost<th>Request</tr>\n\n", r);
 #endif
-    }
+	}
 
-    for (i = 0; i < HARD_SERVER_LIMIT; ++i) {
-	score_record = ap_scoreboard_image->servers[i];
-	ps_record = ap_scoreboard_image->parent[i];
+	for (i = 0; i < HARD_SERVER_LIMIT; ++i) {
+	    score_record = ap_scoreboard_image->servers[i];
+	    ps_record = ap_scoreboard_image->parent[i];
 
 #if defined(NO_GETTIMEOFDAY)
 #ifndef NO_TIMES
-	if (score_record.start_time == (clock_t) 0)
+	    if (score_record.start_time == (clock_t) 0)
 #endif /* NO_TIMES */
-	    req_time = 0L;
+		req_time = 0L;
 #ifndef NO_TIMES
-	else {
-	    req_time = score_record.stop_time - score_record.start_time;
-	    req_time = (req_time * 1000) / (int) tick;
-	}
+	    else {
+		req_time = score_record.stop_time - score_record.start_time;
+		req_time = (req_time * 1000) / (int) tick;
+	    }
 #endif /* NO_TIMES */
 #else
-	if (score_record.start_time.tv_sec == 0L &&
-	    score_record.start_time.tv_usec == 0L)
-	    req_time = 0L;
-	else
-	    req_time =
-		((score_record.stop_time.tv_sec - score_record.start_time.tv_sec) * 1000) +
-		((score_record.stop_time.tv_usec - score_record.start_time.tv_usec) / 1000);
-#endif
-	if (req_time < 0L)
-	    req_time = 0L;
-
-	lres = score_record.access_count;
-	my_lres = score_record.my_access_count;
-	conn_lres = score_record.conn_count;
-	bytes = score_record.bytes_served;
-	my_bytes = score_record.my_bytes_served;
-	conn_bytes = score_record.conn_bytes;
-	if (lres != 0 || (score_record.status != SERVER_READY
-			  && score_record.status != SERVER_DEAD)) {
-	    if (!short_report) {
-		if (no_table_report) {
-		    if (score_record.status == SERVER_DEAD)
-			ap_rprintf(r, "<b>Server %d</b> (-): %d|%lu|%lu [",
-				i, (int) conn_lres, my_lres, lres);
-		    else
-			ap_rprintf(r, "<b>Server %d</b> (%d): %d|%lu|%lu [",
-				i, (int) ps_record.pid, (int) conn_lres, my_lres, lres);
-
-		    switch (score_record.status) {
-		    case SERVER_READY:
-			ap_rputs("Ready", r);
-			break;
-		    case SERVER_STARTING:
-			ap_rputs("Starting", r);
-			break;
-		    case SERVER_BUSY_READ:
-			ap_rputs("<b>Read</b>", r);
-			break;
-		    case SERVER_BUSY_WRITE:
-			ap_rputs("<b>Write</b>", r);
-			break;
-		    case SERVER_BUSY_KEEPALIVE:
-			ap_rputs("<b>Keepalive</b>", r);
-			break;
-		    case SERVER_BUSY_LOG:
-			ap_rputs("<b>Logging</b>", r);
-			break;
-		    case SERVER_BUSY_DNS:
-			ap_rputs("<b>DNS lookup</b>", r);
-			break;
-		    case SERVER_DEAD:
-			ap_rputs("Dead", r);
-			break;
-		    case SERVER_GRACEFUL:
-			ap_rputs("Graceful", r);
-			break;
-		    default:
-			ap_rputs("?STATE?", r);
-			break;
-		    }
+	    if (score_record.start_time.tv_sec == 0L &&
+		score_record.start_time.tv_usec == 0L)
+		req_time = 0L;
+	    else
+		req_time =
+		    ((score_record.stop_time.tv_sec - score_record.start_time.tv_sec) * 1000) +
+		    ((score_record.stop_time.tv_usec - score_record.start_time.tv_usec) / 1000);
+#endif
+	    if (req_time < 0L)
+		req_time = 0L;
+
+	    lres = score_record.access_count;
+	    my_lres = score_record.my_access_count;
+	    conn_lres = score_record.conn_count;
+	    bytes = score_record.bytes_served;
+	    my_bytes = score_record.my_bytes_served;
+	    conn_bytes = score_record.conn_bytes;
+	    if (lres != 0 || (score_record.status != SERVER_READY
+			      && score_record.status != SERVER_DEAD)) {
+		if (!short_report) {
+		    if (no_table_report) {
+			if (score_record.status == SERVER_DEAD)
+			    ap_rprintf(r, "<b>Server %d</b> (-): %d|%lu|%lu [",
+				    i, (int) conn_lres, my_lres, lres);
+			else
+			    ap_rprintf(r, "<b>Server %d</b> (%d): %d|%lu|%lu [",
+				    i, (int) ps_record.pid, (int) conn_lres, my_lres, lres);
+
+			switch (score_record.status) {
+			case SERVER_READY:
+			    ap_rputs("Ready", r);
+			    break;
+			case SERVER_STARTING:
+			    ap_rputs("Starting", r);
+			    break;
+			case SERVER_BUSY_READ:
+			    ap_rputs("<b>Read</b>", r);
+			    break;
+			case SERVER_BUSY_WRITE:
+			    ap_rputs("<b>Write</b>", r);
+			    break;
+			case SERVER_BUSY_KEEPALIVE:
+			    ap_rputs("<b>Keepalive</b>", r);
+			    break;
+			case SERVER_BUSY_LOG:
+			    ap_rputs("<b>Logging</b>", r);
+			    break;
+			case SERVER_BUSY_DNS:
+			    ap_rputs("<b>DNS lookup</b>", r);
+			    break;
+			case SERVER_DEAD:
+			    ap_rputs("Dead", r);
+			    break;
+			case SERVER_GRACEFUL:
+			    ap_rputs("Graceful", r);
+			    break;
+			default:
+			    ap_rputs("?STATE?", r);
+			    break;
+			}
 #ifdef NO_TIMES
-		    /* Allow for OS/2 not having CPU stats */
-		    ap_rprintf(r, "]\n %.0f %ld (",
+			/* Allow for OS/2 not having CPU stats */
+			ap_rprintf(r, "]\n %.0f %ld (",
 #else
 
-		    ap_rprintf(r, "] u%g s%g cu%g cs%g\n %.0f %ld (",
+			ap_rprintf(r, "] u%g s%g cu%g cs%g\n %.0f %ld (",
 			    score_record.times.tms_utime / tick,
 			    score_record.times.tms_stime / tick,
 			    score_record.times.tms_cutime / tick,
 			    score_record.times.tms_cstime / tick,
 #endif
 #ifdef OPTIMIZE_TIMEOUTS
 			    difftime(nowtime, ps_record.last_rtime),
 #else
 			    difftime(nowtime, score_record.last_used),
 #endif
 			    (long) req_time);
-		    format_byte_out(r, conn_bytes);
-		    ap_rputs("|", r);
-		    format_byte_out(r, my_bytes);
-		    ap_rputs("|", r);
-		    format_byte_out(r, bytes);
-		    ap_rputs(")\n", r);
-		    ap_rprintf(r, " <i>%s {%s}</i><br>\n\n",
-			    score_record.client,
-			    ap_escape_html(r->pool, score_record.request));
-		}
-		else {		/* !no_table_report */
-		    if (score_record.status == SERVER_DEAD)
-			ap_rprintf(r, "<tr><td><b>%d</b><td>-<td>%d/%lu/%lu",
-				i, (int) conn_lres, my_lres, lres);
-		    else
-			ap_rprintf(r, "<tr><td><b>%d</b><td>%d<td>%d/%lu/%lu",
-				i, (int) ps_record.pid, (int) conn_lres, my_lres, lres);
-
-		    switch (score_record.status) {
-		    case SERVER_READY:
-			ap_rputs("<td>_", r);
-			break;
-		    case SERVER_STARTING:
-			ap_rputs("<td><b>S</b>", r);
-			break;
-		    case SERVER_BUSY_READ:
-			ap_rputs("<td><b>R</b>", r);
-			break;
-		    case SERVER_BUSY_WRITE:
-			ap_rputs("<td><b>W</b>", r);
-			break;
-		    case SERVER_BUSY_KEEPALIVE:
-			ap_rputs("<td><b>K</b>", r);
-			break;
-		    case SERVER_BUSY_LOG:
-			ap_rputs("<td><b>L</b>", r);
-			break;
-		    case SERVER_BUSY_DNS:
-			ap_rputs("<td><b>D</b>", r);
-			break;
-		    case SERVER_DEAD:
-			ap_rputs("<td>.", r);
-			break;
-		    case SERVER_GRACEFUL:
-			ap_rputs("<td>G", r);
-			break;
-		    default:
-			ap_rputs("<td>?", r);
-			break;
+			format_byte_out(r, conn_bytes);
+			ap_rputs("|", r);
+			format_byte_out(r, my_bytes);
+			ap_rputs("|", r);
+			format_byte_out(r, bytes);
+			ap_rputs(")\n", r);
+			ap_rprintf(r, " <i>%s {%s}</i><br>\n\n",
+				score_record.client,
+				ap_escape_html(r->pool, score_record.request));
 		    }
+		    else {		/* !no_table_report */
+			if (score_record.status == SERVER_DEAD)
+			    ap_rprintf(r, "<tr><td><b>%d</b><td>-<td>%d/%lu/%lu",
+				    i, (int) conn_lres, my_lres, lres);
+			else
+			    ap_rprintf(r, "<tr><td><b>%d</b><td>%d<td>%d/%lu/%lu",
+				    i, (int) ps_record.pid, (int) conn_lres, my_lres, lres);
+
+			switch (score_record.status) {
+			case SERVER_READY:
+			    ap_rputs("<td>_", r);
+			    break;
+			case SERVER_STARTING:
+			    ap_rputs("<td><b>S</b>", r);
+			    break;
+			case SERVER_BUSY_READ:
+			    ap_rputs("<td><b>R</b>", r);
+			    break;
+			case SERVER_BUSY_WRITE:
+			    ap_rputs("<td><b>W</b>", r);
+			    break;
+			case SERVER_BUSY_KEEPALIVE:
+			    ap_rputs("<td><b>K</b>", r);
+			    break;
+			case SERVER_BUSY_LOG:
+			    ap_rputs("<td><b>L</b>", r);
+			    break;
+			case SERVER_BUSY_DNS:
+			    ap_rputs("<td><b>D</b>", r);
+			    break;
+			case SERVER_DEAD:
+			    ap_rputs("<td>.", r);
+			    break;
+			case SERVER_GRACEFUL:
+			    ap_rputs("<td>G", r);
+			    break;
+			default:
+			    ap_rputs("<td>?", r);
+			    break;
+			}
 #ifdef NO_TIMES
-		    /* Allow for OS/2 not having CPU stats */
-		    ap_rprintf(r, "\n<td>%.0f<td>%ld",
+			/* Allow for OS/2 not having CPU stats */
+			ap_rprintf(r, "\n<td>%.0f<td>%ld",
 #else
-		    ap_rprintf(r, "\n<td>%.2f<td>%.0f<td>%ld",
+			ap_rprintf(r, "\n<td>%.2f<td>%.0f<td>%ld",
 			    (score_record.times.tms_utime +
 			     score_record.times.tms_stime +
 			     score_record.times.tms_cutime +
 			     score_record.times.tms_cstime) / tick,
 #endif
 #ifdef OPTIMIZE_TIMEOUTS
 			    difftime(nowtime, ps_record.last_rtime),
 #else
 			    difftime(nowtime, score_record.last_used),
 #endif
 			    (long) req_time);
-		    ap_rprintf(r, "<td>%-1.1f<td>%-2.2f<td>%-2.2f\n",
-		       (float) conn_bytes / KBYTE, (float) my_bytes / MBYTE,
+			ap_rprintf(r, "<td>%-1.1f<td>%-2.2f<td>%-2.2f\n",
+			   (float) conn_bytes / KBYTE, (float) my_bytes / MBYTE,
 			    (float) bytes / MBYTE);
-		    ap_rprintf(r, "<td>%s<td nowrap>%s<td nowrap>%s</tr>\n\n",
-			    score_record.client, score_record.vhost,
-			    ap_escape_html(r->pool, score_record.request));
-		}		/* no_table_report */
-	    }			/* !short_report */
-	}			/* if (<active child>) */
-    }				/* for () */
-
-    if (!(short_report || no_table_report)) {
-#ifdef __EMX__
-	ap_rputs("</table>\n \
+			if (score_record.status == SERVER_BUSY_READ)
+			    ap_rprintf(r,
+			     "<td>?<td nowrap>?<td nowrap>..reading.. </tr>\n\n");
+			else
+			    ap_rprintf(r,
+			     "<td>%s<td nowrap>%s<td nowrap>%s</tr>\n\n",
+			     score_record.client, score_record.vhost,
+			     ap_escape_html(r->pool, score_record.request));
+		    }		/* no_table_report */
+		}			/* !short_report */
+	    }			/* if (<active child>) */
+	}				/* for () */
+
+	if (!(short_report || no_table_report)) {
+#ifdef NO_TIMES
+	    ap_rputs("</table>\n \
 <hr> \
 <table>\n \
 <tr><th>Srv<td>Server number\n \
 <tr><th>PID<td>OS process ID\n \
 <tr><th>Acc<td>Number of accesses this connection / this child / this slot\n \
 <tr><th>M<td>Mode of operation\n \
@@ -626,13 +670,13 @@
 <tr><th>Req<td>Milliseconds required to process most recent request\n \
 <tr><th>Conn<td>Kilobytes transferred this connection\n \
 <tr><th>Child<td>Megabytes transferred this child\n \
 <tr><th>Slot<td>Total megabytes transferred this slot\n \
 </table>\n", r);
 #else
-	ap_rputs("</table>\n \
+	    ap_rputs("</table>\n \
 <hr> \
 <table>\n \
 <tr><th>Srv<td>Server number\n \
 <tr><th>PID<td>OS process ID\n \
 <tr><th>Acc<td>Number of accesses this connection / this child / this slot\n \
 <tr><th>M<td>Mode of operation\n \
@@ -641,22 +685,20 @@
 <tr><th>Req<td>Milliseconds required to process most recent request\n \
 <tr><th>Conn<td>Kilobytes transferred this connection\n \
 <tr><th>Child<td>Megabytes transferred this child\n \
 <tr><th>Slot<td>Total megabytes transferred this slot\n \
 </table>\n", r);
 #endif
-    }
+	}
 
-#else /* !defined(STATUS) */
+    } else {
 
-    ap_rputs("<hr>To obtain a full report with current status information and", r);
-    ap_rputs(" DNS and LOGGING status codes \n", r);
-    ap_rputs("you need to recompile Apache after adding the line <pre>", r);
-    ap_rputs("Rule STATUS=yes</pre>into the file <code>Configuration</code>\n", r);
+    ap_rputs("<hr>To obtain a full report with current status information ", r);
+    ap_rputs("you need to use the <code>ExtendedStatus On</code> directive. \n", r);
 
-#endif /* STATUS */
+    }
 
     if (!short_report) {
 	ap_rputs(ap_psignature("<HR>\n",r), r);
 	ap_rputs("</BODY></HTML>\n", r);
     }
 
@@ -690,13 +732,13 @@
     STANDARD_MODULE_STUFF,
     status_init,		/* initializer */
     NULL,			/* dir config creater */
     NULL,			/* dir merger --- default is to override */
     NULL,			/* server config */
     NULL,			/* merge server config */
-    NULL,			/* command table */
+    status_module_cmds,		/* command table */
     status_handlers,		/* handlers */
     NULL,			/* filename translation */
     NULL,			/* check_user_id */
     NULL,			/* check auth */
     NULL,			/* check access */
     NULL,			/* type_checker */
diff -BEr -U 6 apache_1.3.1/src/modules/standard/mod_userdir.c apache_1.3.2/src/modules/standard/mod_userdir.c
--- apache_1.3.1/src/modules/standard/mod_userdir.c	1998-04-14 02:05:16.000000000 +0800
+++ apache_1.3.2/src/modules/standard/mod_userdir.c	1998-08-03 17:15:15.000000000 +0800
@@ -293,13 +293,13 @@
 #ifdef WIN32
             /* Need to figure out home dirs on NT */
             return DECLINED;
 #else                           /* WIN32 */
             struct passwd *pw;
             if ((pw = getpwnam(w))) {
-#ifdef __EMX__
+#ifdef OS2
                 /* Need to manually add user name for OS/2 */
                 filename = ap_pstrcat(r->pool, pw->pw_dir, w, "/", userdir, NULL);
 #else
                 filename = ap_pstrcat(r->pool, pw->pw_dir, "/", userdir, NULL);
 #endif
             }
diff -BEr -U 6 apache_1.3.1/src/os/bs2000/bs2login.c apache_1.3.2/src/os/bs2000/bs2login.c
--- apache_1.3.1/src/os/bs2000/bs2login.c	1998-07-09 01:47:24.000000000 +0800
+++ apache_1.3.2/src/os/bs2000/bs2login.c	1998-09-18 04:23:46.000000000 +0800
@@ -57,132 +57,56 @@
 
 #ifdef _OSD_POSIX
 #include "httpd.h"
 #include "http_config.h"
 #include "http_log.h"
 
-static const char *bs2000_authfile = NULL;
+static const char *bs2000_account = NULL;
 
 
-/* This routine is called by http_core for the BS2000AuthFile directive */
-/* It stores the file name (after a quick check for validity) for later use */
-const char *os_set_authfile(pool *p, const char *name)
+/* This routine is called by http_core for the BS2000Account directive */
+/* It stores the account name for later use */
+const char *os_set_account(pool *p, const char *account)
 {
-    struct stat stbuf;
-    char *filename;
+    if (bs2000_account != NULL && strcasecmp(bs2000_account, account) != 0)
+        return "BS2000Account: can be defined only once.";
 
-    filename = ap_server_root_relative(p, name);
-
-    /* auth file must exist */
-    if (stat(filename, &stbuf) != 0) {
-	return ap_pstrcat(p, "Unable to access bs2000 auth file ",
-		       filename, NULL);
-	exit(APEXIT_CHILDFATAL);
-    }
-
-    /* auth file must be owned by root, and not readable/writable by everyone else */
-    if (stbuf.st_uid != 0) {
-	return ap_pstrcat(p, "BS2000 auth file ", filename,
-		       " is not owned by SYSROOT - "
-		       "change owner!", NULL);
-    }
-
-    if (stbuf.st_mode & (S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH)) {
-	return ap_pstrcat(p, "BS2000 auth file ", filename,
-		       " is readable/writable by others - "
-		       "check permissions!", NULL);
-    }
-
-    bs2000_authfile = filename;
+    bs2000_account = ap_pstrdup(p, account);
     return NULL;
 }
 
 int os_init_job_environment(server_rec *server, const char *user_name)
 {
-    _checkuser_struct       chk_usr;
     _rini_struct            inittask; 
-    struct {
-	char username[8+1];     /* Length of a user name including \0 */
-	char password[8+1];     /* Length of a password including \0 */
-	char account [8+1];     /* Length of a account number including \0 */
-	char exp_date[10+1];    /* Length of a date including \0 */
-	char exp_pass[10+1];    /* Length of a date including \0 */
-	char processor[8+1];
-    } lcl_data;
-    char *cp;
-    FILE *pwfile;
-    struct stat stbuf;
-
-    memset (&lcl_data, '\0', sizeof lcl_data);
-
-    /* BS2000 requires the user name to be in upper case for authentication */
-    ap_snprintf(lcl_data.username, sizeof lcl_data.username,
-		"%s", user_name);
-    for (cp = lcl_data.username; *cp; ++cp) {
-	*cp = ap_toupper(*cp);
-    }
 
-    if (bs2000_authfile == NULL) {
+    /* We can be sure that no change to uid==0 is possible because of
+     * the checks in http_core.c:set_user()
+     */
+
+    /* An Account is required for _rini() */
+    if (bs2000_account == NULL)
+    {
 	ap_log_error(APLOG_MARK, APLOG_ALERT|APLOG_NOERRNO, server,
-		     "Use the 'BS2000AuthFile <passwdfile>' directive to specify "
-		     "an authorization file for User %s",
+		     "No BS2000Account configured - cannot switch to User %S",
 		     user_name);
 	exit(APEXIT_CHILDFATAL);
     }
 
-    if ((pwfile = fopen(bs2000_authfile, "r")) == NULL) {
-	ap_log_error(APLOG_MARK, APLOG_ALERT, server,
-		     "Unable to open bs2000 auth file %s for User %s",
-		     bs2000_authfile, user_name);
-	exit(APEXIT_CHILDFATAL);
-    }
+    inittask.username       = user_name;
+    inittask.account        = bs2000_account;
+    inittask.processor_name = "        ";
 
-    if (fgets(lcl_data.password, sizeof lcl_data.password, pwfile) == NULL
-	|| strlen(lcl_data.password) == 0) {
-	ap_log_error(APLOG_MARK, APLOG_ALERT|APLOG_NOERRNO, server,
-		     "Unable ro read BS2000 auth file %s",
-		     bs2000_authfile);
-	exit(APEXIT_CHILDFATAL);
-    }
-
-    fclose(pwfile);
-
-    chk_usr.username      = lcl_data.username;
-    chk_usr.password      = lcl_data.password;
-    chk_usr.account       = lcl_data.account; /* Account and Expiration go here*/
-    chk_usr.logon_expdate = lcl_data.exp_date;
-    chk_usr.pw_expdate    = lcl_data.exp_pass;
-
-    /* Now perform validity check of user and password, filling in account */
-    if(_checkuser(&chk_usr) != 0) {
-	ap_log_error(APLOG_MARK, APLOG_ALERT, server,
-		     "_checkuser: BS2000 auth failed for user %s", chk_usr.username);
-	exit(APEXIT_CHILDFATAL);
-    }
-
-    inittask.username = chk_usr.username;
-    inittask.account  = chk_usr.account;
-    inittask.processor_name = strncpy(lcl_data.processor,
-				      "        ",
-				      sizeof lcl_data.processor);
-
-    /* And switch to the new logon user (setuid() and setgid() are done later) */
+    /* Switch to the new logon user (setuid() and setgid() are done later) */
+    /* Only the super use can switch identities. */
     if (_rini(&inittask) != 0) {
 	ap_log_error(APLOG_MARK, APLOG_ALERT, server,
-		     "_rini: BS2000 auth failed for user %s",
-		     inittask.username);
+		     "_rini: BS2000 auth failed for user \"%s\" acct \"%s\"",
+		     inittask.username, inittask.account);
 	exit(APEXIT_CHILDFATAL);
     }
 
-    /*ap_log_error(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, server,
-		     "BS2000 logon for user %s account=%s completed, pid=%d.",
-		     inittask.username, inittask.account, getpid());*/
-
-    /* Don't leave the password on the stack */
-    memset (&lcl_data, '\0', sizeof lcl_data);
-
     return 0;
 }
 
 #else /* _OSD_POSIX */
 void bs2login_is_not_here()
 {
diff -BEr -U 6 apache_1.3.1/src/os/bs2000/os.c apache_1.3.2/src/os/bs2000/os.c
--- apache_1.3.1/src/os/bs2000/os.c	1998-05-08 17:51:54.000000000 +0800
+++ apache_1.3.2/src/os/bs2000/os.c	1998-09-15 00:24:51.000000000 +0800
@@ -58,41 +58,46 @@
 /*
  * This file will include OS specific functions which are not inlineable.
  * Any inlineable functions should be defined in os-inline.c instead.
  */
 
 #include "httpd.h"
+#include "http_core.h"
 #include "os.h"
 
 /* Check the Content-Type to decide if conversion is needed */
 int ap_checkconv(struct request_rec *r)
 {
     int convert_to_ascii;
+    const char *type;
 
     /* To make serving of "raw ASCII text" files easy (they serve faster 
      * since they don't have to be converted from EBCDIC), a new
      * "magic" type prefix was invented: text/x-ascii-{plain,html,...}
      * If we detect one of these content types here, we simply correct
      * the type to the real text/{plain,html,...} type. Otherwise, we
      * set a flag that translation is required later on.
      */
 
+    type = (r->content_type == NULL) ? ap_default_type(r) : r->content_type;
+
     /* If no content type is set then treat it as (ebcdic) text/plain */
-    convert_to_ascii = (r->content_type == NULL);
+    convert_to_ascii = (type == NULL);
 
     /* Conversion is applied to text/ files only, if ever. */
-    if (r->content_type &&
-	(strncmp(r->content_type, "text/", 5) == 0
-	|| strncmp(r->content_type, "message/", 8) == 0)) {
-        if (strncmp(r->content_type, ASCIITEXT_MAGIC_TYPE_PREFIX, 
-        sizeof(ASCIITEXT_MAGIC_TYPE_PREFIX)-1) == 0)
-        r->content_type = ap_pstrcat(r->pool, "text/",
-        r->content_type+sizeof(ASCIITEXT_MAGIC_TYPE_PREFIX)-1, NULL);
+    if (type && (strncasecmp(type, "text/", 5) == 0 ||
+		 strncasecmp(type, "message/", 8) == 0)) {
+	if (strncasecmp(type, ASCIITEXT_MAGIC_TYPE_PREFIX,
+			sizeof(ASCIITEXT_MAGIC_TYPE_PREFIX)-1) == 0)
+	    r->content_type = ap_pstrcat(r->pool, "text/",
+					 type+sizeof(ASCIITEXT_MAGIC_TYPE_PREFIX)-1,
+					 NULL);
         else
-        /* translate EBCDIC to ASCII */
-        convert_to_ascii = 1;
+	    /* translate EBCDIC to ASCII */
+	    convert_to_ascii = 1;
     }
+    /* Enable conversion if it's a text document */
     ap_bsetflag(r->connection->client, B_EBCDIC2ASCII, convert_to_ascii);
 
     return convert_to_ascii;
 }
 
Only in apache_1.3.1/src/os: emx
Only in apache_1.3.2/src/os: os2
diff -BEr -U 6 apache_1.3.1/src/os/unix/Makefile.tmpl apache_1.3.2/src/os/unix/Makefile.tmpl
--- apache_1.3.1/src/os/unix/Makefile.tmpl	1998-07-13 19:32:49.000000000 +0800
+++ apache_1.3.2/src/os/unix/Makefile.tmpl	1998-09-07 14:59:35.000000000 +0800
@@ -37,11 +37,11 @@
 
 $(OBJS): Makefile
 
 # DO NOT REMOVE
 os-aix-dso.o: os-aix-dso.c
 os-inline.o: os-inline.c $(INCDIR)/ap_config.h \
+ $(INCDIR)/ap_mmn.h $(INCDIR)/ap_config_auto.h \
+ $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h
+os.o: os.c $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
  $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
- $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h
-os.o: os.c $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
- $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
- os.h
+ $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h os.h
diff -BEr -U 6 apache_1.3.1/src/os/unix/os.c apache_1.3.2/src/os/unix/os.c
--- apache_1.3.1/src/os/unix/os.c	1998-07-13 19:32:49.000000000 +0800
+++ apache_1.3.2/src/os/unix/os.c	1998-09-16 14:49:44.000000000 +0800
@@ -23,35 +23,109 @@
 /*
  *  Abstraction layer for loading
  *  Apache modules under run-time via 
  *  dynamic shared object (DSO) mechanism
  */
 
+#ifdef RHAPSODY
+#include <mach-o/dyld.h>
+#include "httpd.h"
+#include "http_log.h"
+
+ap_private_extern
+void undefined_symbol_handler(const char *symbolName)
+{
+    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_EMERG, NULL,
+                 "dyld found undefined symbol: %s\n"
+                 "Aborting.\n",
+                 symbolName);
+    abort();
+}
+
+ap_private_extern
+NSModule multiple_symbol_handler (NSSymbol s, NSModule old, NSModule new)
+{
+    /*
+     * Since we can't unload symbols, we're going to run into this
+     * every time we reload a module. Workaround here is to just
+     * rebind to the new symbol, and forget about the old one.
+     * This is crummy, because it's basically a memory leak.
+     * (See Radar 2262020 against dyld).
+     */
+
+#ifdef DEBUG
+    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_DEBUG, NULL,
+                 "dyld found a multiply defined symbol %s in modules:\n"
+                 "%s\n%s\n",
+                 NSNameOfSymbol(s),
+                 NSNameOfModule(old), NSNameOfModule(new));
+#endif
+
+    return(new);
+}
+
+ap_private_extern
+void linkEdit_symbol_handler (NSLinkEditErrors c, int errorNumber,
+                              const char *fileName, const char *errorString)
+{
+    ap_log_error(APLOG_MARK, APLOG_NOERRNO|APLOG_EMERG, NULL,
+                 "dyld errors during link edit for file %s\n%s\n",
+                 fileName, errorString);
+    abort();
+}
+
+#endif /*RHAPSODY*/
+
+void ap_os_dso_init(void)
+{
+#if defined(RHAPSODY)
+    NSLinkEditErrorHandlers handlers;
+
+    handlers.undefined = undefined_symbol_handler;
+    handlers.multiple  = multiple_symbol_handler;
+    handlers.linkEdit  = linkEdit_symbol_handler;
+
+    NSInstallLinkEditErrorHandlers(&handlers);
+#endif
+}
+
 void *ap_os_dso_load(const char *path)
 {
 #if defined(HPUX) || defined(HPUX10)
     shl_t handle;
     handle = shl_load(path, BIND_IMMEDIATE|BIND_VERBOSE|BIND_NOSTART, 0L);
     return (void *)handle;
-#else
-#if defined(OSF1) ||\
+
+#elif defined(RHAPSODY)
+    NSObjectFileImage image;
+    if (NSCreateObjectFileImageFromFile(path, &image) !=
+        NSObjectFileImageSuccess)
+        return NULL;
+    return NSLinkModule(image, path, TRUE);
+
+#elif defined(OSF1) ||\
     (defined(__FreeBSD_version) && (__FreeBSD_version >= 220000))
     return dlopen((char *)path, RTLD_NOW | RTLD_GLOBAL);
+
 #else
     return dlopen(path, RTLD_NOW | RTLD_GLOBAL);
 #endif
-#endif
 }
 
-void ap_os_dso_unload(void *handle) 
+void ap_os_dso_unload(void *handle)
 {
 #if defined(HPUX) || defined(HPUX10)
     shl_unload((shl_t)handle);
+
+#elif defined(RHAPSODY)
+    NSUnLinkModule(handle,FALSE);
+
 #else
     dlclose(handle);
 #endif
+
     return;
 }
 
 void *ap_os_dso_sym(void *handle, const char *symname)
 {
 #if defined(HPUX) || defined(HPUX10)
@@ -60,26 +134,38 @@
 
     errno = 0;
     status = shl_findsym((shl_t *)&handle, symname, TYPE_PROCEDURE, &symaddr);
     if (status == -1 && errno == 0) /* try TYPE_DATA instead */
         status = shl_findsym((shl_t *)&handle, symname, TYPE_DATA, &symaddr);
     return (status == -1 ? NULL : symaddr);
-#else /* ndef HPUX */
-#ifdef DLSYM_NEEDS_UNDERSCORE
-    char symbol[256];
+
+#elif defined(RHAPSODY)
+    NSSymbol symbol;
+    char *symname2 = (char*)malloc(sizeof(char)*(strlen(symname)+2));
+    sprintf(symname2, "_%s", symname);
+    symbol = NSLookupAndBindSymbol(symname2);
+    free(symname2);
+    return NSAddressOfSymbol(symbol);
+
+#elif defined(DLSYM_NEEDS_UNDERSCORE)
+    char *symbol = (char*)malloc(sizeof(char)*(strlen(symname)+2));
+    void *retval;
     sprintf(symbol, "_%s", symname);
-    return dlsym(handle, symbol);
+    retval = dlsym(handle, symbol);
+    free(symbol);
+    return retval;
+
 #else
     return dlsym(handle, symname);
 #endif
-#endif /* ndef HPUX */
 }
 
 const char *ap_os_dso_error(void)
 {
 #if defined(HPUX) || defined(HPUX10)
     return strerror(errno);
+#elif defined(RHAPSODY)
+    return NULL;
 #else
     return dlerror();
 #endif
 }
-
diff -BEr -U 6 apache_1.3.1/src/os/unix/os.h apache_1.3.2/src/os/unix/os.h
--- apache_1.3.1/src/os/unix/os.h	1998-07-13 19:32:49.000000000 +0800
+++ apache_1.3.2/src/os/unix/os.h	1998-09-16 14:49:44.000000000 +0800
@@ -90,12 +90,19 @@
  */
 
 #ifdef HAVE_DL_H
 #include <dl.h>
 #endif
 
+/*
+ * Do not use native AIX DSO support
+ */
+#ifdef AIX
+#undef HAVE_DLFCN_H
+#endif
+
 #ifdef HAVE_DLFCN_H
 #include <dlfcn.h>
 #else
 void *dlopen(const char *, int);
 int dlclose(void *);
 void *dlsym(void *, const char *);
@@ -116,12 +123,13 @@
 
 #if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__)
 #define DLSYM_NEEDS_UNDERSCORE
 #endif
 
 #define     ap_os_dso_handle_t  void *
+void        ap_os_dso_init(void);
 void *      ap_os_dso_load(const char *);
 void        ap_os_dso_unload(void *);
 void *      ap_os_dso_sym(void *, const char *);
 const char *ap_os_dso_error(void);
 
 #endif	/* !APACHE_OS_H */
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleAuthAnon.mak apache_1.3.2/src/os/win32/ApacheModuleAuthAnon.mak
--- apache_1.3.1/src/os/win32/ApacheModuleAuthAnon.mak	1998-04-09 16:20:31.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleAuthAnon.mak	1998-08-13 09:55:21.000000000 +0800
@@ -181,12 +181,13 @@
 
 !IF  "$(CFG)" == "ApacheModuleAuthAnon - Win32 Release"
 
 DEP_CPP_MOD_A=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
@@ -211,12 +212,13 @@
 
 !ELSEIF  "$(CFG)" == "ApacheModuleAuthAnon - Win32 Debug"
 
 DEP_CPP_MOD_A=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleCERNMeta.mak apache_1.3.2/src/os/win32/ApacheModuleCERNMeta.mak
--- apache_1.3.1/src/os/win32/ApacheModuleCERNMeta.mak	1998-04-09 16:20:31.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleCERNMeta.mak	1998-08-13 09:55:22.000000000 +0800
@@ -181,12 +181,13 @@
 
 !IF  "$(CFG)" == "ApacheModuleCERNMeta - Win32 Release"
 
 DEP_CPP_MOD_C=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_request.h"\
@@ -210,12 +211,13 @@
 
 !ELSEIF  "$(CFG)" == "ApacheModuleCERNMeta - Win32 Debug"
 
 DEP_CPP_MOD_C=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_request.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleDigest.mak apache_1.3.2/src/os/win32/ApacheModuleDigest.mak
--- apache_1.3.1/src/os/win32/ApacheModuleDigest.mak	1998-05-30 02:21:03.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleDigest.mak	1998-08-13 09:55:22.000000000 +0800
@@ -180,12 +180,13 @@
 
 !IF  "$(CFG)" == "ApacheModuleDigest - Win32 Release"
 
 DEP_CPP_MOD_D=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
@@ -211,12 +212,13 @@
 
 !ELSEIF  "$(CFG)" == "ApacheModuleDigest - Win32 Debug"
 
 DEP_CPP_MOD_D=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleExpires.mak apache_1.3.2/src/os/win32/ApacheModuleExpires.mak
--- apache_1.3.1/src/os/win32/ApacheModuleExpires.mak	1998-04-09 16:20:32.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleExpires.mak	1998-08-13 09:55:22.000000000 +0800
@@ -180,12 +180,13 @@
 
 !IF  "$(CFG)" == "ApacheModuleExpires - Win32 Release"
 
 DEP_CPP_MOD_E=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\httpd.h"\
@@ -207,12 +208,13 @@
 
 !ELSEIF  "$(CFG)" == "ApacheModuleExpires - Win32 Debug"
 
 DEP_CPP_MOD_E=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\httpd.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleHeaders.mak apache_1.3.2/src/os/win32/ApacheModuleHeaders.mak
--- apache_1.3.1/src/os/win32/ApacheModuleHeaders.mak	1998-04-09 16:20:32.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleHeaders.mak	1998-08-13 09:55:22.000000000 +0800
@@ -180,12 +180,13 @@
 
 !IF  "$(CFG)" == "ApacheModuleHeaders - Win32 Release"
 
 DEP_CPP_MOD_H=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\httpd.h"\
 	"..\..\include\util_uri.h"\
@@ -206,12 +207,13 @@
 
 !ELSEIF  "$(CFG)" == "ApacheModuleHeaders - Win32 Debug"
 
 DEP_CPP_MOD_H=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\httpd.h"\
 	"..\..\include\util_uri.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleInfo.mak apache_1.3.2/src/os/win32/ApacheModuleInfo.mak
--- apache_1.3.1/src/os/win32/ApacheModuleInfo.mak	1998-04-09 16:20:32.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleInfo.mak	1998-08-13 09:55:23.000000000 +0800
@@ -175,12 +175,13 @@
 !IF "$(CFG)" == "ApacheModuleInfo - Win32 Release" || "$(CFG)" ==\
  "ApacheModuleInfo - Win32 Debug"
 SOURCE=..\..\modules\standard\mod_info.c
 DEP_CPP_MOD_I=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_conf_globals.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleRewrite.mak apache_1.3.2/src/os/win32/ApacheModuleRewrite.mak
--- apache_1.3.1/src/os/win32/ApacheModuleRewrite.mak	1998-04-09 16:20:32.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleRewrite.mak	1998-08-13 09:55:23.000000000 +0800
@@ -188,12 +188,13 @@
 
 !IF  "$(CFG)" == "ApacheModuleRewrite - Win32 Release"
 
 DEP_CPP_MOD_R=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
@@ -211,12 +212,13 @@
 
 !ELSEIF  "$(CFG)" == "ApacheModuleRewrite - Win32 Debug"
 
 DEP_CPP_MOD_R=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleSpeling.mak apache_1.3.2/src/os/win32/ApacheModuleSpeling.mak
--- apache_1.3.1/src/os/win32/ApacheModuleSpeling.mak	1998-04-09 16:20:32.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleSpeling.mak	1998-08-13 09:55:23.000000000 +0800
@@ -180,12 +180,13 @@
 
 !IF  "$(CFG)" == "ApacheModuleSpeling - Win32 Release"
 
 DEP_CPP_MOD_S=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
@@ -208,12 +209,13 @@
 
 !ELSEIF  "$(CFG)" == "ApacheModuleSpeling - Win32 Debug"
 
 DEP_CPP_MOD_S=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleStatus.mak apache_1.3.2/src/os/win32/ApacheModuleStatus.mak
--- apache_1.3.1/src/os/win32/ApacheModuleStatus.mak	1998-04-09 16:20:33.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleStatus.mak	1998-08-13 09:55:23.000000000 +0800
@@ -27,16 +27,12 @@
 !IF "$(OS)" == "Windows_NT"
 NULL=
 !ELSE 
 NULL=nul
 !ENDIF 
 
-CPP=cl.exe
-MTL=midl.exe
-RSC=rc.exe
-
 !IF  "$(CFG)" == "ApacheModuleStatus - Win32 Release"
 
 OUTDIR=.\ApacheModuleStatusR
 INTDIR=.\ApacheModuleStatusR
 # Begin Custom Macros
 OutDir=.\.\ApacheModuleStatusR
@@ -59,18 +55,52 @@
 	-@erase "$(OUTDIR)\ApacheModuleStatus.exp"
 	-@erase "$(OUTDIR)\ApacheModuleStatus.lib"
 
 "$(OUTDIR)" :
     if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
 
+CPP=cl.exe
 CPP_PROJ=/nologo /MD /W3 /GX /O2 /I "..\..\include" /D "NDEBUG" /D "WIN32" /D\
  "_WINDOWS" /D "SHARED_MODULE" /Fp"$(INTDIR)\ApacheModuleStatus.pch" /YX\
  /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 
 CPP_OBJS=.\ApacheModuleStatusR/
 CPP_SBRS=.
+
+.c{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cpp{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cxx{$(CPP_OBJS)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.c{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cpp{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+.cxx{$(CPP_SBRS)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $< 
+<<
+
+MTL=midl.exe
 MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32 
+RSC=rc.exe
 BSC32=bscmake.exe
 BSC32_FLAGS=/nologo /o"$(OUTDIR)\ApacheModuleStatus.bsc" 
 BSC32_SBRS= \
 	
 LINK32=link.exe
 LINK32_FLAGS=..\..\CoreR\ApacheCore.lib kernel32.lib user32.lib gdi32.lib\
@@ -114,37 +144,18 @@
 	-@erase "$(OUTDIR)\ApacheModuleStatus.lib"
 	-@erase "$(OUTDIR)\ApacheModuleStatus.pdb"
 
 "$(OUTDIR)" :
     if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
 
+CPP=cl.exe
 CPP_PROJ=/nologo /MDd /W3 /Gm /GX /Zi /Od /I "..\..\include" /D "_DEBUG" /D\
  "WIN32" /D "_WINDOWS" /D "SHARED_MODULE" /Fp"$(INTDIR)\ApacheModuleStatus.pch"\
  /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 
 CPP_OBJS=.\ApacheModuleStatusD/
 CPP_SBRS=.
-MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32 
-BSC32=bscmake.exe
-BSC32_FLAGS=/nologo /o"$(OUTDIR)\ApacheModuleStatus.bsc" 
-BSC32_SBRS= \
-	
-LINK32=link.exe
-LINK32_FLAGS=..\..\CoreD\ApacheCore.lib kernel32.lib user32.lib gdi32.lib\
- winspool.lib comdlg32.lib advapi32.lib shell32.lib /nologo /subsystem:windows\
- /dll /incremental:yes /pdb:"$(OUTDIR)\ApacheModuleStatus.pdb" /debug\
- /machine:I386 /out:"$(OUTDIR)\ApacheModuleStatus.dll"\
- /implib:"$(OUTDIR)\ApacheModuleStatus.lib" 
-LINK32_OBJS= \
-	"$(INTDIR)\mod_status.obj"
-
-"$(OUTDIR)\ApacheModuleStatus.dll" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
-    $(LINK32) @<<
-  $(LINK32_FLAGS) $(LINK32_OBJS)
-<<
-
-!ENDIF 
 
 .c{$(CPP_OBJS)}.obj::
    $(CPP) @<<
    $(CPP_PROJ) $< 
 <<
 
@@ -170,56 +181,77 @@
 
 .cxx{$(CPP_SBRS)}.sbr::
    $(CPP) @<<
    $(CPP_PROJ) $< 
 <<
 
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32 
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\ApacheModuleStatus.bsc" 
+BSC32_SBRS= \
+	
+LINK32=link.exe
+LINK32_FLAGS=..\..\CoreD\ApacheCore.lib kernel32.lib user32.lib gdi32.lib\
+ winspool.lib comdlg32.lib advapi32.lib shell32.lib /nologo /subsystem:windows\
+ /dll /incremental:yes /pdb:"$(OUTDIR)\ApacheModuleStatus.pdb" /debug\
+ /machine:I386 /out:"$(OUTDIR)\ApacheModuleStatus.dll"\
+ /implib:"$(OUTDIR)\ApacheModuleStatus.lib" 
+LINK32_OBJS= \
+	"$(INTDIR)\mod_status.obj"
+
+"$(OUTDIR)\ApacheModuleStatus.dll" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+
+!ENDIF 
+
 
 !IF "$(CFG)" == "ApacheModuleStatus - Win32 Release" || "$(CFG)" ==\
  "ApacheModuleStatus - Win32 Debug"
 SOURCE=..\..\modules\standard\mod_status.c
 
 !IF  "$(CFG)" == "ApacheModuleStatus - Win32 Release"
 
 DEP_CPP_MOD_S=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
+	"..\..\include\http_conf_globals.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
 	"..\..\include\httpd.h"\
 	"..\..\include\scoreboard.h"\
 	"..\..\include\util_script.h"\
 	"..\..\include\util_uri.h"\
 	".\os.h"\
 	".\readdir.h"\
-	{$(INCLUDE)}"sys\stat.h"\
-	{$(INCLUDE)}"sys\types.h"\
-	
-NODEP_CPP_MOD_S=\
-	"..\..\include\ebcdic.h"\
-	"..\..\include\os.h"\
-	"..\..\include\sfio.h"\
 	
 
 "$(INTDIR)\mod_status.obj" : $(SOURCE) $(DEP_CPP_MOD_S) "$(INTDIR)"
 	$(CPP) $(CPP_PROJ) $(SOURCE)
 
 
 !ELSEIF  "$(CFG)" == "ApacheModuleStatus - Win32 Debug"
 
 DEP_CPP_MOD_S=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
+	"..\..\include\ap_config.h"\
+	"..\..\include\ap_ctype.h"\
 	"..\..\include\buff.h"\
-	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\http_log.h"\
 	"..\..\include\http_main.h"\
 	"..\..\include\http_protocol.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/ApacheModuleUserTrack.mak apache_1.3.2/src/os/win32/ApacheModuleUserTrack.mak
--- apache_1.3.1/src/os/win32/ApacheModuleUserTrack.mak	1998-04-09 16:20:33.000000000 +0800
+++ apache_1.3.2/src/os/win32/ApacheModuleUserTrack.mak	1998-08-13 09:55:23.000000000 +0800
@@ -181,12 +181,13 @@
 
 !IF  "$(CFG)" == "ApacheModuleUserTrack - Win32 Release"
 
 DEP_CPP_MOD_U=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\httpd.h"\
@@ -208,12 +209,13 @@
 
 !ELSEIF  "$(CFG)" == "ApacheModuleUserTrack - Win32 Debug"
 
 DEP_CPP_MOD_U=\
 	"..\..\include\alloc.h"\
 	"..\..\include\ap.h"\
+	"..\..\include\ap_mmn.h"\
 	"..\..\include\buff.h"\
 	"..\..\include\conf.h"\
 	"..\..\include\hsregex.h"\
 	"..\..\include\http_config.h"\
 	"..\..\include\http_core.h"\
 	"..\..\include\httpd.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/installer/apache.iwz apache_1.3.2/src/os/win32/installer/apache.iwz
--- apache_1.3.1/src/os/win32/installer/apache.iwz	1998-07-19 06:57:34.000000000 +0800
+++ apache_1.3.2/src/os/win32/installer/apache.iwz	1998-09-22 00:14:18.000000000 +0800
@@ -33,25 +33,24 @@
 PACKLIST.EXE Size=87552
 PACKLIST.EXE Date=15:10:30  15/1/1996
 PACKLIST.EXE Ver=3.00.060
 Version=2.02
 DevTool=Generic Windows
 Platform=Win32
-DisksBuilt=1
 DisksDir=apache\650MB\
 TabsVisit=1111001110000111100011
 LangNum=451
 LangDir=LANG\ENG\
 
 [VisualDesign]
 AppName=Apache
 AppExe=
 AppExeFile=
-Version=1.3.1
+Version=1.3.2
 Company=Apache Group
-Title=Apache Web Server 1.3.1
+Title=Apache Web Server 1.3.2
 TitleType=1
 BackgrndBmp=
 BackgrndAlign=4
 Backgrnd=1
 BackgrndColor=10
 Uninstall=1
@@ -96,29 +95,28 @@
 Component6Name=Required Directories
 Component6Description=
 Component6GroupList=26 28 29 30 
 
 [Groups]
 Groups=30
-Group1Size=314310
-Group1Files=10
+Group1Size=325379
+Group1Files=9
 Group1Name=Program Executables
 Group1Dir=<INSTALLDIR>
 Group1Update=0
 Group1TargetOS=-1
 Group1File1=C:\Apache\Apache.exe
 Group1File2=C:\Apache\ApacheCore.dll
 Group1File3=C:\Apache\Announcement
 Group1File4=C:\Apache\ABOUT_APACHE
-Group1File5=C:\Apache\CHANGES
-Group1File6=C:\Apache\KEYS
-Group1File7=C:\Apache\LICENSE
-Group1File8=C:\Apache\README
-Group1File9=C:\Apache\README.NT
-Group1File10=C:\apache\Makefile.tmpl
-Group2Size=133120
+Group1File5=C:\Apache\KEYS
+Group1File6=C:\Apache\LICENSE
+Group1File7=C:\Apache\README
+Group1File8=C:\apache\Makefile.tmpl
+Group1File9=C:\apache\README-NT.TXT
+Group2Size=135680
 Group2Files=10
 Group2Name=Additional Modules
 Group2Dir=<INSTALLDIR>\modules
 Group2Update=0
 Group2TargetOS=-1
 Group2File1=C:\Apache\modules\ApacheModuleDigest.dll
@@ -128,13 +126,13 @@
 Group2File5=C:\Apache\modules\ApacheModuleHeaders.dll
 Group2File6=C:\Apache\modules\ApacheModuleProxy.dll
 Group2File7=C:\Apache\modules\ApacheModuleSpeling.dll
 Group2File8=C:\Apache\modules\ApacheModuleStatus.dll
 Group2File9=C:\Apache\modules\ApacheModuleUserTrack.dll
 Group2File10=C:\apache\modules\ApacheModuleRewrite.dll
-Group3Size=36285
+Group3Size=38680
 Group3Files=6
 Group3Name=Configuration Files
 Group3Dir=<INSTALLDIR>\.tmp
 Group3Update=0
 Group3TargetOS=-1
 Group3File1=C:\Apache\conf\httpd.conf-dist-win
@@ -148,49 +146,50 @@
 Group4Name=Initial Document Root Files
 Group4Dir=<INSTALLDIR>\.tmp
 Group4Update=1
 Group4TargetOS=-1
 Group4File1=C:\Apache\htdocs\index.html
 Group4File2=C:\apache\htdocs\apache_pb.gif
-Group5Size=249224
-Group5Files=31
+Group5Size=255387
+Group5Files=32
 Group5Name=Manual
 Group5Dir=<INSTALLDIR>\htdocs\manual
 Group5Update=0
 Group5TargetOS=-1
-Group5File1=C:\Apache\htdocs\manual\bind.html
-Group5File2=C:\Apache\htdocs\manual\cgi_path.html
-Group5File3=C:\Apache\htdocs\manual\content-negotiation.html
-Group5File4=C:\Apache\htdocs\manual\custom-error.html
-Group5File5=C:\Apache\htdocs\manual\dns-caveats.html
-Group5File6=C:\Apache\htdocs\manual\env.html
-Group5File7=C:\Apache\htdocs\manual\footer.html
-Group5File8=C:\Apache\htdocs\manual\handler.html
-Group5File9=C:\Apache\htdocs\manual\header.html
-Group5File10=C:\Apache\htdocs\manual\index.html
-Group5File11=C:\Apache\htdocs\manual\install.html
-Group5File12=C:\Apache\htdocs\manual\invoking.html
-Group5File13=C:\Apache\htdocs\manual\keepalive.html
-Group5File14=C:\Apache\htdocs\manual\LICENSE
-Group5File15=C:\Apache\htdocs\manual\location.html
-Group5File16=C:\Apache\htdocs\manual\man-template.html
-Group5File17=C:\Apache\htdocs\manual\multilogs.html
-Group5File18=C:\Apache\htdocs\manual\new_features_1_0.html
-Group5File19=C:\Apache\htdocs\manual\new_features_1_1.html
-Group5File20=C:\Apache\htdocs\manual\new_features_1_2.html
-Group5File21=C:\Apache\htdocs\manual\new_features_1_3.html
-Group5File22=C:\Apache\htdocs\manual\process-model.html
-Group5File23=C:\Apache\htdocs\manual\sections.html
-Group5File24=C:\Apache\htdocs\manual\sourcereorg.html
-Group5File25=C:\Apache\htdocs\manual\stopping.html
-Group5File26=C:\Apache\htdocs\manual\suexec.html
-Group5File27=C:\Apache\htdocs\manual\unixware.html
-Group5File28=C:\Apache\htdocs\manual\upgrading_to_1_3.html
-Group5File29=C:\Apache\htdocs\manual\windows.html
-Group5File30=C:\apache\htdocs\manual\ebcdic.html
-Group5File31=C:\apache\htdocs\manual\dso.html
+Group5File1=C:\apache\htdocs\manual\custom-error.html
+Group5File2=C:\apache\htdocs\manual\content-negotiation.html
+Group5File3=C:\apache\htdocs\manual\cgi_path.html
+Group5File4=C:\apache\htdocs\manual\dns-caveats.html
+Group5File5=C:\apache\htdocs\manual\dso.html
+Group5File6=C:\apache\htdocs\manual\ebcdic.html
+Group5File7=C:\apache\htdocs\manual\env.html
+Group5File8=C:\apache\htdocs\manual\footer.html
+Group5File9=C:\apache\htdocs\manual\handler.html
+Group5File10=C:\apache\htdocs\manual\header.html
+Group5File11=C:\apache\htdocs\manual\index.html
+Group5File12=C:\apache\htdocs\manual\install.html
+Group5File13=C:\apache\htdocs\manual\invoking.html
+Group5File14=C:\apache\htdocs\manual\keepalive.html
+Group5File15=C:\apache\htdocs\manual\LICENSE
+Group5File16=C:\apache\htdocs\manual\location.html
+Group5File17=C:\apache\htdocs\manual\man-template.html
+Group5File18=C:\apache\htdocs\manual\multilogs.html
+Group5File19=C:\apache\htdocs\manual\new_features_1_0.html
+Group5File20=C:\apache\htdocs\manual\new_features_1_1.html
+Group5File21=C:\apache\htdocs\manual\new_features_1_2.html
+Group5File22=C:\apache\htdocs\manual\new_features_1_3.html
+Group5File23=C:\apache\htdocs\manual\process-model.html
+Group5File24=C:\apache\htdocs\manual\sections.html
+Group5File25=C:\apache\htdocs\manual\sourcereorg.html
+Group5File26=C:\apache\htdocs\manual\stopping.html
+Group5File27=C:\apache\htdocs\manual\suexec.html
+Group5File28=C:\apache\htdocs\manual\unixware.html
+Group5File29=C:\apache\htdocs\manual\upgrading_to_1_3.html
+Group5File30=C:\apache\htdocs\manual\windows.html
+Group5File31=C:\apache\htdocs\manual\bind.html
+Group5File32=C:\apache\htdocs\manual\expand.pl
 Group6Size=42478
 Group6Files=8
 Group6Name=images
 Group6Dir=[Manual]\images
 Group6Update=0
 Group6TargetOS=-1
@@ -199,14 +198,14 @@
 Group6File3=C:\Apache\htdocs\manual\images\index.gif
 Group6File4=C:\Apache\htdocs\manual\images\sub.gif
 Group6File5=C:\apache\htdocs\manual\images\mod_rewrite_fig1.fig
 Group6File6=C:\apache\htdocs\manual\images\mod_rewrite_fig1.gif
 Group6File7=C:\apache\htdocs\manual\images\mod_rewrite_fig2.fig
 Group6File8=C:\apache\htdocs\manual\images\mod_rewrite_fig2.gif
-Group7Size=314221
-Group7Files=21
+Group7Size=318711
+Group7Files=22
 Group7Name=misc
 Group7Dir=[Manual]\misc
 Group7Update=0
 Group7TargetOS=-1
 Group7File1=C:\Apache\htdocs\manual\misc\API.html
 Group7File2=C:\Apache\htdocs\manual\misc\client_block_api.html
@@ -226,13 +225,14 @@
 Group7File16=C:\Apache\htdocs\manual\misc\perf-hp.html
 Group7File17=C:\Apache\htdocs\manual\misc\perf-tuning.html
 Group7File18=C:\Apache\htdocs\manual\misc\perf.html
 Group7File19=C:\Apache\htdocs\manual\misc\security_tips.html
 Group7File20=C:\Apache\htdocs\manual\misc\vif-info.html
 Group7File21=C:\Apache\htdocs\manual\misc\windoz_keepalive.html
-Group8Size=517858
+Group7File22=C:\apache\htdocs\manual\misc\HTTP_Features.tsv
+Group8Size=528312
 Group8Files=48
 Group8Name=mod
 Group8Dir=[Manual]\mod
 Group8Update=0
 Group8TargetOS=-1
 Group8File1=C:\Apache\htdocs\manual\mod\core.html
@@ -280,13 +280,13 @@
 Group8File43=C:\Apache\htdocs\manual\mod\mod_speling.html
 Group8File44=C:\Apache\htdocs\manual\mod\mod_status.html
 Group8File45=C:\Apache\htdocs\manual\mod\mod_unique_id.html
 Group8File46=C:\Apache\htdocs\manual\mod\mod_userdir.html
 Group8File47=C:\Apache\htdocs\manual\mod\mod_usertrack.html
 Group8File48=C:\apache\htdocs\manual\mod\mod_mmap_static.html
-Group9Size=99426
+Group9Size=97112
 Group9Files=12
 Group9Name=vhosts
 Group9Dir=[Manual]\vhosts
 Group9Update=0
 Group9TargetOS=-1
 Group9File1=C:\Apache\htdocs\manual\vhosts\details.html
@@ -298,14 +298,14 @@
 Group9File7=C:\Apache\htdocs\manual\vhosts\host.html
 Group9File8=C:\Apache\htdocs\manual\vhosts\index.html
 Group9File9=C:\Apache\htdocs\manual\vhosts\ip-based.html
 Group9File10=C:\Apache\htdocs\manual\vhosts\name-based.html
 Group9File11=C:\Apache\htdocs\manual\vhosts\vhosts-in-depth.html
 Group9File12=C:\Apache\htdocs\manual\vhosts\virtual-host.html
-Group10Size=413062
-Group10Files=16
+Group10Size=463442
+Group10Files=18
 Group10Name=src
 Group10Dir=<INSTALLDIR>\src
 Group10Update=0
 Group10TargetOS=-1
 Group10File1=C:\Apache\src\.gdbinit
 Group10File2=C:\Apache\src\Apache.dsp
@@ -320,29 +320,32 @@
 Group10File11=C:\Apache\src\INSTALL
 Group10File12=C:\Apache\src\Makefile.nt
 Group10File13=C:\Apache\src\Makefile.tmpl
 Group10File14=C:\Apache\src\PORTING
 Group10File15=C:\Apache\src\README
 Group10File16=C:\Apache\src\README.EBCDIC
-Group11Size=62789
-Group11Files=9
+Group10File17=C:\apache\src\BUILD.NOTES
+Group10File18=C:\apache\src\INDENT
+Group11Size=68859
+Group11Files=10
 Group11Name=ap
 Group11Dir=[src]\ap
 Group11Update=0
 Group11TargetOS=-1
 Group11File1=C:\Apache\src\ap\ap.dsp
 Group11File2=C:\Apache\src\ap\ap.mak
 Group11File3=C:\Apache\src\ap\ap_cpystrn.c
 Group11File4=C:\Apache\src\ap\ap_execve.c
 Group11File5=C:\Apache\src\ap\ap_signal.c
 Group11File6=C:\Apache\src\ap\ap_slack.c
 Group11File7=C:\Apache\src\ap\ap_snprintf.c
-Group11File8=C:\Apache\src\ap\ap_strings.c
-Group11File9=C:\Apache\src\ap\Makefile.tmpl
-Group12Size=222241
-Group12Files=25
+Group11File8=C:\Apache\src\ap\Makefile.tmpl
+Group11File9=C:\apache\src\ap\.indent.pro
+Group11File10=C:\apache\src\ap\ap_fnmatch.c
+Group12Size=245636
+Group12Files=30
 Group12Name=include
 Group12Dir=[src]\include
 Group12Update=0
 Group12TargetOS=-1
 Group12File1=C:\Apache\src\include\alloc.h
 Group12File2=C:\Apache\src\include\ap.h
@@ -366,75 +369,82 @@
 Group12File20=C:\Apache\src\include\scoreboard.h
 Group12File21=C:\Apache\src\include\util_date.h
 Group12File22=C:\Apache\src\include\util_md5.h
 Group12File23=C:\Apache\src\include\util_script.h
 Group12File24=C:\apache\src\include\compat.h
 Group12File25=C:\apache\src\include\util_uri.h
-Group13Size=728100
-Group13Files=25
+Group12File26=C:\apache\src\include\ap_compat.h
+Group12File27=C:\apache\src\include\ap_config.h
+Group12File28=C:\apache\src\include\ap_ctype.h
+Group12File29=C:\apache\src\include\.indent.pro
+Group12File30=C:\apache\src\include\ap_mmn.h
+Group13Size=759628
+Group13Files=24
 Group13Name=main
 Group13Dir=[src]\main
 Group13Update=0
 Group13TargetOS=-1
 Group13File1=C:\apache\src\main\.indent.pro
 Group13File2=C:\apache\src\main\alloc.c
 Group13File3=C:\apache\src\main\buff.c
-Group13File4=C:\apache\src\main\fnmatch.c
-Group13File5=C:\apache\src\main\gen_test_char.c
-Group13File6=C:\apache\src\main\gen_test_char.dsp
-Group13File7=C:\apache\src\main\gen_test_char.mak
-Group13File8=C:\apache\src\main\gen_uri_delims.c
-Group13File9=C:\apache\src\main\gen_uri_delims.dsp
-Group13File10=C:\apache\src\main\gen_uri_delims.mak
-Group13File11=C:\apache\src\main\http_config.c
-Group13File12=C:\apache\src\main\http_core.c
-Group13File13=C:\apache\src\main\http_log.c
-Group13File14=C:\apache\src\main\http_main.c
-Group13File15=C:\apache\src\main\http_protocol.c
-Group13File16=C:\apache\src\main\http_request.c
-Group13File17=C:\apache\src\main\http_vhost.c
-Group13File18=C:\apache\src\main\Makefile.tmpl
-Group13File19=C:\apache\src\main\md5c.c
-Group13File20=C:\apache\src\main\rfc1413.c
-Group13File21=C:\apache\src\main\util.c
-Group13File22=C:\apache\src\main\util_date.c
-Group13File23=C:\apache\src\main\util_md5.c
-Group13File24=C:\apache\src\main\util_script.c
-Group13File25=C:\apache\src\main\util_uri.c
+Group13File4=C:\apache\src\main\gen_test_char.c
+Group13File5=C:\apache\src\main\gen_test_char.dsp
+Group13File6=C:\apache\src\main\gen_test_char.mak
+Group13File7=C:\apache\src\main\gen_uri_delims.c
+Group13File8=C:\apache\src\main\gen_uri_delims.dsp
+Group13File9=C:\apache\src\main\gen_uri_delims.mak
+Group13File10=C:\apache\src\main\http_config.c
+Group13File11=C:\apache\src\main\http_core.c
+Group13File12=C:\apache\src\main\http_log.c
+Group13File13=C:\apache\src\main\http_main.c
+Group13File14=C:\apache\src\main\http_protocol.c
+Group13File15=C:\apache\src\main\http_request.c
+Group13File16=C:\apache\src\main\http_vhost.c
+Group13File17=C:\apache\src\main\Makefile.tmpl
+Group13File18=C:\apache\src\main\md5c.c
+Group13File19=C:\apache\src\main\rfc1413.c
+Group13File20=C:\apache\src\main\util.c
+Group13File21=C:\apache\src\main\util_date.c
+Group13File22=C:\apache\src\main\util_md5.c
+Group13File23=C:\apache\src\main\util_script.c
+Group13File24=C:\apache\src\main\util_uri.c
 Group14Size=895
 Group14Files=1
 Group14Name=modules
 Group14Dir=[src]\modules
 Group14Update=0
 Group14TargetOS=-1
 Group14File1=C:\Apache\src\modules\README
-Group15Size=48114
-Group15Files=3
+Group15Size=49171
+Group15Files=4
 Group15Name=example
 Group15Dir=[modules]\example
 Group15Update=0
 Group15TargetOS=-1
 Group15File1=C:\Apache\src\modules\example\Makefile.tmpl
 Group15File2=C:\Apache\src\modules\example\mod_example.c
 Group15File3=C:\Apache\src\modules\example\README
-Group16Size=12951
-Group16Files=2
+Group15File4=C:\apache\src\modules\example\.indent.pro
+Group16Size=13944
+Group16Files=3
 Group16Name=experimental
 Group16Dir=[modules]\experimental
 Group16Update=0
 Group16TargetOS=-1
 Group16File1=C:\Apache\src\modules\experimental\Makefile.tmpl
 Group16File2=C:\Apache\src\modules\experimental\mod_mmap_static.c
-Group17Size=69
-Group17Files=1
+Group16File3=C:\apache\src\modules\experimental\.indent.pro
+Group17Size=824
+Group17Files=2
 Group17Name=extra
 Group17Dir=[modules]\extra
 Group17Update=0
 Group17TargetOS=-1
 Group17File1=C:\Apache\src\modules\extra\Makefile.tmpl
-Group18Size=181989
+Group17File2=C:\apache\src\modules\extra\.indent.pro
+Group18Size=205432
 Group18Files=12
 Group18Name=proxy
 Group18Dir=[modules]\proxy
 Group18Update=0
 Group18TargetOS=-1
 Group18File1=C:\apache\src\modules\proxy\.indent.pro
@@ -446,13 +456,13 @@
 Group18File7=C:\apache\src\modules\proxy\mod_proxy.h
 Group18File8=C:\apache\src\modules\proxy\proxy_cache.c
 Group18File9=C:\apache\src\modules\proxy\proxy_connect.c
 Group18File10=C:\apache\src\modules\proxy\proxy_ftp.c
 Group18File11=C:\apache\src\modules\proxy\proxy_http.c
 Group18File12=C:\apache\src\modules\proxy\proxy_util.c
-Group19Size=810699
+Group19Size=827909
 Group19Files=37
 Group19Name=standard
 Group19Dir=[modules]\standard
 Group19Update=0
 Group19TargetOS=-1
 Group19File1=C:\apache\src\modules\standard\.indent.pro
@@ -489,13 +499,13 @@
 Group19File32=C:\apache\src\modules\standard\mod_so.c
 Group19File33=C:\apache\src\modules\standard\mod_speling.c
 Group19File34=C:\apache\src\modules\standard\mod_status.c
 Group19File35=C:\apache\src\modules\standard\mod_unique_id.c
 Group19File36=C:\apache\src\modules\standard\mod_userdir.c
 Group19File37=C:\apache\src\modules\standard\mod_usertrack.c
-Group20Size=170120
+Group20Size=170813
 Group20Files=25
 Group20Name=regex
 Group20Dir=[src]\regex
 Group20Update=0
 Group20TargetOS=-1
 Group20File1=C:\Apache\src\regex\cclass.h
@@ -520,14 +530,14 @@
 Group20File20=C:\Apache\src\regex\regexec.c
 Group20File21=C:\Apache\src\regex\regfree.c
 Group20File22=C:\Apache\src\regex\split.c
 Group20File23=C:\Apache\src\regex\tests
 Group20File24=C:\Apache\src\regex\utils.h
 Group20File25=C:\Apache\src\regex\WHATSNEW
-Group21Size=168805
-Group21Files=26
+Group21Size=182616
+Group21Files=27
 Group21Name=support
 Group21Dir=[src]\support
 Group21Update=0
 Group21TargetOS=-1
 Group21File1=C:\apache\src\support\.indent.pro
 Group21File2=C:\apache\src\support\ab.1
@@ -552,19 +562,20 @@
 Group21File21=C:\apache\src\support\rotatelogs.8
 Group21File22=C:\apache\src\support\rotatelogs.c
 Group21File23=C:\apache\src\support\split-logfile
 Group21File24=C:\apache\src\support\suexec.8
 Group21File25=C:\apache\src\support\suexec.c
 Group21File26=C:\apache\src\support\suexec.h
+Group21File27=C:\apache\src\support\httpd.exp
 Group22Size=0
 Group22Files=0
 Group22Name=os
 Group22Dir=[src]\os
 Group22Update=0
 Group22TargetOS=-1
-Group23Size=194599
+Group23Size=198555
 Group23Files=43
 Group23Name=win32
 Group23Dir=[os]\win32
 Group23Update=0
 Group23TargetOS=-1
 Group23File1=C:\apache\src\os\win32\ApacheModuleAuthAnon.dsp
@@ -732,25 +743,25 @@
 Group30Update=0
 Group30TargetOS=-1
 
 [Sequence]
 DestinationLocationDir=<ProgramFilesDir>\Apache Group\Apache
 SelectProgramFolderName=Apache Web Server
-WelcomeMessage=1
-WelcomeMessageFile=
 LicenseAgreement=1
 LicenseAgreementFile=C:\Apache\LICENSE
+ReadMeFileBrowser=1
+ReadMeFileBrowserFile=C:\apache\WARNING-NT.TXT
 DestinationLocation=1
 SetupType=1
 CustomSetup=1
 SelectProgramFolder=1
 ProgressBar=1
 SetupComplete=1
 SetupCompleteExec=
 SetupCompleteExecParam=
-SetupCompleteExecReadme=[Program Executables]\README.NT
+SetupCompleteExecReadme=[Program Executables]\README-NT.TXT
 
 [RegEntries]
 Reg1Path=HKEY_CLASSES_ROOT
 Reg1Val1Type=0
 Reg1Val1Name=(Default)
 Reg1Val1Data=(value not set)
@@ -792,13 +803,13 @@
 Reg8Vals=1
 Reg9Path=HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group\Apache
 Reg9Val1Type=0
 Reg9Val1Name=(Default)
 Reg9Val1Data=(value not set)
 Reg9Vals=1
-Reg10Path=HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group\Apache\1.3.1
+Reg10Path=HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group\Apache\1.3.2
 Reg10Val1Type=0
 Reg10Val1Name=(Default)
 Reg10Val1Data=(value not set)
 Reg10Val2Type=0
 Reg10Val2Name=ServerRoot
 Reg10Val2Data=<INSTALLDIR>
@@ -806,14 +817,14 @@
 Regs=10
 
 [Registry]
 Reg1Path=HKEY_LOCAL_MACHINE\SOFTWARE
 Reg2Path=HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group
 Reg3Path=HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group\Apache
-Reg4Path=HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group\Apache\1.3.1
-Reg5Path=HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group\Apache\1.3.1
+Reg4Path=HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group\Apache\1.3.2
+Reg5Path=HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group\Apache\1.3.2
 Reg5ValName=ServerRoot
 Reg5ValType=0
 Reg5ValData=<INSTALLDIR>
 Regs=5
 
 [Icons]
@@ -870,8 +881,8 @@
 ShareFiles=
 Command=
 
 [CopyToFloppy]
 DriveOption=Path for a 1 File Installation.
 DestinationPath=
-DestinationPathOneFile=D:\devel\src\os\win32\installer\apache\650MB\
+DestinationPathOneFile=C:\
 Password=
diff -BEr -U 6 apache_1.3.1/src/os/win32/mod_isapi.c apache_1.3.2/src/os/win32/mod_isapi.c
--- apache_1.3.1/src/os/win32/mod_isapi.c	1998-07-09 01:47:24.000000000 +0800
+++ apache_1.3.2/src/os/win32/mod_isapi.c	1998-08-11 00:26:31.000000000 +0800
@@ -144,39 +144,39 @@
 	return FORBIDDEN;
 
     /* Load the module */
 
     if (!(isapi_handle = LoadLibraryEx(r->filename, NULL,
 				       LOAD_WITH_ALTERED_SEARCH_PATH))) {
-	ap_log_error(APLOG_MARK, APLOG_ALERT, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ALERT, r,
 		    "Could not load DLL: %s", r->filename);
 	return SERVER_ERROR;
     }
 
     if (!(isapi_version =
 	  (void *)(GetProcAddress(isapi_handle, "GetExtensionVersion")))) {
-	ap_log_error(APLOG_MARK, APLOG_ALERT, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ALERT, r,
 		    "DLL could not load GetExtensionVersion(): %s", r->filename);
 	FreeLibrary(isapi_handle);
 	return SERVER_ERROR;
     }
 
     if (!(isapi_entry =
 	  (void *)(GetProcAddress(isapi_handle, "HttpExtensionProc")))) {
-	ap_log_error(APLOG_MARK, APLOG_ALERT, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ALERT, r,
 		    "DLL could not load HttpExtensionProc(): %s", r->filename);
 	FreeLibrary(isapi_handle);
 	return SERVER_ERROR;
     }
 
     isapi_term = (void *)(GetProcAddress(isapi_handle, "TerminateExtension"));
 
     /* Run GetExtensionVersion() */
 
     if ((*isapi_version)(pVer) != TRUE) {
-	ap_log_error(APLOG_MARK, APLOG_ALERT, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ALERT, r,
 		    "ISAPI GetExtensionVersion() failed: %s", r->filename);
 	FreeLibrary(isapi_handle);
 	return SERVER_ERROR;
     }
 
     /* Set up variables */
@@ -261,13 +261,13 @@
     /* Set the status (for logging) */
     if (ecb->dwHttpStatusCode)
 	r->status = ecb->dwHttpStatusCode;
 
     /* Check for a log message - and log it */
     if (ecb->lpszLogData && strcmp(ecb->lpszLogData, ""))
-	ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 		    "%s: %s", ecb->lpszLogData, r->filename);
 
     /* All done with the DLL... get rid of it */
     if (isapi_term) (*isapi_term)(HSE_TERM_MUST_UNLOAD);
     FreeLibrary(isapi_handle);
 
@@ -280,13 +280,13 @@
 
 	if (cid->status) /* We have a special status to return */
 	    return cid->status;
 
 	return OK;
     case HSE_STATUS_PENDING:	/* We don't support this */
-	ap_log_error(APLOG_MARK, APLOG_WARNING, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_WARNING, r,
 		    "ISAPI asynchronous I/O not supported: %s", r->filename);
     case HSE_STATUS_ERROR:
     default:
 	return SERVER_ERROR;
     }
 
@@ -342,13 +342,13 @@
 			 DWORD dwReserved) {
     request_rec *r = ((isapi_cid *)ConnID)->r;
     int writ;	/* written, actually, but why shouldn't I make up words? */
 
     /* We only support synchronous writing */
     if (dwReserved && dwReserved != HSE_IO_SYNC) {
-	ap_log_error(APLOG_MARK, APLOG_WARNING, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_WARNING, r,
 		    "ISAPI asynchronous I/O not supported: %s", r->filename);
 	SetLastError(ERROR_INVALID_PARAMETER);
 	return FALSE;
     }
 
     if ((writ = ap_rwrite(Buffer, *lpwdwBytes, r)) == EOF) {
@@ -362,12 +362,13 @@
 
 BOOL WINAPI ReadClient (HCONN ConnID, LPVOID lpvBuffer, LPDWORD lpdwSize) {
     /* Doesn't need to do anything; we've read all the data already */
     return TRUE;
 }
 
+/* XXX: There is an O(n^2) attack possible here. */
 BOOL WINAPI ServerSupportFunction (HCONN hConn, DWORD dwHSERequest,
 				   LPVOID lpvBuffer, LPDWORD lpdwSize,
 				   LPDWORD lpdwDataType) {
     isapi_cid *cid = (isapi_cid *)hConn;
     request_rec *subreq, *r = cid->r;
     char *data;
@@ -427,13 +428,13 @@
 
 #ifdef RELAX_HEADER_RULE
 	    if (lf)
 		*lf = '\0';
 #else
 	    if (!lf) { /* Huh? Invalid data, I think */
-		ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			    "ISA sent invalid headers: %s", r->filename);
 		SetLastError(ERROR);	/* XXX: Find right error */
 		return FALSE;
 	    }
 
 	    /* Get rid of \n and \r */
@@ -450,13 +451,13 @@
 		    data = lf + 1;	/* Reset data */
 		break;
 	    }
 
 	    if (!(value = strchr(data, ':'))) {
 		SetLastError(ERROR);	/* XXX: Find right error */
-		ap_log_error(APLOG_MARK, APLOG_ERR, r->server,
+		ap_log_rerror(APLOG_MARK, APLOG_ERR, r,
 			    "ISA sent invalid headers", r->filename);
 		return FALSE;
 	    }
 
 	    *value++ = '\0';
 	    while (*value && ap_isspace(*value)) ++value;
@@ -533,13 +534,13 @@
 	 */
 	return TRUE;
 
     /* We don't support all this async I/O, Microsoft-specific stuff */
     case HSE_REQ_IO_COMPLETION:
     case HSE_REQ_TRANSMIT_FILE:
-	ap_log_error(APLOG_MARK, APLOG_WARNING, r->server,
+	ap_log_rerror(APLOG_MARK, APLOG_WARNING, r,
 		    "ISAPI asynchronous I/O not supported: %s", r->filename);
     default:
 	SetLastError(ERROR_INVALID_PARAMETER);
 	return FALSE;
     }
 }
diff -BEr -U 6 apache_1.3.1/src/os/win32/Module.mak.tmpl apache_1.3.2/src/os/win32/Module.mak.tmpl
--- apache_1.3.1/src/os/win32/Module.mak.tmpl	1997-07-18 04:01:40.000000000 +0800
+++ apache_1.3.2/src/os/win32/Module.mak.tmpl	1998-08-13 09:55:24.000000000 +0800
@@ -208,12 +208,13 @@
 	"..\http_config.h"\
 	"..\http_core.h"\
 	"..\http_log.h"\
 	"..\http_request.h"\
 	"..\httpd.h"\
 	"..\regex\regex.h"\
+	"..\ap_mmn.h"\
 	".\readdir.h"\
 	{$(INCLUDE)}"\sys\stat.h"\
 	{$(INCLUDE)}"\sys\types.h"\
 	
 NODEP_CPP_MOD_A=\
 	"..\sfio.h"\
diff -BEr -U 6 apache_1.3.1/src/os/win32/modules.c apache_1.3.2/src/os/win32/modules.c
--- apache_1.3.1/src/os/win32/modules.c	1998-04-11 20:01:06.000000000 +0800
+++ apache_1.3.2/src/os/win32/modules.c	1998-07-21 08:06:59.000000000 +0800
@@ -1,8 +1,9 @@
-/* modules.c --- automatically generated by Apache
- * configuration script.  DO NOT HAND EDIT!!!!!
+/* modules.c --- major modules compiled into Apache for Win32.
+ * Only insert an entry for a module if it must be compiled into
+ * the core server
  */
 
 #include "httpd.h"
 #include "http_config.h"
 
 extern module core_module;
diff -BEr -U 6 apache_1.3.1/src/os/win32/os.h apache_1.3.2/src/os/win32/os.h
--- apache_1.3.1/src/os/win32/os.h	1998-07-13 19:32:51.000000000 +0800
+++ apache_1.3.2/src/os/win32/os.h	1998-09-19 20:27:25.000000000 +0800
@@ -104,12 +104,13 @@
 API_EXPORT(int) os_spawnle(int mode,const char *cmdname,...);
 
 /* Abstractions for dealing with shared object files (DLLs on Win32).
  * These are used by mod_so.c
  */
 #define ap_os_dso_handle_t  HINSTANCE
+#define ap_os_dso_init()
 #define ap_os_dso_load(l)   LoadLibraryEx(l, NULL, LOAD_WITH_ALTERED_SEARCH_PATH)
 #define ap_os_dso_unload(l) FreeLibrary(l)
 #define ap_os_dso_sym(h,s)  GetProcAddress(h,s)
 #define ap_os_dso_error()   ""	/* for now */
 
 #endif   /* ! APACHE_OS_H */
diff -BEr -U 6 apache_1.3.1/src/os/win32/registry.c apache_1.3.2/src/os/win32/registry.c
--- apache_1.3.1/src/os/win32/registry.c	1998-07-19 06:57:31.000000000 +0800
+++ apache_1.3.2/src/os/win32/registry.c	1998-09-22 03:15:31.000000000 +0800
@@ -25,13 +25,13 @@
  * VERSION will be the same across all beta releases for a particular
  * major release, but will change when the final release is made.
  */
 
 #define VENDOR   "Apache Group"
 #define SOFTWARE "Apache"
-#define VERSION  "1.3.1"
+#define VERSION  "1.3.2"
 
 #define REGKEY "SOFTWARE\\" VENDOR "\\" SOFTWARE "\\" VERSION
 
 /*
  * The Windows API registry key functions don't set the last error
  * value (the windows equivalent of errno). So we need to set it
diff -BEr -U 6 apache_1.3.1/src/os/win32/util_win32.c apache_1.3.2/src/os/win32/util_win32.c
--- apache_1.3.1/src/os/win32/util_win32.c	1998-07-13 15:06:16.000000000 +0800
+++ apache_1.3.2/src/os/win32/util_win32.c	1998-09-05 05:20:40.000000000 +0800
@@ -3,75 +3,98 @@
 #include <stdarg.h>
 
 #include "httpd.h"
 #include "http_log.h"
 
 /* Returns TRUE if the path is real, FALSE if it is PATH_INFO */
-static BOOL sub_canonical_filename(char *szCanon, unsigned nCanon, const char *szFile)
+static BOOL sub_canonical_filename(char *szCanon, unsigned nCanon,
+				   const char *szInFile)
 {
     char buf[HUGE_STRING_LEN];
     int n;
     char *szFilePart;
     char *s;
     int nSlashes;
     WIN32_FIND_DATA d;
     HANDLE h;
+    const char *szFile;
 
-    s=strrchr(szFile,'\\');
-    for(nSlashes=0 ; s > szFile && s[-1] == '\\' ; ++nSlashes,--s)
+    szFile = szInFile;
+    s = strrchr(szFile, '\\');
+    for (nSlashes = 0; s > szFile && s[-1] == '\\'; ++nSlashes, --s)
 	;
 
     n = GetFullPathName(szFile, sizeof buf, buf, &szFilePart);
     ap_assert(n);
     ap_assert(n < sizeof buf);
 
+    /*
+     * There is an implicit assumption that szInFile will contain a '\'.
+     * If this is not true (as in the case of <Directory *> or
+     * <File .htaccess>) we would assert in some of the code below.  Therefore,
+     * if we don't get any '\' in the file name, then use the file name we get
+     * from GetFullPathName, because it will have at least one '\'.  If there
+     * is no '\' in szInFile, it must just be a file name, so it should be
+     * valid to use the name from GetFullPathName.  Be sure to adjust the
+     * 's' variable so the rest of the code functions normally.
+     */
+    if (!s) {
+        szFile = buf;
+        s = strrchr(szFile, '\\');
+    }
+
     /* If we have \\machine\share, convert to \\machine\share\ */
     if (buf[0] == '\\' && buf[1] == '\\') {
-	char *s=strchr(buf+2,'\\');
-	if(s && !strchr(s+1,'\\'))
-	    strcat(s+1,"\\");
+	char *s = strchr(buf + 2, '\\');
+	if (s && !strchr(s + 1, '\\')) {
+	    strcat(s + 1, "\\");
+	}
     }
 
     if (!strchr(buf, '*') && !strchr(buf, '?')) {
         h = FindFirstFile(buf, &d);
-        if(h != INVALID_HANDLE_VALUE)
+        if (h != INVALID_HANDLE_VALUE) {
             FindClose(h);
+	}
     }
     else {
-        h=INVALID_HANDLE_VALUE;
+        h = INVALID_HANDLE_VALUE;
     }
 
-    if (szFilePart < buf+3) {
+    if (szFilePart < buf + 3) {
 	ap_assert(strlen(buf) < nCanon);
         strcpy(szCanon, buf);
-	if(szCanon[0] != '\\') { /* a \ at the start means it is UNC, otherwise it is x: */
+	/* a \ at the start means it is UNC, otherwise it is x: */
+	if (szCanon[0] != '\\') {
 	    ap_assert(ap_isalpha(szCanon[0]));
 	    ap_assert(szCanon[1] == ':');
 	    szCanon[2] = '/';
 	}
 	else {
 	    char *s;
 
 	    ap_assert(szCanon[1] == '\\');
-	    for(s=szCanon ; *s ; ++s)
-		if(*s == '\\')
-		    *s='/';
+	    for (s = szCanon; *s; ++s) {
+		if (*s == '\\') {
+		    *s = '/';
+		}
+	    }
 	}
         return TRUE;
     }
-    if (szFilePart != buf+3) {
+    if (szFilePart != buf + 3) {
         char b2[_MAX_PATH];
 	char b3[_MAX_PATH];
-        ap_assert(szFilePart > buf+3);
+        ap_assert(szFilePart > buf + 3);
 	/* avoid SEGVs on things like "Directory *" */
 	ap_assert(s >= szFile && "this is a known bug");
 
-	memcpy(b3,szFile,s-szFile);
-	b3[s-szFile]='\0';
+	memcpy(b3, szFile, s - szFile);
+	b3[s - szFile] = '\0';
 
-//        szFilePart[-1]='\0';
+/*        szFilePart[-1] = '\0'; */
         sub_canonical_filename(b2, sizeof b2, b3);
 
 	ap_assert(strlen(b2)+1 < nCanon);
         strcpy(szCanon, b2);
         strcat(szCanon, "/");
     }
@@ -79,15 +102,16 @@
 	ap_assert(strlen(buf) < nCanon);
         strcpy(szCanon, buf);
         szCanon[2] = '/';
         szCanon[3] = '\0';
     }
     if (h == INVALID_HANDLE_VALUE) {
-	ap_assert(strlen(szCanon)+strlen(szFilePart)+nSlashes < nCanon);
-	for(n=0 ; n < nSlashes ; ++n)
+	ap_assert(strlen(szCanon) + strlen(szFilePart) + nSlashes < nCanon);
+	for (n = 0; n < nSlashes; ++n) {
 	    strcat(szCanon, "/");
+	}
         strcat(szCanon, szFilePart);
 	return FALSE;
     }
     else {
 	ap_assert(strlen(szCanon)+strlen(d.cFileName) < nCanon);
         strlwr(d.cFileName);
@@ -103,45 +127,66 @@
 API_EXPORT(char *) ap_os_canonical_filename(pool *pPool, const char *szFile)
 {
     char buf[HUGE_STRING_LEN];
     char b2[HUGE_STRING_LEN];
     const char *s;
     char *d;
-    int nSlashes;
+    int nSlashes = 0;
 
     ap_assert(strlen(szFile) < sizeof b2);
 
     /* Eliminate directories consisting of three or more dots.
-       These act like ".." but are not detected by other machinery.
-       Also get rid of trailing .s on any path component, which are ignored by the filesystem.
-       Simultaneously, rewrite / to \.
-       This is a bit of a kludge - Ben.
-    */
-    for(s=szFile,d=b2 ; (*d=*s) ; ++d,++s) {
-	if(*s == '/')
-	    *d='\\';
-	if(*s == '.' && (s[1] == '/' || s[1] == '\\' || !s[1])) {
-	    while(*d == '.')
-		--d;
-	    if(*d == '\\')
-		--d;
+     * These act like ".." but are not detected by other machinery.
+     * Also get rid of trailing .s on any path component, which are ignored
+     * by the filesystem.  Simultaneously, rewrite / to \.
+     * This is a bit of a kludge - Ben.
+     */
+    if (strlen(szFile) == 1) {
+        /*
+         * If the file is only one char (like in the case of / or .) then
+	 * just pass that through to sub_canonical_filename.  Convert a
+	 * '/' to '\\' if necessary.
+         */
+        if (szFile[0] == '/') {
+            b2[0] = '\\';
+	}
+        else {
+            b2[0] = szFile[0];
+	}
+
+        b2[1] = '\0';
+    }
+    else {
+        for (s = szFile, d = b2; (*d = *s); ++d, ++s) {
+	    if (*s == '/') {
+		*d = '\\';
+	    }
+	    if (*s == '.' && (s[1] == '/' || s[1] == '\\' || !s[1])) {
+		while (*d == '.') {
+		    --d;
+		}
+		if (*d == '\\') {
+		    --d;
+		}
 	    }
 	}
-    // Finally, a trailing slash(es) screws thing, so blow them away
-    for(nSlashes=0 ; d > b2 && d[-1] == '\\' ; --d,++nSlashes)
-	;
-    /* XXXX this breaks '/' and 'c:/' cases */
-    *d='\0';
 
+        /* Finally, a trailing slash(es) screws thing, so blow them away */
+        for (nSlashes = 0; d > b2 && d[-1] == '\\'; --d, ++nSlashes)
+	    ;
+        /* XXXX this breaks '/' and 'c:/' cases */
+        *d = '\0';
+    }
     sub_canonical_filename(buf, sizeof buf, b2);
 
-    buf[0]=ap_tolower(buf[0]);
+    buf[0] = ap_tolower(buf[0]);
 
     ap_assert(strlen(buf)+nSlashes < sizeof buf);
-    while(nSlashes--)
+    while (nSlashes--) {
         strcat(buf, "/");
+    }
 
     return ap_pstrdup(pPool, buf);
 }
 
 /* Win95 doesn't like trailing /s. NT and Unix don't mind. This works 
  * around the problem.
@@ -158,42 +203,46 @@
 
     /* be sure it is has a drive letter or is a UNC path; everything
      * _must_ be canonicalized before getting to this point.  
      */
     if (szPath[1] != ':' && szPath[1] != '/') {
 	ap_log_error(APLOG_MARK, APLOG_ERR, NULL, 
-	    "Invalid path in os_stat: \"%s\", should have a drive letter "
-	    "or be a UNC path", szPath);
+		     "Invalid path in os_stat: \"%s\", "
+		     "should have a drive letter or be a UNC path",
+		     szPath);
 	return (-1);
     }
 
-    if(szPath[0] == '/') {
+    if (szPath[0] == '/') {
 	char buf[_MAX_PATH];
 	char *s;
-	int nSlashes=0;
+	int nSlashes = 0;
 
 	ap_assert(strlen(szPath) < _MAX_PATH);
-	strcpy(buf,szPath);
-	for(s=buf ; *s ; ++s)
-	    if(*s == '/') {
-		*s='\\';
+	strcpy(buf, szPath);
+	for (s = buf; *s; ++s) {
+	    if (*s == '/') {
+		*s = '\\';
 		++nSlashes;
 	    }
-	if(nSlashes == 3)   /* then we need to add one more to get \\machine\share\ */
-	    *s++='\\';
-	*s='\0';
-	return stat(buf,pStat);
+	}
+	/* then we need to add one more to get \\machine\share\ */
+	if (nSlashes == 3) {
+	    *s++ = '\\';
+	}
+	*s = '\0';
+	return stat(buf, pStat);
     }
 
     n = strlen(szPath);
-    if(szPath[n-1] == '\\' || szPath[n-1] == '/') {
+    if (szPath[n - 1] == '\\' || szPath[n - 1] == '/') {
         char buf[_MAX_PATH];
         
         ap_assert(n < _MAX_PATH);
         strcpy(buf, szPath);
-        buf[n-1] = '\0';
+        buf[n - 1] = '\0';
         
         return stat(buf, pStat);
     }
     return stat(szPath, pStat);
 }
 
@@ -201,126 +250,137 @@
  *
  *  1. Win32 doesn't deal with spaces in argv.
  *  2. Win95 doesn't like / in cmdname.
  */
 
 #undef _spawnv
-API_EXPORT(int) os_spawnv(int mode, const char *cmdname, const char *const *argv)
+API_EXPORT(int) os_spawnv(int mode, const char *cmdname,
+			  const char *const *argv)
 {
     int n;
     char **aszArgs;
     const char *szArg;
     char *szCmd;
     char *s;
     
     szCmd = _alloca(strlen(cmdname)+1);
     strcpy(szCmd, cmdname);
-    for (s = szCmd; *s; ++s)
-        if (*s == '/')
+    for (s = szCmd; *s; ++s) {
+        if (*s == '/') {
             *s = '\\';
-    
-    for (n=0; argv[n]; ++n)
+	}
+    }
+
+    for (n = 0; argv[n]; ++n)
         ;
 
-    aszArgs = _alloca((n+1)*sizeof(const char *));
+    aszArgs = _alloca((n + 1) * sizeof(const char *));
 
-    for (n = 0; szArg = argv[n]; ++n)
+    for (n = 0; szArg = argv[n]; ++n) {
         if (strchr(szArg, ' ')) {
             int l = strlen(szArg);
 
-            aszArgs[n] = _alloca(l+2+1);
+            aszArgs[n] = _alloca(l + 2 + 1);
             aszArgs[n][0] = '"';
             strcpy(&aszArgs[n][1], szArg);
-            aszArgs[n][l+1] = '"';
-            aszArgs[n][l+2] = '\0';
+            aszArgs[n][l + 1] = '"';
+            aszArgs[n][l + 2] = '\0';
         }
         else {
             aszArgs[n] = (char *)szArg;
         }
+    }
 
     aszArgs[n] = NULL;
 
     return _spawnv(mode, szCmd, aszArgs);
 }
 
 #undef _spawnve
-API_EXPORT(int) os_spawnve(int mode, const char *cmdname, const char *const *argv, const char *const *envp)
+API_EXPORT(int) os_spawnve(int mode, const char *cmdname,
+			   const char *const *argv, const char *const *envp)
 {
     int n;
     char **aszArgs;
     const char *szArg;
     char *szCmd;
     char *s;
     
     szCmd = _alloca(strlen(cmdname)+1);
     strcpy(szCmd, cmdname);
-    for (s = szCmd; *s; ++s)
-        if (*s == '/')
+    for (s = szCmd; *s; ++s) {
+        if (*s == '/') {
             *s = '\\';
+	}
+    }
     
-    for (n = 0; argv[n] ; ++n)
+    for (n = 0; argv[n]; ++n)
         ;
 
-    aszArgs = _alloca((n+1)*sizeof(const char *));
+    aszArgs = _alloca((n + 1)*sizeof(const char *));
 
-    for (n = 0; szArg=argv[n]; ++n)
+    for (n = 0; szArg = argv[n]; ++n){
         if (strchr(szArg, ' ')) {
             int l = strlen(szArg);
 
-            aszArgs[n] = _alloca(l+2+1);
+            aszArgs[n] = _alloca(l + 2 + 1);
             aszArgs[n][0] = '"';
             strcpy(&aszArgs[n][1], szArg);
-            aszArgs[n][l+1] = '"';
-            aszArgs[n][l+2] = '\0';
+            aszArgs[n][l + 1] = '"';
+            aszArgs[n][l + 2] = '\0';
         }
         else {
-            aszArgs[n]=(char *)szArg;
+            aszArgs[n] = (char *)szArg;
         }
+    }
 
     aszArgs[n] = NULL;
 
     return _spawnve(mode, szCmd, aszArgs, envp);
 }
 
-API_EXPORT(int) os_spawnle(int mode, const char *cmdname,...)
+API_EXPORT(int) os_spawnle(int mode, const char *cmdname, ...)
 {
     int n;
     va_list vlist;
     char **aszArgs;
     const char *szArg;
     const char *const *aszEnv;
     char *szCmd;
     char *s;
     
     szCmd = _alloca(strlen(cmdname)+1);
     strcpy(szCmd, cmdname);
-    for (s = szCmd; *s; ++s)
-        if(*s == '/')
+    for (s = szCmd; *s; ++s) {
+        if (*s == '/') {
             *s = '\\';
+	}
+    }
 
     va_start(vlist, cmdname);
     for (n = 0; va_arg(vlist, const char *); ++n)
         ;
     va_end(vlist);
 
-    aszArgs = _alloca((n+1)*sizeof(const char *));
+    aszArgs = _alloca((n + 1) * sizeof(const char *));
 
     va_start(vlist, cmdname);
-    for (n = 0 ; szArg = va_arg(vlist, const char *) ; ++n)
-        if (strchr(szArg,' ')) {
+    for (n = 0; szArg = va_arg(vlist, const char *); ++n) {
+        if (strchr(szArg, ' ')) {
             int l = strlen(szArg);
 
-            aszArgs[n] = _alloca(l+2+1);
+            aszArgs[n] = _alloca(l + 2 + 1);
             aszArgs[n][0] = '"';
-            strcpy(&aszArgs[n][1],szArg);
-            aszArgs[n][l+1] = '"';
-            aszArgs[n][l+2] = '\0';
+            strcpy(&aszArgs[n][1], szArg);
+            aszArgs[n][l + 1] = '"';
+            aszArgs[n][l + 2] = '\0';
         }
         else {
-            aszArgs[n]=(char *)szArg;
+            aszArgs[n] = (char *)szArg;
         }
+    }
 
     aszArgs[n] = NULL;
 
     aszEnv = va_arg(vlist, const char *const *);
     va_end(vlist);
     
diff -BEr -U 6 apache_1.3.1/src/PORTING apache_1.3.2/src/PORTING
--- apache_1.3.1/src/PORTING	1998-07-13 20:35:51.000000000 +0800
+++ apache_1.3.2/src/PORTING	1998-09-18 05:13:58.000000000 +0800
@@ -370,17 +370,6 @@
 sending Email to that address as well and, if you are lucky, someone
 will respond. Another good source is the 'comp.infosystems.www.servers.unix'
 Usenet group as well.
 
 Good luck and happy porting!
 
-
-----------------------------
-Appendix: OS-Specific Notes:
-----------------------------
-A/UX:
-  Don't even try with cc. Instead, use gcc-2.7.2 and the libUTIL.a
-  function library, both of which are available on jagubox.gsfc.nasa.gov.
-  libUTIL.a includes many basic functions that Apache (and other software)
-  requires as well as fixed versions of functions in libc.a. Contact
-  Jim Jagielski (jim@apache.org) if you need a precompiled build for
-  A/UX 3.1.x.
diff -BEr -U 6 apache_1.3.1/src/regex/regcomp.c apache_1.3.2/src/regex/regcomp.c
--- apache_1.3.1/src/regex/regcomp.c	1998-07-13 19:32:52.000000000 +0800
+++ apache_1.3.2/src/regex/regcomp.c	1998-09-16 03:47:45.000000000 +0800
@@ -80,12 +80,13 @@
  = #define	REG_NOSUB	0004
  = #define	REG_NEWLINE	0010
  = #define	REG_NOSPEC	0020
  = #define	REG_PEND	0040
  = #define	REG_DUMP	0200
  */
+ap_private_extern
 API_EXPORT(int)			/* 0 success, otherwise REG_something */
 regcomp(preg, pattern, cflags)
 regex_t *preg;
 const char *pattern;
 int cflags;
 {
diff -BEr -U 6 apache_1.3.1/src/regex/regex2.h apache_1.3.2/src/regex/regex2.h
--- apache_1.3.1/src/regex/regex2.h	1998-07-09 08:04:56.000000000 +0800
+++ apache_1.3.2/src/regex/regex2.h	1998-09-16 03:47:45.000000000 +0800
@@ -5,12 +5,18 @@
  = #define API_EXPORT(type)    __declspec(dllexport) type __stdcall
  = #else
  = #define API_EXPORT(type)    type
  = #endif
  = #endif
  =
+ = #if defined(RHAPSODY) || defined(NEXT)
+ = #define ap_private_extern __private_extern__
+ = #else
+ = #define ap_private_extern
+ = #endif
+ =
  = typedef off_t regoff_t;
  = typedef struct {
  = 	int re_magic;
  = 	size_t re_nsub;		// number of parenthesized subexpressions
  = 	const char *re_endp;	// end pointer for REG_PEND
  = 	struct re_guts *re_g;	// none of your business :-)
diff -BEr -U 6 apache_1.3.1/src/regex/regexec.c apache_1.3.2/src/regex/regexec.c
--- apache_1.3.1/src/regex/regexec.c	1998-02-05 02:18:55.000000000 +0800
+++ apache_1.3.2/src/regex/regexec.c	1998-09-16 03:47:45.000000000 +0800
@@ -108,12 +108,13 @@
  = #define	REG_BACKR	02000	// force use of backref code
  *
  * We put this here so we can exploit knowledge of the state representation
  * when choosing which matcher to call.  Also, by this point the matchers
  * have been prototyped.
  */
+ap_private_extern
 API_EXPORT(int)				/* 0 success, REG_NOMATCH failure */
 regexec(preg, string, nmatch, pmatch, eflags)
 const regex_t *preg;
 const char *string;
 size_t nmatch;
 regmatch_t pmatch[];
diff -BEr -U 6 apache_1.3.1/src/regex/regfree.c apache_1.3.2/src/regex/regfree.c
--- apache_1.3.1/src/regex/regfree.c	1998-02-05 02:18:55.000000000 +0800
+++ apache_1.3.2/src/regex/regfree.c	1998-09-16 03:47:45.000000000 +0800
@@ -7,12 +7,13 @@
 #include "regex2.h"
 
 /*
  - regfree - free everything
  = API_EXPORT(void) regfree(regex_t *);
  */
+ap_private_extern
 API_EXPORT(void)
 regfree(preg)
 regex_t *preg;
 {
 	register struct re_guts *g;
 
diff -BEr -U 6 apache_1.3.1/src/support/ab.c apache_1.3.2/src/support/ab.c
--- apache_1.3.1/src/support/ab.c	1998-07-16 02:33:12.000000000 +0800
+++ apache_1.3.2/src/support/ab.c	1998-09-05 04:48:44.000000000 +0800
@@ -76,26 +76,57 @@
 ** HISTORY: 
 **    - Originally written by Adam Twiss <adam@zeus.co.uk>, March 1996
 **      with input from Mike Belshe <mbelshe@netscape.com> and 
 **      Michael Campanella <campanella@stevms.enet.dec.com>
 **    - Enhanced by Dean Gaudet <dgaudet@apache.org>, November 1997
 **    - Cleaned up by Ralf S. Engelschall <rse@apache.org>, March 1998 
+**    - POST and verbosity by Kurt Sussman <kls@merlot.com>, August 1998 
 **
 */
 
-#define VERSION "1.1"
+/*
+ * BUGS:
+ *
+ * - uses strcpy/etc.
+ * - has various other poor buffer attacks related to the lazy parsing of
+ *   response headers from the server
+ * - doesn't implement much of HTTP/1.x, only accepts certain forms of
+ *   responses
+ * - (performance problem) heavy use of strstr shows up top in profile
+ *   only an issue for loopback usage
+ */
+
+#define VERSION "1.2"
 
 /*  -------------------------------------------------------------------- */
 
 /* affects include files on Solaris */
 #define BSD_COMP
 
+/* allow compilation outside an Apache build tree */
+#ifdef NO_APACHE_INCLUDES
+#include <sys/time.h>
+#include <sys/ioctl.h>
+#include <sys/stat.h>
+#include <unistd.h>
+#include <stdlib.h>
+#include <stdio.h>
+#include <fcntl.h>
+#include <sys/socket.h>
+#include <netinet/in.h>
+#include <netdb.h>
+#include <errno.h>
+#include <sys/ioctl.h>
+#include <string.h>
+
+#define ap_select	select
+#else /* (!)NO_APACHE_INCLUDES */
 #include "ap_config.h"
 #include <fcntl.h>
 #include <sys/time.h>
-
+#endif /* NO_APACHE_INCLUDES */
 /* ------------------- DEFINITIONS -------------------------- */
 
 /* maximum number of requests on a time limited test */
 #define MAX_REQUESTS 50000
 
 /* good old state hostname */
@@ -126,39 +157,47 @@
 
 #define min(a,b) ((a)<(b))?(a):(b)
 #define max(a,b) ((a)>(b))?(a):(b)
 
 /* --------------------- GLOBALS ---------------------------- */
 
+int verbosity = 0;              /* no verbosity by default */
+int posting = 0;                /* GET by default */
 int requests = 1;               /* Number of requests to make */
 int concurrency = 1;            /* Number of multiple requests to make */
 int tlimit = 0;                 /* time limit in cs */
 int keepalive = 0;              /* try and do keepalive connections */
 char servername[1024];          /* name that server reports */
 char hostname[1024];            /* host name */
 char path[1024];                /* path name */
+char postfile[1024];            /* name of file containing post data */
+char* postdata;                 /* *buffer containing data from postfile */
+int postlen = 0;                /* length of data to be POSTed */
+char content_type[1024];        /* content type to put in POST header */
 int port = 80;                  /* port number */
 
 int doclen = 0;                 /* the length the document should be */
 int totalread = 0;              /* total number of bytes read */
 int totalbread = 0;             /* totoal amount of entity body read */
+int totalposted = 0;            /* total number of bytes posted, inc. headers */
 int done = 0;                   /* number of requests we have done */
 int doneka = 0;                 /* number of keep alive connections done */
 int good = 0, bad = 0;          /* number of good and bad requests */
 
 /* store error cases */
 int err_length = 0, err_conn = 0, err_except = 0;
+int err_response = 0;
 
 struct timeval start, endtime;
 
 /* global request (and its length) */
 char request[512];
 int reqlen;
 
 /* one global throw-away buffer to read stuff into */
-char buffer[4096];
+char buffer[8192];
 
 struct connection *con;         /* connection array */
 struct data *stats;             /* date for each request */
 
 fd_set readbits, writebits;     /* bits for select */
 struct sockaddr_in server;      /* server addr structure */
@@ -166,25 +205,36 @@
 /* --------------------------------------------------------- */
 
 /* simple little function to perror and exit */
 
 static void err(char *s)
 {
-    perror(s);
+    if (errno) {
+    	perror(s);
+    }
+    else {
+	printf("%s", s);
+    }
     exit(errno);
 }
 
 /* --------------------------------------------------------- */
 
 /* write out request to a connection - assumes we can write 
    (small) request out in one go into our new socket buffer  */
 
 static void write_request(struct connection *c)
 {
     gettimeofday(&c->connect, 0);
+    /* XXX: this could use writev for posting -- more efficient -djg */
     write(c->fd, request, reqlen);
+    if (posting) {
+        write(c->fd,postdata, postlen);
+        totalposted += (reqlen + postlen); 
+    }
+
     c->state = STATE_READ;
     FD_SET(c->fd, &readbits);
     FD_CLR(c->fd, &writebits);
 }
 
 /* --------------------------------------------------------- */
@@ -211,13 +261,13 @@
     s *= 1000;
     return s + us;
 }
 
 /* --------------------------------------------------------- */
 
-/* calculate and output results and exit */
+/* calculate and output results */
 
 static void output_results(void)
 {
     int timetaken;
 
     gettimeofday(&endtime, 0);
@@ -236,22 +286,32 @@
            timetaken / 1000, timetaken % 1000);
     printf("Complete requests:      %d\n", done);
     printf("Failed requests:        %d\n", bad);
     if (bad)
         printf("   (Connect: %d, Length: %d, Exceptions: %d)\n",
                err_conn, err_length, err_except);
+    if (err_response)
+        printf("Non-2xx responses:      %d\n", err_response);
     if (keepalive)
         printf("Keep-Alive requests:    %d\n", doneka);
     printf("Total transferred:      %d bytes\n", totalread);
+    if (posting)
+        printf("Total POSTed:           %d\n", totalposted);
     printf("HTML transferred:       %d bytes\n", totalbread);
 
     /* avoid divide by zero */
     if (timetaken) {
         printf("Requests per second:    %.2f\n", 1000 * (float) (done) / timetaken);
-        printf("Transfer rate:          %.2f kb/s\n",
+        printf("Transfer rate:          %.2f kb/s received\n",
                (float) (totalread) / timetaken);
+        if (posting) {
+            printf("                        %.2f kb/s sent\n", 
+       		    (float)(totalposted)/timetaken);
+            printf("                        %.2f kb/s total\n", 
+           	    (float)(totalread + totalposted)/timetaken);
+        }
     }
 
     {
         /* work out connection times */
         int i;
         int totalcon = 0, total = 0;
@@ -265,18 +325,19 @@
             maxcon = max(maxcon, s.ctime);
             maxtot = max(maxtot, s.time);
             totalcon += s.ctime;
             total += s.time;
         }
         printf("\nConnnection Times (ms)\n");
-        printf("           min   avg   max\n");
-        printf("Connect: %5d %5d %5d\n", mincon, totalcon / requests, maxcon);
-        printf("Total:   %5d %5d %5d\n", mintot, total / requests, maxtot);
+        printf("              min   avg   max\n");
+        printf("Connect:    %5d %5d %5d\n", mincon, totalcon / requests, maxcon);
+        printf("Processing: %5d %5d %5d\n", 
+            mintot - mincon, (total/requests) - (totalcon/requests),
+            maxtot - maxcon);
+        printf("Total:      %5d %5d %5d\n", mintot, total / requests, maxtot);
     }
-
-    exit(0);
 }
 
 /* --------------------------------------------------------- */
 
 /* start asnchronous non-blocking connection */
 
@@ -302,14 +363,13 @@
             return;
         }
         else {
             close(c->fd);
             err_conn++;
             if (bad++ > 10) {
-                printf("\nTest aborted after 10 failures\n\n");
-                exit(1);
+                err("\nTest aborted after 10 failures\n\n");
             }
             start_connect(c);
         }
     }
 
     /* connected first time */
@@ -320,13 +380,13 @@
 
 /* close down connection and save stats */
 
 static void close_connection(struct connection *c)
 {
     if (c->read == 0 && c->keepalive) {
-        /* server has legitiamately shut down an idle keep alive request */
+        /* server has legitimately shut down an idle keep alive request */
         good--;                 /* connection never happend */
     }
     else {
         if (good == 1) {
             /* first time here */
             doclen = c->bread;
@@ -360,12 +420,14 @@
 
 /* read data from connection */
 
 static void read_connection(struct connection *c)
 {
     int r;
+    char *part;
+    char respcode[4];  /* 3 digits and null */
 
     r = read(c->fd, buffer, sizeof(buffer));
     if (r == 0 || (r < 0 && errno != EAGAIN)) {
         good++;
         close_connection(c);
         return;
@@ -379,16 +441,23 @@
 
     if (!c->gotheader) {
         char *s;
         int l = 4;
         int space = CBUFFSIZE - c->cbx - 1;     /* -1 to allow for 0 terminator */
         int tocopy = (space < r) ? space : r;
+#ifndef CHARSET_EBCDIC
         memcpy(c->cbuff + c->cbx, buffer, space);
+#else /*CHARSET_EBCDIC*/
+        ascii2ebcdic(c->cbuff + c->cbx, buffer, space);
+#endif /*CHARSET_EBCDIC*/
         c->cbx += tocopy;
         space -= tocopy;
         c->cbuff[c->cbx] = 0;   /* terminate for benefit of strstr */
+	if (verbosity >= 4) {
+	    printf("LOG: header received:\n%s\n", c->cbuff);
+	}
         s = strstr(c->cbuff, "\r\n\r\n");
         /* this next line is so that we talk to NCSA 1.5 which blatantly breaks 
            the http specifaction */
         if (!s) {
             s = strstr(c->cbuff, "\n\n");
             l = 2;
@@ -399,14 +468,13 @@
             if (space)
                 return;
             else {
                 /* header is in invalid or too big - close connection */
                 close(c->fd);
                 if (bad++ > 10) {
-                    printf("\nTest aborted after 10 failures\n\n");
-                    exit(1);
+                    err("\nTest aborted after 10 failures\n\n");
                 }
                 FD_CLR(c->fd, &writebits);
                 start_connect(c);
             }
         }
         else {
@@ -421,21 +489,37 @@
                     while (*p > 32)
                         *q++ = *p++;
                 }
                 *q = 0;
             }
 
+	    /* XXX: this parsing isn't even remotely HTTP compliant...
+	     * but in the interest of speed it doesn't totally have to be,
+	     * it just needs to be extended to handle whatever servers
+	     * folks want to test against. -djg */
+
+            /* check response code */
+            part = strstr(c->cbuff, "HTTP");                /* really HTTP/1.x_ */
+            strncpy(respcode, (part+strlen("HTTP/1.x_")), 3);
+	    respcode[3] = '\0';
+            if (respcode[0] != '2') {
+                err_response++;
+                if (verbosity >= 2) printf ("WARNING: Response code not 2xx (%s)\n", respcode);
+            }
+	    else if (verbosity >= 3) {
+                printf("LOG: Response code = %s\n", respcode);
+            }
+
             c->gotheader = 1;
             *s = 0;             /* terminate at end of header */
             if (keepalive &&
                 (strstr(c->cbuff, "Keep-Alive")
                  || strstr(c->cbuff, "keep-alive"))) {  /* for benefit of MSIIS */
                 char *cl;
                 cl = strstr(c->cbuff, "Content-Length:");
-                /* for cacky servers like NCSA which break the spec and send a 
-                   lower case 'l' */
+                /* handle NCSA, which sends Content-length: */
                 if (!cl)
                     cl = strstr(c->cbuff, "Content-length:");
                 if (cl) {
                     c->keepalive = 1;
                     c->length = atoi(cl + 16);
                 }
@@ -496,13 +580,13 @@
 
     {
         /* get server information */
         struct hostent *he;
         he = gethostbyname(hostname);
         if (!he)
-            err("gethostbyname");
+            err("bad hostname");
         server.sin_family = he->h_addrtype;
         server.sin_port = htons(port);
         server.sin_addr.s_addr = ((unsigned long *) (he->h_addr_list[0]))[0];
     }
 
     con = malloc(concurrency * sizeof(struct connection));
@@ -511,25 +595,48 @@
     stats = malloc(requests * sizeof(struct data));
 
     FD_ZERO(&readbits);
     FD_ZERO(&writebits);
 
     /* setup request */
-    sprintf(request, "GET %s HTTP/1.0\r\n"
+    if (!posting) {
+	sprintf(request, "GET %s HTTP/1.0\r\n"
                      "User-Agent: ApacheBench/%s\r\n"
                      "%s"
                      "Host: %s\r\n"
                      "Accept: */*\r\n"
                      "\r\n", 
                      path, 
                      VERSION,
                      keepalive ? "Connection: Keep-Alive\r\n" : "", 
                      hostname);
+    }
+    else {
+	sprintf(request, "POST %s HTTP/1.0\r\n"
+                     "User-Agent: ApacheBench/%s\r\n"
+                     "%s"
+                     "Host: %s\r\n"
+                     "Accept: */*\r\n"
+                     "Content-length: %d\r\n"
+                     "Content-type: %s\r\n"
+                     "\r\n", 
+                     path, 
+                     VERSION,
+                     keepalive ? "Connection: Keep-Alive\r\n" : "", 
+                     hostname, postlen, 
+                     (content_type[0]) ? content_type : "text/plain");
+    }
+
+    if (verbosity >= 2) printf("INFO: POST header == \n---\n%s\n---\n", request);
 
     reqlen = strlen(request);
 
+#ifdef CHARSET_EBCDIC
+    ebcdic2ascii(request, request, reqlen);
+#endif /*CHARSET_EBCDIC*/
+
     /* ok - lets start */
     gettimeofday(&start, 0);
 
     /* initialise lots of requests */
     for (i = 0; i < concurrency; i++)
         start_connect(&con[i]);
@@ -542,22 +649,20 @@
         memcpy(&sel_write, &writebits, sizeof(readbits));
 
         /* check for time limit expiry */
         gettimeofday(&now, 0);
         if (tlimit && timedif(now, start) > (tlimit * 1000)) {
             requests = done;    /* so stats are correct */
-            output_results();
         }
 
         /* Timeout of 30 seconds. */
         timeout.tv_sec = 30;
         timeout.tv_usec = 0;
         n = ap_select(FD_SETSIZE, &sel_read, &sel_write, &sel_except, &timeout);
         if (!n) {
-            printf("\nServer timed out\n\n");
-            exit(1);
+            err("\nServer timed out\n\n");
         }
         if (n < 1)
             err("select");
 
         for (i = 0; i < concurrency; i++) {
             int s = con[i].fd;
@@ -569,15 +674,14 @@
             }
             if (FD_ISSET(s, &sel_read))
                 read_connection(&con[i]);
             if (FD_ISSET(s, &sel_write))
                 write_request(&con[i]);
         }
-        if (done >= requests)
-            output_results();
     }
+    output_results();
 }
 
 /* ------------------------------------------------------- */
 
 /* display copyright information */
 static void copyright(void) 
@@ -593,14 +697,17 @@
 {
     fprintf(stderr, "Usage: %s [options] [http://]hostname[:port]/path\n", progname);
     fprintf(stderr, "Options are:\n");
     fprintf(stderr, "    -n requests     Number of requests to perform\n");
     fprintf(stderr, "    -c concurrency  Number of multiple requests to make\n");
     fprintf(stderr, "    -t timelimit    Seconds to max. wait for responses\n");
+    fprintf(stderr, "    -p postfile     File containg data to POST\n");
+    fprintf(stderr, "    -T content-type Content-type header for POSTing\n");
+    fprintf(stderr, "    -v verbosity    How much troubleshooting info to print\n");
+    fprintf(stderr, "    -V              Print version number and exit\n");
     fprintf(stderr, "    -k              Use HTTP KeepAlive feature\n");
-    fprintf(stderr, "    -v              Display version and copyright information\n");
     fprintf(stderr, "    -h              Display usage information (this message)\n");
     exit(EINVAL);
 }
 
 /* ------------------------------------------------------- */
 
@@ -629,40 +736,83 @@
         port = atoi(p);
     return 0;
 }
 
 /* ------------------------------------------------------- */
 
+/* read data to POST from file, save contents and length */
+
+static int open_postfile(char *pfile)
+{
+    int postfd, status;
+    struct stat postfilestat;
+
+    if ((postfd = open(pfile, O_RDONLY)) == -1) {
+        printf("Invalid postfile name (%s)\n", pfile);
+        return errno;
+    }
+    if ((status = fstat(postfd, &postfilestat)) == -1) {
+        perror("Can\'t stat postfile\n");
+        return status;
+    }
+    postdata = malloc(postfilestat.st_size);
+    if (!postdata) {
+        printf("Can\'t alloc postfile buffer\n");
+        return ENOMEM;
+    }
+    if (read(postfd, postdata, postfilestat.st_size) != postfilestat.st_size) {
+        printf("error reading postfilen");
+        return EIO;
+    }
+    postlen = postfilestat.st_size;
+    return 0;
+}
+
+/* ------------------------------------------------------- */
+
 extern char *optarg;
 extern int optind, opterr, optopt;
 
 /* sort out command-line args and call test */
 int main(int argc, char **argv)
 {
-    int c;
+    int c, r;
     optind = 1;
-    while ((c = getopt(argc, argv, "n:c:t:kvh")) > 0) {
+    while ((c = getopt(argc, argv, "n:c:t:T:p:v:kVh")) > 0) {
         switch (c) {
         case 'n':
             requests = atoi(optarg);
             if (!requests) {
-                printf("Invalid number of requests\n");
-                exit(1);
+                err("Invalid number of requests\n");
             }
             break;
         case 'k':
             keepalive = 1;
             break;
         case 'c':
             concurrency = atoi(optarg);
             break;
+        case 'p':
+            if (0 == (r = open_postfile(optarg))) {
+                posting = 1;
+            }
+	    else if (postdata) {
+                exit(r);
+	    }
+            break;
+        case 'v':
+            verbosity = atoi(optarg);
+            break;
         case 't':
             tlimit = atoi(optarg);
             requests = MAX_REQUESTS;    /* need to size data array on something */
             break;
-        case 'v':
+        case 'T':
+            strcpy(content_type, optarg);
+            break;
+        case 'V':
             copyright();
             exit(0);
             break;
         case 'h':
             usage(argv[0]);
             break;
diff -BEr -U 6 apache_1.3.1/src/support/apxs.pl apache_1.3.2/src/support/apxs.pl
--- apache_1.3.1/src/support/apxs.pl	1998-05-28 18:55:18.000000000 +0800
+++ apache_1.3.2/src/support/apxs.pl	1998-08-03 16:44:08.000000000 +0800
@@ -70,12 +70,13 @@
 
 my $CFG_CC            = '@CC@';            # substituted via Makefile.tmpl
 my $CFG_CFLAGS        = '@CFLAGS@';        # substituted via Makefile.tmpl
 my $CFG_CFLAGS_SHLIB  = '@CFLAGS_SHLIB@';  # substituted via Makefile.tmpl
 my $CFG_LD_SHLIB      = '@LD_SHLIB@';      # substituted via Makefile.tmpl
 my $CFG_LDFLAGS_SHLIB = '@LDFLAGS_SHLIB@'; # substituted via Makefile.tmpl 
+my $CFG_LIBS_SHLIB    = '@LIBS_SHLIB@';    # substituted via Makefile.tmpl 
 my $CFG_PREFIX        = '@prefix@';        # substituted via APACI install
 my $CFG_SBINDIR       = '@sbindir@';       # substituted via APACI install
 my $CFG_INCLUDEDIR    = '@includedir@';    # substituted via APACI install
 my $CFG_LIBEXECDIR    = '@libexecdir@';    # substituted via APACI install
 my $CFG_SYSCONFDIR    = '@sysconfdir@';    # substituted via APACI install
 
@@ -349,12 +350,13 @@
         $opt .= " -L$opt_L";
     }
     foreach $opt_l (@opt_l) {
         $opt .= " -l$opt_l";
     }
     $cmd .= $opt;
+    $cmd .= " $CFG_LIBS_SHLIB";
     push(@cmds, $cmd);
 
     #   execute the commands
     &execute_cmds(@cmds);
 
     #   allow one-step compilation and installation
diff -BEr -U 6 apache_1.3.1/src/support/dbmmanage.1 apache_1.3.2/src/support/dbmmanage.1
--- apache_1.3.1/src/support/dbmmanage.1	1998-03-31 20:53:47.000000000 +0800
+++ apache_1.3.2/src/support/dbmmanage.1	1998-09-12 19:16:33.000000000 +0800
@@ -81,14 +81,13 @@
 .B httpd 
 see
 the Apache manual, which is part of the Apache distribution or can be
 found at http://www.apache.org/.
 .SH OPTIONS
 .IP \fB\fIfilename\fP
-The filename of the DBM format file. Usually without the extension .pag or
-.dir.
+The filename of the DBM format file. Usually without the extension .pag or .dir.
 .IP \fB\fIcommand\fP
 This selects the operation to perform:
 .TP 12
 .B adduser
 Asks for a password and then adds an entry for \fIusername\fP to
 \fIfilename\fP .
diff -BEr -U 6 apache_1.3.1/src/support/htdigest.c apache_1.3.2/src/support/htdigest.c
--- apache_1.3.1/src/support/htdigest.c	1998-07-13 19:32:58.000000000 +0800
+++ apache_1.3.2/src/support/htdigest.c	1998-08-03 17:15:32.000000000 +0800
@@ -193,13 +193,13 @@
     if (!found) {
 	printf("Adding user %s in realm %s\n", user, realm);
 	add_password(user, realm, tfp);
     }
     fclose(f);
     fclose(tfp);
-#if defined(__EMX__) || defined(WIN32)
+#if defined(OS2) || defined(WIN32)
     sprintf(command, "copy \"%s\" \"%s\"", tn, argv[1]);
 #else
     sprintf(command, "cp %s %s", tn, argv[1]);
 #endif
     system(command);
     unlink(tn);
diff -BEr -U 6 apache_1.3.1/src/support/httpd.exp apache_1.3.2/src/support/httpd.exp
--- apache_1.3.1/src/support/httpd.exp	1998-06-10 20:40:26.000000000 +0800
+++ apache_1.3.2/src/support/httpd.exp	1998-09-02 04:21:14.000000000 +0800
@@ -93,12 +93,13 @@
 ap_escape_html
 ap_escape_path_segment
 ap_escape_quotes
 ap_escape_shell_cmd
 ap_excess_requests_per_child
 ap_exists_scoreboard_image
+ap_extended_status
 ap_finalize_request_protocol
 ap_finalize_sub_req_protocol
 ap_find_command
 ap_find_command_in_modules
 ap_find_last_token
 ap_find_linked_module
@@ -164,12 +165,13 @@
 ap_log_assert
 ap_log_error
 ap_log_error_old
 ap_log_pid
 ap_log_printf
 ap_log_reason
+ap_log_rerror
 ap_log_transaction
 ap_log_unixerr
 ap_make_array
 ap_make_dirstr
 ap_make_dirstr_parent
 ap_make_dirstr_prefix
@@ -195,12 +197,13 @@
 ap_null_cleanup
 ap_open_logs
 ap_open_piped_log
 ap_os_escape_path
 ap_os_is_path_absolute
 ap_overlay_tables
+ap_overlap_tables
 ap_palloc
 ap_parseHTTPdate
 ap_parse_hostinfo_components
 ap_parse_htaccess
 ap_parse_uri
 ap_parse_uri_components
diff -BEr -U 6 apache_1.3.1/src/support/Makefile.tmpl apache_1.3.2/src/support/Makefile.tmpl
--- apache_1.3.1/src/support/Makefile.tmpl	1998-07-13 19:32:57.000000000 +0800
+++ apache_1.3.2/src/support/Makefile.tmpl	1998-09-04 02:03:06.000000000 +0800
@@ -1,11 +1,11 @@
 
 CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
-LIBS=-lap $(EXTRA_LIBS) $(LIBS1)
+LIBS=-los -lap $(EXTRA_LIBS) $(LIBS1)
 INCLUDES=$(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)
-LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS) -L$(SRCDIR)/ap
+LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS) -L$(OSDIR) -L$(SRCDIR)/ap
 
 TARGETS=htpasswd htdigest rotatelogs logresolve ab apxs
 
 OBJS=htpasswd.o htdigest.o rotatelogs.o logresolve.o ab.o
 
 .c.o: 
@@ -28,16 +28,17 @@
 ab: ab.o
 	$(CC) $(CFLAGS) ab.o -o ab $(LDFLAGS) $(LIBS)
 
 apxs: apxs.pl
 	sed <apxs.pl >apxs \
 	    -e 's%@CC@%$(CC)%g' \
-	    -e 's%@LD_SHLIB@%$(LD_SHLIB)%g' \
 	    -e 's%@CFLAGS@%$(CFLAGS)%g' \
 	    -e 's%@CFLAGS_SHLIB@%$(CFLAGS_SHLIB)%g' \
-	    -e 's%@LDFLAGS_SHLIB@%$(LDFLAGS_SHLIB)%g' && chmod a+x apxs
+	    -e 's%@LD_SHLIB@%$(LD_SHLIB)%g' \
+	    -e 's%@LDFLAGS_SHLIB@%$(LDFLAGS_SHLIB)%g' \
+	    -e 's%@LIBS_SHLIB@%$(LIBS_SHLIB)%g' && chmod a+x apxs
 
 suexec: suexec.o
 	$(CC) $(CFLAGS) suexec.o -o suexec $(LDFLAGS) $(LIBS)
 
 clean:
 	rm -f $(TARGETS) *.o
diff -BEr -U 6 apache_1.3.1/src/support/rotatelogs.c apache_1.3.2/src/support/rotatelogs.c
--- apache_1.3.1/src/support/rotatelogs.c	1998-07-13 19:32:58.000000000 +0800
+++ apache_1.3.2/src/support/rotatelogs.c	1998-08-03 17:15:33.000000000 +0800
@@ -25,13 +25,13 @@
     char *szLogRoot;
 
     if (argc != 3) {
 	fprintf(stderr,
 		"%s <logfile> <rotation time in seconds>\n\n",
 		argv[0]);
-#ifdef __EMX__
+#ifdef OS2
 	fprintf(stderr,
 		"Add this:\n\nTransferLog \"|%s.exe /some/where 86400\"\n\n",
 		argv[0]);
 #else
 	fprintf(stderr,
 		"Add this:\n\nTransferLog \"|%s /some/where 86400\"\n\n",
diff -BEr -U 6 apache_1.3.1/src/support/suexec.c apache_1.3.2/src/support/suexec.c
--- apache_1.3.1/src/support/suexec.c	1998-07-13 19:32:59.000000000 +0800
+++ apache_1.3.2/src/support/suexec.c	1998-09-17 04:51:08.000000000 +0800
@@ -206,13 +206,17 @@
 
     if ((cleanenv = (char **) calloc(AP_ENVBUF, sizeof(char *))) == NULL) {
         log_err("failed to malloc memory for environment\n");
 	exit(120);
     }
 
-    for (ep = environ; *ep && cidx < AP_ENVBUF; ep++) {
+    sprintf(pathbuf, "PATH=%s", SAFE_PATH);
+    cleanenv[cidx] = strdup(pathbuf);
+    cidx++;
+
+    for (ep = environ; *ep && cidx < AP_ENVBUF-1; ep++) {
 	if (!strncmp(*ep, "HTTP_", 5)) {
 	    cleanenv[cidx] = *ep;
 	    cidx++;
 	}
 	else {
 	    for (idx = 0; safe_env_lst[idx]; idx++) {
@@ -223,15 +227,13 @@
 		    break;
 		}
 	    }
 	}
     }
 
-    sprintf(pathbuf, "PATH=%s", SAFE_PATH);
-    cleanenv[cidx] = strdup(pathbuf);
-    cleanenv[++cidx] = NULL;
+    cleanenv[cidx] = NULL;
 
     environ = cleanenv;
 }
 
 int main(int argc, char *argv[])
 {
Only in apache_1.3.2/: WARNING-NT.TXT

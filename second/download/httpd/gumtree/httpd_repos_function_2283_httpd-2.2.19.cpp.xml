<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2283_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">walk_cache_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">prep_walk_cache<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">t<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">request_rec<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">r<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">walk_cache_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">cache<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">void<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier><modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">note<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Find the most relevant, recent entry to work from.  That would be
     * this request (on the second call), or the parent request of a
     * subrequest, or the prior request of an internal redirect.  Provide
     * this _walk()er with a copy it is allowed to munge.  If there is no
     * parent or prior cached request, then create a new walk cache.
     */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">note<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">ap_get_request_note<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">r<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">t<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">note<pos:position pos:line="13" pos:column="14"/></name></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15"> <block pos:line="13" pos:column="16">{
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">cache<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <operator pos:line="17" pos:column="19">*<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">note<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">)<pos:position pos:line="17" pos:column="25"/></operator></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26"> <block pos:line="17" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">void<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier><modifier pos:line="18" pos:column="15">*<pos:position pos:line="18" pos:column="16"/></modifier></type><name pos:line="18" pos:column="16">inherit_note<pos:position pos:line="18" pos:column="28"/></name></decl>;<pos:position pos:line="18" pos:column="29"/></decl_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">r<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">main<pos:position pos:line="20" pos:column="21"/></name></name>
             <operator pos:line="21" pos:column="14">&amp;&amp;<pos:position pos:line="21" pos:column="24"/></operator> <operator pos:line="21" pos:column="17">(<pos:position pos:line="21" pos:column="18"/></operator><operator pos:line="21" pos:column="18">(<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">inherit_note<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <call><name pos:line="21" pos:column="34">ap_get_request_note<pos:position pos:line="21" pos:column="53"/></name><argument_list pos:line="21" pos:column="53">(<argument><expr><name><name pos:line="21" pos:column="54">r<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">-&gt;<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="57">main<pos:position pos:line="21" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="63">t<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call><operator pos:line="21" pos:column="65">)<pos:position pos:line="21" pos:column="66"/></operator><operator pos:line="21" pos:column="66">)<pos:position pos:line="21" pos:column="67"/></operator>
             <operator pos:line="22" pos:column="14">&amp;&amp;<pos:position pos:line="22" pos:column="24"/></operator> <operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">inherit_note<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator>
            <operator pos:line="23" pos:column="13">||<pos:position pos:line="23" pos:column="15"/></operator> <operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name><name pos:line="23" pos:column="17">r<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">prev<pos:position pos:line="23" pos:column="24"/></name></name>
                <operator pos:line="24" pos:column="17">&amp;&amp;<pos:position pos:line="24" pos:column="27"/></operator> <operator pos:line="24" pos:column="20">(<pos:position pos:line="24" pos:column="21"/></operator><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">inherit_note<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <call><name pos:line="24" pos:column="37">ap_get_request_note<pos:position pos:line="24" pos:column="56"/></name><argument_list pos:line="24" pos:column="56">(<argument><expr><name><name pos:line="24" pos:column="57">r<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="60">prev<pos:position pos:line="24" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="66">t<pos:position pos:line="24" pos:column="67"/></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call><operator pos:line="24" pos:column="68">)<pos:position pos:line="24" pos:column="69"/></operator><operator pos:line="24" pos:column="69">)<pos:position pos:line="24" pos:column="70"/></operator>
                <operator pos:line="25" pos:column="17">&amp;&amp;<pos:position pos:line="25" pos:column="27"/></operator> <operator pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">inherit_note<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">)<pos:position pos:line="25" pos:column="34"/></operator></expr>)<pos:position pos:line="25" pos:column="35"/></condition><then pos:line="25" pos:column="35"> <block pos:line="25" pos:column="36">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">cache<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">apr_pmemdup<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name><name pos:line="26" pos:column="33">r<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">pool<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="42">*<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="43">inherit_note<pos:position pos:line="26" pos:column="55"/></name></expr></argument>,
                                <argument><expr><sizeof pos:line="27" pos:column="33">sizeof<argument_list pos:line="27" pos:column="39">(<argument><expr><operator pos:line="27" pos:column="40">*<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">cache<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">cache<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">walked<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <call><name pos:line="28" pos:column="29">apr_array_copy<pos:position pos:line="28" pos:column="43"/></name><argument_list pos:line="28" pos:column="43">(<argument><expr><name><name pos:line="28" pos:column="44">r<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">pool<pos:position pos:line="28" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="53">cache<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">walked<pos:position pos:line="28" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then>
        <else pos:line="30" pos:column="9">else <block pos:line="30" pos:column="14">{
            <expr_stmt><expr><name pos:line="31" pos:column="13">cache<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <call><name pos:line="31" pos:column="21">apr_pcalloc<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">r<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">pool<pos:position pos:line="31" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="42">sizeof<argument_list pos:line="31" pos:column="48">(<argument><expr><operator pos:line="31" pos:column="49">*<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="50">cache<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">cache<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">walked<pos:position pos:line="32" pos:column="26"/></name></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <call><name pos:line="32" pos:column="29">apr_array_make<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><name><name pos:line="32" pos:column="44">r<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">pool<pos:position pos:line="32" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="53">4<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="56">sizeof<argument_list pos:line="32" pos:column="62">(<argument><expr><name pos:line="32" pos:column="63">walk_walked_t<pos:position pos:line="32" pos:column="76"/></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></else></if>

        <expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">note<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">cache<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">cache<pos:position pos:line="37" pos:column="17"/></name></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

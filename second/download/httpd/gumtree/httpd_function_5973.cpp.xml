<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5973.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_conn_setup<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">h2_task<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">task<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">apr_bucket_alloc_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">bucket_alloc<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">apr_thread_t<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">thread<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">apr_socket_t<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">socket<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">conn_rec<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">master<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">task<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">mplx<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">c<pos:position pos:line="4" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">ap_log_perror<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">APLOG_MARK<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="31">APLOG_TRACE3<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="45">0<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="48">task<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">pool<pos:position pos:line="6" pos:column="58"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="7" pos:column="19">"h2_conn(%ld): created from master"<pos:position pos:line="7" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="56">master<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">-&gt;<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="64">id<pos:position pos:line="7" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="68"/></expr_stmt>
    
    <comment type="block" pos:line="9" pos:column="5">/* Ok, we are just about to start processing the connection and
     * the worker is calling us to setup all necessary resources.
     * We can borrow some from the worker itself and some we do as
     * sub-resources from it, so that we get a nice reuse of
     * pools.
     */</comment>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">task<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">c<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">pool<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <name><name pos:line="15" pos:column="21">task<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">pool<pos:position pos:line="15" pos:column="31"/></name></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">task<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">c<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">current_thread<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">thread<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">task<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">c<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">bucket_alloc<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">bucket_alloc<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
    
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">task<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">c<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">conn_config<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="28">ap_create_conn_config<pos:position pos:line="19" pos:column="49"/></name><argument_list pos:line="19" pos:column="49">(<argument><expr><name><name pos:line="19" pos:column="50">task<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">-&gt;<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="56">pool<pos:position pos:line="19" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">task<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">c<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">notes<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">apr_table_make<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name><name pos:line="20" pos:column="37">task<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">pool<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="49">5<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
    
    <comment type="block" pos:line="22" pos:column="5">/* In order to do this in 2.4.x, we need to add a member to conn_rec */</comment>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">task<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">c<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">master<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">master<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ap_set_module_config<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name><name pos:line="25" pos:column="26">task<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">c<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">conn_config<pos:position pos:line="25" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="48">&amp;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="49">core_module<pos:position pos:line="25" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="62">socket<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
    
    <comment type="block" pos:line="27" pos:column="5">/* This works for mpm_worker so far. Other mpm modules have 
     * different needs, unfortunately. The most interesting one 
     * being mpm_event...
     */</comment>
    <switch pos:line="31" pos:column="5">switch <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">h2_conn_mpm_type<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">()<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="32"/></condition> <block pos:line="31" pos:column="33">{
        <case pos:line="32" pos:column="9">case <expr><name pos:line="32" pos:column="14">H2_MPM_WORKER<pos:position pos:line="32" pos:column="27"/></name></expr>:<pos:position pos:line="32" pos:column="28"/></case>
            <comment type="block" pos:line="33" pos:column="13">/* all fine */</comment>
            <break pos:line="34" pos:column="13">break;<pos:position pos:line="34" pos:column="19"/></break>
        <case pos:line="35" pos:column="9">case <expr><name pos:line="35" pos:column="14">H2_MPM_EVENT<pos:position pos:line="35" pos:column="26"/></name></expr>:<pos:position pos:line="35" pos:column="27"/></case> 
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">fix_event_conn<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name><name pos:line="36" pos:column="28">task<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">c<pos:position pos:line="36" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">master<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
            <break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break>
        <default pos:line="38" pos:column="9">default:<pos:position pos:line="38" pos:column="17"/></default>
            <comment type="block" pos:line="39" pos:column="13">/* fingers crossed */</comment>
            <break pos:line="40" pos:column="13">break;<pos:position pos:line="40" pos:column="19"/></break>
    }<pos:position pos:line="41" pos:column="6"/></block></switch>
    
    <comment type="block" pos:line="43" pos:column="5">/* TODO: we simulate that we had already a request on this connection.
     * This keeps the mod_ssl SNI vs. Host name matcher from answering 
     * 400 Bad Request
     * when names do not match. We prefer a predictable 421 status.
     */</comment>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">task<pos:position pos:line="48" pos:column="9"/></name><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">c<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">keepalives<pos:position pos:line="48" pos:column="24"/></name></name> <operator pos:line="48" pos:column="25">=<pos:position pos:line="48" pos:column="26"/></operator> <literal type="number" pos:line="48" pos:column="27">1<pos:position pos:line="48" pos:column="28"/></literal></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
    
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">APR_SUCCESS<pos:position pos:line="50" pos:column="23"/></name></expr>;<pos:position pos:line="50" pos:column="24"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

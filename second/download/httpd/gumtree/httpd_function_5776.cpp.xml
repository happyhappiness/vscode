<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5776.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_pipeline<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">conn_rec<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">c<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">apr_bucket_brigade<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">bb<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">num_blank_lines<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">DEFAULT_LIMIT_BLANK_LINES<pos:position pos:line="4" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_input_mode_t<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">mode<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">AP_MODE_SPECULATIVE<pos:position pos:line="5" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">cr<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">buf<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><literal type="number" pos:line="7" pos:column="14">2<pos:position pos:line="7" pos:column="15"/></literal></expr>]<pos:position pos:line="7" pos:column="16"/></index></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">c<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">data_in_input_filters<pos:position pos:line="9" pos:column="29"/></name></name> <operator pos:line="9" pos:column="30">=<pos:position pos:line="9" pos:column="31"/></operator> <literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><name><name pos:line="10" pos:column="12">c<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">keepalive<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">!=<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">AP_CONN_CLOSE<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">&amp;&amp;<pos:position pos:line="10" pos:column="52"/></operator> <operator pos:line="10" pos:column="45">!<pos:position pos:line="10" pos:column="46"/></operator><name><name pos:line="10" pos:column="46">c<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">-&gt;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="49">aborted<pos:position pos:line="10" pos:column="56"/></name></name></expr>)<pos:position pos:line="10" pos:column="57"/></condition> <block pos:line="10" pos:column="58">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">apr_size_t<pos:position pos:line="11" pos:column="19"/></name></type> <name pos:line="11" pos:column="20">len<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><name pos:line="11" pos:column="26">cr<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">+<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="13" pos:column="9">apr_brigade_cleanup<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">bb<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">ap_get_brigade<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name><name pos:line="14" pos:column="29">c<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">input_filters<pos:position pos:line="14" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">bb<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">mode<pos:position pos:line="14" pos:column="55"/></name></expr></argument>,
                            <argument><expr><name pos:line="15" pos:column="29">APR_NONBLOCK_READ<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">len<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">rv<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">!=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">APR_SUCCESS<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">||<pos:position pos:line="16" pos:column="33"/></operator> <call><name pos:line="16" pos:column="34">APR_BRIGADE_EMPTY<pos:position pos:line="16" pos:column="51"/></name><argument_list pos:line="16" pos:column="51">(<argument><expr><name pos:line="16" pos:column="52">bb<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="56"/></condition><then pos:line="16" pos:column="56"> <block pos:line="16" pos:column="57">{
            <comment type="block" pos:line="17" pos:column="13">/*
             * Error or empty brigade: There is no data present in the input
             * filter
             */</comment>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">mode<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">==<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">AP_MODE_READBYTES<pos:position pos:line="21" pos:column="42"/></name></expr>)<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43"> <block pos:line="21" pos:column="44">{
                <comment type="block" pos:line="22" pos:column="17">/* Unexpected error, stop with this connection */</comment>
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">ap_log_cerror<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">APLOG_MARK<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">APLOG_ERR<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">rv<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">c<pos:position pos:line="23" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="61">APLOGNO<pos:position pos:line="23" pos:column="68"/></name><argument_list pos:line="23" pos:column="68">(<argument><expr><literal type="number" pos:line="23" pos:column="69">02967<pos:position pos:line="23" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call>
                              <literal type="string" pos:line="24" pos:column="31">"Can't consume pipelined empty lines"<pos:position pos:line="24" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">c<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">keepalive<pos:position pos:line="25" pos:column="29"/></name></name> <operator pos:line="25" pos:column="30">=<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="32">AP_CONN_CLOSE<pos:position pos:line="25" pos:column="45"/></name></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></then></if>
            <break pos:line="27" pos:column="13">break;<pos:position pos:line="27" pos:column="19"/></break>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="30" pos:column="9">/* Ignore trailing blank lines (which must not be interpreted as
         * pipelined requests) up to the limit, otherwise we would block
         * on the next read without flushing data, and hence possibly delay
         * pending response(s) until the next/real request comes in or the
         * keepalive timeout expires.
         */</comment>
        <expr_stmt><expr><name pos:line="36" pos:column="9">rv<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">apr_brigade_flatten<pos:position pos:line="36" pos:column="33"/></name><argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">bb<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">buf<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="43">&amp;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="44">len<pos:position pos:line="36" pos:column="47"/></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">rv<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">!=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">APR_SUCCESS<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">||<pos:position pos:line="37" pos:column="33"/></operator> <name pos:line="37" pos:column="34">len<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">!=<pos:position pos:line="37" pos:column="40"/></operator> <name pos:line="37" pos:column="41">cr<pos:position pos:line="37" pos:column="43"/></name> <operator pos:line="37" pos:column="44">+<pos:position pos:line="37" pos:column="45"/></operator> <literal type="number" pos:line="37" pos:column="46">1<pos:position pos:line="37" pos:column="47"/></literal></expr>)<pos:position pos:line="37" pos:column="48"/></condition><then pos:line="37" pos:column="48"> <block pos:line="37" pos:column="49">{
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">int<pos:position pos:line="38" pos:column="16"/></name></type> <name pos:line="38" pos:column="17">log_level<pos:position pos:line="38" pos:column="26"/></name></decl>;<pos:position pos:line="38" pos:column="27"/></decl_stmt>
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><name pos:line="39" pos:column="17">mode<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">==<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">AP_MODE_READBYTES<pos:position pos:line="39" pos:column="42"/></name></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
                <comment type="block" pos:line="40" pos:column="17">/* Unexpected error, stop with this connection */</comment>
                <expr_stmt><expr><name><name pos:line="41" pos:column="17">c<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">keepalive<pos:position pos:line="41" pos:column="29"/></name></name> <operator pos:line="41" pos:column="30">=<pos:position pos:line="41" pos:column="31"/></operator> <name pos:line="41" pos:column="32">AP_CONN_CLOSE<pos:position pos:line="41" pos:column="45"/></name></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name pos:line="42" pos:column="17">log_level<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">APLOG_ERR<pos:position pos:line="42" pos:column="38"/></name></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="43" pos:column="14"/></block></then>
            <else pos:line="44" pos:column="13">else <block pos:line="44" pos:column="18">{
                <comment type="block" pos:line="45" pos:column="17">/* Let outside (non-speculative/blocking) read determine
                 * where this possible failure comes from (metadata,
                 * morphed EOF socket =&gt; empty bucket? debug only here).
                 */</comment>
                <expr_stmt><expr><name><name pos:line="49" pos:column="17">c<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">-&gt;<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="20">data_in_input_filters<pos:position pos:line="49" pos:column="41"/></name></name> <operator pos:line="49" pos:column="42">=<pos:position pos:line="49" pos:column="43"/></operator> <literal type="number" pos:line="49" pos:column="44">1<pos:position pos:line="49" pos:column="45"/></literal></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name pos:line="50" pos:column="17">log_level<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">=<pos:position pos:line="50" pos:column="28"/></operator> <name pos:line="50" pos:column="29">APLOG_DEBUG<pos:position pos:line="50" pos:column="40"/></name></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">ap_log_cerror<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">APLOG_MARK<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="39">log_level<pos:position pos:line="52" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="50">rv<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="54">c<pos:position pos:line="52" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="57">APLOGNO<pos:position pos:line="52" pos:column="64"/></name><argument_list pos:line="52" pos:column="64">(<argument><expr><literal type="number" pos:line="52" pos:column="65">02968<pos:position pos:line="52" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call>
                          <literal type="string" pos:line="53" pos:column="27">"Can't check pipelined data"<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="57"/></expr_stmt>
            <break pos:line="54" pos:column="13">break;<pos:position pos:line="54" pos:column="19"/></break>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">mode<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">==<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">AP_MODE_READBYTES<pos:position pos:line="57" pos:column="38"/></name></expr>)<pos:position pos:line="57" pos:column="39"/></condition><then pos:line="57" pos:column="39"> <block pos:line="57" pos:column="40">{
            <expr_stmt><expr><name pos:line="58" pos:column="13">mode<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">AP_MODE_SPECULATIVE<pos:position pos:line="58" pos:column="39"/></name></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="59" pos:column="13">cr<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <literal type="number" pos:line="59" pos:column="18">0<pos:position pos:line="59" pos:column="19"/></literal></expr>;<pos:position pos:line="59" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then>
        <elseif pos:line="61" pos:column="9">else <if pos:line="61" pos:column="14">if <condition pos:line="61" pos:column="17">(<expr><name pos:line="61" pos:column="18">cr<pos:position pos:line="61" pos:column="20"/></name></expr>)<pos:position pos:line="61" pos:column="21"/></condition><then pos:line="61" pos:column="21"> <block pos:line="61" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">AP_DEBUG_ASSERT<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">len<pos:position pos:line="62" pos:column="32"/></name> <operator pos:line="62" pos:column="33">==<pos:position pos:line="62" pos:column="35"/></operator> <literal type="number" pos:line="62" pos:column="36">2<pos:position pos:line="62" pos:column="37"/></literal> <operator pos:line="62" pos:column="38">&amp;&amp;<pos:position pos:line="62" pos:column="48"/></operator> <name><name pos:line="62" pos:column="41">buf<pos:position pos:line="62" pos:column="44"/></name><index pos:line="62" pos:column="44">[<expr><literal type="number" pos:line="62" pos:column="45">0<pos:position pos:line="62" pos:column="46"/></literal></expr>]<pos:position pos:line="62" pos:column="47"/></index></name> <operator pos:line="62" pos:column="48">==<pos:position pos:line="62" pos:column="50"/></operator> <name pos:line="62" pos:column="51">APR_ASCII_CR<pos:position pos:line="62" pos:column="63"/></name></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="65"/></expr_stmt>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><name><name pos:line="63" pos:column="17">buf<pos:position pos:line="63" pos:column="20"/></name><index pos:line="63" pos:column="20">[<expr><literal type="number" pos:line="63" pos:column="21">1<pos:position pos:line="63" pos:column="22"/></literal></expr>]<pos:position pos:line="63" pos:column="23"/></index></name> <operator pos:line="63" pos:column="24">==<pos:position pos:line="63" pos:column="26"/></operator> <name pos:line="63" pos:column="27">APR_ASCII_LF<pos:position pos:line="63" pos:column="39"/></name></expr>)<pos:position pos:line="63" pos:column="40"/></condition><then pos:line="63" pos:column="40"> <block pos:line="63" pos:column="41">{
                <expr_stmt><expr><name pos:line="64" pos:column="17">mode<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">=<pos:position pos:line="64" pos:column="23"/></operator> <name pos:line="64" pos:column="24">AP_MODE_READBYTES<pos:position pos:line="64" pos:column="41"/></name></expr>;<pos:position pos:line="64" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="65" pos:column="17">num_blank_lines<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">--<pos:position pos:line="65" pos:column="34"/></operator></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="66" pos:column="14"/></block></then>
            <else pos:line="67" pos:column="13">else <block pos:line="67" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="68" pos:column="17">c<pos:position pos:line="68" pos:column="18"/></name><operator pos:line="68" pos:column="18">-&gt;<pos:position pos:line="68" pos:column="23"/></operator><name pos:line="68" pos:column="20">data_in_input_filters<pos:position pos:line="68" pos:column="41"/></name></name> <operator pos:line="68" pos:column="42">=<pos:position pos:line="68" pos:column="43"/></operator> <literal type="number" pos:line="68" pos:column="44">1<pos:position pos:line="68" pos:column="45"/></literal></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
                <break pos:line="69" pos:column="17">break;<pos:position pos:line="69" pos:column="23"/></break>
            }<pos:position pos:line="70" pos:column="14"/></block></else></if>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if></elseif>
        <else pos:line="72" pos:column="9">else <block pos:line="72" pos:column="14">{
            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><name><name pos:line="73" pos:column="17">buf<pos:position pos:line="73" pos:column="20"/></name><index pos:line="73" pos:column="20">[<expr><literal type="number" pos:line="73" pos:column="21">0<pos:position pos:line="73" pos:column="22"/></literal></expr>]<pos:position pos:line="73" pos:column="23"/></index></name> <operator pos:line="73" pos:column="24">==<pos:position pos:line="73" pos:column="26"/></operator> <name pos:line="73" pos:column="27">APR_ASCII_LF<pos:position pos:line="73" pos:column="39"/></name></expr>)<pos:position pos:line="73" pos:column="40"/></condition><then pos:line="73" pos:column="40"> <block pos:line="73" pos:column="41">{
                <expr_stmt><expr><name pos:line="74" pos:column="17">mode<pos:position pos:line="74" pos:column="21"/></name> <operator pos:line="74" pos:column="22">=<pos:position pos:line="74" pos:column="23"/></operator> <name pos:line="74" pos:column="24">AP_MODE_READBYTES<pos:position pos:line="74" pos:column="41"/></name></expr>;<pos:position pos:line="74" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">num_blank_lines<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">--<pos:position pos:line="75" pos:column="34"/></operator></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then>
            <elseif pos:line="77" pos:column="13">else <if pos:line="77" pos:column="18">if <condition pos:line="77" pos:column="21">(<expr><name><name pos:line="77" pos:column="22">buf<pos:position pos:line="77" pos:column="25"/></name><index pos:line="77" pos:column="25">[<expr><literal type="number" pos:line="77" pos:column="26">0<pos:position pos:line="77" pos:column="27"/></literal></expr>]<pos:position pos:line="77" pos:column="28"/></index></name> <operator pos:line="77" pos:column="29">==<pos:position pos:line="77" pos:column="31"/></operator> <name pos:line="77" pos:column="32">APR_ASCII_CR<pos:position pos:line="77" pos:column="44"/></name></expr>)<pos:position pos:line="77" pos:column="45"/></condition><then pos:line="77" pos:column="45"> <block pos:line="77" pos:column="46">{
                <expr_stmt><expr><name pos:line="78" pos:column="17">cr<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <literal type="number" pos:line="78" pos:column="22">1<pos:position pos:line="78" pos:column="23"/></literal></expr>;<pos:position pos:line="78" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></then></if></elseif>
            <else pos:line="80" pos:column="13">else <block pos:line="80" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="81" pos:column="17">c<pos:position pos:line="81" pos:column="18"/></name><operator pos:line="81" pos:column="18">-&gt;<pos:position pos:line="81" pos:column="23"/></operator><name pos:line="81" pos:column="20">data_in_input_filters<pos:position pos:line="81" pos:column="41"/></name></name> <operator pos:line="81" pos:column="42">=<pos:position pos:line="81" pos:column="43"/></operator> <literal type="number" pos:line="81" pos:column="44">1<pos:position pos:line="81" pos:column="45"/></literal></expr>;<pos:position pos:line="81" pos:column="46"/></expr_stmt>
                <break pos:line="82" pos:column="17">break;<pos:position pos:line="82" pos:column="23"/></break>
            }<pos:position pos:line="83" pos:column="14"/></block></else></if>
        }<pos:position pos:line="84" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="85" pos:column="9">/* Enough blank lines with this connection?
         * Stop and don't recycle it.
         */</comment>
        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">num_blank_lines<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">&lt;<pos:position pos:line="88" pos:column="33"/></operator> <literal type="number" pos:line="88" pos:column="31">0<pos:position pos:line="88" pos:column="32"/></literal></expr>)<pos:position pos:line="88" pos:column="33"/></condition><then pos:line="88" pos:column="33"> <block pos:line="88" pos:column="34">{
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">c<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">-&gt;<pos:position pos:line="89" pos:column="19"/></operator><name pos:line="89" pos:column="16">keepalive<pos:position pos:line="89" pos:column="25"/></name></name> <operator pos:line="89" pos:column="26">=<pos:position pos:line="89" pos:column="27"/></operator> <name pos:line="89" pos:column="28">AP_CONN_CLOSE<pos:position pos:line="89" pos:column="41"/></name></expr>;<pos:position pos:line="89" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
    }<pos:position pos:line="91" pos:column="6"/></block></while>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2337_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_thread_limit<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">cmd_parms<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">cmd<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">dummy<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="67">const<pos:position pos:line="1" pos:column="72"/></specifier> <name pos:line="1" pos:column="73">char<pos:position pos:line="1" pos:column="77"/></name> <modifier pos:line="1" pos:column="78">*<pos:position pos:line="1" pos:column="79"/></modifier></type><name pos:line="1" pos:column="79">arg<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list> 
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">tmp_thread_limit<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">err<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><call><name pos:line="5" pos:column="23">ap_check_cmd_context<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><name pos:line="5" pos:column="44">cmd<pos:position pos:line="5" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="49">GLOBAL_ONLY<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="62"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">err<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">!=<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21"> <block pos:line="6" pos:column="22">{
        <return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">err<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="10" pos:column="5">tmp_thread_limit<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">atoi<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">arg<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* you cannot change ThreadLimit across a restart; ignore
     * any such attempts
     */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">first_thread_limit<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">&amp;&amp;<pos:position pos:line="14" pos:column="38"/></operator>
        <name pos:line="15" pos:column="9">tmp_thread_limit<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">!=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">thread_limit<pos:position pos:line="15" pos:column="41"/></name></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42"> <block pos:line="15" pos:column="43">{
        <comment type="block" pos:line="16" pos:column="9">/* how do we log a message?  the error log is a bit bucket at this
         * point; we'll just have to set a flag so that ap_mpm_run()
         * logs a warning later
         */</comment>
        <expr_stmt><expr><name pos:line="20" pos:column="9">changed_limit_at_restart<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">=<pos:position pos:line="20" pos:column="35"/></operator> <literal type="number" pos:line="20" pos:column="36">1<pos:position pos:line="20" pos:column="37"/></literal></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="23" pos:column="5">thread_limit<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">tmp_thread_limit<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
    
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">thread_limit<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">&gt;<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="24">MAX_THREAD_LIMIT<pos:position pos:line="25" pos:column="40"/></name></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41"> <block pos:line="25" pos:column="42">{
       <expr_stmt><expr><call><name pos:line="26" pos:column="8">ap_log_error<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">APLOG_MARK<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="33">APLOG_STARTUP<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="48">0<pos:position pos:line="26" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="51">NULL<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, 
                    <argument><expr><literal type="string" pos:line="27" pos:column="21">"WARNING: ThreadLimit of %d exceeds compile time limit "<pos:position pos:line="27" pos:column="77"/></literal>
                    <literal type="string" pos:line="28" pos:column="21">"of %d servers,"<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">thread_limit<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">MAX_THREAD_LIMIT<pos:position pos:line="28" pos:column="69"/></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
       <expr_stmt><expr><call><name pos:line="29" pos:column="8">ap_log_error<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">APLOG_MARK<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">APLOG_STARTUP<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="48">0<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">NULL<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, 
                    <argument><expr><literal type="string" pos:line="30" pos:column="21">" lowering ThreadLimit to %d."<pos:position pos:line="30" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">MAX_THREAD_LIMIT<pos:position pos:line="30" pos:column="69"/></name></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt>
       <expr_stmt><expr><name pos:line="31" pos:column="8">thread_limit<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">MAX_THREAD_LIMIT<pos:position pos:line="31" pos:column="39"/></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then> 
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><name pos:line="33" pos:column="14">thread_limit<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">&lt;<pos:position pos:line="33" pos:column="31"/></operator> <literal type="number" pos:line="33" pos:column="29">1<pos:position pos:line="33" pos:column="30"/></literal></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31"> <block pos:line="33" pos:column="32">{
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_log_error<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">APLOG_MARK<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">APLOG_STARTUP<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="49">0<pos:position pos:line="34" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">NULL<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="35" pos:column="22">"WARNING: Require ThreadLimit &gt; 0, setting to 1"<pos:position pos:line="35" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><name pos:line="36" pos:column="9">thread_limit<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <literal type="number" pos:line="36" pos:column="24">1<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">NULL<pos:position pos:line="38" pos:column="16"/></name></expr>;<pos:position pos:line="38" pos:column="17"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

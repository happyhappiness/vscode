<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2912.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">shmcb_insert_encoded_session<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(
    <parameter><decl><type><name pos:line="2" pos:column="5">server_rec<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">s<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">SHMCBQueue<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">queue<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">SHMCBCache<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type> <name pos:line="3" pos:column="18">cache<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">char<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">encoded<pos:position pos:line="4" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">encoded_len<pos:position pos:line="5" pos:column="29"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">char<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">session_id<pos:position pos:line="6" pos:column="30"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="7" pos:column="5">time_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">expiry_time<pos:position pos:line="7" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="24"/></parameter_list>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">SHMCBHeader<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">header<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">SHMCBIndex<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">idx<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><name pos:line="10" pos:column="23">NULL<pos:position pos:line="10" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">unsigned<pos:position pos:line="11" pos:column="13"/></name> <name pos:line="11" pos:column="14">int<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">gap<pos:position pos:line="11" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="23">new_pos<pos:position pos:line="11" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="32">loop<pos:position pos:line="11" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="38">new_offset<pos:position pos:line="11" pos:column="48"/></name></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">need<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ap_log_error<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">APLOG_MARK<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="30">APLOG_DEBUG<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="43">0<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">s<pos:position pos:line="14" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="15" pos:column="18">"entering shmcb_insert_encoded_session, "<pos:position pos:line="15" pos:column="59"/></literal>
                 <literal type="string" pos:line="16" pos:column="18">"*queue-&gt;pos_count = %u"<pos:position pos:line="16" pos:column="45"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="17" pos:column="18">shmcb_get_safe_uint<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">queue<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">pos_count<pos:position pos:line="17" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* If there's entries to expire, ditch them first thing. */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">shmcb_expire_division<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">s<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">queue<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">cache<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">header<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name><name pos:line="21" pos:column="14">cache<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">header<pos:position pos:line="21" pos:column="27"/></name></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">gap<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <name><name pos:line="22" pos:column="11">header<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">cache_data_size<pos:position pos:line="22" pos:column="34"/></name></name> <operator pos:line="22" pos:column="35">-<pos:position pos:line="22" pos:column="36"/></operator> <call><name pos:line="22" pos:column="37">shmcb_get_safe_uint<pos:position pos:line="22" pos:column="56"/></name><argument_list pos:line="22" pos:column="56">(<argument><expr><name><name pos:line="22" pos:column="57">cache<pos:position pos:line="22" pos:column="62"/></name><operator pos:line="22" pos:column="62">-&gt;<pos:position pos:line="22" pos:column="67"/></operator><name pos:line="22" pos:column="64">pos_count<pos:position pos:line="22" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">gap<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">&lt;<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="15">encoded_len<pos:position pos:line="23" pos:column="26"/></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">new_pos<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">shmcb_get_safe_uint<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name><name pos:line="24" pos:column="39">queue<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">first_pos<pos:position pos:line="24" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">loop<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">need<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">int<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">)<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">encoded_len<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">-<pos:position pos:line="26" pos:column="35"/></operator> <operator pos:line="26" pos:column="36">(<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">int<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">)<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">gap<pos:position pos:line="26" pos:column="45"/></name></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
        <while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">need<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">&gt;<pos:position pos:line="27" pos:column="26"/></operator> <literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal><operator pos:line="27" pos:column="25">)<pos:position pos:line="27" pos:column="26"/></operator> <operator pos:line="27" pos:column="27">&amp;&amp;<pos:position pos:line="27" pos:column="37"/></operator> <operator pos:line="27" pos:column="30">(<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">loop<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">+<pos:position pos:line="27" pos:column="37"/></operator> <literal type="number" pos:line="27" pos:column="38">1<pos:position pos:line="27" pos:column="39"/></literal> <operator pos:line="27" pos:column="40">&lt;<pos:position pos:line="27" pos:column="44"/></operator> <call><name pos:line="27" pos:column="42">shmcb_get_safe_uint<pos:position pos:line="27" pos:column="61"/></name><argument_list pos:line="27" pos:column="61">(<argument><expr><name><name pos:line="27" pos:column="62">queue<pos:position pos:line="27" pos:column="67"/></name><operator pos:line="27" pos:column="67">-&gt;<pos:position pos:line="27" pos:column="72"/></operator><name pos:line="27" pos:column="69">pos_count<pos:position pos:line="27" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call><operator pos:line="27" pos:column="79">)<pos:position pos:line="27" pos:column="80"/></operator></expr>)<pos:position pos:line="27" pos:column="81"/></condition> <block pos:line="27" pos:column="82">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">new_pos<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">shmcb_cyclic_increment<pos:position pos:line="28" pos:column="45"/></name><argument_list pos:line="28" pos:column="45">(<argument><expr><name><name pos:line="28" pos:column="46">header<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">index_num<pos:position pos:line="28" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="65">new_pos<pos:position pos:line="28" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="74">1<pos:position pos:line="28" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><name pos:line="29" pos:column="13">loop<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">+=<pos:position pos:line="29" pos:column="20"/></operator> <literal type="number" pos:line="29" pos:column="21">1<pos:position pos:line="29" pos:column="22"/></literal></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">idx<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <call><name pos:line="30" pos:column="19">shmcb_get_index<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name pos:line="30" pos:column="35">queue<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">new_pos<pos:position pos:line="30" pos:column="49"/></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">need<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <operator pos:line="31" pos:column="20">(<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">int<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">)<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">encoded_len<pos:position pos:line="31" pos:column="37"/></name> <operator pos:line="31" pos:column="38">-<pos:position pos:line="31" pos:column="39"/></operator> <operator pos:line="31" pos:column="40">(<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="41">int<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">)<pos:position pos:line="31" pos:column="45"/></operator> <name pos:line="31" pos:column="46">gap<pos:position pos:line="31" pos:column="49"/></name> <operator pos:line="31" pos:column="50">-<pos:position pos:line="31" pos:column="51"/></operator>
                <call><name pos:line="32" pos:column="17">shmcb_cyclic_space<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name><name pos:line="32" pos:column="36">header<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">cache_data_size<pos:position pos:line="32" pos:column="59"/></name></name></expr></argument>,
                                   <argument><expr><call><name pos:line="33" pos:column="36">shmcb_get_safe_uint<pos:position pos:line="33" pos:column="55"/></name><argument_list pos:line="33" pos:column="55">(<argument><expr><name><name pos:line="33" pos:column="56">cache<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">-&gt;<pos:position pos:line="33" pos:column="66"/></operator><name pos:line="33" pos:column="63">first_pos<pos:position pos:line="33" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr></argument>,
                                   <argument><expr><call><name pos:line="34" pos:column="36">shmcb_get_safe_uint<pos:position pos:line="34" pos:column="55"/></name><argument_list pos:line="34" pos:column="55">(<argument><expr><operator pos:line="34" pos:column="56">&amp;<pos:position pos:line="34" pos:column="61"/></operator><operator pos:line="34" pos:column="57">(<pos:position pos:line="34" pos:column="58"/></operator><name><name pos:line="34" pos:column="58">idx<pos:position pos:line="34" pos:column="61"/></name><operator pos:line="34" pos:column="61">-&gt;<pos:position pos:line="34" pos:column="66"/></operator><name pos:line="34" pos:column="63">offset<pos:position pos:line="34" pos:column="69"/></name></name><operator pos:line="34" pos:column="69">)<pos:position pos:line="34" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></while>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">loop<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">&gt;<pos:position pos:line="36" pos:column="22"/></operator> <literal type="number" pos:line="36" pos:column="20">0<pos:position pos:line="36" pos:column="21"/></literal></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22"> <block pos:line="36" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">ap_log_error<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">APLOG_MARK<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">APLOG_DEBUG<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="51">0<pos:position pos:line="37" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">s<pos:position pos:line="37" pos:column="55"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="38" pos:column="26">"about to scroll %u sessions from %u"<pos:position pos:line="38" pos:column="63"/></literal></expr></argument>,
                         <argument><expr><name pos:line="39" pos:column="26">loop<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="32">shmcb_get_safe_uint<pos:position pos:line="39" pos:column="51"/></name><argument_list pos:line="39" pos:column="51">(<argument><expr><name><name pos:line="39" pos:column="52">queue<pos:position pos:line="39" pos:column="57"/></name><operator pos:line="39" pos:column="57">-&gt;<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="59">pos_count<pos:position pos:line="39" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
            <comment type="block" pos:line="40" pos:column="13">/* We are removing "loop" items from the cache. */</comment>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name><name pos:line="41" pos:column="33">cache<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">pos_count<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>,
                                <argument><expr><call><name pos:line="42" pos:column="33">shmcb_get_safe_uint<pos:position pos:line="42" pos:column="52"/></name><argument_list pos:line="42" pos:column="52">(<argument><expr><name><name pos:line="42" pos:column="53">cache<pos:position pos:line="42" pos:column="58"/></name><operator pos:line="42" pos:column="58">-&gt;<pos:position pos:line="42" pos:column="63"/></operator><name pos:line="42" pos:column="60">pos_count<pos:position pos:line="42" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="70"/></argument_list></call> <operator pos:line="42" pos:column="71">-<pos:position pos:line="42" pos:column="72"/></operator>
                                <call><name pos:line="43" pos:column="33">shmcb_cyclic_space<pos:position pos:line="43" pos:column="51"/></name><argument_list pos:line="43" pos:column="51">(<argument><expr><name><name pos:line="43" pos:column="52">header<pos:position pos:line="43" pos:column="58"/></name><operator pos:line="43" pos:column="58">-&gt;<pos:position pos:line="43" pos:column="63"/></operator><name pos:line="43" pos:column="60">cache_data_size<pos:position pos:line="43" pos:column="75"/></name></name></expr></argument>,
                                                   <argument><expr><call><name pos:line="44" pos:column="52">shmcb_get_safe_uint<pos:position pos:line="44" pos:column="71"/></name><argument_list pos:line="44" pos:column="71">(<argument><expr><name><name pos:line="44" pos:column="72">cache<pos:position pos:line="44" pos:column="77"/></name><operator pos:line="44" pos:column="77">-&gt;<pos:position pos:line="44" pos:column="82"/></operator><name pos:line="44" pos:column="79">first_pos<pos:position pos:line="44" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="89"/></argument_list></call></expr></argument>,
                                                   <argument><expr><call><name pos:line="45" pos:column="52">shmcb_get_safe_uint<pos:position pos:line="45" pos:column="71"/></name><argument_list pos:line="45" pos:column="71">(<argument><expr><operator pos:line="45" pos:column="72">&amp;<pos:position pos:line="45" pos:column="77"/></operator><operator pos:line="45" pos:column="73">(<pos:position pos:line="45" pos:column="74"/></operator><name><name pos:line="45" pos:column="74">idx<pos:position pos:line="45" pos:column="77"/></name><operator pos:line="45" pos:column="77">-&gt;<pos:position pos:line="45" pos:column="82"/></operator><name pos:line="45" pos:column="79">offset<pos:position pos:line="45" pos:column="85"/></name></name><operator pos:line="45" pos:column="85">)<pos:position pos:line="45" pos:column="86"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name><name pos:line="46" pos:column="33">cache<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">first_pos<pos:position pos:line="46" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="51">shmcb_get_safe_uint<pos:position pos:line="46" pos:column="70"/></name><argument_list pos:line="46" pos:column="70">(<argument><expr><operator pos:line="46" pos:column="71">&amp;<pos:position pos:line="46" pos:column="76"/></operator><operator pos:line="46" pos:column="72">(<pos:position pos:line="46" pos:column="73"/></operator><name><name pos:line="46" pos:column="73">idx<pos:position pos:line="46" pos:column="76"/></name><operator pos:line="46" pos:column="76">-&gt;<pos:position pos:line="46" pos:column="81"/></operator><name pos:line="46" pos:column="78">offset<pos:position pos:line="46" pos:column="84"/></name></name><operator pos:line="46" pos:column="84">)<pos:position pos:line="46" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name><name pos:line="47" pos:column="33">queue<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">-&gt;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="40">pos_count<pos:position pos:line="47" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="51">shmcb_get_safe_uint<pos:position pos:line="47" pos:column="70"/></name><argument_list pos:line="47" pos:column="70">(<argument><expr><name><name pos:line="47" pos:column="71">queue<pos:position pos:line="47" pos:column="76"/></name><operator pos:line="47" pos:column="76">-&gt;<pos:position pos:line="47" pos:column="81"/></operator><name pos:line="47" pos:column="78">pos_count<pos:position pos:line="47" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="88"/></argument_list></call> <operator pos:line="47" pos:column="89">-<pos:position pos:line="47" pos:column="90"/></operator> <name pos:line="47" pos:column="91">loop<pos:position pos:line="47" pos:column="95"/></name></expr></argument>)<pos:position pos:line="47" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="97"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">shmcb_set_safe_uint<pos:position pos:line="48" pos:column="32"/></name><argument_list pos:line="48" pos:column="32">(<argument><expr><name><name pos:line="48" pos:column="33">queue<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">-&gt;<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="40">first_pos<pos:position pos:line="48" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">new_pos<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ap_log_error<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">APLOG_MARK<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">APLOG_DEBUG<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="51">0<pos:position pos:line="49" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">s<pos:position pos:line="49" pos:column="55"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="50" pos:column="26">"now only have %u sessions"<pos:position pos:line="50" pos:column="53"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="51" pos:column="26">shmcb_get_safe_uint<pos:position pos:line="51" pos:column="45"/></name><argument_list pos:line="51" pos:column="45">(<argument><expr><name><name pos:line="51" pos:column="46">queue<pos:position pos:line="51" pos:column="51"/></name><operator pos:line="51" pos:column="51">-&gt;<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="53">pos_count<pos:position pos:line="51" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt>
            <comment type="block" pos:line="52" pos:column="13">/* Update the stats!!! */</comment>
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">header<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">-&gt;<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="21">num_scrolled<pos:position pos:line="53" pos:column="33"/></name></name> <operator pos:line="53" pos:column="34">+=<pos:position pos:line="53" pos:column="36"/></operator> <name pos:line="53" pos:column="37">loop<pos:position pos:line="53" pos:column="41"/></name></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="57" pos:column="5">/* probably unecessary checks, but I'll leave them until this code
     * is verified. */</comment>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><call><name pos:line="59" pos:column="9">shmcb_get_safe_uint<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name><name pos:line="59" pos:column="29">cache<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">-&gt;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="36">pos_count<pos:position pos:line="59" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call> <operator pos:line="59" pos:column="47">+<pos:position pos:line="59" pos:column="48"/></operator> <name pos:line="59" pos:column="49">encoded_len<pos:position pos:line="59" pos:column="60"/></name> <operator pos:line="59" pos:column="61">&gt;<pos:position pos:line="59" pos:column="65"/></operator>
        <name><name pos:line="60" pos:column="9">header<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">-&gt;<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="17">cache_data_size<pos:position pos:line="60" pos:column="32"/></name></name></expr>)<pos:position pos:line="60" pos:column="33"/></condition><then pos:line="60" pos:column="33"> <block pos:line="60" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">ap_log_error<pos:position pos:line="61" pos:column="21"/></name><argument_list pos:line="61" pos:column="21">(<argument><expr><name pos:line="61" pos:column="22">APLOG_MARK<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="34">APLOG_ERR<pos:position pos:line="61" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="45">0<pos:position pos:line="61" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">s<pos:position pos:line="61" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="62" pos:column="22">"shmcb_insert_encoded_session internal error"<pos:position pos:line="62" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="69"/></expr_stmt>
        <return pos:line="63" pos:column="9">return <expr><name pos:line="63" pos:column="16">FALSE<pos:position pos:line="63" pos:column="21"/></name></expr>;<pos:position pos:line="63" pos:column="22"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><call><name pos:line="65" pos:column="9">shmcb_get_safe_uint<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name><name pos:line="65" pos:column="29">queue<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">-&gt;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="36">pos_count<pos:position pos:line="65" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></call> <operator pos:line="65" pos:column="47">==<pos:position pos:line="65" pos:column="49"/></operator> <name><name pos:line="65" pos:column="50">header<pos:position pos:line="65" pos:column="56"/></name><operator pos:line="65" pos:column="56">-&gt;<pos:position pos:line="65" pos:column="61"/></operator><name pos:line="65" pos:column="58">index_num<pos:position pos:line="65" pos:column="67"/></name></name></expr>)<pos:position pos:line="65" pos:column="68"/></condition><then pos:line="65" pos:column="68"> <block pos:line="65" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">ap_log_error<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">APLOG_MARK<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="34">APLOG_ERR<pos:position pos:line="66" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="45">0<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="48">s<pos:position pos:line="66" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="67" pos:column="22">"shmcb_insert_encoded_session internal error"<pos:position pos:line="67" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="69"/></expr_stmt>
        <return pos:line="68" pos:column="9">return <expr><name pos:line="68" pos:column="16">FALSE<pos:position pos:line="68" pos:column="21"/></name></expr>;<pos:position pos:line="68" pos:column="22"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">ap_log_error<pos:position pos:line="70" pos:column="17"/></name><argument_list pos:line="70" pos:column="17">(<argument><expr><name pos:line="70" pos:column="18">APLOG_MARK<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="30">APLOG_DEBUG<pos:position pos:line="70" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="43">0<pos:position pos:line="70" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">s<pos:position pos:line="70" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="71" pos:column="18">"we have %u bytes and %u indexes free - enough"<pos:position pos:line="71" pos:column="65"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="72" pos:column="18">header<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">cache_data_size<pos:position pos:line="72" pos:column="41"/></name></name> <operator pos:line="72" pos:column="42">-<pos:position pos:line="72" pos:column="43"/></operator>
                 <call><name pos:line="73" pos:column="18">shmcb_get_safe_uint<pos:position pos:line="73" pos:column="37"/></name><argument_list pos:line="73" pos:column="37">(<argument><expr><name><name pos:line="73" pos:column="38">cache<pos:position pos:line="73" pos:column="43"/></name><operator pos:line="73" pos:column="43">-&gt;<pos:position pos:line="73" pos:column="48"/></operator><name pos:line="73" pos:column="45">pos_count<pos:position pos:line="73" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="57">header<pos:position pos:line="73" pos:column="63"/></name><operator pos:line="73" pos:column="63">-&gt;<pos:position pos:line="73" pos:column="68"/></operator><name pos:line="73" pos:column="65">index_num<pos:position pos:line="73" pos:column="74"/></name></name> <operator pos:line="73" pos:column="75">-<pos:position pos:line="73" pos:column="76"/></operator>
                 <call><name pos:line="74" pos:column="18">shmcb_get_safe_uint<pos:position pos:line="74" pos:column="37"/></name><argument_list pos:line="74" pos:column="37">(<argument><expr><name><name pos:line="74" pos:column="38">queue<pos:position pos:line="74" pos:column="43"/></name><operator pos:line="74" pos:column="43">-&gt;<pos:position pos:line="74" pos:column="48"/></operator><name pos:line="74" pos:column="45">pos_count<pos:position pos:line="74" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="57"/></expr_stmt>


    <comment type="block" pos:line="77" pos:column="5">/* HERE WE ASSUME THAT THE NEW SESSION SHOULD GO ON THE END! I'M NOT
     * CHECKING WHETHER IT SHOULD BE GENUINELY "INSERTED" SOMEWHERE.
     *
     * We either fix that, or find out at a "higher" (read "mod_ssl")
     * level whether it is possible to have distinct session caches for
     * any attempted tomfoolery to do with different session timeouts.
     * Knowing in advance that we can have a cache-wide constant timeout
     * would make this stuff *MUCH* more efficient. Mind you, it's very
     * efficient right now because I'm ignoring this problem!!!
     */</comment>

    <comment type="block" pos:line="88" pos:column="5">/* Increment to the first unused byte */</comment>
    <expr_stmt><expr><name pos:line="89" pos:column="5">new_offset<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">=<pos:position pos:line="89" pos:column="17"/></operator> <call><name pos:line="89" pos:column="18">shmcb_cyclic_increment<pos:position pos:line="89" pos:column="40"/></name><argument_list pos:line="89" pos:column="40">(<argument><expr><name><name pos:line="89" pos:column="41">header<pos:position pos:line="89" pos:column="47"/></name><operator pos:line="89" pos:column="47">-&gt;<pos:position pos:line="89" pos:column="52"/></operator><name pos:line="89" pos:column="49">cache_data_size<pos:position pos:line="89" pos:column="64"/></name></name></expr></argument>,
                                        <argument><expr><call><name pos:line="90" pos:column="41">shmcb_get_safe_uint<pos:position pos:line="90" pos:column="60"/></name><argument_list pos:line="90" pos:column="60">(<argument><expr><name><name pos:line="90" pos:column="61">cache<pos:position pos:line="90" pos:column="66"/></name><operator pos:line="90" pos:column="66">-&gt;<pos:position pos:line="90" pos:column="71"/></operator><name pos:line="90" pos:column="68">first_pos<pos:position pos:line="90" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="78"/></argument_list></call></expr></argument>,
                                        <argument><expr><call><name pos:line="91" pos:column="41">shmcb_get_safe_uint<pos:position pos:line="91" pos:column="60"/></name><argument_list pos:line="91" pos:column="60">(<argument><expr><name><name pos:line="91" pos:column="61">cache<pos:position pos:line="91" pos:column="66"/></name><operator pos:line="91" pos:column="66">-&gt;<pos:position pos:line="91" pos:column="71"/></operator><name pos:line="91" pos:column="68">pos_count<pos:position pos:line="91" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="80"/></expr_stmt>
    <comment type="block" pos:line="92" pos:column="5">/* Copy the DER-encoded session into place */</comment>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">shmcb_cyclic_ntoc_memcpy<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><name><name pos:line="93" pos:column="30">header<pos:position pos:line="93" pos:column="36"/></name><operator pos:line="93" pos:column="36">-&gt;<pos:position pos:line="93" pos:column="41"/></operator><name pos:line="93" pos:column="38">cache_data_size<pos:position pos:line="93" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="55">cache<pos:position pos:line="93" pos:column="60"/></name><operator pos:line="93" pos:column="60">-&gt;<pos:position pos:line="93" pos:column="65"/></operator><name pos:line="93" pos:column="62">data<pos:position pos:line="93" pos:column="66"/></name></name></expr></argument>,
                            <argument><expr><name pos:line="94" pos:column="29">new_offset<pos:position pos:line="94" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="41">encoded<pos:position pos:line="94" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="50">encoded_len<pos:position pos:line="94" pos:column="61"/></name></expr></argument>)<pos:position pos:line="94" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="63"/></expr_stmt>
    <comment type="block" pos:line="95" pos:column="5">/* Get the new index that this session is stored in. */</comment>
    <expr_stmt><expr><name pos:line="96" pos:column="5">new_pos<pos:position pos:line="96" pos:column="12"/></name> <operator pos:line="96" pos:column="13">=<pos:position pos:line="96" pos:column="14"/></operator> <call><name pos:line="96" pos:column="15">shmcb_cyclic_increment<pos:position pos:line="96" pos:column="37"/></name><argument_list pos:line="96" pos:column="37">(<argument><expr><name><name pos:line="96" pos:column="38">header<pos:position pos:line="96" pos:column="44"/></name><operator pos:line="96" pos:column="44">-&gt;<pos:position pos:line="96" pos:column="49"/></operator><name pos:line="96" pos:column="46">index_num<pos:position pos:line="96" pos:column="55"/></name></name></expr></argument>,
                                     <argument><expr><call><name pos:line="97" pos:column="38">shmcb_get_safe_uint<pos:position pos:line="97" pos:column="57"/></name><argument_list pos:line="97" pos:column="57">(<argument><expr><name><name pos:line="97" pos:column="58">queue<pos:position pos:line="97" pos:column="63"/></name><operator pos:line="97" pos:column="63">-&gt;<pos:position pos:line="97" pos:column="68"/></operator><name pos:line="97" pos:column="65">first_pos<pos:position pos:line="97" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="75"/></argument_list></call></expr></argument>,
                                     <argument><expr><call><name pos:line="98" pos:column="38">shmcb_get_safe_uint<pos:position pos:line="98" pos:column="57"/></name><argument_list pos:line="98" pos:column="57">(<argument><expr><name><name pos:line="98" pos:column="58">queue<pos:position pos:line="98" pos:column="63"/></name><operator pos:line="98" pos:column="63">-&gt;<pos:position pos:line="98" pos:column="68"/></operator><name pos:line="98" pos:column="65">pos_count<pos:position pos:line="98" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="99" pos:column="5">ap_log_error<pos:position pos:line="99" pos:column="17"/></name><argument_list pos:line="99" pos:column="17">(<argument><expr><name pos:line="99" pos:column="18">APLOG_MARK<pos:position pos:line="99" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="30">APLOG_DEBUG<pos:position pos:line="99" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="43">0<pos:position pos:line="99" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="46">s<pos:position pos:line="99" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="100" pos:column="18">"storing in index %u, at offset %u"<pos:position pos:line="100" pos:column="53"/></literal></expr></argument>,
                 <argument><expr><name pos:line="101" pos:column="18">new_pos<pos:position pos:line="101" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="27">new_offset<pos:position pos:line="101" pos:column="37"/></name></expr></argument>)<pos:position pos:line="101" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="102" pos:column="5">idx<pos:position pos:line="102" pos:column="8"/></name> <operator pos:line="102" pos:column="9">=<pos:position pos:line="102" pos:column="10"/></operator> <call><name pos:line="102" pos:column="11">shmcb_get_index<pos:position pos:line="102" pos:column="26"/></name><argument_list pos:line="102" pos:column="26">(<argument><expr><name pos:line="102" pos:column="27">queue<pos:position pos:line="102" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="34">new_pos<pos:position pos:line="102" pos:column="41"/></name></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="43"/></expr_stmt>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><name pos:line="103" pos:column="9">idx<pos:position pos:line="103" pos:column="12"/></name> <operator pos:line="103" pos:column="13">==<pos:position pos:line="103" pos:column="15"/></operator> <name pos:line="103" pos:column="16">NULL<pos:position pos:line="103" pos:column="20"/></name></expr>)<pos:position pos:line="103" pos:column="21"/></condition><then pos:line="103" pos:column="21"> <block pos:line="103" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">ap_log_error<pos:position pos:line="104" pos:column="21"/></name><argument_list pos:line="104" pos:column="21">(<argument><expr><name pos:line="104" pos:column="22">APLOG_MARK<pos:position pos:line="104" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="34">APLOG_ERR<pos:position pos:line="104" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="45">0<pos:position pos:line="104" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="48">s<pos:position pos:line="104" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="105" pos:column="22">"shmcb_insert_encoded_session internal error"<pos:position pos:line="105" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="69"/></expr_stmt>
        <return pos:line="106" pos:column="9">return <expr><name pos:line="106" pos:column="16">FALSE<pos:position pos:line="106" pos:column="21"/></name></expr>;<pos:position pos:line="106" pos:column="22"/></return>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">shmcb_safe_clear<pos:position pos:line="108" pos:column="21"/></name><argument_list pos:line="108" pos:column="21">(<argument><expr><name pos:line="108" pos:column="22">idx<pos:position pos:line="108" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="108" pos:column="27">sizeof<argument_list pos:line="108" pos:column="33">(<argument><expr><name pos:line="108" pos:column="34">SHMCBIndex<pos:position pos:line="108" pos:column="44"/></name></expr></argument>)<pos:position pos:line="108" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="108" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="109" pos:column="5">shmcb_set_safe_time<pos:position pos:line="109" pos:column="24"/></name><argument_list pos:line="109" pos:column="24">(<argument><expr><operator pos:line="109" pos:column="25">&amp;<pos:position pos:line="109" pos:column="30"/></operator><operator pos:line="109" pos:column="26">(<pos:position pos:line="109" pos:column="27"/></operator><name><name pos:line="109" pos:column="27">idx<pos:position pos:line="109" pos:column="30"/></name><operator pos:line="109" pos:column="30">-&gt;<pos:position pos:line="109" pos:column="35"/></operator><name pos:line="109" pos:column="32">expires<pos:position pos:line="109" pos:column="39"/></name></name><operator pos:line="109" pos:column="39">)<pos:position pos:line="109" pos:column="40"/></operator></expr></argument>, <argument><expr><name pos:line="109" pos:column="42">expiry_time<pos:position pos:line="109" pos:column="53"/></name></expr></argument>)<pos:position pos:line="109" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">shmcb_set_safe_uint<pos:position pos:line="110" pos:column="24"/></name><argument_list pos:line="110" pos:column="24">(<argument><expr><operator pos:line="110" pos:column="25">&amp;<pos:position pos:line="110" pos:column="30"/></operator><operator pos:line="110" pos:column="26">(<pos:position pos:line="110" pos:column="27"/></operator><name><name pos:line="110" pos:column="27">idx<pos:position pos:line="110" pos:column="30"/></name><operator pos:line="110" pos:column="30">-&gt;<pos:position pos:line="110" pos:column="35"/></operator><name pos:line="110" pos:column="32">offset<pos:position pos:line="110" pos:column="38"/></name></name><operator pos:line="110" pos:column="38">)<pos:position pos:line="110" pos:column="39"/></operator></expr></argument>, <argument><expr><name pos:line="110" pos:column="41">new_offset<pos:position pos:line="110" pos:column="51"/></name></expr></argument>)<pos:position pos:line="110" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="112" pos:column="5">/* idx-&gt;removed = (unsigned char)0; */</comment> <comment type="block" pos:line="112" pos:column="44">/* Not needed given the memset above. */</comment>
    <expr_stmt><expr><name><name pos:line="113" pos:column="5">idx<pos:position pos:line="113" pos:column="8"/></name><operator pos:line="113" pos:column="8">-&gt;<pos:position pos:line="113" pos:column="13"/></operator><name pos:line="113" pos:column="10">s_id2<pos:position pos:line="113" pos:column="15"/></name></name> <operator pos:line="113" pos:column="16">=<pos:position pos:line="113" pos:column="17"/></operator> <name><name pos:line="113" pos:column="18">session_id<pos:position pos:line="113" pos:column="28"/></name><index pos:line="113" pos:column="28">[<expr><literal type="number" pos:line="113" pos:column="29">1<pos:position pos:line="113" pos:column="30"/></literal></expr>]<pos:position pos:line="113" pos:column="31"/></index></name></expr>;<pos:position pos:line="113" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="114" pos:column="5">ap_log_error<pos:position pos:line="114" pos:column="17"/></name><argument_list pos:line="114" pos:column="17">(<argument><expr><name pos:line="114" pos:column="18">APLOG_MARK<pos:position pos:line="114" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="30">APLOG_DEBUG<pos:position pos:line="114" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="43">0<pos:position pos:line="114" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="46">s<pos:position pos:line="114" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="115" pos:column="18">"session_id[0]=%u, idx-&gt;s_id2=%u"<pos:position pos:line="115" pos:column="54"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="116" pos:column="18">session_id<pos:position pos:line="116" pos:column="28"/></name><index pos:line="116" pos:column="28">[<expr><literal type="number" pos:line="116" pos:column="29">0<pos:position pos:line="116" pos:column="30"/></literal></expr>]<pos:position pos:line="116" pos:column="31"/></index></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="33">session_id<pos:position pos:line="116" pos:column="43"/></name><index pos:line="116" pos:column="43">[<expr><literal type="number" pos:line="116" pos:column="44">1<pos:position pos:line="116" pos:column="45"/></literal></expr>]<pos:position pos:line="116" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="116" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="118" pos:column="5">/* All that remains is to adjust the cache's and queue's "pos_count"s. */</comment>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">shmcb_set_safe_uint<pos:position pos:line="119" pos:column="24"/></name><argument_list pos:line="119" pos:column="24">(<argument><expr><name><name pos:line="119" pos:column="25">cache<pos:position pos:line="119" pos:column="30"/></name><operator pos:line="119" pos:column="30">-&gt;<pos:position pos:line="119" pos:column="35"/></operator><name pos:line="119" pos:column="32">pos_count<pos:position pos:line="119" pos:column="41"/></name></name></expr></argument>,
                       <argument><expr><call><name pos:line="120" pos:column="24">shmcb_get_safe_uint<pos:position pos:line="120" pos:column="43"/></name><argument_list pos:line="120" pos:column="43">(<argument><expr><name><name pos:line="120" pos:column="44">cache<pos:position pos:line="120" pos:column="49"/></name><operator pos:line="120" pos:column="49">-&gt;<pos:position pos:line="120" pos:column="54"/></operator><name pos:line="120" pos:column="51">pos_count<pos:position pos:line="120" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="61"/></argument_list></call> <operator pos:line="120" pos:column="62">+<pos:position pos:line="120" pos:column="63"/></operator> <name pos:line="120" pos:column="64">encoded_len<pos:position pos:line="120" pos:column="75"/></name></expr></argument>)<pos:position pos:line="120" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="121" pos:column="5">shmcb_set_safe_uint<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">(<argument><expr><name><name pos:line="121" pos:column="25">queue<pos:position pos:line="121" pos:column="30"/></name><operator pos:line="121" pos:column="30">-&gt;<pos:position pos:line="121" pos:column="35"/></operator><name pos:line="121" pos:column="32">pos_count<pos:position pos:line="121" pos:column="41"/></name></name></expr></argument>,
                       <argument><expr><call><name pos:line="122" pos:column="24">shmcb_get_safe_uint<pos:position pos:line="122" pos:column="43"/></name><argument_list pos:line="122" pos:column="43">(<argument><expr><name><name pos:line="122" pos:column="44">queue<pos:position pos:line="122" pos:column="49"/></name><operator pos:line="122" pos:column="49">-&gt;<pos:position pos:line="122" pos:column="54"/></operator><name pos:line="122" pos:column="51">pos_count<pos:position pos:line="122" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="61"/></argument_list></call> <operator pos:line="122" pos:column="62">+<pos:position pos:line="122" pos:column="63"/></operator> <literal type="number" pos:line="122" pos:column="64">1<pos:position pos:line="122" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="67"/></expr_stmt>

    <comment type="block" pos:line="124" pos:column="5">/* And just for good debugging measure ... */</comment>
    <expr_stmt><expr><call><name pos:line="125" pos:column="5">ap_log_error<pos:position pos:line="125" pos:column="17"/></name><argument_list pos:line="125" pos:column="17">(<argument><expr><name pos:line="125" pos:column="18">APLOG_MARK<pos:position pos:line="125" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="30">APLOG_DEBUG<pos:position pos:line="125" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="43">0<pos:position pos:line="125" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="46">s<pos:position pos:line="125" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="126" pos:column="18">"leaving now with %u bytes in the cache and %u indexes"<pos:position pos:line="126" pos:column="73"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="127" pos:column="18">shmcb_get_safe_uint<pos:position pos:line="127" pos:column="37"/></name><argument_list pos:line="127" pos:column="37">(<argument><expr><name><name pos:line="127" pos:column="38">cache<pos:position pos:line="127" pos:column="43"/></name><operator pos:line="127" pos:column="43">-&gt;<pos:position pos:line="127" pos:column="48"/></operator><name pos:line="127" pos:column="45">pos_count<pos:position pos:line="127" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="55"/></argument_list></call></expr></argument>,
                 <argument><expr><call><name pos:line="128" pos:column="18">shmcb_get_safe_uint<pos:position pos:line="128" pos:column="37"/></name><argument_list pos:line="128" pos:column="37">(<argument><expr><name><name pos:line="128" pos:column="38">queue<pos:position pos:line="128" pos:column="43"/></name><operator pos:line="128" pos:column="43">-&gt;<pos:position pos:line="128" pos:column="48"/></operator><name pos:line="128" pos:column="45">pos_count<pos:position pos:line="128" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="129" pos:column="5">ap_log_error<pos:position pos:line="129" pos:column="17"/></name><argument_list pos:line="129" pos:column="17">(<argument><expr><name pos:line="129" pos:column="18">APLOG_MARK<pos:position pos:line="129" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="30">APLOG_DEBUG<pos:position pos:line="129" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="43">0<pos:position pos:line="129" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="46">s<pos:position pos:line="129" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="130" pos:column="18">"leaving shmcb_insert_encoded_session"<pos:position pos:line="130" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="58"/></expr_stmt>
    <return pos:line="131" pos:column="5">return <expr><name pos:line="131" pos:column="12">TRUE<pos:position pos:line="131" pos:column="16"/></name></expr>;<pos:position pos:line="131" pos:column="17"/></return>
}<pos:position pos:line="132" pos:column="2"/></block></function></unit>

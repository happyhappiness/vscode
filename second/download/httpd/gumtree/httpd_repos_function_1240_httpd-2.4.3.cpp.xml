<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1240_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name>
<modifier pos:line="2" pos:column="1">*<pos:position pos:line="2" pos:column="2"/></modifier></type><name pos:line="2" pos:column="2">set_cache_minfs<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">cmd_parms<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">parms<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">void<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">in_struct_ptr<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">arg<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">disk_cache_dir_conf<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">dconf<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><operator pos:line="4" pos:column="34">(<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">disk_cache_dir_conf<pos:position pos:line="4" pos:column="54"/></name> <operator pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></operator><operator pos:line="4" pos:column="56">)<pos:position pos:line="4" pos:column="57"/></operator><name pos:line="4" pos:column="57">in_struct_ptr<pos:position pos:line="4" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="71"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">apr_strtoff<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><operator pos:line="6" pos:column="21">&amp;<pos:position pos:line="6" pos:column="26"/></operator><name><name pos:line="6" pos:column="22">dconf<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">minfs<pos:position pos:line="6" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">arg<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="41">NULL<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="47">10<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call> <operator pos:line="6" pos:column="51">!=<pos:position pos:line="6" pos:column="53"/></operator> <name pos:line="6" pos:column="54">APR_SUCCESS<pos:position pos:line="6" pos:column="65"/></name> <operator pos:line="6" pos:column="66">||<pos:position pos:line="6" pos:column="68"/></operator>
            <name><name pos:line="7" pos:column="13">dconf<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">minfs<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">&lt;<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30">
    <block pos:line="8" pos:column="5">{
        <return pos:line="9" pos:column="9">return <expr><literal type="string" pos:line="9" pos:column="16">"CacheMinFileSize argument must be a non-negative integer representing the min size of a file to cache in bytes."<pos:position pos:line="9" pos:column="129"/></literal></expr>;<pos:position pos:line="9" pos:column="130"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">NULL<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

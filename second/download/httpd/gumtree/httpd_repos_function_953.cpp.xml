<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_953.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">register_named_block_function_hook<pos:position pos:line="1" pos:column="54"/></name><parameter_list pos:line="1" pos:column="54">(<parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">name<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                                      <parameter><decl><type><name pos:line="2" pos:column="55">cmd_parms<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">cmd<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                                                      <parameter><decl><type><name pos:line="3" pos:column="55">void<pos:position pos:line="3" pos:column="59"/></name> <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type><name pos:line="3" pos:column="61">mconfig<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>,
                                                      <parameter><decl><type><specifier pos:line="4" pos:column="55">const<pos:position pos:line="4" pos:column="60"/></specifier> <name pos:line="4" pos:column="61">char<pos:position pos:line="4" pos:column="65"/></name> <modifier pos:line="4" pos:column="66">*<pos:position pos:line="4" pos:column="67"/></modifier></type><name pos:line="4" pos:column="67">line<pos:position pos:line="4" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="72"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">function<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_lua_mapped_handler_spec<pos:position pos:line="7" pos:column="31"/></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">spec<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">line<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&amp;&amp;<pos:position pos:line="9" pos:column="24"/></operator> <name><name pos:line="9" pos:column="17">line<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr>]<pos:position pos:line="9" pos:column="24"/></index></name> <operator pos:line="9" pos:column="25">==<pos:position pos:line="9" pos:column="27"/></operator> <literal type="char" pos:line="9" pos:column="28">'&gt;'<pos:position pos:line="9" pos:column="34"/></literal></expr>)<pos:position pos:line="9" pos:column="32"/></condition><then pos:line="9" pos:column="32"> <block pos:line="9" pos:column="33">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">function<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">word<pos:position pos:line="13" pos:column="25"/></name></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">apr_size_t<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">wordlen<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">word<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">ap_getword_conf<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name><name pos:line="15" pos:column="32">cmd<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">pool<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="43">&amp;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="44">line<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">wordlen<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">strlen<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">word<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">wordlen<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">==<pos:position pos:line="17" pos:column="23"/></operator> <literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal> <operator pos:line="17" pos:column="26">||<pos:position pos:line="17" pos:column="28"/></operator> <name><name pos:line="17" pos:column="29">word<pos:position pos:line="17" pos:column="33"/></name><index pos:line="17" pos:column="33">[<expr><name pos:line="17" pos:column="34">wordlen<pos:position pos:line="17" pos:column="41"/></name> <operator pos:line="17" pos:column="42">-<pos:position pos:line="17" pos:column="43"/></operator> <literal type="number" pos:line="17" pos:column="44">1<pos:position pos:line="17" pos:column="45"/></literal></expr>]<pos:position pos:line="17" pos:column="46"/></index></name> <operator pos:line="17" pos:column="47">!=<pos:position pos:line="17" pos:column="49"/></operator> <literal type="char" pos:line="17" pos:column="50">'&gt;'<pos:position pos:line="17" pos:column="56"/></literal></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54"> <block pos:line="17" pos:column="55">{
            <return pos:line="18" pos:column="13">return <expr><call><name pos:line="18" pos:column="20">apr_pstrcat<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name><name pos:line="18" pos:column="32">cmd<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">pool<pos:position pos:line="18" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="43">cmd<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">directive<pos:position pos:line="18" pos:column="57"/></name><operator pos:line="18" pos:column="57">-&gt;<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="59">directive<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="19" pos:column="32">"&gt; takes exactly one argument"<pos:position pos:line="19" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="64">NULL<pos:position pos:line="19" pos:column="68"/></name></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="70"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then>
        <else pos:line="21" pos:column="9">else <block pos:line="21" pos:column="14">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">function<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <call><name pos:line="22" pos:column="24">apr_pstrndup<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name><name pos:line="22" pos:column="37">cmd<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">pool<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">word<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">wordlen<pos:position pos:line="22" pos:column="61"/></name> <operator pos:line="22" pos:column="62">-<pos:position pos:line="22" pos:column="63"/></operator> <literal type="number" pos:line="22" pos:column="64">1<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></else></if>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">spec<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">apr_pcalloc<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name><name pos:line="26" pos:column="24">cmd<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">pool<pos:position pos:line="26" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="35">sizeof<argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">ap_lua_mapped_handler_spec<pos:position pos:line="26" pos:column="68"/></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>

    <block pos:line="28" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">cr_ctx<pos:position pos:line="29" pos:column="15"/></name></type> <name pos:line="29" pos:column="16">ctx<pos:position pos:line="29" pos:column="19"/></name></decl>;<pos:position pos:line="29" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">char<pos:position pos:line="30" pos:column="13"/></name></type> <name><name pos:line="30" pos:column="14">buf<pos:position pos:line="30" pos:column="17"/></name><index pos:line="30" pos:column="17">[<expr><literal type="number" pos:line="30" pos:column="18">32<pos:position pos:line="30" pos:column="20"/></literal></expr>]<pos:position pos:line="30" pos:column="21"/></index></name></decl>;<pos:position pos:line="30" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">lua_State<pos:position pos:line="31" pos:column="18"/></name> <modifier pos:line="31" pos:column="19">*<pos:position pos:line="31" pos:column="20"/></modifier></type><name pos:line="31" pos:column="20">lvm<pos:position pos:line="31" pos:column="23"/></name></decl>;<pos:position pos:line="31" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">char<pos:position pos:line="32" pos:column="13"/></name> <modifier pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></modifier></type><name pos:line="32" pos:column="15">tmp<pos:position pos:line="32" pos:column="18"/></name></decl>;<pos:position pos:line="32" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">int<pos:position pos:line="33" pos:column="12"/></name></type> <name pos:line="33" pos:column="13">rv<pos:position pos:line="33" pos:column="15"/></name></decl>;<pos:position pos:line="33" pos:column="16"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">ap_directive_t<pos:position pos:line="34" pos:column="23"/></name> <modifier pos:line="34" pos:column="24">*<pos:position pos:line="34" pos:column="25"/></modifier><modifier pos:line="34" pos:column="25">*<pos:position pos:line="34" pos:column="26"/></modifier></type><name pos:line="34" pos:column="26">current<pos:position pos:line="34" pos:column="33"/></name></decl>;<pos:position pos:line="34" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">hack_section_baton<pos:position pos:line="35" pos:column="27"/></name> <modifier pos:line="35" pos:column="28">*<pos:position pos:line="35" pos:column="29"/></modifier></type><name pos:line="35" pos:column="29">baton<pos:position pos:line="35" pos:column="34"/></name></decl>;<pos:position pos:line="35" pos:column="35"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="37" pos:column="9">apr_snprintf<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">buf<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="27">sizeof<argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">buf<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="40">"%u"<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="46">cmd<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">-&gt;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="51">config_file<pos:position pos:line="37" pos:column="62"/></name><operator pos:line="37" pos:column="62">-&gt;<pos:position pos:line="37" pos:column="67"/></operator><name pos:line="37" pos:column="64">line_number<pos:position pos:line="37" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">spec<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">file_name<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator>
            <call><name pos:line="39" pos:column="13">apr_pstrcat<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name><name pos:line="39" pos:column="25">cmd<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">pool<pos:position pos:line="39" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="36">cmd<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">config_file<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">name<pos:position pos:line="39" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="60">":"<pos:position pos:line="39" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="65">buf<pos:position pos:line="39" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="70">NULL<pos:position pos:line="39" pos:column="74"/></name></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="76"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">function<pos:position pos:line="40" pos:column="21"/></name></expr>)<pos:position pos:line="40" pos:column="22"/></condition><then pos:line="40" pos:column="22"> <block pos:line="40" pos:column="23">{
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">spec<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">function_name<pos:position pos:line="41" pos:column="32"/></name></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <operator pos:line="41" pos:column="35">(<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="36">char<pos:position pos:line="41" pos:column="40"/></name> <operator pos:line="41" pos:column="41">*<pos:position pos:line="41" pos:column="42"/></operator><operator pos:line="41" pos:column="42">)<pos:position pos:line="41" pos:column="43"/></operator> <name pos:line="41" pos:column="44">function<pos:position pos:line="41" pos:column="52"/></name></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then>
        <else pos:line="43" pos:column="9">else <block pos:line="43" pos:column="14">{
            <expr_stmt><expr><name pos:line="44" pos:column="13">function<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">NULL<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">spec<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">code_cache_style<pos:position pos:line="46" pos:column="31"/></name></name> <operator pos:line="46" pos:column="32">=<pos:position pos:line="46" pos:column="33"/></operator> <name pos:line="46" pos:column="34">APL_CODE_CACHE_FOREVER<pos:position pos:line="46" pos:column="56"/></name></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="48" pos:column="9">ctx<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">.<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">cmd<pos:position pos:line="48" pos:column="16"/></name></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="19">cmd<pos:position pos:line="48" pos:column="22"/></name></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">tmp<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <call><name pos:line="49" pos:column="15">apr_pstrdup<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name><name pos:line="49" pos:column="27">cmd<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">-&gt;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="32">pool<pos:position pos:line="49" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="38">cmd<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">-&gt;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="43">err_directive<pos:position pos:line="49" pos:column="56"/></name><operator pos:line="49" pos:column="56">-&gt;<pos:position pos:line="49" pos:column="61"/></operator><name pos:line="49" pos:column="58">directive<pos:position pos:line="49" pos:column="67"/></name></name> <operator pos:line="49" pos:column="68">+<pos:position pos:line="49" pos:column="69"/></operator> <literal type="number" pos:line="49" pos:column="70">1<pos:position pos:line="49" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ap_str_tolower<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">tmp<pos:position pos:line="50" pos:column="27"/></name></expr></argument>)<pos:position pos:line="50" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">ctx<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">.<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">endstr<pos:position pos:line="51" pos:column="19"/></name></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">tmp<pos:position pos:line="51" pos:column="25"/></name></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">ctx<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">.<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">cfp<pos:position pos:line="52" pos:column="16"/></name></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <name><name pos:line="52" pos:column="19">cmd<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">-&gt;<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="24">config_file<pos:position pos:line="52" pos:column="35"/></name></name></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">ctx<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">.<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">startline<pos:position pos:line="53" pos:column="22"/></name></name> <operator pos:line="53" pos:column="23">=<pos:position pos:line="53" pos:column="24"/></operator> <name><name pos:line="53" pos:column="25">cmd<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">config_file<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">-&gt;<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="43">line_number<pos:position pos:line="53" pos:column="54"/></name></name></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt>

        <comment type="block" pos:line="55" pos:column="9">/* This lua State is used only to compile the input strings -&gt; bytecode, so we don't need anything extra. */</comment>
        <expr_stmt><expr><name pos:line="56" pos:column="9">lvm<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">luaL_newstate<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">()<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="58" pos:column="9">lua_settop<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">lvm<pos:position pos:line="58" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="25">0<pos:position pos:line="58" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name pos:line="60" pos:column="9">rv<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <call><name pos:line="60" pos:column="14">lua_load<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">lvm<pos:position pos:line="60" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="28">direct_chunkreader<pos:position pos:line="60" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="48">&amp;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="49">ctx<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="54">spec<pos:position pos:line="60" pos:column="58"/></name><operator pos:line="60" pos:column="58">-&gt;<pos:position pos:line="60" pos:column="63"/></operator><name pos:line="60" pos:column="60">file_name<pos:position pos:line="60" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="71"/></expr_stmt>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">rv<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">!=<pos:position pos:line="62" pos:column="18"/></operator> <literal type="number" pos:line="62" pos:column="19">0<pos:position pos:line="62" pos:column="20"/></literal></expr>)<pos:position pos:line="62" pos:column="21"/></condition><then pos:line="62" pos:column="21"> <block pos:line="62" pos:column="22">{
            <decl_stmt><decl><type><specifier pos:line="63" pos:column="13">const<pos:position pos:line="63" pos:column="18"/></specifier> <name pos:line="63" pos:column="19">char<pos:position pos:line="63" pos:column="23"/></name> <modifier pos:line="63" pos:column="24">*<pos:position pos:line="63" pos:column="25"/></modifier></type><name pos:line="63" pos:column="25">errstr<pos:position pos:line="63" pos:column="31"/></name> <init pos:line="63" pos:column="32">=
                <expr><call><name pos:line="64" pos:column="17">apr_pstrcat<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><name><name pos:line="64" pos:column="29">cmd<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">-&gt;<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="34">pool<pos:position pos:line="64" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="40">"Lua Error:"<pos:position pos:line="64" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="54">lua_tostring<pos:position pos:line="64" pos:column="66"/></name><argument_list pos:line="64" pos:column="66">(<argument><expr><name pos:line="64" pos:column="67">lvm<pos:position pos:line="64" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="72">-<pos:position pos:line="64" pos:column="73"/></operator><literal type="number" pos:line="64" pos:column="73">1<pos:position pos:line="64" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="75"/></argument_list></call></expr></argument>,
                            <argument><expr><name pos:line="65" pos:column="29">NULL<pos:position pos:line="65" pos:column="33"/></name></expr></argument>)<pos:position pos:line="65" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="35"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">lua_close<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">lvm<pos:position pos:line="66" pos:column="26"/></name></expr></argument>)<pos:position pos:line="66" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
            <return pos:line="67" pos:column="13">return <expr><name pos:line="67" pos:column="20">errstr<pos:position pos:line="67" pos:column="26"/></name></expr>;<pos:position pos:line="67" pos:column="27"/></return>
        }<pos:position pos:line="68" pos:column="10"/></block></then>
        <else pos:line="69" pos:column="9">else <block pos:line="69" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="70" pos:column="13">luaL_Buffer<pos:position pos:line="70" pos:column="24"/></name></type> <name pos:line="70" pos:column="25">b<pos:position pos:line="70" pos:column="26"/></name></decl>;<pos:position pos:line="70" pos:column="27"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">luaL_buffinit<pos:position pos:line="71" pos:column="26"/></name><argument_list pos:line="71" pos:column="26">(<argument><expr><name pos:line="71" pos:column="27">lvm<pos:position pos:line="71" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="32">&amp;<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="33">b<pos:position pos:line="71" pos:column="34"/></name></expr></argument>)<pos:position pos:line="71" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">lua_dump<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">lvm<pos:position pos:line="72" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="27">ldump_writer<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="41">&amp;<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="42">b<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">luaL_pushresult<pos:position pos:line="73" pos:column="28"/></name><argument_list pos:line="73" pos:column="28">(<argument><expr><operator pos:line="73" pos:column="29">&amp;<pos:position pos:line="73" pos:column="34"/></operator><name pos:line="73" pos:column="30">b<pos:position pos:line="73" pos:column="31"/></name></expr></argument>)<pos:position pos:line="73" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="74" pos:column="13">spec<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">-&gt;<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="19">bytecode_len<pos:position pos:line="74" pos:column="31"/></name></name> <operator pos:line="74" pos:column="32">=<pos:position pos:line="74" pos:column="33"/></operator> <call><name pos:line="74" pos:column="34">lua_strlen<pos:position pos:line="74" pos:column="44"/></name><argument_list pos:line="74" pos:column="44">(<argument><expr><name pos:line="74" pos:column="45">lvm<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="50">-<pos:position pos:line="74" pos:column="51"/></operator><literal type="number" pos:line="74" pos:column="51">1<pos:position pos:line="74" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="75" pos:column="13">spec<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">-&gt;<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="19">bytecode<pos:position pos:line="75" pos:column="27"/></name></name> <operator pos:line="75" pos:column="28">=<pos:position pos:line="75" pos:column="29"/></operator>
                <call><name pos:line="76" pos:column="17">apr_pstrmemdup<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><name><name pos:line="76" pos:column="32">cmd<pos:position pos:line="76" pos:column="35"/></name><operator pos:line="76" pos:column="35">-&gt;<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="37">pool<pos:position pos:line="76" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="43">lua_tostring<pos:position pos:line="76" pos:column="55"/></name><argument_list pos:line="76" pos:column="55">(<argument><expr><name pos:line="76" pos:column="56">lvm<pos:position pos:line="76" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="61">-<pos:position pos:line="76" pos:column="62"/></operator><literal type="number" pos:line="76" pos:column="62">1<pos:position pos:line="76" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="64"/></argument_list></call></expr></argument>,
                               <argument><expr><name><name pos:line="77" pos:column="32">spec<pos:position pos:line="77" pos:column="36"/></name><operator pos:line="77" pos:column="36">-&gt;<pos:position pos:line="77" pos:column="41"/></operator><name pos:line="77" pos:column="38">bytecode_len<pos:position pos:line="77" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">lua_close<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><name pos:line="78" pos:column="23">lvm<pos:position pos:line="78" pos:column="26"/></name></expr></argument>)<pos:position pos:line="78" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="81" pos:column="9">current<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">=<pos:position pos:line="81" pos:column="18"/></operator> <name pos:line="81" pos:column="19">mconfig<pos:position pos:line="81" pos:column="26"/></name></expr>;<pos:position pos:line="81" pos:column="27"/></expr_stmt>

        <comment type="block" pos:line="83" pos:column="9">/* Here, we have to replace our current config node for the next pass */</comment>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">!<pos:position pos:line="84" pos:column="14"/></operator><operator pos:line="84" pos:column="14">*<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="15">current<pos:position pos:line="84" pos:column="22"/></name></expr>)<pos:position pos:line="84" pos:column="23"/></condition><then pos:line="84" pos:column="23"> <block pos:line="84" pos:column="24">{
            <expr_stmt><expr><operator pos:line="85" pos:column="13">*<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="14">current<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">=<pos:position pos:line="85" pos:column="23"/></operator> <call><name pos:line="85" pos:column="24">apr_pcalloc<pos:position pos:line="85" pos:column="35"/></name><argument_list pos:line="85" pos:column="35">(<argument><expr><name><name pos:line="85" pos:column="36">cmd<pos:position pos:line="85" pos:column="39"/></name><operator pos:line="85" pos:column="39">-&gt;<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="41">pool<pos:position pos:line="85" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="47">sizeof<argument_list pos:line="85" pos:column="53">(<argument><expr><operator pos:line="85" pos:column="54">*<pos:position pos:line="85" pos:column="55"/></operator><operator pos:line="85" pos:column="55">*<pos:position pos:line="85" pos:column="56"/></operator><name pos:line="85" pos:column="56">current<pos:position pos:line="85" pos:column="63"/></name></expr></argument>)<pos:position pos:line="85" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="85" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="88" pos:column="9">baton<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">=<pos:position pos:line="88" pos:column="16"/></operator> <call><name pos:line="88" pos:column="17">apr_pcalloc<pos:position pos:line="88" pos:column="28"/></name><argument_list pos:line="88" pos:column="28">(<argument><expr><name><name pos:line="88" pos:column="29">cmd<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">-&gt;<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="34">pool<pos:position pos:line="88" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="88" pos:column="40">sizeof<argument_list pos:line="88" pos:column="46">(<argument><expr><name pos:line="88" pos:column="47">hack_section_baton<pos:position pos:line="88" pos:column="65"/></name></expr></argument>)<pos:position pos:line="88" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="89" pos:column="9">baton<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">-&gt;<pos:position pos:line="89" pos:column="19"/></operator><name pos:line="89" pos:column="16">name<pos:position pos:line="89" pos:column="20"/></name></name> <operator pos:line="89" pos:column="21">=<pos:position pos:line="89" pos:column="22"/></operator> <name pos:line="89" pos:column="23">name<pos:position pos:line="89" pos:column="27"/></name></expr>;<pos:position pos:line="89" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="90" pos:column="9">baton<pos:position pos:line="90" pos:column="14"/></name><operator pos:line="90" pos:column="14">-&gt;<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="16">spec<pos:position pos:line="90" pos:column="20"/></name></name> <operator pos:line="90" pos:column="21">=<pos:position pos:line="90" pos:column="22"/></operator> <name pos:line="90" pos:column="23">spec<pos:position pos:line="90" pos:column="27"/></name></expr>;<pos:position pos:line="90" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name><operator pos:line="92" pos:column="9">(<pos:position pos:line="92" pos:column="10"/></operator><operator pos:line="92" pos:column="10">*<pos:position pos:line="92" pos:column="11"/></operator><name pos:line="92" pos:column="11">current<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">)<pos:position pos:line="92" pos:column="19"/></operator><operator pos:line="92" pos:column="19">-&gt;<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="21">filename<pos:position pos:line="92" pos:column="29"/></name></name> <operator pos:line="92" pos:column="30">=<pos:position pos:line="92" pos:column="31"/></operator> <name><name pos:line="92" pos:column="32">cmd<pos:position pos:line="92" pos:column="35"/></name><operator pos:line="92" pos:column="35">-&gt;<pos:position pos:line="92" pos:column="40"/></operator><name pos:line="92" pos:column="37">config_file<pos:position pos:line="92" pos:column="48"/></name><operator pos:line="92" pos:column="48">-&gt;<pos:position pos:line="92" pos:column="53"/></operator><name pos:line="92" pos:column="50">name<pos:position pos:line="92" pos:column="54"/></name></name></expr>;<pos:position pos:line="92" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="93" pos:column="9">(<pos:position pos:line="93" pos:column="10"/></operator><operator pos:line="93" pos:column="10">*<pos:position pos:line="93" pos:column="11"/></operator><name pos:line="93" pos:column="11">current<pos:position pos:line="93" pos:column="18"/></name><operator pos:line="93" pos:column="18">)<pos:position pos:line="93" pos:column="19"/></operator><operator pos:line="93" pos:column="19">-&gt;<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="21">line_num<pos:position pos:line="93" pos:column="29"/></name></name> <operator pos:line="93" pos:column="30">=<pos:position pos:line="93" pos:column="31"/></operator> <name><name pos:line="93" pos:column="32">cmd<pos:position pos:line="93" pos:column="35"/></name><operator pos:line="93" pos:column="35">-&gt;<pos:position pos:line="93" pos:column="40"/></operator><name pos:line="93" pos:column="37">config_file<pos:position pos:line="93" pos:column="48"/></name><operator pos:line="93" pos:column="48">-&gt;<pos:position pos:line="93" pos:column="53"/></operator><name pos:line="93" pos:column="50">line_number<pos:position pos:line="93" pos:column="61"/></name></name></expr>;<pos:position pos:line="93" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="94" pos:column="9">(<pos:position pos:line="94" pos:column="10"/></operator><operator pos:line="94" pos:column="10">*<pos:position pos:line="94" pos:column="11"/></operator><name pos:line="94" pos:column="11">current<pos:position pos:line="94" pos:column="18"/></name><operator pos:line="94" pos:column="18">)<pos:position pos:line="94" pos:column="19"/></operator><operator pos:line="94" pos:column="19">-&gt;<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="21">directive<pos:position pos:line="94" pos:column="30"/></name></name> <operator pos:line="94" pos:column="31">=<pos:position pos:line="94" pos:column="32"/></operator>
            <call><name pos:line="95" pos:column="13">apr_pstrdup<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><name><name pos:line="95" pos:column="25">cmd<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">-&gt;<pos:position pos:line="95" pos:column="33"/></operator><name pos:line="95" pos:column="30">pool<pos:position pos:line="95" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="36">"Lua_____ByteCodeHack"<pos:position pos:line="95" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="96" pos:column="9">(<pos:position pos:line="96" pos:column="10"/></operator><operator pos:line="96" pos:column="10">*<pos:position pos:line="96" pos:column="11"/></operator><name pos:line="96" pos:column="11">current<pos:position pos:line="96" pos:column="18"/></name><operator pos:line="96" pos:column="18">)<pos:position pos:line="96" pos:column="19"/></operator><operator pos:line="96" pos:column="19">-&gt;<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="21">args<pos:position pos:line="96" pos:column="25"/></name></name> <operator pos:line="96" pos:column="26">=<pos:position pos:line="96" pos:column="27"/></operator> <name pos:line="96" pos:column="28">NULL<pos:position pos:line="96" pos:column="32"/></name></expr>;<pos:position pos:line="96" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="97" pos:column="9">(<pos:position pos:line="97" pos:column="10"/></operator><operator pos:line="97" pos:column="10">*<pos:position pos:line="97" pos:column="11"/></operator><name pos:line="97" pos:column="11">current<pos:position pos:line="97" pos:column="18"/></name><operator pos:line="97" pos:column="18">)<pos:position pos:line="97" pos:column="19"/></operator><operator pos:line="97" pos:column="19">-&gt;<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="21">data<pos:position pos:line="97" pos:column="25"/></name></name> <operator pos:line="97" pos:column="26">=<pos:position pos:line="97" pos:column="27"/></operator> <name pos:line="97" pos:column="28">baton<pos:position pos:line="97" pos:column="33"/></name></expr>;<pos:position pos:line="97" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block>

    <return pos:line="100" pos:column="5">return <expr><name pos:line="100" pos:column="12">NULL<pos:position pos:line="100" pos:column="16"/></name></expr>;<pos:position pos:line="100" pos:column="17"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

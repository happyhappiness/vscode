<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6575.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_filter_request_in<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">ap_filter_t<pos:position pos:line="1" pos:column="46"/></name><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">f<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_bucket_brigade<pos:position pos:line="2" pos:column="53"/></name><modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">bb<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">ap_input_mode_t<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">mode<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="4" pos:column="35">apr_read_type_e<pos:position pos:line="4" pos:column="50"/></name></type> <name pos:line="4" pos:column="51">block<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="5" pos:column="35">apr_off_t<pos:position pos:line="5" pos:column="44"/></name></type> <name pos:line="5" pos:column="45">readbytes<pos:position pos:line="5" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="55"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">h2_task<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">task<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name><name pos:line="7" pos:column="21">f<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">ctx<pos:position pos:line="7" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">request_rec<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">r<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name><name pos:line="8" pos:column="22">f<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">r<pos:position pos:line="8" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">status<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><name pos:line="9" pos:column="27">APR_SUCCESS<pos:position pos:line="9" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_bucket<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">b<pos:position pos:line="10" pos:column="18"/></name></decl>, <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="21">next<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ap_log_rerror<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">APLOG_MARK<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">APLOG_TRACE2<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="45">0<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="48">f<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">r<pos:position pos:line="12" pos:column="52"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="13" pos:column="19">"h2_task(%s): request filter, exp=%d"<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="58">task<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">id<pos:position pos:line="13" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="68">r<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">-&gt;<pos:position pos:line="13" pos:column="74"/></operator><name pos:line="13" pos:column="71">expecting_100<pos:position pos:line="13" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="86"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">task<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">request<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">chunked<pos:position pos:line="14" pos:column="32"/></name></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">status<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">ap_get_brigade<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name><name pos:line="15" pos:column="33">f<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">next<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">bb<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">mode<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">block<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">readbytes<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
        <comment type="block" pos:line="16" pos:column="9">/* pipe data through, just take care of trailers */</comment>
        <for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">b<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">bb<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></init> 
             <condition><expr><name pos:line="18" pos:column="14">b<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">!=<pos:position pos:line="18" pos:column="18"/></operator> <call><name pos:line="18" pos:column="19">APR_BRIGADE_SENTINEL<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">bb<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></condition> <incr><expr><name pos:line="18" pos:column="45">b<pos:position pos:line="18" pos:column="46"/></name> <operator pos:line="18" pos:column="47">=<pos:position pos:line="18" pos:column="48"/></operator> <name pos:line="18" pos:column="49">next<pos:position pos:line="18" pos:column="53"/></name></expr></incr>)<pos:position pos:line="18" pos:column="54"/></control> <block pos:line="18" pos:column="55">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">next<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <call><name pos:line="19" pos:column="20">APR_BUCKET_NEXT<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">b<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><call><name pos:line="20" pos:column="17">H2_BUCKET_IS_HEADERS<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">b<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
                <decl_stmt><decl><type><name pos:line="21" pos:column="17">h2_headers<pos:position pos:line="21" pos:column="27"/></name> <modifier pos:line="21" pos:column="28">*<pos:position pos:line="21" pos:column="29"/></modifier></type><name pos:line="21" pos:column="29">headers<pos:position pos:line="21" pos:column="36"/></name> <init pos:line="21" pos:column="37">= <expr><call><name pos:line="21" pos:column="39">h2_bucket_headers_get<pos:position pos:line="21" pos:column="60"/></name><argument_list pos:line="21" pos:column="60">(<argument><expr><name pos:line="21" pos:column="61">b<pos:position pos:line="21" pos:column="62"/></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="64"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">ap_assert<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">headers<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">ap_log_rerror<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">APLOG_MARK<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">APLOG_TRACE2<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="57">0<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="60">r<pos:position pos:line="23" pos:column="61"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="24" pos:column="31">"h2_task(%s): receiving trailers"<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="66">task<pos:position pos:line="24" pos:column="70"/></name><operator pos:line="24" pos:column="70">-&gt;<pos:position pos:line="24" pos:column="75"/></operator><name pos:line="24" pos:column="72">id<pos:position pos:line="24" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="76"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">r<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">trailers_in<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <call><name pos:line="25" pos:column="34">apr_table_clone<pos:position pos:line="25" pos:column="49"/></name><argument_list pos:line="25" pos:column="49">(<argument><expr><name><name pos:line="25" pos:column="50">r<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">pool<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="59">headers<pos:position pos:line="25" pos:column="66"/></name><operator pos:line="25" pos:column="66">-&gt;<pos:position pos:line="25" pos:column="71"/></operator><name pos:line="25" pos:column="68">headers<pos:position pos:line="25" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">b<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">apr_bucket_destroy<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">b<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">ap_remove_input_filter<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><name pos:line="28" pos:column="40">f<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
                <break pos:line="29" pos:column="17">break;<pos:position pos:line="29" pos:column="23"/></break>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>
        }<pos:position pos:line="31" pos:column="10"/></block></for>
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">status<pos:position pos:line="32" pos:column="22"/></name></expr>;<pos:position pos:line="32" pos:column="23"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* Things are more complicated. The standard HTTP input filter, which
     * does a lot what we do not want to duplicate, also cares about chunked
     * transfer encoding and trailers.
     * We need to simulate chunked encoding for it to be happy.
     */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">status<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <call><name pos:line="40" pos:column="19">read_and_chunk<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">f<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">task<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">block<pos:position pos:line="40" pos:column="48"/></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call><operator pos:line="40" pos:column="49">)<pos:position pos:line="40" pos:column="50"/></operator> <operator pos:line="40" pos:column="51">!=<pos:position pos:line="40" pos:column="53"/></operator> <name pos:line="40" pos:column="54">APR_SUCCESS<pos:position pos:line="40" pos:column="65"/></name></expr>)<pos:position pos:line="40" pos:column="66"/></condition><then pos:line="40" pos:column="66"> <block pos:line="40" pos:column="67">{
        <return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">status<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">mode<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">==<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">AP_MODE_EXHAUSTIVE<pos:position pos:line="44" pos:column="35"/></name></expr>)<pos:position pos:line="44" pos:column="36"/></condition><then pos:line="44" pos:column="36"> <block pos:line="44" pos:column="37">{
        <comment type="block" pos:line="45" pos:column="9">/* return all we have */</comment>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">APR_BRIGADE_CONCAT<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">bb<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="32">task<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">-&gt;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="38">input<pos:position pos:line="46" pos:column="43"/></name><operator pos:line="46" pos:column="43">.<pos:position pos:line="46" pos:column="44"/></operator><name pos:line="46" pos:column="44">bbchunk<pos:position pos:line="46" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><name pos:line="48" pos:column="14">mode<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">==<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">AP_MODE_READBYTES<pos:position pos:line="48" pos:column="39"/></name></expr>)<pos:position pos:line="48" pos:column="40"/></condition><then pos:line="48" pos:column="40"> <block pos:line="48" pos:column="41">{
        <expr_stmt><expr><name pos:line="49" pos:column="9">status<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <call><name pos:line="49" pos:column="18">h2_brigade_concat_length<pos:position pos:line="49" pos:column="42"/></name><argument_list pos:line="49" pos:column="42">(<argument><expr><name pos:line="49" pos:column="43">bb<pos:position pos:line="49" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="47">task<pos:position pos:line="49" pos:column="51"/></name><operator pos:line="49" pos:column="51">-&gt;<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="53">input<pos:position pos:line="49" pos:column="58"/></name><operator pos:line="49" pos:column="58">.<pos:position pos:line="49" pos:column="59"/></operator><name pos:line="49" pos:column="59">bbchunk<pos:position pos:line="49" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="68">readbytes<pos:position pos:line="49" pos:column="77"/></name></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="51" pos:column="5">else <if pos:line="51" pos:column="10">if <condition pos:line="51" pos:column="13">(<expr><name pos:line="51" pos:column="14">mode<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">==<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">AP_MODE_SPECULATIVE<pos:position pos:line="51" pos:column="41"/></name></expr>)<pos:position pos:line="51" pos:column="42"/></condition><then pos:line="51" pos:column="42"> <block pos:line="51" pos:column="43">{
        <expr_stmt><expr><name pos:line="52" pos:column="9">status<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <call><name pos:line="52" pos:column="18">h2_brigade_copy_length<pos:position pos:line="52" pos:column="40"/></name><argument_list pos:line="52" pos:column="40">(<argument><expr><name pos:line="52" pos:column="41">bb<pos:position pos:line="52" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="45">task<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">-&gt;<pos:position pos:line="52" pos:column="54"/></operator><name pos:line="52" pos:column="51">input<pos:position pos:line="52" pos:column="56"/></name><operator pos:line="52" pos:column="56">.<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="57">bbchunk<pos:position pos:line="52" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="66">readbytes<pos:position pos:line="52" pos:column="75"/></name></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><name pos:line="54" pos:column="14">mode<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">==<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">AP_MODE_GETLINE<pos:position pos:line="54" pos:column="37"/></name></expr>)<pos:position pos:line="54" pos:column="38"/></condition><then pos:line="54" pos:column="38"> <block pos:line="54" pos:column="39">{
        <comment type="block" pos:line="55" pos:column="9">/* we are reading a single LF line, e.g. the HTTP headers. 
         * this has the nasty side effect to split the bucket, even
         * though it ends with CRLF and creates a 0 length bucket */</comment>
        <expr_stmt><expr><name pos:line="58" pos:column="9">status<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <call><name pos:line="58" pos:column="18">apr_brigade_split_line<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><name pos:line="58" pos:column="41">bb<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="45">task<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">input<pos:position pos:line="58" pos:column="56"/></name><operator pos:line="58" pos:column="56">.<pos:position pos:line="58" pos:column="57"/></operator><name pos:line="58" pos:column="57">bbchunk<pos:position pos:line="58" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="66">block<pos:position pos:line="58" pos:column="71"/></name></expr></argument>, 
                                        <argument><expr><name pos:line="59" pos:column="41">HUGE_STRING_LEN<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><call><name pos:line="60" pos:column="13">APLOGctrace1<pos:position pos:line="60" pos:column="25"/></name><argument_list pos:line="60" pos:column="25">(<argument><expr><name><name pos:line="60" pos:column="26">f<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">-&gt;<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="29">c<pos:position pos:line="60" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="32"/></condition><then pos:line="60" pos:column="32"> <block pos:line="60" pos:column="33">{
            <decl_stmt><decl><type><name pos:line="61" pos:column="13">char<pos:position pos:line="61" pos:column="17"/></name></type> <name><name pos:line="61" pos:column="18">buffer<pos:position pos:line="61" pos:column="24"/></name><index pos:line="61" pos:column="24">[<expr><literal type="number" pos:line="61" pos:column="25">1024<pos:position pos:line="61" pos:column="29"/></literal></expr>]<pos:position pos:line="61" pos:column="30"/></index></name></decl>;<pos:position pos:line="61" pos:column="31"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="62" pos:column="13">apr_size_t<pos:position pos:line="62" pos:column="23"/></name></type> <name pos:line="62" pos:column="24">len<pos:position pos:line="62" pos:column="27"/></name> <init pos:line="62" pos:column="28">= <expr><sizeof pos:line="62" pos:column="30">sizeof<argument_list pos:line="62" pos:column="36">(<argument><expr><name pos:line="62" pos:column="37">buffer<pos:position pos:line="62" pos:column="43"/></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></sizeof><operator pos:line="62" pos:column="44">-<pos:position pos:line="62" pos:column="45"/></operator><literal type="number" pos:line="62" pos:column="45">1<pos:position pos:line="62" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="62" pos:column="47"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">apr_brigade_flatten<pos:position pos:line="63" pos:column="32"/></name><argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">bb<pos:position pos:line="63" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="37">buffer<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="45">&amp;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="46">len<pos:position pos:line="63" pos:column="49"/></name></expr></argument>)<pos:position pos:line="63" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">buffer<pos:position pos:line="64" pos:column="19"/></name><index pos:line="64" pos:column="19">[<expr><name pos:line="64" pos:column="20">len<pos:position pos:line="64" pos:column="23"/></name></expr>]<pos:position pos:line="64" pos:column="24"/></index></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <literal type="number" pos:line="64" pos:column="27">0<pos:position pos:line="64" pos:column="28"/></literal></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">ap_log_cerror<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">APLOG_MARK<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">APLOG_TRACE1<pos:position pos:line="65" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="53">status<pos:position pos:line="65" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="61">f<pos:position pos:line="65" pos:column="62"/></name><operator pos:line="65" pos:column="62">-&gt;<pos:position pos:line="65" pos:column="67"/></operator><name pos:line="65" pos:column="64">c<pos:position pos:line="65" pos:column="65"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="66" pos:column="27">"h2_task(%s): getline: %s"<pos:position pos:line="66" pos:column="53"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="67" pos:column="27">task<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">id<pos:position pos:line="67" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="37">buffer<pos:position pos:line="67" pos:column="43"/></name></expr></argument>)<pos:position pos:line="67" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if></elseif>
    <else pos:line="70" pos:column="5">else <block pos:line="70" pos:column="10">{
        <comment type="block" pos:line="71" pos:column="9">/* Hmm, well. There is mode AP_MODE_EATCRLF, but we chose not
         * to support it. Seems to work. */</comment>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">ap_log_cerror<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name pos:line="73" pos:column="23">APLOG_MARK<pos:position pos:line="73" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="35">APLOG_ERR<pos:position pos:line="73" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">APR_ENOTIMPL<pos:position pos:line="73" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="60">f<pos:position pos:line="73" pos:column="61"/></name><operator pos:line="73" pos:column="61">-&gt;<pos:position pos:line="73" pos:column="66"/></operator><name pos:line="73" pos:column="63">c<pos:position pos:line="73" pos:column="64"/></name></name></expr></argument>,
                      <argument><expr><call><name pos:line="74" pos:column="23">APLOGNO<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><literal type="number" pos:line="74" pos:column="31">02942<pos:position pos:line="74" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="37"/></argument_list></call> 
                      <literal type="string" pos:line="75" pos:column="23">"h2_task, unsupported READ mode %d"<pos:position pos:line="75" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="60">mode<pos:position pos:line="75" pos:column="64"/></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name pos:line="76" pos:column="9">status<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">=<pos:position pos:line="76" pos:column="17"/></operator> <name pos:line="76" pos:column="18">APR_ENOTIMPL<pos:position pos:line="76" pos:column="30"/></name></expr>;<pos:position pos:line="76" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></else></if>
    
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">h2_util_bb_log<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><name><name pos:line="79" pos:column="20">f<pos:position pos:line="79" pos:column="21"/></name><operator pos:line="79" pos:column="21">-&gt;<pos:position pos:line="79" pos:column="26"/></operator><name pos:line="79" pos:column="23">c<pos:position pos:line="79" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="26">task<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">-&gt;<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="32">stream_id<pos:position pos:line="79" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="43">APLOG_TRACE2<pos:position pos:line="79" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="57">"forwarding input"<pos:position pos:line="79" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="77">bb<pos:position pos:line="79" pos:column="79"/></name></expr></argument>)<pos:position pos:line="79" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="81"/></expr_stmt>
    <return pos:line="80" pos:column="5">return <expr><name pos:line="80" pos:column="12">status<pos:position pos:line="80" pos:column="18"/></name></expr>;<pos:position pos:line="80" pos:column="19"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

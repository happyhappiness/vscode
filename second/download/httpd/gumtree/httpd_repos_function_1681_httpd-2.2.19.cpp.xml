<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1681_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ap_ssi_parse_string<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">include_ctx_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ctx<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">in<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">char<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">out<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_size_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">length<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">leave_name<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">ctx<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">intern<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">r<pos:position pos:line="4" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">result_item_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">result<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>, <modifier pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="36">current<pos:position pos:line="5" pos:column="43"/></name> <init pos:line="5" pos:column="44">= <expr><name pos:line="5" pos:column="46">NULL<pos:position pos:line="5" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">outlen<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="28">inlen<pos:position pos:line="6" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="35">span<pos:position pos:line="6" pos:column="39"/></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">ret<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="24">eout<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">p<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">out<pos:position pos:line="10" pos:column="12"/></name></expr>)<pos:position pos:line="10" pos:column="13"/></condition><then pos:line="10" pos:column="13"> <block pos:line="10" pos:column="14">{
        <comment type="block" pos:line="11" pos:column="9">/* sanity check, out &amp;&amp; !length is not supported */</comment>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_assert<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">out<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&amp;&amp;<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="26">length<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">out<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">eout<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">out<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">+<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">length<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">-<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="31">1<pos:position pos:line="15" pos:column="32"/></literal></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">span<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">strcspn<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">in<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="24">"\\$"<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">inlen<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">strlen<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">in<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* fast exit */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">inlen<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">==<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">span<pos:position pos:line="22" pos:column="22"/></name></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23"> <block pos:line="22" pos:column="24">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">out<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17"> <block pos:line="23" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">apr_cpystrn<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">out<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">in<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">length<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then>
        <else pos:line="26" pos:column="9">else <block pos:line="26" pos:column="14">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">ret<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="19">apr_pstrmemdup<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name><name pos:line="27" pos:column="34">ctx<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">pool<pos:position pos:line="27" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">in<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="27" pos:column="49">(<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">length<pos:position pos:line="27" pos:column="56"/></name> <operator pos:line="27" pos:column="57">&amp;&amp;<pos:position pos:line="27" pos:column="67"/></operator> <name pos:line="27" pos:column="60">length<pos:position pos:line="27" pos:column="66"/></name> <operator pos:line="27" pos:column="67">&lt;=<pos:position pos:line="27" pos:column="72"/></operator> <name pos:line="27" pos:column="70">inlen<pos:position pos:line="27" pos:column="75"/></name><operator pos:line="27" pos:column="75">)<pos:position pos:line="27" pos:column="76"/></operator></expr>
                                                ?<pos:position pos:line="28" pos:column="50"/></condition><then pos:line="28" pos:column="50"> <expr><name pos:line="28" pos:column="51">length<pos:position pos:line="28" pos:column="57"/></name> <operator pos:line="28" pos:column="58">-<pos:position pos:line="28" pos:column="59"/></operator> <literal type="number" pos:line="28" pos:column="60">1<pos:position pos:line="28" pos:column="61"/></literal></expr> <pos:position pos:line="28" pos:column="62"/></then><else pos:line="28" pos:column="62">: <expr><name pos:line="28" pos:column="64">inlen<pos:position pos:line="28" pos:column="69"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></else></if>

        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">ret<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* well, actually something to do */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">p<pos:position pos:line="35" pos:column="6"/></name> <operator pos:line="35" pos:column="7">=<pos:position pos:line="35" pos:column="8"/></operator> <name pos:line="35" pos:column="9">in<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">+<pos:position pos:line="35" pos:column="13"/></operator> <name pos:line="35" pos:column="14">span<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">out<pos:position pos:line="37" pos:column="12"/></name></expr>)<pos:position pos:line="37" pos:column="13"/></condition><then pos:line="37" pos:column="13"> <block pos:line="37" pos:column="14">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">span<pos:position pos:line="38" pos:column="17"/></name></expr>)<pos:position pos:line="38" pos:column="18"/></condition><then pos:line="38" pos:column="18"> <block pos:line="38" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">memcpy<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">out<pos:position pos:line="39" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="25">in<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="39" pos:column="29">(<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">out<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">+<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="34">span<pos:position pos:line="39" pos:column="38"/></name> <operator pos:line="39" pos:column="39">&lt;=<pos:position pos:line="39" pos:column="44"/></operator> <name pos:line="39" pos:column="42">eout<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">)<pos:position pos:line="39" pos:column="47"/></operator></expr> ?<pos:position pos:line="39" pos:column="49"/></condition><then pos:line="39" pos:column="49"> <expr><name pos:line="39" pos:column="50">span<pos:position pos:line="39" pos:column="54"/></name></expr> <pos:position pos:line="39" pos:column="55"/></then><else pos:line="39" pos:column="55">: <expr><operator pos:line="39" pos:column="57">(<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="58">eout<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">-<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="63">out<pos:position pos:line="39" pos:column="66"/></name><operator pos:line="39" pos:column="66">)<pos:position pos:line="39" pos:column="67"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">out<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">+=<pos:position pos:line="40" pos:column="19"/></operator> <name pos:line="40" pos:column="20">span<pos:position pos:line="40" pos:column="24"/></name></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">current<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">result<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <call><name pos:line="44" pos:column="28">apr_palloc<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><name><name pos:line="44" pos:column="39">ctx<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">dpool<pos:position pos:line="44" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="51">sizeof<argument_list pos:line="44" pos:column="57">(<argument><expr><operator pos:line="44" pos:column="58">*<pos:position pos:line="44" pos:column="59"/></operator><name pos:line="44" pos:column="59">result<pos:position pos:line="44" pos:column="65"/></name></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">current<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">next<pos:position pos:line="45" pos:column="22"/></name></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <name pos:line="45" pos:column="25">NULL<pos:position pos:line="45" pos:column="29"/></name></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">current<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">string<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="27">in<pos:position pos:line="46" pos:column="29"/></name></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">current<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">len<pos:position pos:line="47" pos:column="21"/></name></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">span<pos:position pos:line="47" pos:column="28"/></name></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="48" pos:column="9">outlen<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">span<pos:position pos:line="48" pos:column="22"/></name></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="51" pos:column="5">/* loop for specials */</comment>
    <do pos:line="52" pos:column="5">do <block pos:line="52" pos:column="8">{
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">(<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">out<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">&amp;&amp;<pos:position pos:line="53" pos:column="28"/></operator> <name pos:line="53" pos:column="21">out<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">&gt;=<pos:position pos:line="53" pos:column="30"/></operator> <name pos:line="53" pos:column="28">eout<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">)<pos:position pos:line="53" pos:column="33"/></operator> <operator pos:line="53" pos:column="34">||<pos:position pos:line="53" pos:column="36"/></operator> <operator pos:line="53" pos:column="37">(<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">length<pos:position pos:line="53" pos:column="44"/></name> <operator pos:line="53" pos:column="45">&amp;&amp;<pos:position pos:line="53" pos:column="55"/></operator> <name pos:line="53" pos:column="48">outlen<pos:position pos:line="53" pos:column="54"/></name> <operator pos:line="53" pos:column="55">&gt;=<pos:position pos:line="53" pos:column="60"/></operator> <name pos:line="53" pos:column="58">length<pos:position pos:line="53" pos:column="64"/></name><operator pos:line="53" pos:column="64">)<pos:position pos:line="53" pos:column="65"/></operator></expr>)<pos:position pos:line="53" pos:column="66"/></condition><then pos:line="53" pos:column="66"> <block pos:line="53" pos:column="67">{
            <break pos:line="54" pos:column="13">break;<pos:position pos:line="54" pos:column="19"/></break>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="57" pos:column="9">/* prepare next entry */</comment>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">!<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">out<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">&amp;&amp;<pos:position pos:line="58" pos:column="28"/></operator> <name><name pos:line="58" pos:column="21">current<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">-&gt;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="30">len<pos:position pos:line="58" pos:column="33"/></name></name></expr>)<pos:position pos:line="58" pos:column="34"/></condition><then pos:line="58" pos:column="34"> <block pos:line="58" pos:column="35">{
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">current<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">-&gt;<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="22">next<pos:position pos:line="59" pos:column="26"/></name></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <call><name pos:line="59" pos:column="29">apr_palloc<pos:position pos:line="59" pos:column="39"/></name><argument_list pos:line="59" pos:column="39">(<argument><expr><name><name pos:line="59" pos:column="40">ctx<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">-&gt;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="45">dpool<pos:position pos:line="59" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="52">sizeof<argument_list pos:line="59" pos:column="58">(<argument><expr><operator pos:line="59" pos:column="59">*<pos:position pos:line="59" pos:column="60"/></operator><name><name pos:line="59" pos:column="60">current<pos:position pos:line="59" pos:column="67"/></name><operator pos:line="59" pos:column="67">-&gt;<pos:position pos:line="59" pos:column="72"/></operator><name pos:line="59" pos:column="69">next<pos:position pos:line="59" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><name pos:line="60" pos:column="13">current<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <name><name pos:line="60" pos:column="23">current<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">next<pos:position pos:line="60" pos:column="36"/></name></name></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="61" pos:column="13">current<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">next<pos:position pos:line="61" pos:column="26"/></name></name> <operator pos:line="61" pos:column="27">=<pos:position pos:line="61" pos:column="28"/></operator> <name pos:line="61" pos:column="29">NULL<pos:position pos:line="61" pos:column="33"/></name></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="62" pos:column="13">current<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">len<pos:position pos:line="62" pos:column="25"/></name></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <literal type="number" pos:line="62" pos:column="28">0<pos:position pos:line="62" pos:column="29"/></literal></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="65" pos:column="9">/*
         * escaped character
         */</comment>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><operator pos:line="68" pos:column="13">*<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">p<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">==<pos:position pos:line="68" pos:column="18"/></operator> <literal type="char" pos:line="68" pos:column="19">'\\'<pos:position pos:line="68" pos:column="23"/></literal></expr>)<pos:position pos:line="68" pos:column="24"/></condition><then pos:line="68" pos:column="24"> <block pos:line="68" pos:column="25">{
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">out<pos:position pos:line="69" pos:column="20"/></name></expr>)<pos:position pos:line="69" pos:column="21"/></condition><then pos:line="69" pos:column="21"> <block pos:line="69" pos:column="22">{
                <expr_stmt><expr><operator pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">out<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">++<pos:position pos:line="70" pos:column="23"/></operator> <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <ternary><condition><expr><operator pos:line="70" pos:column="26">(<pos:position pos:line="70" pos:column="27"/></operator><name><name pos:line="70" pos:column="27">p<pos:position pos:line="70" pos:column="28"/></name><index pos:line="70" pos:column="28">[<expr><literal type="number" pos:line="70" pos:column="29">1<pos:position pos:line="70" pos:column="30"/></literal></expr>]<pos:position pos:line="70" pos:column="31"/></index></name> <operator pos:line="70" pos:column="32">==<pos:position pos:line="70" pos:column="34"/></operator> <literal type="char" pos:line="70" pos:column="35">'$'<pos:position pos:line="70" pos:column="38"/></literal><operator pos:line="70" pos:column="38">)<pos:position pos:line="70" pos:column="39"/></operator></expr> ?<pos:position pos:line="70" pos:column="41"/></condition><then pos:line="70" pos:column="41"> <expr><operator pos:line="70" pos:column="42">*<pos:position pos:line="70" pos:column="43"/></operator><operator pos:line="70" pos:column="43">++<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="45">p<pos:position pos:line="70" pos:column="46"/></name></expr> <pos:position pos:line="70" pos:column="47"/></then><else pos:line="70" pos:column="47">: <expr><operator pos:line="70" pos:column="49">*<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="50">p<pos:position pos:line="70" pos:column="51"/></name></expr></else></ternary></expr>;<pos:position pos:line="70" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="71" pos:column="17">++<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="19">p<pos:position pos:line="71" pos:column="20"/></name></expr>;<pos:position pos:line="71" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="72" pos:column="14"/></block></then>
            <else pos:line="73" pos:column="13">else <block pos:line="73" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="74" pos:column="17">current<pos:position pos:line="74" pos:column="24"/></name><operator pos:line="74" pos:column="24">-&gt;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="26">len<pos:position pos:line="74" pos:column="29"/></name></name> <operator pos:line="74" pos:column="30">=<pos:position pos:line="74" pos:column="31"/></operator> <literal type="number" pos:line="74" pos:column="32">1<pos:position pos:line="74" pos:column="33"/></literal></expr>;<pos:position pos:line="74" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="75" pos:column="17">current<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">string<pos:position pos:line="75" pos:column="32"/></name></name> <operator pos:line="75" pos:column="33">=<pos:position pos:line="75" pos:column="34"/></operator> <ternary><condition><expr><operator pos:line="75" pos:column="35">(<pos:position pos:line="75" pos:column="36"/></operator><name><name pos:line="75" pos:column="36">p<pos:position pos:line="75" pos:column="37"/></name><index pos:line="75" pos:column="37">[<expr><literal type="number" pos:line="75" pos:column="38">1<pos:position pos:line="75" pos:column="39"/></literal></expr>]<pos:position pos:line="75" pos:column="40"/></index></name> <operator pos:line="75" pos:column="41">==<pos:position pos:line="75" pos:column="43"/></operator> <literal type="char" pos:line="75" pos:column="44">'$'<pos:position pos:line="75" pos:column="47"/></literal><operator pos:line="75" pos:column="47">)<pos:position pos:line="75" pos:column="48"/></operator></expr> ?<pos:position pos:line="75" pos:column="50"/></condition><then pos:line="75" pos:column="50"> <expr><operator pos:line="75" pos:column="51">++<pos:position pos:line="75" pos:column="53"/></operator><name pos:line="75" pos:column="53">p<pos:position pos:line="75" pos:column="54"/></name></expr> <pos:position pos:line="75" pos:column="55"/></then><else pos:line="75" pos:column="55">: <expr><name pos:line="75" pos:column="57">p<pos:position pos:line="75" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="75" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="76" pos:column="17">++<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="19">p<pos:position pos:line="76" pos:column="20"/></name></expr>;<pos:position pos:line="76" pos:column="21"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="77" pos:column="17">++<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="19">outlen<pos:position pos:line="77" pos:column="25"/></name></expr>;<pos:position pos:line="77" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="78" pos:column="14"/></block></else></if>
        }<pos:position pos:line="79" pos:column="10"/></block></then>

        <comment type="block" pos:line="81" pos:column="9">/*
         * variable expansion
         */</comment>
        <else pos:line="84" pos:column="9">else <block pos:line="84" pos:column="14">{       <comment type="block" pos:line="84" pos:column="22">/* *p == '$' */</comment>
            <decl_stmt><decl><type><specifier pos:line="85" pos:column="13">const<pos:position pos:line="85" pos:column="18"/></specifier> <name pos:line="85" pos:column="19">char<pos:position pos:line="85" pos:column="23"/></name> <modifier pos:line="85" pos:column="24">*<pos:position pos:line="85" pos:column="25"/></modifier></type><name pos:line="85" pos:column="25">newp<pos:position pos:line="85" pos:column="29"/></name> <init pos:line="85" pos:column="30">= <expr><name pos:line="85" pos:column="32">NULL<pos:position pos:line="85" pos:column="36"/></name></expr></init></decl>, <modifier pos:line="85" pos:column="38">*<pos:position pos:line="85" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="85" pos:column="39">ep<pos:position pos:line="85" pos:column="41"/></name></decl>, <modifier pos:line="85" pos:column="43">*<pos:position pos:line="85" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="85" pos:column="44">key<pos:position pos:line="85" pos:column="47"/></name> <init pos:line="85" pos:column="48">= <expr><name pos:line="85" pos:column="50">NULL<pos:position pos:line="85" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="85" pos:column="55"/></decl_stmt>

            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><operator pos:line="87" pos:column="17">*<pos:position pos:line="87" pos:column="18"/></operator><operator pos:line="87" pos:column="18">++<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="20">p<pos:position pos:line="87" pos:column="21"/></name> <operator pos:line="87" pos:column="22">==<pos:position pos:line="87" pos:column="24"/></operator> <literal type="char" pos:line="87" pos:column="25">'{'<pos:position pos:line="87" pos:column="28"/></literal></expr>)<pos:position pos:line="87" pos:column="29"/></condition><then pos:line="87" pos:column="29"> <block pos:line="87" pos:column="30">{
                <expr_stmt><expr><name pos:line="88" pos:column="17">ep<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">=<pos:position pos:line="88" pos:column="21"/></operator> <call><name pos:line="88" pos:column="22">ap_strchr_c<pos:position pos:line="88" pos:column="33"/></name><argument_list pos:line="88" pos:column="33">(<argument><expr><operator pos:line="88" pos:column="34">++<pos:position pos:line="88" pos:column="36"/></operator><name pos:line="88" pos:column="36">p<pos:position pos:line="88" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="88" pos:column="39">'}'<pos:position pos:line="88" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="44"/></expr_stmt>
                <if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><operator pos:line="89" pos:column="21">!<pos:position pos:line="89" pos:column="22"/></operator><name pos:line="89" pos:column="22">ep<pos:position pos:line="89" pos:column="24"/></name></expr>)<pos:position pos:line="89" pos:column="25"/></condition><then pos:line="89" pos:column="25"> <block pos:line="89" pos:column="26">{
                    <expr_stmt><expr><call><name pos:line="90" pos:column="21">ap_log_rerror<pos:position pos:line="90" pos:column="34"/></name><argument_list pos:line="90" pos:column="34">(<argument><expr><name pos:line="90" pos:column="35">APLOG_MARK<pos:position pos:line="90" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="47">APLOG_ERR<pos:position pos:line="90" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="58">0<pos:position pos:line="90" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="61">r<pos:position pos:line="90" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="64">"Missing '}' on "<pos:position pos:line="90" pos:column="81"/></literal>
                                  <literal type="string" pos:line="91" pos:column="35">"variable \"%s\" in %s"<pos:position pos:line="91" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="60">p<pos:position pos:line="91" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="63">r<pos:position pos:line="91" pos:column="64"/></name><operator pos:line="91" pos:column="64">-&gt;<pos:position pos:line="91" pos:column="69"/></operator><name pos:line="91" pos:column="66">filename<pos:position pos:line="91" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="76"/></expr_stmt>
                    <break pos:line="92" pos:column="21">break;<pos:position pos:line="92" pos:column="27"/></break>
                }<pos:position pos:line="93" pos:column="18"/></block></then></if>

                <if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name pos:line="95" pos:column="21">p<pos:position pos:line="95" pos:column="22"/></name> <operator pos:line="95" pos:column="23">&lt;<pos:position pos:line="95" pos:column="27"/></operator> <name pos:line="95" pos:column="25">ep<pos:position pos:line="95" pos:column="27"/></name></expr>)<pos:position pos:line="95" pos:column="28"/></condition><then pos:line="95" pos:column="28"> <block pos:line="95" pos:column="29">{
                    <expr_stmt><expr><name pos:line="96" pos:column="21">key<pos:position pos:line="96" pos:column="24"/></name> <operator pos:line="96" pos:column="25">=<pos:position pos:line="96" pos:column="26"/></operator> <call><name pos:line="96" pos:column="27">apr_pstrmemdup<pos:position pos:line="96" pos:column="41"/></name><argument_list pos:line="96" pos:column="41">(<argument><expr><name><name pos:line="96" pos:column="42">ctx<pos:position pos:line="96" pos:column="45"/></name><operator pos:line="96" pos:column="45">-&gt;<pos:position pos:line="96" pos:column="50"/></operator><name pos:line="96" pos:column="47">dpool<pos:position pos:line="96" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="54">p<pos:position pos:line="96" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="57">ep<pos:position pos:line="96" pos:column="59"/></name> <operator pos:line="96" pos:column="60">-<pos:position pos:line="96" pos:column="61"/></operator> <name pos:line="96" pos:column="62">p<pos:position pos:line="96" pos:column="63"/></name></expr></argument>)<pos:position pos:line="96" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="65"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="97" pos:column="21">newp<pos:position pos:line="97" pos:column="25"/></name> <operator pos:line="97" pos:column="26">=<pos:position pos:line="97" pos:column="27"/></operator> <name pos:line="97" pos:column="28">ep<pos:position pos:line="97" pos:column="30"/></name> <operator pos:line="97" pos:column="31">+<pos:position pos:line="97" pos:column="32"/></operator> <literal type="number" pos:line="97" pos:column="33">1<pos:position pos:line="97" pos:column="34"/></literal></expr>;<pos:position pos:line="97" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="98" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="99" pos:column="17">p<pos:position pos:line="99" pos:column="18"/></name> <operator pos:line="99" pos:column="19">-=<pos:position pos:line="99" pos:column="21"/></operator> <literal type="number" pos:line="99" pos:column="22">2<pos:position pos:line="99" pos:column="23"/></literal></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="100" pos:column="14"/></block></then>
            <else pos:line="101" pos:column="13">else <block pos:line="101" pos:column="18">{
                <expr_stmt><expr><name pos:line="102" pos:column="17">ep<pos:position pos:line="102" pos:column="19"/></name> <operator pos:line="102" pos:column="20">=<pos:position pos:line="102" pos:column="21"/></operator> <name pos:line="102" pos:column="22">p<pos:position pos:line="102" pos:column="23"/></name></expr>;<pos:position pos:line="102" pos:column="24"/></expr_stmt>
                <while pos:line="103" pos:column="17">while <condition pos:line="103" pos:column="23">(<expr><operator pos:line="103" pos:column="24">*<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="25">ep<pos:position pos:line="103" pos:column="27"/></name> <operator pos:line="103" pos:column="28">==<pos:position pos:line="103" pos:column="30"/></operator> <literal type="char" pos:line="103" pos:column="31">'_'<pos:position pos:line="103" pos:column="34"/></literal> <operator pos:line="103" pos:column="35">||<pos:position pos:line="103" pos:column="37"/></operator> <call><name pos:line="103" pos:column="38">apr_isalnum<pos:position pos:line="103" pos:column="49"/></name><argument_list pos:line="103" pos:column="49">(<argument><expr><operator pos:line="103" pos:column="50">*<pos:position pos:line="103" pos:column="51"/></operator><name pos:line="103" pos:column="51">ep<pos:position pos:line="103" pos:column="53"/></name></expr></argument>)<pos:position pos:line="103" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="55"/></condition> <block pos:line="103" pos:column="56">{
                    <expr_stmt><expr><operator pos:line="104" pos:column="21">++<pos:position pos:line="104" pos:column="23"/></operator><name pos:line="104" pos:column="23">ep<pos:position pos:line="104" pos:column="25"/></name></expr>;<pos:position pos:line="104" pos:column="26"/></expr_stmt>
                }<pos:position pos:line="105" pos:column="18"/></block></while>

                <if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><name pos:line="107" pos:column="21">p<pos:position pos:line="107" pos:column="22"/></name> <operator pos:line="107" pos:column="23">&lt;<pos:position pos:line="107" pos:column="27"/></operator> <name pos:line="107" pos:column="25">ep<pos:position pos:line="107" pos:column="27"/></name></expr>)<pos:position pos:line="107" pos:column="28"/></condition><then pos:line="107" pos:column="28"> <block pos:line="107" pos:column="29">{
                    <expr_stmt><expr><name pos:line="108" pos:column="21">key<pos:position pos:line="108" pos:column="24"/></name> <operator pos:line="108" pos:column="25">=<pos:position pos:line="108" pos:column="26"/></operator> <call><name pos:line="108" pos:column="27">apr_pstrmemdup<pos:position pos:line="108" pos:column="41"/></name><argument_list pos:line="108" pos:column="41">(<argument><expr><name><name pos:line="108" pos:column="42">ctx<pos:position pos:line="108" pos:column="45"/></name><operator pos:line="108" pos:column="45">-&gt;<pos:position pos:line="108" pos:column="50"/></operator><name pos:line="108" pos:column="47">dpool<pos:position pos:line="108" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="54">p<pos:position pos:line="108" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="57">ep<pos:position pos:line="108" pos:column="59"/></name> <operator pos:line="108" pos:column="60">-<pos:position pos:line="108" pos:column="61"/></operator> <name pos:line="108" pos:column="62">p<pos:position pos:line="108" pos:column="63"/></name></expr></argument>)<pos:position pos:line="108" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="65"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="109" pos:column="21">newp<pos:position pos:line="109" pos:column="25"/></name> <operator pos:line="109" pos:column="26">=<pos:position pos:line="109" pos:column="27"/></operator> <name pos:line="109" pos:column="28">ep<pos:position pos:line="109" pos:column="30"/></name></expr>;<pos:position pos:line="109" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="110" pos:column="18"/></block></then></if>
                <expr_stmt><expr><operator pos:line="111" pos:column="17">--<pos:position pos:line="111" pos:column="19"/></operator><name pos:line="111" pos:column="19">p<pos:position pos:line="111" pos:column="20"/></name></expr>;<pos:position pos:line="111" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="112" pos:column="14"/></block></else></if>

            <comment type="block" pos:line="114" pos:column="13">/* empty name results in a copy of '$' in the output string */</comment>
            <if pos:line="115" pos:column="13">if <condition pos:line="115" pos:column="16">(<expr><operator pos:line="115" pos:column="17">!<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="18">key<pos:position pos:line="115" pos:column="21"/></name></expr>)<pos:position pos:line="115" pos:column="22"/></condition><then pos:line="115" pos:column="22"> <block pos:line="115" pos:column="23">{
                <if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><name pos:line="116" pos:column="21">out<pos:position pos:line="116" pos:column="24"/></name></expr>)<pos:position pos:line="116" pos:column="25"/></condition><then pos:line="116" pos:column="25"> <block pos:line="116" pos:column="26">{
                    <expr_stmt><expr><operator pos:line="117" pos:column="21">*<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="22">out<pos:position pos:line="117" pos:column="25"/></name><operator pos:line="117" pos:column="25">++<pos:position pos:line="117" pos:column="27"/></operator> <operator pos:line="117" pos:column="28">=<pos:position pos:line="117" pos:column="29"/></operator> <operator pos:line="117" pos:column="30">*<pos:position pos:line="117" pos:column="31"/></operator><name pos:line="117" pos:column="31">p<pos:position pos:line="117" pos:column="32"/></name><operator pos:line="117" pos:column="32">++<pos:position pos:line="117" pos:column="34"/></operator></expr>;<pos:position pos:line="117" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="118" pos:column="18"/></block></then>
                <else pos:line="119" pos:column="17">else <block pos:line="119" pos:column="22">{
                    <expr_stmt><expr><name><name pos:line="120" pos:column="21">current<pos:position pos:line="120" pos:column="28"/></name><operator pos:line="120" pos:column="28">-&gt;<pos:position pos:line="120" pos:column="33"/></operator><name pos:line="120" pos:column="30">len<pos:position pos:line="120" pos:column="33"/></name></name> <operator pos:line="120" pos:column="34">=<pos:position pos:line="120" pos:column="35"/></operator> <literal type="number" pos:line="120" pos:column="36">1<pos:position pos:line="120" pos:column="37"/></literal></expr>;<pos:position pos:line="120" pos:column="38"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="121" pos:column="21">current<pos:position pos:line="121" pos:column="28"/></name><operator pos:line="121" pos:column="28">-&gt;<pos:position pos:line="121" pos:column="33"/></operator><name pos:line="121" pos:column="30">string<pos:position pos:line="121" pos:column="36"/></name></name> <operator pos:line="121" pos:column="37">=<pos:position pos:line="121" pos:column="38"/></operator> <name pos:line="121" pos:column="39">p<pos:position pos:line="121" pos:column="40"/></name><operator pos:line="121" pos:column="40">++<pos:position pos:line="121" pos:column="42"/></operator></expr>;<pos:position pos:line="121" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="122" pos:column="21">++<pos:position pos:line="122" pos:column="23"/></operator><name pos:line="122" pos:column="23">outlen<pos:position pos:line="122" pos:column="29"/></name></expr>;<pos:position pos:line="122" pos:column="30"/></expr_stmt>
                }<pos:position pos:line="123" pos:column="18"/></block></else></if>
            }<pos:position pos:line="124" pos:column="14"/></block></then>
            <else pos:line="125" pos:column="13">else <block pos:line="125" pos:column="18">{
                <decl_stmt><decl><type><specifier pos:line="126" pos:column="17">const<pos:position pos:line="126" pos:column="22"/></specifier> <name pos:line="126" pos:column="23">char<pos:position pos:line="126" pos:column="27"/></name> <modifier pos:line="126" pos:column="28">*<pos:position pos:line="126" pos:column="29"/></modifier></type><name pos:line="126" pos:column="29">val<pos:position pos:line="126" pos:column="32"/></name> <init pos:line="126" pos:column="33">= <expr><call><name pos:line="126" pos:column="35">get_include_var<pos:position pos:line="126" pos:column="50"/></name><argument_list pos:line="126" pos:column="50">(<argument><expr><name pos:line="126" pos:column="51">key<pos:position pos:line="126" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="56">ctx<pos:position pos:line="126" pos:column="59"/></name></expr></argument>)<pos:position pos:line="126" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="126" pos:column="61"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="127" pos:column="17">apr_size_t<pos:position pos:line="127" pos:column="27"/></name></type> <name pos:line="127" pos:column="28">len<pos:position pos:line="127" pos:column="31"/></name> <init pos:line="127" pos:column="32">= <expr><literal type="number" pos:line="127" pos:column="34">0<pos:position pos:line="127" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="127" pos:column="36"/></decl_stmt>

                <if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><name pos:line="129" pos:column="21">val<pos:position pos:line="129" pos:column="24"/></name></expr>)<pos:position pos:line="129" pos:column="25"/></condition><then pos:line="129" pos:column="25"> <block pos:line="129" pos:column="26">{
                    <expr_stmt><expr><name pos:line="130" pos:column="21">len<pos:position pos:line="130" pos:column="24"/></name> <operator pos:line="130" pos:column="25">=<pos:position pos:line="130" pos:column="26"/></operator> <call><name pos:line="130" pos:column="27">strlen<pos:position pos:line="130" pos:column="33"/></name><argument_list pos:line="130" pos:column="33">(<argument><expr><name pos:line="130" pos:column="34">val<pos:position pos:line="130" pos:column="37"/></name></expr></argument>)<pos:position pos:line="130" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="131" pos:column="18"/></block></then>
                <elseif pos:line="132" pos:column="17">else <if pos:line="132" pos:column="22">if <condition pos:line="132" pos:column="25">(<expr><name pos:line="132" pos:column="26">leave_name<pos:position pos:line="132" pos:column="36"/></name></expr>)<pos:position pos:line="132" pos:column="37"/></condition><then pos:line="132" pos:column="37"> <block pos:line="132" pos:column="38">{
                    <expr_stmt><expr><name pos:line="133" pos:column="21">val<pos:position pos:line="133" pos:column="24"/></name> <operator pos:line="133" pos:column="25">=<pos:position pos:line="133" pos:column="26"/></operator> <name pos:line="133" pos:column="27">p<pos:position pos:line="133" pos:column="28"/></name></expr>;<pos:position pos:line="133" pos:column="29"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="134" pos:column="21">len<pos:position pos:line="134" pos:column="24"/></name> <operator pos:line="134" pos:column="25">=<pos:position pos:line="134" pos:column="26"/></operator> <name pos:line="134" pos:column="27">ep<pos:position pos:line="134" pos:column="29"/></name> <operator pos:line="134" pos:column="30">-<pos:position pos:line="134" pos:column="31"/></operator> <name pos:line="134" pos:column="32">p<pos:position pos:line="134" pos:column="33"/></name></expr>;<pos:position pos:line="134" pos:column="34"/></expr_stmt>
                }<pos:position pos:line="135" pos:column="18"/></block></then></if></elseif></if>

                <if pos:line="137" pos:column="17">if <condition pos:line="137" pos:column="20">(<expr><name pos:line="137" pos:column="21">val<pos:position pos:line="137" pos:column="24"/></name> <operator pos:line="137" pos:column="25">&amp;&amp;<pos:position pos:line="137" pos:column="35"/></operator> <name pos:line="137" pos:column="28">len<pos:position pos:line="137" pos:column="31"/></name></expr>)<pos:position pos:line="137" pos:column="32"/></condition><then pos:line="137" pos:column="32"> <block pos:line="137" pos:column="33">{
                    <if pos:line="138" pos:column="21">if <condition pos:line="138" pos:column="24">(<expr><name pos:line="138" pos:column="25">out<pos:position pos:line="138" pos:column="28"/></name></expr>)<pos:position pos:line="138" pos:column="29"/></condition><then pos:line="138" pos:column="29"> <block pos:line="138" pos:column="30">{
                        <expr_stmt><expr><call><name pos:line="139" pos:column="25">memcpy<pos:position pos:line="139" pos:column="31"/></name><argument_list pos:line="139" pos:column="31">(<argument><expr><name pos:line="139" pos:column="32">out<pos:position pos:line="139" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="37">val<pos:position pos:line="139" pos:column="40"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="139" pos:column="42">(<pos:position pos:line="139" pos:column="43"/></operator><name pos:line="139" pos:column="43">out<pos:position pos:line="139" pos:column="46"/></name><operator pos:line="139" pos:column="46">+<pos:position pos:line="139" pos:column="47"/></operator><name pos:line="139" pos:column="47">len<pos:position pos:line="139" pos:column="50"/></name> <operator pos:line="139" pos:column="51">&lt;=<pos:position pos:line="139" pos:column="56"/></operator> <name pos:line="139" pos:column="54">eout<pos:position pos:line="139" pos:column="58"/></name><operator pos:line="139" pos:column="58">)<pos:position pos:line="139" pos:column="59"/></operator></expr> ?<pos:position pos:line="139" pos:column="61"/></condition><then pos:line="139" pos:column="61"> <expr><name pos:line="139" pos:column="62">len<pos:position pos:line="139" pos:column="65"/></name></expr> <pos:position pos:line="139" pos:column="66"/></then><else pos:line="139" pos:column="66">: <expr><operator pos:line="139" pos:column="68">(<pos:position pos:line="139" pos:column="69"/></operator><name pos:line="139" pos:column="69">eout<pos:position pos:line="139" pos:column="73"/></name><operator pos:line="139" pos:column="73">-<pos:position pos:line="139" pos:column="74"/></operator><name pos:line="139" pos:column="74">out<pos:position pos:line="139" pos:column="77"/></name><operator pos:line="139" pos:column="77">)<pos:position pos:line="139" pos:column="78"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="139" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="80"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="140" pos:column="25">out<pos:position pos:line="140" pos:column="28"/></name> <operator pos:line="140" pos:column="29">+=<pos:position pos:line="140" pos:column="31"/></operator> <name pos:line="140" pos:column="32">len<pos:position pos:line="140" pos:column="35"/></name></expr>;<pos:position pos:line="140" pos:column="36"/></expr_stmt>
                    }<pos:position pos:line="141" pos:column="22"/></block></then>
                    <else pos:line="142" pos:column="21">else <block pos:line="142" pos:column="26">{
                        <expr_stmt><expr><name><name pos:line="143" pos:column="25">current<pos:position pos:line="143" pos:column="32"/></name><operator pos:line="143" pos:column="32">-&gt;<pos:position pos:line="143" pos:column="37"/></operator><name pos:line="143" pos:column="34">len<pos:position pos:line="143" pos:column="37"/></name></name> <operator pos:line="143" pos:column="38">=<pos:position pos:line="143" pos:column="39"/></operator> <name pos:line="143" pos:column="40">len<pos:position pos:line="143" pos:column="43"/></name></expr>;<pos:position pos:line="143" pos:column="44"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="144" pos:column="25">current<pos:position pos:line="144" pos:column="32"/></name><operator pos:line="144" pos:column="32">-&gt;<pos:position pos:line="144" pos:column="37"/></operator><name pos:line="144" pos:column="34">string<pos:position pos:line="144" pos:column="40"/></name></name> <operator pos:line="144" pos:column="41">=<pos:position pos:line="144" pos:column="42"/></operator> <name pos:line="144" pos:column="43">val<pos:position pos:line="144" pos:column="46"/></name></expr>;<pos:position pos:line="144" pos:column="47"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="145" pos:column="25">outlen<pos:position pos:line="145" pos:column="31"/></name> <operator pos:line="145" pos:column="32">+=<pos:position pos:line="145" pos:column="34"/></operator> <name pos:line="145" pos:column="35">len<pos:position pos:line="145" pos:column="38"/></name></expr>;<pos:position pos:line="145" pos:column="39"/></expr_stmt>
                    }<pos:position pos:line="146" pos:column="22"/></block></else></if>
                }<pos:position pos:line="147" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="149" pos:column="17">p<pos:position pos:line="149" pos:column="18"/></name> <operator pos:line="149" pos:column="19">=<pos:position pos:line="149" pos:column="20"/></operator> <name pos:line="149" pos:column="21">newp<pos:position pos:line="149" pos:column="25"/></name></expr>;<pos:position pos:line="149" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="150" pos:column="14"/></block></else></if>
        }<pos:position pos:line="151" pos:column="10"/></block></else></if>

        <if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><operator pos:line="153" pos:column="13">(<pos:position pos:line="153" pos:column="14"/></operator><name pos:line="153" pos:column="14">out<pos:position pos:line="153" pos:column="17"/></name> <operator pos:line="153" pos:column="18">&amp;&amp;<pos:position pos:line="153" pos:column="28"/></operator> <name pos:line="153" pos:column="21">out<pos:position pos:line="153" pos:column="24"/></name> <operator pos:line="153" pos:column="25">&gt;=<pos:position pos:line="153" pos:column="30"/></operator> <name pos:line="153" pos:column="28">eout<pos:position pos:line="153" pos:column="32"/></name><operator pos:line="153" pos:column="32">)<pos:position pos:line="153" pos:column="33"/></operator> <operator pos:line="153" pos:column="34">||<pos:position pos:line="153" pos:column="36"/></operator> <operator pos:line="153" pos:column="37">(<pos:position pos:line="153" pos:column="38"/></operator><name pos:line="153" pos:column="38">length<pos:position pos:line="153" pos:column="44"/></name> <operator pos:line="153" pos:column="45">&amp;&amp;<pos:position pos:line="153" pos:column="55"/></operator> <name pos:line="153" pos:column="48">outlen<pos:position pos:line="153" pos:column="54"/></name> <operator pos:line="153" pos:column="55">&gt;=<pos:position pos:line="153" pos:column="60"/></operator> <name pos:line="153" pos:column="58">length<pos:position pos:line="153" pos:column="64"/></name><operator pos:line="153" pos:column="64">)<pos:position pos:line="153" pos:column="65"/></operator></expr>)<pos:position pos:line="153" pos:column="66"/></condition><then pos:line="153" pos:column="66"> <block pos:line="153" pos:column="67">{
            <break pos:line="154" pos:column="13">break;<pos:position pos:line="154" pos:column="19"/></break>
        }<pos:position pos:line="155" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="157" pos:column="9">/* check the remainder */</comment>
        <if pos:line="158" pos:column="9">if <condition pos:line="158" pos:column="12">(<expr><operator pos:line="158" pos:column="13">*<pos:position pos:line="158" pos:column="14"/></operator><name pos:line="158" pos:column="14">p<pos:position pos:line="158" pos:column="15"/></name> <operator pos:line="158" pos:column="16">&amp;&amp;<pos:position pos:line="158" pos:column="26"/></operator> <operator pos:line="158" pos:column="19">(<pos:position pos:line="158" pos:column="20"/></operator><name pos:line="158" pos:column="20">span<pos:position pos:line="158" pos:column="24"/></name> <operator pos:line="158" pos:column="25">=<pos:position pos:line="158" pos:column="26"/></operator> <call><name pos:line="158" pos:column="27">strcspn<pos:position pos:line="158" pos:column="34"/></name><argument_list pos:line="158" pos:column="34">(<argument><expr><name pos:line="158" pos:column="35">p<pos:position pos:line="158" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="38">"\\$"<pos:position pos:line="158" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="44"/></argument_list></call><operator pos:line="158" pos:column="44">)<pos:position pos:line="158" pos:column="45"/></operator> <operator pos:line="158" pos:column="46">&gt;<pos:position pos:line="158" pos:column="50"/></operator> <literal type="number" pos:line="158" pos:column="48">0<pos:position pos:line="158" pos:column="49"/></literal></expr>)<pos:position pos:line="158" pos:column="50"/></condition><then pos:line="158" pos:column="50"> <block pos:line="158" pos:column="51">{
            <if pos:line="159" pos:column="13">if <condition pos:line="159" pos:column="16">(<expr><operator pos:line="159" pos:column="17">!<pos:position pos:line="159" pos:column="18"/></operator><name pos:line="159" pos:column="18">out<pos:position pos:line="159" pos:column="21"/></name> <operator pos:line="159" pos:column="22">&amp;&amp;<pos:position pos:line="159" pos:column="32"/></operator> <name><name pos:line="159" pos:column="25">current<pos:position pos:line="159" pos:column="32"/></name><operator pos:line="159" pos:column="32">-&gt;<pos:position pos:line="159" pos:column="37"/></operator><name pos:line="159" pos:column="34">len<pos:position pos:line="159" pos:column="37"/></name></name></expr>)<pos:position pos:line="159" pos:column="38"/></condition><then pos:line="159" pos:column="38"> <block pos:line="159" pos:column="39">{
                <expr_stmt><expr><name><name pos:line="160" pos:column="17">current<pos:position pos:line="160" pos:column="24"/></name><operator pos:line="160" pos:column="24">-&gt;<pos:position pos:line="160" pos:column="29"/></operator><name pos:line="160" pos:column="26">next<pos:position pos:line="160" pos:column="30"/></name></name> <operator pos:line="160" pos:column="31">=<pos:position pos:line="160" pos:column="32"/></operator> <call><name pos:line="160" pos:column="33">apr_palloc<pos:position pos:line="160" pos:column="43"/></name><argument_list pos:line="160" pos:column="43">(<argument><expr><name><name pos:line="160" pos:column="44">ctx<pos:position pos:line="160" pos:column="47"/></name><operator pos:line="160" pos:column="47">-&gt;<pos:position pos:line="160" pos:column="52"/></operator><name pos:line="160" pos:column="49">dpool<pos:position pos:line="160" pos:column="54"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="160" pos:column="56">sizeof<argument_list pos:line="160" pos:column="62">(<argument><expr><operator pos:line="160" pos:column="63">*<pos:position pos:line="160" pos:column="64"/></operator><name><name pos:line="160" pos:column="64">current<pos:position pos:line="160" pos:column="71"/></name><operator pos:line="160" pos:column="71">-&gt;<pos:position pos:line="160" pos:column="76"/></operator><name pos:line="160" pos:column="73">next<pos:position pos:line="160" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="160" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><name pos:line="161" pos:column="17">current<pos:position pos:line="161" pos:column="24"/></name> <operator pos:line="161" pos:column="25">=<pos:position pos:line="161" pos:column="26"/></operator> <name><name pos:line="161" pos:column="27">current<pos:position pos:line="161" pos:column="34"/></name><operator pos:line="161" pos:column="34">-&gt;<pos:position pos:line="161" pos:column="39"/></operator><name pos:line="161" pos:column="36">next<pos:position pos:line="161" pos:column="40"/></name></name></expr>;<pos:position pos:line="161" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="162" pos:column="17">current<pos:position pos:line="162" pos:column="24"/></name><operator pos:line="162" pos:column="24">-&gt;<pos:position pos:line="162" pos:column="29"/></operator><name pos:line="162" pos:column="26">next<pos:position pos:line="162" pos:column="30"/></name></name> <operator pos:line="162" pos:column="31">=<pos:position pos:line="162" pos:column="32"/></operator> <name pos:line="162" pos:column="33">NULL<pos:position pos:line="162" pos:column="37"/></name></expr>;<pos:position pos:line="162" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="163" pos:column="14"/></block></then></if>

            <if pos:line="165" pos:column="13">if <condition pos:line="165" pos:column="16">(<expr><name pos:line="165" pos:column="17">out<pos:position pos:line="165" pos:column="20"/></name></expr>)<pos:position pos:line="165" pos:column="21"/></condition><then pos:line="165" pos:column="21"> <block pos:line="165" pos:column="22">{
                <expr_stmt><expr><call><name pos:line="166" pos:column="17">memcpy<pos:position pos:line="166" pos:column="23"/></name><argument_list pos:line="166" pos:column="23">(<argument><expr><name pos:line="166" pos:column="24">out<pos:position pos:line="166" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="29">p<pos:position pos:line="166" pos:column="30"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="166" pos:column="32">(<pos:position pos:line="166" pos:column="33"/></operator><name pos:line="166" pos:column="33">out<pos:position pos:line="166" pos:column="36"/></name><operator pos:line="166" pos:column="36">+<pos:position pos:line="166" pos:column="37"/></operator><name pos:line="166" pos:column="37">span<pos:position pos:line="166" pos:column="41"/></name> <operator pos:line="166" pos:column="42">&lt;=<pos:position pos:line="166" pos:column="47"/></operator> <name pos:line="166" pos:column="45">eout<pos:position pos:line="166" pos:column="49"/></name><operator pos:line="166" pos:column="49">)<pos:position pos:line="166" pos:column="50"/></operator></expr> ?<pos:position pos:line="166" pos:column="52"/></condition><then pos:line="166" pos:column="52"> <expr><name pos:line="166" pos:column="53">span<pos:position pos:line="166" pos:column="57"/></name></expr> <pos:position pos:line="166" pos:column="58"/></then><else pos:line="166" pos:column="58">: <expr><operator pos:line="166" pos:column="60">(<pos:position pos:line="166" pos:column="61"/></operator><name pos:line="166" pos:column="61">eout<pos:position pos:line="166" pos:column="65"/></name><operator pos:line="166" pos:column="65">-<pos:position pos:line="166" pos:column="66"/></operator><name pos:line="166" pos:column="66">out<pos:position pos:line="166" pos:column="69"/></name><operator pos:line="166" pos:column="69">)<pos:position pos:line="166" pos:column="70"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="166" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><name pos:line="167" pos:column="17">out<pos:position pos:line="167" pos:column="20"/></name> <operator pos:line="167" pos:column="21">+=<pos:position pos:line="167" pos:column="23"/></operator> <name pos:line="167" pos:column="24">span<pos:position pos:line="167" pos:column="28"/></name></expr>;<pos:position pos:line="167" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="168" pos:column="14"/></block></then>
            <else pos:line="169" pos:column="13">else <block pos:line="169" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="170" pos:column="17">current<pos:position pos:line="170" pos:column="24"/></name><operator pos:line="170" pos:column="24">-&gt;<pos:position pos:line="170" pos:column="29"/></operator><name pos:line="170" pos:column="26">len<pos:position pos:line="170" pos:column="29"/></name></name> <operator pos:line="170" pos:column="30">=<pos:position pos:line="170" pos:column="31"/></operator> <name pos:line="170" pos:column="32">span<pos:position pos:line="170" pos:column="36"/></name></expr>;<pos:position pos:line="170" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="171" pos:column="17">current<pos:position pos:line="171" pos:column="24"/></name><operator pos:line="171" pos:column="24">-&gt;<pos:position pos:line="171" pos:column="29"/></operator><name pos:line="171" pos:column="26">string<pos:position pos:line="171" pos:column="32"/></name></name> <operator pos:line="171" pos:column="33">=<pos:position pos:line="171" pos:column="34"/></operator> <name pos:line="171" pos:column="35">p<pos:position pos:line="171" pos:column="36"/></name></expr>;<pos:position pos:line="171" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name pos:line="172" pos:column="17">outlen<pos:position pos:line="172" pos:column="23"/></name> <operator pos:line="172" pos:column="24">+=<pos:position pos:line="172" pos:column="26"/></operator> <name pos:line="172" pos:column="27">span<pos:position pos:line="172" pos:column="31"/></name></expr>;<pos:position pos:line="172" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="173" pos:column="14"/></block></else></if>

            <expr_stmt><expr><name pos:line="175" pos:column="13">p<pos:position pos:line="175" pos:column="14"/></name> <operator pos:line="175" pos:column="15">+=<pos:position pos:line="175" pos:column="17"/></operator> <name pos:line="175" pos:column="18">span<pos:position pos:line="175" pos:column="22"/></name></expr>;<pos:position pos:line="175" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="176" pos:column="10"/></block></then></if>
    }<pos:position pos:line="177" pos:column="6"/></block> while <condition pos:line="177" pos:column="13">(<expr><name pos:line="177" pos:column="14">p<pos:position pos:line="177" pos:column="15"/></name> <operator pos:line="177" pos:column="16">&lt;<pos:position pos:line="177" pos:column="20"/></operator> <name pos:line="177" pos:column="18">in<pos:position pos:line="177" pos:column="20"/></name><operator pos:line="177" pos:column="20">+<pos:position pos:line="177" pos:column="21"/></operator><name pos:line="177" pos:column="21">inlen<pos:position pos:line="177" pos:column="26"/></name></expr>)<pos:position pos:line="177" pos:column="27"/></condition>;<pos:position pos:line="177" pos:column="28"/></do>

    <comment type="block" pos:line="179" pos:column="5">/* assemble result */</comment>
    <if pos:line="180" pos:column="5">if <condition pos:line="180" pos:column="8">(<expr><name pos:line="180" pos:column="9">out<pos:position pos:line="180" pos:column="12"/></name></expr>)<pos:position pos:line="180" pos:column="13"/></condition><then pos:line="180" pos:column="13"> <block pos:line="180" pos:column="14">{
        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name pos:line="181" pos:column="13">out<pos:position pos:line="181" pos:column="16"/></name> <operator pos:line="181" pos:column="17">&gt;<pos:position pos:line="181" pos:column="21"/></operator> <name pos:line="181" pos:column="19">eout<pos:position pos:line="181" pos:column="23"/></name></expr>)<pos:position pos:line="181" pos:column="24"/></condition><then pos:line="181" pos:column="24"> <block pos:line="181" pos:column="25">{
            <expr_stmt><expr><operator pos:line="182" pos:column="13">*<pos:position pos:line="182" pos:column="14"/></operator><name pos:line="182" pos:column="14">eout<pos:position pos:line="182" pos:column="18"/></name> <operator pos:line="182" pos:column="19">=<pos:position pos:line="182" pos:column="20"/></operator> <literal type="char" pos:line="182" pos:column="21">'\0'<pos:position pos:line="182" pos:column="25"/></literal></expr>;<pos:position pos:line="182" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="183" pos:column="10"/></block></then>
        <else pos:line="184" pos:column="9">else <block pos:line="184" pos:column="14">{
            <expr_stmt><expr><operator pos:line="185" pos:column="13">*<pos:position pos:line="185" pos:column="14"/></operator><name pos:line="185" pos:column="14">out<pos:position pos:line="185" pos:column="17"/></name> <operator pos:line="185" pos:column="18">=<pos:position pos:line="185" pos:column="19"/></operator> <literal type="char" pos:line="185" pos:column="20">'\0'<pos:position pos:line="185" pos:column="24"/></literal></expr>;<pos:position pos:line="185" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="186" pos:column="10"/></block></else></if>
    }<pos:position pos:line="187" pos:column="6"/></block></then>
    <else pos:line="188" pos:column="5">else <block pos:line="188" pos:column="10">{
        <decl_stmt><decl><type><specifier pos:line="189" pos:column="9">const<pos:position pos:line="189" pos:column="14"/></specifier> <name pos:line="189" pos:column="15">char<pos:position pos:line="189" pos:column="19"/></name> <modifier pos:line="189" pos:column="20">*<pos:position pos:line="189" pos:column="21"/></modifier></type><name pos:line="189" pos:column="21">ep<pos:position pos:line="189" pos:column="23"/></name></decl>;<pos:position pos:line="189" pos:column="24"/></decl_stmt>

        <if pos:line="191" pos:column="9">if <condition pos:line="191" pos:column="12">(<expr><name pos:line="191" pos:column="13">length<pos:position pos:line="191" pos:column="19"/></name> <operator pos:line="191" pos:column="20">&amp;&amp;<pos:position pos:line="191" pos:column="30"/></operator> <name pos:line="191" pos:column="23">outlen<pos:position pos:line="191" pos:column="29"/></name> <operator pos:line="191" pos:column="30">&gt;<pos:position pos:line="191" pos:column="34"/></operator> <name pos:line="191" pos:column="32">length<pos:position pos:line="191" pos:column="38"/></name></expr>)<pos:position pos:line="191" pos:column="39"/></condition><then pos:line="191" pos:column="39"> <block pos:line="191" pos:column="40">{
            <expr_stmt><expr><name pos:line="192" pos:column="13">outlen<pos:position pos:line="192" pos:column="19"/></name> <operator pos:line="192" pos:column="20">=<pos:position pos:line="192" pos:column="21"/></operator> <name pos:line="192" pos:column="22">length<pos:position pos:line="192" pos:column="28"/></name> <operator pos:line="192" pos:column="29">-<pos:position pos:line="192" pos:column="30"/></operator> <literal type="number" pos:line="192" pos:column="31">1<pos:position pos:line="192" pos:column="32"/></literal></expr>;<pos:position pos:line="192" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="193" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="195" pos:column="9">ret<pos:position pos:line="195" pos:column="12"/></name> <operator pos:line="195" pos:column="13">=<pos:position pos:line="195" pos:column="14"/></operator> <name pos:line="195" pos:column="15">out<pos:position pos:line="195" pos:column="18"/></name> <operator pos:line="195" pos:column="19">=<pos:position pos:line="195" pos:column="20"/></operator> <call><name pos:line="195" pos:column="21">apr_palloc<pos:position pos:line="195" pos:column="31"/></name><argument_list pos:line="195" pos:column="31">(<argument><expr><name><name pos:line="195" pos:column="32">ctx<pos:position pos:line="195" pos:column="35"/></name><operator pos:line="195" pos:column="35">-&gt;<pos:position pos:line="195" pos:column="40"/></operator><name pos:line="195" pos:column="37">pool<pos:position pos:line="195" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="43">outlen<pos:position pos:line="195" pos:column="49"/></name> <operator pos:line="195" pos:column="50">+<pos:position pos:line="195" pos:column="51"/></operator> <literal type="number" pos:line="195" pos:column="52">1<pos:position pos:line="195" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="196" pos:column="9">ep<pos:position pos:line="196" pos:column="11"/></name> <operator pos:line="196" pos:column="12">=<pos:position pos:line="196" pos:column="13"/></operator> <name pos:line="196" pos:column="14">ret<pos:position pos:line="196" pos:column="17"/></name> <operator pos:line="196" pos:column="18">+<pos:position pos:line="196" pos:column="19"/></operator> <name pos:line="196" pos:column="20">outlen<pos:position pos:line="196" pos:column="26"/></name></expr>;<pos:position pos:line="196" pos:column="27"/></expr_stmt>

        <do pos:line="198" pos:column="9">do <block pos:line="198" pos:column="12">{
            <if pos:line="199" pos:column="13">if <condition pos:line="199" pos:column="16">(<expr><name><name pos:line="199" pos:column="17">result<pos:position pos:line="199" pos:column="23"/></name><operator pos:line="199" pos:column="23">-&gt;<pos:position pos:line="199" pos:column="28"/></operator><name pos:line="199" pos:column="25">len<pos:position pos:line="199" pos:column="28"/></name></name></expr>)<pos:position pos:line="199" pos:column="29"/></condition><then pos:line="199" pos:column="29"> <block pos:line="199" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="200" pos:column="17">memcpy<pos:position pos:line="200" pos:column="23"/></name><argument_list pos:line="200" pos:column="23">(<argument><expr><name pos:line="200" pos:column="24">out<pos:position pos:line="200" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="29">result<pos:position pos:line="200" pos:column="35"/></name><operator pos:line="200" pos:column="35">-&gt;<pos:position pos:line="200" pos:column="40"/></operator><name pos:line="200" pos:column="37">string<pos:position pos:line="200" pos:column="43"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="200" pos:column="45">(<pos:position pos:line="200" pos:column="46"/></operator><name pos:line="200" pos:column="46">out<pos:position pos:line="200" pos:column="49"/></name><operator pos:line="200" pos:column="49">+<pos:position pos:line="200" pos:column="50"/></operator><name><name pos:line="200" pos:column="50">result<pos:position pos:line="200" pos:column="56"/></name><operator pos:line="200" pos:column="56">-&gt;<pos:position pos:line="200" pos:column="61"/></operator><name pos:line="200" pos:column="58">len<pos:position pos:line="200" pos:column="61"/></name></name> <operator pos:line="200" pos:column="62">&lt;=<pos:position pos:line="200" pos:column="67"/></operator> <name pos:line="200" pos:column="65">ep<pos:position pos:line="200" pos:column="67"/></name><operator pos:line="200" pos:column="67">)<pos:position pos:line="200" pos:column="68"/></operator></expr>
                                            ?<pos:position pos:line="201" pos:column="46"/></condition><then pos:line="201" pos:column="46"> <expr><name><name pos:line="201" pos:column="47">result<pos:position pos:line="201" pos:column="53"/></name><operator pos:line="201" pos:column="53">-&gt;<pos:position pos:line="201" pos:column="58"/></operator><name pos:line="201" pos:column="55">len<pos:position pos:line="201" pos:column="58"/></name></name></expr> <pos:position pos:line="201" pos:column="59"/></then><else pos:line="201" pos:column="59">: <expr><operator pos:line="201" pos:column="61">(<pos:position pos:line="201" pos:column="62"/></operator><name pos:line="201" pos:column="62">ep<pos:position pos:line="201" pos:column="64"/></name><operator pos:line="201" pos:column="64">-<pos:position pos:line="201" pos:column="65"/></operator><name pos:line="201" pos:column="65">out<pos:position pos:line="201" pos:column="68"/></name><operator pos:line="201" pos:column="68">)<pos:position pos:line="201" pos:column="69"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="201" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="71"/></expr_stmt>
                <expr_stmt><expr><name pos:line="202" pos:column="17">out<pos:position pos:line="202" pos:column="20"/></name> <operator pos:line="202" pos:column="21">+=<pos:position pos:line="202" pos:column="23"/></operator> <name><name pos:line="202" pos:column="24">result<pos:position pos:line="202" pos:column="30"/></name><operator pos:line="202" pos:column="30">-&gt;<pos:position pos:line="202" pos:column="35"/></operator><name pos:line="202" pos:column="32">len<pos:position pos:line="202" pos:column="35"/></name></name></expr>;<pos:position pos:line="202" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="203" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="204" pos:column="13">result<pos:position pos:line="204" pos:column="19"/></name> <operator pos:line="204" pos:column="20">=<pos:position pos:line="204" pos:column="21"/></operator> <name><name pos:line="204" pos:column="22">result<pos:position pos:line="204" pos:column="28"/></name><operator pos:line="204" pos:column="28">-&gt;<pos:position pos:line="204" pos:column="33"/></operator><name pos:line="204" pos:column="30">next<pos:position pos:line="204" pos:column="34"/></name></name></expr>;<pos:position pos:line="204" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="205" pos:column="10"/></block> while <condition pos:line="205" pos:column="17">(<expr><name pos:line="205" pos:column="18">result<pos:position pos:line="205" pos:column="24"/></name> <operator pos:line="205" pos:column="25">&amp;&amp;<pos:position pos:line="205" pos:column="35"/></operator> <name pos:line="205" pos:column="28">out<pos:position pos:line="205" pos:column="31"/></name> <operator pos:line="205" pos:column="32">&lt;<pos:position pos:line="205" pos:column="36"/></operator> <name pos:line="205" pos:column="34">ep<pos:position pos:line="205" pos:column="36"/></name></expr>)<pos:position pos:line="205" pos:column="37"/></condition>;<pos:position pos:line="205" pos:column="38"/></do>

        <expr_stmt><expr><name><name pos:line="207" pos:column="9">ret<pos:position pos:line="207" pos:column="12"/></name><index pos:line="207" pos:column="12">[<expr><name pos:line="207" pos:column="13">outlen<pos:position pos:line="207" pos:column="19"/></name></expr>]<pos:position pos:line="207" pos:column="20"/></index></name> <operator pos:line="207" pos:column="21">=<pos:position pos:line="207" pos:column="22"/></operator> <literal type="char" pos:line="207" pos:column="23">'\0'<pos:position pos:line="207" pos:column="27"/></literal></expr>;<pos:position pos:line="207" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="208" pos:column="6"/></block></else></if>

    <return pos:line="210" pos:column="5">return <expr><name pos:line="210" pos:column="12">ret<pos:position pos:line="210" pos:column="15"/></name></expr>;<pos:position pos:line="210" pos:column="16"/></return>
}<pos:position pos:line="211" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1390_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">get_remaining_chunk_line<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">http_ctx_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ctx<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="2" pos:column="46">apr_bucket_brigade<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">b<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="3" pos:column="46">int<pos:position pos:line="3" pos:column="49"/></name></type> <name pos:line="3" pos:column="50">linelimit<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_off_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">brigade_length<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">e<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">lineend<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">len<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/*
     * As the brigade b should have been requested in mode AP_MODE_GETLINE
     * all buckets in this brigade are already some type of memory
     * buckets (due to the needed scanning for LF in mode AP_MODE_GETLINE)
     * or META buckets.
     */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">rv<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">apr_brigade_length<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">b<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="32">0<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="35">&amp;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="36">brigade_length<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">!=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">APR_SUCCESS<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">rv<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="21" pos:column="5">/* Sanity check. Should never happen. See above. */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">brigade_length<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">==<pos:position pos:line="22" pos:column="26"/></operator> <operator pos:line="22" pos:column="27">-<pos:position pos:line="22" pos:column="28"/></operator><literal type="number" pos:line="22" pos:column="28">1<pos:position pos:line="22" pos:column="29"/></literal></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30"> <block pos:line="22" pos:column="31">{
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">APR_EGENERAL<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">brigade_length<pos:position pos:line="25" pos:column="24"/></name></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25"> <block pos:line="25" pos:column="26">{
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">APR_EAGAIN<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">ctx<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">linesize<pos:position pos:line="28" pos:column="18"/></name></name> <operator pos:line="28" pos:column="19">+=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">brigade_length<pos:position pos:line="28" pos:column="36"/></name></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">ctx<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">linesize<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">&gt;<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="25">linelimit<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">APR_ENOSPC<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="32" pos:column="5">/*
     * As all buckets are already some type of memory buckets or META buckets
     * (see above), we only need to check the last byte in the last data bucket.
     */</comment>
    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><expr><name pos:line="36" pos:column="10">e<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">APR_BRIGADE_LAST<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">b<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></init>
         <condition><expr><name pos:line="37" pos:column="10">e<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">!=<pos:position pos:line="37" pos:column="14"/></operator> <call><name pos:line="37" pos:column="15">APR_BRIGADE_SENTINEL<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">b<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></condition>
         <incr><expr><name pos:line="38" pos:column="10">e<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">APR_BUCKET_PREV<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">e<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr></incr>)<pos:position pos:line="38" pos:column="33"/></control> <block pos:line="38" pos:column="34">{

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">APR_BUCKET_IS_METADATA<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">e<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39"> <block pos:line="40" pos:column="40">{
            <continue pos:line="41" pos:column="13">continue;<pos:position pos:line="41" pos:column="22"/></continue>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="43" pos:column="9">rv<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">apr_bucket_read<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">e<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="33">&amp;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="34">lineend<pos:position pos:line="43" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="43">&amp;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="44">len<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">APR_BLOCK_READ<pos:position pos:line="43" pos:column="63"/></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="65"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">rv<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">APR_SUCCESS<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31"> <block pos:line="44" pos:column="32">{
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">rv<pos:position pos:line="45" pos:column="22"/></name></expr>;<pos:position pos:line="45" pos:column="23"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">len<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">&gt;<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="19">0<pos:position pos:line="47" pos:column="20"/></literal></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21"> <block pos:line="47" pos:column="22">{
            <break pos:line="48" pos:column="13">break;<pos:position pos:line="48" pos:column="19"/></break>  <comment type="block" pos:line="48" pos:column="21">/* we got the data we want */</comment>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="50" pos:column="9">/* If we got a zero-length data bucket, we try the next one */</comment>
    }<pos:position pos:line="51" pos:column="6"/></block></for>
    <comment type="block" pos:line="52" pos:column="5">/* We had no data in this brigade */</comment>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><operator pos:line="53" pos:column="9">!<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">len<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">||<pos:position pos:line="53" pos:column="16"/></operator> <name pos:line="53" pos:column="17">e<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">==<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">APR_BRIGADE_SENTINEL<pos:position pos:line="53" pos:column="42"/></name><argument_list pos:line="53" pos:column="42">(<argument><expr><name pos:line="53" pos:column="43">b<pos:position pos:line="53" pos:column="44"/></name></expr></argument>)<pos:position pos:line="53" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="46"/></condition><then pos:line="53" pos:column="46"> <block pos:line="53" pos:column="47">{
        <return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">APR_EAGAIN<pos:position pos:line="54" pos:column="26"/></name></expr>;<pos:position pos:line="54" pos:column="27"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">lineend<pos:position pos:line="56" pos:column="16"/></name><index pos:line="56" pos:column="16">[<expr><name pos:line="56" pos:column="17">len<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">-<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="23">1<pos:position pos:line="56" pos:column="24"/></literal></expr>]<pos:position pos:line="56" pos:column="25"/></index></name> <operator pos:line="56" pos:column="26">!=<pos:position pos:line="56" pos:column="28"/></operator> <name pos:line="56" pos:column="29">APR_ASCII_LF<pos:position pos:line="56" pos:column="41"/></name></expr>)<pos:position pos:line="56" pos:column="42"/></condition><then pos:line="56" pos:column="42"> <block pos:line="56" pos:column="43">{
        <return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">APR_EAGAIN<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="59" pos:column="5">/* Line is complete. So reset ctx-&gt;linesize for next round. */</comment>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">ctx<pos:position pos:line="60" pos:column="8"/></name><operator pos:line="60" pos:column="8">-&gt;<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="10">linesize<pos:position pos:line="60" pos:column="18"/></name></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <literal type="number" pos:line="60" pos:column="21">0<pos:position pos:line="60" pos:column="22"/></literal></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">APR_SUCCESS<pos:position pos:line="61" pos:column="23"/></name></expr>;<pos:position pos:line="61" pos:column="24"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1023_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">subst_prefix_path<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">input<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">match<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                               <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">subst<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">matchbuf<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><name pos:line="4" pos:column="19">LONG_STRING_LEN<pos:position pos:line="4" pos:column="34"/></name></expr>]<pos:position pos:line="4" pos:column="35"/></index></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">substbuf<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><name pos:line="5" pos:column="19">LONG_STRING_LEN<pos:position pos:line="5" pos:column="34"/></name></expr>]<pos:position pos:line="5" pos:column="35"/></index></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">output<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">l<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">output<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">input<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* first create a match string which always has a trailing slash */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">l<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">apr_cpystrn<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">matchbuf<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">match<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="38">sizeof<argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">matchbuf<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call> <operator pos:line="12" pos:column="56">-<pos:position pos:line="12" pos:column="57"/></operator> <name pos:line="12" pos:column="58">matchbuf<pos:position pos:line="12" pos:column="66"/></name></expr>;<pos:position pos:line="12" pos:column="67"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">matchbuf<pos:position pos:line="13" pos:column="17"/></name><index pos:line="13" pos:column="17">[<expr><name pos:line="13" pos:column="18">l<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-<pos:position pos:line="13" pos:column="20"/></operator><literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal></expr>]<pos:position pos:line="13" pos:column="22"/></index></name> <operator pos:line="13" pos:column="23">!=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="char" pos:line="13" pos:column="26">'/'<pos:position pos:line="13" pos:column="29"/></literal></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <block pos:line="13" pos:column="31">{
       <expr_stmt><expr><name><name pos:line="14" pos:column="8">matchbuf<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><name pos:line="14" pos:column="17">l<pos:position pos:line="14" pos:column="18"/></name></expr>]<pos:position pos:line="14" pos:column="19"/></index></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <literal type="char" pos:line="14" pos:column="22">'/'<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
       <expr_stmt><expr><name><name pos:line="15" pos:column="8">matchbuf<pos:position pos:line="15" pos:column="16"/></name><index pos:line="15" pos:column="16">[<expr><name pos:line="15" pos:column="17">l<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">+<pos:position pos:line="15" pos:column="19"/></operator><literal type="number" pos:line="15" pos:column="19">1<pos:position pos:line="15" pos:column="20"/></literal></expr>]<pos:position pos:line="15" pos:column="21"/></index></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <literal type="char" pos:line="15" pos:column="24">'\0'<pos:position pos:line="15" pos:column="28"/></literal></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
       <expr_stmt><expr><name pos:line="16" pos:column="8">l<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">++<pos:position pos:line="16" pos:column="11"/></operator></expr>;<pos:position pos:line="16" pos:column="12"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="18" pos:column="5">/* now compare the prefix */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">strncmp<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">input<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="24">matchbuf<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">l<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call> <operator pos:line="19" pos:column="37">==<pos:position pos:line="19" pos:column="39"/></operator> <literal type="number" pos:line="19" pos:column="40">0<pos:position pos:line="19" pos:column="41"/></literal></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42"> <block pos:line="19" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">rewritelog<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">r<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="23">5<pos:position pos:line="20" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="26">"strip matching prefix: %s -&gt; %s"<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="61">output<pos:position pos:line="20" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="69">output<pos:position pos:line="20" pos:column="75"/></name><operator pos:line="20" pos:column="75">+<pos:position pos:line="20" pos:column="76"/></operator><name pos:line="20" pos:column="76">l<pos:position pos:line="20" pos:column="77"/></name></expr></argument>)<pos:position pos:line="20" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">output<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">apr_pstrdup<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name><name pos:line="21" pos:column="30">r<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">pool<pos:position pos:line="21" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">output<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">+<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">l<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>

        <comment type="block" pos:line="23" pos:column="9">/* and now add the base-URL as replacement prefix */</comment>
        <expr_stmt><expr><name pos:line="24" pos:column="9">l<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">apr_cpystrn<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">substbuf<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">subst<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="42">sizeof<argument_list pos:line="24" pos:column="48">(<argument><expr><name pos:line="24" pos:column="49">substbuf<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call> <operator pos:line="24" pos:column="60">-<pos:position pos:line="24" pos:column="61"/></operator> <name pos:line="24" pos:column="62">substbuf<pos:position pos:line="24" pos:column="70"/></name></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">substbuf<pos:position pos:line="25" pos:column="21"/></name><index pos:line="25" pos:column="21">[<expr><name pos:line="25" pos:column="22">l<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-<pos:position pos:line="25" pos:column="24"/></operator><literal type="number" pos:line="25" pos:column="24">1<pos:position pos:line="25" pos:column="25"/></literal></expr>]<pos:position pos:line="25" pos:column="26"/></index></name> <operator pos:line="25" pos:column="27">!=<pos:position pos:line="25" pos:column="29"/></operator> <literal type="char" pos:line="25" pos:column="30">'/'<pos:position pos:line="25" pos:column="33"/></literal></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
           <expr_stmt><expr><name><name pos:line="26" pos:column="12">substbuf<pos:position pos:line="26" pos:column="20"/></name><index pos:line="26" pos:column="20">[<expr><name pos:line="26" pos:column="21">l<pos:position pos:line="26" pos:column="22"/></name></expr>]<pos:position pos:line="26" pos:column="23"/></index></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <literal type="char" pos:line="26" pos:column="26">'/'<pos:position pos:line="26" pos:column="29"/></literal></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
           <expr_stmt><expr><name><name pos:line="27" pos:column="12">substbuf<pos:position pos:line="27" pos:column="20"/></name><index pos:line="27" pos:column="20">[<expr><name pos:line="27" pos:column="21">l<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">+<pos:position pos:line="27" pos:column="23"/></operator><literal type="number" pos:line="27" pos:column="23">1<pos:position pos:line="27" pos:column="24"/></literal></expr>]<pos:position pos:line="27" pos:column="25"/></index></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <literal type="char" pos:line="27" pos:column="28">'\0'<pos:position pos:line="27" pos:column="32"/></literal></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
           <expr_stmt><expr><name pos:line="28" pos:column="12">l<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">++<pos:position pos:line="28" pos:column="15"/></operator></expr>;<pos:position pos:line="28" pos:column="16"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">output<pos:position pos:line="30" pos:column="19"/></name><index pos:line="30" pos:column="19">[<expr><literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr>]<pos:position pos:line="30" pos:column="22"/></index></name> <operator pos:line="30" pos:column="23">==<pos:position pos:line="30" pos:column="25"/></operator> <literal type="char" pos:line="30" pos:column="26">'/'<pos:position pos:line="30" pos:column="29"/></literal></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30"> <block pos:line="30" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">rewritelog<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">r<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="27">4<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="30">"add subst prefix: %s -&gt; %s%s"<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>,
                       <argument><expr><name pos:line="32" pos:column="24">output<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="32">substbuf<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">output<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">+<pos:position pos:line="32" pos:column="49"/></operator><literal type="number" pos:line="32" pos:column="49">1<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">output<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <call><name pos:line="33" pos:column="22">apr_pstrcat<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name><name pos:line="33" pos:column="34">r<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">pool<pos:position pos:line="33" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">substbuf<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">output<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">+<pos:position pos:line="33" pos:column="60"/></operator><literal type="number" pos:line="33" pos:column="60">1<pos:position pos:line="33" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="63">NULL<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then>
        <else pos:line="35" pos:column="9">else <block pos:line="35" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">rewritelog<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">r<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="27">4<pos:position pos:line="36" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="30">"add subst prefix: %s -&gt; %s%s"<pos:position pos:line="36" pos:column="63"/></literal></expr></argument>,
                       <argument><expr><name pos:line="37" pos:column="24">output<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="32">substbuf<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">output<pos:position pos:line="37" pos:column="48"/></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name pos:line="38" pos:column="13">output<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <call><name pos:line="38" pos:column="22">apr_pstrcat<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name><name pos:line="38" pos:column="34">r<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">pool<pos:position pos:line="38" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">substbuf<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="53">output<pos:position pos:line="38" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="61">NULL<pos:position pos:line="38" pos:column="65"/></name></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">output<pos:position pos:line="41" pos:column="18"/></name></expr>;<pos:position pos:line="41" pos:column="19"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

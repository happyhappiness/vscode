<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2117_httpd-2.2.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">request_rec<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ap_read_request<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">conn_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">conn<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">request_rec<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">r<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">expect<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">access_status<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket_brigade<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">tmp_bb<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_socket_t<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">csd<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_interval_time_t<pos:position pos:line="9" pos:column="24"/></name></type> <name pos:line="9" pos:column="25">cur_timeout<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_pool_create<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">p<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="25">conn<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">pool<pos:position pos:line="11" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">apr_pool_tag<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">p<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="21">"request"<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">r<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name pos:line="13" pos:column="9">apr_pcalloc<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">p<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="24">sizeof<argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">request_rec<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">r<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">pool<pos:position pos:line="14" pos:column="12"/></name></name>            <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">p<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">r<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">connection<pos:position pos:line="15" pos:column="18"/></name></name>      <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">conn<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">r<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">server<pos:position pos:line="16" pos:column="14"/></name></name>          <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <name><name pos:line="16" pos:column="26">conn<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">base_server<pos:position pos:line="16" pos:column="43"/></name></name></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">r<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">user<pos:position pos:line="18" pos:column="12"/></name></name>            <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">NULL<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">r<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">ap_auth_type<pos:position pos:line="19" pos:column="20"/></name></name>    <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">NULL<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="21" pos:column="5">r<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">allowed_methods<pos:position pos:line="21" pos:column="23"/></name></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <call><name pos:line="21" pos:column="26">ap_make_method_list<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><name pos:line="21" pos:column="46">p<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="49">2<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">r<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">headers_in<pos:position pos:line="23" pos:column="18"/></name></name>      <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <call><name pos:line="23" pos:column="26">apr_table_make<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name><name pos:line="23" pos:column="41">r<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">pool<pos:position pos:line="23" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="50">25<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">r<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">subprocess_env<pos:position pos:line="24" pos:column="22"/></name></name>  <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">apr_table_make<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name><name pos:line="24" pos:column="41">r<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">pool<pos:position pos:line="24" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="50">25<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">r<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">headers_out<pos:position pos:line="25" pos:column="19"/></name></name>     <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <call><name pos:line="25" pos:column="26">apr_table_make<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name><name pos:line="25" pos:column="41">r<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">pool<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="50">12<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">r<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">err_headers_out<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">apr_table_make<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name><name pos:line="26" pos:column="41">r<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">pool<pos:position pos:line="26" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="50">5<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">r<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">notes<pos:position pos:line="27" pos:column="13"/></name></name>           <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <call><name pos:line="27" pos:column="26">apr_table_make<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name><name pos:line="27" pos:column="41">r<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">pool<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="50">5<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">r<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">request_config<pos:position pos:line="29" pos:column="22"/></name></name>  <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <call><name pos:line="29" pos:column="26">ap_create_request_config<pos:position pos:line="29" pos:column="50"/></name><argument_list pos:line="29" pos:column="50">(<argument><expr><name><name pos:line="29" pos:column="51">r<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">-&gt;<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="54">pool<pos:position pos:line="29" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
    <comment type="block" pos:line="30" pos:column="5">/* Must be set before we run create request hook */</comment>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">r<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">proto_output_filters<pos:position pos:line="32" pos:column="28"/></name></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <name><name pos:line="32" pos:column="31">conn<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">output_filters<pos:position pos:line="32" pos:column="51"/></name></name></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">r<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">output_filters<pos:position pos:line="33" pos:column="22"/></name></name>  <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name><name pos:line="33" pos:column="26">r<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">proto_output_filters<pos:position pos:line="33" pos:column="49"/></name></name></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">r<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">-&gt;<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="8">proto_input_filters<pos:position pos:line="34" pos:column="27"/></name></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <name><name pos:line="34" pos:column="30">conn<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">-&gt;<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="36">input_filters<pos:position pos:line="34" pos:column="49"/></name></name></expr>;<pos:position pos:line="34" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">r<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">input_filters<pos:position pos:line="35" pos:column="21"/></name></name>   <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name><name pos:line="35" pos:column="26">r<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">proto_input_filters<pos:position pos:line="35" pos:column="48"/></name></name></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ap_run_create_request<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">r<pos:position pos:line="36" pos:column="28"/></name></expr></argument>)<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">r<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">-&gt;<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="8">per_dir_config<pos:position pos:line="37" pos:column="22"/></name></name>  <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <name><name pos:line="37" pos:column="26">r<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">server<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">lookup_defaults<pos:position pos:line="37" pos:column="52"/></name></name></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">r<pos:position pos:line="39" pos:column="6"/></name><operator pos:line="39" pos:column="6">-&gt;<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="8">sent_bodyct<pos:position pos:line="39" pos:column="19"/></name></name>     <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>                      <comment type="block" pos:line="39" pos:column="50">/* bytect isn't for body */</comment>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">r<pos:position pos:line="41" pos:column="6"/></name><operator pos:line="41" pos:column="6">-&gt;<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="8">read_length<pos:position pos:line="41" pos:column="19"/></name></name>     <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <literal type="number" pos:line="41" pos:column="26">0<pos:position pos:line="41" pos:column="27"/></literal></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">r<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">-&gt;<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="8">read_body<pos:position pos:line="42" pos:column="17"/></name></name>       <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">REQUEST_NO_BODY<pos:position pos:line="42" pos:column="41"/></name></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="44" pos:column="5">r<pos:position pos:line="44" pos:column="6"/></name><operator pos:line="44" pos:column="6">-&gt;<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="8">status<pos:position pos:line="44" pos:column="14"/></name></name>          <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">HTTP_REQUEST_TIME_OUT<pos:position pos:line="44" pos:column="47"/></name></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>  <comment type="block" pos:line="44" pos:column="50">/* Until we get a request */</comment>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">r<pos:position pos:line="45" pos:column="6"/></name><operator pos:line="45" pos:column="6">-&gt;<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="8">the_request<pos:position pos:line="45" pos:column="19"/></name></name>     <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <name pos:line="45" pos:column="26">NULL<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/* Begin by presuming any module can make its own path_info assumptions,
     * until some module interjects and changes the value.
     */</comment>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">r<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">used_path_info<pos:position pos:line="50" pos:column="22"/></name></name> <operator pos:line="50" pos:column="23">=<pos:position pos:line="50" pos:column="24"/></operator> <name pos:line="50" pos:column="25">AP_REQ_DEFAULT_PATH_INFO<pos:position pos:line="50" pos:column="49"/></name></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><name pos:line="52" pos:column="5">tmp_bb<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <call><name pos:line="52" pos:column="14">apr_brigade_create<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name><name pos:line="52" pos:column="33">r<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">-&gt;<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="36">pool<pos:position pos:line="52" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="42">r<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">connection<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">-&gt;<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="57">bucket_alloc<pos:position pos:line="52" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* Get the request... */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><call><name pos:line="55" pos:column="10">read_request_line<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><name pos:line="55" pos:column="28">r<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="31">tmp_bb<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="39"/></condition><then pos:line="55" pos:column="39"> <block pos:line="55" pos:column="40">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">r<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">status<pos:position pos:line="56" pos:column="22"/></name></name> <operator pos:line="56" pos:column="23">==<pos:position pos:line="56" pos:column="25"/></operator> <name pos:line="56" pos:column="26">HTTP_REQUEST_URI_TOO_LARGE<pos:position pos:line="56" pos:column="52"/></name></expr>)<pos:position pos:line="56" pos:column="53"/></condition><then pos:line="56" pos:column="53"> <block pos:line="56" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">ap_log_rerror<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">APLOG_MARK<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">APLOG_ERR<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="50">0<pos:position pos:line="57" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="53">r<pos:position pos:line="57" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="58" pos:column="27">"request failed: URI too long (longer than %d)"<pos:position pos:line="58" pos:column="74"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="76">r<pos:position pos:line="58" pos:column="77"/></name><operator pos:line="58" pos:column="77">-&gt;<pos:position pos:line="58" pos:column="82"/></operator><name pos:line="58" pos:column="79">server<pos:position pos:line="58" pos:column="85"/></name><operator pos:line="58" pos:column="85">-&gt;<pos:position pos:line="58" pos:column="90"/></operator><name pos:line="58" pos:column="87">limit_req_line<pos:position pos:line="58" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="103"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">ap_send_error_response<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">r<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="39">0<pos:position pos:line="59" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">ap_update_child_status<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><name><name pos:line="60" pos:column="36">conn<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">-&gt;<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="42">sbh<pos:position pos:line="60" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="47">SERVER_BUSY_LOG<pos:position pos:line="60" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="64">r<pos:position pos:line="60" pos:column="65"/></name></expr></argument>)<pos:position pos:line="60" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">ap_run_log_transaction<pos:position pos:line="61" pos:column="35"/></name><argument_list pos:line="61" pos:column="35">(<argument><expr><name pos:line="61" pos:column="36">r<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">apr_brigade_destroy<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">tmp_bb<pos:position pos:line="62" pos:column="39"/></name></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt>
            <return pos:line="63" pos:column="13">return <expr><name pos:line="63" pos:column="20">r<pos:position pos:line="63" pos:column="21"/></name></expr>;<pos:position pos:line="63" pos:column="22"/></return>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="66" pos:column="9">apr_brigade_destroy<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><name pos:line="66" pos:column="29">tmp_bb<pos:position pos:line="66" pos:column="35"/></name></expr></argument>)<pos:position pos:line="66" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>
        <return pos:line="67" pos:column="9">return <expr><name pos:line="67" pos:column="16">NULL<pos:position pos:line="67" pos:column="20"/></name></expr>;<pos:position pos:line="67" pos:column="21"/></return>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="70" pos:column="5">/* We may have been in keep_alive_timeout mode, so toggle back
     * to the normal timeout mode as we fetch the header lines,
     * as necessary.
     */</comment>
    <expr_stmt><expr><name pos:line="74" pos:column="5">csd<pos:position pos:line="74" pos:column="8"/></name> <operator pos:line="74" pos:column="9">=<pos:position pos:line="74" pos:column="10"/></operator> <call><name pos:line="74" pos:column="11">ap_get_module_config<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><name><name pos:line="74" pos:column="32">conn<pos:position pos:line="74" pos:column="36"/></name><operator pos:line="74" pos:column="36">-&gt;<pos:position pos:line="74" pos:column="41"/></operator><name pos:line="74" pos:column="38">conn_config<pos:position pos:line="74" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="51">&amp;<pos:position pos:line="74" pos:column="56"/></operator><name pos:line="74" pos:column="52">core_module<pos:position pos:line="74" pos:column="63"/></name></expr></argument>)<pos:position pos:line="74" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">apr_socket_timeout_get<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">csd<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="33">&amp;<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="34">cur_timeout<pos:position pos:line="75" pos:column="45"/></name></expr></argument>)<pos:position pos:line="75" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">cur_timeout<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">!=<pos:position pos:line="76" pos:column="23"/></operator> <name><name pos:line="76" pos:column="24">conn<pos:position pos:line="76" pos:column="28"/></name><operator pos:line="76" pos:column="28">-&gt;<pos:position pos:line="76" pos:column="33"/></operator><name pos:line="76" pos:column="30">base_server<pos:position pos:line="76" pos:column="41"/></name><operator pos:line="76" pos:column="41">-&gt;<pos:position pos:line="76" pos:column="46"/></operator><name pos:line="76" pos:column="43">timeout<pos:position pos:line="76" pos:column="50"/></name></name></expr>)<pos:position pos:line="76" pos:column="51"/></condition><then pos:line="76" pos:column="51"> <block pos:line="76" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">apr_socket_timeout_set<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><name pos:line="77" pos:column="32">csd<pos:position pos:line="77" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="37">conn<pos:position pos:line="77" pos:column="41"/></name><operator pos:line="77" pos:column="41">-&gt;<pos:position pos:line="77" pos:column="46"/></operator><name pos:line="77" pos:column="43">base_server<pos:position pos:line="77" pos:column="54"/></name><operator pos:line="77" pos:column="54">-&gt;<pos:position pos:line="77" pos:column="59"/></operator><name pos:line="77" pos:column="56">timeout<pos:position pos:line="77" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="78" pos:column="9">cur_timeout<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <name><name pos:line="78" pos:column="23">conn<pos:position pos:line="78" pos:column="27"/></name><operator pos:line="78" pos:column="27">-&gt;<pos:position pos:line="78" pos:column="32"/></operator><name pos:line="78" pos:column="29">base_server<pos:position pos:line="78" pos:column="40"/></name><operator pos:line="78" pos:column="40">-&gt;<pos:position pos:line="78" pos:column="45"/></operator><name pos:line="78" pos:column="42">timeout<pos:position pos:line="78" pos:column="49"/></name></name></expr>;<pos:position pos:line="78" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">!<pos:position pos:line="81" pos:column="10"/></operator><name><name pos:line="81" pos:column="10">r<pos:position pos:line="81" pos:column="11"/></name><operator pos:line="81" pos:column="11">-&gt;<pos:position pos:line="81" pos:column="16"/></operator><name pos:line="81" pos:column="13">assbackwards<pos:position pos:line="81" pos:column="25"/></name></name></expr>)<pos:position pos:line="81" pos:column="26"/></condition><then pos:line="81" pos:column="26"> <block pos:line="81" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">ap_get_mime_headers_core<pos:position pos:line="82" pos:column="33"/></name><argument_list pos:line="82" pos:column="33">(<argument><expr><name pos:line="82" pos:column="34">r<pos:position pos:line="82" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="37">tmp_bb<pos:position pos:line="82" pos:column="43"/></name></expr></argument>)<pos:position pos:line="82" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="45"/></expr_stmt>
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name><name pos:line="83" pos:column="13">r<pos:position pos:line="83" pos:column="14"/></name><operator pos:line="83" pos:column="14">-&gt;<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="16">status<pos:position pos:line="83" pos:column="22"/></name></name> <operator pos:line="83" pos:column="23">!=<pos:position pos:line="83" pos:column="25"/></operator> <name pos:line="83" pos:column="26">HTTP_REQUEST_TIME_OUT<pos:position pos:line="83" pos:column="47"/></name></expr>)<pos:position pos:line="83" pos:column="48"/></condition><then pos:line="83" pos:column="48"> <block pos:line="83" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">ap_log_rerror<pos:position pos:line="84" pos:column="26"/></name><argument_list pos:line="84" pos:column="26">(<argument><expr><name pos:line="84" pos:column="27">APLOG_MARK<pos:position pos:line="84" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="39">APLOG_ERR<pos:position pos:line="84" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="50">0<pos:position pos:line="84" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="53">r<pos:position pos:line="84" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="85" pos:column="27">"request failed: error reading the headers"<pos:position pos:line="85" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">ap_send_error_response<pos:position pos:line="86" pos:column="35"/></name><argument_list pos:line="86" pos:column="35">(<argument><expr><name pos:line="86" pos:column="36">r<pos:position pos:line="86" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="39">0<pos:position pos:line="86" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">ap_update_child_status<pos:position pos:line="87" pos:column="35"/></name><argument_list pos:line="87" pos:column="35">(<argument><expr><name><name pos:line="87" pos:column="36">conn<pos:position pos:line="87" pos:column="40"/></name><operator pos:line="87" pos:column="40">-&gt;<pos:position pos:line="87" pos:column="45"/></operator><name pos:line="87" pos:column="42">sbh<pos:position pos:line="87" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="47">SERVER_BUSY_LOG<pos:position pos:line="87" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="64">r<pos:position pos:line="87" pos:column="65"/></name></expr></argument>)<pos:position pos:line="87" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">ap_run_log_transaction<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><name pos:line="88" pos:column="36">r<pos:position pos:line="88" pos:column="37"/></name></expr></argument>)<pos:position pos:line="88" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">apr_brigade_destroy<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">tmp_bb<pos:position pos:line="89" pos:column="39"/></name></expr></argument>)<pos:position pos:line="89" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="41"/></expr_stmt>
            <return pos:line="90" pos:column="13">return <expr><name pos:line="90" pos:column="20">r<pos:position pos:line="90" pos:column="21"/></name></expr>;<pos:position pos:line="90" pos:column="22"/></return>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if>

        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><call><name pos:line="93" pos:column="13">apr_table_get<pos:position pos:line="93" pos:column="26"/></name><argument_list pos:line="93" pos:column="26">(<argument><expr><name><name pos:line="93" pos:column="27">r<pos:position pos:line="93" pos:column="28"/></name><operator pos:line="93" pos:column="28">-&gt;<pos:position pos:line="93" pos:column="33"/></operator><name pos:line="93" pos:column="30">headers_in<pos:position pos:line="93" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="42">"Transfer-Encoding"<pos:position pos:line="93" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="62"/></argument_list></call>
            <operator pos:line="94" pos:column="13">&amp;&amp;<pos:position pos:line="94" pos:column="23"/></operator> <call><name pos:line="94" pos:column="16">apr_table_get<pos:position pos:line="94" pos:column="29"/></name><argument_list pos:line="94" pos:column="29">(<argument><expr><name><name pos:line="94" pos:column="30">r<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">-&gt;<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="33">headers_in<pos:position pos:line="94" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="45">"Content-Length"<pos:position pos:line="94" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="63"/></condition><then pos:line="94" pos:column="63"> <block pos:line="94" pos:column="64">{
            <comment type="block" pos:line="95" pos:column="13">/* 2616 section 4.4, point 3: "if both Transfer-Encoding
             * and Content-Length are received, the latter MUST be
             * ignored"; so unset it here to prevent any confusion
             * later. */</comment>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">apr_table_unset<pos:position pos:line="99" pos:column="28"/></name><argument_list pos:line="99" pos:column="28">(<argument><expr><name><name pos:line="99" pos:column="29">r<pos:position pos:line="99" pos:column="30"/></name><operator pos:line="99" pos:column="30">-&gt;<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="32">headers_in<pos:position pos:line="99" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="44">"Content-Length"<pos:position pos:line="99" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if>
    }<pos:position pos:line="101" pos:column="6"/></block></then>
    <else pos:line="102" pos:column="5">else <block pos:line="102" pos:column="10">{
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name><name pos:line="103" pos:column="13">r<pos:position pos:line="103" pos:column="14"/></name><operator pos:line="103" pos:column="14">-&gt;<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="16">header_only<pos:position pos:line="103" pos:column="27"/></name></name></expr>)<pos:position pos:line="103" pos:column="28"/></condition><then pos:line="103" pos:column="28"> <block pos:line="103" pos:column="29">{
            <comment type="block" pos:line="104" pos:column="13">/*
             * Client asked for headers only with HTTP/0.9, which doesn't send
             * headers! Have to dink things just to make sure the error message
             * comes through...
             */</comment>
            <expr_stmt><expr><call><name pos:line="109" pos:column="13">ap_log_rerror<pos:position pos:line="109" pos:column="26"/></name><argument_list pos:line="109" pos:column="26">(<argument><expr><name pos:line="109" pos:column="27">APLOG_MARK<pos:position pos:line="109" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="39">APLOG_ERR<pos:position pos:line="109" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="50">0<pos:position pos:line="109" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="53">r<pos:position pos:line="109" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="110" pos:column="27">"client sent invalid HTTP/0.9 request: HEAD %s"<pos:position pos:line="110" pos:column="74"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="111" pos:column="27">r<pos:position pos:line="111" pos:column="28"/></name><operator pos:line="111" pos:column="28">-&gt;<pos:position pos:line="111" pos:column="33"/></operator><name pos:line="111" pos:column="30">uri<pos:position pos:line="111" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="112" pos:column="13">r<pos:position pos:line="112" pos:column="14"/></name><operator pos:line="112" pos:column="14">-&gt;<pos:position pos:line="112" pos:column="19"/></operator><name pos:line="112" pos:column="16">header_only<pos:position pos:line="112" pos:column="27"/></name></name> <operator pos:line="112" pos:column="28">=<pos:position pos:line="112" pos:column="29"/></operator> <literal type="number" pos:line="112" pos:column="30">0<pos:position pos:line="112" pos:column="31"/></literal></expr>;<pos:position pos:line="112" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="113" pos:column="13">r<pos:position pos:line="113" pos:column="14"/></name><operator pos:line="113" pos:column="14">-&gt;<pos:position pos:line="113" pos:column="19"/></operator><name pos:line="113" pos:column="16">status<pos:position pos:line="113" pos:column="22"/></name></name> <operator pos:line="113" pos:column="23">=<pos:position pos:line="113" pos:column="24"/></operator> <name pos:line="113" pos:column="25">HTTP_BAD_REQUEST<pos:position pos:line="113" pos:column="41"/></name></expr>;<pos:position pos:line="113" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="114" pos:column="13">ap_send_error_response<pos:position pos:line="114" pos:column="35"/></name><argument_list pos:line="114" pos:column="35">(<argument><expr><name pos:line="114" pos:column="36">r<pos:position pos:line="114" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="39">0<pos:position pos:line="114" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="115" pos:column="13">ap_update_child_status<pos:position pos:line="115" pos:column="35"/></name><argument_list pos:line="115" pos:column="35">(<argument><expr><name><name pos:line="115" pos:column="36">conn<pos:position pos:line="115" pos:column="40"/></name><operator pos:line="115" pos:column="40">-&gt;<pos:position pos:line="115" pos:column="45"/></operator><name pos:line="115" pos:column="42">sbh<pos:position pos:line="115" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="47">SERVER_BUSY_LOG<pos:position pos:line="115" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="64">r<pos:position pos:line="115" pos:column="65"/></name></expr></argument>)<pos:position pos:line="115" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="116" pos:column="13">ap_run_log_transaction<pos:position pos:line="116" pos:column="35"/></name><argument_list pos:line="116" pos:column="35">(<argument><expr><name pos:line="116" pos:column="36">r<pos:position pos:line="116" pos:column="37"/></name></expr></argument>)<pos:position pos:line="116" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">apr_brigade_destroy<pos:position pos:line="117" pos:column="32"/></name><argument_list pos:line="117" pos:column="32">(<argument><expr><name pos:line="117" pos:column="33">tmp_bb<pos:position pos:line="117" pos:column="39"/></name></expr></argument>)<pos:position pos:line="117" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="41"/></expr_stmt>
            <return pos:line="118" pos:column="13">return <expr><name pos:line="118" pos:column="20">r<pos:position pos:line="118" pos:column="21"/></name></expr>;<pos:position pos:line="118" pos:column="22"/></return>
        }<pos:position pos:line="119" pos:column="10"/></block></then></if>
    }<pos:position pos:line="120" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="122" pos:column="5">apr_brigade_destroy<pos:position pos:line="122" pos:column="24"/></name><argument_list pos:line="122" pos:column="24">(<argument><expr><name pos:line="122" pos:column="25">tmp_bb<pos:position pos:line="122" pos:column="31"/></name></expr></argument>)<pos:position pos:line="122" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="124" pos:column="5">r<pos:position pos:line="124" pos:column="6"/></name><operator pos:line="124" pos:column="6">-&gt;<pos:position pos:line="124" pos:column="11"/></operator><name pos:line="124" pos:column="8">status<pos:position pos:line="124" pos:column="14"/></name></name> <operator pos:line="124" pos:column="15">=<pos:position pos:line="124" pos:column="16"/></operator> <name pos:line="124" pos:column="17">HTTP_OK<pos:position pos:line="124" pos:column="24"/></name></expr>;<pos:position pos:line="124" pos:column="25"/></expr_stmt>                         <comment type="block" pos:line="124" pos:column="50">/* Until further notice. */</comment>

    <comment type="block" pos:line="126" pos:column="5">/* update what we think the virtual host is based on the headers we've
     * now read. may update status.
     */</comment>
    <expr_stmt><expr><call><name pos:line="129" pos:column="5">ap_update_vhost_from_headers<pos:position pos:line="129" pos:column="33"/></name><argument_list pos:line="129" pos:column="33">(<argument><expr><name pos:line="129" pos:column="34">r<pos:position pos:line="129" pos:column="35"/></name></expr></argument>)<pos:position pos:line="129" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="131" pos:column="5">/* Toggle to the Host:-based vhost's timeout mode to fetch the
     * request body and send the response body, if needed.
     */</comment>
    <if pos:line="134" pos:column="5">if <condition pos:line="134" pos:column="8">(<expr><name pos:line="134" pos:column="9">cur_timeout<pos:position pos:line="134" pos:column="20"/></name> <operator pos:line="134" pos:column="21">!=<pos:position pos:line="134" pos:column="23"/></operator> <name><name pos:line="134" pos:column="24">r<pos:position pos:line="134" pos:column="25"/></name><operator pos:line="134" pos:column="25">-&gt;<pos:position pos:line="134" pos:column="30"/></operator><name pos:line="134" pos:column="27">server<pos:position pos:line="134" pos:column="33"/></name><operator pos:line="134" pos:column="33">-&gt;<pos:position pos:line="134" pos:column="38"/></operator><name pos:line="134" pos:column="35">timeout<pos:position pos:line="134" pos:column="42"/></name></name></expr>)<pos:position pos:line="134" pos:column="43"/></condition><then pos:line="134" pos:column="43"> <block pos:line="134" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="135" pos:column="9">apr_socket_timeout_set<pos:position pos:line="135" pos:column="31"/></name><argument_list pos:line="135" pos:column="31">(<argument><expr><name pos:line="135" pos:column="32">csd<pos:position pos:line="135" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="37">r<pos:position pos:line="135" pos:column="38"/></name><operator pos:line="135" pos:column="38">-&gt;<pos:position pos:line="135" pos:column="43"/></operator><name pos:line="135" pos:column="40">server<pos:position pos:line="135" pos:column="46"/></name><operator pos:line="135" pos:column="46">-&gt;<pos:position pos:line="135" pos:column="51"/></operator><name pos:line="135" pos:column="48">timeout<pos:position pos:line="135" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name pos:line="136" pos:column="9">cur_timeout<pos:position pos:line="136" pos:column="20"/></name> <operator pos:line="136" pos:column="21">=<pos:position pos:line="136" pos:column="22"/></operator> <name><name pos:line="136" pos:column="23">r<pos:position pos:line="136" pos:column="24"/></name><operator pos:line="136" pos:column="24">-&gt;<pos:position pos:line="136" pos:column="29"/></operator><name pos:line="136" pos:column="26">server<pos:position pos:line="136" pos:column="32"/></name><operator pos:line="136" pos:column="32">-&gt;<pos:position pos:line="136" pos:column="37"/></operator><name pos:line="136" pos:column="34">timeout<pos:position pos:line="136" pos:column="41"/></name></name></expr>;<pos:position pos:line="136" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="139" pos:column="5">/* we may have switched to another server */</comment>
    <expr_stmt><expr><name><name pos:line="140" pos:column="5">r<pos:position pos:line="140" pos:column="6"/></name><operator pos:line="140" pos:column="6">-&gt;<pos:position pos:line="140" pos:column="11"/></operator><name pos:line="140" pos:column="8">per_dir_config<pos:position pos:line="140" pos:column="22"/></name></name> <operator pos:line="140" pos:column="23">=<pos:position pos:line="140" pos:column="24"/></operator> <name><name pos:line="140" pos:column="25">r<pos:position pos:line="140" pos:column="26"/></name><operator pos:line="140" pos:column="26">-&gt;<pos:position pos:line="140" pos:column="31"/></operator><name pos:line="140" pos:column="28">server<pos:position pos:line="140" pos:column="34"/></name><operator pos:line="140" pos:column="34">-&gt;<pos:position pos:line="140" pos:column="39"/></operator><name pos:line="140" pos:column="36">lookup_defaults<pos:position pos:line="140" pos:column="51"/></name></name></expr>;<pos:position pos:line="140" pos:column="52"/></expr_stmt>

    <if pos:line="142" pos:column="5">if <condition pos:line="142" pos:column="8">(<expr><operator pos:line="142" pos:column="9">(<pos:position pos:line="142" pos:column="10"/></operator><operator pos:line="142" pos:column="10">!<pos:position pos:line="142" pos:column="11"/></operator><name><name pos:line="142" pos:column="11">r<pos:position pos:line="142" pos:column="12"/></name><operator pos:line="142" pos:column="12">-&gt;<pos:position pos:line="142" pos:column="17"/></operator><name pos:line="142" pos:column="14">hostname<pos:position pos:line="142" pos:column="22"/></name></name> <operator pos:line="142" pos:column="23">&amp;&amp;<pos:position pos:line="142" pos:column="33"/></operator> <operator pos:line="142" pos:column="26">(<pos:position pos:line="142" pos:column="27"/></operator><name><name pos:line="142" pos:column="27">r<pos:position pos:line="142" pos:column="28"/></name><operator pos:line="142" pos:column="28">-&gt;<pos:position pos:line="142" pos:column="33"/></operator><name pos:line="142" pos:column="30">proto_num<pos:position pos:line="142" pos:column="39"/></name></name> <operator pos:line="142" pos:column="40">&gt;=<pos:position pos:line="142" pos:column="45"/></operator> <call><name pos:line="142" pos:column="43">HTTP_VERSION<pos:position pos:line="142" pos:column="55"/></name><argument_list pos:line="142" pos:column="55">(<argument><expr><literal type="number" pos:line="142" pos:column="56">1<pos:position pos:line="142" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="59">1<pos:position pos:line="142" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="61"/></argument_list></call><operator pos:line="142" pos:column="61">)<pos:position pos:line="142" pos:column="62"/></operator><operator pos:line="142" pos:column="62">)<pos:position pos:line="142" pos:column="63"/></operator>
        <operator pos:line="143" pos:column="9">||<pos:position pos:line="143" pos:column="11"/></operator> <operator pos:line="143" pos:column="12">(<pos:position pos:line="143" pos:column="13"/></operator><operator pos:line="143" pos:column="13">(<pos:position pos:line="143" pos:column="14"/></operator><name><name pos:line="143" pos:column="14">r<pos:position pos:line="143" pos:column="15"/></name><operator pos:line="143" pos:column="15">-&gt;<pos:position pos:line="143" pos:column="20"/></operator><name pos:line="143" pos:column="17">proto_num<pos:position pos:line="143" pos:column="26"/></name></name> <operator pos:line="143" pos:column="27">==<pos:position pos:line="143" pos:column="29"/></operator> <call><name pos:line="143" pos:column="30">HTTP_VERSION<pos:position pos:line="143" pos:column="42"/></name><argument_list pos:line="143" pos:column="42">(<argument><expr><literal type="number" pos:line="143" pos:column="43">1<pos:position pos:line="143" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="46">1<pos:position pos:line="143" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="48"/></argument_list></call><operator pos:line="143" pos:column="48">)<pos:position pos:line="143" pos:column="49"/></operator>
            <operator pos:line="144" pos:column="13">&amp;&amp;<pos:position pos:line="144" pos:column="23"/></operator> <operator pos:line="144" pos:column="16">!<pos:position pos:line="144" pos:column="17"/></operator><call><name pos:line="144" pos:column="17">apr_table_get<pos:position pos:line="144" pos:column="30"/></name><argument_list pos:line="144" pos:column="30">(<argument><expr><name><name pos:line="144" pos:column="31">r<pos:position pos:line="144" pos:column="32"/></name><operator pos:line="144" pos:column="32">-&gt;<pos:position pos:line="144" pos:column="37"/></operator><name pos:line="144" pos:column="34">headers_in<pos:position pos:line="144" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="46">"Host"<pos:position pos:line="144" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="53"/></argument_list></call><operator pos:line="144" pos:column="53">)<pos:position pos:line="144" pos:column="54"/></operator></expr>)<pos:position pos:line="144" pos:column="55"/></condition><then pos:line="144" pos:column="55"> <block pos:line="144" pos:column="56">{
        <comment type="block" pos:line="145" pos:column="9">/*
         * Client sent us an HTTP/1.1 or later request without telling us the
         * hostname, either with a full URL or a Host: header. We therefore
         * need to (as per the 1.1 spec) send an error.  As a special case,
         * HTTP/1.1 mentions twice (S9, S14.23) that a request MUST contain
         * a Host: header, and the server MUST respond with 400 if it doesn't.
         */</comment>
        <expr_stmt><expr><name><name pos:line="152" pos:column="9">r<pos:position pos:line="152" pos:column="10"/></name><operator pos:line="152" pos:column="10">-&gt;<pos:position pos:line="152" pos:column="15"/></operator><name pos:line="152" pos:column="12">status<pos:position pos:line="152" pos:column="18"/></name></name> <operator pos:line="152" pos:column="19">=<pos:position pos:line="152" pos:column="20"/></operator> <name pos:line="152" pos:column="21">HTTP_BAD_REQUEST<pos:position pos:line="152" pos:column="37"/></name></expr>;<pos:position pos:line="152" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="153" pos:column="9">ap_log_rerror<pos:position pos:line="153" pos:column="22"/></name><argument_list pos:line="153" pos:column="22">(<argument><expr><name pos:line="153" pos:column="23">APLOG_MARK<pos:position pos:line="153" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="35">APLOG_ERR<pos:position pos:line="153" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="153" pos:column="46">0<pos:position pos:line="153" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="49">r<pos:position pos:line="153" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="154" pos:column="23">"client sent HTTP/1.1 request without hostname "<pos:position pos:line="154" pos:column="71"/></literal>
                      <literal type="string" pos:line="155" pos:column="23">"(see RFC2616 section 14.23): %s"<pos:position pos:line="155" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="58">r<pos:position pos:line="155" pos:column="59"/></name><operator pos:line="155" pos:column="59">-&gt;<pos:position pos:line="155" pos:column="64"/></operator><name pos:line="155" pos:column="61">uri<pos:position pos:line="155" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="156" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="158" pos:column="5">/*
     * Add the HTTP_IN filter here to ensure that ap_discard_request_body
     * called by ap_die and by ap_send_error_response works correctly on
     * status codes that do not cause the connection to be dropped and
     * in situations where the connection should be kept alive.
     */</comment>

    <expr_stmt><expr><call><name pos:line="165" pos:column="5">ap_add_input_filter_handle<pos:position pos:line="165" pos:column="31"/></name><argument_list pos:line="165" pos:column="31">(<argument><expr><name pos:line="165" pos:column="32">ap_http_input_filter_handle<pos:position pos:line="165" pos:column="59"/></name></expr></argument>,
                               <argument><expr><name pos:line="166" pos:column="32">NULL<pos:position pos:line="166" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="38">r<pos:position pos:line="166" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="41">r<pos:position pos:line="166" pos:column="42"/></name><operator pos:line="166" pos:column="42">-&gt;<pos:position pos:line="166" pos:column="47"/></operator><name pos:line="166" pos:column="44">connection<pos:position pos:line="166" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="56"/></expr_stmt>

    <if pos:line="168" pos:column="5">if <condition pos:line="168" pos:column="8">(<expr><name><name pos:line="168" pos:column="9">r<pos:position pos:line="168" pos:column="10"/></name><operator pos:line="168" pos:column="10">-&gt;<pos:position pos:line="168" pos:column="15"/></operator><name pos:line="168" pos:column="12">status<pos:position pos:line="168" pos:column="18"/></name></name> <operator pos:line="168" pos:column="19">!=<pos:position pos:line="168" pos:column="21"/></operator> <name pos:line="168" pos:column="22">HTTP_OK<pos:position pos:line="168" pos:column="29"/></name></expr>)<pos:position pos:line="168" pos:column="30"/></condition><then pos:line="168" pos:column="30"> <block pos:line="168" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="169" pos:column="9">ap_send_error_response<pos:position pos:line="169" pos:column="31"/></name><argument_list pos:line="169" pos:column="31">(<argument><expr><name pos:line="169" pos:column="32">r<pos:position pos:line="169" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="35">0<pos:position pos:line="169" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="170" pos:column="9">ap_update_child_status<pos:position pos:line="170" pos:column="31"/></name><argument_list pos:line="170" pos:column="31">(<argument><expr><name><name pos:line="170" pos:column="32">conn<pos:position pos:line="170" pos:column="36"/></name><operator pos:line="170" pos:column="36">-&gt;<pos:position pos:line="170" pos:column="41"/></operator><name pos:line="170" pos:column="38">sbh<pos:position pos:line="170" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="43">SERVER_BUSY_LOG<pos:position pos:line="170" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="60">r<pos:position pos:line="170" pos:column="61"/></name></expr></argument>)<pos:position pos:line="170" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="171" pos:column="9">ap_run_log_transaction<pos:position pos:line="171" pos:column="31"/></name><argument_list pos:line="171" pos:column="31">(<argument><expr><name pos:line="171" pos:column="32">r<pos:position pos:line="171" pos:column="33"/></name></expr></argument>)<pos:position pos:line="171" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="35"/></expr_stmt>
        <return pos:line="172" pos:column="9">return <expr><name pos:line="172" pos:column="16">r<pos:position pos:line="172" pos:column="17"/></name></expr>;<pos:position pos:line="172" pos:column="18"/></return>
    }<pos:position pos:line="173" pos:column="6"/></block></then></if>

    <if pos:line="175" pos:column="5">if <condition pos:line="175" pos:column="8">(<expr><operator pos:line="175" pos:column="9">(<pos:position pos:line="175" pos:column="10"/></operator><name pos:line="175" pos:column="10">access_status<pos:position pos:line="175" pos:column="23"/></name> <operator pos:line="175" pos:column="24">=<pos:position pos:line="175" pos:column="25"/></operator> <call><name pos:line="175" pos:column="26">ap_run_post_read_request<pos:position pos:line="175" pos:column="50"/></name><argument_list pos:line="175" pos:column="50">(<argument><expr><name pos:line="175" pos:column="51">r<pos:position pos:line="175" pos:column="52"/></name></expr></argument>)<pos:position pos:line="175" pos:column="53"/></argument_list></call><operator pos:line="175" pos:column="53">)<pos:position pos:line="175" pos:column="54"/></operator></expr>)<pos:position pos:line="175" pos:column="55"/></condition><then pos:line="175" pos:column="55"> <block pos:line="175" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">ap_die<pos:position pos:line="176" pos:column="15"/></name><argument_list pos:line="176" pos:column="15">(<argument><expr><name pos:line="176" pos:column="16">access_status<pos:position pos:line="176" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="31">r<pos:position pos:line="176" pos:column="32"/></name></expr></argument>)<pos:position pos:line="176" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="177" pos:column="9">ap_update_child_status<pos:position pos:line="177" pos:column="31"/></name><argument_list pos:line="177" pos:column="31">(<argument><expr><name><name pos:line="177" pos:column="32">conn<pos:position pos:line="177" pos:column="36"/></name><operator pos:line="177" pos:column="36">-&gt;<pos:position pos:line="177" pos:column="41"/></operator><name pos:line="177" pos:column="38">sbh<pos:position pos:line="177" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="43">SERVER_BUSY_LOG<pos:position pos:line="177" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="60">r<pos:position pos:line="177" pos:column="61"/></name></expr></argument>)<pos:position pos:line="177" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="178" pos:column="9">ap_run_log_transaction<pos:position pos:line="178" pos:column="31"/></name><argument_list pos:line="178" pos:column="31">(<argument><expr><name pos:line="178" pos:column="32">r<pos:position pos:line="178" pos:column="33"/></name></expr></argument>)<pos:position pos:line="178" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="35"/></expr_stmt>
        <return pos:line="179" pos:column="9">return <expr><name pos:line="179" pos:column="16">NULL<pos:position pos:line="179" pos:column="20"/></name></expr>;<pos:position pos:line="179" pos:column="21"/></return>
    }<pos:position pos:line="180" pos:column="6"/></block></then></if>

    <if pos:line="182" pos:column="5">if <condition pos:line="182" pos:column="8">(<expr><operator pos:line="182" pos:column="9">(<pos:position pos:line="182" pos:column="10"/></operator><operator pos:line="182" pos:column="10">(<pos:position pos:line="182" pos:column="11"/></operator><name pos:line="182" pos:column="11">expect<pos:position pos:line="182" pos:column="17"/></name> <operator pos:line="182" pos:column="18">=<pos:position pos:line="182" pos:column="19"/></operator> <call><name pos:line="182" pos:column="20">apr_table_get<pos:position pos:line="182" pos:column="33"/></name><argument_list pos:line="182" pos:column="33">(<argument><expr><name><name pos:line="182" pos:column="34">r<pos:position pos:line="182" pos:column="35"/></name><operator pos:line="182" pos:column="35">-&gt;<pos:position pos:line="182" pos:column="40"/></operator><name pos:line="182" pos:column="37">headers_in<pos:position pos:line="182" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="49">"Expect"<pos:position pos:line="182" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="58"/></argument_list></call><operator pos:line="182" pos:column="58">)<pos:position pos:line="182" pos:column="59"/></operator> <operator pos:line="182" pos:column="60">!=<pos:position pos:line="182" pos:column="62"/></operator> <name pos:line="182" pos:column="63">NULL<pos:position pos:line="182" pos:column="67"/></name><operator pos:line="182" pos:column="67">)<pos:position pos:line="182" pos:column="68"/></operator>
        <operator pos:line="183" pos:column="9">&amp;&amp;<pos:position pos:line="183" pos:column="19"/></operator> <operator pos:line="183" pos:column="12">(<pos:position pos:line="183" pos:column="13"/></operator><name><name pos:line="183" pos:column="13">expect<pos:position pos:line="183" pos:column="19"/></name><index pos:line="183" pos:column="19">[<expr><literal type="number" pos:line="183" pos:column="20">0<pos:position pos:line="183" pos:column="21"/></literal></expr>]<pos:position pos:line="183" pos:column="22"/></index></name> <operator pos:line="183" pos:column="23">!=<pos:position pos:line="183" pos:column="25"/></operator> <literal type="char" pos:line="183" pos:column="26">'\0'<pos:position pos:line="183" pos:column="30"/></literal><operator pos:line="183" pos:column="30">)<pos:position pos:line="183" pos:column="31"/></operator></expr>)<pos:position pos:line="183" pos:column="32"/></condition><then pos:line="183" pos:column="32"> <block pos:line="183" pos:column="33">{
        <comment type="block" pos:line="184" pos:column="9">/*
         * The Expect header field was added to HTTP/1.1 after RFC 2068
         * as a means to signal when a 100 response is desired and,
         * unfortunately, to signal a poor man's mandatory extension that
         * the server must understand or return 417 Expectation Failed.
         */</comment>
        <if pos:line="190" pos:column="9">if <condition pos:line="190" pos:column="12">(<expr><call><name pos:line="190" pos:column="13">strcasecmp<pos:position pos:line="190" pos:column="23"/></name><argument_list pos:line="190" pos:column="23">(<argument><expr><name pos:line="190" pos:column="24">expect<pos:position pos:line="190" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="32">"100-continue"<pos:position pos:line="190" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="47"/></argument_list></call> <operator pos:line="190" pos:column="48">==<pos:position pos:line="190" pos:column="50"/></operator> <literal type="number" pos:line="190" pos:column="51">0<pos:position pos:line="190" pos:column="52"/></literal></expr>)<pos:position pos:line="190" pos:column="53"/></condition><then pos:line="190" pos:column="53"> <block pos:line="190" pos:column="54">{
            <expr_stmt><expr><name><name pos:line="191" pos:column="13">r<pos:position pos:line="191" pos:column="14"/></name><operator pos:line="191" pos:column="14">-&gt;<pos:position pos:line="191" pos:column="19"/></operator><name pos:line="191" pos:column="16">expecting_100<pos:position pos:line="191" pos:column="29"/></name></name> <operator pos:line="191" pos:column="30">=<pos:position pos:line="191" pos:column="31"/></operator> <literal type="number" pos:line="191" pos:column="32">1<pos:position pos:line="191" pos:column="33"/></literal></expr>;<pos:position pos:line="191" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="192" pos:column="10"/></block></then>
        <else pos:line="193" pos:column="9">else <block pos:line="193" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="194" pos:column="13">r<pos:position pos:line="194" pos:column="14"/></name><operator pos:line="194" pos:column="14">-&gt;<pos:position pos:line="194" pos:column="19"/></operator><name pos:line="194" pos:column="16">status<pos:position pos:line="194" pos:column="22"/></name></name> <operator pos:line="194" pos:column="23">=<pos:position pos:line="194" pos:column="24"/></operator> <name pos:line="194" pos:column="25">HTTP_EXPECTATION_FAILED<pos:position pos:line="194" pos:column="48"/></name></expr>;<pos:position pos:line="194" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="195" pos:column="13">ap_log_rerror<pos:position pos:line="195" pos:column="26"/></name><argument_list pos:line="195" pos:column="26">(<argument><expr><name pos:line="195" pos:column="27">APLOG_MARK<pos:position pos:line="195" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="39">APLOG_INFO<pos:position pos:line="195" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="195" pos:column="51">0<pos:position pos:line="195" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="195" pos:column="54">r<pos:position pos:line="195" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="196" pos:column="27">"client sent an unrecognized expectation value of "<pos:position pos:line="196" pos:column="78"/></literal>
                          <literal type="string" pos:line="197" pos:column="27">"Expect: %s"<pos:position pos:line="197" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="197" pos:column="41">expect<pos:position pos:line="197" pos:column="47"/></name></expr></argument>)<pos:position pos:line="197" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="198" pos:column="13">ap_send_error_response<pos:position pos:line="198" pos:column="35"/></name><argument_list pos:line="198" pos:column="35">(<argument><expr><name pos:line="198" pos:column="36">r<pos:position pos:line="198" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="198" pos:column="39">0<pos:position pos:line="198" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="199" pos:column="13">ap_update_child_status<pos:position pos:line="199" pos:column="35"/></name><argument_list pos:line="199" pos:column="35">(<argument><expr><name><name pos:line="199" pos:column="36">conn<pos:position pos:line="199" pos:column="40"/></name><operator pos:line="199" pos:column="40">-&gt;<pos:position pos:line="199" pos:column="45"/></operator><name pos:line="199" pos:column="42">sbh<pos:position pos:line="199" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="47">SERVER_BUSY_LOG<pos:position pos:line="199" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="64">r<pos:position pos:line="199" pos:column="65"/></name></expr></argument>)<pos:position pos:line="199" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="200" pos:column="13">ap_run_log_transaction<pos:position pos:line="200" pos:column="35"/></name><argument_list pos:line="200" pos:column="35">(<argument><expr><name pos:line="200" pos:column="36">r<pos:position pos:line="200" pos:column="37"/></name></expr></argument>)<pos:position pos:line="200" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="39"/></expr_stmt>
            <return pos:line="201" pos:column="13">return <expr><name pos:line="201" pos:column="20">r<pos:position pos:line="201" pos:column="21"/></name></expr>;<pos:position pos:line="201" pos:column="22"/></return>
        }<pos:position pos:line="202" pos:column="10"/></block></else></if>
    }<pos:position pos:line="203" pos:column="6"/></block></then></if>

    <return pos:line="205" pos:column="5">return <expr><name pos:line="205" pos:column="12">r<pos:position pos:line="205" pos:column="13"/></name></expr>;<pos:position pos:line="205" pos:column="14"/></return>
}<pos:position pos:line="206" pos:column="2"/></block></function></unit>

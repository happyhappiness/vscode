<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1446_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ap_cgi_build_command<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">cmd<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier><modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier><modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">argv<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">request_rec<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">r<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">apr_pool_t<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">p<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, 
                                         <parameter><decl><type><name pos:line="3" pos:column="42">cgi_exec_info_t<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">e_info<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_array_header_t<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">elts_arr<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><call><name pos:line="5" pos:column="42">apr_table_elts<pos:position pos:line="5" pos:column="56"/></name><argument_list pos:line="5" pos:column="56">(<argument><expr><name><name pos:line="5" pos:column="57">r<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">-&gt;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="60">subprocess_env<pos:position pos:line="5" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">apr_table_entry_t<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">elts<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><operator pos:line="6" pos:column="37">(<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">apr_table_entry_t<pos:position pos:line="6" pos:column="55"/></name> <operator pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></operator><operator pos:line="6" pos:column="57">)<pos:position pos:line="6" pos:column="58"/></operator> <name><name pos:line="6" pos:column="59">elts_arr<pos:position pos:line="6" pos:column="67"/></name><operator pos:line="6" pos:column="67">-&gt;<pos:position pos:line="6" pos:column="72"/></operator><name pos:line="6" pos:column="69">elts<pos:position pos:line="6" pos:column="73"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">ext<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">interpreter<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">win32_dir_conf<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">d<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_file_t<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">fh<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">args<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><literal type="string" pos:line="11" pos:column="24">""<pos:position pos:line="11" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">i<pos:position pos:line="12" pos:column="10"/></name></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">d<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">win32_dir_conf<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator><call><name pos:line="14" pos:column="27">ap_get_module_config<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><name><name pos:line="14" pos:column="48">r<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">per_dir_config<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>, 
                                               <argument><expr><operator pos:line="15" pos:column="48">&amp;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="49">win32_module<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">e_info<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">cmd_type<pos:position pos:line="17" pos:column="25"/></name></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26"> <block pos:line="17" pos:column="27">{
        <comment type="block" pos:line="18" pos:column="9">/* We have to consider that the client gets any QUERY_ARGS
         * without any charset interpretation, use prep_string to
         * create a string of the literal QUERY_ARGS bytes.
         */</comment>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">*<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">cmd<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name><name pos:line="22" pos:column="16">r<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">filename<pos:position pos:line="22" pos:column="27"/></name></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">r<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">args<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">&amp;&amp;<pos:position pos:line="23" pos:column="31"/></operator> <name><name pos:line="23" pos:column="24">r<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">args<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal></expr>]<pos:position pos:line="23" pos:column="34"/></index></name> <operator pos:line="23" pos:column="35">&amp;&amp;<pos:position pos:line="23" pos:column="45"/></operator> <operator pos:line="23" pos:column="38">!<pos:position pos:line="23" pos:column="39"/></operator><call><name pos:line="23" pos:column="39">ap_strchr_c<pos:position pos:line="23" pos:column="50"/></name><argument_list pos:line="23" pos:column="50">(<argument><expr><name><name pos:line="23" pos:column="51">r<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">-&gt;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="54">args<pos:position pos:line="23" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="60">'='<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65"> <block pos:line="23" pos:column="66">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">args<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name><name pos:line="24" pos:column="20">r<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">args<pos:position pos:line="24" pos:column="27"/></name></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="27" pos:column="5">/* Handle the complete file name, we DON'T want to follow suexec, since
     * an unrooted command is as predictable as shooting craps in Win32.
     * Notice that unlike most mime extension parsing, we have to use the
     * win32 parsing here, therefore the final extension is the only one
     * we will consider.
     */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">ext<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <call><name pos:line="33" pos:column="11">strrchr<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><call><name pos:line="33" pos:column="19">apr_filename_of_pathname<pos:position pos:line="33" pos:column="43"/></name><argument_list pos:line="33" pos:column="43">(<argument><expr><operator pos:line="33" pos:column="44">*<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">cmd<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="33" pos:column="51">'.'<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
    
    <comment type="block" pos:line="35" pos:column="5">/* If the file has an extension and it is not .com and not .exe and
     * we've been instructed to search the registry, then do so.
     * Let apr_proc_create do all of the .bat/.cmd dirty work.
     */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">ext<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">&amp;&amp;<pos:position pos:line="39" pos:column="23"/></operator> <operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><operator pos:line="39" pos:column="17">!<pos:position pos:line="39" pos:column="18"/></operator><call><name pos:line="39" pos:column="18">strcasecmp<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">ext<pos:position pos:line="39" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="39" pos:column="33">".exe"<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call> <operator pos:line="39" pos:column="41">||<pos:position pos:line="39" pos:column="43"/></operator> <operator pos:line="39" pos:column="44">!<pos:position pos:line="39" pos:column="45"/></operator><call><name pos:line="39" pos:column="45">strcasecmp<pos:position pos:line="39" pos:column="55"/></name><argument_list pos:line="39" pos:column="55">(<argument><expr><name pos:line="39" pos:column="56">ext<pos:position pos:line="39" pos:column="59"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="39" pos:column="60">".com"<pos:position pos:line="39" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call>
                <operator pos:line="40" pos:column="17">||<pos:position pos:line="40" pos:column="19"/></operator> <operator pos:line="40" pos:column="20">!<pos:position pos:line="40" pos:column="21"/></operator><call><name pos:line="40" pos:column="21">strcasecmp<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">ext<pos:position pos:line="40" pos:column="35"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="40" pos:column="36">".bat"<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call> <operator pos:line="40" pos:column="44">||<pos:position pos:line="40" pos:column="46"/></operator> <operator pos:line="40" pos:column="47">!<pos:position pos:line="40" pos:column="48"/></operator><call><name pos:line="40" pos:column="48">strcasecmp<pos:position pos:line="40" pos:column="58"/></name><argument_list pos:line="40" pos:column="58">(<argument><expr><name pos:line="40" pos:column="59">ext<pos:position pos:line="40" pos:column="62"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="40" pos:column="63">".cmd"<pos:position pos:line="40" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call><operator pos:line="40" pos:column="70">)<pos:position pos:line="40" pos:column="71"/></operator></expr>)<pos:position pos:line="40" pos:column="72"/></condition><then pos:line="40" pos:column="72"> <block pos:line="40" pos:column="73">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">interpreter<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <literal type="string" pos:line="41" pos:column="23">""<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><operator pos:line="43" pos:column="9">!<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">interpreter<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">&amp;&amp;<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="25">ext<pos:position pos:line="43" pos:column="28"/></name> 
          <operator pos:line="44" pos:column="11">&amp;&amp;<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><name><name pos:line="44" pos:column="15">d<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">script_interpreter_source<pos:position pos:line="44" pos:column="43"/></name></name> 
                     <operator pos:line="45" pos:column="22">==<pos:position pos:line="45" pos:column="24"/></operator> <name pos:line="45" pos:column="25">INTERPRETER_SOURCE_REGISTRY<pos:position pos:line="45" pos:column="52"/></name>
           <operator pos:line="46" pos:column="12">||<pos:position pos:line="46" pos:column="14"/></operator> <name><name pos:line="46" pos:column="15">d<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">script_interpreter_source<pos:position pos:line="46" pos:column="43"/></name></name> 
                     <operator pos:line="47" pos:column="22">==<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="25">INTERPRETER_SOURCE_REGISTRY_STRICT<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">)<pos:position pos:line="47" pos:column="60"/></operator></expr>)<pos:position pos:line="47" pos:column="61"/></condition><then pos:line="47" pos:column="61"> <block pos:line="47" pos:column="62">{
         <comment type="block" pos:line="48" pos:column="10">/* Check the registry */</comment>
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">int<pos:position pos:line="49" pos:column="12"/></name></type> <name pos:line="49" pos:column="13">strict<pos:position pos:line="49" pos:column="19"/></name> <init pos:line="49" pos:column="20">= <expr><operator pos:line="49" pos:column="22">(<pos:position pos:line="49" pos:column="23"/></operator><name><name pos:line="49" pos:column="23">d<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">script_interpreter_source<pos:position pos:line="49" pos:column="51"/></name></name> 
                      <operator pos:line="50" pos:column="23">==<pos:position pos:line="50" pos:column="25"/></operator> <name pos:line="50" pos:column="26">INTERPRETER_SOURCE_REGISTRY_STRICT<pos:position pos:line="50" pos:column="60"/></name><operator pos:line="50" pos:column="60">)<pos:position pos:line="50" pos:column="61"/></operator></expr></init></decl>;<pos:position pos:line="50" pos:column="62"/></decl_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">interpreter<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <call><name pos:line="51" pos:column="23">get_interpreter_from_win32_registry<pos:position pos:line="51" pos:column="58"/></name><argument_list pos:line="51" pos:column="58">(<argument><expr><name><name pos:line="51" pos:column="59">r<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">-&gt;<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="62">pool<pos:position pos:line="51" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="68">ext<pos:position pos:line="51" pos:column="71"/></name></expr></argument>,
                                                          <argument><expr><name pos:line="52" pos:column="59">strict<pos:position pos:line="52" pos:column="65"/></name></expr></argument>)<pos:position pos:line="52" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="67"/></expr_stmt>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">interpreter<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">&amp;&amp;<pos:position pos:line="53" pos:column="35"/></operator> <name><name pos:line="53" pos:column="28">e_info<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">-&gt;<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="36">cmd_type<pos:position pos:line="53" pos:column="44"/></name></name> <operator pos:line="53" pos:column="45">!=<pos:position pos:line="53" pos:column="47"/></operator> <name pos:line="53" pos:column="48">APR_SHELLCMD<pos:position pos:line="53" pos:column="60"/></name></expr>)<pos:position pos:line="53" pos:column="61"/></condition><then pos:line="53" pos:column="61"> <block pos:line="53" pos:column="62">{
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">e_info<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">cmd_type<pos:position pos:line="54" pos:column="29"/></name></name> <operator pos:line="54" pos:column="30">=<pos:position pos:line="54" pos:column="31"/></operator> <name pos:line="54" pos:column="32">APR_PROGRAM_PATH<pos:position pos:line="54" pos:column="48"/></name></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then>
        <else pos:line="56" pos:column="9">else <block pos:line="56" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">ap_log_error<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">APLOG_MARK<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">APLOG_INFO<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="50">0<pos:position pos:line="57" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="53">r<pos:position pos:line="57" pos:column="54"/></name><operator pos:line="57" pos:column="54">-&gt;<pos:position pos:line="57" pos:column="59"/></operator><name pos:line="57" pos:column="56">server<pos:position pos:line="57" pos:column="62"/></name></name></expr></argument>,
                 <argument><expr><ternary><condition><expr><name pos:line="58" pos:column="18">strict<pos:position pos:line="58" pos:column="24"/></name></expr> ?<pos:position pos:line="58" pos:column="26"/></condition><then pos:line="58" pos:column="26"> <expr><literal type="string" pos:line="58" pos:column="27">"No ExecCGI verb found for files of type '%s'."<pos:position pos:line="58" pos:column="74"/></literal></expr>
                        <pos:position pos:line="59" pos:column="25"/></then><else pos:line="59" pos:column="25">: <expr><literal type="string" pos:line="59" pos:column="27">"No ExecCGI or Open verb found for files of type '%s'."<pos:position pos:line="59" pos:column="82"/></literal></expr></else></ternary></expr></argument>, 
                 <argument><expr><name pos:line="60" pos:column="18">ext<pos:position pos:line="60" pos:column="21"/></name></expr></argument>)<pos:position pos:line="60" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></else></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">!<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">interpreter<pos:position pos:line="63" pos:column="21"/></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22"> <block pos:line="63" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">apr_status_t<pos:position pos:line="64" pos:column="21"/></name></type> <name pos:line="64" pos:column="22">rv<pos:position pos:line="64" pos:column="24"/></name></decl>;<pos:position pos:line="64" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">char<pos:position pos:line="65" pos:column="13"/></name></type> <name><name pos:line="65" pos:column="14">buffer<pos:position pos:line="65" pos:column="20"/></name><index pos:line="65" pos:column="20">[<expr><literal type="number" pos:line="65" pos:column="21">1024<pos:position pos:line="65" pos:column="25"/></literal></expr>]<pos:position pos:line="65" pos:column="26"/></index></name></decl>;<pos:position pos:line="65" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">apr_size_t<pos:position pos:line="66" pos:column="19"/></name></type> <name pos:line="66" pos:column="20">bytes<pos:position pos:line="66" pos:column="25"/></name> <init pos:line="66" pos:column="26">= <expr><sizeof pos:line="66" pos:column="28">sizeof<argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">buffer<pos:position pos:line="66" pos:column="41"/></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="66" pos:column="43"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">int<pos:position pos:line="67" pos:column="12"/></name></type> <name pos:line="67" pos:column="13">i<pos:position pos:line="67" pos:column="14"/></name></decl>;<pos:position pos:line="67" pos:column="15"/></decl_stmt>

        <comment type="block" pos:line="69" pos:column="9">/* Need to peek into the file figure out what it really is... 
         * ### aught to go back and build a cache for this one of these days.
         */</comment>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">(<pos:position pos:line="72" pos:column="14"/></operator><operator pos:line="72" pos:column="14">(<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">rv<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">=<pos:position pos:line="72" pos:column="19"/></operator> <call><name pos:line="72" pos:column="20">apr_file_open<pos:position pos:line="72" pos:column="33"/></name><argument_list pos:line="72" pos:column="33">(<argument><expr><operator pos:line="72" pos:column="34">&amp;<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="35">fh<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="39">*<pos:position pos:line="72" pos:column="40"/></operator><name pos:line="72" pos:column="40">cmd<pos:position pos:line="72" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="45">APR_READ<pos:position pos:line="72" pos:column="53"/></name> <operator pos:line="72" pos:column="54">|<pos:position pos:line="72" pos:column="55"/></operator> <name pos:line="72" pos:column="56">APR_BUFFERED<pos:position pos:line="72" pos:column="68"/></name></expr></argument>,
                                 <argument><expr><name pos:line="73" pos:column="34">APR_OS_DEFAULT<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="50">r<pos:position pos:line="73" pos:column="51"/></name><operator pos:line="73" pos:column="51">-&gt;<pos:position pos:line="73" pos:column="56"/></operator><name pos:line="73" pos:column="53">pool<pos:position pos:line="73" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="58"/></argument_list></call><operator pos:line="73" pos:column="58">)<pos:position pos:line="73" pos:column="59"/></operator> <operator pos:line="73" pos:column="60">!=<pos:position pos:line="73" pos:column="62"/></operator> <name pos:line="73" pos:column="63">APR_SUCCESS<pos:position pos:line="73" pos:column="74"/></name><operator pos:line="73" pos:column="74">)<pos:position pos:line="73" pos:column="75"/></operator> 
            <operator pos:line="74" pos:column="13">||<pos:position pos:line="74" pos:column="15"/></operator> <operator pos:line="74" pos:column="16">(<pos:position pos:line="74" pos:column="17"/></operator><operator pos:line="74" pos:column="17">(<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="18">rv<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">=<pos:position pos:line="74" pos:column="22"/></operator> <call><name pos:line="74" pos:column="23">apr_file_read<pos:position pos:line="74" pos:column="36"/></name><argument_list pos:line="74" pos:column="36">(<argument><expr><name pos:line="74" pos:column="37">fh<pos:position pos:line="74" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="41">buffer<pos:position pos:line="74" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="49">&amp;<pos:position pos:line="74" pos:column="54"/></operator><name pos:line="74" pos:column="50">bytes<pos:position pos:line="74" pos:column="55"/></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call><operator pos:line="74" pos:column="56">)<pos:position pos:line="74" pos:column="57"/></operator> <operator pos:line="74" pos:column="58">!=<pos:position pos:line="74" pos:column="60"/></operator> <name pos:line="74" pos:column="61">APR_SUCCESS<pos:position pos:line="74" pos:column="72"/></name><operator pos:line="74" pos:column="72">)<pos:position pos:line="74" pos:column="73"/></operator></expr>)<pos:position pos:line="74" pos:column="74"/></condition><then pos:line="74" pos:column="74"> <block pos:line="74" pos:column="75">{
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">ap_log_rerror<pos:position pos:line="75" pos:column="26"/></name><argument_list pos:line="75" pos:column="26">(<argument><expr><name pos:line="75" pos:column="27">APLOG_MARK<pos:position pos:line="75" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="39">APLOG_ERR<pos:position pos:line="75" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="50">rv<pos:position pos:line="75" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="54">r<pos:position pos:line="75" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="76" pos:column="27">"Failed to read cgi file %s for testing"<pos:position pos:line="76" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="76" pos:column="69">*<pos:position pos:line="76" pos:column="70"/></operator><name pos:line="76" pos:column="70">cmd<pos:position pos:line="76" pos:column="73"/></name></expr></argument>)<pos:position pos:line="76" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="75"/></expr_stmt>
            <return pos:line="77" pos:column="13">return <expr><name pos:line="77" pos:column="20">rv<pos:position pos:line="77" pos:column="22"/></name></expr>;<pos:position pos:line="77" pos:column="23"/></return>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">apr_file_close<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><name pos:line="79" pos:column="24">fh<pos:position pos:line="79" pos:column="26"/></name></expr></argument>)<pos:position pos:line="79" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="28"/></expr_stmt>

        <comment type="block" pos:line="81" pos:column="9">/* Script or executable, that is the question... */</comment>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><operator pos:line="82" pos:column="13">(<pos:position pos:line="82" pos:column="14"/></operator><name><name pos:line="82" pos:column="14">buffer<pos:position pos:line="82" pos:column="20"/></name><index pos:line="82" pos:column="20">[<expr><literal type="number" pos:line="82" pos:column="21">0<pos:position pos:line="82" pos:column="22"/></literal></expr>]<pos:position pos:line="82" pos:column="23"/></index></name> <operator pos:line="82" pos:column="24">==<pos:position pos:line="82" pos:column="26"/></operator> <literal type="char" pos:line="82" pos:column="27">'#'<pos:position pos:line="82" pos:column="30"/></literal><operator pos:line="82" pos:column="30">)<pos:position pos:line="82" pos:column="31"/></operator> <operator pos:line="82" pos:column="32">&amp;&amp;<pos:position pos:line="82" pos:column="42"/></operator> <operator pos:line="82" pos:column="35">(<pos:position pos:line="82" pos:column="36"/></operator><name><name pos:line="82" pos:column="36">buffer<pos:position pos:line="82" pos:column="42"/></name><index pos:line="82" pos:column="42">[<expr><literal type="number" pos:line="82" pos:column="43">1<pos:position pos:line="82" pos:column="44"/></literal></expr>]<pos:position pos:line="82" pos:column="45"/></index></name> <operator pos:line="82" pos:column="46">==<pos:position pos:line="82" pos:column="48"/></operator> <literal type="char" pos:line="82" pos:column="49">'!'<pos:position pos:line="82" pos:column="52"/></literal><operator pos:line="82" pos:column="52">)<pos:position pos:line="82" pos:column="53"/></operator></expr>)<pos:position pos:line="82" pos:column="54"/></condition><then pos:line="82" pos:column="54"> <block pos:line="82" pos:column="55">{
            <comment type="block" pos:line="83" pos:column="13">/* Assuming file is a script since it starts with a shebang */</comment>
            <for pos:line="84" pos:column="13">for <control pos:line="84" pos:column="17">(<init><expr><name pos:line="84" pos:column="18">i<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">=<pos:position pos:line="84" pos:column="21"/></operator> <literal type="number" pos:line="84" pos:column="22">2<pos:position pos:line="84" pos:column="23"/></literal></expr>;<pos:position pos:line="84" pos:column="24"/></init> <condition><expr><name pos:line="84" pos:column="25">i<pos:position pos:line="84" pos:column="26"/></name> <operator pos:line="84" pos:column="27">&lt;<pos:position pos:line="84" pos:column="31"/></operator> <sizeof pos:line="84" pos:column="29">sizeof<argument_list pos:line="84" pos:column="35">(<argument><expr><name pos:line="84" pos:column="36">buffer<pos:position pos:line="84" pos:column="42"/></name></expr></argument>)<pos:position pos:line="84" pos:column="43"/></argument_list></sizeof></expr>;<pos:position pos:line="84" pos:column="44"/></condition> <incr><expr><name pos:line="84" pos:column="45">i<pos:position pos:line="84" pos:column="46"/></name><operator pos:line="84" pos:column="46">++<pos:position pos:line="84" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="84" pos:column="49"/></control> <block pos:line="84" pos:column="50">{
                <if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><operator pos:line="85" pos:column="21">(<pos:position pos:line="85" pos:column="22"/></operator><name><name pos:line="85" pos:column="22">buffer<pos:position pos:line="85" pos:column="28"/></name><index pos:line="85" pos:column="28">[<expr><name pos:line="85" pos:column="29">i<pos:position pos:line="85" pos:column="30"/></name></expr>]<pos:position pos:line="85" pos:column="31"/></index></name> <operator pos:line="85" pos:column="32">==<pos:position pos:line="85" pos:column="34"/></operator> <literal type="char" pos:line="85" pos:column="35">'\r'<pos:position pos:line="85" pos:column="39"/></literal><operator pos:line="85" pos:column="39">)<pos:position pos:line="85" pos:column="40"/></operator> <operator pos:line="85" pos:column="41">||<pos:position pos:line="85" pos:column="43"/></operator> <operator pos:line="85" pos:column="44">(<pos:position pos:line="85" pos:column="45"/></operator><name><name pos:line="85" pos:column="45">buffer<pos:position pos:line="85" pos:column="51"/></name><index pos:line="85" pos:column="51">[<expr><name pos:line="85" pos:column="52">i<pos:position pos:line="85" pos:column="53"/></name></expr>]<pos:position pos:line="85" pos:column="54"/></index></name> <operator pos:line="85" pos:column="55">==<pos:position pos:line="85" pos:column="57"/></operator> <literal type="char" pos:line="85" pos:column="58">'\n'<pos:position pos:line="85" pos:column="62"/></literal><operator pos:line="85" pos:column="62">)<pos:position pos:line="85" pos:column="63"/></operator></expr>)<pos:position pos:line="85" pos:column="64"/></condition><then pos:line="85" pos:column="64"> <block pos:line="85" pos:column="65">{
                    <expr_stmt><expr><name><name pos:line="86" pos:column="21">buffer<pos:position pos:line="86" pos:column="27"/></name><index pos:line="86" pos:column="27">[<expr><name pos:line="86" pos:column="28">i<pos:position pos:line="86" pos:column="29"/></name></expr>]<pos:position pos:line="86" pos:column="30"/></index></name> <operator pos:line="86" pos:column="31">=<pos:position pos:line="86" pos:column="32"/></operator> <literal type="char" pos:line="86" pos:column="33">'\0'<pos:position pos:line="86" pos:column="37"/></literal></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt>
                    <break pos:line="87" pos:column="21">break;<pos:position pos:line="87" pos:column="27"/></break>
                }<pos:position pos:line="88" pos:column="18"/></block></then></if>
            }<pos:position pos:line="89" pos:column="14"/></block></for>
            <if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><name pos:line="90" pos:column="17">i<pos:position pos:line="90" pos:column="18"/></name> <operator pos:line="90" pos:column="19">&lt;<pos:position pos:line="90" pos:column="23"/></operator> <sizeof pos:line="90" pos:column="21">sizeof<argument_list pos:line="90" pos:column="27">(<argument><expr><name pos:line="90" pos:column="28">buffer<pos:position pos:line="90" pos:column="34"/></name></expr></argument>)<pos:position pos:line="90" pos:column="35"/></argument_list></sizeof></expr>)<pos:position pos:line="90" pos:column="36"/></condition><then pos:line="90" pos:column="36"> <block pos:line="90" pos:column="37">{
                <expr_stmt><expr><name pos:line="91" pos:column="17">interpreter<pos:position pos:line="91" pos:column="28"/></name> <operator pos:line="91" pos:column="29">=<pos:position pos:line="91" pos:column="30"/></operator> <name pos:line="91" pos:column="31">buffer<pos:position pos:line="91" pos:column="37"/></name> <operator pos:line="91" pos:column="38">+<pos:position pos:line="91" pos:column="39"/></operator> <literal type="number" pos:line="91" pos:column="40">2<pos:position pos:line="91" pos:column="41"/></literal></expr>;<pos:position pos:line="91" pos:column="42"/></expr_stmt>
                <while pos:line="92" pos:column="17">while <condition pos:line="92" pos:column="23">(<expr><call><name pos:line="92" pos:column="24">apr_isspace<pos:position pos:line="92" pos:column="35"/></name><argument_list pos:line="92" pos:column="35">(<argument><expr><operator pos:line="92" pos:column="36">*<pos:position pos:line="92" pos:column="37"/></operator><name pos:line="92" pos:column="37">interpreter<pos:position pos:line="92" pos:column="48"/></name></expr></argument>)<pos:position pos:line="92" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="50"/></condition> <block pos:line="92" pos:column="51">{
                    <expr_stmt><expr><operator pos:line="93" pos:column="21">++<pos:position pos:line="93" pos:column="23"/></operator><name pos:line="93" pos:column="23">interpreter<pos:position pos:line="93" pos:column="34"/></name></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="94" pos:column="18"/></block></while>
                <if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name><name pos:line="95" pos:column="21">e_info<pos:position pos:line="95" pos:column="27"/></name><operator pos:line="95" pos:column="27">-&gt;<pos:position pos:line="95" pos:column="32"/></operator><name pos:line="95" pos:column="29">cmd_type<pos:position pos:line="95" pos:column="37"/></name></name> <operator pos:line="95" pos:column="38">!=<pos:position pos:line="95" pos:column="40"/></operator> <name pos:line="95" pos:column="41">APR_SHELLCMD<pos:position pos:line="95" pos:column="53"/></name></expr>)<pos:position pos:line="95" pos:column="54"/></condition><then pos:line="95" pos:column="54"> <block pos:line="95" pos:column="55">{
                    <macro><name pos:line="96" pos:column="21">e_info<pos:position pos:line="96" pos:column="27"/></name></macro><expr_stmt><expr><operator pos:line="96" pos:column="27">-&gt;<pos:position pos:line="96" pos:column="32"/></operator><macro><name pos:line="96" pos:column="29">cmd_ty<pos:position pos:line="96" pos:column="35"/></name></macro></expr></expr_stmt></block></then></if></block></then></if></block></then></if></block></then></if></block></function></unit>

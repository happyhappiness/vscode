<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3739.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">handle_config<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">include_ctx_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ctx<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">ap_filter_t<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">f<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_bucket_brigade<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">bb<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_table_t<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">env<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name><name pos:line="5" pos:column="24">r<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">subprocess_env<pos:position pos:line="5" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">ctx<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">argc<pos:position pos:line="7" pos:column="19"/></name></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_rerror<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">APLOG_MARK<pos:position pos:line="8" pos:column="33"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><name><name pos:line="9" pos:column="24">ctx<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">flags<pos:position pos:line="9" pos:column="34"/></name></name> <operator pos:line="9" pos:column="35">&amp;<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="37">SSI_FLAG_PRINTING<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">)<pos:position pos:line="9" pos:column="55"/></operator></expr>
                          ?<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <expr><name pos:line="10" pos:column="29">APLOG_ERR<pos:position pos:line="10" pos:column="38"/></name></expr> <pos:position pos:line="10" pos:column="39"/></then><else pos:line="10" pos:column="39">: <expr><name pos:line="10" pos:column="41">APLOG_WARNING<pos:position pos:line="10" pos:column="54"/></name></expr></else></ternary></expr></argument>,
                      <argument><expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="26">r<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="29">"missing argument for config element in %s"<pos:position pos:line="11" pos:column="72"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="12" pos:column="23">r<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">filename<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name><name pos:line="15" pos:column="11">ctx<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">flags<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">&amp;<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="24">SSI_FLAG_PRINTING<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">)<pos:position pos:line="15" pos:column="42"/></operator></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">APR_SUCCESS<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">ctx<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">argc<pos:position pos:line="19" pos:column="19"/></name></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">ctx<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">f<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">bb<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">APR_SUCCESS<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><literal type="number" pos:line="24" pos:column="12">1<pos:position pos:line="24" pos:column="13"/></literal></expr>)<pos:position pos:line="24" pos:column="14"/></condition> <block pos:line="24" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">tag<pos:position pos:line="25" pos:column="18"/></name>     <init pos:line="25" pos:column="23">= <expr><name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name> <modifier pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></modifier></type><name pos:line="26" pos:column="15">tag_val<pos:position pos:line="26" pos:column="22"/></name> <init pos:line="26" pos:column="23">= <expr><name pos:line="26" pos:column="25">NULL<pos:position pos:line="26" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="30"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ap_ssi_get_tag_and_value<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">ctx<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="39">&amp;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="40">tag<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="45">&amp;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="46">tag_val<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="55">SSI_VALUE_RAW<pos:position pos:line="28" pos:column="68"/></name></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="70"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">tag<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">||<pos:position pos:line="29" pos:column="20"/></operator> <operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">tag_val<pos:position pos:line="29" pos:column="29"/></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block pos:line="29" pos:column="31">{
            <break pos:line="30" pos:column="13">break;<pos:position pos:line="30" pos:column="19"/></break>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">strcmp<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">tag<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="26">"errmsg"<pos:position pos:line="33" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <block pos:line="33" pos:column="37">{
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">ctx<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">error_str<pos:position pos:line="34" pos:column="27"/></name></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <call><name pos:line="34" pos:column="30">ap_ssi_parse_string<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><name pos:line="34" pos:column="50">ctx<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">tag_val<pos:position pos:line="34" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="64">NULL<pos:position pos:line="34" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="70">0<pos:position pos:line="34" pos:column="71"/></literal></expr></argument>,
                                                 <argument><expr><name pos:line="35" pos:column="50">SSI_EXPAND_DROP_NAME<pos:position pos:line="35" pos:column="70"/></name></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then>
        <elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><operator pos:line="37" pos:column="18">!<pos:position pos:line="37" pos:column="19"/></operator><call><name pos:line="37" pos:column="19">strcmp<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">tag<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="31">"echomsg"<pos:position pos:line="37" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="42"/></condition><then pos:line="37" pos:column="42"> <block pos:line="37" pos:column="43">{
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">ctx<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">intern<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">undefined_echo<pos:position pos:line="38" pos:column="40"/></name></name> <operator pos:line="38" pos:column="41">=<pos:position pos:line="38" pos:column="42"/></operator>
                <call><name pos:line="39" pos:column="17">ap_ssi_parse_string<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><name pos:line="39" pos:column="37">ctx<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">tag_val<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="51">NULL<pos:position pos:line="39" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="57">0<pos:position pos:line="39" pos:column="58"/></literal></expr></argument>,<argument><expr><name pos:line="39" pos:column="59">SSI_EXPAND_DROP_NAME<pos:position pos:line="39" pos:column="79"/></name></expr></argument>)<pos:position pos:line="39" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">ctx<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">intern<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">undefined_echo_len<pos:position pos:line="40" pos:column="44"/></name></name><operator pos:line="40" pos:column="44">=<pos:position pos:line="40" pos:column="45"/></operator><call><name pos:line="40" pos:column="45">strlen<pos:position pos:line="40" pos:column="51"/></name><argument_list pos:line="40" pos:column="51">(<argument><expr><name><name pos:line="40" pos:column="52">ctx<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">-&gt;<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="57">intern<pos:position pos:line="40" pos:column="63"/></name><operator pos:line="40" pos:column="63">-&gt;<pos:position pos:line="40" pos:column="68"/></operator><name pos:line="40" pos:column="65">undefined_echo<pos:position pos:line="40" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="81"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="42" pos:column="9">else <if pos:line="42" pos:column="14">if <condition pos:line="42" pos:column="17">(<expr><operator pos:line="42" pos:column="18">!<pos:position pos:line="42" pos:column="19"/></operator><call><name pos:line="42" pos:column="19">strcmp<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">tag<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="31">"timefmt"<pos:position pos:line="42" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42"> <block pos:line="42" pos:column="43">{
            <decl_stmt><decl><type><name pos:line="43" pos:column="13">apr_time_t<pos:position pos:line="43" pos:column="23"/></name></type> <name pos:line="43" pos:column="24">date<pos:position pos:line="43" pos:column="28"/></name> <init pos:line="43" pos:column="29">= <expr><name><name pos:line="43" pos:column="31">r<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">request_time<pos:position pos:line="43" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="43" pos:column="47"/></decl_stmt>

            <expr_stmt><expr><name><name pos:line="45" pos:column="13">ctx<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">time_str<pos:position pos:line="45" pos:column="26"/></name></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <call><name pos:line="45" pos:column="29">ap_ssi_parse_string<pos:position pos:line="45" pos:column="48"/></name><argument_list pos:line="45" pos:column="48">(<argument><expr><name pos:line="45" pos:column="49">ctx<pos:position pos:line="45" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="54">tag_val<pos:position pos:line="45" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="63">NULL<pos:position pos:line="45" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="69">0<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>,
                                                <argument><expr><name pos:line="46" pos:column="49">SSI_EXPAND_DROP_NAME<pos:position pos:line="46" pos:column="69"/></name></expr></argument>)<pos:position pos:line="46" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="71"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="48" pos:column="13">apr_table_setn<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">env<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="33">"DATE_LOCAL"<pos:position pos:line="48" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="47">ap_ht_time<pos:position pos:line="48" pos:column="57"/></name><argument_list pos:line="48" pos:column="57">(<argument><expr><name><name pos:line="48" pos:column="58">r<pos:position pos:line="48" pos:column="59"/></name><operator pos:line="48" pos:column="59">-&gt;<pos:position pos:line="48" pos:column="64"/></operator><name pos:line="48" pos:column="61">pool<pos:position pos:line="48" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="67">date<pos:position pos:line="48" pos:column="71"/></name></expr></argument>,
                           <argument><expr><name><name pos:line="49" pos:column="28">ctx<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">-&gt;<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="33">time_str<pos:position pos:line="49" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="43">0<pos:position pos:line="49" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">apr_table_setn<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">env<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="33">"DATE_GMT"<pos:position pos:line="50" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="45">ap_ht_time<pos:position pos:line="50" pos:column="55"/></name><argument_list pos:line="50" pos:column="55">(<argument><expr><name><name pos:line="50" pos:column="56">r<pos:position pos:line="50" pos:column="57"/></name><operator pos:line="50" pos:column="57">-&gt;<pos:position pos:line="50" pos:column="62"/></operator><name pos:line="50" pos:column="59">pool<pos:position pos:line="50" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="65">date<pos:position pos:line="50" pos:column="69"/></name></expr></argument>,
                           <argument><expr><name><name pos:line="51" pos:column="28">ctx<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">-&gt;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="33">time_str<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="43">1<pos:position pos:line="51" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">apr_table_setn<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">env<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="33">"LAST_MODIFIED"<pos:position pos:line="52" pos:column="48"/></literal></expr></argument>,
                           <argument><expr><call><name pos:line="53" pos:column="28">ap_ht_time<pos:position pos:line="53" pos:column="38"/></name><argument_list pos:line="53" pos:column="38">(<argument><expr><name><name pos:line="53" pos:column="39">r<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">-&gt;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="42">pool<pos:position pos:line="53" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="48">r<pos:position pos:line="53" pos:column="49"/></name><operator pos:line="53" pos:column="49">-&gt;<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="51">finfo<pos:position pos:line="53" pos:column="56"/></name><operator pos:line="53" pos:column="56">.<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="57">mtime<pos:position pos:line="53" pos:column="62"/></name></name></expr></argument>,
                           <argument><expr><name><name pos:line="54" pos:column="28">ctx<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">-&gt;<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="33">time_str<pos:position pos:line="54" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="43">0<pos:position pos:line="54" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="56" pos:column="9">else <if pos:line="56" pos:column="14">if <condition pos:line="56" pos:column="17">(<expr><operator pos:line="56" pos:column="18">!<pos:position pos:line="56" pos:column="19"/></operator><call><name pos:line="56" pos:column="19">strcmp<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name pos:line="56" pos:column="26">tag<pos:position pos:line="56" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="31">"sizefmt"<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="42"/></condition><then pos:line="56" pos:column="42"> <block pos:line="56" pos:column="43">{
            <decl_stmt><decl><type><name pos:line="57" pos:column="13">char<pos:position pos:line="57" pos:column="17"/></name> <modifier pos:line="57" pos:column="18">*<pos:position pos:line="57" pos:column="19"/></modifier></type><name pos:line="57" pos:column="19">parsed_string<pos:position pos:line="57" pos:column="32"/></name></decl>;<pos:position pos:line="57" pos:column="33"/></decl_stmt>

            <expr_stmt><expr><name pos:line="59" pos:column="13">parsed_string<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <call><name pos:line="59" pos:column="29">ap_ssi_parse_string<pos:position pos:line="59" pos:column="48"/></name><argument_list pos:line="59" pos:column="48">(<argument><expr><name pos:line="59" pos:column="49">ctx<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="54">tag_val<pos:position pos:line="59" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="63">NULL<pos:position pos:line="59" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="69">0<pos:position pos:line="59" pos:column="70"/></literal></expr></argument>,
                                                <argument><expr><name pos:line="60" pos:column="49">SSI_EXPAND_DROP_NAME<pos:position pos:line="60" pos:column="69"/></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="71"/></expr_stmt>
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><operator pos:line="61" pos:column="17">!<pos:position pos:line="61" pos:column="18"/></operator><call><name pos:line="61" pos:column="18">strcmp<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name pos:line="61" pos:column="25">parsed_string<pos:position pos:line="61" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="40">"bytes"<pos:position pos:line="61" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49"> <block pos:line="61" pos:column="50">{
                <expr_stmt><expr><name><name pos:line="62" pos:column="17">ctx<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">flags<pos:position pos:line="62" pos:column="27"/></name></name> <operator pos:line="62" pos:column="28">|=<pos:position pos:line="62" pos:column="30"/></operator> <name pos:line="62" pos:column="31">SSI_FLAG_SIZE_IN_BYTES<pos:position pos:line="62" pos:column="53"/></name></expr>;<pos:position pos:line="62" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="63" pos:column="14"/></block></then>
            <elseif pos:line="64" pos:column="13">else <if pos:line="64" pos:column="18">if <condition pos:line="64" pos:column="21">(<expr><operator pos:line="64" pos:column="22">!<pos:position pos:line="64" pos:column="23"/></operator><call><name pos:line="64" pos:column="23">strcmp<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">parsed_string<pos:position pos:line="64" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="45">"abbrev"<pos:position pos:line="64" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="55"/></condition><then pos:line="64" pos:column="55"> <block pos:line="64" pos:column="56">{
                <expr_stmt><expr><name><name pos:line="65" pos:column="17">ctx<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">flags<pos:position pos:line="65" pos:column="27"/></name></name> <operator pos:line="65" pos:column="28">&amp;=<pos:position pos:line="65" pos:column="34"/></operator> <name pos:line="65" pos:column="31">SSI_FLAG_SIZE_ABBREV<pos:position pos:line="65" pos:column="51"/></name></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="66" pos:column="14"/></block></then></if></elseif>
            <else pos:line="67" pos:column="13">else <block pos:line="67" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">ap_log_rerror<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">(<argument><expr><name pos:line="68" pos:column="31">APLOG_MARK<pos:position pos:line="68" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="43">APLOG_ERR<pos:position pos:line="68" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="54">0<pos:position pos:line="68" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="57">r<pos:position pos:line="68" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="60">"unknown value "<pos:position pos:line="68" pos:column="76"/></literal>
                              <literal type="string" pos:line="69" pos:column="31">"\"%s\" to parameter \"sizefmt\" of tag config "<pos:position pos:line="69" pos:column="79"/></literal>
                              <literal type="string" pos:line="70" pos:column="31">"in %s"<pos:position pos:line="70" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="40">parsed_string<pos:position pos:line="70" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="55">r<pos:position pos:line="70" pos:column="56"/></name><operator pos:line="70" pos:column="56">-&gt;<pos:position pos:line="70" pos:column="61"/></operator><name pos:line="70" pos:column="58">filename<pos:position pos:line="70" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name pos:line="71" pos:column="41">ctx<pos:position pos:line="71" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="46">f<pos:position pos:line="71" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="49">bb<pos:position pos:line="71" pos:column="51"/></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
                <break pos:line="72" pos:column="17">break;<pos:position pos:line="72" pos:column="23"/></break>
            }<pos:position pos:line="73" pos:column="14"/></block></else></if>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if></elseif>
        <else pos:line="75" pos:column="9">else <block pos:line="75" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">ap_log_rerror<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">(<argument><expr><name pos:line="76" pos:column="27">APLOG_MARK<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="39">APLOG_ERR<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="50">0<pos:position pos:line="76" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="53">r<pos:position pos:line="76" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="56">"unknown parameter "<pos:position pos:line="76" pos:column="76"/></literal>
                          <literal type="string" pos:line="77" pos:column="27">"\"%s\" to tag config in %s"<pos:position pos:line="77" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="57">tag<pos:position pos:line="77" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="62">r<pos:position pos:line="77" pos:column="63"/></name><operator pos:line="77" pos:column="63">-&gt;<pos:position pos:line="77" pos:column="68"/></operator><name pos:line="77" pos:column="65">filename<pos:position pos:line="77" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="78" pos:column="36"/></name><argument_list pos:line="78" pos:column="36">(<argument><expr><name pos:line="78" pos:column="37">ctx<pos:position pos:line="78" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="42">f<pos:position pos:line="78" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="45">bb<pos:position pos:line="78" pos:column="47"/></name></expr></argument>)<pos:position pos:line="78" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="49"/></expr_stmt>
            <break pos:line="79" pos:column="13">break;<pos:position pos:line="79" pos:column="19"/></break>
        }<pos:position pos:line="80" pos:column="10"/></block></else></if>
    }<pos:position pos:line="81" pos:column="6"/></block></while>

    <return pos:line="83" pos:column="5">return <expr><name pos:line="83" pos:column="12">APR_SUCCESS<pos:position pos:line="83" pos:column="23"/></name></expr>;<pos:position pos:line="83" pos:column="24"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

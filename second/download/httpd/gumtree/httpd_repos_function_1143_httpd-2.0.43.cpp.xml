<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1143_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cgid_maint<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">reason<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">data<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">apr_wait_t<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">status<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">pid_t<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">sd<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">data<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

    <switch pos:line="5" pos:column="5">switch <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">reason<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition> <block pos:line="5" pos:column="21">{
        <case pos:line="6" pos:column="9">case <expr><name pos:line="6" pos:column="14">APR_OC_REASON_DEATH<pos:position pos:line="6" pos:column="33"/></name></expr>:<pos:position pos:line="6" pos:column="34"/></case>
        <case pos:line="7" pos:column="9">case <expr><name pos:line="7" pos:column="14">APR_OC_REASON_RESTART<pos:position pos:line="7" pos:column="35"/></name></expr>:<pos:position pos:line="7" pos:column="36"/></case>
            <comment type="block" pos:line="8" pos:column="13">/* don't do anything; server is stopping or restarting */</comment>
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">apr_proc_other_child_unregister<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><name pos:line="9" pos:column="45">data<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>
            <break pos:line="10" pos:column="13">break;<pos:position pos:line="10" pos:column="19"/></break>
        <case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">APR_OC_REASON_LOST<pos:position pos:line="11" pos:column="32"/></name></expr>:<pos:position pos:line="11" pos:column="33"/></case>
            <comment type="block" pos:line="12" pos:column="13">/* it would be better to restart just the cgid child
             * process but for now we'll gracefully restart the entire 
             * server by sending AP_SIG_GRACEFUL to ourself, the httpd 
             * parent process
             */</comment>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">kill<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><call><name pos:line="17" pos:column="18">getpid<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">AP_SIG_GRACEFUL<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
            <break pos:line="18" pos:column="13">break;<pos:position pos:line="18" pos:column="19"/></break>
        <case pos:line="19" pos:column="9">case <expr><name pos:line="19" pos:column="14">APR_OC_REASON_UNREGISTER<pos:position pos:line="19" pos:column="38"/></name></expr>:<pos:position pos:line="19" pos:column="39"/></case>
            <comment type="block" pos:line="20" pos:column="13">/* we get here when pcgi is cleaned up; pcgi gets cleaned
             * up when pconf gets cleaned up
             */</comment>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">kill<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><operator pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">sd<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="23">SIGHUP<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt> <comment type="block" pos:line="23" pos:column="32">/* send signal to daemon telling it to die */</comment>
            <break pos:line="24" pos:column="13">break;<pos:position pos:line="24" pos:column="19"/></break>
    }<pos:position pos:line="25" pos:column="6"/></block></switch>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_850_httpd-2.4.7.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">ssl_cmd_SSLStaplingCache<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">cmd_parms<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">cmd<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">void<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">dcfg<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="3" pos:column="37">const<pos:position pos:line="3" pos:column="42"/></specifier> <name pos:line="3" pos:column="43">char<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">arg<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLModConfigRec<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">mc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">myModConfig<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name><name pos:line="5" pos:column="39">cmd<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">server<pos:position pos:line="5" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">err<pos:position pos:line="6" pos:column="20"/></name></decl>, <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="23">sep<pos:position pos:line="6" pos:column="26"/></name></decl>, <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="29">name<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">err<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">ap_check_cmd_context<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">cmd<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">GLOBAL_ONLY<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call><operator pos:line="8" pos:column="54">)<pos:position pos:line="8" pos:column="55"/></operator></expr>)<pos:position pos:line="8" pos:column="56"/></condition><then pos:line="8" pos:column="56"> <block pos:line="8" pos:column="57">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">err<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* Argument is of form 'name:args' or just 'name'. */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">sep<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">ap_strchr_c<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">arg<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="28">':'<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">sep<pos:position pos:line="14" pos:column="12"/></name></expr>)<pos:position pos:line="14" pos:column="13"/></condition><then pos:line="14" pos:column="13"> <block pos:line="14" pos:column="14">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">name<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">apr_pstrmemdup<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name><name pos:line="15" pos:column="31">cmd<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-&gt;<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="36">pool<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">arg<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">sep<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">-<pos:position pos:line="15" pos:column="52"/></operator> <name pos:line="15" pos:column="53">arg<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">sep<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">++<pos:position pos:line="16" pos:column="14"/></operator></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">name<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">arg<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="22" pos:column="5">/* Find the provider of given name. */</comment>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">mc<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">stapling_cache<pos:position pos:line="23" pos:column="23"/></name></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <call><name pos:line="23" pos:column="26">ap_lookup_provider<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">AP_SOCACHE_PROVIDER_GROUP<pos:position pos:line="23" pos:column="70"/></name></expr></argument>,
                                            <argument><expr><name pos:line="24" pos:column="45">name<pos:position pos:line="24" pos:column="49"/></name></expr></argument>,
                                            <argument><expr><name pos:line="25" pos:column="45">AP_SOCACHE_PROVIDER_VERSION<pos:position pos:line="25" pos:column="72"/></name></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="74"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">mc<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">stapling_cache<pos:position pos:line="26" pos:column="27"/></name></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28"> <block pos:line="26" pos:column="29">{
        <comment type="block" pos:line="27" pos:column="9">/* Cache found; create it, passing anything beyond the colon. */</comment>
        <expr_stmt><expr><name pos:line="28" pos:column="9">err<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call><name><name pos:line="28" pos:column="15">mc<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">stapling_cache<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">create<pos:position pos:line="28" pos:column="41"/></name></name><argument_list pos:line="28" pos:column="41">(<argument><expr><operator pos:line="28" pos:column="42">&amp;<pos:position pos:line="28" pos:column="47"/></operator><name><name pos:line="28" pos:column="43">mc<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">stapling_cache_context<pos:position pos:line="28" pos:column="69"/></name></name></expr></argument>,
                                         <argument><expr><name pos:line="29" pos:column="42">sep<pos:position pos:line="29" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="47">cmd<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">-&gt;<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="52">temp_pool<pos:position pos:line="29" pos:column="61"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="30" pos:column="42">cmd<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">-&gt;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="47">pool<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <else pos:line="32" pos:column="5">else <block pos:line="32" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">apr_array_header_t<pos:position pos:line="33" pos:column="27"/></name> <modifier pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></modifier></type><name pos:line="33" pos:column="29">name_list<pos:position pos:line="33" pos:column="38"/></name></decl>;<pos:position pos:line="33" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">const<pos:position pos:line="34" pos:column="14"/></specifier> <name pos:line="34" pos:column="15">char<pos:position pos:line="34" pos:column="19"/></name> <modifier pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></modifier></type><name pos:line="34" pos:column="21">all_names<pos:position pos:line="34" pos:column="30"/></name></decl>;<pos:position pos:line="34" pos:column="31"/></decl_stmt>

        <comment type="block" pos:line="36" pos:column="9">/* Build a comma-separated list of all registered provider
         * names: */</comment>
        <expr_stmt><expr><name pos:line="38" pos:column="9">name_list<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">ap_list_provider_names<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name><name pos:line="38" pos:column="44">cmd<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">-&gt;<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="49">pool<pos:position pos:line="38" pos:column="53"/></name></name></expr></argument>,
                                           <argument><expr><name pos:line="39" pos:column="44">AP_SOCACHE_PROVIDER_GROUP<pos:position pos:line="39" pos:column="69"/></name></expr></argument>,
                                           <argument><expr><name pos:line="40" pos:column="44">AP_SOCACHE_PROVIDER_VERSION<pos:position pos:line="40" pos:column="71"/></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">all_names<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <call><name pos:line="41" pos:column="21">apr_array_pstrcat<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">(<argument><expr><name><name pos:line="41" pos:column="39">cmd<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">pool<pos:position pos:line="41" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">name_list<pos:position pos:line="41" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="61">','<pos:position pos:line="41" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt>

        <expr_stmt><expr><name pos:line="43" pos:column="9">err<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <call><name pos:line="43" pos:column="15">apr_psprintf<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name><name pos:line="43" pos:column="28">cmd<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">-&gt;<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="33">pool<pos:position pos:line="43" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="39">"'%s' stapling cache not supported "<pos:position pos:line="43" pos:column="75"/></literal>
                           <literal type="string" pos:line="44" pos:column="28">"(known names: %s) Maybe you need to load the "<pos:position pos:line="44" pos:column="75"/></literal>
                           <literal type="string" pos:line="45" pos:column="28">"appropriate socache module (mod_socache_%s?)"<pos:position pos:line="45" pos:column="74"/></literal></expr></argument>,
                           <argument><expr><name pos:line="46" pos:column="28">name<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">all_names<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">name<pos:position pos:line="46" pos:column="49"/></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">err<pos:position pos:line="49" pos:column="12"/></name></expr>)<pos:position pos:line="49" pos:column="13"/></condition><then pos:line="49" pos:column="13"> <block pos:line="49" pos:column="14">{
        <return pos:line="50" pos:column="9">return <expr><call><name pos:line="50" pos:column="16">apr_psprintf<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name><name pos:line="50" pos:column="29">cmd<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">-&gt;<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="34">pool<pos:position pos:line="50" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="40">"SSLStaplingCache: %s"<pos:position pos:line="50" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="64">err<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">NULL<pos:position pos:line="53" pos:column="16"/></name></expr>;<pos:position pos:line="53" pos:column="17"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

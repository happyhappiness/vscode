<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2161_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">reflector_handler<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type> <name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_bucket_brigade<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">bbin<pos:position pos:line="3" pos:column="29"/></name></decl>, <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="32">bbout<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">reflector_cfg<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">conf<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">strcmp<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name><name pos:line="7" pos:column="16">r<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">handler<pos:position pos:line="7" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="28">"reflector"<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41"> <block pos:line="7" pos:column="42">{
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">DECLINED<pos:position pos:line="8" pos:column="24"/></name></expr>;<pos:position pos:line="8" pos:column="25"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">conf<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">reflector_cfg<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></operator><operator pos:line="11" pos:column="28">)<pos:position pos:line="11" pos:column="29"/></operator> <call><name pos:line="11" pos:column="30">ap_get_module_config<pos:position pos:line="11" pos:column="50"/></name><argument_list pos:line="11" pos:column="50">(<argument><expr><name><name pos:line="11" pos:column="51">r<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">-&gt;<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="54">per_dir_config<pos:position pos:line="11" pos:column="68"/></name></name></expr></argument>,
                                                  <argument><expr><operator pos:line="12" pos:column="51">&amp;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="52">reflector_module<pos:position pos:line="12" pos:column="68"/></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ap_allow_methods<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">r<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="28">"POST"<pos:position pos:line="14" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">"OPTIONS"<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">NULL<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">r<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">method_number<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">==<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">M_OPTIONS<pos:position pos:line="16" pos:column="38"/></name></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39"> <block pos:line="16" pos:column="40">{
        <return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">ap_send_http_options<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">r<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then>

    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name><name pos:line="20" pos:column="14">r<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">method_number<pos:position pos:line="20" pos:column="30"/></name></name> <operator pos:line="20" pos:column="31">==<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">M_POST<pos:position pos:line="20" pos:column="40"/></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">const<pos:position pos:line="21" pos:column="14"/></specifier> <name pos:line="21" pos:column="15">char<pos:position pos:line="21" pos:column="19"/></name> <modifier pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></modifier></type><name pos:line="21" pos:column="21">content_length<pos:position pos:line="21" pos:column="35"/></name></decl>, <modifier pos:line="21" pos:column="37">*<pos:position pos:line="21" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="21" pos:column="38">content_type<pos:position pos:line="21" pos:column="50"/></name></decl>;<pos:position pos:line="21" pos:column="51"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">seen_eos<pos:position pos:line="22" pos:column="21"/></name></decl>;<pos:position pos:line="22" pos:column="22"/></decl_stmt>

        <comment type="block" pos:line="24" pos:column="9">/*
         * Sometimes we'll get in a state where the input handling has
         * detected an error where we want to drop the connection, so if
         * that's the case, don't read the data as that is what we're trying
         * to avoid.
         *
         * This function is also a no-op on a subrequest.
         */</comment>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">r<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">main<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">||<pos:position pos:line="32" pos:column="23"/></operator> <name><name pos:line="32" pos:column="24">r<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">connection<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">keepalive<pos:position pos:line="32" pos:column="48"/></name></name> <operator pos:line="32" pos:column="49">==<pos:position pos:line="32" pos:column="51"/></operator> <name pos:line="32" pos:column="52">AP_CONN_CLOSE<pos:position pos:line="32" pos:column="65"/></name> <operator pos:line="32" pos:column="66">||<pos:position pos:line="32" pos:column="68"/></operator>
            <call><name pos:line="33" pos:column="13">ap_status_drops_connection<pos:position pos:line="33" pos:column="39"/></name><argument_list pos:line="33" pos:column="39">(<argument><expr><name><name pos:line="33" pos:column="40">r<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">status<pos:position pos:line="33" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51"> <block pos:line="33" pos:column="52">{
            <return pos:line="34" pos:column="13">return <expr><name pos:line="34" pos:column="20">OK<pos:position pos:line="34" pos:column="22"/></name></expr>;<pos:position pos:line="34" pos:column="23"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="37" pos:column="9">/* copy headers from in to out if configured */</comment>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">apr_table_do<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">header_do<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="33">r<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="36">conf<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">-&gt;<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="42">headers<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">NULL<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>

        <comment type="block" pos:line="40" pos:column="9">/* last modified defaults to now, unless otherwise set on the way in */</comment>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><call><name pos:line="41" pos:column="14">apr_table_get<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name><name pos:line="41" pos:column="28">r<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">headers_out<pos:position pos:line="41" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="44">"Last-Modified"<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="61"/></condition><then pos:line="41" pos:column="61"> <block pos:line="41" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ap_update_mtime<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">r<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="32">apr_time_now<pos:position pos:line="42" pos:column="44"/></name><argument_list pos:line="42" pos:column="44">()<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_set_last_modified<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><name pos:line="43" pos:column="34">r<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">ap_set_accept_ranges<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">r<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>

        <comment type="block" pos:line="47" pos:column="9">/* reflect the content length, if present */</comment>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">content_length<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <call><name pos:line="48" pos:column="31">apr_table_get<pos:position pos:line="48" pos:column="44"/></name><argument_list pos:line="48" pos:column="44">(<argument><expr><name><name pos:line="48" pos:column="45">r<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">-&gt;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="48">headers_in<pos:position pos:line="48" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="60">"Content-Length"<pos:position pos:line="48" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="77"/></argument_list></call><operator pos:line="48" pos:column="77">)<pos:position pos:line="48" pos:column="78"/></operator></expr>)<pos:position pos:line="48" pos:column="79"/></condition><then pos:line="48" pos:column="79"> <block pos:line="48" pos:column="80">{
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">apr_off_t<pos:position pos:line="49" pos:column="22"/></name></type> <name pos:line="49" pos:column="23">offset<pos:position pos:line="49" pos:column="29"/></name></decl>;<pos:position pos:line="49" pos:column="30"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="51" pos:column="13">apr_strtoff<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><operator pos:line="51" pos:column="25">&amp;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="26">offset<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="34">content_length<pos:position pos:line="51" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="50">NULL<pos:position pos:line="51" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="56">10<pos:position pos:line="51" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">ap_set_content_length<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">r<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="38">offset<pos:position pos:line="52" pos:column="44"/></name></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>

        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="56" pos:column="9">/* reflect the content type, if present */</comment>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">content_type<pos:position pos:line="57" pos:column="26"/></name> <operator pos:line="57" pos:column="27">=<pos:position pos:line="57" pos:column="28"/></operator> <call><name pos:line="57" pos:column="29">apr_table_get<pos:position pos:line="57" pos:column="42"/></name><argument_list pos:line="57" pos:column="42">(<argument><expr><name><name pos:line="57" pos:column="43">r<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">-&gt;<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="46">headers_in<pos:position pos:line="57" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="58">"Content-Type"<pos:position pos:line="57" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="73"/></argument_list></call><operator pos:line="57" pos:column="73">)<pos:position pos:line="57" pos:column="74"/></operator></expr>)<pos:position pos:line="57" pos:column="75"/></condition><then pos:line="57" pos:column="75"> <block pos:line="57" pos:column="76">{

            <expr_stmt><expr><call><name pos:line="59" pos:column="13">ap_set_content_type<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">r<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">content_type<pos:position pos:line="59" pos:column="48"/></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>

        }<pos:position pos:line="61" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="63" pos:column="9">bbin<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <call><name pos:line="63" pos:column="16">apr_brigade_create<pos:position pos:line="63" pos:column="34"/></name><argument_list pos:line="63" pos:column="34">(<argument><expr><name><name pos:line="63" pos:column="35">r<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">-&gt;<pos:position pos:line="63" pos:column="41"/></operator><name pos:line="63" pos:column="38">pool<pos:position pos:line="63" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="44">r<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">-&gt;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="47">connection<pos:position pos:line="63" pos:column="57"/></name><operator pos:line="63" pos:column="57">-&gt;<pos:position pos:line="63" pos:column="62"/></operator><name pos:line="63" pos:column="59">bucket_alloc<pos:position pos:line="63" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">bbout<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <call><name pos:line="64" pos:column="17">apr_brigade_create<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name><name pos:line="64" pos:column="36">r<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">-&gt;<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="39">pool<pos:position pos:line="64" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="45">r<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">-&gt;<pos:position pos:line="64" pos:column="51"/></operator><name pos:line="64" pos:column="48">connection<pos:position pos:line="64" pos:column="58"/></name><operator pos:line="64" pos:column="58">-&gt;<pos:position pos:line="64" pos:column="63"/></operator><name pos:line="64" pos:column="60">bucket_alloc<pos:position pos:line="64" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="74"/></expr_stmt>

        <expr_stmt><expr><name pos:line="66" pos:column="9">seen_eos<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <literal type="number" pos:line="66" pos:column="20">0<pos:position pos:line="66" pos:column="21"/></literal></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>
        <do pos:line="67" pos:column="9">do <block pos:line="67" pos:column="12">{
            <decl_stmt><decl><type><name pos:line="68" pos:column="13">apr_bucket<pos:position pos:line="68" pos:column="23"/></name> <modifier pos:line="68" pos:column="24">*<pos:position pos:line="68" pos:column="25"/></modifier></type><name pos:line="68" pos:column="25">bucket<pos:position pos:line="68" pos:column="31"/></name></decl>;<pos:position pos:line="68" pos:column="32"/></decl_stmt>

            <expr_stmt><expr><name pos:line="70" pos:column="13">status<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">=<pos:position pos:line="70" pos:column="21"/></operator> <call><name pos:line="70" pos:column="22">ap_get_brigade<pos:position pos:line="70" pos:column="36"/></name><argument_list pos:line="70" pos:column="36">(<argument><expr><name><name pos:line="70" pos:column="37">r<pos:position pos:line="70" pos:column="38"/></name><operator pos:line="70" pos:column="38">-&gt;<pos:position pos:line="70" pos:column="43"/></operator><name pos:line="70" pos:column="40">input_filters<pos:position pos:line="70" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="55">bbin<pos:position pos:line="70" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="61">AP_MODE_READBYTES<pos:position pos:line="70" pos:column="78"/></name></expr></argument>,
                                    <argument><expr><name pos:line="71" pos:column="37">APR_BLOCK_READ<pos:position pos:line="71" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="53">HUGE_STRING_LEN<pos:position pos:line="71" pos:column="68"/></name></expr></argument>)<pos:position pos:line="71" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="70"/></expr_stmt>

            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><name pos:line="73" pos:column="17">status<pos:position pos:line="73" pos:column="23"/></name> <operator pos:line="73" pos:column="24">!=<pos:position pos:line="73" pos:column="26"/></operator> <name pos:line="73" pos:column="27">APR_SUCCESS<pos:position pos:line="73" pos:column="38"/></name></expr>)<pos:position pos:line="73" pos:column="39"/></condition><then pos:line="73" pos:column="39"> <block pos:line="73" pos:column="40">{
                <if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">status<pos:position pos:line="74" pos:column="27"/></name> <operator pos:line="74" pos:column="28">==<pos:position pos:line="74" pos:column="30"/></operator> <name pos:line="74" pos:column="31">AP_FILTER_ERROR<pos:position pos:line="74" pos:column="46"/></name></expr>)<pos:position pos:line="74" pos:column="47"/></condition><then pos:line="74" pos:column="47"> <block pos:line="74" pos:column="48">{
                    <expr_stmt><expr><call><name pos:line="75" pos:column="21">apr_brigade_destroy<pos:position pos:line="75" pos:column="40"/></name><argument_list pos:line="75" pos:column="40">(<argument><expr><name pos:line="75" pos:column="41">bbin<pos:position pos:line="75" pos:column="45"/></name></expr></argument>)<pos:position pos:line="75" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>
                    <return pos:line="76" pos:column="21">return <expr><name pos:line="76" pos:column="28">status<pos:position pos:line="76" pos:column="34"/></name></expr>;<pos:position pos:line="76" pos:column="35"/></return>
                }<pos:position pos:line="77" pos:column="18"/></block></then>
                <else pos:line="78" pos:column="17">else <block pos:line="78" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="79" pos:column="21">apr_brigade_destroy<pos:position pos:line="79" pos:column="40"/></name><argument_list pos:line="79" pos:column="40">(<argument><expr><name pos:line="79" pos:column="41">bbin<pos:position pos:line="79" pos:column="45"/></name></expr></argument>)<pos:position pos:line="79" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="47"/></expr_stmt>
                    <return pos:line="80" pos:column="21">return <expr><name pos:line="80" pos:column="28">HTTP_BAD_REQUEST<pos:position pos:line="80" pos:column="44"/></name></expr>;<pos:position pos:line="80" pos:column="45"/></return>
                }<pos:position pos:line="81" pos:column="18"/></block></else></if>
            }<pos:position pos:line="82" pos:column="14"/></block></then></if>

            <for pos:line="84" pos:column="13">for <control pos:line="84" pos:column="17">(<init><expr><name pos:line="84" pos:column="18">bucket<pos:position pos:line="84" pos:column="24"/></name> <operator pos:line="84" pos:column="25">=<pos:position pos:line="84" pos:column="26"/></operator> <call><name pos:line="84" pos:column="27">APR_BRIGADE_FIRST<pos:position pos:line="84" pos:column="44"/></name><argument_list pos:line="84" pos:column="44">(<argument><expr><name pos:line="84" pos:column="45">bbin<pos:position pos:line="84" pos:column="49"/></name></expr></argument>)<pos:position pos:line="84" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="51"/></init>
                 <condition><expr><name pos:line="85" pos:column="18">bucket<pos:position pos:line="85" pos:column="24"/></name> <operator pos:line="85" pos:column="25">!=<pos:position pos:line="85" pos:column="27"/></operator> <call><name pos:line="85" pos:column="28">APR_BRIGADE_SENTINEL<pos:position pos:line="85" pos:column="48"/></name><argument_list pos:line="85" pos:column="48">(<argument><expr><name pos:line="85" pos:column="49">bbin<pos:position pos:line="85" pos:column="53"/></name></expr></argument>)<pos:position pos:line="85" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="55"/></condition>
                 <incr><expr><name pos:line="86" pos:column="18">bucket<pos:position pos:line="86" pos:column="24"/></name> <operator pos:line="86" pos:column="25">=<pos:position pos:line="86" pos:column="26"/></operator> <call><name pos:line="86" pos:column="27">APR_BUCKET_NEXT<pos:position pos:line="86" pos:column="42"/></name><argument_list pos:line="86" pos:column="42">(<argument><expr><name pos:line="86" pos:column="43">bucket<pos:position pos:line="86" pos:column="49"/></name></expr></argument>)<pos:position pos:line="86" pos:column="50"/></argument_list></call></expr></incr>)<pos:position pos:line="86" pos:column="51"/></control> <block pos:line="86" pos:column="52">{
                <decl_stmt><decl><type><specifier pos:line="87" pos:column="17">const<pos:position pos:line="87" pos:column="22"/></specifier> <name pos:line="87" pos:column="23">char<pos:position pos:line="87" pos:column="27"/></name> <modifier pos:line="87" pos:column="28">*<pos:position pos:line="87" pos:column="29"/></modifier></type><name pos:line="87" pos:column="29">data<pos:position pos:line="87" pos:column="33"/></name></decl>;<pos:position pos:line="87" pos:column="34"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="88" pos:column="17">apr_size_t<pos:position pos:line="88" pos:column="27"/></name></type> <name pos:line="88" pos:column="28">len<pos:position pos:line="88" pos:column="31"/></name></decl>;<pos:position pos:line="88" pos:column="32"/></decl_stmt>

                <if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><call><name pos:line="90" pos:column="21">APR_BUCKET_IS_EOS<pos:position pos:line="90" pos:column="38"/></name><argument_list pos:line="90" pos:column="38">(<argument><expr><name pos:line="90" pos:column="39">bucket<pos:position pos:line="90" pos:column="45"/></name></expr></argument>)<pos:position pos:line="90" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="47"/></condition><then pos:line="90" pos:column="47"> <block pos:line="90" pos:column="48">{
                    <expr_stmt><expr><name pos:line="91" pos:column="21">seen_eos<pos:position pos:line="91" pos:column="29"/></name> <operator pos:line="91" pos:column="30">=<pos:position pos:line="91" pos:column="31"/></operator> <literal type="number" pos:line="91" pos:column="32">1<pos:position pos:line="91" pos:column="33"/></literal></expr>;<pos:position pos:line="91" pos:column="34"/></expr_stmt>
                    <break pos:line="92" pos:column="21">break;<pos:position pos:line="92" pos:column="27"/></break>
                }<pos:position pos:line="93" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="95" pos:column="17">/* These are metadata buckets. */</comment>
                <if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><name><name pos:line="96" pos:column="21">bucket<pos:position pos:line="96" pos:column="27"/></name><operator pos:line="96" pos:column="27">-&gt;<pos:position pos:line="96" pos:column="32"/></operator><name pos:line="96" pos:column="29">length<pos:position pos:line="96" pos:column="35"/></name></name> <operator pos:line="96" pos:column="36">==<pos:position pos:line="96" pos:column="38"/></operator> <literal type="number" pos:line="96" pos:column="39">0<pos:position pos:line="96" pos:column="40"/></literal></expr>)<pos:position pos:line="96" pos:column="41"/></condition><then pos:line="96" pos:column="41"> <block pos:line="96" pos:column="42">{
                    <continue pos:line="97" pos:column="21">continue;<pos:position pos:line="97" pos:column="30"/></continue>
                }<pos:position pos:line="98" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="100" pos:column="17">/*
                 * We MUST read because in case we have an unknown-length
                 * bucket or one that morphs, we want to exhaust it.
                 */</comment>
                <expr_stmt><expr><name pos:line="104" pos:column="17">status<pos:position pos:line="104" pos:column="23"/></name> <operator pos:line="104" pos:column="24">=<pos:position pos:line="104" pos:column="25"/></operator> <call><name pos:line="104" pos:column="26">apr_bucket_read<pos:position pos:line="104" pos:column="41"/></name><argument_list pos:line="104" pos:column="41">(<argument><expr><name pos:line="104" pos:column="42">bucket<pos:position pos:line="104" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="50">&amp;<pos:position pos:line="104" pos:column="55"/></operator><name pos:line="104" pos:column="51">data<pos:position pos:line="104" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="57">&amp;<pos:position pos:line="104" pos:column="62"/></operator><name pos:line="104" pos:column="58">len<pos:position pos:line="104" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="63">APR_BLOCK_READ<pos:position pos:line="104" pos:column="77"/></name></expr></argument>)<pos:position pos:line="104" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="79"/></expr_stmt>
                <if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><name pos:line="105" pos:column="21">status<pos:position pos:line="105" pos:column="27"/></name> <operator pos:line="105" pos:column="28">!=<pos:position pos:line="105" pos:column="30"/></operator> <name pos:line="105" pos:column="31">APR_SUCCESS<pos:position pos:line="105" pos:column="42"/></name></expr>)<pos:position pos:line="105" pos:column="43"/></condition><then pos:line="105" pos:column="43"> <block pos:line="105" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="106" pos:column="21">apr_brigade_destroy<pos:position pos:line="106" pos:column="40"/></name><argument_list pos:line="106" pos:column="40">(<argument><expr><name pos:line="106" pos:column="41">bbin<pos:position pos:line="106" pos:column="45"/></name></expr></argument>)<pos:position pos:line="106" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="47"/></expr_stmt>
                    <return pos:line="107" pos:column="21">return <expr><name pos:line="107" pos:column="28">HTTP_BAD_REQUEST<pos:position pos:line="107" pos:column="44"/></name></expr>;<pos:position pos:line="107" pos:column="45"/></return>
                }<pos:position pos:line="108" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="110" pos:column="17">apr_brigade_write<pos:position pos:line="110" pos:column="34"/></name><argument_list pos:line="110" pos:column="34">(<argument><expr><name pos:line="110" pos:column="35">bbout<pos:position pos:line="110" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="42">NULL<pos:position pos:line="110" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="48">NULL<pos:position pos:line="110" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="54">data<pos:position pos:line="110" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="60">len<pos:position pos:line="110" pos:column="63"/></name></expr></argument>)<pos:position pos:line="110" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="65"/></expr_stmt>

                <expr_stmt><expr><name pos:line="112" pos:column="17">status<pos:position pos:line="112" pos:column="23"/></name> <operator pos:line="112" pos:column="24">=<pos:position pos:line="112" pos:column="25"/></operator> <call><name pos:line="112" pos:column="26">ap_pass_brigade<pos:position pos:line="112" pos:column="41"/></name><argument_list pos:line="112" pos:column="41">(<argument><expr><name><name pos:line="112" pos:column="42">r<pos:position pos:line="112" pos:column="43"/></name><operator pos:line="112" pos:column="43">-&gt;<pos:position pos:line="112" pos:column="48"/></operator><name pos:line="112" pos:column="45">output_filters<pos:position pos:line="112" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="61">bbout<pos:position pos:line="112" pos:column="66"/></name></expr></argument>)<pos:position pos:line="112" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="68"/></expr_stmt>
                <if pos:line="113" pos:column="17">if <condition pos:line="113" pos:column="20">(<expr><name pos:line="113" pos:column="21">status<pos:position pos:line="113" pos:column="27"/></name> <operator pos:line="113" pos:column="28">!=<pos:position pos:line="113" pos:column="30"/></operator> <name pos:line="113" pos:column="31">APR_SUCCESS<pos:position pos:line="113" pos:column="42"/></name></expr>)<pos:position pos:line="113" pos:column="43"/></condition><then pos:line="113" pos:column="43"> <block pos:line="113" pos:column="44">{
                    <comment type="block" pos:line="114" pos:column="21">/* no way to know what type of error occurred */</comment>
                    <expr_stmt><expr><call><name pos:line="115" pos:column="21">ap_log_rerror<pos:position pos:line="115" pos:column="34"/></name><argument_list pos:line="115" pos:column="34">(<argument><expr><name pos:line="115" pos:column="35">APLOG_MARK<pos:position pos:line="115" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="47">APLOG_DEBUG<pos:position pos:line="115" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="60">status<pos:position pos:line="115" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="68">r<pos:position pos:line="115" pos:column="69"/></name></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="71">APLOGNO<pos:position pos:line="115" pos:column="78"/></name><argument_list pos:line="115" pos:column="78">(<argument><expr><literal type="number" pos:line="115" pos:column="79">01410<pos:position pos:line="115" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="85"/></argument_list></call>
                             <literal type="string" pos:line="116" pos:column="30">"reflector_handler: ap_pass_brigade returned %i"<pos:position pos:line="116" pos:column="78"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="117" pos:column="35">status<pos:position pos:line="117" pos:column="41"/></name></expr></argument>)<pos:position pos:line="117" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="43"/></expr_stmt>
                    <return pos:line="118" pos:column="21">return <expr><name pos:line="118" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="118" pos:column="54"/></name></expr>;<pos:position pos:line="118" pos:column="55"/></return>
                }<pos:position pos:line="119" pos:column="18"/></block></then></if>

            }<pos:position pos:line="121" pos:column="14"/></block></for>

            <expr_stmt><expr><call><name pos:line="123" pos:column="13">apr_brigade_cleanup<pos:position pos:line="123" pos:column="32"/></name><argument_list pos:line="123" pos:column="32">(<argument><expr><name pos:line="123" pos:column="33">bbin<pos:position pos:line="123" pos:column="37"/></name></expr></argument>)<pos:position pos:line="123" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="39"/></expr_stmt>

        }<pos:position pos:line="125" pos:column="10"/></block> while <condition pos:line="125" pos:column="17">(<expr><operator pos:line="125" pos:column="18">!<pos:position pos:line="125" pos:column="19"/></operator><name pos:line="125" pos:column="19">seen_eos<pos:position pos:line="125" pos:column="27"/></name></expr>)<pos:position pos:line="125" pos:column="28"/></condition>;<pos:position pos:line="125" pos:column="29"/></do>

        <return pos:line="127" pos:column="9">return <expr><name pos:line="127" pos:column="16">OK<pos:position pos:line="127" pos:column="18"/></name></expr>;<pos:position pos:line="127" pos:column="19"/></return>

    }<pos:position pos:line="129" pos:column="6"/></block></then></if></elseif>

    <else pos:line="131" pos:column="5">else <block pos:line="131" pos:column="10">{
        <return pos:line="132" pos:column="9">return <expr><name pos:line="132" pos:column="16">HTTP_METHOD_NOT_ALLOWED<pos:position pos:line="132" pos:column="39"/></name></expr>;<pos:position pos:line="132" pos:column="40"/></return>
    }<pos:position pos:line="133" pos:column="6"/></block></else></if>

}<pos:position pos:line="135" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4030_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">valid_utf8<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">uschar<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">string<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">length<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><specifier pos:line="4" pos:column="1">register<pos:position pos:line="4" pos:column="9"/></specifier> <specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <name pos:line="4" pos:column="16">uschar<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">p<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

<if pos:line="6" pos:column="1">if <condition pos:line="6" pos:column="4">(<expr><name pos:line="6" pos:column="5">length<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">&lt;<pos:position pos:line="6" pos:column="16"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16">
  <block pos:line="7" pos:column="3">{
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">p<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">string<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></init> <condition><expr><operator pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">p<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">!=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></condition> <incr><expr><name pos:line="8" pos:column="29">p<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">++<pos:position pos:line="8" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="33"/></control><block type="pseudo"><empty_stmt pos:line="8" pos:column="33">;<pos:position pos:line="8" pos:column="34"/></empty_stmt></block></for>
  <expr_stmt><expr><name pos:line="9" pos:column="3">length<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">p<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">-<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">string<pos:position pos:line="9" pos:column="22"/></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

<for pos:line="12" pos:column="1">for <control pos:line="12" pos:column="5">(<init><expr><name pos:line="12" pos:column="6">p<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name pos:line="12" pos:column="10">string<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></init> <condition><expr><name pos:line="12" pos:column="18">length<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">--<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="27">&gt;<pos:position pos:line="12" pos:column="31"/></operator> <literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr>;<pos:position pos:line="12" pos:column="31"/></condition> <incr><expr><name pos:line="12" pos:column="32">p<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">++<pos:position pos:line="12" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="36"/></control>
  <block pos:line="13" pos:column="3">{
  <decl_stmt><decl><type><specifier pos:line="14" pos:column="3">register<pos:position pos:line="14" pos:column="11"/></specifier> <name pos:line="14" pos:column="12">int<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">ab<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">register<pos:position pos:line="15" pos:column="11"/></specifier> <name pos:line="15" pos:column="12">int<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">c<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><operator pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">p<pos:position pos:line="15" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">c<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">&lt;<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="11">128<pos:position pos:line="16" pos:column="14"/></literal></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15"> <block type="pseudo"><continue pos:line="16" pos:column="16">continue;<pos:position pos:line="16" pos:column="25"/></continue></block></then></if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">c<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">&amp;<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="12">0xc0<pos:position pos:line="17" pos:column="16"/></literal><operator pos:line="17" pos:column="16">)<pos:position pos:line="17" pos:column="17"/></operator> <operator pos:line="17" pos:column="18">!=<pos:position pos:line="17" pos:column="20"/></operator> <literal type="number" pos:line="17" pos:column="21">0xc0<pos:position pos:line="17" pos:column="25"/></literal></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26"> <block type="pseudo"><return pos:line="17" pos:column="27">return <expr><name pos:line="17" pos:column="34">p<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">-<pos:position pos:line="17" pos:column="37"/></operator> <name pos:line="17" pos:column="38">string<pos:position pos:line="17" pos:column="44"/></name></expr>;<pos:position pos:line="17" pos:column="45"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="18" pos:column="3">ab<pos:position pos:line="18" pos:column="5"/></name> <operator pos:line="18" pos:column="6">=<pos:position pos:line="18" pos:column="7"/></operator> <name><name pos:line="18" pos:column="8">utf8_table4<pos:position pos:line="18" pos:column="19"/></name><index pos:line="18" pos:column="19">[<expr><name pos:line="18" pos:column="20">c<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">&amp;<pos:position pos:line="18" pos:column="27"/></operator> <literal type="number" pos:line="18" pos:column="24">0x3f<pos:position pos:line="18" pos:column="28"/></literal></expr>]<pos:position pos:line="18" pos:column="29"/></index></name></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>  <comment type="block" pos:line="18" pos:column="32">/* Number of additional bytes */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">length<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">&lt;<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="16">ab<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block type="pseudo"><return pos:line="19" pos:column="20">return <expr><name pos:line="19" pos:column="27">p<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">-<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">string<pos:position pos:line="19" pos:column="37"/></name></expr>;<pos:position pos:line="19" pos:column="38"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="20" pos:column="3">length<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">-=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">ab<pos:position pos:line="20" pos:column="15"/></name></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>

  <comment type="block" pos:line="22" pos:column="3">/* Check top bits in the second byte */</comment>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><operator pos:line="23" pos:column="8">*<pos:position pos:line="23" pos:column="9"/></operator><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><operator pos:line="23" pos:column="10">++<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">p<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">)<pos:position pos:line="23" pos:column="14"/></operator> <operator pos:line="23" pos:column="15">&amp;<pos:position pos:line="23" pos:column="20"/></operator> <literal type="number" pos:line="23" pos:column="17">0xc0<pos:position pos:line="23" pos:column="21"/></literal><operator pos:line="23" pos:column="21">)<pos:position pos:line="23" pos:column="22"/></operator> <operator pos:line="23" pos:column="23">!=<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="26">0x80<pos:position pos:line="23" pos:column="30"/></literal></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block type="pseudo"><return pos:line="23" pos:column="32">return <expr><name pos:line="23" pos:column="39">p<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">-<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">string<pos:position pos:line="23" pos:column="49"/></name></expr>;<pos:position pos:line="23" pos:column="50"/></return></block></then></if>

  <comment type="block" pos:line="25" pos:column="3">/* Check for overlong sequences for each different length */</comment>
  <switch pos:line="26" pos:column="3">switch <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">ab<pos:position pos:line="26" pos:column="13"/></name></expr>)<pos:position pos:line="26" pos:column="14"/></condition>
    <block pos:line="27" pos:column="5">{
    <comment type="block" pos:line="28" pos:column="5">/* Check for xx00 000x */</comment>
    <case pos:line="29" pos:column="5">case <expr><literal type="number" pos:line="29" pos:column="10">1<pos:position pos:line="29" pos:column="11"/></literal></expr>:<pos:position pos:line="29" pos:column="12"/></case>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">c<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">&amp;<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="14">0x3e<pos:position pos:line="30" pos:column="18"/></literal><operator pos:line="30" pos:column="18">)<pos:position pos:line="30" pos:column="19"/></operator> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <literal type="number" pos:line="30" pos:column="23">0<pos:position pos:line="30" pos:column="24"/></literal></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25"> <block type="pseudo"><return pos:line="30" pos:column="26">return <expr><name pos:line="30" pos:column="33">p<pos:position pos:line="30" pos:column="34"/></name> <operator pos:line="30" pos:column="35">-<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="37">string<pos:position pos:line="30" pos:column="43"/></name></expr>;<pos:position pos:line="30" pos:column="44"/></return></block></then></if>
    <continue pos:line="31" pos:column="5">continue;<pos:position pos:line="31" pos:column="14"/></continue>   <comment type="block" pos:line="31" pos:column="17">/* We know there aren't any more bytes to check */</comment>

    <comment type="block" pos:line="33" pos:column="5">/* Check for 1110 0000, xx0x xxxx */</comment>
    <case pos:line="34" pos:column="5">case <expr><literal type="number" pos:line="34" pos:column="10">2<pos:position pos:line="34" pos:column="11"/></literal></expr>:<pos:position pos:line="34" pos:column="12"/></case>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">c<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">==<pos:position pos:line="35" pos:column="13"/></operator> <literal type="number" pos:line="35" pos:column="14">0xe0<pos:position pos:line="35" pos:column="18"/></literal> <operator pos:line="35" pos:column="19">&amp;&amp;<pos:position pos:line="35" pos:column="29"/></operator> <operator pos:line="35" pos:column="22">(<pos:position pos:line="35" pos:column="23"/></operator><operator pos:line="35" pos:column="23">*<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="24">p<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator> <literal type="number" pos:line="35" pos:column="28">0x20<pos:position pos:line="35" pos:column="32"/></literal><operator pos:line="35" pos:column="32">)<pos:position pos:line="35" pos:column="33"/></operator> <operator pos:line="35" pos:column="34">==<pos:position pos:line="35" pos:column="36"/></operator> <literal type="number" pos:line="35" pos:column="37">0<pos:position pos:line="35" pos:column="38"/></literal></expr>)<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39"> <block type="pseudo"><return pos:line="35" pos:column="40">return <expr><name pos:line="35" pos:column="47">p<pos:position pos:line="35" pos:column="48"/></name> <operator pos:line="35" pos:column="49">-<pos:position pos:line="35" pos:column="50"/></operator> <name pos:line="35" pos:column="51">string<pos:position pos:line="35" pos:column="57"/></name></expr>;<pos:position pos:line="35" pos:column="58"/></return></block></then></if>
    <break pos:line="36" pos:column="5">break;<pos:position pos:line="36" pos:column="11"/></break>

    <comment type="block" pos:line="38" pos:column="5">/* Check for 1111 0000, xx00 xxxx */</comment>
    <case pos:line="39" pos:column="5">case <expr><literal type="number" pos:line="39" pos:column="10">3<pos:position pos:line="39" pos:column="11"/></literal></expr>:<pos:position pos:line="39" pos:column="12"/></case>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">c<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">==<pos:position pos:line="40" pos:column="13"/></operator> <literal type="number" pos:line="40" pos:column="14">0xf0<pos:position pos:line="40" pos:column="18"/></literal> <operator pos:line="40" pos:column="19">&amp;&amp;<pos:position pos:line="40" pos:column="29"/></operator> <operator pos:line="40" pos:column="22">(<pos:position pos:line="40" pos:column="23"/></operator><operator pos:line="40" pos:column="23">*<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">p<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">&amp;<pos:position pos:line="40" pos:column="31"/></operator> <literal type="number" pos:line="40" pos:column="28">0x30<pos:position pos:line="40" pos:column="32"/></literal><operator pos:line="40" pos:column="32">)<pos:position pos:line="40" pos:column="33"/></operator> <operator pos:line="40" pos:column="34">==<pos:position pos:line="40" pos:column="36"/></operator> <literal type="number" pos:line="40" pos:column="37">0<pos:position pos:line="40" pos:column="38"/></literal></expr>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39"> <block type="pseudo"><return pos:line="40" pos:column="40">return <expr><name pos:line="40" pos:column="47">p<pos:position pos:line="40" pos:column="48"/></name> <operator pos:line="40" pos:column="49">-<pos:position pos:line="40" pos:column="50"/></operator> <name pos:line="40" pos:column="51">string<pos:position pos:line="40" pos:column="57"/></name></expr>;<pos:position pos:line="40" pos:column="58"/></return></block></then></if>
    <break pos:line="41" pos:column="5">break;<pos:position pos:line="41" pos:column="11"/></break>

    <comment type="block" pos:line="43" pos:column="5">/* Check for 1111 1000, xx00 0xxx */</comment>
    <case pos:line="44" pos:column="5">case <expr><literal type="number" pos:line="44" pos:column="10">4<pos:position pos:line="44" pos:column="11"/></literal></expr>:<pos:position pos:line="44" pos:column="12"/></case>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">c<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">==<pos:position pos:line="45" pos:column="13"/></operator> <literal type="number" pos:line="45" pos:column="14">0xf8<pos:position pos:line="45" pos:column="18"/></literal> <operator pos:line="45" pos:column="19">&amp;&amp;<pos:position pos:line="45" pos:column="29"/></operator> <operator pos:line="45" pos:column="22">(<pos:position pos:line="45" pos:column="23"/></operator><operator pos:line="45" pos:column="23">*<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">p<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">&amp;<pos:position pos:line="45" pos:column="31"/></operator> <literal type="number" pos:line="45" pos:column="28">0x38<pos:position pos:line="45" pos:column="32"/></literal><operator pos:line="45" pos:column="32">)<pos:position pos:line="45" pos:column="33"/></operator> <operator pos:line="45" pos:column="34">==<pos:position pos:line="45" pos:column="36"/></operator> <literal type="number" pos:line="45" pos:column="37">0<pos:position pos:line="45" pos:column="38"/></literal></expr>)<pos:position pos:line="45" pos:column="39"/></condition><then pos:line="45" pos:column="39"> <block type="pseudo"><return pos:line="45" pos:column="40">return <expr><name pos:line="45" pos:column="47">p<pos:position pos:line="45" pos:column="48"/></name> <operator pos:line="45" pos:column="49">-<pos:position pos:line="45" pos:column="50"/></operator> <name pos:line="45" pos:column="51">string<pos:position pos:line="45" pos:column="57"/></name></expr>;<pos:position pos:line="45" pos:column="58"/></return></block></then></if>
    <break pos:line="46" pos:column="5">break;<pos:position pos:line="46" pos:column="11"/></break>

    <comment type="block" pos:line="48" pos:column="5">/* Check for leading 0xfe or 0xff, and then for 1111 1100, xx00 00xx */</comment>
    <case pos:line="49" pos:column="5">case <expr><literal type="number" pos:line="49" pos:column="10">5<pos:position pos:line="49" pos:column="11"/></literal></expr>:<pos:position pos:line="49" pos:column="12"/></case>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">c<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">==<pos:position pos:line="50" pos:column="13"/></operator> <literal type="number" pos:line="50" pos:column="14">0xfe<pos:position pos:line="50" pos:column="18"/></literal> <operator pos:line="50" pos:column="19">||<pos:position pos:line="50" pos:column="21"/></operator> <name pos:line="50" pos:column="22">c<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">==<pos:position pos:line="50" pos:column="26"/></operator> <literal type="number" pos:line="50" pos:column="27">0xff<pos:position pos:line="50" pos:column="31"/></literal> <operator pos:line="50" pos:column="32">||<pos:position pos:line="50" pos:column="34"/></operator>
       <operator pos:line="51" pos:column="8">(<pos:position pos:line="51" pos:column="9"/></operator><name pos:line="51" pos:column="9">c<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">==<pos:position pos:line="51" pos:column="13"/></operator> <literal type="number" pos:line="51" pos:column="14">0xfc<pos:position pos:line="51" pos:column="18"/></literal> <operator pos:line="51" pos:column="19">&amp;&amp;<pos:position pos:line="51" pos:column="29"/></operator> <operator pos:line="51" pos:column="22">(<pos:position pos:line="51" pos:column="23"/></operator><operator pos:line="51" pos:column="23">*<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">p<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">&amp;<pos:position pos:line="51" pos:column="31"/></operator> <literal type="number" pos:line="51" pos:column="28">0x3c<pos:position pos:line="51" pos:column="32"/></literal><operator pos:line="51" pos:column="32">)<pos:position pos:line="51" pos:column="33"/></operator> <operator pos:line="51" pos:column="34">==<pos:position pos:line="51" pos:column="36"/></operator> <literal type="number" pos:line="51" pos:column="37">0<pos:position pos:line="51" pos:column="38"/></literal><operator pos:line="51" pos:column="38">)<pos:position pos:line="51" pos:column="39"/></operator></expr>)<pos:position pos:line="51" pos:column="40"/></condition><then pos:line="51" pos:column="40"> <block type="pseudo"><return pos:line="51" pos:column="41">return <expr><name pos:line="51" pos:column="48">p<pos:position pos:line="51" pos:column="49"/></name> <operator pos:line="51" pos:column="50">-<pos:position pos:line="51" pos:column="51"/></operator> <name pos:line="51" pos:column="52">string<pos:position pos:line="51" pos:column="58"/></name></expr>;<pos:position pos:line="51" pos:column="59"/></return></block></then></if>
    <break pos:line="52" pos:column="5">break;<pos:position pos:line="52" pos:column="11"/></break>
    }<pos:position pos:line="53" pos:column="6"/></block></switch>

  <comment type="block" pos:line="55" pos:column="3">/* Check for valid bytes after the 2nd, if any; all must start 10 */</comment>
  <while pos:line="56" pos:column="3">while <condition pos:line="56" pos:column="9">(<expr><operator pos:line="56" pos:column="10">--<pos:position pos:line="56" pos:column="12"/></operator><name pos:line="56" pos:column="12">ab<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">&gt;<pos:position pos:line="56" pos:column="19"/></operator> <literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal></expr>)<pos:position pos:line="56" pos:column="19"/></condition>
    <block pos:line="57" pos:column="5">{
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">(<pos:position pos:line="58" pos:column="10"/></operator><operator pos:line="58" pos:column="10">*<pos:position pos:line="58" pos:column="11"/></operator><operator pos:line="58" pos:column="11">(<pos:position pos:line="58" pos:column="12"/></operator><operator pos:line="58" pos:column="12">++<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">p<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">)<pos:position pos:line="58" pos:column="16"/></operator> <operator pos:line="58" pos:column="17">&amp;<pos:position pos:line="58" pos:column="22"/></operator> <literal type="number" pos:line="58" pos:column="19">0xc0<pos:position pos:line="58" pos:column="23"/></literal><operator pos:line="58" pos:column="23">)<pos:position pos:line="58" pos:column="24"/></operator> <operator pos:line="58" pos:column="25">!=<pos:position pos:line="58" pos:column="27"/></operator> <literal type="number" pos:line="58" pos:column="28">0x80<pos:position pos:line="58" pos:column="32"/></literal></expr>)<pos:position pos:line="58" pos:column="33"/></condition><then pos:line="58" pos:column="33"> <block type="pseudo"><return pos:line="58" pos:column="34">return <expr><name pos:line="58" pos:column="41">p<pos:position pos:line="58" pos:column="42"/></name> <operator pos:line="58" pos:column="43">-<pos:position pos:line="58" pos:column="44"/></operator> <name pos:line="58" pos:column="45">string<pos:position pos:line="58" pos:column="51"/></name></expr>;<pos:position pos:line="58" pos:column="52"/></return></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></while>
  }<pos:position pos:line="60" pos:column="4"/></block></for>

<return pos:line="62" pos:column="1">return <expr><operator pos:line="62" pos:column="8">-<pos:position pos:line="62" pos:column="9"/></operator><literal type="number" pos:line="62" pos:column="9">1<pos:position pos:line="62" pos:column="10"/></literal></expr>;<pos:position pos:line="62" pos:column="11"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

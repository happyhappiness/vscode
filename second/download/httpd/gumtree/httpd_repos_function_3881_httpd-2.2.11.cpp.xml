<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3881_httpd-2.2.11.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">EXPORT<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">regexec<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">regex_t<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">preg<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">string<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">size_t<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">nmatch<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">regmatch_t<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">pmatch<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[]<pos:position pos:line="3" pos:column="22"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="24">int<pos:position pos:line="3" pos:column="27"/></name></type> <name pos:line="3" pos:column="28">eflags<pos:position pos:line="3" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="35"/></parameter_list>
<block pos:line="4" pos:column="1">{
<decl_stmt><decl><type><name pos:line="5" pos:column="1">int<pos:position pos:line="5" pos:column="4"/></name></type> <name pos:line="5" pos:column="5">rc<pos:position pos:line="5" pos:column="7"/></name></decl>;<pos:position pos:line="5" pos:column="8"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">options<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">int<pos:position pos:line="7" pos:column="4"/></name> <modifier pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></modifier></type><name pos:line="7" pos:column="6">ovector<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="8" pos:column="1">int<pos:position pos:line="8" pos:column="4"/></name></type> <name><name pos:line="8" pos:column="5">small_ovector<pos:position pos:line="8" pos:column="18"/></name><index pos:line="8" pos:column="18">[<expr><name pos:line="8" pos:column="19">POSIX_MALLOC_THRESHOLD<pos:position pos:line="8" pos:column="41"/></name> <operator pos:line="8" pos:column="42">*<pos:position pos:line="8" pos:column="43"/></operator> <literal type="number" pos:line="8" pos:column="44">3<pos:position pos:line="8" pos:column="45"/></literal></expr>]<pos:position pos:line="8" pos:column="46"/></index></name></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="9" pos:column="1">BOOL<pos:position pos:line="9" pos:column="5"/></name></type> <name pos:line="9" pos:column="6">allocated_ovector<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name pos:line="9" pos:column="26">FALSE<pos:position pos:line="9" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

<if pos:line="11" pos:column="1">if <condition pos:line="11" pos:column="4">(<expr><operator pos:line="11" pos:column="5">(<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">eflags<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">&amp;<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="15">REG_NOTBOL<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="33">options<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">|=<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="44">PCRE_NOTBOL<pos:position pos:line="11" pos:column="55"/></name></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt></block></then></if>
<if pos:line="12" pos:column="1">if <condition pos:line="12" pos:column="4">(<expr><operator pos:line="12" pos:column="5">(<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">eflags<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">&amp;<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="15">REG_NOTEOL<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">)<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="27">!=<pos:position pos:line="12" pos:column="29"/></operator> <literal type="number" pos:line="12" pos:column="30">0<pos:position pos:line="12" pos:column="31"/></literal></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32"> <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="33">options<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">|=<pos:position pos:line="12" pos:column="43"/></operator> <name pos:line="12" pos:column="44">PCRE_NOTEOL<pos:position pos:line="12" pos:column="55"/></name></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt></block></then></if>

<expr_stmt><expr><operator pos:line="14" pos:column="1">(<pos:position pos:line="14" pos:column="2"/></operator><operator pos:line="14" pos:column="2">(<pos:position pos:line="14" pos:column="3"/></operator><name pos:line="14" pos:column="3">regex_t<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">*<pos:position pos:line="14" pos:column="12"/></operator><operator pos:line="14" pos:column="12">)<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">preg<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">)<pos:position pos:line="14" pos:column="18"/></operator><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">re_erroffset<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">=<pos:position pos:line="14" pos:column="34"/></operator> <call pos:line="14" pos:column="35">(<name pos:line="14" pos:column="36">size_t<pos:position pos:line="14" pos:column="42"/></name>)<argument_list pos:line="14" pos:column="43">(<argument><expr><operator pos:line="14" pos:column="44">-<pos:position pos:line="14" pos:column="45"/></operator><literal type="number" pos:line="14" pos:column="45">1<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>  <comment type="block" pos:line="14" pos:column="50">/* Only has meaning after compile */</comment>

<if pos:line="16" pos:column="1">if <condition pos:line="16" pos:column="4">(<expr><name pos:line="16" pos:column="5">nmatch<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">&gt;<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16">
  <block pos:line="17" pos:column="3">{
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">nmatch<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">&lt;=<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="17">POSIX_MALLOC_THRESHOLD<pos:position pos:line="18" pos:column="39"/></name></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40">
    <block pos:line="19" pos:column="5">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">ovector<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <operator pos:line="20" pos:column="15">&amp;<pos:position pos:line="20" pos:column="20"/></operator><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name><name pos:line="20" pos:column="17">small_ovector<pos:position pos:line="20" pos:column="30"/></name><index pos:line="20" pos:column="30">[<expr><literal type="number" pos:line="20" pos:column="31">0<pos:position pos:line="20" pos:column="32"/></literal></expr>]<pos:position pos:line="20" pos:column="33"/></index></name><operator pos:line="20" pos:column="33">)<pos:position pos:line="20" pos:column="34"/></operator></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then>
  <else pos:line="22" pos:column="3">else
    <block pos:line="23" pos:column="5">{
    <expr_stmt><expr><name pos:line="24" pos:column="5">ovector<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">int<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></operator><operator pos:line="24" pos:column="21">)<pos:position pos:line="24" pos:column="22"/></operator><call><name pos:line="24" pos:column="22">malloc<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><sizeof pos:line="24" pos:column="29">sizeof<argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">int<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></sizeof> <operator pos:line="24" pos:column="41">*<pos:position pos:line="24" pos:column="42"/></operator> <name pos:line="24" pos:column="43">nmatch<pos:position pos:line="24" pos:column="49"/></name> <operator pos:line="24" pos:column="50">*<pos:position pos:line="24" pos:column="51"/></operator> <literal type="number" pos:line="24" pos:column="52">3<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">ovector<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">==<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">NULL<pos:position pos:line="25" pos:column="24"/></name></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25"> <block type="pseudo"><return pos:line="25" pos:column="26">return <expr><name pos:line="25" pos:column="33">REG_ESPACE<pos:position pos:line="25" pos:column="43"/></name></expr>;<pos:position pos:line="25" pos:column="44"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">allocated_ovector<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">TRUE<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

<expr_stmt><expr><name pos:line="30" pos:column="1">rc<pos:position pos:line="30" pos:column="3"/></name> <operator pos:line="30" pos:column="4">=<pos:position pos:line="30" pos:column="5"/></operator> <call><name pos:line="30" pos:column="6">pcre_exec<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><specifier pos:line="30" pos:column="17">const<pos:position pos:line="30" pos:column="22"/></specifier> <name pos:line="30" pos:column="23">pcre<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">*<pos:position pos:line="30" pos:column="29"/></operator><operator pos:line="30" pos:column="29">)<pos:position pos:line="30" pos:column="30"/></operator><name><name pos:line="30" pos:column="30">preg<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">re_pcre<pos:position pos:line="30" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">NULL<pos:position pos:line="30" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="51">string<pos:position pos:line="30" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="59">(<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="60">int<pos:position pos:line="30" pos:column="63"/></name><operator pos:line="30" pos:column="63">)<pos:position pos:line="30" pos:column="64"/></operator><call><name pos:line="30" pos:column="64">strlen<pos:position pos:line="30" pos:column="70"/></name><argument_list pos:line="30" pos:column="70">(<argument><expr><name pos:line="30" pos:column="71">string<pos:position pos:line="30" pos:column="77"/></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr></argument>,
  <argument><expr><literal type="number" pos:line="31" pos:column="3">0<pos:position pos:line="31" pos:column="4"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="6">options<pos:position pos:line="31" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="15">ovector<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">nmatch<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">*<pos:position pos:line="31" pos:column="32"/></operator> <literal type="number" pos:line="31" pos:column="33">3<pos:position pos:line="31" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>

<if pos:line="33" pos:column="1">if <condition pos:line="33" pos:column="4">(<expr><name pos:line="33" pos:column="5">rc<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">==<pos:position pos:line="33" pos:column="10"/></operator> <literal type="number" pos:line="33" pos:column="11">0<pos:position pos:line="33" pos:column="12"/></literal></expr>)<pos:position pos:line="33" pos:column="13"/></condition><then pos:line="33" pos:column="13"> <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="14">rc<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">nmatch<pos:position pos:line="33" pos:column="25"/></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt></block></then></if>    <comment type="block" pos:line="33" pos:column="30">/* All captured slots were filled in */</comment>

<if pos:line="35" pos:column="1">if <condition pos:line="35" pos:column="4">(<expr><name pos:line="35" pos:column="5">rc<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">&gt;=<pos:position pos:line="35" pos:column="13"/></operator> <literal type="number" pos:line="35" pos:column="11">0<pos:position pos:line="35" pos:column="12"/></literal></expr>)<pos:position pos:line="35" pos:column="13"/></condition><then pos:line="35" pos:column="13">
  <block pos:line="36" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="37" pos:column="3">size_t<pos:position pos:line="37" pos:column="9"/></name></type> <name pos:line="37" pos:column="10">i<pos:position pos:line="37" pos:column="11"/></name></decl>;<pos:position pos:line="37" pos:column="12"/></decl_stmt>
  <for pos:line="38" pos:column="3">for <control pos:line="38" pos:column="7">(<init><expr><name pos:line="38" pos:column="8">i<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <literal type="number" pos:line="38" pos:column="12">0<pos:position pos:line="38" pos:column="13"/></literal></expr>;<pos:position pos:line="38" pos:column="14"/></init> <condition><expr><name pos:line="38" pos:column="15">i<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">&lt;<pos:position pos:line="38" pos:column="21"/></operator> <operator pos:line="38" pos:column="19">(<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">size_t<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">)<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">rc<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></condition> <incr><expr><name pos:line="38" pos:column="31">i<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">++<pos:position pos:line="38" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="35"/></control>
    <block pos:line="39" pos:column="5">{
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">pmatch<pos:position pos:line="40" pos:column="11"/></name><index pos:line="40" pos:column="11">[<expr><name pos:line="40" pos:column="12">i<pos:position pos:line="40" pos:column="13"/></name></expr>]<pos:position pos:line="40" pos:column="14"/></index></name><operator pos:line="40" pos:column="14">.<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">rm_so<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name><name pos:line="40" pos:column="23">ovector<pos:position pos:line="40" pos:column="30"/></name><index pos:line="40" pos:column="30">[<expr><name pos:line="40" pos:column="31">i<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">*<pos:position pos:line="40" pos:column="33"/></operator><literal type="number" pos:line="40" pos:column="33">2<pos:position pos:line="40" pos:column="34"/></literal></expr>]<pos:position pos:line="40" pos:column="35"/></index></name></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">pmatch<pos:position pos:line="41" pos:column="11"/></name><index pos:line="41" pos:column="11">[<expr><name pos:line="41" pos:column="12">i<pos:position pos:line="41" pos:column="13"/></name></expr>]<pos:position pos:line="41" pos:column="14"/></index></name><operator pos:line="41" pos:column="14">.<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">rm_eo<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <name><name pos:line="41" pos:column="23">ovector<pos:position pos:line="41" pos:column="30"/></name><index pos:line="41" pos:column="30">[<expr><name pos:line="41" pos:column="31">i<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">*<pos:position pos:line="41" pos:column="33"/></operator><literal type="number" pos:line="41" pos:column="33">2<pos:position pos:line="41" pos:column="34"/></literal><operator pos:line="41" pos:column="34">+<pos:position pos:line="41" pos:column="35"/></operator><literal type="number" pos:line="41" pos:column="35">1<pos:position pos:line="41" pos:column="36"/></literal></expr>]<pos:position pos:line="41" pos:column="37"/></index></name></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></for>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><name pos:line="43" pos:column="7">allocated_ovector<pos:position pos:line="43" pos:column="24"/></name></expr>)<pos:position pos:line="43" pos:column="25"/></condition><then pos:line="43" pos:column="25"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="26">free<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">ovector<pos:position pos:line="43" pos:column="38"/></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt></block></then></if>
  <for pos:line="44" pos:column="3">for <control pos:line="44" pos:column="7">(<init pos:line="44" pos:column="8">;<pos:position pos:line="44" pos:column="9"/></init> <condition><expr><name pos:line="44" pos:column="10">i<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">&lt;<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="14">nmatch<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></condition> <incr><expr><name pos:line="44" pos:column="22">i<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">++<pos:position pos:line="44" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="26"/></control> <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="27">pmatch<pos:position pos:line="44" pos:column="33"/></name><index pos:line="44" pos:column="33">[<expr><name pos:line="44" pos:column="34">i<pos:position pos:line="44" pos:column="35"/></name></expr>]<pos:position pos:line="44" pos:column="36"/></index></name><operator pos:line="44" pos:column="36">.<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">rm_so<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">=<pos:position pos:line="44" pos:column="44"/></operator> <name><name pos:line="44" pos:column="45">pmatch<pos:position pos:line="44" pos:column="51"/></name><index pos:line="44" pos:column="51">[<expr><name pos:line="44" pos:column="52">i<pos:position pos:line="44" pos:column="53"/></name></expr>]<pos:position pos:line="44" pos:column="54"/></index></name><operator pos:line="44" pos:column="54">.<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="55">rm_eo<pos:position pos:line="44" pos:column="60"/></name> <operator pos:line="44" pos:column="61">=<pos:position pos:line="44" pos:column="62"/></operator> <operator pos:line="44" pos:column="63">-<pos:position pos:line="44" pos:column="64"/></operator><literal type="number" pos:line="44" pos:column="64">1<pos:position pos:line="44" pos:column="65"/></literal></expr>;<pos:position pos:line="44" pos:column="66"/></expr_stmt></block></for>
  <return pos:line="45" pos:column="3">return <expr><literal type="number" pos:line="45" pos:column="10">0<pos:position pos:line="45" pos:column="11"/></literal></expr>;<pos:position pos:line="45" pos:column="12"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then>

<else pos:line="48" pos:column="1">else
  <block pos:line="49" pos:column="3">{
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">allocated_ovector<pos:position pos:line="50" pos:column="24"/></name></expr>)<pos:position pos:line="50" pos:column="25"/></condition><then pos:line="50" pos:column="25"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="26">free<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">ovector<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt></block></then></if>
  <switch pos:line="51" pos:column="3">switch<condition pos:line="51" pos:column="9">(<expr><name pos:line="51" pos:column="10">rc<pos:position pos:line="51" pos:column="12"/></name></expr>)<pos:position pos:line="51" pos:column="13"/></condition>
    <block pos:line="52" pos:column="5">{
    <case pos:line="53" pos:column="5">case <expr><name pos:line="53" pos:column="10">PCRE_ERROR_NOMATCH<pos:position pos:line="53" pos:column="28"/></name></expr>:<pos:position pos:line="53" pos:column="29"/></case> <return pos:line="53" pos:column="30">return <expr><name pos:line="53" pos:column="37">REG_NOMATCH<pos:position pos:line="53" pos:column="48"/></name></expr>;<pos:position pos:line="53" pos:column="49"/></return>
    <case pos:line="54" pos:column="5">case <expr><name pos:line="54" pos:column="10">PCRE_ERROR_NULL<pos:position pos:line="54" pos:column="25"/></name></expr>:<pos:position pos:line="54" pos:column="26"/></case> <return pos:line="54" pos:column="27">return <expr><name pos:line="54" pos:column="34">REG_INVARG<pos:position pos:line="54" pos:column="44"/></name></expr>;<pos:position pos:line="54" pos:column="45"/></return>
    <case pos:line="55" pos:column="5">case <expr><name pos:line="55" pos:column="10">PCRE_ERROR_BADOPTION<pos:position pos:line="55" pos:column="30"/></name></expr>:<pos:position pos:line="55" pos:column="31"/></case> <return pos:line="55" pos:column="32">return <expr><name pos:line="55" pos:column="39">REG_INVARG<pos:position pos:line="55" pos:column="49"/></name></expr>;<pos:position pos:line="55" pos:column="50"/></return>
    <case pos:line="56" pos:column="5">case <expr><name pos:line="56" pos:column="10">PCRE_ERROR_BADMAGIC<pos:position pos:line="56" pos:column="29"/></name></expr>:<pos:position pos:line="56" pos:column="30"/></case> <return pos:line="56" pos:column="31">return <expr><name pos:line="56" pos:column="38">REG_INVARG<pos:position pos:line="56" pos:column="48"/></name></expr>;<pos:position pos:line="56" pos:column="49"/></return>
    <case pos:line="57" pos:column="5">case <expr><name pos:line="57" pos:column="10">PCRE_ERROR_UNKNOWN_NODE<pos:position pos:line="57" pos:column="33"/></name></expr>:<pos:position pos:line="57" pos:column="34"/></case> <return pos:line="57" pos:column="35">return <expr><name pos:line="57" pos:column="42">REG_ASSERT<pos:position pos:line="57" pos:column="52"/></name></expr>;<pos:position pos:line="57" pos:column="53"/></return>
    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">PCRE_ERROR_NOMEMORY<pos:position pos:line="58" pos:column="29"/></name></expr>:<pos:position pos:line="58" pos:column="30"/></case> <return pos:line="58" pos:column="31">return <expr><name pos:line="58" pos:column="38">REG_ESPACE<pos:position pos:line="58" pos:column="48"/></name></expr>;<pos:position pos:line="58" pos:column="49"/></return>
    <case pos:line="59" pos:column="5">case <expr><name pos:line="59" pos:column="10">PCRE_ERROR_MATCHLIMIT<pos:position pos:line="59" pos:column="31"/></name></expr>:<pos:position pos:line="59" pos:column="32"/></case> <return pos:line="59" pos:column="33">return <expr><name pos:line="59" pos:column="40">REG_ESPACE<pos:position pos:line="59" pos:column="50"/></name></expr>;<pos:position pos:line="59" pos:column="51"/></return>
    <case pos:line="60" pos:column="5">case <expr><name pos:line="60" pos:column="10">PCRE_ERROR_BADUTF8<pos:position pos:line="60" pos:column="28"/></name></expr>:<pos:position pos:line="60" pos:column="29"/></case> <return pos:line="60" pos:column="30">return <expr><name pos:line="60" pos:column="37">REG_INVARG<pos:position pos:line="60" pos:column="47"/></name></expr>;<pos:position pos:line="60" pos:column="48"/></return>
    <case pos:line="61" pos:column="5">case <expr><name pos:line="61" pos:column="10">PCRE_ERROR_BADUTF8_OFFSET<pos:position pos:line="61" pos:column="35"/></name></expr>:<pos:position pos:line="61" pos:column="36"/></case> <return pos:line="61" pos:column="37">return <expr><name pos:line="61" pos:column="44">REG_INVARG<pos:position pos:line="61" pos:column="54"/></name></expr>;<pos:position pos:line="61" pos:column="55"/></return>
    <default pos:line="62" pos:column="5">default:<pos:position pos:line="62" pos:column="13"/></default> <return pos:line="62" pos:column="14">return <expr><name pos:line="62" pos:column="21">REG_ASSERT<pos:position pos:line="62" pos:column="31"/></name></expr>;<pos:position pos:line="62" pos:column="32"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></switch>
  }<pos:position pos:line="64" pos:column="4"/></block></else></if>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

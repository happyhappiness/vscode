<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2804_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">odbc_lob_bucket_read<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">apr_bucket<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">e<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier><modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">str<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">apr_size_t<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">len<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">apr_read_type_e<pos:position pos:line="2" pos:column="74"/></name></type> <name pos:line="2" pos:column="75">block<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SQLRETURN<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">rc<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SQLLEN<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">len_indicator<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SQLSMALLINT<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">type<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">odbc_bucket<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">bd<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><operator pos:line="7" pos:column="23">(<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">odbc_bucket<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></operator><operator pos:line="7" pos:column="37">)<pos:position pos:line="7" pos:column="38"/></operator><name><name pos:line="7" pos:column="38">e<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">data<pos:position pos:line="7" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_bucket<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">nxt<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">void<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">buf<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">bufsize<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><name><name pos:line="10" pos:column="19">bd<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">row<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">res<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">apr_dbd<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">defaultBufferSize<pos:position pos:line="10" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">eos<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>
    
    <comment type="block" pos:line="13" pos:column="5">/* C type is CHAR for CLOBs, DEFAULT for BLOBs */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">type<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name><name pos:line="14" pos:column="12">bd<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">row<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">res<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">coltypes<pos:position pos:line="14" pos:column="34"/></name><index pos:line="14" pos:column="34">[<expr><name><name pos:line="14" pos:column="35">bd<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">col<pos:position pos:line="14" pos:column="42"/></name></name></expr>]<pos:position pos:line="14" pos:column="43"/></index></name></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">type<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <ternary><condition><expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">type<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">==<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">SQL_LONGVARCHAR<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">)<pos:position pos:line="15" pos:column="37"/></operator></expr> ?<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39"> <expr><name pos:line="15" pos:column="40">SQL_C_CHAR<pos:position pos:line="15" pos:column="50"/></name></expr> <pos:position pos:line="15" pos:column="51"/></then><else pos:line="15" pos:column="51">: <expr><name pos:line="15" pos:column="53">SQL_C_DEFAULT<pos:position pos:line="15" pos:column="66"/></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* LOB buffers are always at least APR_BUCKET_BUFF_SIZE, 
     *   but they may be much bigger per the BUFSIZE parameter.
     */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">bufsize<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&lt;<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="19">APR_BUCKET_BUFF_SIZE<pos:position pos:line="20" pos:column="39"/></name></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">bufsize<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">APR_BUCKET_BUFF_SIZE<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">buf<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">apr_bucket_alloc<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">bufsize<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="37">e<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">list<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="24" pos:column="5">*<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">str<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <name pos:line="24" pos:column="12">NULL<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">len<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">rc<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">SQLGetData<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name><name pos:line="27" pos:column="21">bd<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">row<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">-&gt;<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="30">res<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">stmt<pos:position pos:line="27" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="41">bd<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">col<pos:position pos:line="27" pos:column="48"/></name></name> <operator pos:line="27" pos:column="49">+<pos:position pos:line="27" pos:column="50"/></operator> <literal type="number" pos:line="27" pos:column="51">1<pos:position pos:line="27" pos:column="52"/></literal></expr></argument>, 
                    <argument><expr><name pos:line="28" pos:column="21">type<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="27">buf<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">bufsize<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, 
                    <argument><expr><operator pos:line="29" pos:column="21">&amp;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="22">len_indicator<pos:position pos:line="29" pos:column="35"/></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">CHECK_ERROR<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name><name pos:line="31" pos:column="17">bd<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">row<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">res<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">apr_dbd<pos:position pos:line="31" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="40">"SQLGetData"<pos:position pos:line="31" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">rc<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, 
                <argument><expr><name pos:line="32" pos:column="17">SQL_HANDLE_STMT<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="34">bd<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">row<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">res<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">stmt<pos:position pos:line="32" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
    
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">rc<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">==<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">SQL_NO_DATA<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">||<pos:position pos:line="34" pos:column="29"/></operator> <name pos:line="34" pos:column="30">len_indicator<pos:position pos:line="34" pos:column="43"/></name> <operator pos:line="34" pos:column="44">==<pos:position pos:line="34" pos:column="46"/></operator> <name pos:line="34" pos:column="47">SQL_NULL_DATA<pos:position pos:line="34" pos:column="60"/></name> <operator pos:line="34" pos:column="61">||<pos:position pos:line="34" pos:column="63"/></operator> <name pos:line="34" pos:column="64">len_indicator<pos:position pos:line="34" pos:column="77"/></name> <operator pos:line="34" pos:column="78">&lt;<pos:position pos:line="34" pos:column="82"/></operator> <literal type="number" pos:line="34" pos:column="80">0<pos:position pos:line="34" pos:column="81"/></literal></expr>)<pos:position pos:line="34" pos:column="82"/></condition><then pos:line="34" pos:column="82">
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">len_indicator<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <literal type="number" pos:line="35" pos:column="25">0<pos:position pos:line="35" pos:column="26"/></literal></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt></block></then></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name pos:line="37" pos:column="9">SQL_SUCCEEDED<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">rc<pos:position pos:line="37" pos:column="25"/></name></expr></argument>)<pos:position pos:line="37" pos:column="26"/></argument_list></call> <operator pos:line="37" pos:column="27">||<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="30">rc<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">==<pos:position pos:line="37" pos:column="35"/></operator> <name pos:line="37" pos:column="36">SQL_NO_DATA<pos:position pos:line="37" pos:column="47"/></name></expr>)<pos:position pos:line="37" pos:column="48"/></condition><then pos:line="37" pos:column="48"> <block pos:line="37" pos:column="49">{

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">rc<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">==<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">SQL_SUCCESS_WITH_INFO<pos:position pos:line="39" pos:column="40"/></name>
            <operator pos:line="40" pos:column="13">&amp;&amp;<pos:position pos:line="40" pos:column="23"/></operator> <operator pos:line="40" pos:column="16">(<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">len_indicator<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">==<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">SQL_NO_TOTAL<pos:position pos:line="40" pos:column="46"/></name> <operator pos:line="40" pos:column="47">||<pos:position pos:line="40" pos:column="49"/></operator> <name pos:line="40" pos:column="50">len_indicator<pos:position pos:line="40" pos:column="63"/></name> <operator pos:line="40" pos:column="64">&gt;=<pos:position pos:line="40" pos:column="69"/></operator> <name pos:line="40" pos:column="67">bufsize<pos:position pos:line="40" pos:column="74"/></name><operator pos:line="40" pos:column="74">)<pos:position pos:line="40" pos:column="75"/></operator></expr>)<pos:position pos:line="40" pos:column="76"/></condition><then pos:line="40" pos:column="76"> <block pos:line="40" pos:column="77">{
            <comment type="block" pos:line="41" pos:column="13">/* not the last read = a full buffer. CLOBs have a null terminator */</comment>
            <expr_stmt><expr><operator pos:line="42" pos:column="13">*<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">len<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">bufsize<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">-<pos:position pos:line="42" pos:column="29"/></operator> <operator pos:line="42" pos:column="30">(<pos:position pos:line="42" pos:column="31"/></operator><ternary><condition><expr><call><name pos:line="42" pos:column="31">IS_CLOB<pos:position pos:line="42" pos:column="38"/></name><argument_list pos:line="42" pos:column="38">(<argument><expr><name><name pos:line="42" pos:column="39">bd<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">type<pos:position pos:line="42" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr> ?<pos:position pos:line="42" pos:column="50"/></condition><then pos:line="42" pos:column="50"> <expr><literal type="number" pos:line="42" pos:column="51">1<pos:position pos:line="42" pos:column="52"/></literal></expr> <pos:position pos:line="42" pos:column="53"/></then><else pos:line="42" pos:column="53">: <expr><literal type="number" pos:line="42" pos:column="55">0<pos:position pos:line="42" pos:column="56"/></literal></expr></else></ternary> <operator pos:line="42" pos:column="57">)<pos:position pos:line="42" pos:column="58"/></operator></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>

             <expr_stmt><expr><name pos:line="44" pos:column="14">eos<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <literal type="number" pos:line="44" pos:column="20">0<pos:position pos:line="44" pos:column="21"/></literal></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then>
        <else pos:line="46" pos:column="9">else <block pos:line="46" pos:column="14">{
            <comment type="block" pos:line="47" pos:column="13">/* the last read - len_indicator is supposed to be the length, 
             * but some driver get this wrong and return the total length.
             * We try to handle both interpretations.
             */</comment>
            <expr_stmt><expr><operator pos:line="51" pos:column="13">*<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">len<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator>  <ternary><condition><expr><operator pos:line="51" pos:column="21">(<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">len_indicator<pos:position pos:line="51" pos:column="35"/></name> <operator pos:line="51" pos:column="36">&gt;<pos:position pos:line="51" pos:column="40"/></operator> <name pos:line="51" pos:column="38">bufsize<pos:position pos:line="51" pos:column="45"/></name> 
                     <operator pos:line="52" pos:column="22">&amp;&amp;<pos:position pos:line="52" pos:column="32"/></operator> <name pos:line="52" pos:column="25">len_indicator<pos:position pos:line="52" pos:column="38"/></name> <operator pos:line="52" pos:column="39">&gt;=<pos:position pos:line="52" pos:column="44"/></operator> <operator pos:line="52" pos:column="42">(<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="43">SQLLEN<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">)<pos:position pos:line="52" pos:column="50"/></operator><name><name pos:line="52" pos:column="50">e<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">-&gt;<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="53">start<pos:position pos:line="52" pos:column="58"/></name></name><operator pos:line="52" pos:column="58">)<pos:position pos:line="52" pos:column="59"/></operator></expr>
                ?<pos:position pos:line="53" pos:column="18"/></condition><then pos:line="53" pos:column="18"> <expr><operator pos:line="53" pos:column="19">(<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="20">len_indicator<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">-<pos:position pos:line="53" pos:column="35"/></operator> <operator pos:line="53" pos:column="36">(<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="37">SQLLEN<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">)<pos:position pos:line="53" pos:column="44"/></operator><name><name pos:line="53" pos:column="44">e<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">-&gt;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="47">start<pos:position pos:line="53" pos:column="52"/></name></name><operator pos:line="53" pos:column="52">)<pos:position pos:line="53" pos:column="53"/></operator></expr> <pos:position pos:line="53" pos:column="54"/></then><else pos:line="53" pos:column="54">: <expr><name pos:line="53" pos:column="56">len_indicator<pos:position pos:line="53" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="53" pos:column="70"/></expr_stmt>

            <expr_stmt><expr><name pos:line="55" pos:column="13">eos<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <literal type="number" pos:line="55" pos:column="19">1<pos:position pos:line="55" pos:column="20"/></literal></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></else></if>

        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">!<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">eos<pos:position pos:line="58" pos:column="17"/></name></expr>)<pos:position pos:line="58" pos:column="18"/></condition><then pos:line="58" pos:column="18"> <block pos:line="58" pos:column="19">{
            <comment type="block" pos:line="59" pos:column="13">/* Create a new LOB bucket to append and append it */</comment>
            <expr_stmt><expr><name pos:line="60" pos:column="13">nxt<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <call><name pos:line="60" pos:column="19">apr_bucket_alloc<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><sizeof pos:line="60" pos:column="36">sizeof<argument_list pos:line="60" pos:column="42">(<argument><expr><name pos:line="60" pos:column="43">apr_bucket<pos:position pos:line="60" pos:column="53"/></name> <operator pos:line="60" pos:column="54">*<pos:position pos:line="60" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="58">e<pos:position pos:line="60" pos:column="59"/></name><operator pos:line="60" pos:column="59">-&gt;<pos:position pos:line="60" pos:column="64"/></operator><name pos:line="60" pos:column="61">list<pos:position pos:line="60" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">APR_BUCKET_INIT<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">nxt<pos:position pos:line="61" pos:column="32"/></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="62" pos:column="13">nxt<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">-&gt;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="18">length<pos:position pos:line="62" pos:column="24"/></name></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <operator pos:line="62" pos:column="27">-<pos:position pos:line="62" pos:column="28"/></operator><literal type="number" pos:line="62" pos:column="28">1<pos:position pos:line="62" pos:column="29"/></literal></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">nxt<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">data<pos:position pos:line="63" pos:column="22"/></name></name>   <operator pos:line="63" pos:column="25">=<pos:position pos:line="63" pos:column="26"/></operator> <name><name pos:line="63" pos:column="27">e<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">-&gt;<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="30">data<pos:position pos:line="63" pos:column="34"/></name></name></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">nxt<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">type<pos:position pos:line="64" pos:column="22"/></name></name>   <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <operator pos:line="64" pos:column="27">&amp;<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="28">odbc_bucket_type<pos:position pos:line="64" pos:column="44"/></name></expr>;<pos:position pos:line="64" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">nxt<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">free<pos:position pos:line="65" pos:column="22"/></name></name>   <operator pos:line="65" pos:column="25">=<pos:position pos:line="65" pos:column="26"/></operator> <name pos:line="65" pos:column="27">apr_bucket_free<pos:position pos:line="65" pos:column="42"/></name></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">nxt<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">list<pos:position pos:line="66" pos:column="22"/></name></name>   <operator pos:line="66" pos:column="25">=<pos:position pos:line="66" pos:column="26"/></operator> <name><name pos:line="66" pos:column="27">e<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">list<pos:position pos:line="66" pos:column="34"/></name></name></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">nxt<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">-&gt;<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="18">start<pos:position pos:line="67" pos:column="23"/></name></name>  <operator pos:line="67" pos:column="25">=<pos:position pos:line="67" pos:column="26"/></operator> <name><name pos:line="67" pos:column="27">e<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">start<pos:position pos:line="67" pos:column="35"/></name></name> <operator pos:line="67" pos:column="36">+<pos:position pos:line="67" pos:column="37"/></operator> <operator pos:line="67" pos:column="38">*<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="39">len<pos:position pos:line="67" pos:column="42"/></name></expr>;<pos:position pos:line="67" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">APR_BUCKET_INSERT_AFTER<pos:position pos:line="68" pos:column="36"/></name><argument_list pos:line="68" pos:column="36">(<argument><expr><name pos:line="68" pos:column="37">e<pos:position pos:line="68" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="40">nxt<pos:position pos:line="68" pos:column="43"/></name></expr></argument>)<pos:position pos:line="68" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then>
        <else pos:line="70" pos:column="9">else <block pos:line="70" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">odbc_lob_bucket_destroy<pos:position pos:line="71" pos:column="36"/></name><argument_list pos:line="71" pos:column="36">(<argument><expr><name><name pos:line="71" pos:column="37">e<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">-&gt;<pos:position pos:line="71" pos:column="43"/></operator><name pos:line="71" pos:column="40">data<pos:position pos:line="71" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="73" pos:column="9">/* make current bucket into a heap bucket */</comment>
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">apr_bucket_heap_make<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><name pos:line="74" pos:column="30">e<pos:position pos:line="74" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="33">buf<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="38">*<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="39">len<pos:position pos:line="74" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="44">apr_bucket_free<pos:position pos:line="74" pos:column="59"/></name></expr></argument>)<pos:position pos:line="74" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="75" pos:column="9">*<pos:position pos:line="75" pos:column="10"/></operator><name pos:line="75" pos:column="10">str<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <name pos:line="75" pos:column="16">buf<pos:position pos:line="75" pos:column="19"/></name></expr>;<pos:position pos:line="75" pos:column="20"/></expr_stmt>

        <comment type="block" pos:line="77" pos:column="9">/* No data is success in this context */</comment>
        <expr_stmt><expr><name pos:line="78" pos:column="9">rc<pos:position pos:line="78" pos:column="11"/></name> <operator pos:line="78" pos:column="12">=<pos:position pos:line="78" pos:column="13"/></operator> <name pos:line="78" pos:column="14">SQL_SUCCESS<pos:position pos:line="78" pos:column="25"/></name></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>
    <return pos:line="80" pos:column="5">return <expr><call><name pos:line="80" pos:column="12">APR_FROM_SQL_RESULT<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><name pos:line="80" pos:column="32">rc<pos:position pos:line="80" pos:column="34"/></name></expr></argument>)<pos:position pos:line="80" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="36"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

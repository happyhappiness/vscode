<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1662_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ap_register_include_handler<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">tag<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">include_handler_fn_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">func<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">apr_hash_set<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">(<argument><expr><name pos:line="3" pos:column="18">include_handlers<pos:position pos:line="3" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="36">tag<pos:position pos:line="3" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="3" pos:column="41">strlen<pos:position pos:line="3" pos:column="47"/></name><argument_list pos:line="3" pos:column="47">(<argument><expr><name pos:line="3" pos:column="48">tag<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="3" pos:column="54">(<pos:position pos:line="3" pos:column="55"/></operator><specifier pos:line="3" pos:column="55">const<pos:position pos:line="3" pos:column="60"/></specifier> <name pos:line="3" pos:column="61">void<pos:position pos:line="3" pos:column="65"/></name> <operator pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></operator><operator pos:line="3" pos:column="67">)<pos:position pos:line="3" pos:column="68"/></operator><name pos:line="3" pos:column="68">func<pos:position pos:line="3" pos:column="72"/></name></expr></argument>)<pos:position pos:line="3" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="74"/></expr_stmt>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

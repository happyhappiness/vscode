<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1658_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">copy_headers_out<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">vbaton<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">key<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">value<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">s_baton_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">ctx<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">vbaton<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">done<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* XXXXX: Special Treatment required for MANY other headers. fixme.*/</comment>
    <switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">key<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr>]<pos:position pos:line="7" pos:column="19"/></index></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition> <block pos:line="7" pos:column="21">{
    <case pos:line="8" pos:column="5">case <expr><literal type="char" pos:line="8" pos:column="10">'c'<pos:position pos:line="8" pos:column="13"/></literal></expr>:<pos:position pos:line="8" pos:column="14"/></case>
    <case pos:line="9" pos:column="5">case <expr><literal type="char" pos:line="9" pos:column="10">'C'<pos:position pos:line="9" pos:column="13"/></literal></expr>:<pos:position pos:line="9" pos:column="14"/></case>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">strcasecmp<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"Content-Type"<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">key<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call> <operator pos:line="10" pos:column="45">==<pos:position pos:line="10" pos:column="47"/></operator> <literal type="number" pos:line="10" pos:column="48">0<pos:position pos:line="10" pos:column="49"/></literal></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50"> <block pos:line="10" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">ap_set_content_type<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name><name pos:line="11" pos:column="33">ctx<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">r<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="41">value<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="12" pos:column="13">done<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
            <break pos:line="13" pos:column="13">break;<pos:position pos:line="13" pos:column="19"/></break>
        }<pos:position pos:line="14" pos:column="10"/></block></then>
        <elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><call><name pos:line="15" pos:column="18">strcasecmp<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><literal type="string" pos:line="15" pos:column="29">"Connection"<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">key<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call> <operator pos:line="15" pos:column="48">==<pos:position pos:line="15" pos:column="50"/></operator> <literal type="number" pos:line="15" pos:column="51">0<pos:position pos:line="15" pos:column="52"/></literal></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53"> <block pos:line="15" pos:column="54">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">done<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <literal type="number" pos:line="16" pos:column="20">1<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><call><name pos:line="19" pos:column="18">strcasecmp<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><literal type="string" pos:line="19" pos:column="29">"Content-Encoding"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">key<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call> <operator pos:line="19" pos:column="54">==<pos:position pos:line="19" pos:column="56"/></operator> <literal type="number" pos:line="19" pos:column="57">0<pos:position pos:line="19" pos:column="58"/></literal></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59"> <block pos:line="19" pos:column="60">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">done<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="20">1<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
            <break pos:line="21" pos:column="13">break;<pos:position pos:line="21" pos:column="19"/></break>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="23" pos:column="9">else <if pos:line="23" pos:column="14">if <condition pos:line="23" pos:column="17">(<expr><call><name pos:line="23" pos:column="18">strcasecmp<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="string" pos:line="23" pos:column="29">"Content-Length"<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">key<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call> <operator pos:line="23" pos:column="52">==<pos:position pos:line="23" pos:column="54"/></operator> <literal type="number" pos:line="23" pos:column="55">0<pos:position pos:line="23" pos:column="56"/></literal></expr>)<pos:position pos:line="23" pos:column="57"/></condition><then pos:line="23" pos:column="57"> <block pos:line="23" pos:column="58">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">done<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>
            <break pos:line="25" pos:column="13">break;<pos:position pos:line="25" pos:column="19"/></break>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif></if>
        <break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>
    <case pos:line="28" pos:column="5">case <expr><literal type="char" pos:line="28" pos:column="10">'t'<pos:position pos:line="28" pos:column="13"/></literal></expr>:<pos:position pos:line="28" pos:column="14"/></case>
    <case pos:line="29" pos:column="5">case <expr><literal type="char" pos:line="29" pos:column="10">'T'<pos:position pos:line="29" pos:column="13"/></literal></expr>:<pos:position pos:line="29" pos:column="14"/></case>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">strcasecmp<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"Transfer-Encoding"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">key<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call> <operator pos:line="30" pos:column="50">==<pos:position pos:line="30" pos:column="52"/></operator> <literal type="number" pos:line="30" pos:column="53">0<pos:position pos:line="30" pos:column="54"/></literal></expr>)<pos:position pos:line="30" pos:column="55"/></condition><then pos:line="30" pos:column="55"> <block pos:line="30" pos:column="56">{
            <expr_stmt><expr><name pos:line="31" pos:column="13">done<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <literal type="number" pos:line="31" pos:column="20">1<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
            <break pos:line="32" pos:column="13">break;<pos:position pos:line="32" pos:column="19"/></break>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
        <break pos:line="34" pos:column="9">break;<pos:position pos:line="34" pos:column="15"/></break>
    <default pos:line="35" pos:column="5">default:<pos:position pos:line="35" pos:column="13"/></default>
            <break pos:line="36" pos:column="13">break;<pos:position pos:line="36" pos:column="19"/></break>
    }<pos:position pos:line="37" pos:column="6"/></block></switch>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">done<pos:position pos:line="39" pos:column="14"/></name></expr>)<pos:position pos:line="39" pos:column="15"/></condition><then pos:line="39" pos:column="15"> <block pos:line="39" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">apr_table_addn<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name><name pos:line="40" pos:column="24">ctx<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">r<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">-&gt;<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="32">headers_out<pos:position pos:line="40" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">key<pos:position pos:line="40" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="50">value<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">0<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

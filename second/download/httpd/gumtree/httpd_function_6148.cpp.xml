<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6148.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">open_if_needed<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">h2_task_output<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">output<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">ap_filter_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">f<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">apr_bucket_brigade<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">bb<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">output<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">-&gt;<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="17">state<pos:position pos:line="4" pos:column="22"/></name></name> <operator pos:line="4" pos:column="23">==<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">H2_TASK_OUT_INIT<pos:position pos:line="4" pos:column="42"/></name></expr>)<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43"> <block pos:line="4" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">h2_response<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">response<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">output<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">state<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">H2_TASK_OUT_STARTED<pos:position pos:line="6" pos:column="44"/></name></expr>;<pos:position pos:line="6" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="7" pos:column="9">response<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <call><name pos:line="7" pos:column="20">h2_from_h1_get_response<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name><name pos:line="7" pos:column="44">output<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">-&gt;<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="52">from_h1<pos:position pos:line="7" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">response<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
            <if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><name pos:line="9" pos:column="17">f<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
                <comment type="block" pos:line="10" pos:column="17">/* This happens currently when ap_die(status, r) is invoked
                 * by a read request filter.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="13" pos:column="17">ap_log_cerror<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">APLOG_MARK<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="43">APLOG_DEBUG<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="56">0<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="59">f<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">-&gt;<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="62">c<pos:position pos:line="13" pos:column="63"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="14" pos:column="31">"h2_task_output(%s): write without response "<pos:position pos:line="14" pos:column="76"/></literal>
                              <literal type="string" pos:line="15" pos:column="31">"for %s %s %s"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="16" pos:column="31">output<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">task<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">id<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="49">output<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">-&gt;<pos:position pos:line="16" pos:column="60"/></operator><name pos:line="16" pos:column="57">task<pos:position pos:line="16" pos:column="61"/></name><operator pos:line="16" pos:column="61">-&gt;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="63">request<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">-&gt;<pos:position pos:line="16" pos:column="75"/></operator><name pos:line="16" pos:column="72">method<pos:position pos:line="16" pos:column="78"/></name></name></expr></argument>, 
                              <argument><expr><name><name pos:line="17" pos:column="31">output<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">task<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">request<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">authority<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>, 
                              <argument><expr><name><name pos:line="18" pos:column="31">output<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">task<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">request<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">path<pos:position pos:line="18" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="19" pos:column="17">f<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">c<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">aborted<pos:position pos:line="19" pos:column="30"/></name></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <literal type="number" pos:line="19" pos:column="33">1<pos:position pos:line="19" pos:column="34"/></literal></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="20" pos:column="14"/></block></then></if>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name><name pos:line="21" pos:column="17">output<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">-&gt;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="25">task<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">io<pos:position pos:line="21" pos:column="33"/></name></name></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">apr_thread_cond_broadcast<pos:position pos:line="22" pos:column="42"/></name><argument_list pos:line="22" pos:column="42">(<argument><expr><name><name pos:line="22" pos:column="43">output<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">task<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">-&gt;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="57">io<pos:position pos:line="22" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></then></if>
            <return pos:line="24" pos:column="13">return <expr><name pos:line="24" pos:column="20">APR_ECONNABORTED<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">output<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">trailers_passed<pos:position pos:line="27" pos:column="32"/></name></name> <operator pos:line="27" pos:column="33">=<pos:position pos:line="27" pos:column="34"/></operator> <operator pos:line="27" pos:column="35">!<pos:position pos:line="27" pos:column="36"/></operator><operator pos:line="27" pos:column="36">!<pos:position pos:line="27" pos:column="37"/></operator><name><name pos:line="27" pos:column="37">response<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">trailers<pos:position pos:line="27" pos:column="55"/></name></name></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><call><name pos:line="28" pos:column="16">h2_mplx_out_open<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name><name pos:line="28" pos:column="33">output<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">task<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">mplx<pos:position pos:line="28" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="53">output<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">-&gt;<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="61">task<pos:position pos:line="28" pos:column="65"/></name><operator pos:line="28" pos:column="65">-&gt;<pos:position pos:line="28" pos:column="70"/></operator><name pos:line="28" pos:column="67">stream_id<pos:position pos:line="28" pos:column="76"/></name></name></expr></argument>, 
                                <argument><expr><name pos:line="29" pos:column="33">response<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">f<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">bb<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="50">output<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">-&gt;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="58">task<pos:position pos:line="29" pos:column="62"/></name><operator pos:line="29" pos:column="62">-&gt;<pos:position pos:line="29" pos:column="67"/></operator><name pos:line="29" pos:column="64">io<pos:position pos:line="29" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">APR_EOF<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

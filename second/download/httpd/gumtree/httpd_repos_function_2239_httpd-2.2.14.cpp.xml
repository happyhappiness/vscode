<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2239_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">cached_explode<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">apr_time_exp_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">xt<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">apr_time_t<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">t<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                   <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">exploded_time_cache_element<pos:position pos:line="2" pos:column="70"/></name></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">cache<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">int<pos:position pos:line="3" pos:column="39"/></name></type> <name pos:line="3" pos:column="40">use_gmt<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_int64_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">seconds<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">apr_time_sec<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name pos:line="5" pos:column="40">t<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">exploded_time_cache_element<pos:position pos:line="6" pos:column="39"/></name></name> <modifier pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></modifier></type><name pos:line="6" pos:column="41">cache_element<pos:position pos:line="6" pos:column="54"/></name> <init pos:line="6" pos:column="55">=
        <expr><operator pos:line="7" pos:column="9">&amp;<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><name><name pos:line="7" pos:column="11">cache<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><name pos:line="7" pos:column="17">seconds<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">&amp;<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="27">TIME_CACHE_MASK<pos:position pos:line="7" pos:column="42"/></name></expr>]<pos:position pos:line="7" pos:column="43"/></index></name><operator pos:line="7" pos:column="43">)<pos:position pos:line="7" pos:column="44"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">exploded_time_cache_element<pos:position pos:line="8" pos:column="39"/></name></name></type> <name pos:line="8" pos:column="40">cache_element_snapshot<pos:position pos:line="8" pos:column="62"/></name></decl>;<pos:position pos:line="8" pos:column="63"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* The cache is implemented as a ring buffer.  Each second,
     * it uses a different element in the buffer.  The timestamp
     * in the element indicates whether the element contains the
     * exploded time for the current second (vs the time
     * 'now - AP_TIME_RECENT_THRESHOLD' seconds ago).  If the
     * cached value is for the current time, we use it.  Otherwise,
     * we compute the apr_time_exp_t and store it in this
     * cache element. Note that the timestamp in the cache
     * element is updated only after the exploded time.  Thus
     * if two threads hit this cache element simultaneously
     * at the start of a new second, they'll both explode the
     * time and store it.  I.e., the writers will collide, but
     * they'll be writing the same value.
     */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">cache_element<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">t<pos:position pos:line="24" pos:column="25"/></name></name> <operator pos:line="24" pos:column="26">&gt;=<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="29">seconds<pos:position pos:line="24" pos:column="36"/></name></expr>)<pos:position pos:line="24" pos:column="37"/></condition><then pos:line="24" pos:column="37"> <block pos:line="24" pos:column="38">{
        <comment type="block" pos:line="25" pos:column="9">/* There is an intentional race condition in this design:
         * in a multithreaded app, one thread might be reading
         * from this cache_element to resolve a timestamp from
         * TIME_CACHE_SIZE seconds ago at the same time that
         * another thread is copying the exploded form of the
         * current time into the same cache_element.  (I.e., the
         * first thread might hit this element of the ring buffer
         * just as the element is being recycled.)  This can
         * also happen at the start of a new second, if a
         * reader accesses the cache_element after a writer
         * has updated cache_element.t but before the writer
         * has finished updating the whole cache_element.
         *
         * Rather than trying to prevent this race condition
         * with locks, we allow it to happen and then detect
         * and correct it.  The detection works like this:
         *   Step 1: Take a "snapshot" of the cache element by
         *           copying it into a temporary buffer.
         *   Step 2: Check whether the snapshot contains consistent
         *           data: the timestamps at the start and end of
         *           the cache_element should both match the 'seconds'
         *           value that we computed from the input time.
         *           If these three don't match, then the snapshot
         *           shows the cache_element in the middle of an
         *           update, and its contents are invalid.
         *   Step 3: If the snapshot is valid, use it.  Otherwise,
         *           just give up on the cache and explode the
         *           input time.
         */</comment>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">memcpy<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><operator pos:line="54" pos:column="16">&amp;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="17">cache_element_snapshot<pos:position pos:line="54" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="41">cache_element<pos:position pos:line="54" pos:column="54"/></name></expr></argument>,
               <argument><expr><sizeof pos:line="55" pos:column="16">sizeof<argument_list pos:line="55" pos:column="22">(<argument><expr pos:line="55" pos:column="23">struct <name pos:line="55" pos:column="30">exploded_time_cache_element<pos:position pos:line="55" pos:column="57"/></name></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="60"/></expr_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">(<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">seconds<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">!=<pos:position pos:line="56" pos:column="24"/></operator> <name><name pos:line="56" pos:column="25">cache_element_snapshot<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">.<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="48">t<pos:position pos:line="56" pos:column="49"/></name></name><operator pos:line="56" pos:column="49">)<pos:position pos:line="56" pos:column="50"/></operator> <operator pos:line="56" pos:column="51">||<pos:position pos:line="56" pos:column="53"/></operator>
            <operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">seconds<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">!=<pos:position pos:line="57" pos:column="24"/></operator> <name><name pos:line="57" pos:column="25">cache_element_snapshot<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">.<pos:position pos:line="57" pos:column="48"/></operator><name pos:line="57" pos:column="48">t_validate<pos:position pos:line="57" pos:column="58"/></name></name><operator pos:line="57" pos:column="58">)<pos:position pos:line="57" pos:column="59"/></operator></expr>)<pos:position pos:line="57" pos:column="60"/></condition><then pos:line="57" pos:column="60"> <block pos:line="57" pos:column="61">{
            <comment type="block" pos:line="58" pos:column="13">/* Invalid snapshot */</comment>
            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><name pos:line="59" pos:column="17">use_gmt<pos:position pos:line="59" pos:column="24"/></name></expr>)<pos:position pos:line="59" pos:column="25"/></condition><then pos:line="59" pos:column="25"> <block pos:line="59" pos:column="26">{
                <return pos:line="60" pos:column="17">return <expr><call><name pos:line="60" pos:column="24">apr_time_exp_gmt<pos:position pos:line="60" pos:column="40"/></name><argument_list pos:line="60" pos:column="40">(<argument><expr><name pos:line="60" pos:column="41">xt<pos:position pos:line="60" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="45">t<pos:position pos:line="60" pos:column="46"/></name></expr></argument>)<pos:position pos:line="60" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="48"/></return>
            }<pos:position pos:line="61" pos:column="14"/></block></then>
            <else pos:line="62" pos:column="13">else <block pos:line="62" pos:column="18">{
                <return pos:line="63" pos:column="17">return <expr><call><name pos:line="63" pos:column="24">apr_time_exp_lt<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><name pos:line="63" pos:column="40">xt<pos:position pos:line="63" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="44">t<pos:position pos:line="63" pos:column="45"/></name></expr></argument>)<pos:position pos:line="63" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="47"/></return>
            }<pos:position pos:line="64" pos:column="14"/></block></else></if>
        }<pos:position pos:line="65" pos:column="10"/></block></then>
        <else pos:line="66" pos:column="9">else <block pos:line="66" pos:column="14">{
            <comment type="block" pos:line="67" pos:column="13">/* Valid snapshot */</comment>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">memcpy<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<argument><expr><name pos:line="68" pos:column="20">xt<pos:position pos:line="68" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="24">&amp;<pos:position pos:line="68" pos:column="29"/></operator><operator pos:line="68" pos:column="25">(<pos:position pos:line="68" pos:column="26"/></operator><name><name pos:line="68" pos:column="26">cache_element_snapshot<pos:position pos:line="68" pos:column="48"/></name><operator pos:line="68" pos:column="48">.<pos:position pos:line="68" pos:column="49"/></operator><name pos:line="68" pos:column="49">xt<pos:position pos:line="68" pos:column="51"/></name></name><operator pos:line="68" pos:column="51">)<pos:position pos:line="68" pos:column="52"/></operator></expr></argument>,
                   <argument><expr><sizeof pos:line="69" pos:column="20">sizeof<argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">apr_time_exp_t<pos:position pos:line="69" pos:column="41"/></name></expr></argument>)<pos:position pos:line="69" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="69" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></else></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then>
    <else pos:line="72" pos:column="5">else <block pos:line="72" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="73" pos:column="9">apr_status_t<pos:position pos:line="73" pos:column="21"/></name></type> <name pos:line="73" pos:column="22">r<pos:position pos:line="73" pos:column="23"/></name></decl>;<pos:position pos:line="73" pos:column="24"/></decl_stmt>
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">use_gmt<pos:position pos:line="74" pos:column="20"/></name></expr>)<pos:position pos:line="74" pos:column="21"/></condition><then pos:line="74" pos:column="21"> <block pos:line="74" pos:column="22">{
            <expr_stmt><expr><name pos:line="75" pos:column="13">r<pos:position pos:line="75" pos:column="14"/></name> <operator pos:line="75" pos:column="15">=<pos:position pos:line="75" pos:column="16"/></operator> <call><name pos:line="75" pos:column="17">apr_time_exp_gmt<pos:position pos:line="75" pos:column="33"/></name><argument_list pos:line="75" pos:column="33">(<argument><expr><name pos:line="75" pos:column="34">xt<pos:position pos:line="75" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="38">t<pos:position pos:line="75" pos:column="39"/></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></then>
        <else pos:line="77" pos:column="9">else <block pos:line="77" pos:column="14">{
            <expr_stmt><expr><name pos:line="78" pos:column="13">r<pos:position pos:line="78" pos:column="14"/></name> <operator pos:line="78" pos:column="15">=<pos:position pos:line="78" pos:column="16"/></operator> <call><name pos:line="78" pos:column="17">apr_time_exp_lt<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">xt<pos:position pos:line="78" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="37">t<pos:position pos:line="78" pos:column="38"/></name></expr></argument>)<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></else></if>
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">r<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">!=<pos:position pos:line="80" pos:column="17"/></operator> <name pos:line="80" pos:column="18">APR_SUCCESS<pos:position pos:line="80" pos:column="29"/></name></expr>)<pos:position pos:line="80" pos:column="30"/></condition><then pos:line="80" pos:column="30"> <block pos:line="80" pos:column="31">{
            <return pos:line="81" pos:column="13">return <expr><name pos:line="81" pos:column="20">r<pos:position pos:line="81" pos:column="21"/></name></expr>;<pos:position pos:line="81" pos:column="22"/></return>
        }<pos:position pos:line="82" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">cache_element<pos:position pos:line="83" pos:column="22"/></name><operator pos:line="83" pos:column="22">-&gt;<pos:position pos:line="83" pos:column="27"/></operator><name pos:line="83" pos:column="24">t<pos:position pos:line="83" pos:column="25"/></name></name> <operator pos:line="83" pos:column="26">=<pos:position pos:line="83" pos:column="27"/></operator> <name pos:line="83" pos:column="28">seconds<pos:position pos:line="83" pos:column="35"/></name></expr>;<pos:position pos:line="83" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">memcpy<pos:position pos:line="84" pos:column="15"/></name><argument_list pos:line="84" pos:column="15">(<argument><expr><operator pos:line="84" pos:column="16">&amp;<pos:position pos:line="84" pos:column="21"/></operator><operator pos:line="84" pos:column="17">(<pos:position pos:line="84" pos:column="18"/></operator><name><name pos:line="84" pos:column="18">cache_element<pos:position pos:line="84" pos:column="31"/></name><operator pos:line="84" pos:column="31">-&gt;<pos:position pos:line="84" pos:column="36"/></operator><name pos:line="84" pos:column="33">xt<pos:position pos:line="84" pos:column="35"/></name></name><operator pos:line="84" pos:column="35">)<pos:position pos:line="84" pos:column="36"/></operator></expr></argument>, <argument><expr><name pos:line="84" pos:column="38">xt<pos:position pos:line="84" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="42">sizeof<argument_list pos:line="84" pos:column="48">(<argument><expr><name pos:line="84" pos:column="49">apr_time_exp_t<pos:position pos:line="84" pos:column="63"/></name></expr></argument>)<pos:position pos:line="84" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="85" pos:column="9">cache_element<pos:position pos:line="85" pos:column="22"/></name><operator pos:line="85" pos:column="22">-&gt;<pos:position pos:line="85" pos:column="27"/></operator><name pos:line="85" pos:column="24">t_validate<pos:position pos:line="85" pos:column="34"/></name></name> <operator pos:line="85" pos:column="35">=<pos:position pos:line="85" pos:column="36"/></operator> <name pos:line="85" pos:column="37">seconds<pos:position pos:line="85" pos:column="44"/></name></expr>;<pos:position pos:line="85" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name><name pos:line="87" pos:column="5">xt<pos:position pos:line="87" pos:column="7"/></name><operator pos:line="87" pos:column="7">-&gt;<pos:position pos:line="87" pos:column="12"/></operator><name pos:line="87" pos:column="9">tm_usec<pos:position pos:line="87" pos:column="16"/></name></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <operator pos:line="87" pos:column="19">(<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="20">int<pos:position pos:line="87" pos:column="23"/></name><operator pos:line="87" pos:column="23">)<pos:position pos:line="87" pos:column="24"/></operator><call><name pos:line="87" pos:column="24">apr_time_usec<pos:position pos:line="87" pos:column="37"/></name><argument_list pos:line="87" pos:column="37">(<argument><expr><name pos:line="87" pos:column="38">t<pos:position pos:line="87" pos:column="39"/></name></expr></argument>)<pos:position pos:line="87" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="41"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><name pos:line="88" pos:column="12">APR_SUCCESS<pos:position pos:line="88" pos:column="23"/></name></expr>;<pos:position pos:line="88" pos:column="24"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

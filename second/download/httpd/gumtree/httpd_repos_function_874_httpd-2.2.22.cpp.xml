<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_874_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ssl_var_lookup_ssl_cert_dn<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">apr_pool_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">p<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">X509_NAME<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">xsname<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="75">char<pos:position pos:line="1" pos:column="79"/></name> <modifier pos:line="1" pos:column="80">*<pos:position pos:line="1" pos:column="81"/></modifier></type><name pos:line="1" pos:column="81">var<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">result<pos:position pos:line="3" pos:column="17"/></name></decl>, <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="20">ptr<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">X509_NAME_ENTRY<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">xsne<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="12">j<pos:position pos:line="5" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="15">n<pos:position pos:line="5" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="18">idx<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">varlen<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* if an _N suffix is used, find the Nth attribute of given name */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">ptr<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">strchr<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">var<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="23">'_'<pos:position pos:line="9" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">ptr<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">!=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&amp;&amp;<pos:position pos:line="10" pos:column="31"/></operator> <call><name pos:line="10" pos:column="24">strspn<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">ptr<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">+<pos:position pos:line="10" pos:column="36"/></operator> <literal type="number" pos:line="10" pos:column="37">1<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="40">"0123456789"<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call> <operator pos:line="10" pos:column="54">==<pos:position pos:line="10" pos:column="56"/></operator> <call><name pos:line="10" pos:column="57">strlen<pos:position pos:line="10" pos:column="63"/></name><argument_list pos:line="10" pos:column="63">(<argument><expr><name pos:line="10" pos:column="64">ptr<pos:position pos:line="10" pos:column="67"/></name> <operator pos:line="10" pos:column="68">+<pos:position pos:line="10" pos:column="69"/></operator> <literal type="number" pos:line="10" pos:column="70">1<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="73"/></condition><then pos:line="10" pos:column="73"> <block pos:line="10" pos:column="74">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">idx<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">atoi<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">ptr<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">+<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">varlen<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">ptr<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">-<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">var<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <else pos:line="13" pos:column="7">else <block pos:line="13" pos:column="12">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">varlen<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">strlen<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">var<pos:position pos:line="14" pos:column="28"/></name></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">result<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">NULL<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>

    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">i<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></init> <condition><expr><name><name pos:line="19" pos:column="17">ssl_var_lookup_ssl_cert_dn_rec<pos:position pos:line="19" pos:column="47"/></name><index pos:line="19" pos:column="47">[<expr><name pos:line="19" pos:column="48">i<pos:position pos:line="19" pos:column="49"/></name></expr>]<pos:position pos:line="19" pos:column="50"/></index></name><operator pos:line="19" pos:column="50">.<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">name<pos:position pos:line="19" pos:column="55"/></name> <operator pos:line="19" pos:column="56">!=<pos:position pos:line="19" pos:column="58"/></operator> <name pos:line="19" pos:column="59">NULL<pos:position pos:line="19" pos:column="63"/></name></expr>;<pos:position pos:line="19" pos:column="64"/></condition> <incr><expr><name pos:line="19" pos:column="65">i<pos:position pos:line="19" pos:column="66"/></name><operator pos:line="19" pos:column="66">++<pos:position pos:line="19" pos:column="68"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="69"/></control> <block pos:line="19" pos:column="70">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">strEQn<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">var<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="25">ssl_var_lookup_ssl_cert_dn_rec<pos:position pos:line="20" pos:column="55"/></name><index pos:line="20" pos:column="55">[<expr><name pos:line="20" pos:column="56">i<pos:position pos:line="20" pos:column="57"/></name></expr>]<pos:position pos:line="20" pos:column="58"/></index></name><operator pos:line="20" pos:column="58">.<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">name<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="65">varlen<pos:position pos:line="20" pos:column="71"/></name></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call>
            <operator pos:line="21" pos:column="13">&amp;&amp;<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="16">strlen<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name><name pos:line="21" pos:column="23">ssl_var_lookup_ssl_cert_dn_rec<pos:position pos:line="21" pos:column="53"/></name><index pos:line="21" pos:column="53">[<expr><name pos:line="21" pos:column="54">i<pos:position pos:line="21" pos:column="55"/></name></expr>]<pos:position pos:line="21" pos:column="56"/></index></name><operator pos:line="21" pos:column="56">.<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="57">name<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call> <operator pos:line="21" pos:column="63">==<pos:position pos:line="21" pos:column="65"/></operator> <name pos:line="21" pos:column="66">varlen<pos:position pos:line="21" pos:column="72"/></name></expr>)<pos:position pos:line="21" pos:column="73"/></condition><then pos:line="21" pos:column="73"> <block pos:line="21" pos:column="74">{
            <for pos:line="22" pos:column="13">for <control pos:line="22" pos:column="17">(<init><expr><name pos:line="22" pos:column="18">j<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr>;<pos:position pos:line="22" pos:column="24"/></init> <condition><expr><name pos:line="22" pos:column="25">j<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">&lt;<pos:position pos:line="22" pos:column="31"/></operator> <call><name pos:line="22" pos:column="29">sk_X509_NAME_ENTRY_num<pos:position pos:line="22" pos:column="51"/></name><argument_list pos:line="22" pos:column="51">(<argument><expr><operator pos:line="22" pos:column="52">(<pos:position pos:line="22" pos:column="53"/></operator><call><name pos:line="22" pos:column="53">STACK_OF<pos:position pos:line="22" pos:column="61"/></name><argument_list pos:line="22" pos:column="61">(<argument><expr><name pos:line="22" pos:column="62">X509_NAME_ENTRY<pos:position pos:line="22" pos:column="77"/></name></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call> <operator pos:line="22" pos:column="79">*<pos:position pos:line="22" pos:column="80"/></operator><operator pos:line="22" pos:column="80">)<pos:position pos:line="22" pos:column="81"/></operator>
                                                 <call><name pos:line="23" pos:column="50">X509_NAME_get_entries<pos:position pos:line="23" pos:column="71"/></name><argument_list pos:line="23" pos:column="71">(<argument><expr><name pos:line="23" pos:column="72">xsname<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="81"/></condition>
                 <incr><expr><name pos:line="24" pos:column="18">j<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">++<pos:position pos:line="24" pos:column="21"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="22"/></control> <block pos:line="24" pos:column="23">{
                <expr_stmt><expr><name pos:line="25" pos:column="17">xsne<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <call><name pos:line="25" pos:column="24">sk_X509_NAME_ENTRY_value<pos:position pos:line="25" pos:column="48"/></name><argument_list pos:line="25" pos:column="48">(<argument><expr><operator pos:line="25" pos:column="49">(<pos:position pos:line="25" pos:column="50"/></operator><call><name pos:line="25" pos:column="50">STACK_OF<pos:position pos:line="25" pos:column="58"/></name><argument_list pos:line="25" pos:column="58">(<argument><expr><name pos:line="25" pos:column="59">X509_NAME_ENTRY<pos:position pos:line="25" pos:column="74"/></name></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></call> <operator pos:line="25" pos:column="76">*<pos:position pos:line="25" pos:column="77"/></operator><operator pos:line="25" pos:column="77">)<pos:position pos:line="25" pos:column="78"/></operator>
                                             <call><name pos:line="26" pos:column="46">X509_NAME_get_entries<pos:position pos:line="26" pos:column="67"/></name><argument_list pos:line="26" pos:column="67">(<argument><expr><name pos:line="26" pos:column="68">xsname<pos:position pos:line="26" pos:column="74"/></name></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="77">j<pos:position pos:line="26" pos:column="78"/></name></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="80"/></expr_stmt>

                <expr_stmt><expr><name pos:line="28" pos:column="17">n<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator><call><name pos:line="28" pos:column="20">OBJ_obj2nid<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">ASN1_OBJECT<pos:position pos:line="28" pos:column="44"/></name> <operator pos:line="28" pos:column="45">*<pos:position pos:line="28" pos:column="46"/></operator><operator pos:line="28" pos:column="46">)<pos:position pos:line="28" pos:column="47"/></operator><call><name pos:line="28" pos:column="47">X509_NAME_ENTRY_get_object<pos:position pos:line="28" pos:column="73"/></name><argument_list pos:line="28" pos:column="73">(<argument><expr><name pos:line="28" pos:column="74">xsne<pos:position pos:line="28" pos:column="78"/></name></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="81"/></expr_stmt>

                <if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">n<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">==<pos:position pos:line="30" pos:column="25"/></operator> <name><name pos:line="30" pos:column="26">ssl_var_lookup_ssl_cert_dn_rec<pos:position pos:line="30" pos:column="56"/></name><index pos:line="30" pos:column="56">[<expr><name pos:line="30" pos:column="57">i<pos:position pos:line="30" pos:column="58"/></name></expr>]<pos:position pos:line="30" pos:column="59"/></index></name><operator pos:line="30" pos:column="59">.<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="60">nid<pos:position pos:line="30" pos:column="63"/></name> <operator pos:line="30" pos:column="64">&amp;&amp;<pos:position pos:line="30" pos:column="74"/></operator> <name pos:line="30" pos:column="67">idx<pos:position pos:line="30" pos:column="70"/></name><operator pos:line="30" pos:column="70">--<pos:position pos:line="30" pos:column="72"/></operator> <operator pos:line="30" pos:column="73">==<pos:position pos:line="30" pos:column="75"/></operator> <literal type="number" pos:line="30" pos:column="76">0<pos:position pos:line="30" pos:column="77"/></literal></expr>)<pos:position pos:line="30" pos:column="78"/></condition><then pos:line="30" pos:column="78"> <block pos:line="30" pos:column="79">{
                    <decl_stmt><decl><type><name pos:line="31" pos:column="21">unsigned<pos:position pos:line="31" pos:column="29"/></name> <name pos:line="31" pos:column="30">char<pos:position pos:line="31" pos:column="34"/></name> <modifier pos:line="31" pos:column="35">*<pos:position pos:line="31" pos:column="36"/></modifier></type><name pos:line="31" pos:column="36">data<pos:position pos:line="31" pos:column="40"/></name> <init pos:line="31" pos:column="41">= <expr><call><name pos:line="31" pos:column="43">X509_NAME_ENTRY_get_data_ptr<pos:position pos:line="31" pos:column="71"/></name><argument_list pos:line="31" pos:column="71">(<argument><expr><name pos:line="31" pos:column="72">xsne<pos:position pos:line="31" pos:column="76"/></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="78"/></decl_stmt>
                    <comment type="block" pos:line="32" pos:column="21">/* cast needed from unsigned char to char */</comment>
                    <expr_stmt><expr><name pos:line="33" pos:column="21">result<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <call><name pos:line="33" pos:column="30">apr_pstrmemdup<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">(<argument><expr><name pos:line="33" pos:column="45">p<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="48">(<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="49">char<pos:position pos:line="33" pos:column="53"/></name> <operator pos:line="33" pos:column="54">*<pos:position pos:line="33" pos:column="55"/></operator><operator pos:line="33" pos:column="55">)<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="56">data<pos:position pos:line="33" pos:column="60"/></name></expr></argument>,
                                            <argument><expr><call><name pos:line="34" pos:column="45">X509_NAME_ENTRY_get_data_len<pos:position pos:line="34" pos:column="73"/></name><argument_list pos:line="34" pos:column="73">(<argument><expr><name pos:line="34" pos:column="74">xsne<pos:position pos:line="34" pos:column="78"/></name></expr></argument>)<pos:position pos:line="34" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="81"/></expr_stmt>
<cpp:if pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">if<pos:position pos:line="35" pos:column="4"/></cpp:directive> <expr><name pos:line="35" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="35" pos:column="23"/></name></expr></cpp:if>
                    <expr_stmt><expr><call><name pos:line="36" pos:column="21">ap_xlate_proto_from_ascii<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><name pos:line="36" pos:column="47">result<pos:position pos:line="36" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="55">X509_NAME_ENTRY_get_data_len<pos:position pos:line="36" pos:column="83"/></name><argument_list pos:line="36" pos:column="83">(<argument><expr><name pos:line="36" pos:column="84">xsne<pos:position pos:line="36" pos:column="88"/></name></expr></argument>)<pos:position pos:line="36" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="91"/></expr_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="37" pos:column="8">/* APR_CHARSET_EBCDIC */</comment>
                    <break pos:line="38" pos:column="21">break;<pos:position pos:line="38" pos:column="27"/></break>
                }<pos:position pos:line="39" pos:column="18"/></block></then></if>
            }<pos:position pos:line="40" pos:column="14"/></block></for>
            <break pos:line="41" pos:column="13">break;<pos:position pos:line="41" pos:column="19"/></break>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></for>
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">result<pos:position pos:line="44" pos:column="18"/></name></expr>;<pos:position pos:line="44" pos:column="19"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7537.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">xcalloc<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">size_t<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">num<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">size_t<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">size<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">void<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">ret<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><call><name pos:line="3" pos:column="17">calloc<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">(<argument><expr><name pos:line="3" pos:column="24">num<pos:position pos:line="3" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="29">size<pos:position pos:line="3" pos:column="33"/></name></expr></argument>)<pos:position pos:line="3" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">ret<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">fprintf<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">stderr<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="25">"Could not allocate memory (%"<pos:position pos:line="5" pos:column="55"/></literal>
                <name pos:line="6" pos:column="17">APR_SIZE_T_FMT<pos:position pos:line="6" pos:column="31"/></name><literal type="string" pos:line="6" pos:column="31">" bytes)\n"<pos:position pos:line="6" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="44">size<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">*<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="49">num<pos:position pos:line="6" pos:column="52"/></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">exit<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">ret<pos:position pos:line="9" pos:column="15"/></name></expr>;<pos:position pos:line="9" pos:column="16"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

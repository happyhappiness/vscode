<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6596.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">out_close<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">h2_mplx<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">m<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">h2_task<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">task<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">APR_SUCCESS<pos:position pos:line="3" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">h2_stream<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">stream<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">task<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15"> <block pos:line="6" pos:column="16">{
        <return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">APR_ECONNABORTED<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="10" pos:column="5">stream<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">h2_ihash_get<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name><name pos:line="10" pos:column="27">m<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">streams<pos:position pos:line="10" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="39">task<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">stream_id<pos:position pos:line="10" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">stream<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17"> <block pos:line="11" pos:column="18">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">APR_ECONNABORTED<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name><name pos:line="15" pos:column="10">task<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">response<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">&amp;&amp;<pos:position pos:line="15" pos:column="35"/></operator> <operator pos:line="15" pos:column="28">!<pos:position pos:line="15" pos:column="29"/></operator><name><name pos:line="15" pos:column="29">task<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">rst_error<pos:position pos:line="15" pos:column="44"/></name></name></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45"> <block pos:line="15" pos:column="46">{
        <comment type="block" pos:line="16" pos:column="9">/* In case a close comes before a response was created,
         * insert an error one so that our streams can properly reset.
         */</comment>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">h2_response<pos:position pos:line="19" pos:column="20"/></name> <modifier pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></modifier></type><name pos:line="19" pos:column="22">r<pos:position pos:line="19" pos:column="23"/></name> <init pos:line="19" pos:column="24">= <expr><call><name pos:line="19" pos:column="26">h2_response_die<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">task<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">stream_id<pos:position pos:line="19" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="59">500<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>, 
                                         <argument><expr><name><name pos:line="20" pos:column="42">task<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">request<pos:position pos:line="20" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="57">m<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">-&gt;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="60">pool<pos:position pos:line="20" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="66"/></decl_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">status<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">out_open<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">m<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="30">task<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">stream_id<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">r<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ap_log_cerror<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">APLOG_MARK<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">APLOG_DEBUG<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">status<pos:position pos:line="22" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="56">m<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">-&gt;<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="59">c<pos:position pos:line="22" pos:column="60"/></name></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="62">APLOGNO<pos:position pos:line="22" pos:column="69"/></name><argument_list pos:line="22" pos:column="69">(<argument><expr><literal type="number" pos:line="22" pos:column="70">03393<pos:position pos:line="22" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call>
                      <literal type="string" pos:line="23" pos:column="23">"h2_mplx(%s): close, no response, no rst"<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="66">task<pos:position pos:line="23" pos:column="70"/></name><operator pos:line="23" pos:column="70">-&gt;<pos:position pos:line="23" pos:column="75"/></operator><name pos:line="23" pos:column="72">id<pos:position pos:line="23" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ap_log_cerror<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">APLOG_MARK<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">APLOG_TRACE2<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">status<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="53">m<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">c<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="26" pos:column="19">"h2_mplx(%s): close"<pos:position pos:line="26" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="41">task<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">-&gt;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="47">id<pos:position pos:line="26" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">task<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">output<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">beam<pos:position pos:line="27" pos:column="26"/></name></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27"> <block pos:line="27" pos:column="28">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">status<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">h2_beam_close<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name><name pos:line="28" pos:column="32">task<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">output<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">.<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">beam<pos:position pos:line="28" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">h2_beam_log<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name><name pos:line="29" pos:column="21">task<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">output<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">.<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">beam<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="40">task<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">stream_id<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="57">"out_close"<pos:position pos:line="29" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="70">m<pos:position pos:line="29" pos:column="71"/></name><operator pos:line="29" pos:column="71">-&gt;<pos:position pos:line="29" pos:column="76"/></operator><name pos:line="29" pos:column="73">c<pos:position pos:line="29" pos:column="74"/></name></name></expr></argument>, 
                    <argument><expr><name pos:line="30" pos:column="21">APLOG_TRACE2<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">output_consumed_signal<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">m<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">task<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">have_out_data_for<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">m<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="26">task<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">-&gt;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="32">stream_id<pos:position pos:line="33" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">status<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3139_httpd-2.2.34.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">XML_Bool<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">XMLCALL<pos:position pos:line="1" pos:column="17"/></name></type>
<name pos:line="2" pos:column="1">XML_ParserReset<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">XML_Parser<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">parser<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">XML_Char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">encodingName<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">TAG<pos:position pos:line="4" pos:column="6"/></name> <modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier></type><name pos:line="4" pos:column="8">tStk<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">parentParser<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">XML_FALSE<pos:position pos:line="6" pos:column="21"/></name></expr>;<pos:position pos:line="6" pos:column="22"/></return></block></then></if>
  <comment type="block" pos:line="7" pos:column="3">/* move tagStack to freeTagList */</comment>
  <expr_stmt><expr><name pos:line="8" pos:column="3">tStk<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <name pos:line="8" pos:column="10">tagStack<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><name pos:line="9" pos:column="10">tStk<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition> <block pos:line="9" pos:column="16">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">TAG<pos:position pos:line="10" pos:column="8"/></name> <modifier pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></modifier></type><name pos:line="10" pos:column="10">tag<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><name pos:line="10" pos:column="16">tStk<pos:position pos:line="10" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">tStk<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name><name pos:line="11" pos:column="12">tStk<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">parent<pos:position pos:line="11" pos:column="24"/></name></name></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">tag<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">-&gt;<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="10">parent<pos:position pos:line="12" pos:column="16"/></name></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">freeTagList<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">moveToFreeBindingList<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">parser<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="35">tag<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">bindings<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">tag<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">bindings<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">NULL<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">freeTagList<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">tag<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">moveToFreeBindingList<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">parser<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">inheritedBindings<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">FREE<pos:position pos:line="18" pos:column="7"/></name><argument_list pos:line="18" pos:column="7">(<argument><expr><name pos:line="18" pos:column="8">unknownEncodingMem<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">unknownEncodingRelease<pos:position pos:line="19" pos:column="29"/></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="5">unknownEncodingRelease<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">unknownEncodingData<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">poolClear<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><operator pos:line="21" pos:column="13">&amp;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="14">tempPool<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">poolClear<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><operator pos:line="22" pos:column="13">&amp;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="14">temp2Pool<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">parserInit<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">parser<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="22">encodingName<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">dtdReset<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">_dtd<pos:position pos:line="24" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="18">&amp;<pos:position pos:line="24" pos:column="23"/></operator><name><name pos:line="24" pos:column="19">parser<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">m_mem<pos:position pos:line="24" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
  <return pos:line="25" pos:column="3">return <expr><call><name pos:line="25" pos:column="10">setContext<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">parser<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="29">implicitContext<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

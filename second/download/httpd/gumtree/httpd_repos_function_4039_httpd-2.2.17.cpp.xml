<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4039_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">could_be_empty_branch<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">uschar<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">code<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">uschar<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">endcode<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">BOOL<pos:position pos:line="2" pos:column="70"/></name></type> <name pos:line="2" pos:column="71">utf8<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><specifier pos:line="4" pos:column="1">register<pos:position pos:line="4" pos:column="9"/></specifier> <name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">c<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
<for pos:line="5" pos:column="1">for <control pos:line="5" pos:column="5">(<init><expr><name pos:line="5" pos:column="6">code<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <call><name pos:line="5" pos:column="13">first_significant_code<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name pos:line="5" pos:column="36">code<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">+<pos:position pos:line="5" pos:column="42"/></operator> <literal type="number" pos:line="5" pos:column="43">1<pos:position pos:line="5" pos:column="44"/></literal> <operator pos:line="5" pos:column="45">+<pos:position pos:line="5" pos:column="46"/></operator> <name pos:line="5" pos:column="47">LINK_SIZE<pos:position pos:line="5" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="58">NULL<pos:position pos:line="5" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="64">0<pos:position pos:line="5" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="67">TRUE<pos:position pos:line="5" pos:column="71"/></name></expr></argument>)<pos:position pos:line="5" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="73"/></init>
     <condition><expr><name pos:line="6" pos:column="6">code<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">&lt;<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="13">endcode<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></condition>
     <incr><expr><name pos:line="7" pos:column="6">code<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <call><name pos:line="7" pos:column="13">first_significant_code<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">code<pos:position pos:line="7" pos:column="40"/></name> <operator pos:line="7" pos:column="41">+<pos:position pos:line="7" pos:column="42"/></operator> <name><name pos:line="7" pos:column="43">OP_lengths<pos:position pos:line="7" pos:column="53"/></name><index pos:line="7" pos:column="53">[<expr><name pos:line="7" pos:column="54">c<pos:position pos:line="7" pos:column="55"/></name></expr>]<pos:position pos:line="7" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="58">NULL<pos:position pos:line="7" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="64">0<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="67">TRUE<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr></incr>)<pos:position pos:line="7" pos:column="73"/></control>
  <block pos:line="8" pos:column="3">{
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">uschar<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">ccode<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">c<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <operator pos:line="11" pos:column="7">*<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">code<pos:position pos:line="11" pos:column="12"/></name></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">c<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">&gt;=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="12">OP_BRA<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19">
    <block pos:line="14" pos:column="5">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">BOOL<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">empty_branch<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">GET<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">code<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="19">1<pos:position pos:line="16" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></call> <operator pos:line="16" pos:column="22">==<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27"> <block type="pseudo"><return pos:line="16" pos:column="28">return <expr><name pos:line="16" pos:column="35">TRUE<pos:position pos:line="16" pos:column="39"/></name></expr>;<pos:position pos:line="16" pos:column="40"/></return></block></then></if>    <comment type="block" pos:line="16" pos:column="44">/* Hit unclosed bracket */</comment>

    <comment type="block" pos:line="18" pos:column="5">/* Scan a closed bracket */</comment>

    <expr_stmt><expr><name pos:line="20" pos:column="5">empty_branch<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">FALSE<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
    <do pos:line="21" pos:column="5">do
      <block pos:line="22" pos:column="7">{
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">!<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">empty_branch<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">&amp;&amp;<pos:position pos:line="23" pos:column="35"/></operator> <call><name pos:line="23" pos:column="28">could_be_empty_branch<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">code<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="56">endcode<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="65">utf8<pos:position pos:line="23" pos:column="69"/></name></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="71"/></condition><then pos:line="23" pos:column="71">
        <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">empty_branch<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">TRUE<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="25" pos:column="7">code<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">+=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">GET<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">code<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="25">1<pos:position pos:line="25" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="26" pos:column="8"/></block>
    while <condition pos:line="27" pos:column="11">(<expr><operator pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">code<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">==<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">OP_ALT<pos:position pos:line="27" pos:column="27"/></name></expr>)<pos:position pos:line="27" pos:column="28"/></condition>;<pos:position pos:line="27" pos:column="29"/></do>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">empty_branch<pos:position pos:line="28" pos:column="22"/></name></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> <block type="pseudo"><return pos:line="28" pos:column="24">return <expr><name pos:line="28" pos:column="31">FALSE<pos:position pos:line="28" pos:column="36"/></name></expr>;<pos:position pos:line="28" pos:column="37"/></return></block></then></if>   <comment type="block" pos:line="28" pos:column="40">/* All branches are non-empty */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">code<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">+=<pos:position pos:line="29" pos:column="12"/></operator> <literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal> <operator pos:line="29" pos:column="15">+<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">LINK_SIZE<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">c<pos:position pos:line="30" pos:column="6"/></name> <operator pos:line="30" pos:column="7">=<pos:position pos:line="30" pos:column="8"/></operator> <operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">code<pos:position pos:line="30" pos:column="14"/></name></expr>;<pos:position pos:line="30" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then>

  <else pos:line="33" pos:column="3">else <block type="pseudo"><switch pos:line="33" pos:column="8">switch <condition pos:line="33" pos:column="15">(<expr><name pos:line="33" pos:column="16">c<pos:position pos:line="33" pos:column="17"/></name></expr>)<pos:position pos:line="33" pos:column="18"/></condition>
    <block pos:line="34" pos:column="5">{
    <comment type="block" pos:line="35" pos:column="5">/* Check for quantifiers after a class */</comment>

<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">SUPPORT_UTF8<pos:position pos:line="37" pos:column="20"/></name></cpp:ifdef>
    <case pos:line="38" pos:column="5">case <expr><name pos:line="38" pos:column="10">OP_XCLASS<pos:position pos:line="38" pos:column="19"/></name></expr>:<pos:position pos:line="38" pos:column="20"/></case>
    <expr_stmt><expr><name pos:line="39" pos:column="5">ccode<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <name pos:line="39" pos:column="13">code<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">+<pos:position pos:line="39" pos:column="19"/></operator> <call><name pos:line="39" pos:column="20">GET<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">code<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="30">1<pos:position pos:line="39" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
    <goto pos:line="40" pos:column="5">goto <name pos:line="40" pos:column="10">CHECK_CLASS_REPEAT<pos:position pos:line="40" pos:column="28"/></name>;<pos:position pos:line="40" pos:column="29"/></goto>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

    <case pos:line="43" pos:column="5">case <expr><name pos:line="43" pos:column="10">OP_CLASS<pos:position pos:line="43" pos:column="18"/></name></expr>:<pos:position pos:line="43" pos:column="19"/></case>
    <case pos:line="44" pos:column="5">case <expr><name pos:line="44" pos:column="10">OP_NCLASS<pos:position pos:line="44" pos:column="19"/></name></expr>:<pos:position pos:line="44" pos:column="20"/></case>
    <expr_stmt><expr><name pos:line="45" pos:column="5">ccode<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <name pos:line="45" pos:column="13">code<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">+<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">33<pos:position pos:line="45" pos:column="22"/></literal></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>

<cpp:ifdef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifdef<pos:position pos:line="47" pos:column="7"/></cpp:directive> <name pos:line="47" pos:column="8">SUPPORT_UTF8<pos:position pos:line="47" pos:column="20"/></name></cpp:ifdef>
    <label><name pos:line="48" pos:column="5">CHECK_CLASS_REPEAT<pos:position pos:line="48" pos:column="23"/></name>:<pos:position pos:line="48" pos:column="24"/></label>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>

    <switch pos:line="51" pos:column="5">switch <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">*<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">ccode<pos:position pos:line="51" pos:column="19"/></name></expr>)<pos:position pos:line="51" pos:column="20"/></condition>
      <block pos:line="52" pos:column="7">{
      <case pos:line="53" pos:column="7">case <expr><name pos:line="53" pos:column="12">OP_CRSTAR<pos:position pos:line="53" pos:column="21"/></name></expr>:<pos:position pos:line="53" pos:column="22"/></case>            <comment type="block" pos:line="53" pos:column="34">/* These could be empty; continue */</comment>
      <case pos:line="54" pos:column="7">case <expr><name pos:line="54" pos:column="12">OP_CRMINSTAR<pos:position pos:line="54" pos:column="24"/></name></expr>:<pos:position pos:line="54" pos:column="25"/></case>
      <case pos:line="55" pos:column="7">case <expr><name pos:line="55" pos:column="12">OP_CRQUERY<pos:position pos:line="55" pos:column="22"/></name></expr>:<pos:position pos:line="55" pos:column="23"/></case>
      <case pos:line="56" pos:column="7">case <expr><name pos:line="56" pos:column="12">OP_CRMINQUERY<pos:position pos:line="56" pos:column="25"/></name></expr>:<pos:position pos:line="56" pos:column="26"/></case>
      <break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break>

      <default pos:line="59" pos:column="7">default:<pos:position pos:line="59" pos:column="15"/></default>                   <comment type="block" pos:line="59" pos:column="34">/* Non-repeat =&gt; class must match */</comment>
      <case pos:line="60" pos:column="7">case <expr><name pos:line="60" pos:column="12">OP_CRPLUS<pos:position pos:line="60" pos:column="21"/></name></expr>:<pos:position pos:line="60" pos:column="22"/></case>            <comment type="block" pos:line="60" pos:column="34">/* These repeats aren't empty */</comment>
      <case pos:line="61" pos:column="7">case <expr><name pos:line="61" pos:column="12">OP_CRMINPLUS<pos:position pos:line="61" pos:column="24"/></name></expr>:<pos:position pos:line="61" pos:column="25"/></case>
      <return pos:line="62" pos:column="7">return <expr><name pos:line="62" pos:column="14">FALSE<pos:position pos:line="62" pos:column="19"/></name></expr>;<pos:position pos:line="62" pos:column="20"/></return>

      <case pos:line="64" pos:column="7">case <expr><name pos:line="64" pos:column="12">OP_CRRANGE<pos:position pos:line="64" pos:column="22"/></name></expr>:<pos:position pos:line="64" pos:column="23"/></case>
      <case pos:line="65" pos:column="7">case <expr><name pos:line="65" pos:column="12">OP_CRMINRANGE<pos:position pos:line="65" pos:column="25"/></name></expr>:<pos:position pos:line="65" pos:column="26"/></case>
      <if pos:line="66" pos:column="7">if <condition pos:line="66" pos:column="10">(<expr><call><name pos:line="66" pos:column="11">GET2<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><name pos:line="66" pos:column="16">ccode<pos:position pos:line="66" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="23">1<pos:position pos:line="66" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="25"/></argument_list></call> <operator pos:line="66" pos:column="26">&gt;<pos:position pos:line="66" pos:column="30"/></operator> <literal type="number" pos:line="66" pos:column="28">0<pos:position pos:line="66" pos:column="29"/></literal></expr>)<pos:position pos:line="66" pos:column="30"/></condition><then pos:line="66" pos:column="30"> <block type="pseudo"><return pos:line="66" pos:column="31">return <expr><name pos:line="66" pos:column="38">FALSE<pos:position pos:line="66" pos:column="43"/></name></expr>;<pos:position pos:line="66" pos:column="44"/></return></block></then></if>  <comment type="block" pos:line="66" pos:column="46">/* Minimum &gt; 0 */</comment>
      <break pos:line="67" pos:column="7">break;<pos:position pos:line="67" pos:column="13"/></break>
      }<pos:position pos:line="68" pos:column="8"/></block></switch>
    <break pos:line="69" pos:column="5">break;<pos:position pos:line="69" pos:column="11"/></break>

    <comment type="block" pos:line="71" pos:column="5">/* Opcodes that must match a character */</comment>

    <case pos:line="73" pos:column="5">case <expr><name pos:line="73" pos:column="10">OP_PROP<pos:position pos:line="73" pos:column="17"/></name></expr>:<pos:position pos:line="73" pos:column="18"/></case>
    <case pos:line="74" pos:column="5">case <expr><name pos:line="74" pos:column="10">OP_NOTPROP<pos:position pos:line="74" pos:column="20"/></name></expr>:<pos:position pos:line="74" pos:column="21"/></case>
    <case pos:line="75" pos:column="5">case <expr><name pos:line="75" pos:column="10">OP_EXTUNI<pos:position pos:line="75" pos:column="19"/></name></expr>:<pos:position pos:line="75" pos:column="20"/></case>
    <case pos:line="76" pos:column="5">case <expr><name pos:line="76" pos:column="10">OP_NOT_DIGIT<pos:position pos:line="76" pos:column="22"/></name></expr>:<pos:position pos:line="76" pos:column="23"/></case>
    <case pos:line="77" pos:column="5">case <expr><name pos:line="77" pos:column="10">OP_DIGIT<pos:position pos:line="77" pos:column="18"/></name></expr>:<pos:position pos:line="77" pos:column="19"/></case>
    <case pos:line="78" pos:column="5">case <expr><name pos:line="78" pos:column="10">OP_NOT_WHITESPACE<pos:position pos:line="78" pos:column="27"/></name></expr>:<pos:position pos:line="78" pos:column="28"/></case>
    <case pos:line="79" pos:column="5">case <expr><name pos:line="79" pos:column="10">OP_WHITESPACE<pos:position pos:line="79" pos:column="23"/></name></expr>:<pos:position pos:line="79" pos:column="24"/></case>
    <case pos:line="80" pos:column="5">case <expr><name pos:line="80" pos:column="10">OP_NOT_WORDCHAR<pos:position pos:line="80" pos:column="25"/></name></expr>:<pos:position pos:line="80" pos:column="26"/></case>
    <case pos:line="81" pos:column="5">case <expr><name pos:line="81" pos:column="10">OP_WORDCHAR<pos:position pos:line="81" pos:column="21"/></name></expr>:<pos:position pos:line="81" pos:column="22"/></case>
    <case pos:line="82" pos:column="5">case <expr><name pos:line="82" pos:column="10">OP_ANY<pos:position pos:line="82" pos:column="16"/></name></expr>:<pos:position pos:line="82" pos:column="17"/></case>
    <case pos:line="83" pos:column="5">case <expr><name pos:line="83" pos:column="10">OP_ANYBYTE<pos:position pos:line="83" pos:column="20"/></name></expr>:<pos:position pos:line="83" pos:column="21"/></case>
    <case pos:line="84" pos:column="5">case <expr><name pos:line="84" pos:column="10">OP_CHAR<pos:position pos:line="84" pos:column="17"/></name></expr>:<pos:position pos:line="84" pos:column="18"/></case>
    <case pos:line="85" pos:column="5">case <expr><name pos:line="85" pos:column="10">OP_CHARNC<pos:position pos:line="85" pos:column="19"/></name></expr>:<pos:position pos:line="85" pos:column="20"/></case>
    <case pos:line="86" pos:column="5">case <expr><name pos:line="86" pos:column="10">OP_NOT<pos:position pos:line="86" pos:column="16"/></name></expr>:<pos:position pos:line="86" pos:column="17"/></case>
    <case pos:line="87" pos:column="5">case <expr><name pos:line="87" pos:column="10">OP_PLUS<pos:position pos:line="87" pos:column="17"/></name></expr>:<pos:position pos:line="87" pos:column="18"/></case>
    <case pos:line="88" pos:column="5">case <expr><name pos:line="88" pos:column="10">OP_MINPLUS<pos:position pos:line="88" pos:column="20"/></name></expr>:<pos:position pos:line="88" pos:column="21"/></case>
    <case pos:line="89" pos:column="5">case <expr><name pos:line="89" pos:column="10">OP_EXACT<pos:position pos:line="89" pos:column="18"/></name></expr>:<pos:position pos:line="89" pos:column="19"/></case>
    <case pos:line="90" pos:column="5">case <expr><name pos:line="90" pos:column="10">OP_NOTPLUS<pos:position pos:line="90" pos:column="20"/></name></expr>:<pos:position pos:line="90" pos:column="21"/></case>
    <case pos:line="91" pos:column="5">case <expr><name pos:line="91" pos:column="10">OP_NOTMINPLUS<pos:position pos:line="91" pos:column="23"/></name></expr>:<pos:position pos:line="91" pos:column="24"/></case>
    <case pos:line="92" pos:column="5">case <expr><name pos:line="92" pos:column="10">OP_NOTEXACT<pos:position pos:line="92" pos:column="21"/></name></expr>:<pos:position pos:line="92" pos:column="22"/></case>
    <case pos:line="93" pos:column="5">case <expr><name pos:line="93" pos:column="10">OP_TYPEPLUS<pos:position pos:line="93" pos:column="21"/></name></expr>:<pos:position pos:line="93" pos:column="22"/></case>
    <case pos:line="94" pos:column="5">case <expr><name pos:line="94" pos:column="10">OP_TYPEMINPLUS<pos:position pos:line="94" pos:column="24"/></name></expr>:<pos:position pos:line="94" pos:column="25"/></case>
    <case pos:line="95" pos:column="5">case <expr><name pos:line="95" pos:column="10">OP_TYPEEXACT<pos:position pos:line="95" pos:column="22"/></name></expr>:<pos:position pos:line="95" pos:column="23"/></case>
    <return pos:line="96" pos:column="5">return <expr><name pos:line="96" pos:column="12">FALSE<pos:position pos:line="96" pos:column="17"/></name></expr>;<pos:position pos:line="96" pos:column="18"/></return>

    <comment type="block" pos:line="98" pos:column="5">/* End of branch */</comment>

    <case pos:line="100" pos:column="5">case <expr><name pos:line="100" pos:column="10">OP_KET<pos:position pos:line="100" pos:column="16"/></name></expr>:<pos:position pos:line="100" pos:column="17"/></case>
    <case pos:line="101" pos:column="5">case <expr><name pos:line="101" pos:column="10">OP_KETRMAX<pos:position pos:line="101" pos:column="20"/></name></expr>:<pos:position pos:line="101" pos:column="21"/></case>
    <case pos:line="102" pos:column="5">case <expr><name pos:line="102" pos:column="10">OP_KETRMIN<pos:position pos:line="102" pos:column="20"/></name></expr>:<pos:position pos:line="102" pos:column="21"/></case>
    <case pos:line="103" pos:column="5">case <expr><name pos:line="103" pos:column="10">OP_ALT<pos:position pos:line="103" pos:column="16"/></name></expr>:<pos:position pos:line="103" pos:column="17"/></case>
    <return pos:line="104" pos:column="5">return <expr><name pos:line="104" pos:column="12">TRUE<pos:position pos:line="104" pos:column="16"/></name></expr>;<pos:position pos:line="104" pos:column="17"/></return>

    <comment type="block" pos:line="106" pos:column="5">/* In UTF-8 mode, STAR, MINSTAR, QUERY, MINQUERY, UPTO, and MINUPTO  may be
    followed by a multibyte character */</comment>

<cpp:ifdef pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">ifdef<pos:position pos:line="109" pos:column="7"/></cpp:directive> <name pos:line="109" pos:column="8">SUPPORT_UTF8<pos:position pos:line="109" pos:column="20"/></name></cpp:ifdef>
    <case pos:line="110" pos:column="5">case <expr><name pos:line="110" pos:column="10">OP_STAR<pos:position pos:line="110" pos:column="17"/></name></expr>:<pos:position pos:line="110" pos:column="18"/></case>
    <case pos:line="111" pos:column="5">case <expr><name pos:line="111" pos:column="10">OP_MINSTAR<pos:position pos:line="111" pos:column="20"/></name></expr>:<pos:position pos:line="111" pos:column="21"/></case>
    <case pos:line="112" pos:column="5">case <expr><name pos:line="112" pos:column="10">OP_QUERY<pos:position pos:line="112" pos:column="18"/></name></expr>:<pos:position pos:line="112" pos:column="19"/></case>
    <case pos:line="113" pos:column="5">case <expr><name pos:line="113" pos:column="10">OP_MINQUERY<pos:position pos:line="113" pos:column="21"/></name></expr>:<pos:position pos:line="113" pos:column="22"/></case>
    <case pos:line="114" pos:column="5">case <expr><name pos:line="114" pos:column="10">OP_UPTO<pos:position pos:line="114" pos:column="17"/></name></expr>:<pos:position pos:line="114" pos:column="18"/></case>
    <case pos:line="115" pos:column="5">case <expr><name pos:line="115" pos:column="10">OP_MINUPTO<pos:position pos:line="115" pos:column="20"/></name></expr>:<pos:position pos:line="115" pos:column="21"/></case>
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><name pos:line="116" pos:column="9">utf8<pos:position pos:line="116" pos:column="13"/></name></expr>)<pos:position pos:line="116" pos:column="14"/></condition><then pos:line="116" pos:column="14"> <block type="pseudo"><while pos:line="116" pos:column="15">while <condition pos:line="116" pos:column="21">(<expr><operator pos:line="116" pos:column="22">(<pos:position pos:line="116" pos:column="23"/></operator><name><name pos:line="116" pos:column="23">code<pos:position pos:line="116" pos:column="27"/></name><index pos:line="116" pos:column="27">[<expr><literal type="number" pos:line="116" pos:column="28">2<pos:position pos:line="116" pos:column="29"/></literal></expr>]<pos:position pos:line="116" pos:column="30"/></index></name> <operator pos:line="116" pos:column="31">&amp;<pos:position pos:line="116" pos:column="36"/></operator> <literal type="number" pos:line="116" pos:column="33">0xc0<pos:position pos:line="116" pos:column="37"/></literal><operator pos:line="116" pos:column="37">)<pos:position pos:line="116" pos:column="38"/></operator> <operator pos:line="116" pos:column="39">==<pos:position pos:line="116" pos:column="41"/></operator> <literal type="number" pos:line="116" pos:column="42">0x80<pos:position pos:line="116" pos:column="46"/></literal></expr>)<pos:position pos:line="116" pos:column="47"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="116" pos:column="48">code<pos:position pos:line="116" pos:column="52"/></name><operator pos:line="116" pos:column="52">++<pos:position pos:line="116" pos:column="54"/></operator></expr>;<pos:position pos:line="116" pos:column="55"/></expr_stmt></block></while></block></then></if>
    <break pos:line="117" pos:column="5">break;<pos:position pos:line="117" pos:column="11"/></break>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="119" pos:column="6"/></block></switch></block></else></if>
  }<pos:position pos:line="120" pos:column="4"/></block></for>

<return pos:line="122" pos:column="1">return <expr><name pos:line="122" pos:column="8">TRUE<pos:position pos:line="122" pos:column="12"/></name></expr>;<pos:position pos:line="122" pos:column="13"/></return>
}<pos:position pos:line="123" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_602_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">check_code<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">apr_pool_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">p<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">code<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">real_code<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">word<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">base<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="char" pos:line="4" pos:column="17">'X'<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">modifier<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">num<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">factor<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* 0.0.4 compatibility?
     */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="10">code<pos:position pos:line="11" pos:column="14"/></name><index pos:line="11" pos:column="14">[<expr><literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal></expr>]<pos:position pos:line="11" pos:column="17"/></index></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <literal type="char" pos:line="11" pos:column="21">'A'<pos:position pos:line="11" pos:column="24"/></literal><operator pos:line="11" pos:column="24">)<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="26">||<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">(<pos:position pos:line="11" pos:column="30"/></operator><name><name pos:line="11" pos:column="30">code<pos:position pos:line="11" pos:column="34"/></name><index pos:line="11" pos:column="34">[<expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr>]<pos:position pos:line="11" pos:column="37"/></index></name> <operator pos:line="11" pos:column="38">==<pos:position pos:line="11" pos:column="40"/></operator> <literal type="char" pos:line="11" pos:column="41">'M'<pos:position pos:line="11" pos:column="44"/></literal><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator></expr>)<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46"> <block pos:line="11" pos:column="47">{
        <expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">real_code<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">(<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">char<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></operator><operator pos:line="12" pos:column="29">)<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">code<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* &lt;base&gt; [plus] {&lt;num&gt; &lt;type&gt;}*
     */</comment>

    <comment type="block" pos:line="19" pos:column="5">/* &lt;base&gt;
     */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">word<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">ap_getword_conf<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">p<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="31">&amp;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="32">code<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">strncasecmp<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">word<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="28">"now"<pos:position pos:line="22" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="35">1<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call> <operator pos:line="22" pos:column="38">||<pos:position pos:line="22" pos:column="40"/></operator>
        <operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><call><name pos:line="23" pos:column="10">strncasecmp<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">word<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="28">"access"<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="38">1<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41"> <block pos:line="23" pos:column="42">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">base<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <literal type="char" pos:line="24" pos:column="16">'A'<pos:position pos:line="24" pos:column="19"/></literal></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><operator pos:line="26" pos:column="14">!<pos:position pos:line="26" pos:column="15"/></operator><call><name pos:line="26" pos:column="15">strncasecmp<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">word<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="33">"modification"<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="49">1<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="52"/></condition><then pos:line="26" pos:column="52"> <block pos:line="26" pos:column="53">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">base<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <literal type="char" pos:line="27" pos:column="16">'M'<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif>
    <else pos:line="29" pos:column="5">else <block pos:line="29" pos:column="10">{
        <return pos:line="30" pos:column="9">return <expr><call><name pos:line="30" pos:column="16">apr_pstrcat<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">p<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="31">"bad expires code, unrecognised &lt;base&gt; '"<pos:position pos:line="30" pos:column="78"/></literal></expr></argument>,
                       <argument><expr><name pos:line="31" pos:column="24">word<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="30">"'"<pos:position pos:line="31" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">NULL<pos:position pos:line="31" pos:column="39"/></name></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="34" pos:column="5">/* [plus]
     */</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">word<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">ap_getword_conf<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">p<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="31">&amp;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="32">code<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><call><name pos:line="37" pos:column="10">strncasecmp<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">word<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="28">"plus"<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="36">1<pos:position pos:line="37" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39"> <block pos:line="37" pos:column="40">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">word<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">ap_getword_conf<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">p<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="35">&amp;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="36">code<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="41" pos:column="5">/* {&lt;num&gt; &lt;type&gt;}*
     */</comment>
    <while pos:line="43" pos:column="5">while <condition pos:line="43" pos:column="11">(<expr><name><name pos:line="43" pos:column="12">word<pos:position pos:line="43" pos:column="16"/></name><index pos:line="43" pos:column="16">[<expr><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal></expr>]<pos:position pos:line="43" pos:column="19"/></index></name></expr>)<pos:position pos:line="43" pos:column="20"/></condition> <block pos:line="43" pos:column="21">{
        <comment type="block" pos:line="44" pos:column="9">/* &lt;num&gt;
         */</comment>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">apr_isdigit<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name><name pos:line="46" pos:column="25">word<pos:position pos:line="46" pos:column="29"/></name><index pos:line="46" pos:column="29">[<expr><literal type="number" pos:line="46" pos:column="30">0<pos:position pos:line="46" pos:column="31"/></literal></expr>]<pos:position pos:line="46" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="34"/></condition><then pos:line="46" pos:column="34"> <block pos:line="46" pos:column="35">{
            <expr_stmt><expr><name pos:line="47" pos:column="13">num<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <call><name pos:line="47" pos:column="19">atoi<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">word<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then>
        <else pos:line="49" pos:column="9">else <block pos:line="49" pos:column="14">{
            <return pos:line="50" pos:column="13">return <expr><call><name pos:line="50" pos:column="20">apr_pstrcat<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">p<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="35">"bad expires code, numeric value expected &lt;num&gt; '"<pos:position pos:line="50" pos:column="91"/></literal></expr></argument>,
                           <argument><expr><name pos:line="51" pos:column="28">word<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="34">"'"<pos:position pos:line="51" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="39">NULL<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="54" pos:column="9">/* &lt;type&gt;
         */</comment>
        <expr_stmt><expr><name pos:line="56" pos:column="9">word<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <call><name pos:line="56" pos:column="16">ap_getword_conf<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">p<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="35">&amp;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="36">code<pos:position pos:line="56" pos:column="40"/></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">word<pos:position pos:line="57" pos:column="17"/></name><index pos:line="57" pos:column="17">[<expr><literal type="number" pos:line="57" pos:column="18">0<pos:position pos:line="57" pos:column="19"/></literal></expr>]<pos:position pos:line="57" pos:column="20"/></index></name></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21"> <block pos:line="57" pos:column="22">{
            <comment type="block" pos:line="58" pos:column="13">/* do nothing */</comment>
        }<pos:position pos:line="59" pos:column="10"/></block></then>
        <else pos:line="60" pos:column="9">else <block pos:line="60" pos:column="14">{
            <return pos:line="61" pos:column="13">return <expr><call><name pos:line="61" pos:column="20">apr_pstrcat<pos:position pos:line="61" pos:column="31"/></name><argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">p<pos:position pos:line="61" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="35">"bad expires code, missing &lt;type&gt;"<pos:position pos:line="61" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="71">NULL<pos:position pos:line="61" pos:column="75"/></name></expr></argument>)<pos:position pos:line="61" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="77"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="64" pos:column="9">factor<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <literal type="number" pos:line="64" pos:column="18">0<pos:position pos:line="64" pos:column="19"/></literal></expr>;<pos:position pos:line="64" pos:column="20"/></expr_stmt>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">!<pos:position pos:line="65" pos:column="14"/></operator><call><name pos:line="65" pos:column="14">strncasecmp<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><name pos:line="65" pos:column="26">word<pos:position pos:line="65" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="32">"years"<pos:position pos:line="65" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="41">1<pos:position pos:line="65" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="44"/></condition><then pos:line="65" pos:column="44"> <block pos:line="65" pos:column="45">{
            <expr_stmt><expr><name pos:line="66" pos:column="13">factor<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">=<pos:position pos:line="66" pos:column="21"/></operator> <literal type="number" pos:line="66" pos:column="22">60<pos:position pos:line="66" pos:column="24"/></literal> <operator pos:line="66" pos:column="25">*<pos:position pos:line="66" pos:column="26"/></operator> <literal type="number" pos:line="66" pos:column="27">60<pos:position pos:line="66" pos:column="29"/></literal> <operator pos:line="66" pos:column="30">*<pos:position pos:line="66" pos:column="31"/></operator> <literal type="number" pos:line="66" pos:column="32">24<pos:position pos:line="66" pos:column="34"/></literal> <operator pos:line="66" pos:column="35">*<pos:position pos:line="66" pos:column="36"/></operator> <literal type="number" pos:line="66" pos:column="37">365<pos:position pos:line="66" pos:column="40"/></literal></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></then>
        <elseif pos:line="68" pos:column="9">else <if pos:line="68" pos:column="14">if <condition pos:line="68" pos:column="17">(<expr><operator pos:line="68" pos:column="18">!<pos:position pos:line="68" pos:column="19"/></operator><call><name pos:line="68" pos:column="19">strncasecmp<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">(<argument><expr><name pos:line="68" pos:column="31">word<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="37">"months"<pos:position pos:line="68" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="47">2<pos:position pos:line="68" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="50"/></condition><then pos:line="68" pos:column="50"> <block pos:line="68" pos:column="51">{
            <expr_stmt><expr><name pos:line="69" pos:column="13">factor<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <literal type="number" pos:line="69" pos:column="22">60<pos:position pos:line="69" pos:column="24"/></literal> <operator pos:line="69" pos:column="25">*<pos:position pos:line="69" pos:column="26"/></operator> <literal type="number" pos:line="69" pos:column="27">60<pos:position pos:line="69" pos:column="29"/></literal> <operator pos:line="69" pos:column="30">*<pos:position pos:line="69" pos:column="31"/></operator> <literal type="number" pos:line="69" pos:column="32">24<pos:position pos:line="69" pos:column="34"/></literal> <operator pos:line="69" pos:column="35">*<pos:position pos:line="69" pos:column="36"/></operator> <literal type="number" pos:line="69" pos:column="37">30<pos:position pos:line="69" pos:column="39"/></literal></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="71" pos:column="9">else <if pos:line="71" pos:column="14">if <condition pos:line="71" pos:column="17">(<expr><operator pos:line="71" pos:column="18">!<pos:position pos:line="71" pos:column="19"/></operator><call><name pos:line="71" pos:column="19">strncasecmp<pos:position pos:line="71" pos:column="30"/></name><argument_list pos:line="71" pos:column="30">(<argument><expr><name pos:line="71" pos:column="31">word<pos:position pos:line="71" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="37">"weeks"<pos:position pos:line="71" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="46">1<pos:position pos:line="71" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="49"/></condition><then pos:line="71" pos:column="49"> <block pos:line="71" pos:column="50">{
            <expr_stmt><expr><name pos:line="72" pos:column="13">factor<pos:position pos:line="72" pos:column="19"/></name> <operator pos:line="72" pos:column="20">=<pos:position pos:line="72" pos:column="21"/></operator> <literal type="number" pos:line="72" pos:column="22">60<pos:position pos:line="72" pos:column="24"/></literal> <operator pos:line="72" pos:column="25">*<pos:position pos:line="72" pos:column="26"/></operator> <literal type="number" pos:line="72" pos:column="27">60<pos:position pos:line="72" pos:column="29"/></literal> <operator pos:line="72" pos:column="30">*<pos:position pos:line="72" pos:column="31"/></operator> <literal type="number" pos:line="72" pos:column="32">24<pos:position pos:line="72" pos:column="34"/></literal> <operator pos:line="72" pos:column="35">*<pos:position pos:line="72" pos:column="36"/></operator> <literal type="number" pos:line="72" pos:column="37">7<pos:position pos:line="72" pos:column="38"/></literal></expr>;<pos:position pos:line="72" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="74" pos:column="9">else <if pos:line="74" pos:column="14">if <condition pos:line="74" pos:column="17">(<expr><operator pos:line="74" pos:column="18">!<pos:position pos:line="74" pos:column="19"/></operator><call><name pos:line="74" pos:column="19">strncasecmp<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">word<pos:position pos:line="74" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="37">"days"<pos:position pos:line="74" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="45">1<pos:position pos:line="74" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="48"/></condition><then pos:line="74" pos:column="48"> <block pos:line="74" pos:column="49">{
            <expr_stmt><expr><name pos:line="75" pos:column="13">factor<pos:position pos:line="75" pos:column="19"/></name> <operator pos:line="75" pos:column="20">=<pos:position pos:line="75" pos:column="21"/></operator> <literal type="number" pos:line="75" pos:column="22">60<pos:position pos:line="75" pos:column="24"/></literal> <operator pos:line="75" pos:column="25">*<pos:position pos:line="75" pos:column="26"/></operator> <literal type="number" pos:line="75" pos:column="27">60<pos:position pos:line="75" pos:column="29"/></literal> <operator pos:line="75" pos:column="30">*<pos:position pos:line="75" pos:column="31"/></operator> <literal type="number" pos:line="75" pos:column="32">24<pos:position pos:line="75" pos:column="34"/></literal></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="77" pos:column="9">else <if pos:line="77" pos:column="14">if <condition pos:line="77" pos:column="17">(<expr><operator pos:line="77" pos:column="18">!<pos:position pos:line="77" pos:column="19"/></operator><call><name pos:line="77" pos:column="19">strncasecmp<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name pos:line="77" pos:column="31">word<pos:position pos:line="77" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="37">"hours"<pos:position pos:line="77" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="46">1<pos:position pos:line="77" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="49"/></condition><then pos:line="77" pos:column="49"> <block pos:line="77" pos:column="50">{
            <expr_stmt><expr><name pos:line="78" pos:column="13">factor<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <literal type="number" pos:line="78" pos:column="22">60<pos:position pos:line="78" pos:column="24"/></literal> <operator pos:line="78" pos:column="25">*<pos:position pos:line="78" pos:column="26"/></operator> <literal type="number" pos:line="78" pos:column="27">60<pos:position pos:line="78" pos:column="29"/></literal></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="80" pos:column="9">else <if pos:line="80" pos:column="14">if <condition pos:line="80" pos:column="17">(<expr><operator pos:line="80" pos:column="18">!<pos:position pos:line="80" pos:column="19"/></operator><call><name pos:line="80" pos:column="19">strncasecmp<pos:position pos:line="80" pos:column="30"/></name><argument_list pos:line="80" pos:column="30">(<argument><expr><name pos:line="80" pos:column="31">word<pos:position pos:line="80" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="37">"minutes"<pos:position pos:line="80" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="48">2<pos:position pos:line="80" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="51"/></condition><then pos:line="80" pos:column="51"> <block pos:line="80" pos:column="52">{
            <expr_stmt><expr><name pos:line="81" pos:column="13">factor<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">=<pos:position pos:line="81" pos:column="21"/></operator> <literal type="number" pos:line="81" pos:column="22">60<pos:position pos:line="81" pos:column="24"/></literal></expr>;<pos:position pos:line="81" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="82" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="83" pos:column="9">else <if pos:line="83" pos:column="14">if <condition pos:line="83" pos:column="17">(<expr><operator pos:line="83" pos:column="18">!<pos:position pos:line="83" pos:column="19"/></operator><call><name pos:line="83" pos:column="19">strncasecmp<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">word<pos:position pos:line="83" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="37">"seconds"<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="48">1<pos:position pos:line="83" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="51"/></condition><then pos:line="83" pos:column="51"> <block pos:line="83" pos:column="52">{
            <expr_stmt><expr><name pos:line="84" pos:column="13">factor<pos:position pos:line="84" pos:column="19"/></name> <operator pos:line="84" pos:column="20">=<pos:position pos:line="84" pos:column="21"/></operator> <literal type="number" pos:line="84" pos:column="22">1<pos:position pos:line="84" pos:column="23"/></literal></expr>;<pos:position pos:line="84" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if></elseif>
        <else pos:line="86" pos:column="9">else <block pos:line="86" pos:column="14">{
            <return pos:line="87" pos:column="13">return <expr><call><name pos:line="87" pos:column="20">apr_pstrcat<pos:position pos:line="87" pos:column="31"/></name><argument_list pos:line="87" pos:column="31">(<argument><expr><name pos:line="87" pos:column="32">p<pos:position pos:line="87" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="35">"bad expires code, unrecognised &lt;type&gt;"<pos:position pos:line="87" pos:column="80"/></literal></expr></argument>,
                           <argument><expr><literal type="string" pos:line="88" pos:column="28">"'"<pos:position pos:line="88" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="33">word<pos:position pos:line="88" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="39">"'"<pos:position pos:line="88" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="44">NULL<pos:position pos:line="88" pos:column="48"/></name></expr></argument>)<pos:position pos:line="88" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="50"/></return>
        }<pos:position pos:line="89" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="91" pos:column="9">modifier<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator> <name pos:line="91" pos:column="20">modifier<pos:position pos:line="91" pos:column="28"/></name> <operator pos:line="91" pos:column="29">+<pos:position pos:line="91" pos:column="30"/></operator> <name pos:line="91" pos:column="31">factor<pos:position pos:line="91" pos:column="37"/></name> <operator pos:line="91" pos:column="38">*<pos:position pos:line="91" pos:column="39"/></operator> <name pos:line="91" pos:column="40">num<pos:position pos:line="91" pos:column="43"/></name></expr>;<pos:position pos:line="91" pos:column="44"/></expr_stmt>

        <comment type="block" pos:line="93" pos:column="9">/* next &lt;num&gt;
         */</comment>
        <expr_stmt><expr><name pos:line="95" pos:column="9">word<pos:position pos:line="95" pos:column="13"/></name> <operator pos:line="95" pos:column="14">=<pos:position pos:line="95" pos:column="15"/></operator> <call><name pos:line="95" pos:column="16">ap_getword_conf<pos:position pos:line="95" pos:column="31"/></name><argument_list pos:line="95" pos:column="31">(<argument><expr><name pos:line="95" pos:column="32">p<pos:position pos:line="95" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="35">&amp;<pos:position pos:line="95" pos:column="40"/></operator><name pos:line="95" pos:column="36">code<pos:position pos:line="95" pos:column="40"/></name></expr></argument>)<pos:position pos:line="95" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="98" pos:column="5">*<pos:position pos:line="98" pos:column="6"/></operator><name pos:line="98" pos:column="6">real_code<pos:position pos:line="98" pos:column="15"/></name> <operator pos:line="98" pos:column="16">=<pos:position pos:line="98" pos:column="17"/></operator> <call><name pos:line="98" pos:column="18">apr_psprintf<pos:position pos:line="98" pos:column="30"/></name><argument_list pos:line="98" pos:column="30">(<argument><expr><name pos:line="98" pos:column="31">p<pos:position pos:line="98" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="34">"%c%d"<pos:position pos:line="98" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="42">base<pos:position pos:line="98" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="48">modifier<pos:position pos:line="98" pos:column="56"/></name></expr></argument>)<pos:position pos:line="98" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="58"/></expr_stmt>

    <return pos:line="100" pos:column="5">return <expr><name pos:line="100" pos:column="12">NULL<pos:position pos:line="100" pos:column="16"/></name></expr>;<pos:position pos:line="100" pos:column="17"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

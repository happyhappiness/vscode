<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4453.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">ap_proxy_http_request<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">apr_pool_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">p<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">request_rec<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">r<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">proxy_conn_rec<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">p_conn<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="60">proxy_worker<pos:position pos:line="3" pos:column="72"/></name> <modifier pos:line="3" pos:column="73">*<pos:position pos:line="3" pos:column="74"/></modifier></type><name pos:line="3" pos:column="74">worker<pos:position pos:line="3" pos:column="80"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="4" pos:column="36">proxy_server_conf<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">conf<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="5" pos:column="36">apr_uri_t<pos:position pos:line="5" pos:column="45"/></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier></type><name pos:line="5" pos:column="47">uri<pos:position pos:line="5" pos:column="50"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="6" pos:column="36">char<pos:position pos:line="6" pos:column="40"/></name> <modifier pos:line="6" pos:column="41">*<pos:position pos:line="6" pos:column="42"/></modifier></type><name pos:line="6" pos:column="42">url<pos:position pos:line="6" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="47">char<pos:position pos:line="6" pos:column="51"/></name> <modifier pos:line="6" pos:column="52">*<pos:position pos:line="6" pos:column="53"/></modifier></type><name pos:line="6" pos:column="53">server_portstr<pos:position pos:line="6" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="68"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">conn_rec<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">c<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><name><name pos:line="8" pos:column="19">r<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">connection<pos:position pos:line="8" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">bucket_alloc<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><name><name pos:line="9" pos:column="40">c<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">bucket_alloc<pos:position pos:line="9" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_bucket_brigade<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">header_brigade<pos:position pos:line="10" pos:column="39"/></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket_brigade<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">input_brigade<pos:position pos:line="11" pos:column="38"/></name></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_bucket_brigade<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">temp_brigade<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_bucket<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">e<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">buf<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">apr_array_header_t<pos:position pos:line="15" pos:column="29"/></name> <modifier pos:line="15" pos:column="30">*<pos:position pos:line="15" pos:column="31"/></modifier></type><name pos:line="15" pos:column="31">headers_in_array<pos:position pos:line="15" pos:column="47"/></name></decl>;<pos:position pos:line="15" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">apr_table_entry_t<pos:position pos:line="16" pos:column="28"/></name> <modifier pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></modifier></type><name pos:line="16" pos:column="30">headers_in<pos:position pos:line="16" pos:column="40"/></name></decl>;<pos:position pos:line="16" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">counter<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">apr_status_t<pos:position pos:line="18" pos:column="17"/></name></type> <name pos:line="18" pos:column="18">status<pos:position pos:line="18" pos:column="24"/></name></decl>;<pos:position pos:line="18" pos:column="25"/></decl_stmt>
    <enum pos:line="19" pos:column="5">enum <name pos:line="19" pos:column="10">rb_methods<pos:position pos:line="19" pos:column="20"/></name> <block pos:line="19" pos:column="21">{<decl><name pos:line="19" pos:column="22">RB_INIT<pos:position pos:line="19" pos:column="29"/></name></decl>, <decl><name pos:line="19" pos:column="31">RB_STREAM_CL<pos:position pos:line="19" pos:column="43"/></name></decl>, <decl><name pos:line="19" pos:column="45">RB_STREAM_CHUNKED<pos:position pos:line="19" pos:column="62"/></name></decl>, <decl><name pos:line="19" pos:column="64">RB_SPOOL_CL<pos:position pos:line="19" pos:column="75"/></name></decl>}<pos:position pos:line="19" pos:column="76"/></block>;<pos:position pos:line="19" pos:column="77"/></enum>
    <decl_stmt><decl><type><name><name pos:line="20" pos:column="5">enum<pos:position pos:line="20" pos:column="9"/></name> <name pos:line="20" pos:column="10">rb_methods<pos:position pos:line="20" pos:column="20"/></name></name></type> <name pos:line="20" pos:column="21">rb_method<pos:position pos:line="20" pos:column="30"/></name> <init pos:line="20" pos:column="31">= <expr><name pos:line="20" pos:column="33">RB_INIT<pos:position pos:line="20" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">const<pos:position pos:line="21" pos:column="10"/></specifier> <name pos:line="21" pos:column="11">char<pos:position pos:line="21" pos:column="15"/></name> <modifier pos:line="21" pos:column="16">*<pos:position pos:line="21" pos:column="17"/></modifier></type><name pos:line="21" pos:column="17">old_cl_val<pos:position pos:line="21" pos:column="27"/></name> <init pos:line="21" pos:column="28">= <expr><name pos:line="21" pos:column="30">NULL<pos:position pos:line="21" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">char<pos:position pos:line="22" pos:column="15"/></name> <modifier pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></modifier></type><name pos:line="22" pos:column="17">old_te_val<pos:position pos:line="22" pos:column="27"/></name> <init pos:line="22" pos:column="28">= <expr><name pos:line="22" pos:column="30">NULL<pos:position pos:line="22" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">apr_off_t<pos:position pos:line="23" pos:column="14"/></name></type> <name pos:line="23" pos:column="15">bytes_read<pos:position pos:line="23" pos:column="25"/></name> <init pos:line="23" pos:column="26">= <expr><literal type="number" pos:line="23" pos:column="28">0<pos:position pos:line="23" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">apr_off_t<pos:position pos:line="24" pos:column="14"/></name></type> <name pos:line="24" pos:column="15">bytes<pos:position pos:line="24" pos:column="20"/></name></decl>;<pos:position pos:line="24" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">force10<pos:position pos:line="25" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="25" pos:column="18">rv<pos:position pos:line="25" pos:column="20"/></name></decl>;<pos:position pos:line="25" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">apr_table_t<pos:position pos:line="26" pos:column="16"/></name> <modifier pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></modifier></type><name pos:line="26" pos:column="18">headers_in_copy<pos:position pos:line="26" pos:column="33"/></name></decl>;<pos:position pos:line="26" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">proxy_dir_conf<pos:position pos:line="27" pos:column="19"/></name> <modifier pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></modifier></type><name pos:line="27" pos:column="21">dconf<pos:position pos:line="27" pos:column="26"/></name></decl>;<pos:position pos:line="27" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">conn_rec<pos:position pos:line="28" pos:column="13"/></name> <modifier pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></modifier></type><name pos:line="28" pos:column="15">origin<pos:position pos:line="28" pos:column="21"/></name> <init pos:line="28" pos:column="22">= <expr><name><name pos:line="28" pos:column="24">p_conn<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">connection<pos:position pos:line="28" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="28" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">int<pos:position pos:line="29" pos:column="8"/></name></type> <name pos:line="29" pos:column="9">do_100_continue<pos:position pos:line="29" pos:column="24"/></name></decl>;<pos:position pos:line="29" pos:column="25"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="31" pos:column="5">dconf<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <call><name pos:line="31" pos:column="13">ap_get_module_config<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name><name pos:line="31" pos:column="34">r<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">per_dir_config<pos:position pos:line="31" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="53">&amp;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="54">proxy_module<pos:position pos:line="31" pos:column="66"/></name></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">header_brigade<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">apr_brigade_create<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">p<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="44">origin<pos:position pos:line="32" pos:column="50"/></name><operator pos:line="32" pos:column="50">-&gt;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="52">bucket_alloc<pos:position pos:line="32" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/*
     * Send the HTTP/1.1 request to the remote server
     */</comment>

    <comment type="block" pos:line="38" pos:column="5">/*
     * To be compliant, we only use 100-Continue for requests with bodies.
     * We also make sure we won't be talking HTTP/1.0 as well.
     */</comment>
    <expr_stmt><expr><name pos:line="42" pos:column="5">do_100_continue<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <operator pos:line="42" pos:column="23">(<pos:position pos:line="42" pos:column="24"/></operator><name><name pos:line="42" pos:column="24">worker<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">ping_timeout_set<pos:position pos:line="42" pos:column="48"/></name></name>
                       <operator pos:line="43" pos:column="24">&amp;&amp;<pos:position pos:line="43" pos:column="34"/></operator> <call><name pos:line="43" pos:column="27">ap_request_has_body<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><name pos:line="43" pos:column="47">r<pos:position pos:line="43" pos:column="48"/></name></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call>
                       <operator pos:line="44" pos:column="24">&amp;&amp;<pos:position pos:line="44" pos:column="34"/></operator> <operator pos:line="44" pos:column="27">(<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">PROXYREQ_REVERSE<pos:position pos:line="44" pos:column="44"/></name> <operator pos:line="44" pos:column="45">==<pos:position pos:line="44" pos:column="47"/></operator> <name><name pos:line="44" pos:column="48">r<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">-&gt;<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="51">proxyreq<pos:position pos:line="44" pos:column="59"/></name></name><operator pos:line="44" pos:column="59">)<pos:position pos:line="44" pos:column="60"/></operator>
                       <operator pos:line="45" pos:column="24">&amp;&amp;<pos:position pos:line="45" pos:column="34"/></operator> <operator pos:line="45" pos:column="27">!<pos:position pos:line="45" pos:column="28"/></operator><operator pos:line="45" pos:column="28">(<pos:position pos:line="45" pos:column="29"/></operator><call><name pos:line="45" pos:column="29">apr_table_get<pos:position pos:line="45" pos:column="42"/></name><argument_list pos:line="45" pos:column="42">(<argument><expr><name><name pos:line="45" pos:column="43">r<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">-&gt;<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="46">subprocess_env<pos:position pos:line="45" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="62">"force-proxy-request-1.0"<pos:position pos:line="45" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="88"/></argument_list></call><operator pos:line="45" pos:column="88">)<pos:position pos:line="45" pos:column="89"/></operator><operator pos:line="45" pos:column="89">)<pos:position pos:line="45" pos:column="90"/></operator></expr>;<pos:position pos:line="45" pos:column="91"/></expr_stmt>
    
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">apr_table_get<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name><name pos:line="47" pos:column="23">r<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">-&gt;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="26">subprocess_env<pos:position pos:line="47" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="42">"force-proxy-request-1.0"<pos:position pos:line="47" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="69"/></condition><then pos:line="47" pos:column="69"> <block pos:line="47" pos:column="70">{
        <comment type="block" pos:line="48" pos:column="9">/*
         * According to RFC 2616 8.2.3 we are not allowed to forward an
         * Expect: 100-continue to an HTTP/1.0 server. Instead we MUST return
         * a HTTP_EXPECTATION_FAILED
         */</comment>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name><name pos:line="53" pos:column="13">r<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">-&gt;<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="16">expecting_100<pos:position pos:line="53" pos:column="29"/></name></name></expr>)<pos:position pos:line="53" pos:column="30"/></condition><then pos:line="53" pos:column="30"> <block pos:line="53" pos:column="31">{
            <return pos:line="54" pos:column="13">return <expr><name pos:line="54" pos:column="20">HTTP_EXPECTATION_FAILED<pos:position pos:line="54" pos:column="43"/></name></expr>;<pos:position pos:line="54" pos:column="44"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="56" pos:column="9">buf<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">apr_pstrcat<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name pos:line="56" pos:column="27">p<pos:position pos:line="56" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="30">r<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">-&gt;<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="33">method<pos:position pos:line="56" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="41">" "<pos:position pos:line="56" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">url<pos:position pos:line="56" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="51">" HTTP/1.0"<pos:position pos:line="56" pos:column="62"/></literal> <name pos:line="56" pos:column="63">CRLF<pos:position pos:line="56" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="69">NULL<pos:position pos:line="56" pos:column="73"/></name></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">force10<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <literal type="number" pos:line="57" pos:column="19">1<pos:position pos:line="57" pos:column="20"/></literal></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">p_conn<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">-&gt;<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="17">close<pos:position pos:line="58" pos:column="22"/></name></name><operator pos:line="58" pos:column="22">++<pos:position pos:line="58" pos:column="24"/></operator></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then> <else pos:line="59" pos:column="7">else <block pos:line="59" pos:column="12">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">buf<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <call><name pos:line="60" pos:column="15">apr_pstrcat<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">p<pos:position pos:line="60" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="30">r<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">method<pos:position pos:line="60" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="41">" "<pos:position pos:line="60" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="46">url<pos:position pos:line="60" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="51">" HTTP/1.1"<pos:position pos:line="60" pos:column="62"/></literal> <name pos:line="60" pos:column="63">CRLF<pos:position pos:line="60" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="69">NULL<pos:position pos:line="60" pos:column="73"/></name></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">force10<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <literal type="number" pos:line="61" pos:column="19">0<pos:position pos:line="61" pos:column="20"/></literal></expr>;<pos:position pos:line="61" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><call><name pos:line="63" pos:column="9">apr_table_get<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name><name pos:line="63" pos:column="23">r<pos:position pos:line="63" pos:column="24"/></name><operator pos:line="63" pos:column="24">-&gt;<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="26">subprocess_env<pos:position pos:line="63" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="42">"proxy-nokeepalive"<pos:position pos:line="63" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="63"/></condition><then pos:line="63" pos:column="63"> <block pos:line="63" pos:column="64">{
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">origin<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">keepalive<pos:position pos:line="64" pos:column="26"/></name></name> <operator pos:line="64" pos:column="27">=<pos:position pos:line="64" pos:column="28"/></operator> <name pos:line="64" pos:column="29">AP_CONN_CLOSE<pos:position pos:line="64" pos:column="42"/></name></expr>;<pos:position pos:line="64" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">p_conn<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">-&gt;<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="17">close<pos:position pos:line="65" pos:column="22"/></name></name><operator pos:line="65" pos:column="22">++<pos:position pos:line="65" pos:column="24"/></operator></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ap_xlate_proto_to_ascii<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><name pos:line="67" pos:column="29">buf<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="34">strlen<pos:position pos:line="67" pos:column="40"/></name><argument_list pos:line="67" pos:column="40">(<argument><expr><name pos:line="67" pos:column="41">buf<pos:position pos:line="67" pos:column="44"/></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="68" pos:column="5">e<pos:position pos:line="68" pos:column="6"/></name> <operator pos:line="68" pos:column="7">=<pos:position pos:line="68" pos:column="8"/></operator> <call><name pos:line="68" pos:column="9">apr_bucket_pool_create<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">buf<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="37">strlen<pos:position pos:line="68" pos:column="43"/></name><argument_list pos:line="68" pos:column="43">(<argument><expr><name pos:line="68" pos:column="44">buf<pos:position pos:line="68" pos:column="47"/></name></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="68" pos:column="50">p<pos:position pos:line="68" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="53">c<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">-&gt;<pos:position pos:line="68" pos:column="59"/></operator><name pos:line="68" pos:column="56">bucket_alloc<pos:position pos:line="68" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">header_brigade<pos:position pos:line="69" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="45">e<pos:position pos:line="69" pos:column="46"/></name></expr></argument>)<pos:position pos:line="69" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="48"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name><name pos:line="70" pos:column="9">dconf<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">-&gt;<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="16">preserve_host<pos:position pos:line="70" pos:column="29"/></name></name> <operator pos:line="70" pos:column="30">==<pos:position pos:line="70" pos:column="32"/></operator> <literal type="number" pos:line="70" pos:column="33">0<pos:position pos:line="70" pos:column="34"/></literal></expr>)<pos:position pos:line="70" pos:column="35"/></condition><then pos:line="70" pos:column="35"> <block pos:line="70" pos:column="36">{
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><call><name pos:line="71" pos:column="13">ap_strchr_c<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name><name pos:line="71" pos:column="25">uri<pos:position pos:line="71" pos:column="28"/></name><operator pos:line="71" pos:column="28">-&gt;<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="30">hostname<pos:position pos:line="71" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="71" pos:column="40">':'<pos:position pos:line="71" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="45"/></condition><then pos:line="71" pos:column="45"> <block pos:line="71" pos:column="46">{ <comment type="block" pos:line="71" pos:column="48">/* if literal IPv6 address */</comment>
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><name><name pos:line="72" pos:column="17">uri<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">port_str<pos:position pos:line="72" pos:column="30"/></name></name> <operator pos:line="72" pos:column="31">&amp;&amp;<pos:position pos:line="72" pos:column="41"/></operator> <name><name pos:line="72" pos:column="34">uri<pos:position pos:line="72" pos:column="37"/></name><operator pos:line="72" pos:column="37">-&gt;<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="39">port<pos:position pos:line="72" pos:column="43"/></name></name> <operator pos:line="72" pos:column="44">!=<pos:position pos:line="72" pos:column="46"/></operator> <name pos:line="72" pos:column="47">DEFAULT_HTTP_PORT<pos:position pos:line="72" pos:column="64"/></name></expr>)<pos:position pos:line="72" pos:column="65"/></condition><then pos:line="72" pos:column="65"> <block pos:line="72" pos:column="66">{
                <expr_stmt><expr><name pos:line="73" pos:column="17">buf<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <call><name pos:line="73" pos:column="23">apr_pstrcat<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">p<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="38">"Host: ["<pos:position pos:line="73" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="49">uri<pos:position pos:line="73" pos:column="52"/></name><operator pos:line="73" pos:column="52">-&gt;<pos:position pos:line="73" pos:column="57"/></operator><name pos:line="73" pos:column="54">hostname<pos:position pos:line="73" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="64">"]:"<pos:position pos:line="73" pos:column="68"/></literal></expr></argument>, 
                                  <argument><expr><name><name pos:line="74" pos:column="35">uri<pos:position pos:line="74" pos:column="38"/></name><operator pos:line="74" pos:column="38">-&gt;<pos:position pos:line="74" pos:column="43"/></operator><name pos:line="74" pos:column="40">port_str<pos:position pos:line="74" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">CRLF<pos:position pos:line="74" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="56">NULL<pos:position pos:line="74" pos:column="60"/></name></expr></argument>)<pos:position pos:line="74" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="75" pos:column="14"/></block></then> <else pos:line="75" pos:column="15">else <block pos:line="75" pos:column="20">{
                <expr_stmt><expr><name pos:line="76" pos:column="17">buf<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <call><name pos:line="76" pos:column="23">apr_pstrcat<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name pos:line="76" pos:column="35">p<pos:position pos:line="76" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="38">"Host: ["<pos:position pos:line="76" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="49">uri<pos:position pos:line="76" pos:column="52"/></name><operator pos:line="76" pos:column="52">-&gt;<pos:position pos:line="76" pos:column="57"/></operator><name pos:line="76" pos:column="54">hostname<pos:position pos:line="76" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="64">"]"<pos:position pos:line="76" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="69">CRLF<pos:position pos:line="76" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="75">NULL<pos:position pos:line="76" pos:column="79"/></name></expr></argument>)<pos:position pos:line="76" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="81"/></expr_stmt>
            }<pos:position pos:line="77" pos:column="14"/></block></else></if>
        }<pos:position pos:line="78" pos:column="10"/></block></then> <else pos:line="78" pos:column="11">else <block pos:line="78" pos:column="16">{
            <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><name><name pos:line="79" pos:column="17">uri<pos:position pos:line="79" pos:column="20"/></name><operator pos:line="79" pos:column="20">-&gt;<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="22">port_str<pos:position pos:line="79" pos:column="30"/></name></name> <operator pos:line="79" pos:column="31">&amp;&amp;<pos:position pos:line="79" pos:column="41"/></operator> <name><name pos:line="79" pos:column="34">uri<pos:position pos:line="79" pos:column="37"/></name><operator pos:line="79" pos:column="37">-&gt;<pos:position pos:line="79" pos:column="42"/></operator><name pos:line="79" pos:column="39">port<pos:position pos:line="79" pos:column="43"/></name></name> <operator pos:line="79" pos:column="44">!=<pos:position pos:line="79" pos:column="46"/></operator> <name pos:line="79" pos:column="47">DEFAULT_HTTP_PORT<pos:position pos:line="79" pos:column="64"/></name></expr>)<pos:position pos:line="79" pos:column="65"/></condition><then pos:line="79" pos:column="65"> <block pos:line="79" pos:column="66">{
                <expr_stmt><expr><name pos:line="80" pos:column="17">buf<pos:position pos:line="80" pos:column="20"/></name> <operator pos:line="80" pos:column="21">=<pos:position pos:line="80" pos:column="22"/></operator> <call><name pos:line="80" pos:column="23">apr_pstrcat<pos:position pos:line="80" pos:column="34"/></name><argument_list pos:line="80" pos:column="34">(<argument><expr><name pos:line="80" pos:column="35">p<pos:position pos:line="80" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="38">"Host: "<pos:position pos:line="80" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="48">uri<pos:position pos:line="80" pos:column="51"/></name><operator pos:line="80" pos:column="51">-&gt;<pos:position pos:line="80" pos:column="56"/></operator><name pos:line="80" pos:column="53">hostname<pos:position pos:line="80" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="63">":"<pos:position pos:line="80" pos:column="66"/></literal></expr></argument>, 
                                  <argument><expr><name><name pos:line="81" pos:column="35">uri<pos:position pos:line="81" pos:column="38"/></name><operator pos:line="81" pos:column="38">-&gt;<pos:position pos:line="81" pos:column="43"/></operator><name pos:line="81" pos:column="40">port_str<pos:position pos:line="81" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="50">CRLF<pos:position pos:line="81" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="56">NULL<pos:position pos:line="81" pos:column="60"/></name></expr></argument>)<pos:position pos:line="81" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="82" pos:column="14"/></block></then> <else pos:line="82" pos:column="15">else <block pos:line="82" pos:column="20">{
                <expr_stmt><expr><name pos:line="83" pos:column="17">buf<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <call><name pos:line="83" pos:column="23">apr_pstrcat<pos:position pos:line="83" pos:column="34"/></name><argument_list pos:line="83" pos:column="34">(<argument><expr><name pos:line="83" pos:column="35">p<pos:position pos:line="83" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="38">"Host: "<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="48">uri<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">-&gt;<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="53">hostname<pos:position pos:line="83" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="63">CRLF<pos:position pos:line="83" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="69">NULL<pos:position pos:line="83" pos:column="73"/></name></expr></argument>)<pos:position pos:line="83" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="84" pos:column="14"/></block></else></if>
        }<pos:position pos:line="85" pos:column="10"/></block></else></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then>
    <else pos:line="87" pos:column="5">else <block pos:line="87" pos:column="10">{
        <comment type="block" pos:line="88" pos:column="9">/* don't want to use r-&gt;hostname, as the incoming header might have a
         * port attached
         */</comment>
        <decl_stmt><decl><type><specifier pos:line="91" pos:column="9">const<pos:position pos:line="91" pos:column="14"/></specifier> <name pos:line="91" pos:column="15">char<pos:position pos:line="91" pos:column="19"/></name><modifier pos:line="91" pos:column="19">*<pos:position pos:line="91" pos:column="20"/></modifier></type> <name pos:line="91" pos:column="21">hostname<pos:position pos:line="91" pos:column="29"/></name> <init pos:line="91" pos:column="30">= <expr><call><name pos:line="91" pos:column="32">apr_table_get<pos:position pos:line="91" pos:column="45"/></name><argument_list pos:line="91" pos:column="45">(<argument><expr><name><name pos:line="91" pos:column="46">r<pos:position pos:line="91" pos:column="47"/></name><operator pos:line="91" pos:column="47">-&gt;<pos:position pos:line="91" pos:column="52"/></operator><name pos:line="91" pos:column="49">headers_in<pos:position pos:line="91" pos:column="59"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="91" pos:column="60">"Host"<pos:position pos:line="91" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="91" pos:column="68"/></decl_stmt>
        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><operator pos:line="92" pos:column="13">!<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">hostname<pos:position pos:line="92" pos:column="22"/></name></expr>)<pos:position pos:line="92" pos:column="23"/></condition><then pos:line="92" pos:column="23"> <block pos:line="92" pos:column="24">{
            <expr_stmt><expr><name pos:line="93" pos:column="13">hostname<pos:position pos:line="93" pos:column="21"/></name> <operator pos:line="93" pos:column="22">=<pos:position pos:line="93" pos:column="23"/></operator>  <name><name pos:line="93" pos:column="25">r<pos:position pos:line="93" pos:column="26"/></name><operator pos:line="93" pos:column="26">-&gt;<pos:position pos:line="93" pos:column="31"/></operator><name pos:line="93" pos:column="28">server<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">server_hostname<pos:position pos:line="93" pos:column="51"/></name></name></expr>;<pos:position pos:line="93" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">ap_log_rerror<pos:position pos:line="94" pos:column="26"/></name><argument_list pos:line="94" pos:column="26">(<argument><expr><name pos:line="94" pos:column="27">APLOG_MARK<pos:position pos:line="94" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="39">APLOG_WARNING<pos:position pos:line="94" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="54">0<pos:position pos:line="94" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="57">r<pos:position pos:line="94" pos:column="58"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="95" pos:column="27">"proxy: no HTTP 0.9 request (with no host line) "<pos:position pos:line="95" pos:column="76"/></literal>
                          <literal type="string" pos:line="96" pos:column="27">"on incoming request and preserve host set "<pos:position pos:line="96" pos:column="71"/></literal>
                          <literal type="string" pos:line="97" pos:column="27">"forcing hostname to be %s for uri %s"<pos:position pos:line="97" pos:column="65"/></literal></expr></argument>,
                          <argument><expr><name pos:line="98" pos:column="27">hostname<pos:position pos:line="98" pos:column="35"/></name></expr></argument>,
                          <argument><expr><name><name pos:line="99" pos:column="27">r<pos:position pos:line="99" pos:column="28"/></name><operator pos:line="99" pos:column="28">-&gt;<pos:position pos:line="99" pos:column="33"/></operator><name pos:line="99" pos:column="30">uri<pos:position pos:line="99" pos:column="33"/></name></name></expr></argument> )<pos:position pos:line="99" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="101" pos:column="9">buf<pos:position pos:line="101" pos:column="12"/></name> <operator pos:line="101" pos:column="13">=<pos:position pos:line="101" pos:column="14"/></operator> <call><name pos:line="101" pos:column="15">apr_pstrcat<pos:position pos:line="101" pos:column="26"/></name><argument_list pos:line="101" pos:column="26">(<argument><expr><name pos:line="101" pos:column="27">p<pos:position pos:line="101" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="30">"Host: "<pos:position pos:line="101" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="40">hostname<pos:position pos:line="101" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="50">CRLF<pos:position pos:line="101" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="56">NULL<pos:position pos:line="101" pos:column="60"/></name></expr></argument>)<pos:position pos:line="101" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="103" pos:column="5">ap_xlate_proto_to_ascii<pos:position pos:line="103" pos:column="28"/></name><argument_list pos:line="103" pos:column="28">(<argument><expr><name pos:line="103" pos:column="29">buf<pos:position pos:line="103" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="103" pos:column="34">strlen<pos:position pos:line="103" pos:column="40"/></name><argument_list pos:line="103" pos:column="40">(<argument><expr><name pos:line="103" pos:column="41">buf<pos:position pos:line="103" pos:column="44"/></name></expr></argument>)<pos:position pos:line="103" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="104" pos:column="5">e<pos:position pos:line="104" pos:column="6"/></name> <operator pos:line="104" pos:column="7">=<pos:position pos:line="104" pos:column="8"/></operator> <call><name pos:line="104" pos:column="9">apr_bucket_pool_create<pos:position pos:line="104" pos:column="31"/></name><argument_list pos:line="104" pos:column="31">(<argument><expr><name pos:line="104" pos:column="32">buf<pos:position pos:line="104" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="104" pos:column="37">strlen<pos:position pos:line="104" pos:column="43"/></name><argument_list pos:line="104" pos:column="43">(<argument><expr><name pos:line="104" pos:column="44">buf<pos:position pos:line="104" pos:column="47"/></name></expr></argument>)<pos:position pos:line="104" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="104" pos:column="50">p<pos:position pos:line="104" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="53">c<pos:position pos:line="104" pos:column="54"/></name><operator pos:line="104" pos:column="54">-&gt;<pos:position pos:line="104" pos:column="59"/></operator><name pos:line="104" pos:column="56">bucket_alloc<pos:position pos:line="104" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="105" pos:column="28"/></name><argument_list pos:line="105" pos:column="28">(<argument><expr><name pos:line="105" pos:column="29">header_brigade<pos:position pos:line="105" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="45">e<pos:position pos:line="105" pos:column="46"/></name></expr></argument>)<pos:position pos:line="105" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="107" pos:column="5">/* handle Via */</comment>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><name><name pos:line="108" pos:column="9">conf<pos:position pos:line="108" pos:column="13"/></name><operator pos:line="108" pos:column="13">-&gt;<pos:position pos:line="108" pos:column="18"/></operator><name pos:line="108" pos:column="15">viaopt<pos:position pos:line="108" pos:column="21"/></name></name> <operator pos:line="108" pos:column="22">==<pos:position pos:line="108" pos:column="24"/></operator> <name pos:line="108" pos:column="25">via_block<pos:position pos:line="108" pos:column="34"/></name></expr>)<pos:position pos:line="108" pos:column="35"/></condition><then pos:line="108" pos:column="35"> <block pos:line="108" pos:column="36">{
        <comment type="block" pos:line="109" pos:column="9">/* Block all outgoing Via: headers */</comment>
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">apr_table_unset<pos:position pos:line="110" pos:column="24"/></name><argument_list pos:line="110" pos:column="24">(<argument><expr><name><name pos:line="110" pos:column="25">r<pos:position pos:line="110" pos:column="26"/></name><operator pos:line="110" pos:column="26">-&gt;<pos:position pos:line="110" pos:column="31"/></operator><name pos:line="110" pos:column="28">headers_in<pos:position pos:line="110" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="40">"Via"<pos:position pos:line="110" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="111" pos:column="6"/></block></then> <elseif pos:line="111" pos:column="7">else <if pos:line="111" pos:column="12">if <condition pos:line="111" pos:column="15">(<expr><name><name pos:line="111" pos:column="16">conf<pos:position pos:line="111" pos:column="20"/></name><operator pos:line="111" pos:column="20">-&gt;<pos:position pos:line="111" pos:column="25"/></operator><name pos:line="111" pos:column="22">viaopt<pos:position pos:line="111" pos:column="28"/></name></name> <operator pos:line="111" pos:column="29">!=<pos:position pos:line="111" pos:column="31"/></operator> <name pos:line="111" pos:column="32">via_off<pos:position pos:line="111" pos:column="39"/></name></expr>)<pos:position pos:line="111" pos:column="40"/></condition><then pos:line="111" pos:column="40"> <block pos:line="111" pos:column="41">{
        <decl_stmt><decl><type><specifier pos:line="112" pos:column="9">const<pos:position pos:line="112" pos:column="14"/></specifier> <name pos:line="112" pos:column="15">char<pos:position pos:line="112" pos:column="19"/></name> <modifier pos:line="112" pos:column="20">*<pos:position pos:line="112" pos:column="21"/></modifier></type><name pos:line="112" pos:column="21">server_name<pos:position pos:line="112" pos:column="32"/></name> <init pos:line="112" pos:column="33">= <expr><call><name pos:line="112" pos:column="35">ap_get_server_name<pos:position pos:line="112" pos:column="53"/></name><argument_list pos:line="112" pos:column="53">(<argument><expr><name pos:line="112" pos:column="54">r<pos:position pos:line="112" pos:column="55"/></name></expr></argument>)<pos:position pos:line="112" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="112" pos:column="57"/></decl_stmt>
        <comment type="block" pos:line="113" pos:column="9">/* If USE_CANONICAL_NAME_OFF was configured for the proxy virtual host,
         * then the server name returned by ap_get_server_name() is the
         * origin server name (which does make too much sense with Via: headers)
         * so we use the proxy vhost's name instead.
         */</comment>
        <if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name pos:line="118" pos:column="13">server_name<pos:position pos:line="118" pos:column="24"/></name> <operator pos:line="118" pos:column="25">==<pos:position pos:line="118" pos:column="27"/></operator> <name><name pos:line="118" pos:column="28">r<pos:position pos:line="118" pos:column="29"/></name><operator pos:line="118" pos:column="29">-&gt;<pos:position pos:line="118" pos:column="34"/></operator><name pos:line="118" pos:column="31">hostname<pos:position pos:line="118" pos:column="39"/></name></name></expr>)<pos:position pos:line="118" pos:column="40"/></condition><then pos:line="118" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name pos:line="119" pos:column="13">server_name<pos:position pos:line="119" pos:column="24"/></name> <operator pos:line="119" pos:column="25">=<pos:position pos:line="119" pos:column="26"/></operator> <name><name pos:line="119" pos:column="27">r<pos:position pos:line="119" pos:column="28"/></name><operator pos:line="119" pos:column="28">-&gt;<pos:position pos:line="119" pos:column="33"/></operator><name pos:line="119" pos:column="30">server<pos:position pos:line="119" pos:column="36"/></name><operator pos:line="119" pos:column="36">-&gt;<pos:position pos:line="119" pos:column="41"/></operator><name pos:line="119" pos:column="38">server_hostname<pos:position pos:line="119" pos:column="53"/></name></name></expr>;<pos:position pos:line="119" pos:column="54"/></expr_stmt></block></then></if>
        <comment type="block" pos:line="120" pos:column="9">/* Create a "Via:" request header entry and merge it */</comment>
        <comment type="block" pos:line="121" pos:column="9">/* Generate outgoing Via: header with/without server comment: */</comment>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">apr_table_mergen<pos:position pos:line="122" pos:column="25"/></name><argument_list pos:line="122" pos:column="25">(<argument><expr><name><name pos:line="122" pos:column="26">r<pos:position pos:line="122" pos:column="27"/></name><operator pos:line="122" pos:column="27">-&gt;<pos:position pos:line="122" pos:column="32"/></operator><name pos:line="122" pos:column="29">headers_in<pos:position pos:line="122" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="41">"Via"<pos:position pos:line="122" pos:column="46"/></literal></expr></argument>,
                         <argument><expr><ternary><condition><expr><operator pos:line="123" pos:column="26">(<pos:position pos:line="123" pos:column="27"/></operator><name><name pos:line="123" pos:column="27">conf<pos:position pos:line="123" pos:column="31"/></name><operator pos:line="123" pos:column="31">-&gt;<pos:position pos:line="123" pos:column="36"/></operator><name pos:line="123" pos:column="33">viaopt<pos:position pos:line="123" pos:column="39"/></name></name> <operator pos:line="123" pos:column="40">==<pos:position pos:line="123" pos:column="42"/></operator> <name pos:line="123" pos:column="43">via_full<pos:position pos:line="123" pos:column="51"/></name><operator pos:line="123" pos:column="51">)<pos:position pos:line="123" pos:column="52"/></operator></expr>
                         ?<pos:position pos:line="124" pos:column="27"/></condition><then pos:line="124" pos:column="27"> <expr><call><name pos:line="124" pos:column="28">apr_psprintf<pos:position pos:line="124" pos:column="40"/></name><argument_list pos:line="124" pos:column="40">(<argument><expr><name pos:line="124" pos:column="41">p<pos:position pos:line="124" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="44">"%d.%d %s%s (%s)"<pos:position pos:line="124" pos:column="61"/></literal></expr></argument>,
                                        <argument><expr><call><name pos:line="125" pos:column="41">HTTP_VERSION_MAJOR<pos:position pos:line="125" pos:column="59"/></name><argument_list pos:line="125" pos:column="59">(<argument><expr><name><name pos:line="125" pos:column="60">r<pos:position pos:line="125" pos:column="61"/></name><operator pos:line="125" pos:column="61">-&gt;<pos:position pos:line="125" pos:column="66"/></operator><name pos:line="125" pos:column="63">proto_num<pos:position pos:line="125" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="73"/></argument_list></call></expr></argument>,
                                        <argument><expr><call><name pos:line="126" pos:column="41">HTTP_VERSION_MINOR<pos:position pos:line="126" pos:column="59"/></name><argument_list pos:line="126" pos:column="59">(<argument><expr><name><name pos:line="126" pos:column="60">r<pos:position pos:line="126" pos:column="61"/></name><operator pos:line="126" pos:column="61">-&gt;<pos:position pos:line="126" pos:column="66"/></operator><name pos:line="126" pos:column="63">proto_num<pos:position pos:line="126" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="73"/></argument_list></call></expr></argument>,
                                        <argument><expr><name pos:line="127" pos:column="41">server_name<pos:position pos:line="127" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="54">server_portstr<pos:position pos:line="127" pos:column="68"/></name></expr></argument>,
                                        <argument><expr><name pos:line="128" pos:column="41">AP_SERVER_BASEVERSION<pos:position pos:line="128" pos:column="62"/></name></expr></argument>)<pos:position pos:line="128" pos:column="63"/></argument_list></call></expr>
                         <pos:position pos:line="129" pos:column="26"/></then><else pos:line="129" pos:column="26">: <expr><call><name pos:line="129" pos:column="28">apr_psprintf<pos:position pos:line="129" pos:column="40"/></name><argument_list pos:line="129" pos:column="40">(<argument><expr><name pos:line="129" pos:column="41">p<pos:position pos:line="129" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="44">"%d.%d %s%s"<pos:position pos:line="129" pos:column="56"/></literal></expr></argument>,
                                        <argument><expr><call><name pos:line="130" pos:column="41">HTTP_VERSION_MAJOR<pos:position pos:line="130" pos:column="59"/></name><argument_list pos:line="130" pos:column="59">(<argument><expr><name><name pos:line="130" pos:column="60">r<pos:position pos:line="130" pos:column="61"/></name><operator pos:line="130" pos:column="61">-&gt;<pos:position pos:line="130" pos:column="66"/></operator><name pos:line="130" pos:column="63">proto_num<pos:position pos:line="130" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="73"/></argument_list></call></expr></argument>,
                                        <argument><expr><call><name pos:line="131" pos:column="41">HTTP_VERSION_MINOR<pos:position pos:line="131" pos:column="59"/></name><argument_list pos:line="131" pos:column="59">(<argument><expr><name><name pos:line="131" pos:column="60">r<pos:position pos:line="131" pos:column="61"/></name><operator pos:line="131" pos:column="61">-&gt;<pos:position pos:line="131" pos:column="66"/></operator><name pos:line="131" pos:column="63">proto_num<pos:position pos:line="131" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="73"/></argument_list></call></expr></argument>,
                                        <argument><expr><name pos:line="132" pos:column="41">server_name<pos:position pos:line="132" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="54">server_portstr<pos:position pos:line="132" pos:column="68"/></name></expr></argument>)<pos:position pos:line="132" pos:column="69"/></argument_list></call></expr></else></ternary></expr></argument>
        )<pos:position pos:line="133" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="136" pos:column="5">/* Use HTTP/1.1 100-Continue as quick "HTTP ping" test
     * to backend
     */</comment>
    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><name pos:line="139" pos:column="9">do_100_continue<pos:position pos:line="139" pos:column="24"/></name></expr>)<pos:position pos:line="139" pos:column="25"/></condition><then pos:line="139" pos:column="25"> <block pos:line="139" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">apr_table_mergen<pos:position pos:line="140" pos:column="25"/></name><argument_list pos:line="140" pos:column="25">(<argument><expr><name><name pos:line="140" pos:column="26">r<pos:position pos:line="140" pos:column="27"/></name><operator pos:line="140" pos:column="27">-&gt;<pos:position pos:line="140" pos:column="32"/></operator><name pos:line="140" pos:column="29">headers_in<pos:position pos:line="140" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="41">"Expect"<pos:position pos:line="140" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="51">"100-Continue"<pos:position pos:line="140" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="141" pos:column="9">r<pos:position pos:line="141" pos:column="10"/></name><operator pos:line="141" pos:column="10">-&gt;<pos:position pos:line="141" pos:column="15"/></operator><name pos:line="141" pos:column="12">expecting_100<pos:position pos:line="141" pos:column="25"/></name></name> <operator pos:line="141" pos:column="26">=<pos:position pos:line="141" pos:column="27"/></operator> <literal type="number" pos:line="141" pos:column="28">1<pos:position pos:line="141" pos:column="29"/></literal></expr>;<pos:position pos:line="141" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="142" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="144" pos:column="5">/* X-Forwarded-*: handling
     *
     * XXX Privacy Note:
     * -----------------
     *
     * These request headers are only really useful when the mod_proxy
     * is used in a reverse proxy configuration, so that useful info
     * about the client can be passed through the reverse proxy and on
     * to the backend server, which may require the information to
     * function properly.
     *
     * In a forward proxy situation, these options are a potential
     * privacy violation, as information about clients behind the proxy
     * are revealed to arbitrary servers out there on the internet.
     *
     * The HTTP/1.1 Via: header is designed for passing client
     * information through proxies to a server, and should be used in
     * a forward proxy configuation instead of X-Forwarded-*. See the
     * ProxyVia option for details.
     */</comment>

    <if pos:line="165" pos:column="5">if <condition pos:line="165" pos:column="8">(<expr><name pos:line="165" pos:column="9">PROXYREQ_REVERSE<pos:position pos:line="165" pos:column="25"/></name> <operator pos:line="165" pos:column="26">==<pos:position pos:line="165" pos:column="28"/></operator> <name><name pos:line="165" pos:column="29">r<pos:position pos:line="165" pos:column="30"/></name><operator pos:line="165" pos:column="30">-&gt;<pos:position pos:line="165" pos:column="35"/></operator><name pos:line="165" pos:column="32">proxyreq<pos:position pos:line="165" pos:column="40"/></name></name></expr>)<pos:position pos:line="165" pos:column="41"/></condition><then pos:line="165" pos:column="41"> <block pos:line="165" pos:column="42">{
        <decl_stmt><decl><type><specifier pos:line="166" pos:column="9">const<pos:position pos:line="166" pos:column="14"/></specifier> <name pos:line="166" pos:column="15">char<pos:position pos:line="166" pos:column="19"/></name> <modifier pos:line="166" pos:column="20">*<pos:position pos:line="166" pos:column="21"/></modifier></type><name pos:line="166" pos:column="21">buf<pos:position pos:line="166" pos:column="24"/></name></decl>;<pos:position pos:line="166" pos:column="25"/></decl_stmt>

        <comment type="block" pos:line="168" pos:column="9">/* Add X-Forwarded-For: so that the upstream has a chance to
         * determine, where the original request came from.
         */</comment>
        <expr_stmt><expr><call><name pos:line="171" pos:column="9">apr_table_mergen<pos:position pos:line="171" pos:column="25"/></name><argument_list pos:line="171" pos:column="25">(<argument><expr><name><name pos:line="171" pos:column="26">r<pos:position pos:line="171" pos:column="27"/></name><operator pos:line="171" pos:column="27">-&gt;<pos:position pos:line="171" pos:column="32"/></operator><name pos:line="171" pos:column="29">headers_in<pos:position pos:line="171" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="41">"X-Forwarded-For"<pos:position pos:line="171" pos:column="58"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="172" pos:column="26">c<pos:position pos:line="172" pos:column="27"/></name><operator pos:line="172" pos:column="27">-&gt;<pos:position pos:line="172" pos:column="32"/></operator><name pos:line="172" pos:column="29">remote_ip<pos:position pos:line="172" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="174" pos:column="9">/* Add X-Forwarded-Host: so that upstream knows what the
         * original request hostname was.
         */</comment>
        <if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><operator pos:line="177" pos:column="13">(<pos:position pos:line="177" pos:column="14"/></operator><name pos:line="177" pos:column="14">buf<pos:position pos:line="177" pos:column="17"/></name> <operator pos:line="177" pos:column="18">=<pos:position pos:line="177" pos:column="19"/></operator> <call><name pos:line="177" pos:column="20">apr_table_get<pos:position pos:line="177" pos:column="33"/></name><argument_list pos:line="177" pos:column="33">(<argument><expr><name><name pos:line="177" pos:column="34">r<pos:position pos:line="177" pos:column="35"/></name><operator pos:line="177" pos:column="35">-&gt;<pos:position pos:line="177" pos:column="40"/></operator><name pos:line="177" pos:column="37">headers_in<pos:position pos:line="177" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="49">"Host"<pos:position pos:line="177" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="56"/></argument_list></call><operator pos:line="177" pos:column="56">)<pos:position pos:line="177" pos:column="57"/></operator></expr>)<pos:position pos:line="177" pos:column="58"/></condition><then pos:line="177" pos:column="58"> <block pos:line="177" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="178" pos:column="13">apr_table_mergen<pos:position pos:line="178" pos:column="29"/></name><argument_list pos:line="178" pos:column="29">(<argument><expr><name><name pos:line="178" pos:column="30">r<pos:position pos:line="178" pos:column="31"/></name><operator pos:line="178" pos:column="31">-&gt;<pos:position pos:line="178" pos:column="36"/></operator><name pos:line="178" pos:column="33">headers_in<pos:position pos:line="178" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="45">"X-Forwarded-Host"<pos:position pos:line="178" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="178" pos:column="65">buf<pos:position pos:line="178" pos:column="68"/></name></expr></argument>)<pos:position pos:line="178" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="179" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="181" pos:column="9">/* Add X-Forwarded-Server: so that upstream knows what the
         * name of this proxy server is (if there are more than one)
         * XXX: This duplicates Via: - do we strictly need it?
         */</comment>
        <expr_stmt><expr><call><name pos:line="185" pos:column="9">apr_table_mergen<pos:position pos:line="185" pos:column="25"/></name><argument_list pos:line="185" pos:column="25">(<argument><expr><name><name pos:line="185" pos:column="26">r<pos:position pos:line="185" pos:column="27"/></name><operator pos:line="185" pos:column="27">-&gt;<pos:position pos:line="185" pos:column="32"/></operator><name pos:line="185" pos:column="29">headers_in<pos:position pos:line="185" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="41">"X-Forwarded-Server"<pos:position pos:line="185" pos:column="61"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="186" pos:column="26">r<pos:position pos:line="186" pos:column="27"/></name><operator pos:line="186" pos:column="27">-&gt;<pos:position pos:line="186" pos:column="32"/></operator><name pos:line="186" pos:column="29">server<pos:position pos:line="186" pos:column="35"/></name><operator pos:line="186" pos:column="35">-&gt;<pos:position pos:line="186" pos:column="40"/></operator><name pos:line="186" pos:column="37">server_hostname<pos:position pos:line="186" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="186" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="187" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="189" pos:column="5">proxy_run_fixups<pos:position pos:line="189" pos:column="21"/></name><argument_list pos:line="189" pos:column="21">(<argument><expr><name pos:line="189" pos:column="22">r<pos:position pos:line="189" pos:column="23"/></name></expr></argument>)<pos:position pos:line="189" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="25"/></expr_stmt>
    <comment type="block" pos:line="190" pos:column="5">/*
     * Make a copy of the headers_in table before clearing the connection
     * headers as we need the connection headers later in the http output
     * filter to prepare the correct response headers.
     *
     * Note: We need to take r-&gt;pool for apr_table_copy as the key / value
     * pairs in r-&gt;headers_in have been created out of r-&gt;pool and
     * p might be (and actually is) a longer living pool.
     * This would trigger the bad pool ancestry abort in apr_table_copy if
     * apr is compiled with APR_POOL_DEBUG.
     */</comment>
    <expr_stmt><expr><name pos:line="201" pos:column="5">headers_in_copy<pos:position pos:line="201" pos:column="20"/></name> <operator pos:line="201" pos:column="21">=<pos:position pos:line="201" pos:column="22"/></operator> <call><name pos:line="201" pos:column="23">apr_table_copy<pos:position pos:line="201" pos:column="37"/></name><argument_list pos:line="201" pos:column="37">(<argument><expr><name><name pos:line="201" pos:column="38">r<pos:position pos:line="201" pos:column="39"/></name><operator pos:line="201" pos:column="39">-&gt;<pos:position pos:line="201" pos:column="44"/></operator><name pos:line="201" pos:column="41">pool<pos:position pos:line="201" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="201" pos:column="47">r<pos:position pos:line="201" pos:column="48"/></name><operator pos:line="201" pos:column="48">-&gt;<pos:position pos:line="201" pos:column="53"/></operator><name pos:line="201" pos:column="50">headers_in<pos:position pos:line="201" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="201" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="202" pos:column="5">ap_proxy_clear_connection<pos:position pos:line="202" pos:column="30"/></name><argument_list pos:line="202" pos:column="30">(<argument><expr><name pos:line="202" pos:column="31">p<pos:position pos:line="202" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="34">headers_in_copy<pos:position pos:line="202" pos:column="49"/></name></expr></argument>)<pos:position pos:line="202" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="51"/></expr_stmt>
    <comment type="block" pos:line="203" pos:column="5">/* send request headers */</comment>
    <expr_stmt><expr><name pos:line="204" pos:column="5">headers_in_array<pos:position pos:line="204" pos:column="21"/></name> <operator pos:line="204" pos:column="22">=<pos:position pos:line="204" pos:column="23"/></operator> <call><name pos:line="204" pos:column="24">apr_table_elts<pos:position pos:line="204" pos:column="38"/></name><argument_list pos:line="204" pos:column="38">(<argument><expr><name pos:line="204" pos:column="39">headers_in_copy<pos:position pos:line="204" pos:column="54"/></name></expr></argument>)<pos:position pos:line="204" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="205" pos:column="5">headers_in<pos:position pos:line="205" pos:column="15"/></name> <operator pos:line="205" pos:column="16">=<pos:position pos:line="205" pos:column="17"/></operator> <operator pos:line="205" pos:column="18">(<pos:position pos:line="205" pos:column="19"/></operator><specifier pos:line="205" pos:column="19">const<pos:position pos:line="205" pos:column="24"/></specifier> <name pos:line="205" pos:column="25">apr_table_entry_t<pos:position pos:line="205" pos:column="42"/></name> <operator pos:line="205" pos:column="43">*<pos:position pos:line="205" pos:column="44"/></operator><operator pos:line="205" pos:column="44">)<pos:position pos:line="205" pos:column="45"/></operator> <name><name pos:line="205" pos:column="46">headers_in_array<pos:position pos:line="205" pos:column="62"/></name><operator pos:line="205" pos:column="62">-&gt;<pos:position pos:line="205" pos:column="67"/></operator><name pos:line="205" pos:column="64">elts<pos:position pos:line="205" pos:column="68"/></name></name></expr>;<pos:position pos:line="205" pos:column="69"/></expr_stmt>
    <for pos:line="206" pos:column="5">for <control pos:line="206" pos:column="9">(<init><expr><name pos:line="206" pos:column="10">counter<pos:position pos:line="206" pos:column="17"/></name> <operator pos:line="206" pos:column="18">=<pos:position pos:line="206" pos:column="19"/></operator> <literal type="number" pos:line="206" pos:column="20">0<pos:position pos:line="206" pos:column="21"/></literal></expr>;<pos:position pos:line="206" pos:column="22"/></init> <condition><expr><name pos:line="206" pos:column="23">counter<pos:position pos:line="206" pos:column="30"/></name> <operator pos:line="206" pos:column="31">&lt;<pos:position pos:line="206" pos:column="35"/></operator> <name><name pos:line="206" pos:column="33">headers_in_array<pos:position pos:line="206" pos:column="49"/></name><operator pos:line="206" pos:column="49">-&gt;<pos:position pos:line="206" pos:column="54"/></operator><name pos:line="206" pos:column="51">nelts<pos:position pos:line="206" pos:column="56"/></name></name></expr>;<pos:position pos:line="206" pos:column="57"/></condition> <incr><expr><name pos:line="206" pos:column="58">counter<pos:position pos:line="206" pos:column="65"/></name><operator pos:line="206" pos:column="65">++<pos:position pos:line="206" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="206" pos:column="68"/></control> <block pos:line="206" pos:column="69">{
        <if pos:line="207" pos:column="9">if <condition pos:line="207" pos:column="12">(<expr><name><name pos:line="207" pos:column="13">headers_in<pos:position pos:line="207" pos:column="23"/></name><index pos:line="207" pos:column="23">[<expr><name pos:line="207" pos:column="24">counter<pos:position pos:line="207" pos:column="31"/></name></expr>]<pos:position pos:line="207" pos:column="32"/></index></name><operator pos:line="207" pos:column="32">.<pos:position pos:line="207" pos:column="33"/></operator><name pos:line="207" pos:column="33">key<pos:position pos:line="207" pos:column="36"/></name> <operator pos:line="207" pos:column="37">==<pos:position pos:line="207" pos:column="39"/></operator> <name pos:line="207" pos:column="40">NULL<pos:position pos:line="207" pos:column="44"/></name>
             <operator pos:line="208" pos:column="14">||<pos:position pos:line="208" pos:column="16"/></operator> <name><name pos:line="208" pos:column="17">headers_in<pos:position pos:line="208" pos:column="27"/></name><index pos:line="208" pos:column="27">[<expr><name pos:line="208" pos:column="28">counter<pos:position pos:line="208" pos:column="35"/></name></expr>]<pos:position pos:line="208" pos:column="36"/></index></name><operator pos:line="208" pos:column="36">.<pos:position pos:line="208" pos:column="37"/></operator><name pos:line="208" pos:column="37">val<pos:position pos:line="208" pos:column="40"/></name> <operator pos:line="208" pos:column="41">==<pos:position pos:line="208" pos:column="43"/></operator> <name pos:line="208" pos:column="44">NULL<pos:position pos:line="208" pos:column="48"/></name>

            <comment type="block" pos:line="210" pos:column="13">/* Already sent */</comment>
             <operator pos:line="211" pos:column="14">||<pos:position pos:line="211" pos:column="16"/></operator> <operator pos:line="211" pos:column="17">!<pos:position pos:line="211" pos:column="18"/></operator><call><name pos:line="211" pos:column="18">strcasecmp<pos:position pos:line="211" pos:column="28"/></name><argument_list pos:line="211" pos:column="28">(<argument><expr><name><name pos:line="211" pos:column="29">headers_in<pos:position pos:line="211" pos:column="39"/></name><index pos:line="211" pos:column="39">[<expr><name pos:line="211" pos:column="40">counter<pos:position pos:line="211" pos:column="47"/></name></expr>]<pos:position pos:line="211" pos:column="48"/></index></name><operator pos:line="211" pos:column="48">.<pos:position pos:line="211" pos:column="49"/></operator><name pos:line="211" pos:column="49">key<pos:position pos:line="211" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="211" pos:column="54">"Host"<pos:position pos:line="211" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="211" pos:column="61"/></argument_list></call>

            <comment type="block" pos:line="213" pos:column="13">/* Clear out hop-by-hop request headers not to send
             * RFC2616 13.5.1 says we should strip these headers
             */</comment>
             <operator pos:line="216" pos:column="14">||<pos:position pos:line="216" pos:column="16"/></operator> <operator pos:line="216" pos:column="17">!<pos:position pos:line="216" pos:column="18"/></operator><call><name pos:line="216" pos:column="18">strcasecmp<pos:position pos:line="216" pos:column="28"/></name><argument_list pos:line="216" pos:column="28">(<argument><expr><name><name pos:line="216" pos:column="29">headers_in<pos:position pos:line="216" pos:column="39"/></name><index pos:line="216" pos:column="39">[<expr><name pos:line="216" pos:column="40">counter<pos:position pos:line="216" pos:column="47"/></name></expr>]<pos:position pos:line="216" pos:column="48"/></index></name><operator pos:line="216" pos:column="48">.<pos:position pos:line="216" pos:column="49"/></operator><name pos:line="216" pos:column="49">key<pos:position pos:line="216" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="54">"Keep-Alive"<pos:position pos:line="216" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="67"/></argument_list></call>
             <operator pos:line="217" pos:column="14">||<pos:position pos:line="217" pos:column="16"/></operator> <operator pos:line="217" pos:column="17">!<pos:position pos:line="217" pos:column="18"/></operator><call><name pos:line="217" pos:column="18">strcasecmp<pos:position pos:line="217" pos:column="28"/></name><argument_list pos:line="217" pos:column="28">(<argument><expr><name><name pos:line="217" pos:column="29">headers_in<pos:position pos:line="217" pos:column="39"/></name><index pos:line="217" pos:column="39">[<expr><name pos:line="217" pos:column="40">counter<pos:position pos:line="217" pos:column="47"/></name></expr>]<pos:position pos:line="217" pos:column="48"/></index></name><operator pos:line="217" pos:column="48">.<pos:position pos:line="217" pos:column="49"/></operator><name pos:line="217" pos:column="49">key<pos:position pos:line="217" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="54">"TE"<pos:position pos:line="217" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="59"/></argument_list></call>
             <operator pos:line="218" pos:column="14">||<pos:position pos:line="218" pos:column="16"/></operator> <operator pos:line="218" pos:column="17">!<pos:position pos:line="218" pos:column="18"/></operator><call><name pos:line="218" pos:column="18">strcasecmp<pos:position pos:line="218" pos:column="28"/></name><argument_list pos:line="218" pos:column="28">(<argument><expr><name><name pos:line="218" pos:column="29">headers_in<pos:position pos:line="218" pos:column="39"/></name><index pos:line="218" pos:column="39">[<expr><name pos:line="218" pos:column="40">counter<pos:position pos:line="218" pos:column="47"/></name></expr>]<pos:position pos:line="218" pos:column="48"/></index></name><operator pos:line="218" pos:column="48">.<pos:position pos:line="218" pos:column="49"/></operator><name pos:line="218" pos:column="49">key<pos:position pos:line="218" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="54">"Trailer"<pos:position pos:line="218" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="218" pos:column="64"/></argument_list></call>
             <operator pos:line="219" pos:column="14">||<pos:position pos:line="219" pos:column="16"/></operator> <operator pos:line="219" pos:column="17">!<pos:position pos:line="219" pos:column="18"/></operator><call><name pos:line="219" pos:column="18">strcasecmp<pos:position pos:line="219" pos:column="28"/></name><argument_list pos:line="219" pos:column="28">(<argument><expr><name><name pos:line="219" pos:column="29">headers_in<pos:position pos:line="219" pos:column="39"/></name><index pos:line="219" pos:column="39">[<expr><name pos:line="219" pos:column="40">counter<pos:position pos:line="219" pos:column="47"/></name></expr>]<pos:position pos:line="219" pos:column="48"/></index></name><operator pos:line="219" pos:column="48">.<pos:position pos:line="219" pos:column="49"/></operator><name pos:line="219" pos:column="49">key<pos:position pos:line="219" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="54">"Upgrade"<pos:position pos:line="219" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="64"/></argument_list></call></expr>

             )<pos:position pos:line="221" pos:column="15"/></condition><then pos:line="221" pos:column="15"> <block pos:line="221" pos:column="16">{
            <continue pos:line="222" pos:column="13">continue;<pos:position pos:line="222" pos:column="22"/></continue>
        }<pos:position pos:line="223" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="224" pos:column="9">/* Do we want to strip Proxy-Authorization ?
         * If we haven't used it, then NO
         * If we have used it then MAYBE: RFC2616 says we MAY propagate it.
         * So let's make it configurable by env.
         */</comment>
        <if pos:line="229" pos:column="9">if <condition pos:line="229" pos:column="12">(<expr><operator pos:line="229" pos:column="13">!<pos:position pos:line="229" pos:column="14"/></operator><call><name pos:line="229" pos:column="14">strcasecmp<pos:position pos:line="229" pos:column="24"/></name><argument_list pos:line="229" pos:column="24">(<argument><expr><name><name pos:line="229" pos:column="25">headers_in<pos:position pos:line="229" pos:column="35"/></name><index pos:line="229" pos:column="35">[<expr><name pos:line="229" pos:column="36">counter<pos:position pos:line="229" pos:column="43"/></name></expr>]<pos:position pos:line="229" pos:column="44"/></index></name><operator pos:line="229" pos:column="44">.<pos:position pos:line="229" pos:column="45"/></operator><name pos:line="229" pos:column="45">key<pos:position pos:line="229" pos:column="48"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="229" pos:column="49">"Proxy-Authorization"<pos:position pos:line="229" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="229" pos:column="72"/></condition><then pos:line="229" pos:column="72"> <block pos:line="229" pos:column="73">{
            <if pos:line="230" pos:column="13">if <condition pos:line="230" pos:column="16">(<expr><name><name pos:line="230" pos:column="17">r<pos:position pos:line="230" pos:column="18"/></name><operator pos:line="230" pos:column="18">-&gt;<pos:position pos:line="230" pos:column="23"/></operator><name pos:line="230" pos:column="20">user<pos:position pos:line="230" pos:column="24"/></name></name> <operator pos:line="230" pos:column="25">!=<pos:position pos:line="230" pos:column="27"/></operator> <name pos:line="230" pos:column="28">NULL<pos:position pos:line="230" pos:column="32"/></name></expr>)<pos:position pos:line="230" pos:column="33"/></condition><then pos:line="230" pos:column="33"> <block pos:line="230" pos:column="34">{ <comment type="block" pos:line="230" pos:column="36">/* we've authenticated */</comment>
                <if pos:line="231" pos:column="17">if <condition pos:line="231" pos:column="20">(<expr><operator pos:line="231" pos:column="21">!<pos:position pos:line="231" pos:column="22"/></operator><call><name pos:line="231" pos:column="22">apr_table_get<pos:position pos:line="231" pos:column="35"/></name><argument_list pos:line="231" pos:column="35">(<argument><expr><name><name pos:line="231" pos:column="36">r<pos:position pos:line="231" pos:column="37"/></name><operator pos:line="231" pos:column="37">-&gt;<pos:position pos:line="231" pos:column="42"/></operator><name pos:line="231" pos:column="39">subprocess_env<pos:position pos:line="231" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="55">"Proxy-Chain-Auth"<pos:position pos:line="231" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="231" pos:column="75"/></condition><then pos:line="231" pos:column="75"> <block pos:line="231" pos:column="76">{
                    <continue pos:line="232" pos:column="21">continue;<pos:position pos:line="232" pos:column="30"/></continue>
                }<pos:position pos:line="233" pos:column="18"/></block></then></if>
            }<pos:position pos:line="234" pos:column="14"/></block></then></if>
        }<pos:position pos:line="235" pos:column="10"/></block></then></if>


        <comment type="block" pos:line="238" pos:column="9">/* Skip Transfer-Encoding and Content-Length for now.
         */</comment>
        <if pos:line="240" pos:column="9">if <condition pos:line="240" pos:column="12">(<expr><operator pos:line="240" pos:column="13">!<pos:position pos:line="240" pos:column="14"/></operator><call><name pos:line="240" pos:column="14">strcasecmp<pos:position pos:line="240" pos:column="24"/></name><argument_list pos:line="240" pos:column="24">(<argument><expr><name><name pos:line="240" pos:column="25">headers_in<pos:position pos:line="240" pos:column="35"/></name><index pos:line="240" pos:column="35">[<expr><name pos:line="240" pos:column="36">counter<pos:position pos:line="240" pos:column="43"/></name></expr>]<pos:position pos:line="240" pos:column="44"/></index></name><operator pos:line="240" pos:column="44">.<pos:position pos:line="240" pos:column="45"/></operator><name pos:line="240" pos:column="45">key<pos:position pos:line="240" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="240" pos:column="50">"Transfer-Encoding"<pos:position pos:line="240" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="240" pos:column="71"/></condition><then pos:line="240" pos:column="71"> <block pos:line="240" pos:column="72">{
            <expr_stmt><expr><name pos:line="241" pos:column="13">old_te_val<pos:position pos:line="241" pos:column="23"/></name> <operator pos:line="241" pos:column="24">=<pos:position pos:line="241" pos:column="25"/></operator> <name><name pos:line="241" pos:column="26">headers_in<pos:position pos:line="241" pos:column="36"/></name><index pos:line="241" pos:column="36">[<expr><name pos:line="241" pos:column="37">counter<pos:position pos:line="241" pos:column="44"/></name></expr>]<pos:position pos:line="241" pos:column="45"/></index></name><operator pos:line="241" pos:column="45">.<pos:position pos:line="241" pos:column="46"/></operator><name pos:line="241" pos:column="46">val<pos:position pos:line="241" pos:column="49"/></name></expr>;<pos:position pos:line="241" pos:column="50"/></expr_stmt>
            <continue pos:line="242" pos:column="13">continue;<pos:position pos:line="242" pos:column="22"/></continue>
        }<pos:position pos:line="243" pos:column="10"/></block></then></if>
        <if pos:line="244" pos:column="9">if <condition pos:line="244" pos:column="12">(<expr><operator pos:line="244" pos:column="13">!<pos:position pos:line="244" pos:column="14"/></operator><call><name pos:line="244" pos:column="14">strcasecmp<pos:position pos:line="244" pos:column="24"/></name><argument_list pos:line="244" pos:column="24">(<argument><expr><name><name pos:line="244" pos:column="25">headers_in<pos:position pos:line="244" pos:column="35"/></name><index pos:line="244" pos:column="35">[<expr><name pos:line="244" pos:column="36">counter<pos:position pos:line="244" pos:column="43"/></name></expr>]<pos:position pos:line="244" pos:column="44"/></index></name><operator pos:line="244" pos:column="44">.<pos:position pos:line="244" pos:column="45"/></operator><name pos:line="244" pos:column="45">key<pos:position pos:line="244" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="244" pos:column="50">"Content-Length"<pos:position pos:line="244" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="244" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="244" pos:column="68"/></condition><then pos:line="244" pos:column="68"> <block pos:line="244" pos:column="69">{
            <expr_stmt><expr><name pos:line="245" pos:column="13">old_cl_val<pos:position pos:line="245" pos:column="23"/></name> <operator pos:line="245" pos:column="24">=<pos:position pos:line="245" pos:column="25"/></operator> <name><name pos:line="245" pos:column="26">headers_in<pos:position pos:line="245" pos:column="36"/></name><index pos:line="245" pos:column="36">[<expr><name pos:line="245" pos:column="37">counter<pos:position pos:line="245" pos:column="44"/></name></expr>]<pos:position pos:line="245" pos:column="45"/></index></name><operator pos:line="245" pos:column="45">.<pos:position pos:line="245" pos:column="46"/></operator><name pos:line="245" pos:column="46">val<pos:position pos:line="245" pos:column="49"/></name></expr>;<pos:position pos:line="245" pos:column="50"/></expr_stmt>
            <continue pos:line="246" pos:column="13">continue;<pos:position pos:line="246" pos:column="22"/></continue>
        }<pos:position pos:line="247" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="249" pos:column="9">/* for sub-requests, ignore freshness/expiry headers */</comment>
        <if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><name><name pos:line="250" pos:column="13">r<pos:position pos:line="250" pos:column="14"/></name><operator pos:line="250" pos:column="14">-&gt;<pos:position pos:line="250" pos:column="19"/></operator><name pos:line="250" pos:column="16">main<pos:position pos:line="250" pos:column="20"/></name></name></expr>)<pos:position pos:line="250" pos:column="21"/></condition><then pos:line="250" pos:column="21"> <block pos:line="250" pos:column="22">{
            <if pos:line="251" pos:column="13">if <condition pos:line="251" pos:column="16">(    <expr><operator pos:line="251" pos:column="21">!<pos:position pos:line="251" pos:column="22"/></operator><call><name pos:line="251" pos:column="22">strcasecmp<pos:position pos:line="251" pos:column="32"/></name><argument_list pos:line="251" pos:column="32">(<argument><expr><name><name pos:line="251" pos:column="33">headers_in<pos:position pos:line="251" pos:column="43"/></name><index pos:line="251" pos:column="43">[<expr><name pos:line="251" pos:column="44">counter<pos:position pos:line="251" pos:column="51"/></name></expr>]<pos:position pos:line="251" pos:column="52"/></index></name><operator pos:line="251" pos:column="52">.<pos:position pos:line="251" pos:column="53"/></operator><name pos:line="251" pos:column="53">key<pos:position pos:line="251" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="58">"If-Match"<pos:position pos:line="251" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="69"/></argument_list></call>
                 <operator pos:line="252" pos:column="18">||<pos:position pos:line="252" pos:column="20"/></operator> <operator pos:line="252" pos:column="21">!<pos:position pos:line="252" pos:column="22"/></operator><call><name pos:line="252" pos:column="22">strcasecmp<pos:position pos:line="252" pos:column="32"/></name><argument_list pos:line="252" pos:column="32">(<argument><expr><name><name pos:line="252" pos:column="33">headers_in<pos:position pos:line="252" pos:column="43"/></name><index pos:line="252" pos:column="43">[<expr><name pos:line="252" pos:column="44">counter<pos:position pos:line="252" pos:column="51"/></name></expr>]<pos:position pos:line="252" pos:column="52"/></index></name><operator pos:line="252" pos:column="52">.<pos:position pos:line="252" pos:column="53"/></operator><name pos:line="252" pos:column="53">key<pos:position pos:line="252" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="252" pos:column="58">"If-Modified-Since"<pos:position pos:line="252" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="252" pos:column="78"/></argument_list></call>
                 <operator pos:line="253" pos:column="18">||<pos:position pos:line="253" pos:column="20"/></operator> <operator pos:line="253" pos:column="21">!<pos:position pos:line="253" pos:column="22"/></operator><call><name pos:line="253" pos:column="22">strcasecmp<pos:position pos:line="253" pos:column="32"/></name><argument_list pos:line="253" pos:column="32">(<argument><expr><name><name pos:line="253" pos:column="33">headers_in<pos:position pos:line="253" pos:column="43"/></name><index pos:line="253" pos:column="43">[<expr><name pos:line="253" pos:column="44">counter<pos:position pos:line="253" pos:column="51"/></name></expr>]<pos:position pos:line="253" pos:column="52"/></index></name><operator pos:line="253" pos:column="52">.<pos:position pos:line="253" pos:column="53"/></operator><name pos:line="253" pos:column="53">key<pos:position pos:line="253" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="58">"If-Range"<pos:position pos:line="253" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="253" pos:column="69"/></argument_list></call>
                 <operator pos:line="254" pos:column="18">||<pos:position pos:line="254" pos:column="20"/></operator> <operator pos:line="254" pos:column="21">!<pos:position pos:line="254" pos:column="22"/></operator><call><name pos:line="254" pos:column="22">strcasecmp<pos:position pos:line="254" pos:column="32"/></name><argument_list pos:line="254" pos:column="32">(<argument><expr><name><name pos:line="254" pos:column="33">headers_in<pos:position pos:line="254" pos:column="43"/></name><index pos:line="254" pos:column="43">[<expr><name pos:line="254" pos:column="44">counter<pos:position pos:line="254" pos:column="51"/></name></expr>]<pos:position pos:line="254" pos:column="52"/></index></name><operator pos:line="254" pos:column="52">.<pos:position pos:line="254" pos:column="53"/></operator><name pos:line="254" pos:column="53">key<pos:position pos:line="254" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="254" pos:column="58">"If-Unmodified-Since"<pos:position pos:line="254" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="254" pos:column="80"/></argument_list></call>
                 <operator pos:line="255" pos:column="18">||<pos:position pos:line="255" pos:column="20"/></operator> <operator pos:line="255" pos:column="21">!<pos:position pos:line="255" pos:column="22"/></operator><call><name pos:line="255" pos:column="22">strcasecmp<pos:position pos:line="255" pos:column="32"/></name><argument_list pos:line="255" pos:column="32">(<argument><expr><name><name pos:line="255" pos:column="33">headers_in<pos:position pos:line="255" pos:column="43"/></name><index pos:line="255" pos:column="43">[<expr><name pos:line="255" pos:column="44">counter<pos:position pos:line="255" pos:column="51"/></name></expr>]<pos:position pos:line="255" pos:column="52"/></index></name><operator pos:line="255" pos:column="52">.<pos:position pos:line="255" pos:column="53"/></operator><name pos:line="255" pos:column="53">key<pos:position pos:line="255" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="58">"If-None-Match"<pos:position pos:line="255" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="255" pos:column="75"/></condition><then pos:line="255" pos:column="75"> <block pos:line="255" pos:column="76">{
                <continue pos:line="256" pos:column="17">continue;<pos:position pos:line="256" pos:column="26"/></continue>
            }<pos:position pos:line="257" pos:column="14"/></block></then></if>
        }<pos:position pos:line="258" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="260" pos:column="9">buf<pos:position pos:line="260" pos:column="12"/></name> <operator pos:line="260" pos:column="13">=<pos:position pos:line="260" pos:column="14"/></operator> <call><name pos:line="260" pos:column="15">apr_pstrcat<pos:position pos:line="260" pos:column="26"/></name><argument_list pos:line="260" pos:column="26">(<argument><expr><name pos:line="260" pos:column="27">p<pos:position pos:line="260" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="260" pos:column="30">headers_in<pos:position pos:line="260" pos:column="40"/></name><index pos:line="260" pos:column="40">[<expr><name pos:line="260" pos:column="41">counter<pos:position pos:line="260" pos:column="48"/></name></expr>]<pos:position pos:line="260" pos:column="49"/></index></name><operator pos:line="260" pos:column="49">.<pos:position pos:line="260" pos:column="50"/></operator><name pos:line="260" pos:column="50">key<pos:position pos:line="260" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="55">": "<pos:position pos:line="260" pos:column="59"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="261" pos:column="27">headers_in<pos:position pos:line="261" pos:column="37"/></name><index pos:line="261" pos:column="37">[<expr><name pos:line="261" pos:column="38">counter<pos:position pos:line="261" pos:column="45"/></name></expr>]<pos:position pos:line="261" pos:column="46"/></index></name><operator pos:line="261" pos:column="46">.<pos:position pos:line="261" pos:column="47"/></operator><name pos:line="261" pos:column="47">val<pos:position pos:line="261" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="52">CRLF<pos:position pos:line="261" pos:column="56"/></name></expr></argument>,
                          <argument><expr><name pos:line="262" pos:column="27">NULL<pos:position pos:line="262" pos:column="31"/></name></expr></argument>)<pos:position pos:line="262" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="263" pos:column="9">ap_xlate_proto_to_ascii<pos:position pos:line="263" pos:column="32"/></name><argument_list pos:line="263" pos:column="32">(<argument><expr><name pos:line="263" pos:column="33">buf<pos:position pos:line="263" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="263" pos:column="38">strlen<pos:position pos:line="263" pos:column="44"/></name><argument_list pos:line="263" pos:column="44">(<argument><expr><name pos:line="263" pos:column="45">buf<pos:position pos:line="263" pos:column="48"/></name></expr></argument>)<pos:position pos:line="263" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="263" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="264" pos:column="9">e<pos:position pos:line="264" pos:column="10"/></name> <operator pos:line="264" pos:column="11">=<pos:position pos:line="264" pos:column="12"/></operator> <call><name pos:line="264" pos:column="13">apr_bucket_pool_create<pos:position pos:line="264" pos:column="35"/></name><argument_list pos:line="264" pos:column="35">(<argument><expr><name pos:line="264" pos:column="36">buf<pos:position pos:line="264" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="264" pos:column="41">strlen<pos:position pos:line="264" pos:column="47"/></name><argument_list pos:line="264" pos:column="47">(<argument><expr><name pos:line="264" pos:column="48">buf<pos:position pos:line="264" pos:column="51"/></name></expr></argument>)<pos:position pos:line="264" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="264" pos:column="54">p<pos:position pos:line="264" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="264" pos:column="57">c<pos:position pos:line="264" pos:column="58"/></name><operator pos:line="264" pos:column="58">-&gt;<pos:position pos:line="264" pos:column="63"/></operator><name pos:line="264" pos:column="60">bucket_alloc<pos:position pos:line="264" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="264" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="265" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="265" pos:column="32"/></name><argument_list pos:line="265" pos:column="32">(<argument><expr><name pos:line="265" pos:column="33">header_brigade<pos:position pos:line="265" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="49">e<pos:position pos:line="265" pos:column="50"/></name></expr></argument>)<pos:position pos:line="265" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="266" pos:column="6"/></block></for>

    <comment type="block" pos:line="268" pos:column="5">/* We have headers, let's figure out our request body... */</comment>
    <expr_stmt><expr><name pos:line="269" pos:column="5">input_brigade<pos:position pos:line="269" pos:column="18"/></name> <operator pos:line="269" pos:column="19">=<pos:position pos:line="269" pos:column="20"/></operator> <call><name pos:line="269" pos:column="21">apr_brigade_create<pos:position pos:line="269" pos:column="39"/></name><argument_list pos:line="269" pos:column="39">(<argument><expr><name pos:line="269" pos:column="40">p<pos:position pos:line="269" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="43">bucket_alloc<pos:position pos:line="269" pos:column="55"/></name></expr></argument>)<pos:position pos:line="269" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="271" pos:column="5">/* sub-requests never use keepalives, and mustn't pass request bodies.
     * Because the new logic looks at input_brigade, we will self-terminate
     * input_brigade and jump past all of the request body logic...
     * Reading anything with ap_get_brigade is likely to consume the
     * main request's body or read beyond EOS - which would be unplesant.
     * 
     * An exception: when a kept_body is present, then subrequest CAN use
     * pass request bodies, and we DONT skip the body.
     */</comment>
    <if pos:line="280" pos:column="5">if <condition pos:line="280" pos:column="8">(<expr><operator pos:line="280" pos:column="9">!<pos:position pos:line="280" pos:column="10"/></operator><name><name pos:line="280" pos:column="10">r<pos:position pos:line="280" pos:column="11"/></name><operator pos:line="280" pos:column="11">-&gt;<pos:position pos:line="280" pos:column="16"/></operator><name pos:line="280" pos:column="13">kept_body<pos:position pos:line="280" pos:column="22"/></name></name> <operator pos:line="280" pos:column="23">&amp;&amp;<pos:position pos:line="280" pos:column="33"/></operator> <name><name pos:line="280" pos:column="26">r<pos:position pos:line="280" pos:column="27"/></name><operator pos:line="280" pos:column="27">-&gt;<pos:position pos:line="280" pos:column="32"/></operator><name pos:line="280" pos:column="29">main<pos:position pos:line="280" pos:column="33"/></name></name></expr>)<pos:position pos:line="280" pos:column="34"/></condition><then pos:line="280" pos:column="34"> <block pos:line="280" pos:column="35">{
        <comment type="block" pos:line="281" pos:column="9">/* XXX: Why DON'T sub-requests use keepalives? */</comment>
        <expr_stmt><expr><name><name pos:line="282" pos:column="9">p_conn<pos:position pos:line="282" pos:column="15"/></name><operator pos:line="282" pos:column="15">-&gt;<pos:position pos:line="282" pos:column="20"/></operator><name pos:line="282" pos:column="17">close<pos:position pos:line="282" pos:column="22"/></name></name><operator pos:line="282" pos:column="22">++<pos:position pos:line="282" pos:column="24"/></operator></expr>;<pos:position pos:line="282" pos:column="25"/></expr_stmt>
        <if pos:line="283" pos:column="9">if <condition pos:line="283" pos:column="12">(<expr><name pos:line="283" pos:column="13">old_cl_val<pos:position pos:line="283" pos:column="23"/></name></expr>)<pos:position pos:line="283" pos:column="24"/></condition><then pos:line="283" pos:column="24"> <block pos:line="283" pos:column="25">{
            <expr_stmt><expr><name pos:line="284" pos:column="13">old_cl_val<pos:position pos:line="284" pos:column="23"/></name> <operator pos:line="284" pos:column="24">=<pos:position pos:line="284" pos:column="25"/></operator> <name pos:line="284" pos:column="26">NULL<pos:position pos:line="284" pos:column="30"/></name></expr>;<pos:position pos:line="284" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="285" pos:column="13">apr_table_unset<pos:position pos:line="285" pos:column="28"/></name><argument_list pos:line="285" pos:column="28">(<argument><expr><name><name pos:line="285" pos:column="29">r<pos:position pos:line="285" pos:column="30"/></name><operator pos:line="285" pos:column="30">-&gt;<pos:position pos:line="285" pos:column="35"/></operator><name pos:line="285" pos:column="32">headers_in<pos:position pos:line="285" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="285" pos:column="44">"Content-Length"<pos:position pos:line="285" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="286" pos:column="10"/></block></then></if>
        <if pos:line="287" pos:column="9">if <condition pos:line="287" pos:column="12">(<expr><name pos:line="287" pos:column="13">old_te_val<pos:position pos:line="287" pos:column="23"/></name></expr>)<pos:position pos:line="287" pos:column="24"/></condition><then pos:line="287" pos:column="24"> <block pos:line="287" pos:column="25">{
            <expr_stmt><expr><name pos:line="288" pos:column="13">old_te_val<pos:position pos:line="288" pos:column="23"/></name> <operator pos:line="288" pos:column="24">=<pos:position pos:line="288" pos:column="25"/></operator> <name pos:line="288" pos:column="26">NULL<pos:position pos:line="288" pos:column="30"/></name></expr>;<pos:position pos:line="288" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="289" pos:column="13">apr_table_unset<pos:position pos:line="289" pos:column="28"/></name><argument_list pos:line="289" pos:column="28">(<argument><expr><name><name pos:line="289" pos:column="29">r<pos:position pos:line="289" pos:column="30"/></name><operator pos:line="289" pos:column="30">-&gt;<pos:position pos:line="289" pos:column="35"/></operator><name pos:line="289" pos:column="32">headers_in<pos:position pos:line="289" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="44">"Transfer-Encoding"<pos:position pos:line="289" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="290" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="291" pos:column="9">rb_method<pos:position pos:line="291" pos:column="18"/></name> <operator pos:line="291" pos:column="19">=<pos:position pos:line="291" pos:column="20"/></operator> <name pos:line="291" pos:column="21">RB_STREAM_CL<pos:position pos:line="291" pos:column="33"/></name></expr>;<pos:position pos:line="291" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="292" pos:column="9">e<pos:position pos:line="292" pos:column="10"/></name> <operator pos:line="292" pos:column="11">=<pos:position pos:line="292" pos:column="12"/></operator> <call><name pos:line="292" pos:column="13">apr_bucket_eos_create<pos:position pos:line="292" pos:column="34"/></name><argument_list pos:line="292" pos:column="34">(<argument><expr><name><name pos:line="292" pos:column="35">input_brigade<pos:position pos:line="292" pos:column="48"/></name><operator pos:line="292" pos:column="48">-&gt;<pos:position pos:line="292" pos:column="53"/></operator><name pos:line="292" pos:column="50">bucket_alloc<pos:position pos:line="292" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="292" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="293" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="293" pos:column="32"/></name><argument_list pos:line="293" pos:column="32">(<argument><expr><name pos:line="293" pos:column="33">input_brigade<pos:position pos:line="293" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="293" pos:column="48">e<pos:position pos:line="293" pos:column="49"/></name></expr></argument>)<pos:position pos:line="293" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="51"/></expr_stmt>
        <goto pos:line="294" pos:column="9">goto <name pos:line="294" pos:column="14">skip_body<pos:position pos:line="294" pos:column="23"/></name>;<pos:position pos:line="294" pos:column="24"/></goto>
    }<pos:position pos:line="295" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="297" pos:column="5">/* WE only understand chunked.  Other modules might inject
     * (and therefore, decode) other flavors but we don't know
     * that the can and have done so unless they they remove
     * their decoding from the headers_in T-E list.
     * XXX: Make this extensible, but in doing so, presume the
     * encoding has been done by the extensions' handler, and
     * do not modify add_te_chunked's logic
     */</comment>
    <if pos:line="305" pos:column="5">if <condition pos:line="305" pos:column="8">(<expr><name pos:line="305" pos:column="9">old_te_val<pos:position pos:line="305" pos:column="19"/></name> <operator pos:line="305" pos:column="20">&amp;&amp;<pos:position pos:line="305" pos:column="30"/></operator> <call><name pos:line="305" pos:column="23">strcasecmp<pos:position pos:line="305" pos:column="33"/></name><argument_list pos:line="305" pos:column="33">(<argument><expr><name pos:line="305" pos:column="34">old_te_val<pos:position pos:line="305" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="305" pos:column="46">"chunked"<pos:position pos:line="305" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="305" pos:column="56"/></argument_list></call> <operator pos:line="305" pos:column="57">!=<pos:position pos:line="305" pos:column="59"/></operator> <literal type="number" pos:line="305" pos:column="60">0<pos:position pos:line="305" pos:column="61"/></literal></expr>)<pos:position pos:line="305" pos:column="62"/></condition><then pos:line="305" pos:column="62"> <block pos:line="305" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="306" pos:column="9">ap_log_error<pos:position pos:line="306" pos:column="21"/></name><argument_list pos:line="306" pos:column="21">(<argument><expr><name pos:line="306" pos:column="22">APLOG_MARK<pos:position pos:line="306" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="306" pos:column="34">APLOG_ERR<pos:position pos:line="306" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="306" pos:column="45">0<pos:position pos:line="306" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="306" pos:column="48">r<pos:position pos:line="306" pos:column="49"/></name><operator pos:line="306" pos:column="49">-&gt;<pos:position pos:line="306" pos:column="54"/></operator><name pos:line="306" pos:column="51">server<pos:position pos:line="306" pos:column="57"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="307" pos:column="22">"proxy: %s Transfer-Encoding is not supported"<pos:position pos:line="307" pos:column="68"/></literal></expr></argument>,
                     <argument><expr><name pos:line="308" pos:column="22">old_te_val<pos:position pos:line="308" pos:column="32"/></name></expr></argument>)<pos:position pos:line="308" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="34"/></expr_stmt>
        <return pos:line="309" pos:column="9">return <expr><name pos:line="309" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="309" pos:column="42"/></name></expr>;<pos:position pos:line="309" pos:column="43"/></return>
    }<pos:position pos:line="310" pos:column="6"/></block></then></if>

    <if pos:line="312" pos:column="5">if <condition pos:line="312" pos:column="8">(<expr><name pos:line="312" pos:column="9">old_cl_val<pos:position pos:line="312" pos:column="19"/></name> <operator pos:line="312" pos:column="20">&amp;&amp;<pos:position pos:line="312" pos:column="30"/></operator> <name pos:line="312" pos:column="23">old_te_val<pos:position pos:line="312" pos:column="33"/></name></expr>)<pos:position pos:line="312" pos:column="34"/></condition><then pos:line="312" pos:column="34"> <block pos:line="312" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="313" pos:column="9">ap_log_error<pos:position pos:line="313" pos:column="21"/></name><argument_list pos:line="313" pos:column="21">(<argument><expr><name pos:line="313" pos:column="22">APLOG_MARK<pos:position pos:line="313" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="34">APLOG_DEBUG<pos:position pos:line="313" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="47">APR_ENOTIMPL<pos:position pos:line="313" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="313" pos:column="61">r<pos:position pos:line="313" pos:column="62"/></name><operator pos:line="313" pos:column="62">-&gt;<pos:position pos:line="313" pos:column="67"/></operator><name pos:line="313" pos:column="64">server<pos:position pos:line="313" pos:column="70"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="314" pos:column="22">"proxy: client %s (%s) requested Transfer-Encoding "<pos:position pos:line="314" pos:column="74"/></literal>
                     <literal type="string" pos:line="315" pos:column="22">"chunked body with Content-Length (C-L ignored)"<pos:position pos:line="315" pos:column="70"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="316" pos:column="22">c<pos:position pos:line="316" pos:column="23"/></name><operator pos:line="316" pos:column="23">-&gt;<pos:position pos:line="316" pos:column="28"/></operator><name pos:line="316" pos:column="25">remote_ip<pos:position pos:line="316" pos:column="34"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="316" pos:column="36">c<pos:position pos:line="316" pos:column="37"/></name><operator pos:line="316" pos:column="37">-&gt;<pos:position pos:line="316" pos:column="42"/></operator><name pos:line="316" pos:column="39">remote_host<pos:position pos:line="316" pos:column="50"/></name></name></expr> ?<pos:position pos:line="316" pos:column="52"/></condition><then pos:line="316" pos:column="52"> <expr><name><name pos:line="316" pos:column="53">c<pos:position pos:line="316" pos:column="54"/></name><operator pos:line="316" pos:column="54">-&gt;<pos:position pos:line="316" pos:column="59"/></operator><name pos:line="316" pos:column="56">remote_host<pos:position pos:line="316" pos:column="67"/></name></name></expr></then><else pos:line="316" pos:column="67">: <expr><literal type="string" pos:line="316" pos:column="69">""<pos:position pos:line="316" pos:column="71"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="316" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="317" pos:column="9">apr_table_unset<pos:position pos:line="317" pos:column="24"/></name><argument_list pos:line="317" pos:column="24">(<argument><expr><name><name pos:line="317" pos:column="25">r<pos:position pos:line="317" pos:column="26"/></name><operator pos:line="317" pos:column="26">-&gt;<pos:position pos:line="317" pos:column="31"/></operator><name pos:line="317" pos:column="28">headers_in<pos:position pos:line="317" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="317" pos:column="40">"Content-Length"<pos:position pos:line="317" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="317" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="318" pos:column="9">old_cl_val<pos:position pos:line="318" pos:column="19"/></name> <operator pos:line="318" pos:column="20">=<pos:position pos:line="318" pos:column="21"/></operator> <name pos:line="318" pos:column="22">NULL<pos:position pos:line="318" pos:column="26"/></name></expr>;<pos:position pos:line="318" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="319" pos:column="9">origin<pos:position pos:line="319" pos:column="15"/></name><operator pos:line="319" pos:column="15">-&gt;<pos:position pos:line="319" pos:column="20"/></operator><name pos:line="319" pos:column="17">keepalive<pos:position pos:line="319" pos:column="26"/></name></name> <operator pos:line="319" pos:column="27">=<pos:position pos:line="319" pos:column="28"/></operator> <name pos:line="319" pos:column="29">AP_CONN_CLOSE<pos:position pos:line="319" pos:column="42"/></name></expr>;<pos:position pos:line="319" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="320" pos:column="9">p_conn<pos:position pos:line="320" pos:column="15"/></name><operator pos:line="320" pos:column="15">-&gt;<pos:position pos:line="320" pos:column="20"/></operator><name pos:line="320" pos:column="17">close<pos:position pos:line="320" pos:column="22"/></name></name><operator pos:line="320" pos:column="22">++<pos:position pos:line="320" pos:column="24"/></operator></expr>;<pos:position pos:line="320" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="321" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="323" pos:column="5">/* Prefetch MAX_MEM_SPOOL bytes
     *
     * This helps us avoid any election of C-L v.s. T-E
     * request bodies, since we are willing to keep in
     * memory this much data, in any case.  This gives
     * us an instant C-L election if the body is of some
     * reasonable size.
     */</comment>
    <expr_stmt><expr><name pos:line="331" pos:column="5">temp_brigade<pos:position pos:line="331" pos:column="17"/></name> <operator pos:line="331" pos:column="18">=<pos:position pos:line="331" pos:column="19"/></operator> <call><name pos:line="331" pos:column="20">apr_brigade_create<pos:position pos:line="331" pos:column="38"/></name><argument_list pos:line="331" pos:column="38">(<argument><expr><name pos:line="331" pos:column="39">p<pos:position pos:line="331" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="331" pos:column="42">bucket_alloc<pos:position pos:line="331" pos:column="54"/></name></expr></argument>)<pos:position pos:line="331" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="56"/></expr_stmt>
    <do pos:line="332" pos:column="5">do <block pos:line="332" pos:column="8">{
        <expr_stmt><expr><name pos:line="333" pos:column="9">status<pos:position pos:line="333" pos:column="15"/></name> <operator pos:line="333" pos:column="16">=<pos:position pos:line="333" pos:column="17"/></operator> <call><name pos:line="333" pos:column="18">ap_get_brigade<pos:position pos:line="333" pos:column="32"/></name><argument_list pos:line="333" pos:column="32">(<argument><expr><name><name pos:line="333" pos:column="33">r<pos:position pos:line="333" pos:column="34"/></name><operator pos:line="333" pos:column="34">-&gt;<pos:position pos:line="333" pos:column="39"/></operator><name pos:line="333" pos:column="36">input_filters<pos:position pos:line="333" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="333" pos:column="51">temp_brigade<pos:position pos:line="333" pos:column="63"/></name></expr></argument>,
                                <argument><expr><name pos:line="334" pos:column="33">AP_MODE_READBYTES<pos:position pos:line="334" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="52">APR_BLOCK_READ<pos:position pos:line="334" pos:column="66"/></name></expr></argument>,
                                <argument><expr><name pos:line="335" pos:column="33">MAX_MEM_SPOOL<pos:position pos:line="335" pos:column="46"/></name> <operator pos:line="335" pos:column="47">-<pos:position pos:line="335" pos:column="48"/></operator> <name pos:line="335" pos:column="49">bytes_read<pos:position pos:line="335" pos:column="59"/></name></expr></argument>)<pos:position pos:line="335" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="61"/></expr_stmt>
        <if pos:line="336" pos:column="9">if <condition pos:line="336" pos:column="12">(<expr><name pos:line="336" pos:column="13">status<pos:position pos:line="336" pos:column="19"/></name> <operator pos:line="336" pos:column="20">!=<pos:position pos:line="336" pos:column="22"/></operator> <name pos:line="336" pos:column="23">APR_SUCCESS<pos:position pos:line="336" pos:column="34"/></name></expr>)<pos:position pos:line="336" pos:column="35"/></condition><then pos:line="336" pos:column="35"> <block pos:line="336" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="337" pos:column="13">ap_log_error<pos:position pos:line="337" pos:column="25"/></name><argument_list pos:line="337" pos:column="25">(<argument><expr><name pos:line="337" pos:column="26">APLOG_MARK<pos:position pos:line="337" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="38">APLOG_ERR<pos:position pos:line="337" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="49">status<pos:position pos:line="337" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="337" pos:column="57">r<pos:position pos:line="337" pos:column="58"/></name><operator pos:line="337" pos:column="58">-&gt;<pos:position pos:line="337" pos:column="63"/></operator><name pos:line="337" pos:column="60">server<pos:position pos:line="337" pos:column="66"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="338" pos:column="26">"proxy: prefetch request body failed to %pI (%s)"<pos:position pos:line="338" pos:column="75"/></literal>
                         <literal type="string" pos:line="339" pos:column="26">" from %s (%s)"<pos:position pos:line="339" pos:column="41"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="340" pos:column="26">p_conn<pos:position pos:line="340" pos:column="32"/></name><operator pos:line="340" pos:column="32">-&gt;<pos:position pos:line="340" pos:column="37"/></operator><name pos:line="340" pos:column="34">addr<pos:position pos:line="340" pos:column="38"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="340" pos:column="40">p_conn<pos:position pos:line="340" pos:column="46"/></name><operator pos:line="340" pos:column="46">-&gt;<pos:position pos:line="340" pos:column="51"/></operator><name pos:line="340" pos:column="48">hostname<pos:position pos:line="340" pos:column="56"/></name></name></expr> ?<pos:position pos:line="340" pos:column="58"/></condition><then pos:line="340" pos:column="58"> <expr><name><name pos:line="340" pos:column="59">p_conn<pos:position pos:line="340" pos:column="65"/></name><operator pos:line="340" pos:column="65">-&gt;<pos:position pos:line="340" pos:column="70"/></operator><name pos:line="340" pos:column="67">hostname<pos:position pos:line="340" pos:column="75"/></name></name></expr></then><else pos:line="340" pos:column="75">: <expr><literal type="string" pos:line="340" pos:column="77">""<pos:position pos:line="340" pos:column="79"/></literal></expr></else></ternary></expr></argument>,
                         <argument><expr><name><name pos:line="341" pos:column="26">c<pos:position pos:line="341" pos:column="27"/></name><operator pos:line="341" pos:column="27">-&gt;<pos:position pos:line="341" pos:column="32"/></operator><name pos:line="341" pos:column="29">remote_ip<pos:position pos:line="341" pos:column="38"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="341" pos:column="40">c<pos:position pos:line="341" pos:column="41"/></name><operator pos:line="341" pos:column="41">-&gt;<pos:position pos:line="341" pos:column="46"/></operator><name pos:line="341" pos:column="43">remote_host<pos:position pos:line="341" pos:column="54"/></name></name></expr> ?<pos:position pos:line="341" pos:column="56"/></condition><then pos:line="341" pos:column="56"> <expr><name><name pos:line="341" pos:column="57">c<pos:position pos:line="341" pos:column="58"/></name><operator pos:line="341" pos:column="58">-&gt;<pos:position pos:line="341" pos:column="63"/></operator><name pos:line="341" pos:column="60">remote_host<pos:position pos:line="341" pos:column="71"/></name></name></expr></then><else pos:line="341" pos:column="71">: <expr><literal type="string" pos:line="341" pos:column="73">""<pos:position pos:line="341" pos:column="75"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="341" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="77"/></expr_stmt>
            <return pos:line="342" pos:column="13">return <expr><name pos:line="342" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="342" pos:column="36"/></name></expr>;<pos:position pos:line="342" pos:column="37"/></return>
        }<pos:position pos:line="343" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="345" pos:column="9">apr_brigade_length<pos:position pos:line="345" pos:column="27"/></name><argument_list pos:line="345" pos:column="27">(<argument><expr><name pos:line="345" pos:column="28">temp_brigade<pos:position pos:line="345" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="345" pos:column="42">1<pos:position pos:line="345" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="345" pos:column="45">&amp;<pos:position pos:line="345" pos:column="50"/></operator><name pos:line="345" pos:column="46">bytes<pos:position pos:line="345" pos:column="51"/></name></expr></argument>)<pos:position pos:line="345" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="346" pos:column="9">bytes_read<pos:position pos:line="346" pos:column="19"/></name> <operator pos:line="346" pos:column="20">+=<pos:position pos:line="346" pos:column="22"/></operator> <name pos:line="346" pos:column="23">bytes<pos:position pos:line="346" pos:column="28"/></name></expr>;<pos:position pos:line="346" pos:column="29"/></expr_stmt>

        <comment type="block" pos:line="348" pos:column="9">/*
         * Save temp_brigade in input_brigade. (At least) in the SSL case
         * temp_brigade contains transient buckets whose data would get
         * overwritten during the next call of ap_get_brigade in the loop.
         * ap_save_brigade ensures these buckets to be set aside.
         * Calling ap_save_brigade with NULL as filter is OK, because
         * input_brigade already has been created and does not need to get
         * created by ap_save_brigade.
         */</comment>
        <expr_stmt><expr><name pos:line="357" pos:column="9">status<pos:position pos:line="357" pos:column="15"/></name> <operator pos:line="357" pos:column="16">=<pos:position pos:line="357" pos:column="17"/></operator> <call><name pos:line="357" pos:column="18">ap_save_brigade<pos:position pos:line="357" pos:column="33"/></name><argument_list pos:line="357" pos:column="33">(<argument><expr><name pos:line="357" pos:column="34">NULL<pos:position pos:line="357" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="357" pos:column="40">&amp;<pos:position pos:line="357" pos:column="45"/></operator><name pos:line="357" pos:column="41">input_brigade<pos:position pos:line="357" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="357" pos:column="56">&amp;<pos:position pos:line="357" pos:column="61"/></operator><name pos:line="357" pos:column="57">temp_brigade<pos:position pos:line="357" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="357" pos:column="71">p<pos:position pos:line="357" pos:column="72"/></name></expr></argument>)<pos:position pos:line="357" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="74"/></expr_stmt>
        <if pos:line="358" pos:column="9">if <condition pos:line="358" pos:column="12">(<expr><name pos:line="358" pos:column="13">status<pos:position pos:line="358" pos:column="19"/></name> <operator pos:line="358" pos:column="20">!=<pos:position pos:line="358" pos:column="22"/></operator> <name pos:line="358" pos:column="23">APR_SUCCESS<pos:position pos:line="358" pos:column="34"/></name></expr>)<pos:position pos:line="358" pos:column="35"/></condition><then pos:line="358" pos:column="35"> <block pos:line="358" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="359" pos:column="13">ap_log_error<pos:position pos:line="359" pos:column="25"/></name><argument_list pos:line="359" pos:column="25">(<argument><expr><name pos:line="359" pos:column="26">APLOG_MARK<pos:position pos:line="359" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="38">APLOG_ERR<pos:position pos:line="359" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="49">status<pos:position pos:line="359" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="359" pos:column="57">r<pos:position pos:line="359" pos:column="58"/></name><operator pos:line="359" pos:column="58">-&gt;<pos:position pos:line="359" pos:column="63"/></operator><name pos:line="359" pos:column="60">server<pos:position pos:line="359" pos:column="66"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="360" pos:column="26">"proxy: processing prefetched request body failed"<pos:position pos:line="360" pos:column="76"/></literal>
                         <literal type="string" pos:line="361" pos:column="26">" to %pI (%s) from %s (%s)"<pos:position pos:line="361" pos:column="53"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="362" pos:column="26">p_conn<pos:position pos:line="362" pos:column="32"/></name><operator pos:line="362" pos:column="32">-&gt;<pos:position pos:line="362" pos:column="37"/></operator><name pos:line="362" pos:column="34">addr<pos:position pos:line="362" pos:column="38"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="362" pos:column="40">p_conn<pos:position pos:line="362" pos:column="46"/></name><operator pos:line="362" pos:column="46">-&gt;<pos:position pos:line="362" pos:column="51"/></operator><name pos:line="362" pos:column="48">hostname<pos:position pos:line="362" pos:column="56"/></name></name></expr> ?<pos:position pos:line="362" pos:column="58"/></condition><then pos:line="362" pos:column="58"> <expr><name><name pos:line="362" pos:column="59">p_conn<pos:position pos:line="362" pos:column="65"/></name><operator pos:line="362" pos:column="65">-&gt;<pos:position pos:line="362" pos:column="70"/></operator><name pos:line="362" pos:column="67">hostname<pos:position pos:line="362" pos:column="75"/></name></name></expr></then><else pos:line="362" pos:column="75">: <expr><literal type="string" pos:line="362" pos:column="77">""<pos:position pos:line="362" pos:column="79"/></literal></expr></else></ternary></expr></argument>,
                         <argument><expr><name><name pos:line="363" pos:column="26">c<pos:position pos:line="363" pos:column="27"/></name><operator pos:line="363" pos:column="27">-&gt;<pos:position pos:line="363" pos:column="32"/></operator><name pos:line="363" pos:column="29">remote_ip<pos:position pos:line="363" pos:column="38"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="363" pos:column="40">c<pos:position pos:line="363" pos:column="41"/></name><operator pos:line="363" pos:column="41">-&gt;<pos:position pos:line="363" pos:column="46"/></operator><name pos:line="363" pos:column="43">remote_host<pos:position pos:line="363" pos:column="54"/></name></name></expr> ?<pos:position pos:line="363" pos:column="56"/></condition><then pos:line="363" pos:column="56"> <expr><name><name pos:line="363" pos:column="57">c<pos:position pos:line="363" pos:column="58"/></name><operator pos:line="363" pos:column="58">-&gt;<pos:position pos:line="363" pos:column="63"/></operator><name pos:line="363" pos:column="60">remote_host<pos:position pos:line="363" pos:column="71"/></name></name></expr></then><else pos:line="363" pos:column="71">: <expr><literal type="string" pos:line="363" pos:column="73">""<pos:position pos:line="363" pos:column="75"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="363" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="77"/></expr_stmt>
            <return pos:line="364" pos:column="13">return <expr><name pos:line="364" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="364" pos:column="46"/></name></expr>;<pos:position pos:line="364" pos:column="47"/></return>
        }<pos:position pos:line="365" pos:column="10"/></block></then></if>

    <comment type="block" pos:line="367" pos:column="5">/* Ensure we don't hit a wall where we have a buffer too small
     * for ap_get_brigade's filters to fetch us another bucket,
     * surrender once we hit 80 bytes less than MAX_MEM_SPOOL
     * (an arbitrary value.)
     */</comment>
    }<pos:position pos:line="372" pos:column="6"/></block> while <condition pos:line="372" pos:column="13">(<expr><operator pos:line="372" pos:column="14">(<pos:position pos:line="372" pos:column="15"/></operator><name pos:line="372" pos:column="15">bytes_read<pos:position pos:line="372" pos:column="25"/></name> <operator pos:line="372" pos:column="26">&lt;<pos:position pos:line="372" pos:column="30"/></operator> <name pos:line="372" pos:column="28">MAX_MEM_SPOOL<pos:position pos:line="372" pos:column="41"/></name> <operator pos:line="372" pos:column="42">-<pos:position pos:line="372" pos:column="43"/></operator> <literal type="number" pos:line="372" pos:column="44">80<pos:position pos:line="372" pos:column="46"/></literal><operator pos:line="372" pos:column="46">)<pos:position pos:line="372" pos:column="47"/></operator>
              <operator pos:line="373" pos:column="15">&amp;&amp;<pos:position pos:line="373" pos:column="25"/></operator> <operator pos:line="373" pos:column="18">!<pos:position pos:line="373" pos:column="19"/></operator><call><name pos:line="373" pos:column="19">APR_BUCKET_IS_EOS<pos:position pos:line="373" pos:column="36"/></name><argument_list pos:line="373" pos:column="36">(<argument><expr><call><name pos:line="373" pos:column="37">APR_BRIGADE_LAST<pos:position pos:line="373" pos:column="53"/></name><argument_list pos:line="373" pos:column="53">(<argument><expr><name pos:line="373" pos:column="54">input_brigade<pos:position pos:line="373" pos:column="67"/></name></expr></argument>)<pos:position pos:line="373" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="373" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="373" pos:column="70"/></condition>;<pos:position pos:line="373" pos:column="71"/></do>

    <comment type="block" pos:line="375" pos:column="5">/* Use chunked request body encoding or send a content-length body?
     *
     * Prefer C-L when:
     *
     *   We have no request body (handled by RB_STREAM_CL)
     *
     *   We have a request body length &lt;= MAX_MEM_SPOOL
     *
     *   The administrator has setenv force-proxy-request-1.0
     *
     *   The client sent a C-L body, and the administrator has
     *   not setenv proxy-sendchunked or has set setenv proxy-sendcl
     *
     *   The client sent a T-E body, and the administrator has
     *   setenv proxy-sendcl, and not setenv proxy-sendchunked
     *
     * If both proxy-sendcl and proxy-sendchunked are set, the
     * behavior is the same as if neither were set, large bodies
     * that can't be read will be forwarded in their original
     * form of C-L, or T-E.
     *
     * To ensure maximum compatibility, setenv proxy-sendcl
     * To reduce server resource use,   setenv proxy-sendchunked
     *
     * Then address specific servers with conditional setenv
     * options to restore the default behavior where desireable.
     *
     * We have to compute content length by reading the entire request
     * body; if request body is not small, we'll spool the remaining
     * input to a temporary file.  Chunked is always preferable.
     *
     * We can only trust the client-provided C-L if the T-E header
     * is absent, and the filters are unchanged (the body won't
     * be resized by another content filter).
     */</comment>
    <if pos:line="410" pos:column="5">if <condition pos:line="410" pos:column="8">(<expr><call><name pos:line="410" pos:column="9">APR_BUCKET_IS_EOS<pos:position pos:line="410" pos:column="26"/></name><argument_list pos:line="410" pos:column="26">(<argument><expr><call><name pos:line="410" pos:column="27">APR_BRIGADE_LAST<pos:position pos:line="410" pos:column="43"/></name><argument_list pos:line="410" pos:column="43">(<argument><expr><name pos:line="410" pos:column="44">input_brigade<pos:position pos:line="410" pos:column="57"/></name></expr></argument>)<pos:position pos:line="410" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="410" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="410" pos:column="60"/></condition><then pos:line="410" pos:column="60"> <block pos:line="410" pos:column="61">{
        <comment type="block" pos:line="411" pos:column="9">/* The whole thing fit, so our decision is trivial, use
         * the filtered bytes read from the client for the request
         * body Content-Length.
         *
         * If we expected no body, and read no body, do not set
         * the Content-Length.
         */</comment>
        <if pos:line="418" pos:column="9">if <condition pos:line="418" pos:column="12">(<expr><name pos:line="418" pos:column="13">old_cl_val<pos:position pos:line="418" pos:column="23"/></name> <operator pos:line="418" pos:column="24">||<pos:position pos:line="418" pos:column="26"/></operator> <name pos:line="418" pos:column="27">old_te_val<pos:position pos:line="418" pos:column="37"/></name> <operator pos:line="418" pos:column="38">||<pos:position pos:line="418" pos:column="40"/></operator> <name pos:line="418" pos:column="41">bytes_read<pos:position pos:line="418" pos:column="51"/></name></expr>)<pos:position pos:line="418" pos:column="52"/></condition><then pos:line="418" pos:column="52"> <block pos:line="418" pos:column="53">{
            <expr_stmt><expr><name pos:line="419" pos:column="13">old_cl_val<pos:position pos:line="419" pos:column="23"/></name> <operator pos:line="419" pos:column="24">=<pos:position pos:line="419" pos:column="25"/></operator> <call><name pos:line="419" pos:column="26">apr_off_t_toa<pos:position pos:line="419" pos:column="39"/></name><argument_list pos:line="419" pos:column="39">(<argument><expr><name><name pos:line="419" pos:column="40">r<pos:position pos:line="419" pos:column="41"/></name><operator pos:line="419" pos:column="41">-&gt;<pos:position pos:line="419" pos:column="46"/></operator><name pos:line="419" pos:column="43">pool<pos:position pos:line="419" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="419" pos:column="49">bytes_read<pos:position pos:line="419" pos:column="59"/></name></expr></argument>)<pos:position pos:line="419" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="419" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="420" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="421" pos:column="9">rb_method<pos:position pos:line="421" pos:column="18"/></name> <operator pos:line="421" pos:column="19">=<pos:position pos:line="421" pos:column="20"/></operator> <name pos:line="421" pos:column="21">RB_STREAM_CL<pos:position pos:line="421" pos:column="33"/></name></expr>;<pos:position pos:line="421" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="422" pos:column="6"/></block></then>
    <elseif pos:line="423" pos:column="5">else <if pos:line="423" pos:column="10">if <condition pos:line="423" pos:column="13">(<expr><name pos:line="423" pos:column="14">old_te_val<pos:position pos:line="423" pos:column="24"/></name></expr>)<pos:position pos:line="423" pos:column="25"/></condition><then pos:line="423" pos:column="25"> <block pos:line="423" pos:column="26">{
        <if pos:line="424" pos:column="9">if <condition pos:line="424" pos:column="12">(<expr><name pos:line="424" pos:column="13">force10<pos:position pos:line="424" pos:column="20"/></name>
             <operator pos:line="425" pos:column="14">||<pos:position pos:line="425" pos:column="16"/></operator> <operator pos:line="425" pos:column="17">(<pos:position pos:line="425" pos:column="18"/></operator><call><name pos:line="425" pos:column="18">apr_table_get<pos:position pos:line="425" pos:column="31"/></name><argument_list pos:line="425" pos:column="31">(<argument><expr><name><name pos:line="425" pos:column="32">r<pos:position pos:line="425" pos:column="33"/></name><operator pos:line="425" pos:column="33">-&gt;<pos:position pos:line="425" pos:column="38"/></operator><name pos:line="425" pos:column="35">subprocess_env<pos:position pos:line="425" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="425" pos:column="51">"proxy-sendcl"<pos:position pos:line="425" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="425" pos:column="66"/></argument_list></call>
                  <operator pos:line="426" pos:column="19">&amp;&amp;<pos:position pos:line="426" pos:column="29"/></operator> <operator pos:line="426" pos:column="22">!<pos:position pos:line="426" pos:column="23"/></operator><call><name pos:line="426" pos:column="23">apr_table_get<pos:position pos:line="426" pos:column="36"/></name><argument_list pos:line="426" pos:column="36">(<argument><expr><name><name pos:line="426" pos:column="37">r<pos:position pos:line="426" pos:column="38"/></name><operator pos:line="426" pos:column="38">-&gt;<pos:position pos:line="426" pos:column="43"/></operator><name pos:line="426" pos:column="40">subprocess_env<pos:position pos:line="426" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="426" pos:column="56">"proxy-sendchunks"<pos:position pos:line="426" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="426" pos:column="75"/></argument_list></call>
                  <operator pos:line="427" pos:column="19">&amp;&amp;<pos:position pos:line="427" pos:column="29"/></operator> <operator pos:line="427" pos:column="22">!<pos:position pos:line="427" pos:column="23"/></operator><call><name pos:line="427" pos:column="23">apr_table_get<pos:position pos:line="427" pos:column="36"/></name><argument_list pos:line="427" pos:column="36">(<argument><expr><name><name pos:line="427" pos:column="37">r<pos:position pos:line="427" pos:column="38"/></name><operator pos:line="427" pos:column="38">-&gt;<pos:position pos:line="427" pos:column="43"/></operator><name pos:line="427" pos:column="40">subprocess_env<pos:position pos:line="427" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="427" pos:column="56">"proxy-sendchunked"<pos:position pos:line="427" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="427" pos:column="76"/></argument_list></call><operator pos:line="427" pos:column="76">)<pos:position pos:line="427" pos:column="77"/></operator></expr>)<pos:position pos:line="427" pos:column="78"/></condition><then pos:line="427" pos:column="78"> <block pos:line="427" pos:column="79">{
            <expr_stmt><expr><name pos:line="428" pos:column="13">rb_method<pos:position pos:line="428" pos:column="22"/></name> <operator pos:line="428" pos:column="23">=<pos:position pos:line="428" pos:column="24"/></operator> <name pos:line="428" pos:column="25">RB_SPOOL_CL<pos:position pos:line="428" pos:column="36"/></name></expr>;<pos:position pos:line="428" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="429" pos:column="10"/></block></then>
        <else pos:line="430" pos:column="9">else <block pos:line="430" pos:column="14">{
            <expr_stmt><expr><name pos:line="431" pos:column="13">rb_method<pos:position pos:line="431" pos:column="22"/></name> <operator pos:line="431" pos:column="23">=<pos:position pos:line="431" pos:column="24"/></operator> <name pos:line="431" pos:column="25">RB_STREAM_CHUNKED<pos:position pos:line="431" pos:column="42"/></name></expr>;<pos:position pos:line="431" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="432" pos:column="10"/></block></else></if>
    }<pos:position pos:line="433" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="434" pos:column="5">else <if pos:line="434" pos:column="10">if <condition pos:line="434" pos:column="13">(<expr><name pos:line="434" pos:column="14">old_cl_val<pos:position pos:line="434" pos:column="24"/></name></expr>)<pos:position pos:line="434" pos:column="25"/></condition><then pos:line="434" pos:column="25"> <block pos:line="434" pos:column="26">{
        <if pos:line="435" pos:column="9">if <condition pos:line="435" pos:column="12">(<expr><name><name pos:line="435" pos:column="13">r<pos:position pos:line="435" pos:column="14"/></name><operator pos:line="435" pos:column="14">-&gt;<pos:position pos:line="435" pos:column="19"/></operator><name pos:line="435" pos:column="16">input_filters<pos:position pos:line="435" pos:column="29"/></name></name> <operator pos:line="435" pos:column="30">==<pos:position pos:line="435" pos:column="32"/></operator> <name><name pos:line="435" pos:column="33">r<pos:position pos:line="435" pos:column="34"/></name><operator pos:line="435" pos:column="34">-&gt;<pos:position pos:line="435" pos:column="39"/></operator><name pos:line="435" pos:column="36">proto_input_filters<pos:position pos:line="435" pos:column="55"/></name></name></expr>)<pos:position pos:line="435" pos:column="56"/></condition><then pos:line="435" pos:column="56"> <block pos:line="435" pos:column="57">{
            <expr_stmt><expr><name pos:line="436" pos:column="13">rb_method<pos:position pos:line="436" pos:column="22"/></name> <operator pos:line="436" pos:column="23">=<pos:position pos:line="436" pos:column="24"/></operator> <name pos:line="436" pos:column="25">RB_STREAM_CL<pos:position pos:line="436" pos:column="37"/></name></expr>;<pos:position pos:line="436" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="437" pos:column="10"/></block></then>
        <elseif pos:line="438" pos:column="9">else <if pos:line="438" pos:column="14">if <condition pos:line="438" pos:column="17">(<expr><operator pos:line="438" pos:column="18">!<pos:position pos:line="438" pos:column="19"/></operator><name pos:line="438" pos:column="19">force10<pos:position pos:line="438" pos:column="26"/></name>
                  <operator pos:line="439" pos:column="19">&amp;&amp;<pos:position pos:line="439" pos:column="29"/></operator> <operator pos:line="439" pos:column="22">(<pos:position pos:line="439" pos:column="23"/></operator><call><name pos:line="439" pos:column="23">apr_table_get<pos:position pos:line="439" pos:column="36"/></name><argument_list pos:line="439" pos:column="36">(<argument><expr><name><name pos:line="439" pos:column="37">r<pos:position pos:line="439" pos:column="38"/></name><operator pos:line="439" pos:column="38">-&gt;<pos:position pos:line="439" pos:column="43"/></operator><name pos:line="439" pos:column="40">subprocess_env<pos:position pos:line="439" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="439" pos:column="56">"proxy-sendchunks"<pos:position pos:line="439" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="75"/></argument_list></call>
                      <operator pos:line="440" pos:column="23">||<pos:position pos:line="440" pos:column="25"/></operator> <call><name pos:line="440" pos:column="26">apr_table_get<pos:position pos:line="440" pos:column="39"/></name><argument_list pos:line="440" pos:column="39">(<argument><expr><name><name pos:line="440" pos:column="40">r<pos:position pos:line="440" pos:column="41"/></name><operator pos:line="440" pos:column="41">-&gt;<pos:position pos:line="440" pos:column="46"/></operator><name pos:line="440" pos:column="43">subprocess_env<pos:position pos:line="440" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="440" pos:column="59">"proxy-sendchunked"<pos:position pos:line="440" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="440" pos:column="79"/></argument_list></call><operator pos:line="440" pos:column="79">)<pos:position pos:line="440" pos:column="80"/></operator>
                  <operator pos:line="441" pos:column="19">&amp;&amp;<pos:position pos:line="441" pos:column="29"/></operator> <operator pos:line="441" pos:column="22">!<pos:position pos:line="441" pos:column="23"/></operator><call><name pos:line="441" pos:column="23">apr_table_get<pos:position pos:line="441" pos:column="36"/></name><argument_list pos:line="441" pos:column="36">(<argument><expr><name><name pos:line="441" pos:column="37">r<pos:position pos:line="441" pos:column="38"/></name><operator pos:line="441" pos:column="38">-&gt;<pos:position pos:line="441" pos:column="43"/></operator><name pos:line="441" pos:column="40">subprocess_env<pos:position pos:line="441" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="441" pos:column="56">"proxy-sendcl"<pos:position pos:line="441" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="441" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="441" pos:column="72"/></condition><then pos:line="441" pos:column="72"> <block pos:line="441" pos:column="73">{
            <expr_stmt><expr><name pos:line="442" pos:column="13">rb_method<pos:position pos:line="442" pos:column="22"/></name> <operator pos:line="442" pos:column="23">=<pos:position pos:line="442" pos:column="24"/></operator> <name pos:line="442" pos:column="25">RB_STREAM_CHUNKED<pos:position pos:line="442" pos:column="42"/></name></expr>;<pos:position pos:line="442" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="443" pos:column="10"/></block></then></if></elseif>
        <else pos:line="444" pos:column="9">else <block pos:line="444" pos:column="14">{
            <expr_stmt><expr><name pos:line="445" pos:column="13">rb_method<pos:position pos:line="445" pos:column="22"/></name> <operator pos:line="445" pos:column="23">=<pos:position pos:line="445" pos:column="24"/></operator> <name pos:line="445" pos:column="25">RB_SPOOL_CL<pos:position pos:line="445" pos:column="36"/></name></expr>;<pos:position pos:line="445" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="446" pos:column="10"/></block></else></if>
    }<pos:position pos:line="447" pos:column="6"/></block></then></if></elseif>
    <else pos:line="448" pos:column="5">else <block pos:line="448" pos:column="10">{
        <comment type="block" pos:line="449" pos:column="9">/* This is an appropriate default; very efficient for no-body
         * requests, and has the behavior that it will not add any C-L
         * when the old_cl_val is NULL.
         */</comment>
        <expr_stmt><expr><name pos:line="453" pos:column="9">rb_method<pos:position pos:line="453" pos:column="18"/></name> <operator pos:line="453" pos:column="19">=<pos:position pos:line="453" pos:column="20"/></operator> <name pos:line="453" pos:column="21">RB_SPOOL_CL<pos:position pos:line="453" pos:column="32"/></name></expr>;<pos:position pos:line="453" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="454" pos:column="6"/></block></else></if>

<comment type="block" pos:line="456" pos:column="1">/* Yes I hate gotos.  This is the subrequest shortcut */</comment>
<label><name pos:line="457" pos:column="1">skip_body<pos:position pos:line="457" pos:column="10"/></name>:<pos:position pos:line="457" pos:column="11"/></label>
    <comment type="block" pos:line="458" pos:column="5">/*
     * Handle Connection: header if we do HTTP/1.1 request:
     * If we plan to close the backend connection sent Connection: close
     * otherwise sent Connection: Keep-Alive.
     */</comment>
    <if pos:line="463" pos:column="5">if <condition pos:line="463" pos:column="8">(<expr><operator pos:line="463" pos:column="9">!<pos:position pos:line="463" pos:column="10"/></operator><name pos:line="463" pos:column="10">force10<pos:position pos:line="463" pos:column="17"/></name></expr>)<pos:position pos:line="463" pos:column="18"/></condition><then pos:line="463" pos:column="18"> <block pos:line="463" pos:column="19">{
        <if pos:line="464" pos:column="9">if <condition pos:line="464" pos:column="12">(<expr><name><name pos:line="464" pos:column="13">p_conn<pos:position pos:line="464" pos:column="19"/></name><operator pos:line="464" pos:column="19">-&gt;<pos:position pos:line="464" pos:column="24"/></operator><name pos:line="464" pos:column="21">close<pos:position pos:line="464" pos:column="26"/></name></name></expr>)<pos:position pos:line="464" pos:column="27"/></condition><then pos:line="464" pos:column="27"> <block pos:line="464" pos:column="28">{
            <expr_stmt><expr><name pos:line="465" pos:column="13">buf<pos:position pos:line="465" pos:column="16"/></name> <operator pos:line="465" pos:column="17">=<pos:position pos:line="465" pos:column="18"/></operator> <call><name pos:line="465" pos:column="19">apr_pstrdup<pos:position pos:line="465" pos:column="30"/></name><argument_list pos:line="465" pos:column="30">(<argument><expr><name pos:line="465" pos:column="31">p<pos:position pos:line="465" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="465" pos:column="34">"Connection: close"<pos:position pos:line="465" pos:column="53"/></literal> <name pos:line="465" pos:column="54">CRLF<pos:position pos:line="465" pos:column="58"/></name></expr></argument>)<pos:position pos:line="465" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="466" pos:column="10"/></block></then>
        <else pos:line="467" pos:column="9">else <block pos:line="467" pos:column="14">{
            <expr_stmt><expr><name pos:line="468" pos:column="13">buf<pos:position pos:line="468" pos:column="16"/></name> <operator pos:line="468" pos:column="17">=<pos:position pos:line="468" pos:column="18"/></operator> <call><name pos:line="468" pos:column="19">apr_pstrdup<pos:position pos:line="468" pos:column="30"/></name><argument_list pos:line="468" pos:column="30">(<argument><expr><name pos:line="468" pos:column="31">p<pos:position pos:line="468" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="468" pos:column="34">"Connection: Keep-Alive"<pos:position pos:line="468" pos:column="58"/></literal> <name pos:line="468" pos:column="59">CRLF<pos:position pos:line="468" pos:column="63"/></name></expr></argument>)<pos:position pos:line="468" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="469" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="470" pos:column="9">ap_xlate_proto_to_ascii<pos:position pos:line="470" pos:column="32"/></name><argument_list pos:line="470" pos:column="32">(<argument><expr><name pos:line="470" pos:column="33">buf<pos:position pos:line="470" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="470" pos:column="38">strlen<pos:position pos:line="470" pos:column="44"/></name><argument_list pos:line="470" pos:column="44">(<argument><expr><name pos:line="470" pos:column="45">buf<pos:position pos:line="470" pos:column="48"/></name></expr></argument>)<pos:position pos:line="470" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="470" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="471" pos:column="9">e<pos:position pos:line="471" pos:column="10"/></name> <operator pos:line="471" pos:column="11">=<pos:position pos:line="471" pos:column="12"/></operator> <call><name pos:line="471" pos:column="13">apr_bucket_pool_create<pos:position pos:line="471" pos:column="35"/></name><argument_list pos:line="471" pos:column="35">(<argument><expr><name pos:line="471" pos:column="36">buf<pos:position pos:line="471" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="471" pos:column="41">strlen<pos:position pos:line="471" pos:column="47"/></name><argument_list pos:line="471" pos:column="47">(<argument><expr><name pos:line="471" pos:column="48">buf<pos:position pos:line="471" pos:column="51"/></name></expr></argument>)<pos:position pos:line="471" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="471" pos:column="54">p<pos:position pos:line="471" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="471" pos:column="57">c<pos:position pos:line="471" pos:column="58"/></name><operator pos:line="471" pos:column="58">-&gt;<pos:position pos:line="471" pos:column="63"/></operator><name pos:line="471" pos:column="60">bucket_alloc<pos:position pos:line="471" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="471" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="472" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="472" pos:column="32"/></name><argument_list pos:line="472" pos:column="32">(<argument><expr><name pos:line="472" pos:column="33">header_brigade<pos:position pos:line="472" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="472" pos:column="49">e<pos:position pos:line="472" pos:column="50"/></name></expr></argument>)<pos:position pos:line="472" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="472" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="473" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="475" pos:column="5">/* send the request body, if any. */</comment>
    <switch pos:line="476" pos:column="5">switch<condition pos:line="476" pos:column="11">(<expr><name pos:line="476" pos:column="12">rb_method<pos:position pos:line="476" pos:column="21"/></name></expr>)<pos:position pos:line="476" pos:column="22"/></condition> <block pos:line="476" pos:column="23">{
    <case pos:line="477" pos:column="5">case <expr><name pos:line="477" pos:column="10">RB_STREAM_CHUNKED<pos:position pos:line="477" pos:column="27"/></name></expr>:<pos:position pos:line="477" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="478" pos:column="9">rv<pos:position pos:line="478" pos:column="11"/></name> <operator pos:line="478" pos:column="12">=<pos:position pos:line="478" pos:column="13"/></operator> <call><name pos:line="478" pos:column="14">stream_reqbody_chunked<pos:position pos:line="478" pos:column="36"/></name><argument_list pos:line="478" pos:column="36">(<argument><expr><name pos:line="478" pos:column="37">p<pos:position pos:line="478" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="478" pos:column="40">r<pos:position pos:line="478" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="478" pos:column="43">p_conn<pos:position pos:line="478" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="478" pos:column="51">origin<pos:position pos:line="478" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="478" pos:column="59">header_brigade<pos:position pos:line="478" pos:column="73"/></name></expr></argument>,
                                        <argument><expr><name pos:line="479" pos:column="41">input_brigade<pos:position pos:line="479" pos:column="54"/></name></expr></argument>)<pos:position pos:line="479" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="479" pos:column="56"/></expr_stmt>
        <break pos:line="480" pos:column="9">break;<pos:position pos:line="480" pos:column="15"/></break>
    <case pos:line="481" pos:column="5">case <expr><name pos:line="481" pos:column="10">RB_STREAM_CL<pos:position pos:line="481" pos:column="22"/></name></expr>:<pos:position pos:line="481" pos:column="23"/></case>
        <expr_stmt><expr><name pos:line="482" pos:column="9">rv<pos:position pos:line="482" pos:column="11"/></name> <operator pos:line="482" pos:column="12">=<pos:position pos:line="482" pos:column="13"/></operator> <call><name pos:line="482" pos:column="14">stream_reqbody_cl<pos:position pos:line="482" pos:column="31"/></name><argument_list pos:line="482" pos:column="31">(<argument><expr><name pos:line="482" pos:column="32">p<pos:position pos:line="482" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="482" pos:column="35">r<pos:position pos:line="482" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="482" pos:column="38">p_conn<pos:position pos:line="482" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="482" pos:column="46">origin<pos:position pos:line="482" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="482" pos:column="54">header_brigade<pos:position pos:line="482" pos:column="68"/></name></expr></argument>,
                                   <argument><expr><name pos:line="483" pos:column="36">input_brigade<pos:position pos:line="483" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="483" pos:column="51">old_cl_val<pos:position pos:line="483" pos:column="61"/></name></expr></argument>)<pos:position pos:line="483" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="483" pos:column="63"/></expr_stmt>
        <break pos:line="484" pos:column="9">break;<pos:position pos:line="484" pos:column="15"/></break>
    <case pos:line="485" pos:column="5">case <expr><name pos:line="485" pos:column="10">RB_SPOOL_CL<pos:position pos:line="485" pos:column="21"/></name></expr>:<pos:position pos:line="485" pos:column="22"/></case>
        <expr_stmt><expr><name pos:line="486" pos:column="9">rv<pos:position pos:line="486" pos:column="11"/></name> <operator pos:line="486" pos:column="12">=<pos:position pos:line="486" pos:column="13"/></operator> <call><name pos:line="486" pos:column="14">spool_reqbody_cl<pos:position pos:line="486" pos:column="30"/></name><argument_list pos:line="486" pos:column="30">(<argument><expr><name pos:line="486" pos:column="31">p<pos:position pos:line="486" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="486" pos:column="34">r<pos:position pos:line="486" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="486" pos:column="37">p_conn<pos:position pos:line="486" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="486" pos:column="45">origin<pos:position pos:line="486" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="486" pos:column="53">header_brigade<pos:position pos:line="486" pos:column="67"/></name></expr></argument>,
                                  <argument><expr><name pos:line="487" pos:column="35">input_brigade<pos:position pos:line="487" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="487" pos:column="50">(<pos:position pos:line="487" pos:column="51"/></operator><name pos:line="487" pos:column="51">old_cl_val<pos:position pos:line="487" pos:column="61"/></name> <operator pos:line="487" pos:column="62">!=<pos:position pos:line="487" pos:column="64"/></operator> <name pos:line="487" pos:column="65">NULL<pos:position pos:line="487" pos:column="69"/></name><operator pos:line="487" pos:column="69">)<pos:position pos:line="487" pos:column="70"/></operator>
                                              <operator pos:line="488" pos:column="47">||<pos:position pos:line="488" pos:column="49"/></operator> <operator pos:line="488" pos:column="50">(<pos:position pos:line="488" pos:column="51"/></operator><name pos:line="488" pos:column="51">old_te_val<pos:position pos:line="488" pos:column="61"/></name> <operator pos:line="488" pos:column="62">!=<pos:position pos:line="488" pos:column="64"/></operator> <name pos:line="488" pos:column="65">NULL<pos:position pos:line="488" pos:column="69"/></name><operator pos:line="488" pos:column="69">)<pos:position pos:line="488" pos:column="70"/></operator>
                                              <operator pos:line="489" pos:column="47">||<pos:position pos:line="489" pos:column="49"/></operator> <operator pos:line="489" pos:column="50">(<pos:position pos:line="489" pos:column="51"/></operator><name pos:line="489" pos:column="51">bytes_read<pos:position pos:line="489" pos:column="61"/></name> <operator pos:line="489" pos:column="62">&gt;<pos:position pos:line="489" pos:column="66"/></operator> <literal type="number" pos:line="489" pos:column="64">0<pos:position pos:line="489" pos:column="65"/></literal><operator pos:line="489" pos:column="65">)<pos:position pos:line="489" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="489" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="68"/></expr_stmt>
        <break pos:line="490" pos:column="9">break;<pos:position pos:line="490" pos:column="15"/></break>
    <default pos:line="491" pos:column="5">default:<pos:position pos:line="491" pos:column="13"/></default>
        <comment type="block" pos:line="492" pos:column="9">/* shouldn't be possible */</comment>
        <expr_stmt><expr><name pos:line="493" pos:column="9">rv<pos:position pos:line="493" pos:column="11"/></name> <operator pos:line="493" pos:column="12">=<pos:position pos:line="493" pos:column="13"/></operator> <name pos:line="493" pos:column="14">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="493" pos:column="40"/></name></expr> ;<pos:position pos:line="493" pos:column="42"/></expr_stmt>
        <break pos:line="494" pos:column="9">break;<pos:position pos:line="494" pos:column="15"/></break>
    }<pos:position pos:line="495" pos:column="6"/></block></switch>

    <if pos:line="497" pos:column="5">if <condition pos:line="497" pos:column="8">(<expr><name pos:line="497" pos:column="9">rv<pos:position pos:line="497" pos:column="11"/></name> <operator pos:line="497" pos:column="12">!=<pos:position pos:line="497" pos:column="14"/></operator> <name pos:line="497" pos:column="15">OK<pos:position pos:line="497" pos:column="17"/></name></expr>)<pos:position pos:line="497" pos:column="18"/></condition><then pos:line="497" pos:column="18"> <block pos:line="497" pos:column="19">{
        <comment type="block" pos:line="498" pos:column="9">/* apr_status_t value has been logged in lower level method */</comment>
        <expr_stmt><expr><call><name pos:line="499" pos:column="9">ap_log_error<pos:position pos:line="499" pos:column="21"/></name><argument_list pos:line="499" pos:column="21">(<argument><expr><name pos:line="499" pos:column="22">APLOG_MARK<pos:position pos:line="499" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="499" pos:column="34">APLOG_ERR<pos:position pos:line="499" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="499" pos:column="45">0<pos:position pos:line="499" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="499" pos:column="48">r<pos:position pos:line="499" pos:column="49"/></name><operator pos:line="499" pos:column="49">-&gt;<pos:position pos:line="499" pos:column="54"/></operator><name pos:line="499" pos:column="51">server<pos:position pos:line="499" pos:column="57"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="500" pos:column="22">"proxy: pass request body failed to %pI (%s)"<pos:position pos:line="500" pos:column="67"/></literal>
                     <literal type="string" pos:line="501" pos:column="22">" from %s (%s)"<pos:position pos:line="501" pos:column="37"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="502" pos:column="22">p_conn<pos:position pos:line="502" pos:column="28"/></name><operator pos:line="502" pos:column="28">-&gt;<pos:position pos:line="502" pos:column="33"/></operator><name pos:line="502" pos:column="30">addr<pos:position pos:line="502" pos:column="34"/></name></name></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="503" pos:column="22">p_conn<pos:position pos:line="503" pos:column="28"/></name><operator pos:line="503" pos:column="28">-&gt;<pos:position pos:line="503" pos:column="33"/></operator><name pos:line="503" pos:column="30">hostname<pos:position pos:line="503" pos:column="38"/></name></name></expr> ?<pos:position pos:line="503" pos:column="40"/></condition><then pos:line="503" pos:column="40"> <expr><name><name pos:line="503" pos:column="41">p_conn<pos:position pos:line="503" pos:column="47"/></name><operator pos:line="503" pos:column="47">-&gt;<pos:position pos:line="503" pos:column="52"/></operator><name pos:line="503" pos:column="49">hostname<pos:position pos:line="503" pos:column="57"/></name></name></expr></then><else pos:line="503" pos:column="57">: <expr><literal type="string" pos:line="503" pos:column="59">""<pos:position pos:line="503" pos:column="61"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><name><name pos:line="504" pos:column="22">c<pos:position pos:line="504" pos:column="23"/></name><operator pos:line="504" pos:column="23">-&gt;<pos:position pos:line="504" pos:column="28"/></operator><name pos:line="504" pos:column="25">remote_ip<pos:position pos:line="504" pos:column="34"/></name></name></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="505" pos:column="22">c<pos:position pos:line="505" pos:column="23"/></name><operator pos:line="505" pos:column="23">-&gt;<pos:position pos:line="505" pos:column="28"/></operator><name pos:line="505" pos:column="25">remote_host<pos:position pos:line="505" pos:column="36"/></name></name></expr> ?<pos:position pos:line="505" pos:column="38"/></condition><then pos:line="505" pos:column="38"> <expr><name><name pos:line="505" pos:column="39">c<pos:position pos:line="505" pos:column="40"/></name><operator pos:line="505" pos:column="40">-&gt;<pos:position pos:line="505" pos:column="45"/></operator><name pos:line="505" pos:column="42">remote_host<pos:position pos:line="505" pos:column="53"/></name></name></expr></then><else pos:line="505" pos:column="53">: <expr><literal type="string" pos:line="505" pos:column="55">""<pos:position pos:line="505" pos:column="57"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="505" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="505" pos:column="59"/></expr_stmt>
        <return pos:line="506" pos:column="9">return <expr><name pos:line="506" pos:column="16">rv<pos:position pos:line="506" pos:column="18"/></name></expr>;<pos:position pos:line="506" pos:column="19"/></return>
    }<pos:position pos:line="507" pos:column="6"/></block></then></if>

    <return pos:line="509" pos:column="5">return <expr><name pos:line="509" pos:column="12">OK<pos:position pos:line="509" pos:column="14"/></name></expr>;<pos:position pos:line="509" pos:column="15"/></return>
}<pos:position pos:line="510" pos:column="2"/></block></function></unit>

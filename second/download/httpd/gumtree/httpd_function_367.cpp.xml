<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_367.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_args<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">pool<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">argc<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><specifier pos:line="1" pos:column="64">const<pos:position pos:line="1" pos:column="69"/></specifier></type> <name><name pos:line="1" pos:column="70">argv<pos:position pos:line="1" pos:column="74"/></name><index pos:line="1" pos:column="74">[]<pos:position pos:line="1" pos:column="76"/></index></name></decl></parameter>, 
                       <parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">alg<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">mask<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">user<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier><modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">pwfilename<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, 
                       <parameter><decl><type><name pos:line="3" pos:column="24">char<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">password<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="40"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">arg<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">args_left<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">2<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/*
     * Preliminary check to make sure they provided at least
     * three arguments, we'll do better argument checking as 
     * we parse the command line.
     */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">argc<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&lt;<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="16">3<pos:position pos:line="14" pos:column="17"/></literal></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18"> <block pos:line="14" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">usage<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">()<pos:position pos:line="15" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/*
     * Go through the argument list and pick out any options.  They
     * have to precede any other arguments.
     */</comment>
    <for pos:line="22" pos:column="5">for <control pos:line="22" pos:column="9">(<init><expr><name pos:line="22" pos:column="10">i<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal></expr>;<pos:position pos:line="22" pos:column="16"/></init> <condition><expr><name pos:line="22" pos:column="17">i<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">&lt;<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="21">argc<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></condition> <incr><expr><name pos:line="22" pos:column="27">i<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">++<pos:position pos:line="22" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="31"/></control> <block pos:line="22" pos:column="32">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">arg<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name><name pos:line="23" pos:column="15">argv<pos:position pos:line="23" pos:column="19"/></name><index pos:line="23" pos:column="19">[<expr><name pos:line="23" pos:column="20">i<pos:position pos:line="23" pos:column="21"/></name></expr>]<pos:position pos:line="23" pos:column="22"/></index></name></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">arg<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">!=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="char" pos:line="24" pos:column="21">'-'<pos:position pos:line="24" pos:column="24"/></literal></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25"> <block pos:line="24" pos:column="26">{
            <break pos:line="25" pos:column="13">break;<pos:position pos:line="25" pos:column="19"/></break>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><operator pos:line="27" pos:column="16">*<pos:position pos:line="27" pos:column="17"/></operator><operator pos:line="27" pos:column="17">++<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">arg<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">!=<pos:position pos:line="27" pos:column="25"/></operator> <literal type="char" pos:line="27" pos:column="26">'\0'<pos:position pos:line="27" pos:column="30"/></literal></expr>)<pos:position pos:line="27" pos:column="31"/></condition> <block pos:line="27" pos:column="32">{
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><operator pos:line="28" pos:column="17">*<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">arg<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">==<pos:position pos:line="28" pos:column="24"/></operator> <literal type="char" pos:line="28" pos:column="25">'c'<pos:position pos:line="28" pos:column="28"/></literal></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29"> <block pos:line="28" pos:column="30">{
                <expr_stmt><expr><operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">mask<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">|=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">APHTP_NEWFILE<pos:position pos:line="29" pos:column="39"/></name></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then>
            <elseif pos:line="31" pos:column="13">else <if pos:line="31" pos:column="18">if <condition pos:line="31" pos:column="21">(<expr><operator pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">arg<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">==<pos:position pos:line="31" pos:column="29"/></operator> <literal type="char" pos:line="31" pos:column="30">'n'<pos:position pos:line="31" pos:column="33"/></literal></expr>)<pos:position pos:line="31" pos:column="34"/></condition><then pos:line="31" pos:column="34"> <block pos:line="31" pos:column="35">{
                <expr_stmt><expr><operator pos:line="32" pos:column="17">*<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">mask<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">|=<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="26">APHTP_NOFILE<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="33" pos:column="17">args_left<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">--<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="35" pos:column="13">else <if pos:line="35" pos:column="18">if <condition pos:line="35" pos:column="21">(<expr><operator pos:line="35" pos:column="22">*<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="23">arg<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">==<pos:position pos:line="35" pos:column="29"/></operator> <literal type="char" pos:line="35" pos:column="30">'m'<pos:position pos:line="35" pos:column="33"/></literal></expr>)<pos:position pos:line="35" pos:column="34"/></condition><then pos:line="35" pos:column="34"> <block pos:line="35" pos:column="35">{
                <expr_stmt><expr><operator pos:line="36" pos:column="17">*<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">alg<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">ALG_APMD5<pos:position pos:line="36" pos:column="33"/></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="38" pos:column="13">else <if pos:line="38" pos:column="18">if <condition pos:line="38" pos:column="21">(<expr><operator pos:line="38" pos:column="22">*<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="23">arg<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">==<pos:position pos:line="38" pos:column="29"/></operator> <literal type="char" pos:line="38" pos:column="30">'s'<pos:position pos:line="38" pos:column="33"/></literal></expr>)<pos:position pos:line="38" pos:column="34"/></condition><then pos:line="38" pos:column="34"> <block pos:line="38" pos:column="35">{
                <expr_stmt><expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">alg<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">ALG_APSHA<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="41" pos:column="13">else <if pos:line="41" pos:column="18">if <condition pos:line="41" pos:column="21">(<expr><operator pos:line="41" pos:column="22">*<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">arg<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">==<pos:position pos:line="41" pos:column="29"/></operator> <literal type="char" pos:line="41" pos:column="30">'p'<pos:position pos:line="41" pos:column="33"/></literal></expr>)<pos:position pos:line="41" pos:column="34"/></condition><then pos:line="41" pos:column="34"> <block pos:line="41" pos:column="35">{
                <expr_stmt><expr><operator pos:line="42" pos:column="17">*<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">alg<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">ALG_PLAIN<pos:position pos:line="42" pos:column="33"/></name></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="44" pos:column="13">else <if pos:line="44" pos:column="18">if <condition pos:line="44" pos:column="21">(<expr><operator pos:line="44" pos:column="22">*<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">arg<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">==<pos:position pos:line="44" pos:column="29"/></operator> <literal type="char" pos:line="44" pos:column="30">'d'<pos:position pos:line="44" pos:column="33"/></literal></expr>)<pos:position pos:line="44" pos:column="34"/></condition><then pos:line="44" pos:column="34"> <block pos:line="44" pos:column="35">{
                <expr_stmt><expr><operator pos:line="45" pos:column="17">*<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">alg<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="24">ALG_CRYPT<pos:position pos:line="45" pos:column="33"/></name></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="47" pos:column="13">else <if pos:line="47" pos:column="18">if <condition pos:line="47" pos:column="21">(<expr><operator pos:line="47" pos:column="22">*<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">arg<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">==<pos:position pos:line="47" pos:column="29"/></operator> <literal type="char" pos:line="47" pos:column="30">'b'<pos:position pos:line="47" pos:column="33"/></literal></expr>)<pos:position pos:line="47" pos:column="34"/></condition><then pos:line="47" pos:column="34"> <block pos:line="47" pos:column="35">{
                <expr_stmt><expr><operator pos:line="48" pos:column="17">*<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">mask<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">|=<pos:position pos:line="48" pos:column="25"/></operator> <name pos:line="48" pos:column="26">APHTP_NONINTERACTIVE<pos:position pos:line="48" pos:column="46"/></name></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">args_left<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">++<pos:position pos:line="49" pos:column="28"/></operator></expr>;<pos:position pos:line="49" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="51" pos:column="13">else <if pos:line="51" pos:column="18">if <condition pos:line="51" pos:column="21">(<expr><operator pos:line="51" pos:column="22">*<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">arg<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">==<pos:position pos:line="51" pos:column="29"/></operator> <literal type="char" pos:line="51" pos:column="30">'D'<pos:position pos:line="51" pos:column="33"/></literal></expr>)<pos:position pos:line="51" pos:column="34"/></condition><then pos:line="51" pos:column="34"> <block pos:line="51" pos:column="35">{
                <expr_stmt><expr><operator pos:line="52" pos:column="17">*<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">mask<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">|=<pos:position pos:line="52" pos:column="25"/></operator> <name pos:line="52" pos:column="26">APHTP_DELUSER<pos:position pos:line="52" pos:column="39"/></name></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if></elseif>
            <else pos:line="54" pos:column="13">else <block pos:line="54" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">usage<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">()<pos:position pos:line="55" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></else></if>
        }<pos:position pos:line="57" pos:column="10"/></block></while>
    }<pos:position pos:line="58" pos:column="6"/></block></for>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">(<pos:position pos:line="60" pos:column="10"/></operator><operator pos:line="60" pos:column="10">*<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="11">mask<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">&amp;<pos:position pos:line="60" pos:column="21"/></operator> <name pos:line="60" pos:column="18">APHTP_NEWFILE<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">)<pos:position pos:line="60" pos:column="32"/></operator> <operator pos:line="60" pos:column="33">&amp;&amp;<pos:position pos:line="60" pos:column="43"/></operator> <operator pos:line="60" pos:column="36">(<pos:position pos:line="60" pos:column="37"/></operator><operator pos:line="60" pos:column="37">*<pos:position pos:line="60" pos:column="38"/></operator><name pos:line="60" pos:column="38">mask<pos:position pos:line="60" pos:column="42"/></name> <operator pos:line="60" pos:column="43">&amp;<pos:position pos:line="60" pos:column="48"/></operator> <name pos:line="60" pos:column="45">APHTP_NOFILE<pos:position pos:line="60" pos:column="57"/></name><operator pos:line="60" pos:column="57">)<pos:position pos:line="60" pos:column="58"/></operator></expr>)<pos:position pos:line="60" pos:column="59"/></condition><then pos:line="60" pos:column="59"> <block pos:line="60" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">apr_file_printf<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name pos:line="61" pos:column="25">errfile<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="34">"%s: -c and -n options conflict\n"<pos:position pos:line="61" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="70">argv<pos:position pos:line="61" pos:column="74"/></name><index pos:line="61" pos:column="74">[<expr><literal type="number" pos:line="61" pos:column="75">0<pos:position pos:line="61" pos:column="76"/></literal></expr>]<pos:position pos:line="61" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="61" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">exit<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><name pos:line="62" pos:column="14">ERR_SYNTAX<pos:position pos:line="62" pos:column="24"/></name></expr></argument>)<pos:position pos:line="62" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">(<pos:position pos:line="64" pos:column="10"/></operator><operator pos:line="64" pos:column="10">*<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="11">mask<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">&amp;<pos:position pos:line="64" pos:column="21"/></operator> <name pos:line="64" pos:column="18">APHTP_NEWFILE<pos:position pos:line="64" pos:column="31"/></name><operator pos:line="64" pos:column="31">)<pos:position pos:line="64" pos:column="32"/></operator> <operator pos:line="64" pos:column="33">&amp;&amp;<pos:position pos:line="64" pos:column="43"/></operator> <operator pos:line="64" pos:column="36">(<pos:position pos:line="64" pos:column="37"/></operator><operator pos:line="64" pos:column="37">*<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="38">mask<pos:position pos:line="64" pos:column="42"/></name> <operator pos:line="64" pos:column="43">&amp;<pos:position pos:line="64" pos:column="48"/></operator> <name pos:line="64" pos:column="45">APHTP_DELUSER<pos:position pos:line="64" pos:column="58"/></name><operator pos:line="64" pos:column="58">)<pos:position pos:line="64" pos:column="59"/></operator></expr>)<pos:position pos:line="64" pos:column="60"/></condition><then pos:line="64" pos:column="60"> <block pos:line="64" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">apr_file_printf<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">errfile<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="34">"%s: -c and -D options conflict\n"<pos:position pos:line="65" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="70">argv<pos:position pos:line="65" pos:column="74"/></name><index pos:line="65" pos:column="74">[<expr><literal type="number" pos:line="65" pos:column="75">0<pos:position pos:line="65" pos:column="76"/></literal></expr>]<pos:position pos:line="65" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="65" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">exit<pos:position pos:line="66" pos:column="13"/></name><argument_list pos:line="66" pos:column="13">(<argument><expr><name pos:line="66" pos:column="14">ERR_SYNTAX<pos:position pos:line="66" pos:column="24"/></name></expr></argument>)<pos:position pos:line="66" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><operator pos:line="68" pos:column="9">(<pos:position pos:line="68" pos:column="10"/></operator><operator pos:line="68" pos:column="10">*<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="11">mask<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">&amp;<pos:position pos:line="68" pos:column="21"/></operator> <name pos:line="68" pos:column="18">APHTP_NOFILE<pos:position pos:line="68" pos:column="30"/></name><operator pos:line="68" pos:column="30">)<pos:position pos:line="68" pos:column="31"/></operator> <operator pos:line="68" pos:column="32">&amp;&amp;<pos:position pos:line="68" pos:column="42"/></operator> <operator pos:line="68" pos:column="35">(<pos:position pos:line="68" pos:column="36"/></operator><operator pos:line="68" pos:column="36">*<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="37">mask<pos:position pos:line="68" pos:column="41"/></name> <operator pos:line="68" pos:column="42">&amp;<pos:position pos:line="68" pos:column="47"/></operator> <name pos:line="68" pos:column="44">APHTP_DELUSER<pos:position pos:line="68" pos:column="57"/></name><operator pos:line="68" pos:column="57">)<pos:position pos:line="68" pos:column="58"/></operator></expr>)<pos:position pos:line="68" pos:column="59"/></condition><then pos:line="68" pos:column="59"> <block pos:line="68" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">apr_file_printf<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">errfile<pos:position pos:line="69" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="34">"%s: -n and -D options conflict\n"<pos:position pos:line="69" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="70">argv<pos:position pos:line="69" pos:column="74"/></name><index pos:line="69" pos:column="74">[<expr><literal type="number" pos:line="69" pos:column="75">0<pos:position pos:line="69" pos:column="76"/></literal></expr>]<pos:position pos:line="69" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="69" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">exit<pos:position pos:line="70" pos:column="13"/></name><argument_list pos:line="70" pos:column="13">(<argument><expr><name pos:line="70" pos:column="14">ERR_SYNTAX<pos:position pos:line="70" pos:column="24"/></name></expr></argument>)<pos:position pos:line="70" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="72" pos:column="5">/*
     * Make sure we still have exactly the right number of arguments left
     * (the filename, the username, and possibly the password if -b was
     * specified).
     */</comment>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><operator pos:line="77" pos:column="9">(<pos:position pos:line="77" pos:column="10"/></operator><name pos:line="77" pos:column="10">argc<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">-<pos:position pos:line="77" pos:column="16"/></operator> <name pos:line="77" pos:column="17">i<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">)<pos:position pos:line="77" pos:column="19"/></operator> <operator pos:line="77" pos:column="20">!=<pos:position pos:line="77" pos:column="22"/></operator> <name pos:line="77" pos:column="23">args_left<pos:position pos:line="77" pos:column="32"/></name></expr>)<pos:position pos:line="77" pos:column="33"/></condition><then pos:line="77" pos:column="33"> <block pos:line="77" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">usage<pos:position pos:line="78" pos:column="14"/></name><argument_list pos:line="78" pos:column="14">()<pos:position pos:line="78" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">*<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">mask<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">&amp;<pos:position pos:line="81" pos:column="20"/></operator> <name pos:line="81" pos:column="17">APHTP_NOFILE<pos:position pos:line="81" pos:column="29"/></name></expr>)<pos:position pos:line="81" pos:column="30"/></condition><then pos:line="81" pos:column="30"> <block pos:line="81" pos:column="31">{
        <expr_stmt><expr><name pos:line="82" pos:column="9">i<pos:position pos:line="82" pos:column="10"/></name><operator pos:line="82" pos:column="10">--<pos:position pos:line="82" pos:column="12"/></operator></expr>;<pos:position pos:line="82" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then>
    <else pos:line="84" pos:column="5">else <block pos:line="84" pos:column="10">{
        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name pos:line="85" pos:column="13">strlen<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><name><name pos:line="85" pos:column="20">argv<pos:position pos:line="85" pos:column="24"/></name><index pos:line="85" pos:column="24">[<expr><name pos:line="85" pos:column="25">i<pos:position pos:line="85" pos:column="26"/></name></expr>]<pos:position pos:line="85" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="28"/></argument_list></call> <operator pos:line="85" pos:column="29">&gt;<pos:position pos:line="85" pos:column="33"/></operator> <operator pos:line="85" pos:column="31">(<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="32">APR_PATH_MAX<pos:position pos:line="85" pos:column="44"/></name> <operator pos:line="85" pos:column="45">-<pos:position pos:line="85" pos:column="46"/></operator> <literal type="number" pos:line="85" pos:column="47">1<pos:position pos:line="85" pos:column="48"/></literal><operator pos:line="85" pos:column="48">)<pos:position pos:line="85" pos:column="49"/></operator></expr>)<pos:position pos:line="85" pos:column="50"/></condition><then pos:line="85" pos:column="50"> <block pos:line="85" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">apr_file_printf<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">errfile<pos:position pos:line="86" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="38">"%s: filename too long\n"<pos:position pos:line="86" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="65">argv<pos:position pos:line="86" pos:column="69"/></name><index pos:line="86" pos:column="69">[<expr><literal type="number" pos:line="86" pos:column="70">0<pos:position pos:line="86" pos:column="71"/></literal></expr>]<pos:position pos:line="86" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="86" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">exit<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><name pos:line="87" pos:column="18">ERR_OVERFLOW<pos:position pos:line="87" pos:column="30"/></name></expr></argument>)<pos:position pos:line="87" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="89" pos:column="9">*<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">pwfilename<pos:position pos:line="89" pos:column="20"/></name> <operator pos:line="89" pos:column="21">=<pos:position pos:line="89" pos:column="22"/></operator> <call><name pos:line="89" pos:column="23">apr_pstrdup<pos:position pos:line="89" pos:column="34"/></name><argument_list pos:line="89" pos:column="34">(<argument><expr><name pos:line="89" pos:column="35">pool<pos:position pos:line="89" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="41">argv<pos:position pos:line="89" pos:column="45"/></name><index pos:line="89" pos:column="45">[<expr><name pos:line="89" pos:column="46">i<pos:position pos:line="89" pos:column="47"/></name></expr>]<pos:position pos:line="89" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="50"/></expr_stmt>
        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><call><name pos:line="90" pos:column="13">strlen<pos:position pos:line="90" pos:column="19"/></name><argument_list pos:line="90" pos:column="19">(<argument><expr><name><name pos:line="90" pos:column="20">argv<pos:position pos:line="90" pos:column="24"/></name><index pos:line="90" pos:column="24">[<expr><name pos:line="90" pos:column="25">i<pos:position pos:line="90" pos:column="26"/></name> <operator pos:line="90" pos:column="27">+<pos:position pos:line="90" pos:column="28"/></operator> <literal type="number" pos:line="90" pos:column="29">1<pos:position pos:line="90" pos:column="30"/></literal></expr>]<pos:position pos:line="90" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="90" pos:column="32"/></argument_list></call> <operator pos:line="90" pos:column="33">&gt;<pos:position pos:line="90" pos:column="37"/></operator> <operator pos:line="90" pos:column="35">(<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="36">MAX_STRING_LEN<pos:position pos:line="90" pos:column="50"/></name> <operator pos:line="90" pos:column="51">-<pos:position pos:line="90" pos:column="52"/></operator> <literal type="number" pos:line="90" pos:column="53">1<pos:position pos:line="90" pos:column="54"/></literal><operator pos:line="90" pos:column="54">)<pos:position pos:line="90" pos:column="55"/></operator></expr>)<pos:position pos:line="90" pos:column="56"/></condition><then pos:line="90" pos:column="56"> <block pos:line="90" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">apr_file_printf<pos:position pos:line="91" pos:column="28"/></name><argument_list pos:line="91" pos:column="28">(<argument><expr><name pos:line="91" pos:column="29">errfile<pos:position pos:line="91" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="38">"%s: username too long (&gt; %d)\n"<pos:position pos:line="91" pos:column="73"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="92" pos:column="17">argv<pos:position pos:line="92" pos:column="21"/></name><index pos:line="92" pos:column="21">[<expr><literal type="number" pos:line="92" pos:column="22">0<pos:position pos:line="92" pos:column="23"/></literal></expr>]<pos:position pos:line="92" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="26">MAX_STRING_LEN<pos:position pos:line="92" pos:column="40"/></name> <operator pos:line="92" pos:column="41">-<pos:position pos:line="92" pos:column="42"/></operator> <literal type="number" pos:line="92" pos:column="43">1<pos:position pos:line="92" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">exit<pos:position pos:line="93" pos:column="17"/></name><argument_list pos:line="93" pos:column="17">(<argument><expr><name pos:line="93" pos:column="18">ERR_OVERFLOW<pos:position pos:line="93" pos:column="30"/></name></expr></argument>)<pos:position pos:line="93" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then></if>
    }<pos:position pos:line="95" pos:column="6"/></block></else></if>
    <expr_stmt><expr><operator pos:line="96" pos:column="5">*<pos:position pos:line="96" pos:column="6"/></operator><name pos:line="96" pos:column="6">user<pos:position pos:line="96" pos:column="10"/></name> <operator pos:line="96" pos:column="11">=<pos:position pos:line="96" pos:column="12"/></operator> <call><name pos:line="96" pos:column="13">apr_pstrdup<pos:position pos:line="96" pos:column="24"/></name><argument_list pos:line="96" pos:column="24">(<argument><expr><name pos:line="96" pos:column="25">pool<pos:position pos:line="96" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="31">argv<pos:position pos:line="96" pos:column="35"/></name><index pos:line="96" pos:column="35">[<expr><name pos:line="96" pos:column="36">i<pos:position pos:line="96" pos:column="37"/></name> <operator pos:line="96" pos:column="38">+<pos:position pos:line="96" pos:column="39"/></operator> <literal type="number" pos:line="96" pos:column="40">1<pos:position pos:line="96" pos:column="41"/></literal></expr>]<pos:position pos:line="96" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="96" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="44"/></expr_stmt>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">(<pos:position pos:line="97" pos:column="10"/></operator><name pos:line="97" pos:column="10">arg<pos:position pos:line="97" pos:column="13"/></name> <operator pos:line="97" pos:column="14">=<pos:position pos:line="97" pos:column="15"/></operator> <call><name pos:line="97" pos:column="16">strchr<pos:position pos:line="97" pos:column="22"/></name><argument_list pos:line="97" pos:column="22">(<argument><expr><operator pos:line="97" pos:column="23">*<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="24">user<pos:position pos:line="97" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="97" pos:column="30">':'<pos:position pos:line="97" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="34"/></argument_list></call><operator pos:line="97" pos:column="34">)<pos:position pos:line="97" pos:column="35"/></operator> <operator pos:line="97" pos:column="36">!=<pos:position pos:line="97" pos:column="38"/></operator> <name pos:line="97" pos:column="39">NULL<pos:position pos:line="97" pos:column="43"/></name></expr>)<pos:position pos:line="97" pos:column="44"/></condition><then pos:line="97" pos:column="44"> <block pos:line="97" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">apr_file_printf<pos:position pos:line="98" pos:column="24"/></name><argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">errfile<pos:position pos:line="98" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="34">"%s: username contains illegal "<pos:position pos:line="98" pos:column="66"/></literal>
                        <literal type="string" pos:line="99" pos:column="25">"character '%c'\n"<pos:position pos:line="99" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="45">argv<pos:position pos:line="99" pos:column="49"/></name><index pos:line="99" pos:column="49">[<expr><literal type="number" pos:line="99" pos:column="50">0<pos:position pos:line="99" pos:column="51"/></literal></expr>]<pos:position pos:line="99" pos:column="52"/></index></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="54">*<pos:position pos:line="99" pos:column="55"/></operator><name pos:line="99" pos:column="55">arg<pos:position pos:line="99" pos:column="58"/></name></expr></argument>)<pos:position pos:line="99" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">exit<pos:position pos:line="100" pos:column="13"/></name><argument_list pos:line="100" pos:column="13">(<argument><expr><name pos:line="100" pos:column="14">ERR_BADUSER<pos:position pos:line="100" pos:column="25"/></name></expr></argument>)<pos:position pos:line="100" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><operator pos:line="102" pos:column="9">*<pos:position pos:line="102" pos:column="10"/></operator><name pos:line="102" pos:column="10">mask<pos:position pos:line="102" pos:column="14"/></name> <operator pos:line="102" pos:column="15">&amp;<pos:position pos:line="102" pos:column="20"/></operator> <name pos:line="102" pos:column="17">APHTP_NONINTERACTIVE<pos:position pos:line="102" pos:column="37"/></name></expr>)<pos:position pos:line="102" pos:column="38"/></condition><then pos:line="102" pos:column="38"> <block pos:line="102" pos:column="39">{
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><call><name pos:line="103" pos:column="13">strlen<pos:position pos:line="103" pos:column="19"/></name><argument_list pos:line="103" pos:column="19">(<argument><expr><name><name pos:line="103" pos:column="20">argv<pos:position pos:line="103" pos:column="24"/></name><index pos:line="103" pos:column="24">[<expr><name pos:line="103" pos:column="25">i<pos:position pos:line="103" pos:column="26"/></name> <operator pos:line="103" pos:column="27">+<pos:position pos:line="103" pos:column="28"/></operator> <literal type="number" pos:line="103" pos:column="29">2<pos:position pos:line="103" pos:column="30"/></literal></expr>]<pos:position pos:line="103" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="103" pos:column="32"/></argument_list></call> <operator pos:line="103" pos:column="33">&gt;<pos:position pos:line="103" pos:column="37"/></operator> <operator pos:line="103" pos:column="35">(<pos:position pos:line="103" pos:column="36"/></operator><name pos:line="103" pos:column="36">MAX_STRING_LEN<pos:position pos:line="103" pos:column="50"/></name> <operator pos:line="103" pos:column="51">-<pos:position pos:line="103" pos:column="52"/></operator> <literal type="number" pos:line="103" pos:column="53">1<pos:position pos:line="103" pos:column="54"/></literal><operator pos:line="103" pos:column="54">)<pos:position pos:line="103" pos:column="55"/></operator></expr>)<pos:position pos:line="103" pos:column="56"/></condition><then pos:line="103" pos:column="56"> <block pos:line="103" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">apr_file_printf<pos:position pos:line="104" pos:column="28"/></name><argument_list pos:line="104" pos:column="28">(<argument><expr><name pos:line="104" pos:column="29">errfile<pos:position pos:line="104" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="38">"%s: password too long (&gt; %d)\n"<pos:position pos:line="104" pos:column="73"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="105" pos:column="17">argv<pos:position pos:line="105" pos:column="21"/></name><index pos:line="105" pos:column="21">[<expr><literal type="number" pos:line="105" pos:column="22">0<pos:position pos:line="105" pos:column="23"/></literal></expr>]<pos:position pos:line="105" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="26">MAX_STRING_LEN<pos:position pos:line="105" pos:column="40"/></name></expr></argument>)<pos:position pos:line="105" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">exit<pos:position pos:line="106" pos:column="17"/></name><argument_list pos:line="106" pos:column="17">(<argument><expr><name pos:line="106" pos:column="18">ERR_OVERFLOW<pos:position pos:line="106" pos:column="30"/></name></expr></argument>)<pos:position pos:line="106" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="108" pos:column="9">*<pos:position pos:line="108" pos:column="10"/></operator><name pos:line="108" pos:column="10">password<pos:position pos:line="108" pos:column="18"/></name> <operator pos:line="108" pos:column="19">=<pos:position pos:line="108" pos:column="20"/></operator> <call><name pos:line="108" pos:column="21">apr_pstrdup<pos:position pos:line="108" pos:column="32"/></name><argument_list pos:line="108" pos:column="32">(<argument><expr><name pos:line="108" pos:column="33">pool<pos:position pos:line="108" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="39">argv<pos:position pos:line="108" pos:column="43"/></name><index pos:line="108" pos:column="43">[<expr><name pos:line="108" pos:column="44">i<pos:position pos:line="108" pos:column="45"/></name> <operator pos:line="108" pos:column="46">+<pos:position pos:line="108" pos:column="47"/></operator> <literal type="number" pos:line="108" pos:column="48">2<pos:position pos:line="108" pos:column="49"/></literal></expr>]<pos:position pos:line="108" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="108" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2206_httpd-2.2.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">LRESULT<pos:position pos:line="1" pos:column="15"/></name> <name pos:line="1" pos:column="16">WINAPI<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">RegisterWindows9xService<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">BOOL<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">set_service<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><name pos:line="3" pos:column="12">HINSTANCE<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">hkernel<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <function_decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">DWORD<pos:position pos:line="4" pos:column="17"/></name></type> (<name pos:line="4" pos:column="19">WINAPI<pos:position pos:line="4" pos:column="25"/></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><name pos:line="4" pos:column="27">register_service_process<pos:position pos:line="4" pos:column="51"/></name>)<parameter_list pos:line="4" pos:column="52">(<parameter><decl><type><name pos:line="4" pos:column="53">DWORD<pos:position pos:line="4" pos:column="58"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="60">DWORD<pos:position pos:line="4" pos:column="65"/></name></type></decl></parameter>)<pos:position pos:line="4" pos:column="66"/></parameter_list> <init pos:line="4" pos:column="67">= <expr><name pos:line="4" pos:column="69">NULL<pos:position pos:line="4" pos:column="73"/></name></expr></init>;<pos:position pos:line="4" pos:column="74"/></function_decl>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">BOOL<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">rv<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">set_service<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">is_service<pos:position pos:line="7" pos:column="34"/></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if>

<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">DBG<pos:position pos:line="10" pos:column="11"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">DbgPrintf<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><literal type="string" pos:line="11" pos:column="15">"R %s proc %8.8x as a service\r\n"<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><name pos:line="12" pos:column="15">set_service<pos:position pos:line="12" pos:column="26"/></name></expr> ?<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <expr><literal type="string" pos:line="12" pos:column="29">"installing"<pos:position pos:line="12" pos:column="41"/></literal></expr> <pos:position pos:line="12" pos:column="42"/></then><else pos:line="12" pos:column="42">: <expr><literal type="string" pos:line="12" pos:column="44">"removing"<pos:position pos:line="12" pos:column="54"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><call><name pos:line="13" pos:column="15">GetCurrentProcessId<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">()<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">register_service_process<pos:position pos:line="16" pos:column="34"/></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
    <block pos:line="17" pos:column="5">{
        <comment type="block" pos:line="18" pos:column="9">/* Obtain a handle to the kernel library */</comment>
        <expr_stmt><expr><name pos:line="19" pos:column="9">hkernel<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">LoadLibrary<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"KERNEL32.DLL"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">hkernel<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22">
            <block type="pseudo"><return pos:line="21" pos:column="13">return <expr><literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></return></block></then></if>

        <comment type="block" pos:line="23" pos:column="9">/* Find the RegisterServiceProcess function */</comment>
        <expr_stmt><expr><name pos:line="24" pos:column="9">register_service_process<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">=<pos:position pos:line="24" pos:column="35"/></operator> <operator pos:line="24" pos:column="36">(<pos:position pos:line="24" pos:column="37"/></operator><call><call><name pos:line="24" pos:column="37">DWORD<pos:position pos:line="24" pos:column="42"/></name> <argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">WINAPI<pos:position pos:line="24" pos:column="50"/></name> <operator pos:line="24" pos:column="51">*<pos:position pos:line="24" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call><argument_list pos:line="24" pos:column="53">(<argument><expr><name pos:line="24" pos:column="54">DWORD<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">DWORD<pos:position pos:line="24" pos:column="66"/></name></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call><operator pos:line="24" pos:column="67">)<pos:position pos:line="24" pos:column="68"/></operator>
                         <call><name pos:line="25" pos:column="26">GetProcAddress<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">hkernel<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="50">"RegisterServiceProcess"<pos:position pos:line="25" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="76"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">register_service_process<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">==<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="41">NULL<pos:position pos:line="26" pos:column="45"/></name></expr>)<pos:position pos:line="26" pos:column="46"/></condition><then pos:line="26" pos:column="46"> <block pos:line="26" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">FreeLibrary<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">hkernel<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* Register this process as a service */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">rv<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <call><name pos:line="33" pos:column="10">register_service_process<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><literal type="number" pos:line="33" pos:column="35">0<pos:position pos:line="33" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">set_service<pos:position pos:line="33" pos:column="49"/></name> <operator pos:line="33" pos:column="50">!=<pos:position pos:line="33" pos:column="52"/></operator> <name pos:line="33" pos:column="53">FALSE<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">rv<pos:position pos:line="34" pos:column="11"/></name></expr>)<pos:position pos:line="34" pos:column="12"/></condition><then pos:line="34" pos:column="12">
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">is_service<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="22">set_service<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt></block></then></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">is_service<pos:position pos:line="37" pos:column="20"/></name></expr>)<pos:position pos:line="37" pos:column="21"/></condition><then pos:line="37" pos:column="21">
    <block pos:line="38" pos:column="5">{
        <comment type="block" pos:line="39" pos:column="9">/* Unload the kernel library */</comment>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">FreeLibrary<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">hkernel<pos:position pos:line="40" pos:column="28"/></name></expr></argument>)<pos:position pos:line="40" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">register_service_process<pos:position pos:line="41" pos:column="33"/></name> <operator pos:line="41" pos:column="34">=<pos:position pos:line="41" pos:column="35"/></operator> <name pos:line="41" pos:column="36">NULL<pos:position pos:line="41" pos:column="40"/></name></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">rv<pos:position pos:line="43" pos:column="14"/></name></expr>;<pos:position pos:line="43" pos:column="15"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5747.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_callback_alpn_select<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">SSL<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">ssl<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">unsigned<pos:position pos:line="2" pos:column="44"/></name> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">out<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">unsigned<pos:position pos:line="2" pos:column="65"/></name> <name pos:line="2" pos:column="66">char<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">outlen<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">unsigned<pos:position pos:line="3" pos:column="44"/></name> <name pos:line="3" pos:column="45">char<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">in<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="55">unsigned<pos:position pos:line="3" pos:column="63"/></name> <name pos:line="3" pos:column="64">int<pos:position pos:line="3" pos:column="67"/></name></type> <name pos:line="3" pos:column="68">inlen<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="4" pos:column="30">void<pos:position pos:line="4" pos:column="34"/></name> <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier></type><name pos:line="4" pos:column="36">arg<pos:position pos:line="4" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="40"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">conn_rec<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">c<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><operator pos:line="6" pos:column="19">(<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">conn_rec<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></operator><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator><call><name pos:line="6" pos:column="30">SSL_get_app_data<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name pos:line="6" pos:column="47">ssl<pos:position pos:line="6" pos:column="50"/></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SSLConnRec<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">sslconn<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><call><name pos:line="7" pos:column="27">myConnConfig<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">c<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_array_header_t<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">client_protos<pos:position pos:line="8" pos:column="38"/></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">proposed<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">size_t<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">len<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* If the connection object is not available,
     * then there's nothing for us to do. */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">c<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">==<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19"> <block pos:line="15" pos:column="20">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">SSL_TLSEXT_ERR_OK<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">inlen<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
        <comment type="block" pos:line="20" pos:column="9">/* someone tries to trick us? */</comment>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_cerror<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">APLOG_MARK<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">APLOG_ERR<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">c<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="52">APLOGNO<pos:position pos:line="21" pos:column="59"/></name><argument_list pos:line="21" pos:column="59">(<argument><expr><literal type="number" pos:line="21" pos:column="60">02837<pos:position pos:line="21" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="22" pos:column="23">"ALPN client protocol list empty"<pos:position pos:line="22" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="23" pos:column="42"/></name></expr>;<pos:position pos:line="23" pos:column="43"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">client_protos<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">apr_array_make<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name><name pos:line="26" pos:column="36">c<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">pool<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="45">0<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="48">sizeof<argument_list pos:line="26" pos:column="54">(<argument><expr><name pos:line="26" pos:column="55">char<pos:position pos:line="26" pos:column="59"/></name> <operator pos:line="26" pos:column="60">*<pos:position pos:line="26" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><expr><name pos:line="27" pos:column="10">i<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></init> <condition><expr><name pos:line="27" pos:column="17">i<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&lt;<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="21">inlen<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></condition> <comment type="block" pos:line="27" pos:column="28">/**/</comment><incr/>)<pos:position pos:line="27" pos:column="33"/></control> <block pos:line="27" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">unsigned<pos:position pos:line="28" pos:column="17"/></name> <name pos:line="28" pos:column="18">int<pos:position pos:line="28" pos:column="21"/></name></type> <name pos:line="28" pos:column="22">plen<pos:position pos:line="28" pos:column="26"/></name> <init pos:line="28" pos:column="27">= <expr><name><name pos:line="28" pos:column="29">in<pos:position pos:line="28" pos:column="31"/></name><index pos:line="28" pos:column="31">[<expr><name pos:line="28" pos:column="32">i<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">++<pos:position pos:line="28" pos:column="35"/></operator></expr>]<pos:position pos:line="28" pos:column="36"/></index></name></expr></init></decl>;<pos:position pos:line="28" pos:column="37"/></decl_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">plen<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">+<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">i<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">&gt;<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="24">inlen<pos:position pos:line="29" pos:column="29"/></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block pos:line="29" pos:column="31">{
            <comment type="block" pos:line="30" pos:column="13">/* someone tries to trick us? */</comment>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">ap_log_cerror<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">APLOG_MARK<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">APLOG_ERR<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="50">0<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">c<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="56">APLOGNO<pos:position pos:line="31" pos:column="63"/></name><argument_list pos:line="31" pos:column="63">(<argument><expr><literal type="number" pos:line="31" pos:column="64">02838<pos:position pos:line="31" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call>
                          <literal type="string" pos:line="32" pos:column="27">"ALPN protocol identifier too long"<pos:position pos:line="32" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="64"/></expr_stmt>
            <return pos:line="33" pos:column="13">return <expr><name pos:line="33" pos:column="20">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="33" pos:column="46"/></name></expr>;<pos:position pos:line="33" pos:column="47"/></return>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">APR_ARRAY_PUSH<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">client_protos<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">char<pos:position pos:line="35" pos:column="43"/></name> <operator pos:line="35" pos:column="44">*<pos:position pos:line="35" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call> <operator pos:line="35" pos:column="47">=<pos:position pos:line="35" pos:column="48"/></operator>
            <call><name pos:line="36" pos:column="13">apr_pstrndup<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name><name pos:line="36" pos:column="26">c<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">pool<pos:position pos:line="36" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="35">(<pos:position pos:line="36" pos:column="36"/></operator><specifier pos:line="36" pos:column="36">const<pos:position pos:line="36" pos:column="41"/></specifier> <name pos:line="36" pos:column="42">char<pos:position pos:line="36" pos:column="46"/></name> <operator pos:line="36" pos:column="47">*<pos:position pos:line="36" pos:column="48"/></operator><operator pos:line="36" pos:column="48">)<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="49">in<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">+<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="52">i<pos:position pos:line="36" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="55">plen<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">i<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">+=<pos:position pos:line="37" pos:column="13"/></operator> <name pos:line="37" pos:column="14">plen<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></for>

    <comment type="block" pos:line="40" pos:column="5">/* The order the callbacks are invoked from TLS extensions is, unfortunately
     * not defined and older openssl versions do call ALPN selection before
     * they callback the SNI. We need to make sure that we know which vhost
     * we are dealing with so we respect the correct protocols.
     */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">init_vhost<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">c<pos:position pos:line="45" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="19">ssl<pos:position pos:line="45" pos:column="22"/></name></expr></argument>)<pos:position pos:line="45" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="47" pos:column="5">proposed<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">ap_select_protocol<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">c<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="38">NULL<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="44">sslconn<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">-&gt;<pos:position pos:line="47" pos:column="56"/></operator><name pos:line="47" pos:column="53">server<pos:position pos:line="47" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="61">client_protos<pos:position pos:line="47" pos:column="74"/></name></expr></argument>)<pos:position pos:line="47" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="48" pos:column="5">*<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">out<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><specifier pos:line="48" pos:column="13">const<pos:position pos:line="48" pos:column="18"/></specifier> <name pos:line="48" pos:column="19">unsigned<pos:position pos:line="48" pos:column="27"/></name> <name pos:line="48" pos:column="28">char<pos:position pos:line="48" pos:column="32"/></name> <operator pos:line="48" pos:column="33">*<pos:position pos:line="48" pos:column="34"/></operator><operator pos:line="48" pos:column="34">)<pos:position pos:line="48" pos:column="35"/></operator><operator pos:line="48" pos:column="35">(<pos:position pos:line="48" pos:column="36"/></operator><ternary><condition><expr><name pos:line="48" pos:column="36">proposed<pos:position pos:line="48" pos:column="44"/></name></expr>?<pos:position pos:line="48" pos:column="45"/></condition><then pos:line="48" pos:column="45"> <expr><name pos:line="48" pos:column="46">proposed<pos:position pos:line="48" pos:column="54"/></name></expr> <pos:position pos:line="48" pos:column="55"/></then><else pos:line="48" pos:column="55">: <expr><call><name pos:line="48" pos:column="57">ap_get_protocol<pos:position pos:line="48" pos:column="72"/></name><argument_list pos:line="48" pos:column="72">(<argument><expr><name pos:line="48" pos:column="73">c<pos:position pos:line="48" pos:column="74"/></name></expr></argument>)<pos:position pos:line="48" pos:column="75"/></argument_list></call></expr></else></ternary><operator pos:line="48" pos:column="75">)<pos:position pos:line="48" pos:column="76"/></operator></expr>;<pos:position pos:line="48" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">len<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator> <call><name pos:line="49" pos:column="11">strlen<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><operator pos:line="49" pos:column="18">(<pos:position pos:line="49" pos:column="19"/></operator><specifier pos:line="49" pos:column="19">const<pos:position pos:line="49" pos:column="24"/></specifier> <name pos:line="49" pos:column="25">char<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">*<pos:position pos:line="49" pos:column="30"/></operator><operator pos:line="49" pos:column="30">)<pos:position pos:line="49" pos:column="31"/></operator><operator pos:line="49" pos:column="31">*<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="32">out<pos:position pos:line="49" pos:column="35"/></name></expr></argument>)<pos:position pos:line="49" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">len<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">&gt;<pos:position pos:line="50" pos:column="17"/></operator> <literal type="number" pos:line="50" pos:column="15">255<pos:position pos:line="50" pos:column="18"/></literal></expr>)<pos:position pos:line="50" pos:column="19"/></condition><then pos:line="50" pos:column="19"> <block pos:line="50" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">ap_log_cerror<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><name pos:line="51" pos:column="23">APLOG_MARK<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="35">APLOG_ERR<pos:position pos:line="51" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="46">0<pos:position pos:line="51" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="49">c<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="52">APLOGNO<pos:position pos:line="51" pos:column="59"/></name><argument_list pos:line="51" pos:column="59">(<argument><expr><literal type="number" pos:line="51" pos:column="60">02840<pos:position pos:line="51" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="52" pos:column="23">"ALPN negotiated protocol name too long"<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">SSL_TLSEXT_ERR_ALERT_FATAL<pos:position pos:line="53" pos:column="42"/></name></expr>;<pos:position pos:line="53" pos:column="43"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="55" pos:column="5">*<pos:position pos:line="55" pos:column="6"/></operator><name pos:line="55" pos:column="6">outlen<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <operator pos:line="55" pos:column="15">(<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="16">unsigned<pos:position pos:line="55" pos:column="24"/></name> <name pos:line="55" pos:column="25">char<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">)<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">len<pos:position pos:line="55" pos:column="33"/></name></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>

    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">SSL_TLSEXT_ERR_OK<pos:position pos:line="57" pos:column="29"/></name></expr>;<pos:position pos:line="57" pos:column="30"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

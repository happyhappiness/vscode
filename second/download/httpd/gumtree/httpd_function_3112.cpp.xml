<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3112.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_shmem_size<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">cmd_parms<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">cmd<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">void<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">config<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">size_str<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">endptr<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">long<pos:position pos:line="5" pos:column="9"/></name></type>  <name pos:line="5" pos:column="11">size<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">min<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">size<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">strtol<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">size_str<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="29">&amp;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="30">endptr<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="38">10<pos:position pos:line="7" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><call><name pos:line="8" pos:column="12">apr_isspace<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">endptr<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="33"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="34">endptr<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">++<pos:position pos:line="8" pos:column="42"/></operator></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt></block></while>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">endptr<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <literal type="char" pos:line="9" pos:column="20">'\0'<pos:position pos:line="9" pos:column="24"/></literal> <operator pos:line="9" pos:column="25">||<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">endptr<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">==<pos:position pos:line="9" pos:column="38"/></operator> <literal type="char" pos:line="9" pos:column="39">'b'<pos:position pos:line="9" pos:column="42"/></literal> <operator pos:line="9" pos:column="43">||<pos:position pos:line="9" pos:column="45"/></operator> <operator pos:line="9" pos:column="46">*<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="47">endptr<pos:position pos:line="9" pos:column="53"/></name> <operator pos:line="9" pos:column="54">==<pos:position pos:line="9" pos:column="56"/></operator> <literal type="char" pos:line="9" pos:column="57">'B'<pos:position pos:line="9" pos:column="60"/></literal></expr>)<pos:position pos:line="9" pos:column="61"/></condition><then pos:line="9" pos:column="61"> <block pos:line="9" pos:column="62">{
        <empty_stmt pos:line="10" pos:column="9">;<pos:position pos:line="10" pos:column="10"/></empty_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><operator pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">endptr<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator> <literal type="char" pos:line="12" pos:column="25">'k'<pos:position pos:line="12" pos:column="28"/></literal> <operator pos:line="12" pos:column="29">||<pos:position pos:line="12" pos:column="31"/></operator> <operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">endptr<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">==<pos:position pos:line="12" pos:column="42"/></operator> <literal type="char" pos:line="12" pos:column="43">'K'<pos:position pos:line="12" pos:column="46"/></literal></expr>)<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47"> <block pos:line="12" pos:column="48">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">size<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">*=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">1024<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><operator pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">endptr<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">==<pos:position pos:line="15" pos:column="24"/></operator> <literal type="char" pos:line="15" pos:column="25">'m'<pos:position pos:line="15" pos:column="28"/></literal> <operator pos:line="15" pos:column="29">||<pos:position pos:line="15" pos:column="31"/></operator> <operator pos:line="15" pos:column="32">*<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">endptr<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">==<pos:position pos:line="15" pos:column="42"/></operator> <literal type="char" pos:line="15" pos:column="43">'M'<pos:position pos:line="15" pos:column="46"/></literal></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47"> <block pos:line="15" pos:column="48">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">size<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">*=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">1048576<pos:position pos:line="16" pos:column="24"/></literal></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif>
    <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{
        <return pos:line="19" pos:column="9">return <expr><call><name pos:line="19" pos:column="16">apr_pstrcat<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name><name pos:line="19" pos:column="28">cmd<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">pool<pos:position pos:line="19" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"Invalid size in AuthDigestShmemSize: "<pos:position pos:line="19" pos:column="78"/></literal></expr></argument>,
                          <argument><expr><name pos:line="20" pos:column="27">size_str<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">NULL<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">min<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <sizeof pos:line="23" pos:column="11">sizeof<argument_list pos:line="23" pos:column="17">(<argument><expr><operator pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">client_list<pos:position pos:line="23" pos:column="30"/></name></expr></argument>)<pos:position pos:line="23" pos:column="31"/></argument_list></sizeof> <operator pos:line="23" pos:column="32">+<pos:position pos:line="23" pos:column="33"/></operator> <sizeof pos:line="23" pos:column="34">sizeof<argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">client_entry<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">*<pos:position pos:line="23" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></sizeof> <operator pos:line="23" pos:column="56">+<pos:position pos:line="23" pos:column="57"/></operator> <sizeof pos:line="23" pos:column="58">sizeof<argument_list pos:line="23" pos:column="64">(<argument><expr><name pos:line="23" pos:column="65">client_entry<pos:position pos:line="23" pos:column="77"/></name></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></sizeof></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">size<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">&lt;<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="16">min<pos:position pos:line="24" pos:column="19"/></name></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20"> <block pos:line="24" pos:column="21">{
        <return pos:line="25" pos:column="9">return <expr><call><name pos:line="25" pos:column="16">apr_psprintf<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name><name pos:line="25" pos:column="29">cmd<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">pool<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="40">"size in AuthDigestShmemSize too small: "<pos:position pos:line="25" pos:column="81"/></literal>
                           <literal type="string" pos:line="26" pos:column="28">"%ld &lt; %ld"<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">size<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="47">min<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">shmem_size<pos:position pos:line="29" pos:column="15"/></name>  <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">size<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">num_buckets<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <operator pos:line="30" pos:column="19">(<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">size<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">-<pos:position pos:line="30" pos:column="26"/></operator> <sizeof pos:line="30" pos:column="27">sizeof<argument_list pos:line="30" pos:column="33">(<argument><expr><operator pos:line="30" pos:column="34">*<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">client_list<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></sizeof><operator pos:line="30" pos:column="47">)<pos:position pos:line="30" pos:column="48"/></operator> <operator pos:line="30" pos:column="49">/<pos:position pos:line="30" pos:column="50"/></operator>
                  <operator pos:line="31" pos:column="19">(<pos:position pos:line="31" pos:column="20"/></operator><sizeof pos:line="31" pos:column="20">sizeof<argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">client_entry<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">*<pos:position pos:line="31" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></sizeof> <operator pos:line="31" pos:column="42">+<pos:position pos:line="31" pos:column="43"/></operator> <name pos:line="31" pos:column="44">HASH_DEPTH<pos:position pos:line="31" pos:column="54"/></name> <operator pos:line="31" pos:column="55">*<pos:position pos:line="31" pos:column="56"/></operator> <sizeof pos:line="31" pos:column="57">sizeof<argument_list pos:line="31" pos:column="63">(<argument><expr><name pos:line="31" pos:column="64">client_entry<pos:position pos:line="31" pos:column="76"/></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></sizeof><operator pos:line="31" pos:column="77">)<pos:position pos:line="31" pos:column="78"/></operator></expr>;<pos:position pos:line="31" pos:column="79"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">num_buckets<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">==<pos:position pos:line="32" pos:column="23"/></operator> <literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <block pos:line="32" pos:column="27">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">num_buckets<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="23">1<pos:position pos:line="33" pos:column="24"/></literal></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">ap_log_error<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">APLOG_MARK<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">APLOG_DEBUG<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="43">0<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="46">cmd<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">-&gt;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="51">server<pos:position pos:line="35" pos:column="57"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="36" pos:column="18">"Digest: Set shmem-size: %"<pos:position pos:line="36" pos:column="45"/></literal> <name pos:line="36" pos:column="46">APR_SIZE_T_FMT<pos:position pos:line="36" pos:column="60"/></name> <literal type="string" pos:line="36" pos:column="61">", num-buckets: %ld"<pos:position pos:line="36" pos:column="81"/></literal></expr></argument>, 
                 <argument><expr><name pos:line="37" pos:column="18">shmem_size<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="30">num_buckets<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>

    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">NULL<pos:position pos:line="39" pos:column="16"/></name></expr>;<pos:position pos:line="39" pos:column="17"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

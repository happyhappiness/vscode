<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5894.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_task_do<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">h2_task<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">task<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">h2_worker<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">worker<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">APR_SUCCESS<pos:position pos:line="3" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">h2_config<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">cfg<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">h2_config_get<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name><name pos:line="4" pos:column="36">task<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">mplx<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">c<pos:position pos:line="4" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">h2_task_env<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">env<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt> 
    
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">task<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memset<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><operator pos:line="9" pos:column="12">&amp;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="13">env<pos:position pos:line="9" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="21">sizeof<argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">env<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
    
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">env<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">.<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">id<pos:position pos:line="11" pos:column="11"/></name></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name><name pos:line="11" pos:column="14">task<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">id<pos:position pos:line="11" pos:column="22"/></name></name></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">env<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">.<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">stream_id<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name><name pos:line="12" pos:column="21">task<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">stream_id<pos:position pos:line="12" pos:column="36"/></name></name></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">env<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">.<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">mplx<pos:position pos:line="13" pos:column="13"/></name></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">task<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">mplx<pos:position pos:line="13" pos:column="26"/></name></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">task<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">mplx<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">NULL<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
    
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">env<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">.<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">input_eos<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name><name pos:line="16" pos:column="21">task<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">input_eos<pos:position pos:line="16" pos:column="36"/></name></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">env<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">.<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">serialize_headers<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <call><name pos:line="17" pos:column="29">h2_config_geti<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><name pos:line="17" pos:column="44">cfg<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">H2_CONF_SER_HEADERS<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt>
    
    <comment type="block" pos:line="19" pos:column="5">/* Create a subpool from the worker one to be used for all things
     * with life-time of this task_env execution.
     */</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">apr_pool_create<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><operator pos:line="22" pos:column="21">&amp;<pos:position pos:line="22" pos:column="26"/></operator><name><name pos:line="22" pos:column="22">env<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">.<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">pool<pos:position pos:line="22" pos:column="30"/></name></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="32">h2_worker_get_pool<pos:position pos:line="22" pos:column="50"/></name><argument_list pos:line="22" pos:column="50">(<argument><expr><name pos:line="22" pos:column="51">worker<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Link the env to the worker which provides useful things such
     * as mutex, a socket etc. */</comment>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">env<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">.<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">io<pos:position pos:line="26" pos:column="11"/></name></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">h2_worker_get_cond<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">worker<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
    
    <comment type="block" pos:line="28" pos:column="5">/* Clone fields, so that lifetimes become (more) independent. */</comment>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">env<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">.<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">method<pos:position pos:line="29" pos:column="15"/></name></name>    <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <call><name pos:line="29" pos:column="21">apr_pstrdup<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name><name pos:line="29" pos:column="33">env<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">.<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">pool<pos:position pos:line="29" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="43">task<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">method<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">env<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">.<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">scheme<pos:position pos:line="30" pos:column="15"/></name></name>    <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">apr_pstrdup<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">env<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">.<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="37">pool<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="43">task<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">-&gt;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="49">scheme<pos:position pos:line="30" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">env<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">.<pos:position pos:line="31" pos:column="9"/></operator><name pos:line="31" pos:column="9">authority<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <call><name pos:line="31" pos:column="21">apr_pstrdup<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">env<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">.<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="37">pool<pos:position pos:line="31" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="43">task<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">authority<pos:position pos:line="31" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">env<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">.<pos:position pos:line="32" pos:column="9"/></operator><name pos:line="32" pos:column="9">path<pos:position pos:line="32" pos:column="13"/></name></name>      <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <call><name pos:line="32" pos:column="21">apr_pstrdup<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name><name pos:line="32" pos:column="33">env<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">.<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="37">pool<pos:position pos:line="32" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="43">task<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">-&gt;<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="49">path<pos:position pos:line="32" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">env<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">.<pos:position pos:line="33" pos:column="9"/></operator><name pos:line="33" pos:column="9">headers<pos:position pos:line="33" pos:column="16"/></name></name>   <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <call><name pos:line="33" pos:column="21">apr_table_clone<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name><name pos:line="33" pos:column="37">env<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">.<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="41">pool<pos:position pos:line="33" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="47">task<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">headers<pos:position pos:line="33" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
    
    <comment type="block" pos:line="35" pos:column="5">/* Setup the pseudo connection to use our own pool and bucket_alloc */</comment>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">env<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">.<pos:position pos:line="36" pos:column="9"/></operator><name pos:line="36" pos:column="9">c<pos:position pos:line="36" pos:column="10"/></name></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <operator pos:line="36" pos:column="13">*<pos:position pos:line="36" pos:column="14"/></operator><name><name pos:line="36" pos:column="14">task<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">c<pos:position pos:line="36" pos:column="21"/></name></name></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">task<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">c<pos:position pos:line="37" pos:column="12"/></name></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="15">NULL<pos:position pos:line="37" pos:column="19"/></name></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">status<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">h2_conn_setup<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><operator pos:line="38" pos:column="28">&amp;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="29">env<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">worker<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
    
    <comment type="block" pos:line="40" pos:column="5">/* save in connection that this one is a pseudo connection, prevents
     * other hooks from messing with it. */</comment>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">h2_ctx_create_for<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><operator pos:line="42" pos:column="23">&amp;<pos:position pos:line="42" pos:column="28"/></operator><name><name pos:line="42" pos:column="24">env<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">.<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">c<pos:position pos:line="42" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="31">&amp;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="32">env<pos:position pos:line="42" pos:column="35"/></name></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">status<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">==<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">APR_SUCCESS<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31"> <block pos:line="44" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">env<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">.<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">input<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <call><name pos:line="45" pos:column="21">h2_task_input_create<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><operator pos:line="45" pos:column="42">&amp;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="43">env<pos:position pos:line="45" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="48">env<pos:position pos:line="45" pos:column="51"/></name><operator pos:line="45" pos:column="51">.<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="52">pool<pos:position pos:line="45" pos:column="56"/></name></name></expr></argument>, 
                                         <argument><expr><name><name pos:line="46" pos:column="42">env<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">.<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="46">c<pos:position pos:line="46" pos:column="47"/></name><operator pos:line="46" pos:column="47">.<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="48">bucket_alloc<pos:position pos:line="46" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">env<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">.<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="13">output<pos:position pos:line="47" pos:column="19"/></name></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <call><name pos:line="47" pos:column="22">h2_task_output_create<pos:position pos:line="47" pos:column="43"/></name><argument_list pos:line="47" pos:column="43">(<argument><expr><operator pos:line="47" pos:column="44">&amp;<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="45">env<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="50">env<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">.<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="54">pool<pos:position pos:line="47" pos:column="58"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="48" pos:column="44">env<pos:position pos:line="48" pos:column="47"/></name><operator pos:line="48" pos:column="47">.<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="48">c<pos:position pos:line="48" pos:column="49"/></name><operator pos:line="48" pos:column="49">.<pos:position pos:line="48" pos:column="50"/></operator><name pos:line="48" pos:column="50">bucket_alloc<pos:position pos:line="48" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">status<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <call><name pos:line="49" pos:column="18">h2_conn_process<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><operator pos:line="49" pos:column="34">&amp;<pos:position pos:line="49" pos:column="39"/></operator><name><name pos:line="49" pos:column="35">env<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">.<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="39">c<pos:position pos:line="49" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="42">h2_worker_get_socket<pos:position pos:line="49" pos:column="62"/></name><argument_list pos:line="49" pos:column="62">(<argument><expr><name pos:line="49" pos:column="63">worker<pos:position pos:line="49" pos:column="69"/></name></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ap_log_cerror<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name pos:line="50" pos:column="23">APLOG_MARK<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="35">APLOG_TRACE1<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="49">status<pos:position pos:line="50" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="57">&amp;<pos:position pos:line="50" pos:column="62"/></operator><name><name pos:line="50" pos:column="58">env<pos:position pos:line="50" pos:column="61"/></name><operator pos:line="50" pos:column="61">.<pos:position pos:line="50" pos:column="62"/></operator><name pos:line="50" pos:column="62">c<pos:position pos:line="50" pos:column="63"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="51" pos:column="23">"h2_task(%s): processing done"<pos:position pos:line="51" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="55">env<pos:position pos:line="51" pos:column="58"/></name><operator pos:line="51" pos:column="58">.<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="59">id<pos:position pos:line="51" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
    <else pos:line="53" pos:column="5">else <block pos:line="53" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_log_cerror<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">APLOG_MARK<pos:position pos:line="54" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="35">APLOG_WARNING<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">status<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="58">&amp;<pos:position pos:line="54" pos:column="63"/></operator><name><name pos:line="54" pos:column="59">env<pos:position pos:line="54" pos:column="62"/></name><operator pos:line="54" pos:column="62">.<pos:position pos:line="54" pos:column="63"/></operator><name pos:line="54" pos:column="63">c<pos:position pos:line="54" pos:column="64"/></name></name></expr></argument>,
                      <argument><expr><call><name pos:line="55" pos:column="23">APLOGNO<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><literal type="number" pos:line="55" pos:column="31">02957<pos:position pos:line="55" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="37"/></argument_list></call> <literal type="string" pos:line="55" pos:column="38">"h2_task(%s): error setting up h2_task_env"<pos:position pos:line="55" pos:column="81"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="56" pos:column="23">env<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">.<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="27">id<pos:position pos:line="56" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></else></if>
    
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">env<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">.<pos:position pos:line="59" pos:column="13"/></operator><name pos:line="59" pos:column="13">input<pos:position pos:line="59" pos:column="18"/></name></name></expr>)<pos:position pos:line="59" pos:column="19"/></condition><then pos:line="59" pos:column="19"> <block pos:line="59" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">h2_task_input_destroy<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name><name pos:line="60" pos:column="31">env<pos:position pos:line="60" pos:column="34"/></name><operator pos:line="60" pos:column="34">.<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="35">input<pos:position pos:line="60" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">env<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">.<pos:position pos:line="61" pos:column="13"/></operator><name pos:line="61" pos:column="13">input<pos:position pos:line="61" pos:column="18"/></name></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <name pos:line="61" pos:column="21">NULL<pos:position pos:line="61" pos:column="25"/></name></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name><name pos:line="64" pos:column="9">env<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">.<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="13">output<pos:position pos:line="64" pos:column="19"/></name></name></expr>)<pos:position pos:line="64" pos:column="20"/></condition><then pos:line="64" pos:column="20"> <block pos:line="64" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">h2_task_output_close<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name><name pos:line="65" pos:column="30">env<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">.<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="34">output<pos:position pos:line="65" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">h2_task_output_destroy<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><name><name pos:line="66" pos:column="32">env<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">.<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="36">output<pos:position pos:line="66" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">env<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">.<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="13">output<pos:position pos:line="67" pos:column="19"/></name></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <name pos:line="67" pos:column="22">NULL<pos:position pos:line="67" pos:column="26"/></name></expr>;<pos:position pos:line="67" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="70" pos:column="5">h2_task_set_finished<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">task<pos:position pos:line="70" pos:column="30"/></name></expr></argument>)<pos:position pos:line="70" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name><name pos:line="71" pos:column="9">env<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">.<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="13">io<pos:position pos:line="71" pos:column="15"/></name></name></expr>)<pos:position pos:line="71" pos:column="16"/></condition><then pos:line="71" pos:column="16"> <block pos:line="71" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">apr_thread_cond_signal<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name><name pos:line="72" pos:column="32">env<pos:position pos:line="72" pos:column="35"/></name><operator pos:line="72" pos:column="35">.<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="36">io<pos:position pos:line="72" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
    
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name><name pos:line="75" pos:column="9">env<pos:position pos:line="75" pos:column="12"/></name><operator pos:line="75" pos:column="12">.<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="13">pool<pos:position pos:line="75" pos:column="17"/></name></name></expr>)<pos:position pos:line="75" pos:column="18"/></condition><then pos:line="75" pos:column="18"> <block pos:line="75" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">apr_pool_destroy<pos:position pos:line="76" pos:column="25"/></name><argument_list pos:line="76" pos:column="25">(<argument><expr><name><name pos:line="76" pos:column="26">env<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">.<pos:position pos:line="76" pos:column="30"/></operator><name pos:line="76" pos:column="30">pool<pos:position pos:line="76" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">env<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">.<pos:position pos:line="77" pos:column="13"/></operator><name pos:line="77" pos:column="13">pool<pos:position pos:line="77" pos:column="17"/></name></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <name pos:line="77" pos:column="20">NULL<pos:position pos:line="77" pos:column="24"/></name></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>
    
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name><name pos:line="80" pos:column="9">env<pos:position pos:line="80" pos:column="12"/></name><operator pos:line="80" pos:column="12">.<pos:position pos:line="80" pos:column="13"/></operator><name pos:line="80" pos:column="13">c<pos:position pos:line="80" pos:column="14"/></name><operator pos:line="80" pos:column="14">.<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">id<pos:position pos:line="80" pos:column="17"/></name></name></expr>)<pos:position pos:line="80" pos:column="18"/></condition><then pos:line="80" pos:column="18"> <block pos:line="80" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">h2_conn_post<pos:position pos:line="81" pos:column="21"/></name><argument_list pos:line="81" pos:column="21">(<argument><expr><operator pos:line="81" pos:column="22">&amp;<pos:position pos:line="81" pos:column="27"/></operator><name><name pos:line="81" pos:column="23">env<pos:position pos:line="81" pos:column="26"/></name><operator pos:line="81" pos:column="26">.<pos:position pos:line="81" pos:column="27"/></operator><name pos:line="81" pos:column="27">c<pos:position pos:line="81" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="30">worker<pos:position pos:line="81" pos:column="36"/></name></expr></argument>)<pos:position pos:line="81" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">h2_mplx_task_done<pos:position pos:line="84" pos:column="22"/></name><argument_list pos:line="84" pos:column="22">(<argument><expr><name><name pos:line="84" pos:column="23">env<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">.<pos:position pos:line="84" pos:column="27"/></operator><name pos:line="84" pos:column="27">mplx<pos:position pos:line="84" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="33">env<pos:position pos:line="84" pos:column="36"/></name><operator pos:line="84" pos:column="36">.<pos:position pos:line="84" pos:column="37"/></operator><name pos:line="84" pos:column="37">stream_id<pos:position pos:line="84" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="48"/></expr_stmt>
    
    <return pos:line="86" pos:column="5">return <expr><name pos:line="86" pos:column="12">status<pos:position pos:line="86" pos:column="18"/></name></expr>;<pos:position pos:line="86" pos:column="19"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

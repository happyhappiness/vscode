<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3338_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_options<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">cmd_parms<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">cmd<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">void<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">d_<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">l<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">core_dir_config<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">d<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name pos:line="3" pos:column="26">d_<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">allow_options_t<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">opt<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">first<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">1<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">merge<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">all_none<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">action<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>

    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><name><name pos:line="10" pos:column="12">l<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>]<pos:position pos:line="10" pos:column="16"/></index></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition> <block pos:line="10" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">w<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><call><name pos:line="11" pos:column="19">ap_getword_conf<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name><name pos:line="11" pos:column="35">cmd<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">temp_pool<pos:position pos:line="11" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="51">&amp;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="52">l<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">action<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="char" pos:line="12" pos:column="18">'\0'<pos:position pos:line="12" pos:column="22"/></literal></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">w<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <literal type="char" pos:line="14" pos:column="19">'+'<pos:position pos:line="14" pos:column="22"/></literal> <operator pos:line="14" pos:column="23">||<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="26">*<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">w<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">==<pos:position pos:line="14" pos:column="31"/></operator> <literal type="char" pos:line="14" pos:column="32">'-'<pos:position pos:line="14" pos:column="35"/></literal></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block pos:line="14" pos:column="37">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">action<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></operator><operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">w<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">++<pos:position pos:line="15" pos:column="27"/></operator><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><operator pos:line="16" pos:column="17">!<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">merge<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&amp;&amp;<pos:position pos:line="16" pos:column="34"/></operator> <operator pos:line="16" pos:column="27">!<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">first<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">&amp;&amp;<pos:position pos:line="16" pos:column="44"/></operator> <operator pos:line="16" pos:column="37">!<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">all_none<pos:position pos:line="16" pos:column="46"/></name></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47"> <block pos:line="16" pos:column="48">{
                <return pos:line="17" pos:column="17">return <expr><literal type="string" pos:line="17" pos:column="24">"Either all Options must start with + or -, or no Option may."<pos:position pos:line="17" pos:column="86"/></literal></expr>;<pos:position pos:line="17" pos:column="87"/></return>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="19" pos:column="13">merge<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <literal type="number" pos:line="19" pos:column="21">1<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then>
        <elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><name pos:line="21" pos:column="18">first<pos:position pos:line="21" pos:column="23"/></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24"> <block pos:line="21" pos:column="25">{
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">d<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">opts<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">OPT_NONE<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><name pos:line="24" pos:column="18">merge<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24"> <block pos:line="24" pos:column="25">{
            <return pos:line="25" pos:column="13">return <expr><literal type="string" pos:line="25" pos:column="20">"Either all Options must start with + or -, or no Option may."<pos:position pos:line="25" pos:column="82"/></literal></expr>;<pos:position pos:line="25" pos:column="83"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">strcasecmp<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">w<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="28">"Indexes"<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <block pos:line="28" pos:column="40">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">opt<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">OPT_INDEXES<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><operator pos:line="31" pos:column="18">!<pos:position pos:line="31" pos:column="19"/></operator><call><name pos:line="31" pos:column="19">strcasecmp<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">w<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">"Includes"<pos:position pos:line="31" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="45"/></condition><then pos:line="31" pos:column="45"> <block pos:line="31" pos:column="46">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">opt<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <operator pos:line="32" pos:column="19">(<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">OPT_INCLUDES<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">|<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">OPT_INC_WITH_EXEC<pos:position pos:line="32" pos:column="52"/></name><operator pos:line="32" pos:column="52">)<pos:position pos:line="32" pos:column="53"/></operator></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><operator pos:line="34" pos:column="18">!<pos:position pos:line="34" pos:column="19"/></operator><call><name pos:line="34" pos:column="19">strcasecmp<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">w<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"IncludesNOEXEC"<pos:position pos:line="34" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="51"/></condition><then pos:line="34" pos:column="51"> <block pos:line="34" pos:column="52">{
            <expr_stmt><expr><name pos:line="35" pos:column="13">opt<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">OPT_INCLUDES<pos:position pos:line="35" pos:column="31"/></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><operator pos:line="37" pos:column="18">!<pos:position pos:line="37" pos:column="19"/></operator><call><name pos:line="37" pos:column="19">strcasecmp<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">w<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="33">"FollowSymLinks"<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="51"/></condition><then pos:line="37" pos:column="51"> <block pos:line="37" pos:column="52">{
            <expr_stmt><expr><name pos:line="38" pos:column="13">opt<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">OPT_SYM_LINKS<pos:position pos:line="38" pos:column="32"/></name></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="40" pos:column="9">else <if pos:line="40" pos:column="14">if <condition pos:line="40" pos:column="17">(<expr><operator pos:line="40" pos:column="18">!<pos:position pos:line="40" pos:column="19"/></operator><call><name pos:line="40" pos:column="19">strcasecmp<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">w<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="33">"SymLinksIfOwnerMatch"<pos:position pos:line="40" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="57"/></condition><then pos:line="40" pos:column="57"> <block pos:line="40" pos:column="58">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">opt<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">OPT_SYM_OWNER<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="43" pos:column="9">else <if pos:line="43" pos:column="14">if <condition pos:line="43" pos:column="17">(<expr><operator pos:line="43" pos:column="18">!<pos:position pos:line="43" pos:column="19"/></operator><call><name pos:line="43" pos:column="19">strcasecmp<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">w<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="33">"ExecCGI"<pos:position pos:line="43" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44"> <block pos:line="43" pos:column="45">{
            <expr_stmt><expr><name pos:line="44" pos:column="13">opt<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">OPT_EXECCGI<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="46" pos:column="9">else <if pos:line="46" pos:column="14">if <condition pos:line="46" pos:column="17">(<expr><operator pos:line="46" pos:column="18">!<pos:position pos:line="46" pos:column="19"/></operator><call><name pos:line="46" pos:column="19">strcasecmp<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">w<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="33">"MultiViews"<pos:position pos:line="46" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47"> <block pos:line="46" pos:column="48">{
            <expr_stmt><expr><name pos:line="47" pos:column="13">opt<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <name pos:line="47" pos:column="19">OPT_MULTI<pos:position pos:line="47" pos:column="28"/></name></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="49" pos:column="9">else <if pos:line="49" pos:column="14">if <condition pos:line="49" pos:column="17">(<expr><operator pos:line="49" pos:column="18">!<pos:position pos:line="49" pos:column="19"/></operator><call><name pos:line="49" pos:column="19">strcasecmp<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">w<pos:position pos:line="49" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="33">"RunScripts"<pos:position pos:line="49" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="47"/></condition><then pos:line="49" pos:column="47"> <block pos:line="49" pos:column="48">{ <comment type="block" pos:line="49" pos:column="50">/* AI backcompat. Yuck */</comment>
            <expr_stmt><expr><name pos:line="50" pos:column="13">opt<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">OPT_MULTI<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">|<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="29">OPT_EXECCGI<pos:position pos:line="50" pos:column="40"/></name></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><operator pos:line="52" pos:column="18">!<pos:position pos:line="52" pos:column="19"/></operator><call><name pos:line="52" pos:column="19">strcasecmp<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">w<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="33">"None"<pos:position pos:line="52" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="41"/></condition><then pos:line="52" pos:column="41"> <block pos:line="52" pos:column="42">{
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><operator pos:line="53" pos:column="17">!<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">first<pos:position pos:line="53" pos:column="23"/></name></expr>)<pos:position pos:line="53" pos:column="24"/></condition><then pos:line="53" pos:column="24"> <block pos:line="53" pos:column="25">{
                <return pos:line="54" pos:column="17">return <expr><literal type="string" pos:line="54" pos:column="24">"'Options None' must be the first Option given."<pos:position pos:line="54" pos:column="72"/></literal></expr>;<pos:position pos:line="54" pos:column="73"/></return>
            }<pos:position pos:line="55" pos:column="14"/></block></then>
            <elseif pos:line="56" pos:column="13">else <if pos:line="56" pos:column="18">if <condition pos:line="56" pos:column="21">(<expr><name pos:line="56" pos:column="22">merge<pos:position pos:line="56" pos:column="27"/></name></expr>)<pos:position pos:line="56" pos:column="28"/></condition><then pos:line="56" pos:column="28"> <block pos:line="56" pos:column="29">{ <comment type="block" pos:line="56" pos:column="31">/* Only works since None may not follow any other option. */</comment>
                <return pos:line="57" pos:column="17">return <expr><literal type="string" pos:line="57" pos:column="24">"You may not use 'Options +None' or 'Options -None'."<pos:position pos:line="57" pos:column="77"/></literal></expr>;<pos:position pos:line="57" pos:column="78"/></return>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name pos:line="59" pos:column="13">opt<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">OPT_NONE<pos:position pos:line="59" pos:column="27"/></name></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="60" pos:column="13">all_none<pos:position pos:line="60" pos:column="21"/></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <literal type="number" pos:line="60" pos:column="24">1<pos:position pos:line="60" pos:column="25"/></literal></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="62" pos:column="9">else <if pos:line="62" pos:column="14">if <condition pos:line="62" pos:column="17">(<expr><operator pos:line="62" pos:column="18">!<pos:position pos:line="62" pos:column="19"/></operator><call><name pos:line="62" pos:column="19">strcasecmp<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">w<pos:position pos:line="62" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="33">"All"<pos:position pos:line="62" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40"> <block pos:line="62" pos:column="41">{
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><operator pos:line="63" pos:column="17">!<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">first<pos:position pos:line="63" pos:column="23"/></name></expr>)<pos:position pos:line="63" pos:column="24"/></condition><then pos:line="63" pos:column="24"> <block pos:line="63" pos:column="25">{
                <return pos:line="64" pos:column="17">return <expr><literal type="string" pos:line="64" pos:column="24">"'Options All' must be the first option given."<pos:position pos:line="64" pos:column="71"/></literal></expr>;<pos:position pos:line="64" pos:column="72"/></return>
            }<pos:position pos:line="65" pos:column="14"/></block></then>
            <elseif pos:line="66" pos:column="13">else <if pos:line="66" pos:column="18">if <condition pos:line="66" pos:column="21">(<expr><name pos:line="66" pos:column="22">merge<pos:position pos:line="66" pos:column="27"/></name></expr>)<pos:position pos:line="66" pos:column="28"/></condition><then pos:line="66" pos:column="28"> <block pos:line="66" pos:column="29">{ <comment type="block" pos:line="66" pos:column="31">/* Only works since All may not follow any other option. */</comment>
                <return pos:line="67" pos:column="17">return <expr><literal type="string" pos:line="67" pos:column="24">"You may not use 'Options +All' or 'Options -All'."<pos:position pos:line="67" pos:column="75"/></literal></expr>;<pos:position pos:line="67" pos:column="76"/></return>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name pos:line="69" pos:column="13">opt<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <name pos:line="69" pos:column="19">OPT_ALL<pos:position pos:line="69" pos:column="26"/></name></expr>;<pos:position pos:line="69" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="70" pos:column="13">all_none<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <literal type="number" pos:line="70" pos:column="24">1<pos:position pos:line="70" pos:column="25"/></literal></expr>;<pos:position pos:line="70" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if></elseif>
        <else pos:line="72" pos:column="9">else <block pos:line="72" pos:column="14">{
            <return pos:line="73" pos:column="13">return <expr><call><name pos:line="73" pos:column="20">apr_pstrcat<pos:position pos:line="73" pos:column="31"/></name><argument_list pos:line="73" pos:column="31">(<argument><expr><name><name pos:line="73" pos:column="32">cmd<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">pool<pos:position pos:line="73" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="43">"Illegal option "<pos:position pos:line="73" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="62">w<pos:position pos:line="73" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="65">NULL<pos:position pos:line="73" pos:column="69"/></name></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="71"/></return>
        }<pos:position pos:line="74" pos:column="10"/></block></else></if>

        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">( <expr><operator pos:line="76" pos:column="14">(<pos:position pos:line="76" pos:column="15"/></operator><name><name pos:line="76" pos:column="15">cmd<pos:position pos:line="76" pos:column="18"/></name><operator pos:line="76" pos:column="18">-&gt;<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="20">override_opts<pos:position pos:line="76" pos:column="33"/></name></name> <operator pos:line="76" pos:column="34">&amp;<pos:position pos:line="76" pos:column="39"/></operator> <name pos:line="76" pos:column="36">opt<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">)<pos:position pos:line="76" pos:column="40"/></operator> <operator pos:line="76" pos:column="41">!=<pos:position pos:line="76" pos:column="43"/></operator> <name pos:line="76" pos:column="44">opt<pos:position pos:line="76" pos:column="47"/></name></expr> )<pos:position pos:line="76" pos:column="49"/></condition><then pos:line="76" pos:column="49"> <block pos:line="76" pos:column="50">{
            <return pos:line="77" pos:column="13">return <expr><call><name pos:line="77" pos:column="20">apr_pstrcat<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><name><name pos:line="77" pos:column="32">cmd<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">pool<pos:position pos:line="77" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="43">"Option "<pos:position pos:line="77" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="54">w<pos:position pos:line="77" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="57">" not allowed here"<pos:position pos:line="77" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="78">NULL<pos:position pos:line="77" pos:column="82"/></name></expr></argument>)<pos:position pos:line="77" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="84"/></return>
        }<pos:position pos:line="78" pos:column="10"/></block></then>
        <elseif pos:line="79" pos:column="9">else <if pos:line="79" pos:column="14">if <condition pos:line="79" pos:column="17">(<expr><name pos:line="79" pos:column="18">action<pos:position pos:line="79" pos:column="24"/></name> <operator pos:line="79" pos:column="25">==<pos:position pos:line="79" pos:column="27"/></operator> <literal type="char" pos:line="79" pos:column="28">'-'<pos:position pos:line="79" pos:column="31"/></literal></expr>)<pos:position pos:line="79" pos:column="32"/></condition><then pos:line="79" pos:column="32"> <block pos:line="79" pos:column="33">{
            <comment type="block" pos:line="80" pos:column="13">/* we ensure the invariant (d-&gt;opts_add &amp; d-&gt;opts_remove) == 0 */</comment>
            <expr_stmt><expr><name><name pos:line="81" pos:column="13">d<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">-&gt;<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="16">opts_remove<pos:position pos:line="81" pos:column="27"/></name></name> <operator pos:line="81" pos:column="28">|=<pos:position pos:line="81" pos:column="30"/></operator> <name pos:line="81" pos:column="31">opt<pos:position pos:line="81" pos:column="34"/></name></expr>;<pos:position pos:line="81" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="82" pos:column="13">d<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">-&gt;<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="16">opts_add<pos:position pos:line="82" pos:column="24"/></name></name> <operator pos:line="82" pos:column="25">&amp;=<pos:position pos:line="82" pos:column="31"/></operator> <operator pos:line="82" pos:column="28">~<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="29">opt<pos:position pos:line="82" pos:column="32"/></name></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">d<pos:position pos:line="83" pos:column="14"/></name><operator pos:line="83" pos:column="14">-&gt;<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="16">opts<pos:position pos:line="83" pos:column="20"/></name></name> <operator pos:line="83" pos:column="21">&amp;=<pos:position pos:line="83" pos:column="27"/></operator> <operator pos:line="83" pos:column="24">~<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="25">opt<pos:position pos:line="83" pos:column="28"/></name></expr>;<pos:position pos:line="83" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="84" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="85" pos:column="9">else <if pos:line="85" pos:column="14">if <condition pos:line="85" pos:column="17">(<expr><name pos:line="85" pos:column="18">action<pos:position pos:line="85" pos:column="24"/></name> <operator pos:line="85" pos:column="25">==<pos:position pos:line="85" pos:column="27"/></operator> <literal type="char" pos:line="85" pos:column="28">'+'<pos:position pos:line="85" pos:column="31"/></literal></expr>)<pos:position pos:line="85" pos:column="32"/></condition><then pos:line="85" pos:column="32"> <block pos:line="85" pos:column="33">{
            <expr_stmt><expr><name><name pos:line="86" pos:column="13">d<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">-&gt;<pos:position pos:line="86" pos:column="19"/></operator><name pos:line="86" pos:column="16">opts_add<pos:position pos:line="86" pos:column="24"/></name></name> <operator pos:line="86" pos:column="25">|=<pos:position pos:line="86" pos:column="27"/></operator> <name pos:line="86" pos:column="28">opt<pos:position pos:line="86" pos:column="31"/></name></expr>;<pos:position pos:line="86" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="87" pos:column="13">d<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">-&gt;<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="16">opts_remove<pos:position pos:line="87" pos:column="27"/></name></name> <operator pos:line="87" pos:column="28">&amp;=<pos:position pos:line="87" pos:column="34"/></operator> <operator pos:line="87" pos:column="31">~<pos:position pos:line="87" pos:column="32"/></operator><name pos:line="87" pos:column="32">opt<pos:position pos:line="87" pos:column="35"/></name></expr>;<pos:position pos:line="87" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="88" pos:column="13">d<pos:position pos:line="88" pos:column="14"/></name><operator pos:line="88" pos:column="14">-&gt;<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="16">opts<pos:position pos:line="88" pos:column="20"/></name></name> <operator pos:line="88" pos:column="21">|=<pos:position pos:line="88" pos:column="23"/></operator> <name pos:line="88" pos:column="24">opt<pos:position pos:line="88" pos:column="27"/></name></expr>;<pos:position pos:line="88" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if></elseif>
        <else pos:line="90" pos:column="9">else <block pos:line="90" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="91" pos:column="13">d<pos:position pos:line="91" pos:column="14"/></name><operator pos:line="91" pos:column="14">-&gt;<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="16">opts<pos:position pos:line="91" pos:column="20"/></name></name> <operator pos:line="91" pos:column="21">|=<pos:position pos:line="91" pos:column="23"/></operator> <name pos:line="91" pos:column="24">opt<pos:position pos:line="91" pos:column="27"/></name></expr>;<pos:position pos:line="91" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="94" pos:column="9">first<pos:position pos:line="94" pos:column="14"/></name> <operator pos:line="94" pos:column="15">=<pos:position pos:line="94" pos:column="16"/></operator> <literal type="number" pos:line="94" pos:column="17">0<pos:position pos:line="94" pos:column="18"/></literal></expr>;<pos:position pos:line="94" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></while>

    <return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">NULL<pos:position pos:line="97" pos:column="16"/></name></expr>;<pos:position pos:line="97" pos:column="17"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

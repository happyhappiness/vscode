<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1162_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cmd_rewriterule_setflag<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">apr_pool_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">p<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">void<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">_cfg<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                           <parameter><decl><type><name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">key<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">val<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">rewriterule_entry<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">cfg<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">_cfg<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">error<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">key<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">++<pos:position pos:line="7" pos:column="19"/></operator></expr>)<pos:position pos:line="7" pos:column="20"/></condition> <block pos:line="7" pos:column="21">{
    <case pos:line="8" pos:column="5">case <expr><literal type="char" pos:line="8" pos:column="10">'b'<pos:position pos:line="8" pos:column="13"/></literal></expr>:<pos:position pos:line="8" pos:column="14"/></case>
    <case pos:line="9" pos:column="5">case <expr><literal type="char" pos:line="9" pos:column="10">'B'<pos:position pos:line="9" pos:column="13"/></literal></expr>:<pos:position pos:line="9" pos:column="14"/></case>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><operator pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">key<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">||<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="22">!<pos:position pos:line="10" pos:column="23"/></operator><call><name pos:line="10" pos:column="23">strcasecmp<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">key<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="39">"ackrefescaping"<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="57"/></condition><then pos:line="10" pos:column="57"> <block pos:line="10" pos:column="58">{
            <expr_stmt><expr><name><name pos:line="11" pos:column="13">cfg<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">flags<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">|=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">RULEFLAG_ESCAPEBACKREF<pos:position pos:line="11" pos:column="49"/></name></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then> 
        <else pos:line="13" pos:column="9">else <block pos:line="13" pos:column="14">{
            <expr_stmt><expr><operator pos:line="14" pos:column="13">++<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">error<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></else></if>
        <break pos:line="16" pos:column="9">break;<pos:position pos:line="16" pos:column="15"/></break>
    <case pos:line="17" pos:column="5">case <expr><literal type="char" pos:line="17" pos:column="10">'c'<pos:position pos:line="17" pos:column="13"/></literal></expr>:<pos:position pos:line="17" pos:column="14"/></case>
    <case pos:line="18" pos:column="5">case <expr><literal type="char" pos:line="18" pos:column="10">'C'<pos:position pos:line="18" pos:column="13"/></literal></expr>:<pos:position pos:line="18" pos:column="14"/></case>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">key<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">||<pos:position pos:line="19" pos:column="21"/></operator> <operator pos:line="19" pos:column="22">!<pos:position pos:line="19" pos:column="23"/></operator><call><name pos:line="19" pos:column="23">strcasecmp<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">key<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"hain"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="47"/></condition><then pos:line="19" pos:column="47"> <block pos:line="19" pos:column="48">{           <comment type="block" pos:line="19" pos:column="60">/* chain */</comment>
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">cfg<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">flags<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">|=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">RULEFLAG_CHAIN<pos:position pos:line="20" pos:column="41"/></name></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then>
        <elseif pos:line="22" pos:column="9">else <if pos:line="22" pos:column="14">if <condition pos:line="22" pos:column="17">(<expr><operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><operator pos:line="22" pos:column="19">(<pos:position pos:line="22" pos:column="20"/></operator><operator pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">key<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <literal type="char" pos:line="22" pos:column="28">'O'<pos:position pos:line="22" pos:column="31"/></literal> <operator pos:line="22" pos:column="32">||<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">key<pos:position pos:line="22" pos:column="39"/></name> <operator pos:line="22" pos:column="40">==<pos:position pos:line="22" pos:column="42"/></operator> <literal type="char" pos:line="22" pos:column="43">'o'<pos:position pos:line="22" pos:column="46"/></literal><operator pos:line="22" pos:column="46">)<pos:position pos:line="22" pos:column="47"/></operator> <operator pos:line="22" pos:column="48">&amp;&amp;<pos:position pos:line="22" pos:column="58"/></operator> <operator pos:line="22" pos:column="51">!<pos:position pos:line="22" pos:column="52"/></operator><name><name pos:line="22" pos:column="52">key<pos:position pos:line="22" pos:column="55"/></name><index pos:line="22" pos:column="55">[<expr><literal type="number" pos:line="22" pos:column="56">1<pos:position pos:line="22" pos:column="57"/></literal></expr>]<pos:position pos:line="22" pos:column="58"/></index></name><operator pos:line="22" pos:column="58">)<pos:position pos:line="22" pos:column="59"/></operator>
                 <operator pos:line="23" pos:column="18">||<pos:position pos:line="23" pos:column="20"/></operator> <operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">strcasecmp<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">key<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="38">"ookie"<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="47"/></condition><then pos:line="23" pos:column="47"> <block pos:line="23" pos:column="48">{           <comment type="block" pos:line="23" pos:column="60">/* cookie */</comment>
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">data_item<pos:position pos:line="24" pos:column="22"/></name> <modifier pos:line="24" pos:column="23">*<pos:position pos:line="24" pos:column="24"/></modifier></type><name pos:line="24" pos:column="24">cp<pos:position pos:line="24" pos:column="26"/></name> <init pos:line="24" pos:column="27">= <expr><name><name pos:line="24" pos:column="29">cfg<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">cookie<pos:position pos:line="24" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="41"/></decl_stmt>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">cp<pos:position pos:line="26" pos:column="20"/></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21"> <block pos:line="26" pos:column="22">{
                <expr_stmt><expr><name pos:line="27" pos:column="17">cp<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name><name pos:line="27" pos:column="22">cfg<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">cookie<pos:position pos:line="27" pos:column="33"/></name></name> <operator pos:line="27" pos:column="34">=<pos:position pos:line="27" pos:column="35"/></operator> <call><name pos:line="27" pos:column="36">apr_palloc<pos:position pos:line="27" pos:column="46"/></name><argument_list pos:line="27" pos:column="46">(<argument><expr><name pos:line="27" pos:column="47">p<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="50">sizeof<argument_list pos:line="27" pos:column="56">(<argument><expr><operator pos:line="27" pos:column="57">*<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="58">cp<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then>
            <else pos:line="29" pos:column="13">else <block pos:line="29" pos:column="18">{
                <while pos:line="30" pos:column="17">while <condition pos:line="30" pos:column="23">(<expr><name><name pos:line="30" pos:column="24">cp<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">next<pos:position pos:line="30" pos:column="32"/></name></name></expr>)<pos:position pos:line="30" pos:column="33"/></condition> <block pos:line="30" pos:column="34">{
                    <expr_stmt><expr><name pos:line="31" pos:column="21">cp<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name><name pos:line="31" pos:column="26">cp<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">next<pos:position pos:line="31" pos:column="34"/></name></name></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="32" pos:column="18"/></block></while>
                <expr_stmt><expr><name><name pos:line="33" pos:column="17">cp<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">next<pos:position pos:line="33" pos:column="25"/></name></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <call><name pos:line="33" pos:column="28">apr_palloc<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">p<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="42">sizeof<argument_list pos:line="33" pos:column="48">(<argument><expr><operator pos:line="33" pos:column="49">*<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="50">cp<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="34" pos:column="17">cp<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <name><name pos:line="34" pos:column="22">cp<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">next<pos:position pos:line="34" pos:column="30"/></name></name></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></else></if>

            <expr_stmt><expr><name><name pos:line="37" pos:column="13">cp<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">next<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">NULL<pos:position pos:line="37" pos:column="28"/></name></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">cp<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">data<pos:position pos:line="38" pos:column="21"/></name></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">val<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif>
        <else pos:line="40" pos:column="9">else <block pos:line="40" pos:column="14">{
            <expr_stmt><expr><operator pos:line="41" pos:column="13">++<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">error<pos:position pos:line="41" pos:column="20"/></name></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></else></if>
        <break pos:line="43" pos:column="9">break;<pos:position pos:line="43" pos:column="15"/></break>

    <case pos:line="45" pos:column="5">case <expr><literal type="char" pos:line="45" pos:column="10">'e'<pos:position pos:line="45" pos:column="13"/></literal></expr>:<pos:position pos:line="45" pos:column="14"/></case>
    <case pos:line="46" pos:column="5">case <expr><literal type="char" pos:line="46" pos:column="10">'E'<pos:position pos:line="46" pos:column="13"/></literal></expr>:<pos:position pos:line="46" pos:column="14"/></case>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><operator pos:line="47" pos:column="14">*<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">key<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">||<pos:position pos:line="47" pos:column="21"/></operator> <operator pos:line="47" pos:column="22">!<pos:position pos:line="47" pos:column="23"/></operator><call><name pos:line="47" pos:column="23">strcasecmp<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">key<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="39">"nv"<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="45"/></condition><then pos:line="47" pos:column="45"> <block pos:line="47" pos:column="46">{             <comment type="block" pos:line="47" pos:column="60">/* env */</comment>
            <decl_stmt><decl><type><name pos:line="48" pos:column="13">data_item<pos:position pos:line="48" pos:column="22"/></name> <modifier pos:line="48" pos:column="23">*<pos:position pos:line="48" pos:column="24"/></modifier></type><name pos:line="48" pos:column="24">cp<pos:position pos:line="48" pos:column="26"/></name> <init pos:line="48" pos:column="27">= <expr><name><name pos:line="48" pos:column="29">cfg<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">env<pos:position pos:line="48" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="48" pos:column="38"/></decl_stmt>

            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><operator pos:line="50" pos:column="17">!<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">cp<pos:position pos:line="50" pos:column="20"/></name></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21"> <block pos:line="50" pos:column="22">{
                <expr_stmt><expr><name pos:line="51" pos:column="17">cp<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <name><name pos:line="51" pos:column="22">cfg<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">env<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <call><name pos:line="51" pos:column="33">apr_palloc<pos:position pos:line="51" pos:column="43"/></name><argument_list pos:line="51" pos:column="43">(<argument><expr><name pos:line="51" pos:column="44">p<pos:position pos:line="51" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="47">sizeof<argument_list pos:line="51" pos:column="53">(<argument><expr><operator pos:line="51" pos:column="54">*<pos:position pos:line="51" pos:column="55"/></operator><name pos:line="51" pos:column="55">cp<pos:position pos:line="51" pos:column="57"/></name></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="52" pos:column="14"/></block></then>
            <else pos:line="53" pos:column="13">else <block pos:line="53" pos:column="18">{
                <while pos:line="54" pos:column="17">while <condition pos:line="54" pos:column="23">(<expr><name><name pos:line="54" pos:column="24">cp<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">next<pos:position pos:line="54" pos:column="32"/></name></name></expr>)<pos:position pos:line="54" pos:column="33"/></condition> <block pos:line="54" pos:column="34">{
                    <expr_stmt><expr><name pos:line="55" pos:column="21">cp<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <name><name pos:line="55" pos:column="26">cp<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">next<pos:position pos:line="55" pos:column="34"/></name></name></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="56" pos:column="18"/></block></while>
                <expr_stmt><expr><name><name pos:line="57" pos:column="17">cp<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">next<pos:position pos:line="57" pos:column="25"/></name></name> <operator pos:line="57" pos:column="26">=<pos:position pos:line="57" pos:column="27"/></operator> <call><name pos:line="57" pos:column="28">apr_palloc<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">p<pos:position pos:line="57" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="42">sizeof<argument_list pos:line="57" pos:column="48">(<argument><expr><operator pos:line="57" pos:column="49">*<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="50">cp<pos:position pos:line="57" pos:column="52"/></name></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">cp<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator> <name><name pos:line="58" pos:column="22">cp<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">next<pos:position pos:line="58" pos:column="30"/></name></name></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></else></if>

            <expr_stmt><expr><name><name pos:line="61" pos:column="13">cp<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">-&gt;<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="17">next<pos:position pos:line="61" pos:column="21"/></name></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <name pos:line="61" pos:column="24">NULL<pos:position pos:line="61" pos:column="28"/></name></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="62" pos:column="13">cp<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">-&gt;<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="17">data<pos:position pos:line="62" pos:column="21"/></name></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">val<pos:position pos:line="62" pos:column="27"/></name></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then>
        <else pos:line="64" pos:column="9">else <block pos:line="64" pos:column="14">{
            <expr_stmt><expr><operator pos:line="65" pos:column="13">++<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">error<pos:position pos:line="65" pos:column="20"/></name></expr>;<pos:position pos:line="65" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></else></if>
        <break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>

    <case pos:line="69" pos:column="5">case <expr><literal type="char" pos:line="69" pos:column="10">'f'<pos:position pos:line="69" pos:column="13"/></literal></expr>:<pos:position pos:line="69" pos:column="14"/></case>
    <case pos:line="70" pos:column="5">case <expr><literal type="char" pos:line="70" pos:column="10">'F'<pos:position pos:line="70" pos:column="13"/></literal></expr>:<pos:position pos:line="70" pos:column="14"/></case>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">!<pos:position pos:line="71" pos:column="14"/></operator><operator pos:line="71" pos:column="14">*<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="15">key<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">||<pos:position pos:line="71" pos:column="21"/></operator> <operator pos:line="71" pos:column="22">!<pos:position pos:line="71" pos:column="23"/></operator><call><name pos:line="71" pos:column="23">strcasecmp<pos:position pos:line="71" pos:column="33"/></name><argument_list pos:line="71" pos:column="33">(<argument><expr><name pos:line="71" pos:column="34">key<pos:position pos:line="71" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="39">"orbidden"<pos:position pos:line="71" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="51"/></condition><then pos:line="71" pos:column="51"> <block pos:line="71" pos:column="52">{       <comment type="block" pos:line="71" pos:column="60">/* forbidden */</comment>
            <expr_stmt><expr><name><name pos:line="72" pos:column="13">cfg<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">-&gt;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="18">flags<pos:position pos:line="72" pos:column="23"/></name></name> <operator pos:line="72" pos:column="24">|=<pos:position pos:line="72" pos:column="26"/></operator> <operator pos:line="72" pos:column="27">(<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="28">RULEFLAG_STATUS<pos:position pos:line="72" pos:column="43"/></name> <operator pos:line="72" pos:column="44">|<pos:position pos:line="72" pos:column="45"/></operator> <name pos:line="72" pos:column="46">RULEFLAG_NOSUB<pos:position pos:line="72" pos:column="60"/></name><operator pos:line="72" pos:column="60">)<pos:position pos:line="72" pos:column="61"/></operator></expr>;<pos:position pos:line="72" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="73" pos:column="13">cfg<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">forced_responsecode<pos:position pos:line="73" pos:column="37"/></name></name> <operator pos:line="73" pos:column="38">=<pos:position pos:line="73" pos:column="39"/></operator> <name pos:line="73" pos:column="40">HTTP_FORBIDDEN<pos:position pos:line="73" pos:column="54"/></name></expr>;<pos:position pos:line="73" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then>
        <else pos:line="75" pos:column="9">else <block pos:line="75" pos:column="14">{
            <expr_stmt><expr><operator pos:line="76" pos:column="13">++<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="15">error<pos:position pos:line="76" pos:column="20"/></name></expr>;<pos:position pos:line="76" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>
        <break pos:line="78" pos:column="9">break;<pos:position pos:line="78" pos:column="15"/></break>

    <case pos:line="80" pos:column="5">case <expr><literal type="char" pos:line="80" pos:column="10">'g'<pos:position pos:line="80" pos:column="13"/></literal></expr>:<pos:position pos:line="80" pos:column="14"/></case>
    <case pos:line="81" pos:column="5">case <expr><literal type="char" pos:line="81" pos:column="10">'G'<pos:position pos:line="81" pos:column="13"/></literal></expr>:<pos:position pos:line="81" pos:column="14"/></case>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><operator pos:line="82" pos:column="13">!<pos:position pos:line="82" pos:column="14"/></operator><operator pos:line="82" pos:column="14">*<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="15">key<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">||<pos:position pos:line="82" pos:column="21"/></operator> <operator pos:line="82" pos:column="22">!<pos:position pos:line="82" pos:column="23"/></operator><call><name pos:line="82" pos:column="23">strcasecmp<pos:position pos:line="82" pos:column="33"/></name><argument_list pos:line="82" pos:column="33">(<argument><expr><name pos:line="82" pos:column="34">key<pos:position pos:line="82" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="39">"one"<pos:position pos:line="82" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="46"/></condition><then pos:line="82" pos:column="46"> <block pos:line="82" pos:column="47">{            <comment type="block" pos:line="82" pos:column="60">/* gone */</comment>
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">cfg<pos:position pos:line="83" pos:column="16"/></name><operator pos:line="83" pos:column="16">-&gt;<pos:position pos:line="83" pos:column="21"/></operator><name pos:line="83" pos:column="18">flags<pos:position pos:line="83" pos:column="23"/></name></name> <operator pos:line="83" pos:column="24">|=<pos:position pos:line="83" pos:column="26"/></operator> <operator pos:line="83" pos:column="27">(<pos:position pos:line="83" pos:column="28"/></operator><name pos:line="83" pos:column="28">RULEFLAG_STATUS<pos:position pos:line="83" pos:column="43"/></name> <operator pos:line="83" pos:column="44">|<pos:position pos:line="83" pos:column="45"/></operator> <name pos:line="83" pos:column="46">RULEFLAG_NOSUB<pos:position pos:line="83" pos:column="60"/></name><operator pos:line="83" pos:column="60">)<pos:position pos:line="83" pos:column="61"/></operator></expr>;<pos:position pos:line="83" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="84" pos:column="13">cfg<pos:position pos:line="84" pos:column="16"/></name><operator pos:line="84" pos:column="16">-&gt;<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="18">forced_responsecode<pos:position pos:line="84" pos:column="37"/></name></name> <operator pos:line="84" pos:column="38">=<pos:position pos:line="84" pos:column="39"/></operator> <name pos:line="84" pos:column="40">HTTP_GONE<pos:position pos:line="84" pos:column="49"/></name></expr>;<pos:position pos:line="84" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="85" pos:column="10"/></block></then>
        <else pos:line="86" pos:column="9">else <block pos:line="86" pos:column="14">{
            <expr_stmt><expr><operator pos:line="87" pos:column="13">++<pos:position pos:line="87" pos:column="15"/></operator><name pos:line="87" pos:column="15">error<pos:position pos:line="87" pos:column="20"/></name></expr>;<pos:position pos:line="87" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></else></if>
        <break pos:line="89" pos:column="9">break;<pos:position pos:line="89" pos:column="15"/></break>

    <case pos:line="91" pos:column="5">case <expr><literal type="char" pos:line="91" pos:column="10">'h'<pos:position pos:line="91" pos:column="13"/></literal></expr>:<pos:position pos:line="91" pos:column="14"/></case>
    <case pos:line="92" pos:column="5">case <expr><literal type="char" pos:line="92" pos:column="10">'H'<pos:position pos:line="92" pos:column="13"/></literal></expr>:<pos:position pos:line="92" pos:column="14"/></case>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">!<pos:position pos:line="93" pos:column="14"/></operator><operator pos:line="93" pos:column="14">*<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="15">key<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">||<pos:position pos:line="93" pos:column="21"/></operator> <operator pos:line="93" pos:column="22">!<pos:position pos:line="93" pos:column="23"/></operator><call><name pos:line="93" pos:column="23">strcasecmp<pos:position pos:line="93" pos:column="33"/></name><argument_list pos:line="93" pos:column="33">(<argument><expr><name pos:line="93" pos:column="34">key<pos:position pos:line="93" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="39">"andler"<pos:position pos:line="93" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="49"/></condition><then pos:line="93" pos:column="49"> <block pos:line="93" pos:column="50">{         <comment type="block" pos:line="93" pos:column="60">/* handler */</comment>
            <expr_stmt><expr><name><name pos:line="94" pos:column="13">cfg<pos:position pos:line="94" pos:column="16"/></name><operator pos:line="94" pos:column="16">-&gt;<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="18">forced_handler<pos:position pos:line="94" pos:column="32"/></name></name> <operator pos:line="94" pos:column="33">=<pos:position pos:line="94" pos:column="34"/></operator> <name pos:line="94" pos:column="35">val<pos:position pos:line="94" pos:column="38"/></name></expr>;<pos:position pos:line="94" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="95" pos:column="10"/></block></then>
        <else pos:line="96" pos:column="9">else <block pos:line="96" pos:column="14">{
            <expr_stmt><expr><operator pos:line="97" pos:column="13">++<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="15">error<pos:position pos:line="97" pos:column="20"/></name></expr>;<pos:position pos:line="97" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></else></if>
        <break pos:line="99" pos:column="9">break;<pos:position pos:line="99" pos:column="15"/></break>

    <case pos:line="101" pos:column="5">case <expr><literal type="char" pos:line="101" pos:column="10">'l'<pos:position pos:line="101" pos:column="13"/></literal></expr>:<pos:position pos:line="101" pos:column="14"/></case>
    <case pos:line="102" pos:column="5">case <expr><literal type="char" pos:line="102" pos:column="10">'L'<pos:position pos:line="102" pos:column="13"/></literal></expr>:<pos:position pos:line="102" pos:column="14"/></case>
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><operator pos:line="103" pos:column="13">!<pos:position pos:line="103" pos:column="14"/></operator><operator pos:line="103" pos:column="14">*<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="15">key<pos:position pos:line="103" pos:column="18"/></name> <operator pos:line="103" pos:column="19">||<pos:position pos:line="103" pos:column="21"/></operator> <operator pos:line="103" pos:column="22">!<pos:position pos:line="103" pos:column="23"/></operator><call><name pos:line="103" pos:column="23">strcasecmp<pos:position pos:line="103" pos:column="33"/></name><argument_list pos:line="103" pos:column="33">(<argument><expr><name pos:line="103" pos:column="34">key<pos:position pos:line="103" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="39">"ast"<pos:position pos:line="103" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="46"/></condition><then pos:line="103" pos:column="46"> <block pos:line="103" pos:column="47">{            <comment type="block" pos:line="103" pos:column="60">/* last */</comment>
            <expr_stmt><expr><name><name pos:line="104" pos:column="13">cfg<pos:position pos:line="104" pos:column="16"/></name><operator pos:line="104" pos:column="16">-&gt;<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="18">flags<pos:position pos:line="104" pos:column="23"/></name></name> <operator pos:line="104" pos:column="24">|=<pos:position pos:line="104" pos:column="26"/></operator> <name pos:line="104" pos:column="27">RULEFLAG_LASTRULE<pos:position pos:line="104" pos:column="44"/></name></expr>;<pos:position pos:line="104" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="105" pos:column="10"/></block></then>
        <else pos:line="106" pos:column="9">else <block pos:line="106" pos:column="14">{
            <expr_stmt><expr><operator pos:line="107" pos:column="13">++<pos:position pos:line="107" pos:column="15"/></operator><name pos:line="107" pos:column="15">error<pos:position pos:line="107" pos:column="20"/></name></expr>;<pos:position pos:line="107" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="108" pos:column="10"/></block></else></if>
        <break pos:line="109" pos:column="9">break;<pos:position pos:line="109" pos:column="15"/></break>

    <case pos:line="111" pos:column="5">case <expr><literal type="char" pos:line="111" pos:column="10">'n'<pos:position pos:line="111" pos:column="13"/></literal></expr>:<pos:position pos:line="111" pos:column="14"/></case>
    <case pos:line="112" pos:column="5">case <expr><literal type="char" pos:line="112" pos:column="10">'N'<pos:position pos:line="112" pos:column="13"/></literal></expr>:<pos:position pos:line="112" pos:column="14"/></case>
        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><operator pos:line="113" pos:column="13">(<pos:position pos:line="113" pos:column="14"/></operator><operator pos:line="113" pos:column="14">(<pos:position pos:line="113" pos:column="15"/></operator><operator pos:line="113" pos:column="15">*<pos:position pos:line="113" pos:column="16"/></operator><name pos:line="113" pos:column="16">key<pos:position pos:line="113" pos:column="19"/></name> <operator pos:line="113" pos:column="20">==<pos:position pos:line="113" pos:column="22"/></operator> <literal type="char" pos:line="113" pos:column="23">'E'<pos:position pos:line="113" pos:column="26"/></literal> <operator pos:line="113" pos:column="27">||<pos:position pos:line="113" pos:column="29"/></operator> <operator pos:line="113" pos:column="30">*<pos:position pos:line="113" pos:column="31"/></operator><name pos:line="113" pos:column="31">key<pos:position pos:line="113" pos:column="34"/></name> <operator pos:line="113" pos:column="35">==<pos:position pos:line="113" pos:column="37"/></operator> <literal type="char" pos:line="113" pos:column="38">'e'<pos:position pos:line="113" pos:column="41"/></literal><operator pos:line="113" pos:column="41">)<pos:position pos:line="113" pos:column="42"/></operator> <operator pos:line="113" pos:column="43">&amp;&amp;<pos:position pos:line="113" pos:column="53"/></operator> <operator pos:line="113" pos:column="46">!<pos:position pos:line="113" pos:column="47"/></operator><name><name pos:line="113" pos:column="47">key<pos:position pos:line="113" pos:column="50"/></name><index pos:line="113" pos:column="50">[<expr><literal type="number" pos:line="113" pos:column="51">1<pos:position pos:line="113" pos:column="52"/></literal></expr>]<pos:position pos:line="113" pos:column="53"/></index></name><operator pos:line="113" pos:column="53">)<pos:position pos:line="113" pos:column="54"/></operator>
            <operator pos:line="114" pos:column="13">||<pos:position pos:line="114" pos:column="15"/></operator> <operator pos:line="114" pos:column="16">!<pos:position pos:line="114" pos:column="17"/></operator><call><name pos:line="114" pos:column="17">strcasecmp<pos:position pos:line="114" pos:column="27"/></name><argument_list pos:line="114" pos:column="27">(<argument><expr><name pos:line="114" pos:column="28">key<pos:position pos:line="114" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="33">"oescape"<pos:position pos:line="114" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="44"/></condition><then pos:line="114" pos:column="44"> <block pos:line="114" pos:column="45">{              <comment type="block" pos:line="114" pos:column="60">/* noescape */</comment>
            <expr_stmt><expr><name><name pos:line="115" pos:column="13">cfg<pos:position pos:line="115" pos:column="16"/></name><operator pos:line="115" pos:column="16">-&gt;<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="18">flags<pos:position pos:line="115" pos:column="23"/></name></name> <operator pos:line="115" pos:column="24">|=<pos:position pos:line="115" pos:column="26"/></operator> <name pos:line="115" pos:column="27">RULEFLAG_NOESCAPE<pos:position pos:line="115" pos:column="44"/></name></expr>;<pos:position pos:line="115" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="116" pos:column="10"/></block></then>
        <elseif pos:line="117" pos:column="9">else <if pos:line="117" pos:column="14">if <condition pos:line="117" pos:column="17">(<expr><operator pos:line="117" pos:column="18">!<pos:position pos:line="117" pos:column="19"/></operator><operator pos:line="117" pos:column="19">*<pos:position pos:line="117" pos:column="20"/></operator><name pos:line="117" pos:column="20">key<pos:position pos:line="117" pos:column="23"/></name> <operator pos:line="117" pos:column="24">||<pos:position pos:line="117" pos:column="26"/></operator> <operator pos:line="117" pos:column="27">!<pos:position pos:line="117" pos:column="28"/></operator><call><name pos:line="117" pos:column="28">strcasecmp<pos:position pos:line="117" pos:column="38"/></name><argument_list pos:line="117" pos:column="38">(<argument><expr><name pos:line="117" pos:column="39">key<pos:position pos:line="117" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="44">"ext"<pos:position pos:line="117" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="51"/></condition><then pos:line="117" pos:column="51"> <block pos:line="117" pos:column="52">{       <comment type="block" pos:line="117" pos:column="60">/* next */</comment>
            <expr_stmt><expr><name><name pos:line="118" pos:column="13">cfg<pos:position pos:line="118" pos:column="16"/></name><operator pos:line="118" pos:column="16">-&gt;<pos:position pos:line="118" pos:column="21"/></operator><name pos:line="118" pos:column="18">flags<pos:position pos:line="118" pos:column="23"/></name></name> <operator pos:line="118" pos:column="24">|=<pos:position pos:line="118" pos:column="26"/></operator> <name pos:line="118" pos:column="27">RULEFLAG_NEWROUND<pos:position pos:line="118" pos:column="44"/></name></expr>;<pos:position pos:line="118" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="119" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="120" pos:column="9">else <if pos:line="120" pos:column="14">if <condition pos:line="120" pos:column="17">(<expr><operator pos:line="120" pos:column="18">(<pos:position pos:line="120" pos:column="19"/></operator><operator pos:line="120" pos:column="19">(<pos:position pos:line="120" pos:column="20"/></operator><operator pos:line="120" pos:column="20">*<pos:position pos:line="120" pos:column="21"/></operator><name pos:line="120" pos:column="21">key<pos:position pos:line="120" pos:column="24"/></name> <operator pos:line="120" pos:column="25">==<pos:position pos:line="120" pos:column="27"/></operator> <literal type="char" pos:line="120" pos:column="28">'S'<pos:position pos:line="120" pos:column="31"/></literal> <operator pos:line="120" pos:column="32">||<pos:position pos:line="120" pos:column="34"/></operator> <operator pos:line="120" pos:column="35">*<pos:position pos:line="120" pos:column="36"/></operator><name pos:line="120" pos:column="36">key<pos:position pos:line="120" pos:column="39"/></name> <operator pos:line="120" pos:column="40">==<pos:position pos:line="120" pos:column="42"/></operator> <literal type="char" pos:line="120" pos:column="43">'s'<pos:position pos:line="120" pos:column="46"/></literal><operator pos:line="120" pos:column="46">)<pos:position pos:line="120" pos:column="47"/></operator> <operator pos:line="120" pos:column="48">&amp;&amp;<pos:position pos:line="120" pos:column="58"/></operator> <operator pos:line="120" pos:column="51">!<pos:position pos:line="120" pos:column="52"/></operator><name><name pos:line="120" pos:column="52">key<pos:position pos:line="120" pos:column="55"/></name><index pos:line="120" pos:column="55">[<expr><literal type="number" pos:line="120" pos:column="56">1<pos:position pos:line="120" pos:column="57"/></literal></expr>]<pos:position pos:line="120" pos:column="58"/></index></name><operator pos:line="120" pos:column="58">)<pos:position pos:line="120" pos:column="59"/></operator>
            <operator pos:line="121" pos:column="13">||<pos:position pos:line="121" pos:column="15"/></operator> <operator pos:line="121" pos:column="16">!<pos:position pos:line="121" pos:column="17"/></operator><call><name pos:line="121" pos:column="17">strcasecmp<pos:position pos:line="121" pos:column="27"/></name><argument_list pos:line="121" pos:column="27">(<argument><expr><name pos:line="121" pos:column="28">key<pos:position pos:line="121" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="33">"osubreq"<pos:position pos:line="121" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="44"/></condition><then pos:line="121" pos:column="44"> <block pos:line="121" pos:column="45">{              <comment type="block" pos:line="121" pos:column="60">/* nosubreq */</comment>
            <expr_stmt><expr><name><name pos:line="122" pos:column="13">cfg<pos:position pos:line="122" pos:column="16"/></name><operator pos:line="122" pos:column="16">-&gt;<pos:position pos:line="122" pos:column="21"/></operator><name pos:line="122" pos:column="18">flags<pos:position pos:line="122" pos:column="23"/></name></name> <operator pos:line="122" pos:column="24">|=<pos:position pos:line="122" pos:column="26"/></operator> <name pos:line="122" pos:column="27">RULEFLAG_IGNOREONSUBREQ<pos:position pos:line="122" pos:column="50"/></name></expr>;<pos:position pos:line="122" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="123" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="124" pos:column="9">else <if pos:line="124" pos:column="14">if <condition pos:line="124" pos:column="17">(<expr><operator pos:line="124" pos:column="18">(<pos:position pos:line="124" pos:column="19"/></operator><operator pos:line="124" pos:column="19">(<pos:position pos:line="124" pos:column="20"/></operator><operator pos:line="124" pos:column="20">*<pos:position pos:line="124" pos:column="21"/></operator><name pos:line="124" pos:column="21">key<pos:position pos:line="124" pos:column="24"/></name> <operator pos:line="124" pos:column="25">==<pos:position pos:line="124" pos:column="27"/></operator> <literal type="char" pos:line="124" pos:column="28">'C'<pos:position pos:line="124" pos:column="31"/></literal> <operator pos:line="124" pos:column="32">||<pos:position pos:line="124" pos:column="34"/></operator> <operator pos:line="124" pos:column="35">*<pos:position pos:line="124" pos:column="36"/></operator><name pos:line="124" pos:column="36">key<pos:position pos:line="124" pos:column="39"/></name> <operator pos:line="124" pos:column="40">==<pos:position pos:line="124" pos:column="42"/></operator> <literal type="char" pos:line="124" pos:column="43">'c'<pos:position pos:line="124" pos:column="46"/></literal><operator pos:line="124" pos:column="46">)<pos:position pos:line="124" pos:column="47"/></operator> <operator pos:line="124" pos:column="48">&amp;&amp;<pos:position pos:line="124" pos:column="58"/></operator> <operator pos:line="124" pos:column="51">!<pos:position pos:line="124" pos:column="52"/></operator><name><name pos:line="124" pos:column="52">key<pos:position pos:line="124" pos:column="55"/></name><index pos:line="124" pos:column="55">[<expr><literal type="number" pos:line="124" pos:column="56">1<pos:position pos:line="124" pos:column="57"/></literal></expr>]<pos:position pos:line="124" pos:column="58"/></index></name><operator pos:line="124" pos:column="58">)<pos:position pos:line="124" pos:column="59"/></operator>
            <operator pos:line="125" pos:column="13">||<pos:position pos:line="125" pos:column="15"/></operator> <operator pos:line="125" pos:column="16">!<pos:position pos:line="125" pos:column="17"/></operator><call><name pos:line="125" pos:column="17">strcasecmp<pos:position pos:line="125" pos:column="27"/></name><argument_list pos:line="125" pos:column="27">(<argument><expr><name pos:line="125" pos:column="28">key<pos:position pos:line="125" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="33">"ocase"<pos:position pos:line="125" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="125" pos:column="42"/></condition><then pos:line="125" pos:column="42"> <block pos:line="125" pos:column="43">{                <comment type="block" pos:line="125" pos:column="60">/* nocase */</comment>
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">cfg<pos:position pos:line="126" pos:column="16"/></name><operator pos:line="126" pos:column="16">-&gt;<pos:position pos:line="126" pos:column="21"/></operator><name pos:line="126" pos:column="18">flags<pos:position pos:line="126" pos:column="23"/></name></name> <operator pos:line="126" pos:column="24">|=<pos:position pos:line="126" pos:column="26"/></operator> <name pos:line="126" pos:column="27">RULEFLAG_NOCASE<pos:position pos:line="126" pos:column="42"/></name></expr>;<pos:position pos:line="126" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if></elseif>
        <else pos:line="128" pos:column="9">else <block pos:line="128" pos:column="14">{
            <expr_stmt><expr><operator pos:line="129" pos:column="13">++<pos:position pos:line="129" pos:column="15"/></operator><name pos:line="129" pos:column="15">error<pos:position pos:line="129" pos:column="20"/></name></expr>;<pos:position pos:line="129" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="130" pos:column="10"/></block></else></if>
        <break pos:line="131" pos:column="9">break;<pos:position pos:line="131" pos:column="15"/></break>

    <case pos:line="133" pos:column="5">case <expr><literal type="char" pos:line="133" pos:column="10">'p'<pos:position pos:line="133" pos:column="13"/></literal></expr>:<pos:position pos:line="133" pos:column="14"/></case>
    <case pos:line="134" pos:column="5">case <expr><literal type="char" pos:line="134" pos:column="10">'P'<pos:position pos:line="134" pos:column="13"/></literal></expr>:<pos:position pos:line="134" pos:column="14"/></case>
        <if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><operator pos:line="135" pos:column="13">!<pos:position pos:line="135" pos:column="14"/></operator><operator pos:line="135" pos:column="14">*<pos:position pos:line="135" pos:column="15"/></operator><name pos:line="135" pos:column="15">key<pos:position pos:line="135" pos:column="18"/></name> <operator pos:line="135" pos:column="19">||<pos:position pos:line="135" pos:column="21"/></operator> <operator pos:line="135" pos:column="22">!<pos:position pos:line="135" pos:column="23"/></operator><call><name pos:line="135" pos:column="23">strcasecmp<pos:position pos:line="135" pos:column="33"/></name><argument_list pos:line="135" pos:column="33">(<argument><expr><name pos:line="135" pos:column="34">key<pos:position pos:line="135" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="39">"roxy"<pos:position pos:line="135" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="47"/></condition><then pos:line="135" pos:column="47"> <block pos:line="135" pos:column="48">{           <comment type="block" pos:line="135" pos:column="60">/* proxy */</comment>
            <expr_stmt><expr><name><name pos:line="136" pos:column="13">cfg<pos:position pos:line="136" pos:column="16"/></name><operator pos:line="136" pos:column="16">-&gt;<pos:position pos:line="136" pos:column="21"/></operator><name pos:line="136" pos:column="18">flags<pos:position pos:line="136" pos:column="23"/></name></name> <operator pos:line="136" pos:column="24">|=<pos:position pos:line="136" pos:column="26"/></operator> <name pos:line="136" pos:column="27">RULEFLAG_PROXY<pos:position pos:line="136" pos:column="41"/></name></expr>;<pos:position pos:line="136" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="137" pos:column="10"/></block></then>
        <elseif pos:line="138" pos:column="9">else <if pos:line="138" pos:column="14">if <condition pos:line="138" pos:column="17">(<expr><operator pos:line="138" pos:column="18">(<pos:position pos:line="138" pos:column="19"/></operator><operator pos:line="138" pos:column="19">(<pos:position pos:line="138" pos:column="20"/></operator><operator pos:line="138" pos:column="20">*<pos:position pos:line="138" pos:column="21"/></operator><name pos:line="138" pos:column="21">key<pos:position pos:line="138" pos:column="24"/></name> <operator pos:line="138" pos:column="25">==<pos:position pos:line="138" pos:column="27"/></operator> <literal type="char" pos:line="138" pos:column="28">'T'<pos:position pos:line="138" pos:column="31"/></literal> <operator pos:line="138" pos:column="32">||<pos:position pos:line="138" pos:column="34"/></operator> <operator pos:line="138" pos:column="35">*<pos:position pos:line="138" pos:column="36"/></operator><name pos:line="138" pos:column="36">key<pos:position pos:line="138" pos:column="39"/></name> <operator pos:line="138" pos:column="40">==<pos:position pos:line="138" pos:column="42"/></operator> <literal type="char" pos:line="138" pos:column="43">'t'<pos:position pos:line="138" pos:column="46"/></literal><operator pos:line="138" pos:column="46">)<pos:position pos:line="138" pos:column="47"/></operator> <operator pos:line="138" pos:column="48">&amp;&amp;<pos:position pos:line="138" pos:column="58"/></operator> <operator pos:line="138" pos:column="51">!<pos:position pos:line="138" pos:column="52"/></operator><name><name pos:line="138" pos:column="52">key<pos:position pos:line="138" pos:column="55"/></name><index pos:line="138" pos:column="55">[<expr><literal type="number" pos:line="138" pos:column="56">1<pos:position pos:line="138" pos:column="57"/></literal></expr>]<pos:position pos:line="138" pos:column="58"/></index></name><operator pos:line="138" pos:column="58">)<pos:position pos:line="138" pos:column="59"/></operator>
            <operator pos:line="139" pos:column="13">||<pos:position pos:line="139" pos:column="15"/></operator> <operator pos:line="139" pos:column="16">!<pos:position pos:line="139" pos:column="17"/></operator><call><name pos:line="139" pos:column="17">strcasecmp<pos:position pos:line="139" pos:column="27"/></name><argument_list pos:line="139" pos:column="27">(<argument><expr><name pos:line="139" pos:column="28">key<pos:position pos:line="139" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="33">"assthrough"<pos:position pos:line="139" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="139" pos:column="47"/></condition><then pos:line="139" pos:column="47"> <block pos:line="139" pos:column="48">{           <comment type="block" pos:line="139" pos:column="60">/* passthrough */</comment>
            <expr_stmt><expr><name><name pos:line="140" pos:column="13">cfg<pos:position pos:line="140" pos:column="16"/></name><operator pos:line="140" pos:column="16">-&gt;<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="18">flags<pos:position pos:line="140" pos:column="23"/></name></name> <operator pos:line="140" pos:column="24">|=<pos:position pos:line="140" pos:column="26"/></operator> <name pos:line="140" pos:column="27">RULEFLAG_PASSTHROUGH<pos:position pos:line="140" pos:column="47"/></name></expr>;<pos:position pos:line="140" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="141" pos:column="10"/></block></then></if></elseif>
        <else pos:line="142" pos:column="9">else <block pos:line="142" pos:column="14">{
            <expr_stmt><expr><operator pos:line="143" pos:column="13">++<pos:position pos:line="143" pos:column="15"/></operator><name pos:line="143" pos:column="15">error<pos:position pos:line="143" pos:column="20"/></name></expr>;<pos:position pos:line="143" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="144" pos:column="10"/></block></else></if>
        <break pos:line="145" pos:column="9">break;<pos:position pos:line="145" pos:column="15"/></break>

    <case pos:line="147" pos:column="5">case <expr><literal type="char" pos:line="147" pos:column="10">'q'<pos:position pos:line="147" pos:column="13"/></literal></expr>:<pos:position pos:line="147" pos:column="14"/></case>
    <case pos:line="148" pos:column="5">case <expr><literal type="char" pos:line="148" pos:column="10">'Q'<pos:position pos:line="148" pos:column="13"/></literal></expr>:<pos:position pos:line="148" pos:column="14"/></case>
        <if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(   <expr><operator pos:line="149" pos:column="16">!<pos:position pos:line="149" pos:column="17"/></operator><call><name pos:line="149" pos:column="17">strcasecmp<pos:position pos:line="149" pos:column="27"/></name><argument_list pos:line="149" pos:column="27">(<argument><expr><name pos:line="149" pos:column="28">key<pos:position pos:line="149" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="33">"SA"<pos:position pos:line="149" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="38"/></argument_list></call>
            <operator pos:line="150" pos:column="13">||<pos:position pos:line="150" pos:column="15"/></operator> <operator pos:line="150" pos:column="16">!<pos:position pos:line="150" pos:column="17"/></operator><call><name pos:line="150" pos:column="17">strcasecmp<pos:position pos:line="150" pos:column="27"/></name><argument_list pos:line="150" pos:column="27">(<argument><expr><name pos:line="150" pos:column="28">key<pos:position pos:line="150" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="33">"sappend"<pos:position pos:line="150" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="44"/></condition><then pos:line="150" pos:column="44"> <block pos:line="150" pos:column="45">{              <comment type="block" pos:line="150" pos:column="60">/* qsappend */</comment>
            <macro><name pos:line="151" pos:column="13">cfg<pos:position pos:line="151" pos:column="16"/></name></macro><expr_stmt><expr><operator pos:line="151" pos:column="16">-&gt;<pos:position pos:line="151" pos:column="21"/></operator><macro><name pos:line="151" pos:column="18">f<pos:position pos:line="151" pos:column="19"/></name></macro></expr></expr_stmt></block></then></if></block></switch></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6935.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_task_do<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">h2_task<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">task<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">apr_thread_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">thread<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">worker_id<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">ap_assert<pos:position pos:line="3" pos:column="14"/></name><argument_list pos:line="3" pos:column="14">(<argument><expr><name pos:line="3" pos:column="15">task<pos:position pos:line="3" pos:column="19"/></name></expr></argument>)<pos:position pos:line="3" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="21"/></expr_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">task<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">c<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">master<pos:position pos:line="5" pos:column="24"/></name></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25"> <block pos:line="5" pos:column="26">{
        <comment type="block" pos:line="6" pos:column="9">/* Each conn_rec-&gt;id is supposed to be unique at a point in time. Since
         * some modules (and maybe external code) uses this id as an identifier
         * for the request_rec they handle, it needs to be unique for slave 
         * connections also.
         * The connection id is generated by the MPM and most MPMs use the formula
         *    id := (child_num * max_threads) + thread_num
         * which means that there is a maximum id of about
         *    idmax := max_child_count * max_threads
         * If we assume 2024 child processes with 2048 threads max, we get
         *    idmax ~= 2024 * 2048 = 2 ** 22
         * On 32 bit systems, we have not much space left, but on 64 bit systems
         * (and higher?) we can use the upper 32 bits without fear of collision.
         * 32 bits is just what we need, since a connection can only handle so
         * many streams. 
         */</comment>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">slave_id<pos:position pos:line="21" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="21" pos:column="23">free_bits<pos:position pos:line="21" pos:column="32"/></name></decl>;<pos:position pos:line="21" pos:column="33"/></decl_stmt>
        
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr pos:line="23" pos:column="13">sizeof<operator pos:line="23" pos:column="19">(<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">unsigned<pos:position pos:line="23" pos:column="28"/></name> <name pos:line="23" pos:column="29">long<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">)<pos:position pos:line="23" pos:column="34"/></operator> <operator pos:line="23" pos:column="35">&gt;=<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="38">8<pos:position pos:line="23" pos:column="39"/></literal></expr>)<pos:position pos:line="23" pos:column="40"/></condition><then pos:line="23" pos:column="40"> <block pos:line="23" pos:column="41">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">free_bits<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <literal type="number" pos:line="24" pos:column="25">32<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="25" pos:column="13">slave_id<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="24">task<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">stream_id<pos:position pos:line="25" pos:column="39"/></name></name></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then>
        <else pos:line="27" pos:column="9">else <block pos:line="27" pos:column="14">{
            <comment type="block" pos:line="28" pos:column="13">/* Assume we have a more limited number of threads/processes
             * and h2 workers on a 32-bit system. Use the worker instead
             * of the stream id. */</comment>
            <expr_stmt><expr><name pos:line="31" pos:column="13">free_bits<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <literal type="number" pos:line="31" pos:column="25">8<pos:position pos:line="31" pos:column="26"/></literal></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="32" pos:column="13">slave_id<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">worker_id<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt> 
        }<pos:position pos:line="33" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">task<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">c<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">id<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <operator pos:line="34" pos:column="23">(<pos:position pos:line="34" pos:column="24"/></operator><name><name pos:line="34" pos:column="24">task<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">c<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">master<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">-&gt;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="41">id<pos:position pos:line="34" pos:column="43"/></name></name> <operator pos:line="34" pos:column="44">&lt;&lt;<pos:position pos:line="34" pos:column="52"/></operator> <name pos:line="34" pos:column="47">free_bits<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">)<pos:position pos:line="34" pos:column="57"/></operator><operator pos:line="34" pos:column="57">^<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="58">slave_id<pos:position pos:line="34" pos:column="66"/></name></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">task<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">input<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">.<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">bb<pos:position pos:line="37" pos:column="19"/></name></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <call><name pos:line="37" pos:column="22">apr_brigade_create<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name><name pos:line="37" pos:column="41">task<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">pool<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="53">task<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">-&gt;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="59">c<pos:position pos:line="37" pos:column="60"/></name><operator pos:line="37" pos:column="60">-&gt;<pos:position pos:line="37" pos:column="65"/></operator><name pos:line="37" pos:column="62">bucket_alloc<pos:position pos:line="37" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="76"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">task<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">request<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">serialize<pos:position pos:line="38" pos:column="33"/></name></name></expr>)<pos:position pos:line="38" pos:column="34"/></condition><then pos:line="38" pos:column="34"> <block pos:line="38" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ap_log_cerror<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">APLOG_MARK<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">APLOG_TRACE1<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="49">0<pos:position pos:line="39" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="52">task<pos:position pos:line="39" pos:column="56"/></name><operator pos:line="39" pos:column="56">-&gt;<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="58">c<pos:position pos:line="39" pos:column="59"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="40" pos:column="23">"h2_task(%s): serialize request %s %s"<pos:position pos:line="40" pos:column="61"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="41" pos:column="23">task<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">id<pos:position pos:line="41" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="33">task<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">request<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">method<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="56">task<pos:position pos:line="41" pos:column="60"/></name><operator pos:line="41" pos:column="60">-&gt;<pos:position pos:line="41" pos:column="65"/></operator><name pos:line="41" pos:column="62">request<pos:position pos:line="41" pos:column="69"/></name><operator pos:line="41" pos:column="69">-&gt;<pos:position pos:line="41" pos:column="74"/></operator><name pos:line="41" pos:column="71">path<pos:position pos:line="41" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">apr_brigade_printf<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">task<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">input<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">.<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="40">bb<pos:position pos:line="42" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">NULL<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, 
                           <argument><expr><name pos:line="43" pos:column="28">NULL<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="34">"%s %s HTTP/1.1\r\n"<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>, 
                           <argument><expr><name><name pos:line="44" pos:column="28">task<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">request<pos:position pos:line="44" pos:column="41"/></name><operator pos:line="44" pos:column="41">-&gt;<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="43">method<pos:position pos:line="44" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="51">task<pos:position pos:line="44" pos:column="55"/></name><operator pos:line="44" pos:column="55">-&gt;<pos:position pos:line="44" pos:column="60"/></operator><name pos:line="44" pos:column="57">request<pos:position pos:line="44" pos:column="64"/></name><operator pos:line="44" pos:column="64">-&gt;<pos:position pos:line="44" pos:column="69"/></operator><name pos:line="44" pos:column="66">path<pos:position pos:line="44" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">apr_table_do<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">input_ser_header<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">task<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="46">task<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">-&gt;<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="52">request<pos:position pos:line="45" pos:column="59"/></name><operator pos:line="45" pos:column="59">-&gt;<pos:position pos:line="45" pos:column="64"/></operator><name pos:line="45" pos:column="61">headers<pos:position pos:line="45" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="70">NULL<pos:position pos:line="45" pos:column="74"/></name></expr></argument>)<pos:position pos:line="45" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">apr_brigade_puts<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name><name pos:line="46" pos:column="26">task<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">input<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">.<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="38">bb<pos:position pos:line="46" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">NULL<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">NULL<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="54">"\r\n"<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">ap_log_cerror<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">APLOG_MARK<pos:position pos:line="49" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="31">APLOG_TRACE1<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="45">0<pos:position pos:line="49" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="48">task<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">-&gt;<pos:position pos:line="49" pos:column="57"/></operator><name pos:line="49" pos:column="54">c<pos:position pos:line="49" pos:column="55"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="50" pos:column="19">"h2_task(%s): process connection"<pos:position pos:line="50" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="54">task<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">-&gt;<pos:position pos:line="50" pos:column="63"/></operator><name pos:line="50" pos:column="60">id<pos:position pos:line="50" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">task<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">c<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">current_thread<pos:position pos:line="51" pos:column="28"/></name></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">thread<pos:position pos:line="51" pos:column="37"/></name></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt> 
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">ap_run_process_connection<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name><name pos:line="52" pos:column="31">task<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">-&gt;<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="37">c<pos:position pos:line="52" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
    
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name><name pos:line="54" pos:column="9">task<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">frozen<pos:position pos:line="54" pos:column="21"/></name></name></expr>)<pos:position pos:line="54" pos:column="22"/></condition><then pos:line="54" pos:column="22"> <block pos:line="54" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ap_log_cerror<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">APLOG_MARK<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="35">APLOG_TRACE1<pos:position pos:line="55" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="49">0<pos:position pos:line="55" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="52">task<pos:position pos:line="55" pos:column="56"/></name><operator pos:line="55" pos:column="56">-&gt;<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="58">c<pos:position pos:line="55" pos:column="59"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="56" pos:column="23">"h2_task(%s): process_conn returned frozen task"<pos:position pos:line="56" pos:column="71"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="57" pos:column="23">task<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">-&gt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">id<pos:position pos:line="57" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
        <comment type="block" pos:line="58" pos:column="9">/* cleanup delayed */</comment>
        <return pos:line="59" pos:column="9">return <expr><name pos:line="59" pos:column="16">APR_EAGAIN<pos:position pos:line="59" pos:column="26"/></name></expr>;<pos:position pos:line="59" pos:column="27"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <else pos:line="61" pos:column="5">else <block pos:line="61" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">ap_log_cerror<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><name pos:line="62" pos:column="23">APLOG_MARK<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">APLOG_TRACE1<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="49">0<pos:position pos:line="62" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="52">task<pos:position pos:line="62" pos:column="56"/></name><operator pos:line="62" pos:column="56">-&gt;<pos:position pos:line="62" pos:column="61"/></operator><name pos:line="62" pos:column="58">c<pos:position pos:line="62" pos:column="59"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="63" pos:column="23">"h2_task(%s): processing done"<pos:position pos:line="63" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="55">task<pos:position pos:line="63" pos:column="59"/></name><operator pos:line="63" pos:column="59">-&gt;<pos:position pos:line="63" pos:column="64"/></operator><name pos:line="63" pos:column="61">id<pos:position pos:line="63" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>
        <return pos:line="64" pos:column="9">return <expr><call><name pos:line="64" pos:column="16">output_finish<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">task<pos:position pos:line="64" pos:column="34"/></name></expr></argument>)<pos:position pos:line="64" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="36"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></else></if>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2819.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">unescape_url<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">url<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">forbid<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">reserved<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">register<pos:position pos:line="3" pos:column="13"/></specifier> <name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">badesc<pos:position pos:line="3" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="26">badpath<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">x<pos:position pos:line="4" pos:column="12"/></name></decl>, <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="15">y<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">badesc<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">badpath<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
    <comment type="block" pos:line="8" pos:column="5">/* Initial scan for first '%'. Don't bother writing values before
     * seeing a '%' */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">y<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">strchr<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">url<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="21">'%'<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">y<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19"> <block pos:line="11" pos:column="20">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">OK<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">x<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">y<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">y<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></condition> <incr><expr><operator pos:line="14" pos:column="21">++<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">x<pos:position pos:line="14" pos:column="24"/></name></expr><operator pos:line="14" pos:column="24">,<pos:position pos:line="14" pos:column="25"/></operator> <expr><operator pos:line="14" pos:column="26">++<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">y<pos:position pos:line="14" pos:column="29"/></name></expr></incr>)<pos:position pos:line="14" pos:column="30"/></control> <block pos:line="14" pos:column="31">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">*<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">y<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">!=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="char" pos:line="15" pos:column="19">'%'<pos:position pos:line="15" pos:column="22"/></literal></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23"> <block pos:line="15" pos:column="24">{
            <expr_stmt><expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">x<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">y<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then>
        <else pos:line="18" pos:column="9">else <block pos:line="18" pos:column="14">{
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><operator pos:line="19" pos:column="17">!<pos:position pos:line="19" pos:column="18"/></operator><call><name pos:line="19" pos:column="18">apr_isxdigit<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><operator pos:line="19" pos:column="31">*<pos:position pos:line="19" pos:column="32"/></operator><operator pos:line="19" pos:column="32">(<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">y<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">+<pos:position pos:line="19" pos:column="36"/></operator> <literal type="number" pos:line="19" pos:column="37">1<pos:position pos:line="19" pos:column="38"/></literal><operator pos:line="19" pos:column="38">)<pos:position pos:line="19" pos:column="39"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call> <operator pos:line="19" pos:column="41">||<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="44">!<pos:position pos:line="19" pos:column="45"/></operator><call><name pos:line="19" pos:column="45">apr_isxdigit<pos:position pos:line="19" pos:column="57"/></name><argument_list pos:line="19" pos:column="57">(<argument><expr><operator pos:line="19" pos:column="58">*<pos:position pos:line="19" pos:column="59"/></operator><operator pos:line="19" pos:column="59">(<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="60">y<pos:position pos:line="19" pos:column="61"/></name> <operator pos:line="19" pos:column="62">+<pos:position pos:line="19" pos:column="63"/></operator> <literal type="number" pos:line="19" pos:column="64">2<pos:position pos:line="19" pos:column="65"/></literal><operator pos:line="19" pos:column="65">)<pos:position pos:line="19" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="68"/></condition><then pos:line="19" pos:column="68"> <block pos:line="19" pos:column="69">{
                <expr_stmt><expr><name pos:line="20" pos:column="17">badesc<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">x<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="char" pos:line="21" pos:column="22">'%'<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></then>
            <else pos:line="23" pos:column="13">else <block pos:line="23" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="24" pos:column="17">char<pos:position pos:line="24" pos:column="21"/></name></type> <name pos:line="24" pos:column="22">decoded<pos:position pos:line="24" pos:column="29"/></name></decl>;<pos:position pos:line="24" pos:column="30"/></decl_stmt>
                <expr_stmt><expr><name pos:line="25" pos:column="17">decoded<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <call><name pos:line="25" pos:column="27">x2c<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">y<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">+<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="35">1<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">decoded<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">==<pos:position pos:line="26" pos:column="32"/></operator> <literal type="char" pos:line="26" pos:column="33">'\0'<pos:position pos:line="26" pos:column="37"/></literal><operator pos:line="26" pos:column="37">)<pos:position pos:line="26" pos:column="38"/></operator>
                    <operator pos:line="27" pos:column="21">||<pos:position pos:line="27" pos:column="23"/></operator> <operator pos:line="27" pos:column="24">(<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">forbid<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">&amp;&amp;<pos:position pos:line="27" pos:column="42"/></operator> <call><name pos:line="27" pos:column="35">ap_strchr_c<pos:position pos:line="27" pos:column="46"/></name><argument_list pos:line="27" pos:column="46">(<argument><expr><name pos:line="27" pos:column="47">forbid<pos:position pos:line="27" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">decoded<pos:position pos:line="27" pos:column="62"/></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call><operator pos:line="27" pos:column="63">)<pos:position pos:line="27" pos:column="64"/></operator></expr>)<pos:position pos:line="27" pos:column="65"/></condition><then pos:line="27" pos:column="65"> <block pos:line="27" pos:column="66">{
                    <expr_stmt><expr><name pos:line="28" pos:column="21">badpath<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <literal type="number" pos:line="28" pos:column="31">1<pos:position pos:line="28" pos:column="32"/></literal></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">x<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">decoded<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="30" pos:column="21">y<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">+=<pos:position pos:line="30" pos:column="25"/></operator> <literal type="number" pos:line="30" pos:column="26">2<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
                }<pos:position pos:line="31" pos:column="18"/></block></then>
                <elseif pos:line="32" pos:column="17">else <if pos:line="32" pos:column="22">if <condition pos:line="32" pos:column="25">(<expr><name pos:line="32" pos:column="26">reserved<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">&amp;&amp;<pos:position pos:line="32" pos:column="45"/></operator> <call><name pos:line="32" pos:column="38">ap_strchr_c<pos:position pos:line="32" pos:column="49"/></name><argument_list pos:line="32" pos:column="49">(<argument><expr><name pos:line="32" pos:column="50">reserved<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="60">decoded<pos:position pos:line="32" pos:column="67"/></name></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="69"/></condition><then pos:line="32" pos:column="69"> <block pos:line="32" pos:column="70">{
                    <expr_stmt><expr><operator pos:line="33" pos:column="21">*<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">x<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">++<pos:position pos:line="33" pos:column="25"/></operator> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <operator pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="29">y<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">++<pos:position pos:line="33" pos:column="32"/></operator></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="34" pos:column="21">*<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">x<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">++<pos:position pos:line="34" pos:column="25"/></operator> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <operator pos:line="34" pos:column="28">*<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">y<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">++<pos:position pos:line="34" pos:column="32"/></operator></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="35" pos:column="21">*<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">x<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <operator pos:line="35" pos:column="26">*<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">y<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
                }<pos:position pos:line="36" pos:column="18"/></block></then></if></elseif>
                <else pos:line="37" pos:column="17">else <block pos:line="37" pos:column="22">{
                    <expr_stmt><expr><operator pos:line="38" pos:column="21">*<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">x<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">decoded<pos:position pos:line="38" pos:column="33"/></name></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="39" pos:column="21">y<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">+=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">2<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
                }<pos:position pos:line="40" pos:column="18"/></block></else></if>
            }<pos:position pos:line="41" pos:column="14"/></block></else></if>
        }<pos:position pos:line="42" pos:column="10"/></block></else></if>
    }<pos:position pos:line="43" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="44" pos:column="5">*<pos:position pos:line="44" pos:column="6"/></operator><name pos:line="44" pos:column="6">x<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">=<pos:position pos:line="44" pos:column="9"/></operator> <literal type="char" pos:line="44" pos:column="10">'\0'<pos:position pos:line="44" pos:column="14"/></literal></expr>;<pos:position pos:line="44" pos:column="15"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">badesc<pos:position pos:line="45" pos:column="15"/></name></expr>)<pos:position pos:line="45" pos:column="16"/></condition><then pos:line="45" pos:column="16"> <block pos:line="45" pos:column="17">{
        <return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="46" pos:column="32"/></name></expr>;<pos:position pos:line="46" pos:column="33"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><name pos:line="48" pos:column="14">badpath<pos:position pos:line="48" pos:column="21"/></name></expr>)<pos:position pos:line="48" pos:column="22"/></condition><then pos:line="48" pos:column="22"> <block pos:line="48" pos:column="23">{
        <return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="49" pos:column="30"/></name></expr>;<pos:position pos:line="49" pos:column="31"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if></elseif>
    <else pos:line="51" pos:column="5">else <block pos:line="51" pos:column="10">{
        <return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">OK<pos:position pos:line="52" pos:column="18"/></name></expr>;<pos:position pos:line="52" pos:column="19"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></else></if>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

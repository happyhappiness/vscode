<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_989_httpd-2.4.25.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lua_db_get_row<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">lua_State<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">L<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> 
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">row_no<pos:position pos:line="3" pos:column="15"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="16">x<pos:position pos:line="3" pos:column="17"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="18">alpha<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name>      <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">entry<pos:position pos:line="4" pos:column="27"/></name></decl>, <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="30">rowname<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_dbd_row_t<pos:position pos:line="5" pos:column="18"/></name>   <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">row<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">lua_db_result_set<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">res<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><call><name pos:line="6" pos:column="30">lua_get_result_set<pos:position pos:line="6" pos:column="48"/></name><argument_list pos:line="6" pos:column="48">(<argument><expr><name pos:line="6" pos:column="49">L<pos:position pos:line="6" pos:column="50"/></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="8" pos:column="5">row_no<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">luaL_optinteger<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">L<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="33">2<pos:position pos:line="8" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="36">0<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">lua_isboolean<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">L<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="26">3<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29"> <block pos:line="9" pos:column="30">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">alpha<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">lua_toboolean<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">L<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="34">3<pos:position pos:line="10" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">lua_settop<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">L<pos:position pos:line="12" pos:column="17"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    
    <comment type="block" pos:line="14" pos:column="5">/* Fetch all rows at once? */</comment>
    
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">row_no<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21"> <block pos:line="16" pos:column="22">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">row_no<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">1<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">lua_newtable<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">L<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
        <while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><call><name pos:line="19" pos:column="16">apr_dbd_get_row<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name><name pos:line="19" pos:column="32">res<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">driver<pos:position pos:line="19" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="45">res<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">-&gt;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="50">pool<pos:position pos:line="19" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="56">res<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">-&gt;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="61">results<pos:position pos:line="19" pos:column="68"/></name></name></expr></argument>,
                            <argument><expr><operator pos:line="20" pos:column="29">&amp;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="30">row<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="35">-<pos:position pos:line="20" pos:column="36"/></operator><literal type="number" pos:line="20" pos:column="36">1<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call> <operator pos:line="20" pos:column="39">!=<pos:position pos:line="20" pos:column="41"/></operator> <operator pos:line="20" pos:column="42">-<pos:position pos:line="20" pos:column="43"/></operator><literal type="number" pos:line="20" pos:column="43">1<pos:position pos:line="20" pos:column="44"/></literal></expr>)<pos:position pos:line="20" pos:column="45"/></condition>
         <block pos:line="21" pos:column="10">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">lua_pushinteger<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">L<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">row_no<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">lua_newtable<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">L<pos:position pos:line="23" pos:column="27"/></name></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
            <for pos:line="24" pos:column="13">for <control pos:line="24" pos:column="17">(<init><expr><name pos:line="24" pos:column="18">x<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></init> <condition><expr><name pos:line="24" pos:column="25">x<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">&lt;<pos:position pos:line="24" pos:column="31"/></operator> <name><name pos:line="24" pos:column="29">res<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">cols<pos:position pos:line="24" pos:column="38"/></name></name></expr>;<pos:position pos:line="24" pos:column="39"/></condition> <incr><expr><name pos:line="24" pos:column="40">x<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">++<pos:position pos:line="24" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="44"/></control> <block pos:line="24" pos:column="45">{
                <expr_stmt><expr><name pos:line="25" pos:column="17">entry<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <call><name pos:line="25" pos:column="25">apr_dbd_get_entry<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">(<argument><expr><name><name pos:line="25" pos:column="43">res<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">driver<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">row<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">x<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">entry<pos:position pos:line="26" pos:column="26"/></name></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block pos:line="26" pos:column="28">{
                    <if pos:line="27" pos:column="21">if <condition pos:line="27" pos:column="24">(<expr><name pos:line="27" pos:column="25">alpha<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">==<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr>)<pos:position pos:line="27" pos:column="36"/></condition><then pos:line="27" pos:column="36"> <block pos:line="27" pos:column="37">{
                        <expr_stmt><expr><name pos:line="28" pos:column="25">rowname<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <call><name pos:line="28" pos:column="35">apr_dbd_get_name<pos:position pos:line="28" pos:column="51"/></name><argument_list pos:line="28" pos:column="51">(<argument><expr><name><name pos:line="28" pos:column="52">res<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">-&gt;<pos:position pos:line="28" pos:column="60"/></operator><name pos:line="28" pos:column="57">driver<pos:position pos:line="28" pos:column="63"/></name></name></expr></argument>, 
                                <argument><expr><name><name pos:line="29" pos:column="33">res<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">results<pos:position pos:line="29" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="47">x<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="30" pos:column="25">lua_pushstring<pos:position pos:line="30" pos:column="39"/></name><argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">L<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="30" pos:column="43">rowname<pos:position pos:line="30" pos:column="50"/></name></expr> ?<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52"> <expr><name pos:line="30" pos:column="53">rowname<pos:position pos:line="30" pos:column="60"/></name></expr> <pos:position pos:line="30" pos:column="61"/></then><else pos:line="30" pos:column="61">: <expr><literal type="string" pos:line="30" pos:column="63">"(oob)"<pos:position pos:line="30" pos:column="70"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
                    }<pos:position pos:line="31" pos:column="22"/></block></then>
                    <else pos:line="32" pos:column="21">else <block pos:line="32" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="33" pos:column="25">lua_pushinteger<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">L<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">x<pos:position pos:line="33" pos:column="45"/></name> <operator pos:line="33" pos:column="46">+<pos:position pos:line="33" pos:column="47"/></operator> <literal type="number" pos:line="33" pos:column="48">1<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
                    }<pos:position pos:line="34" pos:column="22"/></block></else></if>
                    <expr_stmt><expr><call><name pos:line="35" pos:column="21">lua_pushstring<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">L<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">entry<pos:position pos:line="35" pos:column="44"/></name></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="36" pos:column="21">lua_rawset<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">L<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="35">-<pos:position pos:line="36" pos:column="36"/></operator><literal type="number" pos:line="36" pos:column="36">3<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="37" pos:column="18"/></block></then></if>
            }<pos:position pos:line="38" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">lua_rawset<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">L<pos:position pos:line="39" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="27">-<pos:position pos:line="39" pos:column="28"/></operator><literal type="number" pos:line="39" pos:column="28">3<pos:position pos:line="39" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">row_no<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">++<pos:position pos:line="40" pos:column="21"/></operator></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></while>
        <return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">1<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="45" pos:column="5">/* Just fetch a single row */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">apr_dbd_get_row<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name><name pos:line="46" pos:column="25">res<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">driver<pos:position pos:line="46" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="38">res<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">-&gt;<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="43">pool<pos:position pos:line="46" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="49">res<pos:position pos:line="46" pos:column="52"/></name><operator pos:line="46" pos:column="52">-&gt;<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="54">results<pos:position pos:line="46" pos:column="61"/></name></name></expr></argument>,
                            <argument><expr><operator pos:line="47" pos:column="29">&amp;<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="30">row<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">row_no<pos:position pos:line="47" pos:column="41"/></name></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call> <operator pos:line="47" pos:column="43">!=<pos:position pos:line="47" pos:column="45"/></operator> <operator pos:line="47" pos:column="46">-<pos:position pos:line="47" pos:column="47"/></operator><literal type="number" pos:line="47" pos:column="47">1<pos:position pos:line="47" pos:column="48"/></literal></expr>)<pos:position pos:line="47" pos:column="49"/></condition><then pos:line="47" pos:column="49">
         <block pos:line="48" pos:column="10">{
        
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">lua_newtable<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">L<pos:position pos:line="50" pos:column="23"/></name></expr></argument>)<pos:position pos:line="50" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>
        <for pos:line="51" pos:column="9">for <control pos:line="51" pos:column="13">(<init><expr><name pos:line="51" pos:column="14">x<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <literal type="number" pos:line="51" pos:column="18">0<pos:position pos:line="51" pos:column="19"/></literal></expr>;<pos:position pos:line="51" pos:column="20"/></init> <condition><expr><name pos:line="51" pos:column="21">x<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">&lt;<pos:position pos:line="51" pos:column="27"/></operator> <name><name pos:line="51" pos:column="25">res<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">cols<pos:position pos:line="51" pos:column="34"/></name></name></expr>;<pos:position pos:line="51" pos:column="35"/></condition> <incr><expr><name pos:line="51" pos:column="36">x<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">++<pos:position pos:line="51" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="40"/></control> <block pos:line="51" pos:column="41">{
            <expr_stmt><expr><name pos:line="52" pos:column="13">entry<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <call><name pos:line="52" pos:column="21">apr_dbd_get_entry<pos:position pos:line="52" pos:column="38"/></name><argument_list pos:line="52" pos:column="38">(<argument><expr><name><name pos:line="52" pos:column="39">res<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">-&gt;<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="44">driver<pos:position pos:line="52" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="52">row<pos:position pos:line="52" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="57">x<pos:position pos:line="52" pos:column="58"/></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="60"/></expr_stmt>
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><name pos:line="53" pos:column="17">entry<pos:position pos:line="53" pos:column="22"/></name></expr>)<pos:position pos:line="53" pos:column="23"/></condition><then pos:line="53" pos:column="23"> <block pos:line="53" pos:column="24">{
                <if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">alpha<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">==<pos:position pos:line="54" pos:column="29"/></operator> <literal type="number" pos:line="54" pos:column="30">1<pos:position pos:line="54" pos:column="31"/></literal></expr>)<pos:position pos:line="54" pos:column="32"/></condition><then pos:line="54" pos:column="32"> <block pos:line="54" pos:column="33">{
                    <expr_stmt><expr><name pos:line="55" pos:column="21">rowname<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <call><name pos:line="55" pos:column="31">apr_dbd_get_name<pos:position pos:line="55" pos:column="47"/></name><argument_list pos:line="55" pos:column="47">(<argument><expr><name><name pos:line="55" pos:column="48">res<pos:position pos:line="55" pos:column="51"/></name><operator pos:line="55" pos:column="51">-&gt;<pos:position pos:line="55" pos:column="56"/></operator><name pos:line="55" pos:column="53">driver<pos:position pos:line="55" pos:column="59"/></name></name></expr></argument>, 
                            <argument><expr><name><name pos:line="56" pos:column="29">res<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">results<pos:position pos:line="56" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="43">x<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="57" pos:column="21">lua_pushstring<pos:position pos:line="57" pos:column="35"/></name><argument_list pos:line="57" pos:column="35">(<argument><expr><name pos:line="57" pos:column="36">L<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="57" pos:column="39">rowname<pos:position pos:line="57" pos:column="46"/></name></expr> ?<pos:position pos:line="57" pos:column="48"/></condition><then pos:line="57" pos:column="48"> <expr><name pos:line="57" pos:column="49">rowname<pos:position pos:line="57" pos:column="56"/></name></expr> <pos:position pos:line="57" pos:column="57"/></then><else pos:line="57" pos:column="57">: <expr><literal type="string" pos:line="57" pos:column="59">"(oob)"<pos:position pos:line="57" pos:column="66"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="68"/></expr_stmt>
                }<pos:position pos:line="58" pos:column="18"/></block></then>
                <else pos:line="59" pos:column="17">else <block pos:line="59" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="60" pos:column="21">lua_pushinteger<pos:position pos:line="60" pos:column="36"/></name><argument_list pos:line="60" pos:column="36">(<argument><expr><name pos:line="60" pos:column="37">L<pos:position pos:line="60" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="40">x<pos:position pos:line="60" pos:column="41"/></name> <operator pos:line="60" pos:column="42">+<pos:position pos:line="60" pos:column="43"/></operator> <literal type="number" pos:line="60" pos:column="44">1<pos:position pos:line="60" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="61" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">lua_pushstring<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">L<pos:position pos:line="62" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="35">entry<pos:position pos:line="62" pos:column="40"/></name></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">lua_rawset<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><name pos:line="63" pos:column="28">L<pos:position pos:line="63" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="31">-<pos:position pos:line="63" pos:column="32"/></operator><literal type="number" pos:line="63" pos:column="32">3<pos:position pos:line="63" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="64" pos:column="14"/></block></then></if>
        }<pos:position pos:line="65" pos:column="10"/></block></for>
        <return pos:line="66" pos:column="9">return <expr><literal type="number" pos:line="66" pos:column="16">1<pos:position pos:line="66" pos:column="17"/></literal></expr>;<pos:position pos:line="66" pos:column="18"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
    <return pos:line="68" pos:column="5">return <expr><literal type="number" pos:line="68" pos:column="12">0<pos:position pos:line="68" pos:column="13"/></literal></expr>;<pos:position pos:line="68" pos:column="14"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

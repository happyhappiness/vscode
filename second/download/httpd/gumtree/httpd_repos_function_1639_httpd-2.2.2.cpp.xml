<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1639_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">finish_partial_char<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">charset_filter_ctx_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">ctx<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                        <comment type="block" pos:line="2" pos:column="41">/* input buffer: */</comment>
                                        <parameter><decl><type><specifier pos:line="3" pos:column="41">const<pos:position pos:line="3" pos:column="46"/></specifier> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier><modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">cur_str<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="4" pos:column="41">apr_size_t<pos:position pos:line="4" pos:column="51"/></name> <modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type><name pos:line="4" pos:column="53">cur_len<pos:position pos:line="4" pos:column="60"/></name></decl></parameter>,
                                        <comment type="block" pos:line="5" pos:column="41">/* output buffer: */</comment>
                                        <parameter><decl><type><name pos:line="6" pos:column="41">char<pos:position pos:line="6" pos:column="45"/></name> <modifier pos:line="6" pos:column="46">*<pos:position pos:line="6" pos:column="47"/></modifier><modifier pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></modifier></type><name pos:line="6" pos:column="48">out_str<pos:position pos:line="6" pos:column="55"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="7" pos:column="41">apr_size_t<pos:position pos:line="7" pos:column="51"/></name> <modifier pos:line="7" pos:column="52">*<pos:position pos:line="7" pos:column="53"/></modifier></type><name pos:line="7" pos:column="53">out_len<pos:position pos:line="7" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="61"/></parameter_list>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">tmp_input_len<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* Keep adding bytes from the input string to the saved string until we
     *    1) finish the input char
     *    2) get an error
     * or 3) run out of bytes to add
     */</comment>

    <do pos:line="18" pos:column="5">do <block pos:line="18" pos:column="8">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">ctx<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">buf<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><name><name pos:line="19" pos:column="18">ctx<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">saved<pos:position pos:line="19" pos:column="28"/></name></name></expr>]<pos:position pos:line="19" pos:column="29"/></index></name> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <operator pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></operator><operator pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">cur_str<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="20" pos:column="9">++<pos:position pos:line="20" pos:column="11"/></operator><name><name pos:line="20" pos:column="11">ctx<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">saved<pos:position pos:line="20" pos:column="21"/></name></name></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="21" pos:column="9">++<pos:position pos:line="21" pos:column="11"/></operator><operator pos:line="21" pos:column="11">*<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">cur_str<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">--<pos:position pos:line="22" pos:column="11"/></operator><operator pos:line="22" pos:column="11">*<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">cur_len<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">tmp_input_len<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name><name pos:line="23" pos:column="25">ctx<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">saved<pos:position pos:line="23" pos:column="35"/></name></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">rv<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">apr_xlate_conv_buffer<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name><name pos:line="24" pos:column="36">ctx<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">xlate<pos:position pos:line="24" pos:column="46"/></name></name></expr></argument>,
                                   <argument><expr><name><name pos:line="25" pos:column="36">ctx<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">buf<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>,
                                   <argument><expr><operator pos:line="26" pos:column="36">&amp;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="37">tmp_input_len<pos:position pos:line="26" pos:column="50"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="27" pos:column="36">*<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">out_str<pos:position pos:line="27" pos:column="44"/></name></expr></argument>,
                                   <argument><expr><name pos:line="28" pos:column="36">out_len<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block> while <condition pos:line="29" pos:column="13">(<expr><name pos:line="29" pos:column="14">rv<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">==<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">APR_INCOMPLETE<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">&amp;&amp;<pos:position pos:line="29" pos:column="45"/></operator> <operator pos:line="29" pos:column="38">*<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="39">cur_len<pos:position pos:line="29" pos:column="46"/></name></expr>)<pos:position pos:line="29" pos:column="47"/></condition>;<pos:position pos:line="29" pos:column="48"/></do>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">rv<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">==<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">APR_SUCCESS<pos:position pos:line="31" pos:column="26"/></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <block pos:line="31" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">ctx<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">saved<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="22">0<pos:position pos:line="32" pos:column="23"/></literal></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then>
    <else pos:line="34" pos:column="5">else <block pos:line="34" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">ctx<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">ees<pos:position pos:line="35" pos:column="17"/></name></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">EES_LIMIT<pos:position pos:line="35" pos:column="29"/></name></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt> <comment type="block" pos:line="35" pos:column="31">/* code isn't smart enough to handle chars
                               * straddling more than two buckets
                               */</comment>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">rv<pos:position pos:line="40" pos:column="14"/></name></expr>;<pos:position pos:line="40" pos:column="15"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

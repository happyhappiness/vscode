<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1321_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">create_entity<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">cache_handle_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">h<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">request_rec<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">r<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">key<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">apr_off_t<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">len<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="24">apr_bucket_brigade<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">bb<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">cache_socache_dir_conf<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">dconf<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">=
            <expr><call><name pos:line="5" pos:column="13">ap_get_module_config<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><name><name pos:line="5" pos:column="34">r<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">per_dir_config<pos:position pos:line="5" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="53">&amp;<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="54">cache_socache_module<pos:position pos:line="5" pos:column="74"/></name></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">cache_socache_conf<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">conf<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><call><name pos:line="6" pos:column="32">ap_get_module_config<pos:position pos:line="6" pos:column="52"/></name><argument_list pos:line="6" pos:column="52">(<argument><expr><name><name pos:line="6" pos:column="53">r<pos:position pos:line="6" pos:column="54"/></name><operator pos:line="6" pos:column="54">-&gt;<pos:position pos:line="6" pos:column="59"/></operator><name pos:line="6" pos:column="56">server<pos:position pos:line="6" pos:column="62"/></name><operator pos:line="6" pos:column="62">-&gt;<pos:position pos:line="6" pos:column="67"/></operator><name pos:line="6" pos:column="64">module_config<pos:position pos:line="6" pos:column="77"/></name></name></expr></argument>,
            <argument><expr><operator pos:line="7" pos:column="13">&amp;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="14">cache_socache_module<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">cache_object_t<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">obj<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">cache_socache_object_t<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">sobj<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">total<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">conf<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">provider<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">==<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="27">NULL<pos:position pos:line="12" pos:column="31"/></name></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32"> <block pos:line="12" pos:column="33">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">DECLINED<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* we don't support caching of range requests (yet) */</comment>
    <comment type="block" pos:line="17" pos:column="5">/* TODO: but we could */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">r<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">status<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">==<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">HTTP_PARTIAL_CONTENT<pos:position pos:line="18" pos:column="42"/></name></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">ap_log_rerror<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">APLOG_MARK<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">APLOG_DEBUG<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="48">0<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">r<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="54">APLOGNO<pos:position pos:line="19" pos:column="61"/></name><argument_list pos:line="19" pos:column="61">(<argument><expr><literal type="number" pos:line="19" pos:column="62">02345<pos:position pos:line="19" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="20" pos:column="17">"URL %s partial content response not cached"<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>,
                <argument><expr><name pos:line="21" pos:column="17">key<pos:position pos:line="21" pos:column="20"/></name></expr></argument>)<pos:position pos:line="21" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">DECLINED<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/*
     * We have a chicken and egg problem. We don't know until we
     * attempt to store_headers just how big the response will be
     * and whether it will fit in the cache limits set. But we
     * need to make a decision now as to whether we plan to try.
     * If we make the wrong decision, we could prevent another
     * cache implementation, such as cache_disk, from getting the
     * opportunity to cache, and that would be unfortunate.
     *
     * In a series of tests, from cheapest to most expensive,
     * decide whether or not to ignore this attempt to cache,
     * with a small margin just to be sure.
     */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">len<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">&lt;<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="15">0<pos:position pos:line="38" pos:column="16"/></literal></expr>)<pos:position pos:line="38" pos:column="17"/></condition><then pos:line="38" pos:column="17"> <block pos:line="38" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ap_log_rerror<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">APLOG_MARK<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">APLOG_DEBUG<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="48">0<pos:position pos:line="39" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="51">r<pos:position pos:line="39" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="54">APLOGNO<pos:position pos:line="39" pos:column="61"/></name><argument_list pos:line="39" pos:column="61">(<argument><expr><literal type="number" pos:line="39" pos:column="62">02346<pos:position pos:line="39" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="40" pos:column="17">"URL '%s' had no explicit size, ignoring"<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">key<pos:position pos:line="40" pos:column="63"/></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt>
        <return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">DECLINED<pos:position pos:line="41" pos:column="24"/></name></expr>;<pos:position pos:line="41" pos:column="25"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">len<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">&gt;<pos:position pos:line="43" pos:column="17"/></operator> <name><name pos:line="43" pos:column="15">dconf<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">max<pos:position pos:line="43" pos:column="25"/></name></name></expr>)<pos:position pos:line="43" pos:column="26"/></condition><then pos:line="43" pos:column="26"> <block pos:line="43" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_log_rerror<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">APLOG_MARK<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="35">APLOG_DEBUG<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="48">0<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">r<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="54">APLOGNO<pos:position pos:line="44" pos:column="61"/></name><argument_list pos:line="44" pos:column="61">(<argument><expr><literal type="number" pos:line="44" pos:column="62">02347<pos:position pos:line="44" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="45" pos:column="17">"URL '%s' body larger than limit, ignoring "<pos:position pos:line="45" pos:column="61"/></literal>
                <literal type="string" pos:line="46" pos:column="17">"(%"<pos:position pos:line="46" pos:column="21"/></literal> <name pos:line="46" pos:column="22">APR_OFF_T_FMT<pos:position pos:line="46" pos:column="35"/></name> <literal type="string" pos:line="46" pos:column="36">" &gt; %"<pos:position pos:line="46" pos:column="45"/></literal> <name pos:line="46" pos:column="43">APR_OFF_T_FMT<pos:position pos:line="46" pos:column="56"/></name> <literal type="string" pos:line="46" pos:column="57">")"<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>,
                <argument><expr><name pos:line="47" pos:column="17">key<pos:position pos:line="47" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="22">len<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="27">dconf<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">max<pos:position pos:line="47" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">DECLINED<pos:position pos:line="48" pos:column="24"/></name></expr>;<pos:position pos:line="48" pos:column="25"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="51" pos:column="5">/* estimate the total cached size, given current headers */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">total<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <name pos:line="52" pos:column="13">len<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">+<pos:position pos:line="52" pos:column="18"/></operator> <sizeof pos:line="52" pos:column="19">sizeof<argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">cache_socache_info_t<pos:position pos:line="52" pos:column="46"/></name></expr></argument>)<pos:position pos:line="52" pos:column="47"/></argument_list></sizeof> <operator pos:line="52" pos:column="48">+<pos:position pos:line="52" pos:column="49"/></operator> <call><name pos:line="52" pos:column="50">strlen<pos:position pos:line="52" pos:column="56"/></name><argument_list pos:line="52" pos:column="56">(<argument><expr><name pos:line="52" pos:column="57">key<pos:position pos:line="52" pos:column="60"/></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="62"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">APR_SUCCESS<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">!=<pos:position pos:line="53" pos:column="23"/></operator> <call><name pos:line="53" pos:column="24">store_table<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name><name pos:line="53" pos:column="36">r<pos:position pos:line="53" pos:column="37"/></name><operator pos:line="53" pos:column="37">-&gt;<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="39">headers_out<pos:position pos:line="53" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">NULL<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="58">dconf<pos:position pos:line="53" pos:column="63"/></name><operator pos:line="53" pos:column="63">-&gt;<pos:position pos:line="53" pos:column="68"/></operator><name pos:line="53" pos:column="65">max<pos:position pos:line="53" pos:column="68"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="70">&amp;<pos:position pos:line="53" pos:column="75"/></operator><name pos:line="53" pos:column="71">total<pos:position pos:line="53" pos:column="76"/></name></expr></argument>)<pos:position pos:line="53" pos:column="77"/></argument_list></call>
            <operator pos:line="54" pos:column="13">||<pos:position pos:line="54" pos:column="15"/></operator> <name pos:line="54" pos:column="16">APR_SUCCESS<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">!=<pos:position pos:line="54" pos:column="30"/></operator> <call><name pos:line="54" pos:column="31">store_table<pos:position pos:line="54" pos:column="42"/></name><argument_list pos:line="54" pos:column="42">(<argument><expr><name><name pos:line="54" pos:column="43">r<pos:position pos:line="54" pos:column="44"/></name><operator pos:line="54" pos:column="44">-&gt;<pos:position pos:line="54" pos:column="49"/></operator><name pos:line="54" pos:column="46">headers_in<pos:position pos:line="54" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">NULL<pos:position pos:line="54" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="64">dconf<pos:position pos:line="54" pos:column="69"/></name><operator pos:line="54" pos:column="69">-&gt;<pos:position pos:line="54" pos:column="74"/></operator><name pos:line="54" pos:column="71">max<pos:position pos:line="54" pos:column="74"/></name></name></expr></argument>,
                    <argument><expr><operator pos:line="55" pos:column="21">&amp;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="22">total<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="29"/></condition><then pos:line="55" pos:column="29"> <block pos:line="55" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">ap_log_rerror<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">APLOG_MARK<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="35">APLOG_DEBUG<pos:position pos:line="56" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="48">0<pos:position pos:line="56" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="51">r<pos:position pos:line="56" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="54">APLOGNO<pos:position pos:line="56" pos:column="61"/></name><argument_list pos:line="56" pos:column="61">(<argument><expr><literal type="number" pos:line="56" pos:column="62">02348<pos:position pos:line="56" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="57" pos:column="17">"URL '%s' estimated headers size larger than limit, ignoring "<pos:position pos:line="57" pos:column="79"/></literal>
                <literal type="string" pos:line="58" pos:column="17">"(%"<pos:position pos:line="58" pos:column="21"/></literal> <name pos:line="58" pos:column="22">APR_SIZE_T_FMT<pos:position pos:line="58" pos:column="36"/></name> <literal type="string" pos:line="58" pos:column="37">" &gt; %"<pos:position pos:line="58" pos:column="46"/></literal> <name pos:line="58" pos:column="44">APR_OFF_T_FMT<pos:position pos:line="58" pos:column="57"/></name> <literal type="string" pos:line="58" pos:column="58">")"<pos:position pos:line="58" pos:column="61"/></literal></expr></argument>,
                <argument><expr><name pos:line="59" pos:column="17">key<pos:position pos:line="59" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="22">total<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="29">dconf<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">-&gt;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="36">max<pos:position pos:line="59" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
        <return pos:line="60" pos:column="9">return <expr><name pos:line="60" pos:column="16">DECLINED<pos:position pos:line="60" pos:column="24"/></name></expr>;<pos:position pos:line="60" pos:column="25"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">total<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">&gt;=<pos:position pos:line="63" pos:column="20"/></operator> <name><name pos:line="63" pos:column="18">dconf<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">-&gt;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="25">max<pos:position pos:line="63" pos:column="28"/></name></name></expr>)<pos:position pos:line="63" pos:column="29"/></condition><then pos:line="63" pos:column="29"> <block pos:line="63" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">ap_log_rerror<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">APLOG_MARK<pos:position pos:line="64" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="35">APLOG_DEBUG<pos:position pos:line="64" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="48">0<pos:position pos:line="64" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="51">r<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="54">APLOGNO<pos:position pos:line="64" pos:column="61"/></name><argument_list pos:line="64" pos:column="61">(<argument><expr><literal type="number" pos:line="64" pos:column="62">02349<pos:position pos:line="64" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="65" pos:column="17">"URL '%s' body and headers larger than limit, ignoring "<pos:position pos:line="65" pos:column="73"/></literal>
                <literal type="string" pos:line="66" pos:column="17">"(%"<pos:position pos:line="66" pos:column="21"/></literal> <name pos:line="66" pos:column="22">APR_OFF_T_FMT<pos:position pos:line="66" pos:column="35"/></name> <literal type="string" pos:line="66" pos:column="36">" &gt; %"<pos:position pos:line="66" pos:column="45"/></literal> <name pos:line="66" pos:column="43">APR_OFF_T_FMT<pos:position pos:line="66" pos:column="56"/></name> <literal type="string" pos:line="66" pos:column="57">")"<pos:position pos:line="66" pos:column="60"/></literal></expr></argument>,
                <argument><expr><name pos:line="67" pos:column="17">key<pos:position pos:line="67" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="22">len<pos:position pos:line="67" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="27">dconf<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">-&gt;<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="34">max<pos:position pos:line="67" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="39"/></expr_stmt>
        <return pos:line="68" pos:column="9">return <expr><name pos:line="68" pos:column="16">DECLINED<pos:position pos:line="68" pos:column="24"/></name></expr>;<pos:position pos:line="68" pos:column="25"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="71" pos:column="5">/* Allocate and initialize cache_object_t and cache_socache_object_t */</comment>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">h<pos:position pos:line="72" pos:column="6"/></name><operator pos:line="72" pos:column="6">-&gt;<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="8">cache_obj<pos:position pos:line="72" pos:column="17"/></name></name> <operator pos:line="72" pos:column="18">=<pos:position pos:line="72" pos:column="19"/></operator> <name pos:line="72" pos:column="20">obj<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <call><name pos:line="72" pos:column="26">apr_pcalloc<pos:position pos:line="72" pos:column="37"/></name><argument_list pos:line="72" pos:column="37">(<argument><expr><name><name pos:line="72" pos:column="38">r<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">-&gt;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="41">pool<pos:position pos:line="72" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="47">sizeof<argument_list pos:line="72" pos:column="53">(<argument><expr><operator pos:line="72" pos:column="54">*<pos:position pos:line="72" pos:column="55"/></operator><name pos:line="72" pos:column="55">obj<pos:position pos:line="72" pos:column="58"/></name></expr></argument>)<pos:position pos:line="72" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">obj<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">-&gt;<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="10">vobj<pos:position pos:line="73" pos:column="14"/></name></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <name pos:line="73" pos:column="17">sobj<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <call><name pos:line="73" pos:column="24">apr_pcalloc<pos:position pos:line="73" pos:column="35"/></name><argument_list pos:line="73" pos:column="35">(<argument><expr><name><name pos:line="73" pos:column="36">r<pos:position pos:line="73" pos:column="37"/></name><operator pos:line="73" pos:column="37">-&gt;<pos:position pos:line="73" pos:column="42"/></operator><name pos:line="73" pos:column="39">pool<pos:position pos:line="73" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="45">sizeof<argument_list pos:line="73" pos:column="51">(<argument><expr><operator pos:line="73" pos:column="52">*<pos:position pos:line="73" pos:column="53"/></operator><name pos:line="73" pos:column="53">sobj<pos:position pos:line="73" pos:column="57"/></name></expr></argument>)<pos:position pos:line="73" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="75" pos:column="5">obj<pos:position pos:line="75" pos:column="8"/></name><operator pos:line="75" pos:column="8">-&gt;<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="10">key<pos:position pos:line="75" pos:column="13"/></name></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <call><name pos:line="75" pos:column="16">apr_pstrdup<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name><name pos:line="75" pos:column="28">r<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">-&gt;<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="31">pool<pos:position pos:line="75" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="37">key<pos:position pos:line="75" pos:column="40"/></name></expr></argument>)<pos:position pos:line="75" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="76" pos:column="5">sobj<pos:position pos:line="76" pos:column="9"/></name><operator pos:line="76" pos:column="9">-&gt;<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="11">key<pos:position pos:line="76" pos:column="14"/></name></name> <operator pos:line="76" pos:column="15">=<pos:position pos:line="76" pos:column="16"/></operator> <name><name pos:line="76" pos:column="17">obj<pos:position pos:line="76" pos:column="20"/></name><operator pos:line="76" pos:column="20">-&gt;<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="22">key<pos:position pos:line="76" pos:column="25"/></name></name></expr>;<pos:position pos:line="76" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">sobj<pos:position pos:line="77" pos:column="9"/></name><operator pos:line="77" pos:column="9">-&gt;<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="11">name<pos:position pos:line="77" pos:column="15"/></name></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <name><name pos:line="77" pos:column="18">obj<pos:position pos:line="77" pos:column="21"/></name><operator pos:line="77" pos:column="21">-&gt;<pos:position pos:line="77" pos:column="26"/></operator><name pos:line="77" pos:column="23">key<pos:position pos:line="77" pos:column="26"/></name></name></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>

    <return pos:line="79" pos:column="5">return <expr><name pos:line="79" pos:column="12">OK<pos:position pos:line="79" pos:column="14"/></name></expr>;<pos:position pos:line="79" pos:column="15"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

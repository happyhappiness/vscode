<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5546.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name> <parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">argc<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier> <specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier></type> <name><name pos:line="1" pos:column="40">argv<pos:position pos:line="1" pos:column="44"/></name><index pos:line="1" pos:column="44">[]<pos:position pos:line="1" pos:column="46"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">buf<pos:position pos:line="3" pos:column="13"/></name><index pos:line="3" pos:column="13">[<expr><name pos:line="3" pos:column="14">BUFSIZE<pos:position pos:line="3" pos:column="21"/></name></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">nRead<pos:position pos:line="4" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="23">nWrite<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_file_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">f_stdin<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_getopt_t<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">opt<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">c<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">optarg<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">err<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><name pos:line="10" pos:column="23">NULL<pos:position pos:line="10" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">apr_app_initialize<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><operator pos:line="12" pos:column="24">&amp;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="25">argc<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="31">&amp;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="32">argv<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">NULL<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">atexit<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">apr_terminate<pos:position pos:line="13" pos:column="25"/></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">config<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">.<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">sRotation<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">config<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">tRotation<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">config<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">utc_offset<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">config<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">.<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">use_localtime<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <literal type="number" pos:line="18" pos:column="28">0<pos:position pos:line="18" pos:column="29"/></literal></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">config<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">use_strftime<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <literal type="number" pos:line="19" pos:column="27">0<pos:position pos:line="19" pos:column="28"/></literal></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">config<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">force_open<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">config<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">verbose<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">status<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">pool<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">NULL<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">status<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">pfile<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">NULL<pos:position pos:line="23" pos:column="24"/></name></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">status<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">pfile_prev<pos:position pos:line="24" pos:column="22"/></name></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">NULL<pos:position pos:line="24" pos:column="29"/></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">status<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">nLogFD<pos:position pos:line="25" pos:column="18"/></name></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">NULL<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">status<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">.<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">nLogFDprev<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">NULL<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">status<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">tLogEnd<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <literal type="number" pos:line="27" pos:column="22">0<pos:position pos:line="27" pos:column="23"/></literal></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">status<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">.<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">rotateReason<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">ROTATE_NONE<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">status<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">nMessCount<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">apr_pool_create<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><operator pos:line="31" pos:column="21">&amp;<pos:position pos:line="31" pos:column="26"/></operator><name><name pos:line="31" pos:column="22">status<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">.<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">pool<pos:position pos:line="31" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="35">NULL<pos:position pos:line="31" pos:column="39"/></name></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">apr_getopt_init<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><operator pos:line="32" pos:column="21">&amp;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="22">opt<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="27">status<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">.<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">pool<pos:position pos:line="32" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">argc<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">argv<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">rv<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">apr_getopt<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">opt<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="34">"lL:ftv"<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="44">&amp;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="45">c<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="48">&amp;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="49">optarg<pos:position pos:line="33" pos:column="55"/></name></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call><operator pos:line="33" pos:column="56">)<pos:position pos:line="33" pos:column="57"/></operator> <operator pos:line="33" pos:column="58">==<pos:position pos:line="33" pos:column="60"/></operator> <name pos:line="33" pos:column="61">APR_SUCCESS<pos:position pos:line="33" pos:column="72"/></name></expr>)<pos:position pos:line="33" pos:column="73"/></condition> <block pos:line="33" pos:column="74">{
        <switch pos:line="34" pos:column="9">switch <condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">c<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition> <block pos:line="34" pos:column="20">{
        <case pos:line="35" pos:column="9">case <expr><literal type="char" pos:line="35" pos:column="14">'l'<pos:position pos:line="35" pos:column="17"/></literal></expr>:<pos:position pos:line="35" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">config<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">.<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">use_localtime<pos:position pos:line="36" pos:column="33"/></name></name> <operator pos:line="36" pos:column="34">=<pos:position pos:line="36" pos:column="35"/></operator> <literal type="number" pos:line="36" pos:column="36">1<pos:position pos:line="36" pos:column="37"/></literal></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
            <break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break>
        <case pos:line="38" pos:column="9">case <expr><literal type="char" pos:line="38" pos:column="14">'L'<pos:position pos:line="38" pos:column="17"/></literal></expr>:<pos:position pos:line="38" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">config<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">.<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">linkfile<pos:position pos:line="39" pos:column="28"/></name></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">optarg<pos:position pos:line="39" pos:column="37"/></name></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
            <break pos:line="40" pos:column="13">break;<pos:position pos:line="40" pos:column="19"/></break>
        <case pos:line="41" pos:column="9">case <expr><literal type="char" pos:line="41" pos:column="14">'f'<pos:position pos:line="41" pos:column="17"/></literal></expr>:<pos:position pos:line="41" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">config<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">force_open<pos:position pos:line="42" pos:column="30"/></name></name> <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <literal type="number" pos:line="42" pos:column="33">1<pos:position pos:line="42" pos:column="34"/></literal></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
            <break pos:line="43" pos:column="13">break;<pos:position pos:line="43" pos:column="19"/></break>
        <case pos:line="44" pos:column="9">case <expr><literal type="char" pos:line="44" pos:column="14">'t'<pos:position pos:line="44" pos:column="17"/></literal></expr>:<pos:position pos:line="44" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">config<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">.<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="20">truncate<pos:position pos:line="45" pos:column="28"/></name></name> <operator pos:line="45" pos:column="29">=<pos:position pos:line="45" pos:column="30"/></operator> <literal type="number" pos:line="45" pos:column="31">1<pos:position pos:line="45" pos:column="32"/></literal></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
            <break pos:line="46" pos:column="13">break;<pos:position pos:line="46" pos:column="19"/></break>
        <case pos:line="47" pos:column="9">case <expr><literal type="char" pos:line="47" pos:column="14">'v'<pos:position pos:line="47" pos:column="17"/></literal></expr>:<pos:position pos:line="47" pos:column="18"/></case>
            <expr_stmt><expr><name><name pos:line="48" pos:column="13">config<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">verbose<pos:position pos:line="48" pos:column="27"/></name></name> <operator pos:line="48" pos:column="28">=<pos:position pos:line="48" pos:column="29"/></operator> <literal type="number" pos:line="48" pos:column="30">1<pos:position pos:line="48" pos:column="31"/></literal></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>
            <break pos:line="49" pos:column="13">break;<pos:position pos:line="49" pos:column="19"/></break>
        }<pos:position pos:line="50" pos:column="10"/></block></switch>
    }<pos:position pos:line="51" pos:column="6"/></block></while>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">rv<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">!=<pos:position pos:line="53" pos:column="14"/></operator> <name pos:line="53" pos:column="15">APR_EOF<pos:position pos:line="53" pos:column="22"/></name></expr>)<pos:position pos:line="53" pos:column="23"/></condition><then pos:line="53" pos:column="23"> <block pos:line="53" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">usage<pos:position pos:line="54" pos:column="14"/></name><argument_list pos:line="54" pos:column="14">(<argument><expr><name><name pos:line="54" pos:column="15">argv<pos:position pos:line="54" pos:column="19"/></name><index pos:line="54" pos:column="19">[<expr><literal type="number" pos:line="54" pos:column="20">0<pos:position pos:line="54" pos:column="21"/></literal></expr>]<pos:position pos:line="54" pos:column="22"/></index></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="24">NULL<pos:position pos:line="54" pos:column="28"/></name></expr></argument> <comment type="block" pos:line="54" pos:column="29">/* specific error message already issued */</comment> )<pos:position pos:line="54" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="57" pos:column="5">/*
     * After the initial flags we need 2 to 4 arguments,
     * the file name, either the rotation interval time or size
     * or both of them, and optionally the UTC offset.
     */</comment>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">(<pos:position pos:line="62" pos:column="10"/></operator><name pos:line="62" pos:column="10">argc<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">-<pos:position pos:line="62" pos:column="16"/></operator> <name><name pos:line="62" pos:column="17">opt<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">ind<pos:position pos:line="62" pos:column="25"/></name></name> <operator pos:line="62" pos:column="26">&lt;<pos:position pos:line="62" pos:column="30"/></operator> <literal type="number" pos:line="62" pos:column="28">2<pos:position pos:line="62" pos:column="29"/></literal><operator pos:line="62" pos:column="29">)<pos:position pos:line="62" pos:column="30"/></operator> <operator pos:line="62" pos:column="31">||<pos:position pos:line="62" pos:column="33"/></operator> <operator pos:line="62" pos:column="34">(<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="35">argc<pos:position pos:line="62" pos:column="39"/></name> <operator pos:line="62" pos:column="40">-<pos:position pos:line="62" pos:column="41"/></operator> <name><name pos:line="62" pos:column="42">opt<pos:position pos:line="62" pos:column="45"/></name><operator pos:line="62" pos:column="45">-&gt;<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="47">ind<pos:position pos:line="62" pos:column="50"/></name></name> <operator pos:line="62" pos:column="51">&gt;<pos:position pos:line="62" pos:column="55"/></operator> <literal type="number" pos:line="62" pos:column="53">4<pos:position pos:line="62" pos:column="54"/></literal><operator pos:line="62" pos:column="54">)<pos:position pos:line="62" pos:column="55"/></operator></expr> )<pos:position pos:line="62" pos:column="57"/></condition><then pos:line="62" pos:column="57"> <block pos:line="62" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">usage<pos:position pos:line="63" pos:column="14"/></name><argument_list pos:line="63" pos:column="14">(<argument><expr><name><name pos:line="63" pos:column="15">argv<pos:position pos:line="63" pos:column="19"/></name><index pos:line="63" pos:column="19">[<expr><literal type="number" pos:line="63" pos:column="20">0<pos:position pos:line="63" pos:column="21"/></literal></expr>]<pos:position pos:line="63" pos:column="22"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="24">"Incorrect number of arguments"<pos:position pos:line="63" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="66" pos:column="5">config<pos:position pos:line="66" pos:column="11"/></name><operator pos:line="66" pos:column="11">.<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">szLogRoot<pos:position pos:line="66" pos:column="21"/></name></name> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <name><name pos:line="66" pos:column="24">argv<pos:position pos:line="66" pos:column="28"/></name><index pos:line="66" pos:column="28">[<expr><name><name pos:line="66" pos:column="29">opt<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">-&gt;<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="34">ind<pos:position pos:line="66" pos:column="37"/></name></name><operator pos:line="66" pos:column="37">++<pos:position pos:line="66" pos:column="39"/></operator></expr>]<pos:position pos:line="66" pos:column="40"/></index></name></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="68" pos:column="5">/* Read in the remaining flags, namely time, size and UTC offset. */</comment>
    <for pos:line="69" pos:column="5">for<control pos:line="69" pos:column="8">(<init pos:line="69" pos:column="9">;<pos:position pos:line="69" pos:column="10"/></init> <condition><expr><name><name pos:line="69" pos:column="11">opt<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">ind<pos:position pos:line="69" pos:column="19"/></name></name> <operator pos:line="69" pos:column="20">&lt;<pos:position pos:line="69" pos:column="24"/></operator> <name pos:line="69" pos:column="22">argc<pos:position pos:line="69" pos:column="26"/></name></expr>;<pos:position pos:line="69" pos:column="27"/></condition> <incr><expr><name><name pos:line="69" pos:column="28">opt<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">-&gt;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="33">ind<pos:position pos:line="69" pos:column="36"/></name></name><operator pos:line="69" pos:column="36">++<pos:position pos:line="69" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="69" pos:column="39"/></control> <block pos:line="69" pos:column="40">{
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><operator pos:line="70" pos:column="13">(<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">err<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <call><name pos:line="70" pos:column="20">get_time_or_size<pos:position pos:line="70" pos:column="36"/></name><argument_list pos:line="70" pos:column="36">(<argument><expr><operator pos:line="70" pos:column="37">&amp;<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="38">config<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="46">argv<pos:position pos:line="70" pos:column="50"/></name><index pos:line="70" pos:column="50">[<expr><name><name pos:line="70" pos:column="51">opt<pos:position pos:line="70" pos:column="54"/></name><operator pos:line="70" pos:column="54">-&gt;<pos:position pos:line="70" pos:column="59"/></operator><name pos:line="70" pos:column="56">ind<pos:position pos:line="70" pos:column="59"/></name></name></expr>]<pos:position pos:line="70" pos:column="60"/></index></name></expr></argument>,
                                    <argument><expr><ternary><condition><expr><name><name pos:line="71" pos:column="37">opt<pos:position pos:line="71" pos:column="40"/></name><operator pos:line="71" pos:column="40">-&gt;<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="42">ind<pos:position pos:line="71" pos:column="45"/></name></name> <operator pos:line="71" pos:column="46">&lt;<pos:position pos:line="71" pos:column="50"/></operator> <name pos:line="71" pos:column="48">argc<pos:position pos:line="71" pos:column="52"/></name> <operator pos:line="71" pos:column="53">-<pos:position pos:line="71" pos:column="54"/></operator> <literal type="number" pos:line="71" pos:column="55">1<pos:position pos:line="71" pos:column="56"/></literal></expr> ?<pos:position pos:line="71" pos:column="58"/></condition><then pos:line="71" pos:column="58"> <expr><literal type="number" pos:line="71" pos:column="59">0<pos:position pos:line="71" pos:column="60"/></literal></expr> <pos:position pos:line="71" pos:column="61"/></then><else pos:line="71" pos:column="61">: <expr><literal type="number" pos:line="71" pos:column="63">1<pos:position pos:line="71" pos:column="64"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call><operator pos:line="71" pos:column="65">)<pos:position pos:line="71" pos:column="66"/></operator> <operator pos:line="71" pos:column="67">!=<pos:position pos:line="71" pos:column="69"/></operator> <name pos:line="71" pos:column="70">NULL<pos:position pos:line="71" pos:column="74"/></name></expr>)<pos:position pos:line="71" pos:column="75"/></condition><then pos:line="71" pos:column="75"> <block pos:line="71" pos:column="76">{
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">usage<pos:position pos:line="72" pos:column="18"/></name><argument_list pos:line="72" pos:column="18">(<argument><expr><name><name pos:line="72" pos:column="19">argv<pos:position pos:line="72" pos:column="23"/></name><index pos:line="72" pos:column="23">[<expr><literal type="number" pos:line="72" pos:column="24">0<pos:position pos:line="72" pos:column="25"/></literal></expr>]<pos:position pos:line="72" pos:column="26"/></index></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="28">err<pos:position pos:line="72" pos:column="31"/></name></expr></argument>)<pos:position pos:line="72" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
    }<pos:position pos:line="74" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="76" pos:column="5">config<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">.<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="12">use_strftime<pos:position pos:line="76" pos:column="24"/></name></name> <operator pos:line="76" pos:column="25">=<pos:position pos:line="76" pos:column="26"/></operator> <operator pos:line="76" pos:column="27">(<pos:position pos:line="76" pos:column="28"/></operator><call><name pos:line="76" pos:column="28">strchr<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">(<argument><expr><name><name pos:line="76" pos:column="35">config<pos:position pos:line="76" pos:column="41"/></name><operator pos:line="76" pos:column="41">.<pos:position pos:line="76" pos:column="42"/></operator><name pos:line="76" pos:column="42">szLogRoot<pos:position pos:line="76" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="76" pos:column="53">'%'<pos:position pos:line="76" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call> <operator pos:line="76" pos:column="58">!=<pos:position pos:line="76" pos:column="60"/></operator> <name pos:line="76" pos:column="61">NULL<pos:position pos:line="76" pos:column="65"/></name><operator pos:line="76" pos:column="65">)<pos:position pos:line="76" pos:column="66"/></operator></expr>;<pos:position pos:line="76" pos:column="67"/></expr_stmt>

    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><call><name pos:line="78" pos:column="9">apr_file_open_stdin<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><operator pos:line="78" pos:column="29">&amp;<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="30">f_stdin<pos:position pos:line="78" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="39">status<pos:position pos:line="78" pos:column="45"/></name><operator pos:line="78" pos:column="45">.<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="46">pool<pos:position pos:line="78" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call> <operator pos:line="78" pos:column="52">!=<pos:position pos:line="78" pos:column="54"/></operator> <name pos:line="78" pos:column="55">APR_SUCCESS<pos:position pos:line="78" pos:column="66"/></name></expr>)<pos:position pos:line="78" pos:column="67"/></condition><then pos:line="78" pos:column="67"> <block pos:line="78" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">fprintf<pos:position pos:line="79" pos:column="16"/></name><argument_list pos:line="79" pos:column="16">(<argument><expr><name pos:line="79" pos:column="17">stderr<pos:position pos:line="79" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="25">"Unable to open stdin\n"<pos:position pos:line="79" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">exit<pos:position pos:line="80" pos:column="13"/></name><argument_list pos:line="80" pos:column="13">(<argument><expr><literal type="number" pos:line="80" pos:column="14">1<pos:position pos:line="80" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="83" pos:column="5">/*
     * Write out result of config parsing if verbose is set.
     */</comment>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name><name pos:line="86" pos:column="9">config<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">.<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">verbose<pos:position pos:line="86" pos:column="23"/></name></name></expr>)<pos:position pos:line="86" pos:column="24"/></condition><then pos:line="86" pos:column="24"> <block pos:line="86" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">dumpConfig<pos:position pos:line="87" pos:column="19"/></name><argument_list pos:line="87" pos:column="19">(<argument><expr><operator pos:line="87" pos:column="20">&amp;<pos:position pos:line="87" pos:column="25"/></operator><name pos:line="87" pos:column="21">config<pos:position pos:line="87" pos:column="27"/></name></expr></argument>)<pos:position pos:line="87" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="90" pos:column="5">/*
     * Immediately open the logfile as we start, if we were forced
     * to do so via '-f'.
     */</comment>
    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><name><name pos:line="94" pos:column="9">config<pos:position pos:line="94" pos:column="15"/></name><operator pos:line="94" pos:column="15">.<pos:position pos:line="94" pos:column="16"/></operator><name pos:line="94" pos:column="16">force_open<pos:position pos:line="94" pos:column="26"/></name></name></expr>)<pos:position pos:line="94" pos:column="27"/></condition><then pos:line="94" pos:column="27"> <block pos:line="94" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">doRotate<pos:position pos:line="95" pos:column="17"/></name><argument_list pos:line="95" pos:column="17">(<argument><expr><operator pos:line="95" pos:column="18">&amp;<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="19">config<pos:position pos:line="95" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="27">&amp;<pos:position pos:line="95" pos:column="32"/></operator><name pos:line="95" pos:column="28">status<pos:position pos:line="95" pos:column="34"/></name></expr></argument>)<pos:position pos:line="95" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>

    <for pos:line="98" pos:column="5">for <control pos:line="98" pos:column="9">(<init pos:line="98" pos:column="10">;<pos:position pos:line="98" pos:column="11"/></init><condition pos:line="98" pos:column="11">;<pos:position pos:line="98" pos:column="12"/></condition><incr/>)<pos:position pos:line="98" pos:column="13"/></control> <block pos:line="98" pos:column="14">{
        <expr_stmt><expr><name pos:line="99" pos:column="9">nRead<pos:position pos:line="99" pos:column="14"/></name> <operator pos:line="99" pos:column="15">=<pos:position pos:line="99" pos:column="16"/></operator> <sizeof pos:line="99" pos:column="17">sizeof<argument_list pos:line="99" pos:column="23">(<argument><expr><name pos:line="99" pos:column="24">buf<pos:position pos:line="99" pos:column="27"/></name></expr></argument>)<pos:position pos:line="99" pos:column="28"/></argument_list></sizeof></expr>;<pos:position pos:line="99" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="100" pos:column="9">rv<pos:position pos:line="100" pos:column="11"/></name> <operator pos:line="100" pos:column="12">=<pos:position pos:line="100" pos:column="13"/></operator> <call><name pos:line="100" pos:column="14">apr_file_read<pos:position pos:line="100" pos:column="27"/></name><argument_list pos:line="100" pos:column="27">(<argument><expr><name pos:line="100" pos:column="28">f_stdin<pos:position pos:line="100" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="37">buf<pos:position pos:line="100" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="42">&amp;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="43">nRead<pos:position pos:line="100" pos:column="48"/></name></expr></argument>)<pos:position pos:line="100" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="50"/></expr_stmt>
        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">rv<pos:position pos:line="101" pos:column="15"/></name> <operator pos:line="101" pos:column="16">!=<pos:position pos:line="101" pos:column="18"/></operator> <name pos:line="101" pos:column="19">APR_SUCCESS<pos:position pos:line="101" pos:column="30"/></name></expr>)<pos:position pos:line="101" pos:column="31"/></condition><then pos:line="101" pos:column="31"> <block pos:line="101" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">exit<pos:position pos:line="102" pos:column="17"/></name><argument_list pos:line="102" pos:column="17">(<argument><expr><literal type="number" pos:line="102" pos:column="18">3<pos:position pos:line="102" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">checkRotate<pos:position pos:line="104" pos:column="20"/></name><argument_list pos:line="104" pos:column="20">(<argument><expr><operator pos:line="104" pos:column="21">&amp;<pos:position pos:line="104" pos:column="26"/></operator><name pos:line="104" pos:column="22">config<pos:position pos:line="104" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="30">&amp;<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="31">status<pos:position pos:line="104" pos:column="37"/></name></expr></argument>)<pos:position pos:line="104" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="39"/></expr_stmt>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name><name pos:line="105" pos:column="13">status<pos:position pos:line="105" pos:column="19"/></name><operator pos:line="105" pos:column="19">.<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="20">rotateReason<pos:position pos:line="105" pos:column="32"/></name></name> <operator pos:line="105" pos:column="33">!=<pos:position pos:line="105" pos:column="35"/></operator> <name pos:line="105" pos:column="36">ROTATE_NONE<pos:position pos:line="105" pos:column="47"/></name></expr>)<pos:position pos:line="105" pos:column="48"/></condition><then pos:line="105" pos:column="48"> <block pos:line="105" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">doRotate<pos:position pos:line="106" pos:column="21"/></name><argument_list pos:line="106" pos:column="21">(<argument><expr><operator pos:line="106" pos:column="22">&amp;<pos:position pos:line="106" pos:column="27"/></operator><name pos:line="106" pos:column="23">config<pos:position pos:line="106" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="31">&amp;<pos:position pos:line="106" pos:column="36"/></operator><name pos:line="106" pos:column="32">status<pos:position pos:line="106" pos:column="38"/></name></expr></argument>)<pos:position pos:line="106" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="109" pos:column="9">nWrite<pos:position pos:line="109" pos:column="15"/></name> <operator pos:line="109" pos:column="16">=<pos:position pos:line="109" pos:column="17"/></operator> <name pos:line="109" pos:column="18">nRead<pos:position pos:line="109" pos:column="23"/></name></expr>;<pos:position pos:line="109" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="110" pos:column="9">rv<pos:position pos:line="110" pos:column="11"/></name> <operator pos:line="110" pos:column="12">=<pos:position pos:line="110" pos:column="13"/></operator> <call><name pos:line="110" pos:column="14">apr_file_write<pos:position pos:line="110" pos:column="28"/></name><argument_list pos:line="110" pos:column="28">(<argument><expr><name><name pos:line="110" pos:column="29">status<pos:position pos:line="110" pos:column="35"/></name><operator pos:line="110" pos:column="35">.<pos:position pos:line="110" pos:column="36"/></operator><name pos:line="110" pos:column="36">nLogFD<pos:position pos:line="110" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="44">buf<pos:position pos:line="110" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="49">&amp;<pos:position pos:line="110" pos:column="54"/></operator><name pos:line="110" pos:column="50">nWrite<pos:position pos:line="110" pos:column="56"/></name></expr></argument>)<pos:position pos:line="110" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="58"/></expr_stmt>
        <if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name pos:line="111" pos:column="13">rv<pos:position pos:line="111" pos:column="15"/></name> <operator pos:line="111" pos:column="16">==<pos:position pos:line="111" pos:column="18"/></operator> <name pos:line="111" pos:column="19">APR_SUCCESS<pos:position pos:line="111" pos:column="30"/></name> <operator pos:line="111" pos:column="31">&amp;&amp;<pos:position pos:line="111" pos:column="41"/></operator> <name pos:line="111" pos:column="34">nWrite<pos:position pos:line="111" pos:column="40"/></name> <operator pos:line="111" pos:column="41">!=<pos:position pos:line="111" pos:column="43"/></operator> <name pos:line="111" pos:column="44">nRead<pos:position pos:line="111" pos:column="49"/></name></expr>)<pos:position pos:line="111" pos:column="50"/></condition><then pos:line="111" pos:column="50"> <block pos:line="111" pos:column="51">{
            <comment type="block" pos:line="112" pos:column="13">/* buffer partially written, which for rotatelogs means we encountered
             * an error such as out of space or quota or some other limit reached;
             * try to write the rest so we get the real error code
             */</comment>
            <decl_stmt><decl><type><name pos:line="116" pos:column="13">apr_size_t<pos:position pos:line="116" pos:column="23"/></name></type> <name pos:line="116" pos:column="24">nWritten<pos:position pos:line="116" pos:column="32"/></name> <init pos:line="116" pos:column="33">= <expr><name pos:line="116" pos:column="35">nWrite<pos:position pos:line="116" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="116" pos:column="42"/></decl_stmt>

            <expr_stmt><expr><name pos:line="118" pos:column="13">nRead<pos:position pos:line="118" pos:column="18"/></name>  <operator pos:line="118" pos:column="20">=<pos:position pos:line="118" pos:column="21"/></operator> <name pos:line="118" pos:column="22">nRead<pos:position pos:line="118" pos:column="27"/></name> <operator pos:line="118" pos:column="28">-<pos:position pos:line="118" pos:column="29"/></operator> <name pos:line="118" pos:column="30">nWritten<pos:position pos:line="118" pos:column="38"/></name></expr>;<pos:position pos:line="118" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="119" pos:column="13">nWrite<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">=<pos:position pos:line="119" pos:column="21"/></operator> <name pos:line="119" pos:column="22">nRead<pos:position pos:line="119" pos:column="27"/></name></expr>;<pos:position pos:line="119" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="120" pos:column="13">rv<pos:position pos:line="120" pos:column="15"/></name> <operator pos:line="120" pos:column="16">=<pos:position pos:line="120" pos:column="17"/></operator> <call><name pos:line="120" pos:column="18">apr_file_write<pos:position pos:line="120" pos:column="32"/></name><argument_list pos:line="120" pos:column="32">(<argument><expr><name><name pos:line="120" pos:column="33">status<pos:position pos:line="120" pos:column="39"/></name><operator pos:line="120" pos:column="39">.<pos:position pos:line="120" pos:column="40"/></operator><name pos:line="120" pos:column="40">nLogFD<pos:position pos:line="120" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="48">buf<pos:position pos:line="120" pos:column="51"/></name> <operator pos:line="120" pos:column="52">+<pos:position pos:line="120" pos:column="53"/></operator> <name pos:line="120" pos:column="54">nWritten<pos:position pos:line="120" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="120" pos:column="64">&amp;<pos:position pos:line="120" pos:column="69"/></operator><name pos:line="120" pos:column="65">nWrite<pos:position pos:line="120" pos:column="71"/></name></expr></argument>)<pos:position pos:line="120" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="121" pos:column="10"/></block></then></if>
        <if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><name pos:line="122" pos:column="13">nWrite<pos:position pos:line="122" pos:column="19"/></name> <operator pos:line="122" pos:column="20">!=<pos:position pos:line="122" pos:column="22"/></operator> <name pos:line="122" pos:column="23">nRead<pos:position pos:line="122" pos:column="28"/></name></expr>)<pos:position pos:line="122" pos:column="29"/></condition><then pos:line="122" pos:column="29"> <block pos:line="122" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">char<pos:position pos:line="123" pos:column="17"/></name></type> <name><name pos:line="123" pos:column="18">strerrbuf<pos:position pos:line="123" pos:column="27"/></name><index pos:line="123" pos:column="27">[<expr><literal type="number" pos:line="123" pos:column="28">120<pos:position pos:line="123" pos:column="31"/></literal></expr>]<pos:position pos:line="123" pos:column="32"/></index></name></decl>;<pos:position pos:line="123" pos:column="33"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="124" pos:column="13">apr_off_t<pos:position pos:line="124" pos:column="22"/></name></type> <name pos:line="124" pos:column="23">cur_offset<pos:position pos:line="124" pos:column="33"/></name></decl>;<pos:position pos:line="124" pos:column="34"/></decl_stmt>

            <expr_stmt><expr><name pos:line="126" pos:column="13">cur_offset<pos:position pos:line="126" pos:column="23"/></name> <operator pos:line="126" pos:column="24">=<pos:position pos:line="126" pos:column="25"/></operator> <literal type="number" pos:line="126" pos:column="26">0<pos:position pos:line="126" pos:column="27"/></literal></expr>;<pos:position pos:line="126" pos:column="28"/></expr_stmt>
            <if pos:line="127" pos:column="13">if <condition pos:line="127" pos:column="16">(<expr><call><name pos:line="127" pos:column="17">apr_file_seek<pos:position pos:line="127" pos:column="30"/></name><argument_list pos:line="127" pos:column="30">(<argument><expr><name><name pos:line="127" pos:column="31">status<pos:position pos:line="127" pos:column="37"/></name><operator pos:line="127" pos:column="37">.<pos:position pos:line="127" pos:column="38"/></operator><name pos:line="127" pos:column="38">nLogFD<pos:position pos:line="127" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="46">APR_CUR<pos:position pos:line="127" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="127" pos:column="55">&amp;<pos:position pos:line="127" pos:column="60"/></operator><name pos:line="127" pos:column="56">cur_offset<pos:position pos:line="127" pos:column="66"/></name></expr></argument>)<pos:position pos:line="127" pos:column="67"/></argument_list></call> <operator pos:line="127" pos:column="68">!=<pos:position pos:line="127" pos:column="70"/></operator> <name pos:line="127" pos:column="71">APR_SUCCESS<pos:position pos:line="127" pos:column="82"/></name></expr>)<pos:position pos:line="127" pos:column="83"/></condition><then pos:line="127" pos:column="83"> <block pos:line="127" pos:column="84">{
                <expr_stmt><expr><name pos:line="128" pos:column="17">cur_offset<pos:position pos:line="128" pos:column="27"/></name> <operator pos:line="128" pos:column="28">=<pos:position pos:line="128" pos:column="29"/></operator> <operator pos:line="128" pos:column="30">-<pos:position pos:line="128" pos:column="31"/></operator><literal type="number" pos:line="128" pos:column="31">1<pos:position pos:line="128" pos:column="32"/></literal></expr>;<pos:position pos:line="128" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="129" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="130" pos:column="13">apr_strerror<pos:position pos:line="130" pos:column="25"/></name><argument_list pos:line="130" pos:column="25">(<argument><expr><name pos:line="130" pos:column="26">rv<pos:position pos:line="130" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="30">strerrbuf<pos:position pos:line="130" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="130" pos:column="41">sizeof <name pos:line="130" pos:column="48">strerrbuf<pos:position pos:line="130" pos:column="57"/></name></sizeof></expr></argument>)<pos:position pos:line="130" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="131" pos:column="13">status<pos:position pos:line="131" pos:column="19"/></name><operator pos:line="131" pos:column="19">.<pos:position pos:line="131" pos:column="20"/></operator><name pos:line="131" pos:column="20">nMessCount<pos:position pos:line="131" pos:column="30"/></name></name><operator pos:line="131" pos:column="30">++<pos:position pos:line="131" pos:column="32"/></operator></expr>;<pos:position pos:line="131" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="132" pos:column="13">apr_snprintf<pos:position pos:line="132" pos:column="25"/></name><argument_list pos:line="132" pos:column="25">(<argument><expr><name><name pos:line="132" pos:column="26">status<pos:position pos:line="132" pos:column="32"/></name><operator pos:line="132" pos:column="32">.<pos:position pos:line="132" pos:column="33"/></operator><name pos:line="132" pos:column="33">errbuf<pos:position pos:line="132" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="132" pos:column="41">sizeof <name><name pos:line="132" pos:column="48">status<pos:position pos:line="132" pos:column="54"/></name><operator pos:line="132" pos:column="54">.<pos:position pos:line="132" pos:column="55"/></operator><name pos:line="132" pos:column="55">errbuf<pos:position pos:line="132" pos:column="61"/></name></name></sizeof></expr></argument>,
                         <argument><expr><literal type="string" pos:line="133" pos:column="26">"Error %d writing to log file at offset %"<pos:position pos:line="133" pos:column="68"/></literal> <name pos:line="133" pos:column="69">APR_OFF_T_FMT<pos:position pos:line="133" pos:column="82"/></name> <literal type="string" pos:line="133" pos:column="83">". "<pos:position pos:line="133" pos:column="87"/></literal>
                         <literal type="string" pos:line="134" pos:column="26">"%10d messages lost (%s)\n"<pos:position pos:line="134" pos:column="53"/></literal></expr></argument>,
                         <argument><expr><name pos:line="135" pos:column="26">rv<pos:position pos:line="135" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="30">cur_offset<pos:position pos:line="135" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="42">status<pos:position pos:line="135" pos:column="48"/></name><operator pos:line="135" pos:column="48">.<pos:position pos:line="135" pos:column="49"/></operator><name pos:line="135" pos:column="49">nMessCount<pos:position pos:line="135" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="61">strerrbuf<pos:position pos:line="135" pos:column="70"/></name></expr></argument>)<pos:position pos:line="135" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><name pos:line="136" pos:column="13">nWrite<pos:position pos:line="136" pos:column="19"/></name> <operator pos:line="136" pos:column="20">=<pos:position pos:line="136" pos:column="21"/></operator> <call><name pos:line="136" pos:column="22">strlen<pos:position pos:line="136" pos:column="28"/></name><argument_list pos:line="136" pos:column="28">(<argument><expr><name><name pos:line="136" pos:column="29">status<pos:position pos:line="136" pos:column="35"/></name><operator pos:line="136" pos:column="35">.<pos:position pos:line="136" pos:column="36"/></operator><name pos:line="136" pos:column="36">errbuf<pos:position pos:line="136" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="137" pos:column="13">apr_file_trunc<pos:position pos:line="137" pos:column="27"/></name><argument_list pos:line="137" pos:column="27">(<argument><expr><name><name pos:line="137" pos:column="28">status<pos:position pos:line="137" pos:column="34"/></name><operator pos:line="137" pos:column="34">.<pos:position pos:line="137" pos:column="35"/></operator><name pos:line="137" pos:column="35">nLogFD<pos:position pos:line="137" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="43">0<pos:position pos:line="137" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="46"/></expr_stmt>
            <if pos:line="138" pos:column="13">if <condition pos:line="138" pos:column="16">(<expr><call><name pos:line="138" pos:column="17">apr_file_write<pos:position pos:line="138" pos:column="31"/></name><argument_list pos:line="138" pos:column="31">(<argument><expr><name><name pos:line="138" pos:column="32">status<pos:position pos:line="138" pos:column="38"/></name><operator pos:line="138" pos:column="38">.<pos:position pos:line="138" pos:column="39"/></operator><name pos:line="138" pos:column="39">nLogFD<pos:position pos:line="138" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="138" pos:column="47">status<pos:position pos:line="138" pos:column="53"/></name><operator pos:line="138" pos:column="53">.<pos:position pos:line="138" pos:column="54"/></operator><name pos:line="138" pos:column="54">errbuf<pos:position pos:line="138" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="138" pos:column="62">&amp;<pos:position pos:line="138" pos:column="67"/></operator><name pos:line="138" pos:column="63">nWrite<pos:position pos:line="138" pos:column="69"/></name></expr></argument>)<pos:position pos:line="138" pos:column="70"/></argument_list></call> <operator pos:line="138" pos:column="71">!=<pos:position pos:line="138" pos:column="73"/></operator> <name pos:line="138" pos:column="74">APR_SUCCESS<pos:position pos:line="138" pos:column="85"/></name></expr>)<pos:position pos:line="138" pos:column="86"/></condition><then pos:line="138" pos:column="86"> <block pos:line="138" pos:column="87">{
                <expr_stmt><expr><call><name pos:line="139" pos:column="17">fprintf<pos:position pos:line="139" pos:column="24"/></name><argument_list pos:line="139" pos:column="24">(<argument><expr><name pos:line="139" pos:column="25">stderr<pos:position pos:line="139" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="33">"Error writing to the file %s\n"<pos:position pos:line="139" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="139" pos:column="67">status<pos:position pos:line="139" pos:column="73"/></name><operator pos:line="139" pos:column="73">.<pos:position pos:line="139" pos:column="74"/></operator><name pos:line="139" pos:column="74">filename<pos:position pos:line="139" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="139" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="84"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="140" pos:column="17">exit<pos:position pos:line="140" pos:column="21"/></name><argument_list pos:line="140" pos:column="21">(<argument><expr><literal type="number" pos:line="140" pos:column="22">2<pos:position pos:line="140" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="141" pos:column="14"/></block></then></if>
        }<pos:position pos:line="142" pos:column="10"/></block></then>
        <else pos:line="143" pos:column="9">else <block pos:line="143" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="144" pos:column="13">status<pos:position pos:line="144" pos:column="19"/></name><operator pos:line="144" pos:column="19">.<pos:position pos:line="144" pos:column="20"/></operator><name pos:line="144" pos:column="20">nMessCount<pos:position pos:line="144" pos:column="30"/></name></name><operator pos:line="144" pos:column="30">++<pos:position pos:line="144" pos:column="32"/></operator></expr>;<pos:position pos:line="144" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="145" pos:column="10"/></block></else></if>
    }<pos:position pos:line="146" pos:column="6"/></block></for>
    <comment type="block" pos:line="147" pos:column="5">/* Of course we never, but prevent compiler warnings */</comment>
    <return pos:line="148" pos:column="5">return <expr><literal type="number" pos:line="148" pos:column="12">0<pos:position pos:line="148" pos:column="13"/></literal></expr>;<pos:position pos:line="148" pos:column="14"/></return>
}<pos:position pos:line="149" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1477_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_save_filter<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">ap_filter_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">f<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_bucket_brigade<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">in<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rv<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">date_in_errhdr<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">f<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">r<pos:position pos:line="5" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">cache_request_rec<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">cache<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">cache_server_conf<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">conf<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">url<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name><name pos:line="8" pos:column="17">r<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">unparsed_uri<pos:position pos:line="8" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">cc_in<pos:position pos:line="9" pos:column="22"/></name></decl>, <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="25">cc_out<pos:position pos:line="9" pos:column="31"/></name></decl>, <modifier pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="34">cl<pos:position pos:line="9" pos:column="36"/></name></decl>, <modifier pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="39">vary_out<pos:position pos:line="9" pos:column="47"/></name></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">exps<pos:position pos:line="10" pos:column="21"/></name></decl>, <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="24">lastmods<pos:position pos:line="10" pos:column="32"/></name></decl>, <modifier pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="35">dates<pos:position pos:line="10" pos:column="40"/></name></decl>, <modifier pos:line="10" pos:column="42">*<pos:position pos:line="10" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="43">etag<pos:position pos:line="10" pos:column="47"/></name></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_time_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">exp<pos:position pos:line="11" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="21">date<pos:position pos:line="11" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="27">lastmod<pos:position pos:line="11" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="36">now<pos:position pos:line="11" pos:column="39"/></name></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_off_t<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">size<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">cache_info<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">info<pos:position pos:line="13" pos:column="21"/></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">reason<pos:position pos:line="14" pos:column="17"/></name></decl>;<pos:position pos:line="14" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_pool_t<pos:position pos:line="15" pos:column="15"/></name> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">p<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* check first whether running this filter has any point or not */</comment>
    <comment type="block" pos:line="18" pos:column="5">/* If the user has Cache-Control: no-store from RFC 2616, don't store! */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">cc_in<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">apr_table_get<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name><name pos:line="19" pos:column="27">r<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">headers_in<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="42">"Cache-Control"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">vary_out<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">apr_table_get<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name><name pos:line="20" pos:column="30">r<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">headers_out<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="46">"Vary"<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">r<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">no_cache<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">||<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">ap_cache_liststr<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">NULL<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">cc_in<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="54">"no-store"<pos:position pos:line="21" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="66">NULL<pos:position pos:line="21" pos:column="70"/></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call> <operator pos:line="21" pos:column="72">||<pos:position pos:line="21" pos:column="74"/></operator> 
        <call><name pos:line="22" pos:column="9">ap_cache_liststr<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">vary_out<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="42">"*"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">NULL<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="53"/></condition><then pos:line="22" pos:column="53"> <block pos:line="22" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ap_remove_output_filter<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">f<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><call><name pos:line="24" pos:column="16">ap_pass_brigade<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name><name pos:line="24" pos:column="32">f<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">next<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">in<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/* Setup cache_request_rec */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">cache<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">cache_request_rec<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">*<pos:position pos:line="28" pos:column="33"/></operator><operator pos:line="28" pos:column="33">)<pos:position pos:line="28" pos:column="34"/></operator> <call><name pos:line="28" pos:column="35">ap_get_module_config<pos:position pos:line="28" pos:column="55"/></name><argument_list pos:line="28" pos:column="55">(<argument><expr><name><name pos:line="28" pos:column="56">r<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">-&gt;<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="59">request_config<pos:position pos:line="28" pos:column="73"/></name></name></expr></argument>,
                                                       <argument><expr><operator pos:line="29" pos:column="56">&amp;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="57">cache_module<pos:position pos:line="29" pos:column="69"/></name></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="71"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">cache<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16"> <block pos:line="30" pos:column="17">{
        <comment type="block" pos:line="31" pos:column="9">/* user likely configured CACHE_SAVE manually; they should really use
         * mod_cache configuration to do that
         */</comment>
        <expr_stmt><expr><name pos:line="34" pos:column="9">cache<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">apr_pcalloc<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name><name pos:line="34" pos:column="29">r<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">-&gt;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="32">pool<pos:position pos:line="34" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="38">sizeof<argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">cache_request_rec<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_set_module_config<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name><name pos:line="35" pos:column="30">r<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">request_config<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="50">cache_module<pos:position pos:line="35" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="64">cache<pos:position pos:line="35" pos:column="69"/></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">reason<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <name pos:line="38" pos:column="14">NULL<pos:position pos:line="38" pos:column="18"/></name></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">p<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <name><name pos:line="39" pos:column="9">r<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">pool<pos:position pos:line="39" pos:column="16"/></name></name></expr>;<pos:position pos:line="39" pos:column="17"/></expr_stmt>
    <comment type="block" pos:line="40" pos:column="5">/*
     * Pass Data to Cache
     * ------------------
     * This section passes the brigades into the cache modules, but only
     * if the setup section (see below) is complete.
     */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name><name pos:line="46" pos:column="9">cache<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">block_response<pos:position pos:line="46" pos:column="30"/></name></name></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31"> <block pos:line="46" pos:column="32">{
        <comment type="block" pos:line="47" pos:column="9">/* We've already sent down the response and EOS.  So, ignore
         * whatever comes now.
         */</comment>
        <return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">APR_SUCCESS<pos:position pos:line="50" pos:column="27"/></name></expr>;<pos:position pos:line="50" pos:column="28"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="53" pos:column="5">/* have we already run the cachability check and set up the
     * cached file handle? 
     */</comment>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">cache<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">in_checked<pos:position pos:line="56" pos:column="26"/></name></name></expr>)<pos:position pos:line="56" pos:column="27"/></condition><then pos:line="56" pos:column="27"> <block pos:line="56" pos:column="28">{
        <comment type="block" pos:line="57" pos:column="9">/* pass the brigades into the cache, then pass them
         * up the filter stack
         */</comment>
        <expr_stmt><expr><name pos:line="60" pos:column="9">rv<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <call><name><name pos:line="60" pos:column="14">cache<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">-&gt;<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="21">provider<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">store_body<pos:position pos:line="60" pos:column="41"/></name></name><argument_list pos:line="60" pos:column="41">(<argument><expr><name><name pos:line="60" pos:column="42">cache<pos:position pos:line="60" pos:column="47"/></name><operator pos:line="60" pos:column="47">-&gt;<pos:position pos:line="60" pos:column="52"/></operator><name pos:line="60" pos:column="49">handle<pos:position pos:line="60" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="57">r<pos:position pos:line="60" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="60">in<pos:position pos:line="60" pos:column="62"/></name></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="64"/></expr_stmt>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">rv<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">!=<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">APR_SUCCESS<pos:position pos:line="61" pos:column="30"/></name></expr>)<pos:position pos:line="61" pos:column="31"/></condition><then pos:line="61" pos:column="31"> <block pos:line="61" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">ap_remove_output_filter<pos:position pos:line="62" pos:column="36"/></name><argument_list pos:line="62" pos:column="36">(<argument><expr><name pos:line="62" pos:column="37">f<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
        <return pos:line="64" pos:column="9">return <expr><call><name pos:line="64" pos:column="16">ap_pass_brigade<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><name><name pos:line="64" pos:column="32">f<pos:position pos:line="64" pos:column="33"/></name><operator pos:line="64" pos:column="33">-&gt;<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="35">next<pos:position pos:line="64" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="41">in<pos:position pos:line="64" pos:column="43"/></name></expr></argument>)<pos:position pos:line="64" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="45"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="67" pos:column="5">/*
     * Setup Data in Cache
     * -------------------
     * This section opens the cache entity and sets various caching
     * parameters, and decides whether this URL should be cached at
     * all. This section is* run before the above section.
     */</comment>

    <comment type="block" pos:line="75" pos:column="5">/* read expiry date; if a bad date, then leave it so the client can
     * read it 
     */</comment>
    <expr_stmt><expr><name pos:line="78" pos:column="5">exps<pos:position pos:line="78" pos:column="9"/></name> <operator pos:line="78" pos:column="10">=<pos:position pos:line="78" pos:column="11"/></operator> <call><name pos:line="78" pos:column="12">apr_table_get<pos:position pos:line="78" pos:column="25"/></name><argument_list pos:line="78" pos:column="25">(<argument><expr><name><name pos:line="78" pos:column="26">r<pos:position pos:line="78" pos:column="27"/></name><operator pos:line="78" pos:column="27">-&gt;<pos:position pos:line="78" pos:column="32"/></operator><name pos:line="78" pos:column="29">err_headers_out<pos:position pos:line="78" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="46">"Expires"<pos:position pos:line="78" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="57"/></expr_stmt>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">exps<pos:position pos:line="79" pos:column="13"/></name> <operator pos:line="79" pos:column="14">==<pos:position pos:line="79" pos:column="16"/></operator> <name pos:line="79" pos:column="17">NULL<pos:position pos:line="79" pos:column="21"/></name></expr>)<pos:position pos:line="79" pos:column="22"/></condition><then pos:line="79" pos:column="22"> <block pos:line="79" pos:column="23">{
        <expr_stmt><expr><name pos:line="80" pos:column="9">exps<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">apr_table_get<pos:position pos:line="80" pos:column="29"/></name><argument_list pos:line="80" pos:column="29">(<argument><expr><name><name pos:line="80" pos:column="30">r<pos:position pos:line="80" pos:column="31"/></name><operator pos:line="80" pos:column="31">-&gt;<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="33">headers_out<pos:position pos:line="80" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="46">"Expires"<pos:position pos:line="80" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">exps<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">!=<pos:position pos:line="82" pos:column="16"/></operator> <name pos:line="82" pos:column="17">NULL<pos:position pos:line="82" pos:column="21"/></name></expr>)<pos:position pos:line="82" pos:column="22"/></condition><then pos:line="82" pos:column="22"> <block pos:line="82" pos:column="23">{
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">APR_DATE_BAD<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">==<pos:position pos:line="83" pos:column="28"/></operator> <operator pos:line="83" pos:column="29">(<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">exp<pos:position pos:line="83" pos:column="33"/></name> <operator pos:line="83" pos:column="34">=<pos:position pos:line="83" pos:column="35"/></operator> <call><name pos:line="83" pos:column="36">apr_date_parse_http<pos:position pos:line="83" pos:column="55"/></name><argument_list pos:line="83" pos:column="55">(<argument><expr><name pos:line="83" pos:column="56">exps<pos:position pos:line="83" pos:column="60"/></name></expr></argument>)<pos:position pos:line="83" pos:column="61"/></argument_list></call><operator pos:line="83" pos:column="61">)<pos:position pos:line="83" pos:column="62"/></operator></expr>)<pos:position pos:line="83" pos:column="63"/></condition><then pos:line="83" pos:column="63"> <block pos:line="83" pos:column="64">{
            <expr_stmt><expr><name pos:line="84" pos:column="13">exps<pos:position pos:line="84" pos:column="17"/></name> <operator pos:line="84" pos:column="18">=<pos:position pos:line="84" pos:column="19"/></operator> <name pos:line="84" pos:column="20">NULL<pos:position pos:line="84" pos:column="24"/></name></expr>;<pos:position pos:line="84" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then>
    <else pos:line="87" pos:column="5">else <block pos:line="87" pos:column="10">{
        <expr_stmt><expr><name pos:line="88" pos:column="9">exp<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">=<pos:position pos:line="88" pos:column="14"/></operator> <name pos:line="88" pos:column="15">APR_DATE_BAD<pos:position pos:line="88" pos:column="27"/></name></expr>;<pos:position pos:line="88" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="91" pos:column="5">/* read the last-modified date; if the date is bad, then delete it */</comment>
    <expr_stmt><expr><name pos:line="92" pos:column="5">lastmods<pos:position pos:line="92" pos:column="13"/></name> <operator pos:line="92" pos:column="14">=<pos:position pos:line="92" pos:column="15"/></operator> <call><name pos:line="92" pos:column="16">apr_table_get<pos:position pos:line="92" pos:column="29"/></name><argument_list pos:line="92" pos:column="29">(<argument><expr><name><name pos:line="92" pos:column="30">r<pos:position pos:line="92" pos:column="31"/></name><operator pos:line="92" pos:column="31">-&gt;<pos:position pos:line="92" pos:column="36"/></operator><name pos:line="92" pos:column="33">err_headers_out<pos:position pos:line="92" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="50">"Last-Modified"<pos:position pos:line="92" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="67"/></expr_stmt>
    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name pos:line="93" pos:column="9">lastmods<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">==<pos:position pos:line="93" pos:column="20"/></operator> <name pos:line="93" pos:column="21">NULL<pos:position pos:line="93" pos:column="25"/></name></expr>)<pos:position pos:line="93" pos:column="26"/></condition><then pos:line="93" pos:column="26"> <block pos:line="93" pos:column="27">{
        <expr_stmt><expr><name pos:line="94" pos:column="9">lastmods<pos:position pos:line="94" pos:column="17"/></name> <operator pos:line="94" pos:column="18">=<pos:position pos:line="94" pos:column="19"/></operator> <call><name pos:line="94" pos:column="20">apr_table_get<pos:position pos:line="94" pos:column="33"/></name><argument_list pos:line="94" pos:column="33">(<argument><expr><name><name pos:line="94" pos:column="34">r<pos:position pos:line="94" pos:column="35"/></name><operator pos:line="94" pos:column="35">-&gt;<pos:position pos:line="94" pos:column="40"/></operator><name pos:line="94" pos:column="37">headers_out<pos:position pos:line="94" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="50">"Last-Modified"<pos:position pos:line="94" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">lastmods<pos:position pos:line="96" pos:column="17"/></name> <operator pos:line="96" pos:column="18">!=<pos:position pos:line="96" pos:column="20"/></operator> <name pos:line="96" pos:column="21">NULL<pos:position pos:line="96" pos:column="25"/></name></expr>)<pos:position pos:line="96" pos:column="26"/></condition><then pos:line="96" pos:column="26"> <block pos:line="96" pos:column="27">{
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">APR_DATE_BAD<pos:position pos:line="97" pos:column="25"/></name> <operator pos:line="97" pos:column="26">==<pos:position pos:line="97" pos:column="28"/></operator> <operator pos:line="97" pos:column="29">(<pos:position pos:line="97" pos:column="30"/></operator><name pos:line="97" pos:column="30">lastmod<pos:position pos:line="97" pos:column="37"/></name> <operator pos:line="97" pos:column="38">=<pos:position pos:line="97" pos:column="39"/></operator> <call><name pos:line="97" pos:column="40">apr_date_parse_http<pos:position pos:line="97" pos:column="59"/></name><argument_list pos:line="97" pos:column="59">(<argument><expr><name pos:line="97" pos:column="60">lastmods<pos:position pos:line="97" pos:column="68"/></name></expr></argument>)<pos:position pos:line="97" pos:column="69"/></argument_list></call><operator pos:line="97" pos:column="69">)<pos:position pos:line="97" pos:column="70"/></operator></expr>)<pos:position pos:line="97" pos:column="71"/></condition><then pos:line="97" pos:column="71"> <block pos:line="97" pos:column="72">{
            <expr_stmt><expr><name pos:line="98" pos:column="13">lastmods<pos:position pos:line="98" pos:column="21"/></name> <operator pos:line="98" pos:column="22">=<pos:position pos:line="98" pos:column="23"/></operator> <name pos:line="98" pos:column="24">NULL<pos:position pos:line="98" pos:column="28"/></name></expr>;<pos:position pos:line="98" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="99" pos:column="10"/></block></then></if>
    }<pos:position pos:line="100" pos:column="6"/></block></then>
    <else pos:line="101" pos:column="5">else <block pos:line="101" pos:column="10">{
        <expr_stmt><expr><name pos:line="102" pos:column="9">lastmod<pos:position pos:line="102" pos:column="16"/></name> <operator pos:line="102" pos:column="17">=<pos:position pos:line="102" pos:column="18"/></operator> <name pos:line="102" pos:column="19">APR_DATE_BAD<pos:position pos:line="102" pos:column="31"/></name></expr>;<pos:position pos:line="102" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="105" pos:column="5">conf<pos:position pos:line="105" pos:column="9"/></name> <operator pos:line="105" pos:column="10">=<pos:position pos:line="105" pos:column="11"/></operator> <operator pos:line="105" pos:column="12">(<pos:position pos:line="105" pos:column="13"/></operator><name pos:line="105" pos:column="13">cache_server_conf<pos:position pos:line="105" pos:column="30"/></name> <operator pos:line="105" pos:column="31">*<pos:position pos:line="105" pos:column="32"/></operator><operator pos:line="105" pos:column="32">)<pos:position pos:line="105" pos:column="33"/></operator> <call><name pos:line="105" pos:column="34">ap_get_module_config<pos:position pos:line="105" pos:column="54"/></name><argument_list pos:line="105" pos:column="54">(<argument><expr><name><name pos:line="105" pos:column="55">r<pos:position pos:line="105" pos:column="56"/></name><operator pos:line="105" pos:column="56">-&gt;<pos:position pos:line="105" pos:column="61"/></operator><name pos:line="105" pos:column="58">server<pos:position pos:line="105" pos:column="64"/></name><operator pos:line="105" pos:column="64">-&gt;<pos:position pos:line="105" pos:column="69"/></operator><name pos:line="105" pos:column="66">module_config<pos:position pos:line="105" pos:column="79"/></name></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="81">&amp;<pos:position pos:line="105" pos:column="86"/></operator><name pos:line="105" pos:column="82">cache_module<pos:position pos:line="105" pos:column="94"/></name></expr></argument>)<pos:position pos:line="105" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="96"/></expr_stmt>
    <comment type="block" pos:line="106" pos:column="5">/* read the etag and cache-control from the entity */</comment>
    <expr_stmt><expr><name pos:line="107" pos:column="5">etag<pos:position pos:line="107" pos:column="9"/></name> <operator pos:line="107" pos:column="10">=<pos:position pos:line="107" pos:column="11"/></operator> <call><name pos:line="107" pos:column="12">apr_table_get<pos:position pos:line="107" pos:column="25"/></name><argument_list pos:line="107" pos:column="25">(<argument><expr><name><name pos:line="107" pos:column="26">r<pos:position pos:line="107" pos:column="27"/></name><operator pos:line="107" pos:column="27">-&gt;<pos:position pos:line="107" pos:column="32"/></operator><name pos:line="107" pos:column="29">err_headers_out<pos:position pos:line="107" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="46">"Etag"<pos:position pos:line="107" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="54"/></expr_stmt>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><name pos:line="108" pos:column="9">etag<pos:position pos:line="108" pos:column="13"/></name> <operator pos:line="108" pos:column="14">==<pos:position pos:line="108" pos:column="16"/></operator> <name pos:line="108" pos:column="17">NULL<pos:position pos:line="108" pos:column="21"/></name></expr>)<pos:position pos:line="108" pos:column="22"/></condition><then pos:line="108" pos:column="22"> <block pos:line="108" pos:column="23">{
        <expr_stmt><expr><name pos:line="109" pos:column="9">etag<pos:position pos:line="109" pos:column="13"/></name> <operator pos:line="109" pos:column="14">=<pos:position pos:line="109" pos:column="15"/></operator> <call><name pos:line="109" pos:column="16">apr_table_get<pos:position pos:line="109" pos:column="29"/></name><argument_list pos:line="109" pos:column="29">(<argument><expr><name><name pos:line="109" pos:column="30">r<pos:position pos:line="109" pos:column="31"/></name><operator pos:line="109" pos:column="31">-&gt;<pos:position pos:line="109" pos:column="36"/></operator><name pos:line="109" pos:column="33">headers_out<pos:position pos:line="109" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="46">"Etag"<pos:position pos:line="109" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="111" pos:column="5">cc_out<pos:position pos:line="111" pos:column="11"/></name> <operator pos:line="111" pos:column="12">=<pos:position pos:line="111" pos:column="13"/></operator> <call><name pos:line="111" pos:column="14">apr_table_get<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><name><name pos:line="111" pos:column="28">r<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">-&gt;<pos:position pos:line="111" pos:column="34"/></operator><name pos:line="111" pos:column="31">err_headers_out<pos:position pos:line="111" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="48">"Cache-Control"<pos:position pos:line="111" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="65"/></expr_stmt>
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">cc_out<pos:position pos:line="112" pos:column="15"/></name> <operator pos:line="112" pos:column="16">==<pos:position pos:line="112" pos:column="18"/></operator> <name pos:line="112" pos:column="19">NULL<pos:position pos:line="112" pos:column="23"/></name></expr>)<pos:position pos:line="112" pos:column="24"/></condition><then pos:line="112" pos:column="24"> <block pos:line="112" pos:column="25">{
        <expr_stmt><expr><name pos:line="113" pos:column="9">cc_out<pos:position pos:line="113" pos:column="15"/></name> <operator pos:line="113" pos:column="16">=<pos:position pos:line="113" pos:column="17"/></operator> <call><name pos:line="113" pos:column="18">apr_table_get<pos:position pos:line="113" pos:column="31"/></name><argument_list pos:line="113" pos:column="31">(<argument><expr><name><name pos:line="113" pos:column="32">r<pos:position pos:line="113" pos:column="33"/></name><operator pos:line="113" pos:column="33">-&gt;<pos:position pos:line="113" pos:column="38"/></operator><name pos:line="113" pos:column="35">headers_out<pos:position pos:line="113" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="48">"Cache-Control"<pos:position pos:line="113" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="116" pos:column="5">/*
     * what responses should we not cache?
     *
     * At this point we decide based on the response headers whether it
     * is appropriate _NOT_ to cache the data from the server. There are
     * a whole lot of conditions that prevent us from caching this data.
     * They are tested here one by one to be clear and unambiguous. 
     */</comment>
    <if pos:line="124" pos:column="5">if <condition pos:line="124" pos:column="8">(<expr><name><name pos:line="124" pos:column="9">r<pos:position pos:line="124" pos:column="10"/></name><operator pos:line="124" pos:column="10">-&gt;<pos:position pos:line="124" pos:column="15"/></operator><name pos:line="124" pos:column="12">status<pos:position pos:line="124" pos:column="18"/></name></name> <operator pos:line="124" pos:column="19">!=<pos:position pos:line="124" pos:column="21"/></operator> <name pos:line="124" pos:column="22">HTTP_OK<pos:position pos:line="124" pos:column="29"/></name> <operator pos:line="124" pos:column="30">&amp;&amp;<pos:position pos:line="124" pos:column="40"/></operator> <name><name pos:line="124" pos:column="33">r<pos:position pos:line="124" pos:column="34"/></name><operator pos:line="124" pos:column="34">-&gt;<pos:position pos:line="124" pos:column="39"/></operator><name pos:line="124" pos:column="36">status<pos:position pos:line="124" pos:column="42"/></name></name> <operator pos:line="124" pos:column="43">!=<pos:position pos:line="124" pos:column="45"/></operator> <name pos:line="124" pos:column="46">HTTP_NON_AUTHORITATIVE<pos:position pos:line="124" pos:column="68"/></name>
        <operator pos:line="125" pos:column="9">&amp;&amp;<pos:position pos:line="125" pos:column="19"/></operator> <name><name pos:line="125" pos:column="12">r<pos:position pos:line="125" pos:column="13"/></name><operator pos:line="125" pos:column="13">-&gt;<pos:position pos:line="125" pos:column="18"/></operator><name pos:line="125" pos:column="15">status<pos:position pos:line="125" pos:column="21"/></name></name> <operator pos:line="125" pos:column="22">!=<pos:position pos:line="125" pos:column="24"/></operator> <name pos:line="125" pos:column="25">HTTP_MULTIPLE_CHOICES<pos:position pos:line="125" pos:column="46"/></name>
        <operator pos:line="126" pos:column="9">&amp;&amp;<pos:position pos:line="126" pos:column="19"/></operator> <name><name pos:line="126" pos:column="12">r<pos:position pos:line="126" pos:column="13"/></name><operator pos:line="126" pos:column="13">-&gt;<pos:position pos:line="126" pos:column="18"/></operator><name pos:line="126" pos:column="15">status<pos:position pos:line="126" pos:column="21"/></name></name> <operator pos:line="126" pos:column="22">!=<pos:position pos:line="126" pos:column="24"/></operator> <name pos:line="126" pos:column="25">HTTP_MOVED_PERMANENTLY<pos:position pos:line="126" pos:column="47"/></name>
        <operator pos:line="127" pos:column="9">&amp;&amp;<pos:position pos:line="127" pos:column="19"/></operator> <name><name pos:line="127" pos:column="12">r<pos:position pos:line="127" pos:column="13"/></name><operator pos:line="127" pos:column="13">-&gt;<pos:position pos:line="127" pos:column="18"/></operator><name pos:line="127" pos:column="15">status<pos:position pos:line="127" pos:column="21"/></name></name> <operator pos:line="127" pos:column="22">!=<pos:position pos:line="127" pos:column="24"/></operator> <name pos:line="127" pos:column="25">HTTP_NOT_MODIFIED<pos:position pos:line="127" pos:column="42"/></name></expr>)<pos:position pos:line="127" pos:column="43"/></condition><then pos:line="127" pos:column="43"> <block pos:line="127" pos:column="44">{
        <comment type="block" pos:line="128" pos:column="9">/* RFC2616 13.4 we are allowed to cache 200, 203, 206, 300, 301 or 410
         * We don't cache 206, because we don't (yet) cache partial responses.
         * We include 304 Not Modified here too as this is the origin server
         * telling us to serve the cached copy.
         */</comment>
        <expr_stmt><expr><name pos:line="133" pos:column="9">reason<pos:position pos:line="133" pos:column="15"/></name> <operator pos:line="133" pos:column="16">=<pos:position pos:line="133" pos:column="17"/></operator> <call><name pos:line="133" pos:column="18">apr_psprintf<pos:position pos:line="133" pos:column="30"/></name><argument_list pos:line="133" pos:column="30">(<argument><expr><name pos:line="133" pos:column="31">p<pos:position pos:line="133" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="34">"Response status %d"<pos:position pos:line="133" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="56">r<pos:position pos:line="133" pos:column="57"/></name><operator pos:line="133" pos:column="57">-&gt;<pos:position pos:line="133" pos:column="62"/></operator><name pos:line="133" pos:column="59">status<pos:position pos:line="133" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></then> 
    <elseif pos:line="135" pos:column="5">else <if pos:line="135" pos:column="10">if <condition pos:line="135" pos:column="13">(<expr><name pos:line="135" pos:column="14">exps<pos:position pos:line="135" pos:column="18"/></name> <operator pos:line="135" pos:column="19">!=<pos:position pos:line="135" pos:column="21"/></operator> <name pos:line="135" pos:column="22">NULL<pos:position pos:line="135" pos:column="26"/></name> <operator pos:line="135" pos:column="27">&amp;&amp;<pos:position pos:line="135" pos:column="37"/></operator> <name pos:line="135" pos:column="30">exp<pos:position pos:line="135" pos:column="33"/></name> <operator pos:line="135" pos:column="34">==<pos:position pos:line="135" pos:column="36"/></operator> <name pos:line="135" pos:column="37">APR_DATE_BAD<pos:position pos:line="135" pos:column="49"/></name></expr>)<pos:position pos:line="135" pos:column="50"/></condition><then pos:line="135" pos:column="50"> <block pos:line="135" pos:column="51">{
        <comment type="block" pos:line="136" pos:column="9">/* if a broken Expires header is present, don't cache it */</comment>
        <expr_stmt><expr><name pos:line="137" pos:column="9">reason<pos:position pos:line="137" pos:column="15"/></name> <operator pos:line="137" pos:column="16">=<pos:position pos:line="137" pos:column="17"/></operator> <call><name pos:line="137" pos:column="18">apr_pstrcat<pos:position pos:line="137" pos:column="29"/></name><argument_list pos:line="137" pos:column="29">(<argument><expr><name pos:line="137" pos:column="30">p<pos:position pos:line="137" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="33">"Broken expires header: "<pos:position pos:line="137" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="137" pos:column="60">exps<pos:position pos:line="137" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="66">NULL<pos:position pos:line="137" pos:column="70"/></name></expr></argument>)<pos:position pos:line="137" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="138" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="139" pos:column="5">else <if pos:line="139" pos:column="10">if <condition pos:line="139" pos:column="13">(<expr><name><name pos:line="139" pos:column="14">r<pos:position pos:line="139" pos:column="15"/></name><operator pos:line="139" pos:column="15">-&gt;<pos:position pos:line="139" pos:column="20"/></operator><name pos:line="139" pos:column="17">args<pos:position pos:line="139" pos:column="21"/></name></name> <operator pos:line="139" pos:column="22">&amp;&amp;<pos:position pos:line="139" pos:column="32"/></operator> <name pos:line="139" pos:column="25">exps<pos:position pos:line="139" pos:column="29"/></name> <operator pos:line="139" pos:column="30">==<pos:position pos:line="139" pos:column="32"/></operator> <name pos:line="139" pos:column="33">NULL<pos:position pos:line="139" pos:column="37"/></name></expr>)<pos:position pos:line="139" pos:column="38"/></condition><then pos:line="139" pos:column="38"> <block pos:line="139" pos:column="39">{
        <comment type="block" pos:line="140" pos:column="9">/* if query string present but no expiration time, don't cache it
         * (RFC 2616/13.9)
         */</comment>
        <expr_stmt><expr><name pos:line="143" pos:column="9">reason<pos:position pos:line="143" pos:column="15"/></name> <operator pos:line="143" pos:column="16">=<pos:position pos:line="143" pos:column="17"/></operator> <literal type="string" pos:line="143" pos:column="18">"Query string present but no expires header"<pos:position pos:line="143" pos:column="62"/></literal></expr>;<pos:position pos:line="143" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="145" pos:column="5">else <if pos:line="145" pos:column="10">if <condition pos:line="145" pos:column="13">(<expr><name><name pos:line="145" pos:column="14">r<pos:position pos:line="145" pos:column="15"/></name><operator pos:line="145" pos:column="15">-&gt;<pos:position pos:line="145" pos:column="20"/></operator><name pos:line="145" pos:column="17">status<pos:position pos:line="145" pos:column="23"/></name></name> <operator pos:line="145" pos:column="24">==<pos:position pos:line="145" pos:column="26"/></operator> <name pos:line="145" pos:column="27">HTTP_NOT_MODIFIED<pos:position pos:line="145" pos:column="44"/></name> <operator pos:line="145" pos:column="45">&amp;&amp;<pos:position pos:line="145" pos:column="55"/></operator>
             <operator pos:line="146" pos:column="14">!<pos:position pos:line="146" pos:column="15"/></operator><name><name pos:line="146" pos:column="15">cache<pos:position pos:line="146" pos:column="20"/></name><operator pos:line="146" pos:column="20">-&gt;<pos:position pos:line="146" pos:column="25"/></operator><name pos:line="146" pos:column="22">handle<pos:position pos:line="146" pos:column="28"/></name></name> <operator pos:line="146" pos:column="29">&amp;&amp;<pos:position pos:line="146" pos:column="39"/></operator> <operator pos:line="146" pos:column="32">!<pos:position pos:line="146" pos:column="33"/></operator><name><name pos:line="146" pos:column="33">cache<pos:position pos:line="146" pos:column="38"/></name><operator pos:line="146" pos:column="38">-&gt;<pos:position pos:line="146" pos:column="43"/></operator><name pos:line="146" pos:column="40">stale_handle<pos:position pos:line="146" pos:column="52"/></name></name></expr>)<pos:position pos:line="146" pos:column="53"/></condition><then pos:line="146" pos:column="53"> <block pos:line="146" pos:column="54">{
        <comment type="block" pos:line="147" pos:column="9">/* if the server said 304 Not Modified but we have no cache
         * file - pass this untouched to the user agent, it's not for us.
         */</comment>
        <expr_stmt><expr><name pos:line="150" pos:column="9">reason<pos:position pos:line="150" pos:column="15"/></name> <operator pos:line="150" pos:column="16">=<pos:position pos:line="150" pos:column="17"/></operator> <literal type="string" pos:line="150" pos:column="18">"HTTP Status 304 Not Modified"<pos:position pos:line="150" pos:column="48"/></literal></expr>;<pos:position pos:line="150" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="151" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="152" pos:column="5">else <if pos:line="152" pos:column="10">if <condition pos:line="152" pos:column="13">(<expr><name><name pos:line="152" pos:column="14">r<pos:position pos:line="152" pos:column="15"/></name><operator pos:line="152" pos:column="15">-&gt;<pos:position pos:line="152" pos:column="20"/></operator><name pos:line="152" pos:column="17">status<pos:position pos:line="152" pos:column="23"/></name></name> <operator pos:line="152" pos:column="24">==<pos:position pos:line="152" pos:column="26"/></operator> <name pos:line="152" pos:column="27">HTTP_OK<pos:position pos:line="152" pos:column="34"/></name> <operator pos:line="152" pos:column="35">&amp;&amp;<pos:position pos:line="152" pos:column="45"/></operator> <name pos:line="152" pos:column="38">lastmods<pos:position pos:line="152" pos:column="46"/></name> <operator pos:line="152" pos:column="47">==<pos:position pos:line="152" pos:column="49"/></operator> <name pos:line="152" pos:column="50">NULL<pos:position pos:line="152" pos:column="54"/></name> <operator pos:line="152" pos:column="55">&amp;&amp;<pos:position pos:line="152" pos:column="65"/></operator> <name pos:line="152" pos:column="58">etag<pos:position pos:line="152" pos:column="62"/></name> <operator pos:line="152" pos:column="63">==<pos:position pos:line="152" pos:column="65"/></operator> <name pos:line="152" pos:column="66">NULL<pos:position pos:line="152" pos:column="70"/></name> 
             <operator pos:line="153" pos:column="14">&amp;&amp;<pos:position pos:line="153" pos:column="24"/></operator> <operator pos:line="153" pos:column="17">(<pos:position pos:line="153" pos:column="18"/></operator><name pos:line="153" pos:column="18">exps<pos:position pos:line="153" pos:column="22"/></name> <operator pos:line="153" pos:column="23">==<pos:position pos:line="153" pos:column="25"/></operator> <name pos:line="153" pos:column="26">NULL<pos:position pos:line="153" pos:column="30"/></name><operator pos:line="153" pos:column="30">)<pos:position pos:line="153" pos:column="31"/></operator> <operator pos:line="153" pos:column="32">&amp;&amp;<pos:position pos:line="153" pos:column="42"/></operator> <operator pos:line="153" pos:column="35">(<pos:position pos:line="153" pos:column="36"/></operator><name><name pos:line="153" pos:column="36">conf<pos:position pos:line="153" pos:column="40"/></name><operator pos:line="153" pos:column="40">-&gt;<pos:position pos:line="153" pos:column="45"/></operator><name pos:line="153" pos:column="42">no_last_mod_ignore<pos:position pos:line="153" pos:column="60"/></name></name> <operator pos:line="153" pos:column="61">==<pos:position pos:line="153" pos:column="63"/></operator><literal type="number" pos:line="153" pos:column="63">0<pos:position pos:line="153" pos:column="64"/></literal><operator pos:line="153" pos:column="64">)<pos:position pos:line="153" pos:column="65"/></operator></expr>)<pos:position pos:line="153" pos:column="66"/></condition><then pos:line="153" pos:column="66"> <block pos:line="153" pos:column="67">{
        <comment type="block" pos:line="154" pos:column="9">/* 200 OK response from HTTP/1.0 and up without Last-Modified,
         * Etag, or Expires headers.
         */</comment>
        <comment type="block" pos:line="157" pos:column="9">/* Note: mod-include clears last_modified/expires/etags - this
         * is why we have an optional function for a key-gen ;-) 
         */</comment>
        <expr_stmt><expr><name pos:line="160" pos:column="9">reason<pos:position pos:line="160" pos:column="15"/></name> <operator pos:line="160" pos:column="16">=<pos:position pos:line="160" pos:column="17"/></operator> <literal type="string" pos:line="160" pos:column="18">"No Last-Modified, Etag, or Expires headers"<pos:position pos:line="160" pos:column="62"/></literal></expr>;<pos:position pos:line="160" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="162" pos:column="5">else <if pos:line="162" pos:column="10">if <condition pos:line="162" pos:column="13">(<expr><name><name pos:line="162" pos:column="14">r<pos:position pos:line="162" pos:column="15"/></name><operator pos:line="162" pos:column="15">-&gt;<pos:position pos:line="162" pos:column="20"/></operator><name pos:line="162" pos:column="17">header_only<pos:position pos:line="162" pos:column="28"/></name></name></expr>)<pos:position pos:line="162" pos:column="29"/></condition><then pos:line="162" pos:column="29"> <block pos:line="162" pos:column="30">{
        <comment type="block" pos:line="163" pos:column="9">/* HEAD requests */</comment>
        <expr_stmt><expr><name pos:line="164" pos:column="9">reason<pos:position pos:line="164" pos:column="15"/></name> <operator pos:line="164" pos:column="16">=<pos:position pos:line="164" pos:column="17"/></operator> <literal type="string" pos:line="164" pos:column="18">"HTTP HEAD request"<pos:position pos:line="164" pos:column="37"/></literal></expr>;<pos:position pos:line="164" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="165" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="166" pos:column="5">else <if pos:line="166" pos:column="10">if <condition pos:line="166" pos:column="13">(<expr><call><name pos:line="166" pos:column="14">ap_cache_liststr<pos:position pos:line="166" pos:column="30"/></name><argument_list pos:line="166" pos:column="30">(<argument><expr><name pos:line="166" pos:column="31">NULL<pos:position pos:line="166" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="37">cc_out<pos:position pos:line="166" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="45">"no-store"<pos:position pos:line="166" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="57">NULL<pos:position pos:line="166" pos:column="61"/></name></expr></argument>)<pos:position pos:line="166" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="63"/></condition><then pos:line="166" pos:column="63"> <block pos:line="166" pos:column="64">{
        <comment type="block" pos:line="167" pos:column="9">/* RFC2616 14.9.2 Cache-Control: no-store response
         * indicating do not cache, or stop now if you are
         * trying to cache it */</comment>
        <expr_stmt><expr><name pos:line="170" pos:column="9">reason<pos:position pos:line="170" pos:column="15"/></name> <operator pos:line="170" pos:column="16">=<pos:position pos:line="170" pos:column="17"/></operator> <literal type="string" pos:line="170" pos:column="18">"Cache-Control: no-store present"<pos:position pos:line="170" pos:column="51"/></literal></expr>;<pos:position pos:line="170" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="171" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="172" pos:column="5">else <if pos:line="172" pos:column="10">if <condition pos:line="172" pos:column="13">(<expr><call><name pos:line="172" pos:column="14">ap_cache_liststr<pos:position pos:line="172" pos:column="30"/></name><argument_list pos:line="172" pos:column="30">(<argument><expr><name pos:line="172" pos:column="31">NULL<pos:position pos:line="172" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="37">cc_out<pos:position pos:line="172" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="45">"private"<pos:position pos:line="172" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="172" pos:column="56">NULL<pos:position pos:line="172" pos:column="60"/></name></expr></argument>)<pos:position pos:line="172" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="172" pos:column="62"/></condition><then pos:line="172" pos:column="62"> <block pos:line="172" pos:column="63">{
        <comment type="block" pos:line="173" pos:column="9">/* RFC2616 14.9.1 Cache-Control: private
         * this object is marked for this user's eyes only. Behave
         * as a tunnel.
         */</comment>
        <expr_stmt><expr><name pos:line="177" pos:column="9">reason<pos:position pos:line="177" pos:column="15"/></name> <operator pos:line="177" pos:column="16">=<pos:position pos:line="177" pos:column="17"/></operator> <literal type="string" pos:line="177" pos:column="18">"Cache-Control: private present"<pos:position pos:line="177" pos:column="50"/></literal></expr>;<pos:position pos:line="177" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="178" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="179" pos:column="5">else <if pos:line="179" pos:column="10">if <condition pos:line="179" pos:column="13">(<expr><call><name pos:line="179" pos:column="14">apr_table_get<pos:position pos:line="179" pos:column="27"/></name><argument_list pos:line="179" pos:column="27">(<argument><expr><name><name pos:line="179" pos:column="28">r<pos:position pos:line="179" pos:column="29"/></name><operator pos:line="179" pos:column="29">-&gt;<pos:position pos:line="179" pos:column="34"/></operator><name pos:line="179" pos:column="31">headers_in<pos:position pos:line="179" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="43">"Authorization"<pos:position pos:line="179" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="59"/></argument_list></call> <operator pos:line="179" pos:column="60">!=<pos:position pos:line="179" pos:column="62"/></operator> <name pos:line="179" pos:column="63">NULL<pos:position pos:line="179" pos:column="67"/></name>
             <operator pos:line="180" pos:column="14">&amp;&amp;<pos:position pos:line="180" pos:column="24"/></operator> <operator pos:line="180" pos:column="17">!<pos:position pos:line="180" pos:column="18"/></operator><operator pos:line="180" pos:column="18">(<pos:position pos:line="180" pos:column="19"/></operator><call><name pos:line="180" pos:column="19">ap_cache_liststr<pos:position pos:line="180" pos:column="35"/></name><argument_list pos:line="180" pos:column="35">(<argument><expr><name pos:line="180" pos:column="36">NULL<pos:position pos:line="180" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="42">cc_out<pos:position pos:line="180" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="50">"s-maxage"<pos:position pos:line="180" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="180" pos:column="62">NULL<pos:position pos:line="180" pos:column="66"/></name></expr></argument>)<pos:position pos:line="180" pos:column="67"/></argument_list></call>
                  <operator pos:line="181" pos:column="19">||<pos:position pos:line="181" pos:column="21"/></operator> <call><name pos:line="181" pos:column="22">ap_cache_liststr<pos:position pos:line="181" pos:column="38"/></name><argument_list pos:line="181" pos:column="38">(<argument><expr><name pos:line="181" pos:column="39">NULL<pos:position pos:line="181" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="45">cc_out<pos:position pos:line="181" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="53">"must-revalidate"<pos:position pos:line="181" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="181" pos:column="72">NULL<pos:position pos:line="181" pos:column="76"/></name></expr></argument>)<pos:position pos:line="181" pos:column="77"/></argument_list></call>
                  <operator pos:line="182" pos:column="19">||<pos:position pos:line="182" pos:column="21"/></operator> <call><name pos:line="182" pos:column="22">ap_cache_liststr<pos:position pos:line="182" pos:column="38"/></name><argument_list pos:line="182" pos:column="38">(<argument><expr><name pos:line="182" pos:column="39">NULL<pos:position pos:line="182" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="45">cc_out<pos:position pos:line="182" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="53">"public"<pos:position pos:line="182" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="182" pos:column="63">NULL<pos:position pos:line="182" pos:column="67"/></name></expr></argument>)<pos:position pos:line="182" pos:column="68"/></argument_list></call><operator pos:line="182" pos:column="68">)<pos:position pos:line="182" pos:column="69"/></operator></expr>)<pos:position pos:line="182" pos:column="70"/></condition><then pos:line="182" pos:column="70"> <block pos:line="182" pos:column="71">{
        <comment type="block" pos:line="183" pos:column="9">/* RFC2616 14.8 Authorisation:
         * if authorisation is included in the request, we don't cache,
         * but we can cache if the following exceptions are true:
         * 1) If Cache-Control: s-maxage is included
         * 2) If Cache-Control: must-revalidate is included
         * 3) If Cache-Control: public is included
         */</comment>
        <expr_stmt><expr><name pos:line="190" pos:column="9">reason<pos:position pos:line="190" pos:column="15"/></name> <operator pos:line="190" pos:column="16">=<pos:position pos:line="190" pos:column="17"/></operator> <literal type="string" pos:line="190" pos:column="18">"Authorization required"<pos:position pos:line="190" pos:column="42"/></literal></expr>;<pos:position pos:line="190" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="191" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="192" pos:column="5">else <if pos:line="192" pos:column="10">if <condition pos:line="192" pos:column="13">(<expr><name><name pos:line="192" pos:column="14">r<pos:position pos:line="192" pos:column="15"/></name><operator pos:line="192" pos:column="15">-&gt;<pos:position pos:line="192" pos:column="20"/></operator><name pos:line="192" pos:column="17">no_cache<pos:position pos:line="192" pos:column="25"/></name></name></expr>)<pos:position pos:line="192" pos:column="26"/></condition><then pos:line="192" pos:column="26"> <block pos:line="192" pos:column="27">{
        <comment type="block" pos:line="193" pos:column="9">/* or we've been asked not to cache it above */</comment>
        <expr_stmt><expr><name pos:line="194" pos:column="9">reason<pos:position pos:line="194" pos:column="15"/></name> <operator pos:line="194" pos:column="16">=<pos:position pos:line="194" pos:column="17"/></operator> <literal type="string" pos:line="194" pos:column="18">"no_cache present"<pos:position pos:line="194" pos:column="36"/></literal></expr>;<pos:position pos:line="194" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="195" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="197" pos:column="5">if <condition pos:line="197" pos:column="8">(<expr><name pos:line="197" pos:column="9">reason<pos:position pos:line="197" pos:column="15"/></name></expr>)<pos:position pos:line="197" pos:column="16"/></condition><then pos:line="197" pos:column="16"> <block pos:line="197" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="198" pos:column="9">ap_log_error<pos:position pos:line="198" pos:column="21"/></name><argument_list pos:line="198" pos:column="21">(<argument><expr><name pos:line="198" pos:column="22">APLOG_MARK<pos:position pos:line="198" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="34">APLOG_DEBUG<pos:position pos:line="198" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="198" pos:column="47">0<pos:position pos:line="198" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="198" pos:column="50">r<pos:position pos:line="198" pos:column="51"/></name><operator pos:line="198" pos:column="51">-&gt;<pos:position pos:line="198" pos:column="56"/></operator><name pos:line="198" pos:column="53">server<pos:position pos:line="198" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="199" pos:column="22">"cache: %s not cached. Reason: %s"<pos:position pos:line="199" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="199" pos:column="58">url<pos:position pos:line="199" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="63">reason<pos:position pos:line="199" pos:column="69"/></name></expr></argument>)<pos:position pos:line="199" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="71"/></expr_stmt>
        <comment type="block" pos:line="200" pos:column="9">/* remove this object from the cache 
         * BillS Asks.. Why do we need to make this call to remove_url?
         * leave it in for now..
         */</comment>
        <expr_stmt><expr><call><name pos:line="204" pos:column="9">cache_remove_url<pos:position pos:line="204" pos:column="25"/></name><argument_list pos:line="204" pos:column="25">(<argument><expr><name pos:line="204" pos:column="26">r<pos:position pos:line="204" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="29">url<pos:position pos:line="204" pos:column="32"/></name></expr></argument>)<pos:position pos:line="204" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="206" pos:column="9">/* remove this filter from the chain */</comment>
        <expr_stmt><expr><call><name pos:line="207" pos:column="9">ap_remove_output_filter<pos:position pos:line="207" pos:column="32"/></name><argument_list pos:line="207" pos:column="32">(<argument><expr><name pos:line="207" pos:column="33">f<pos:position pos:line="207" pos:column="34"/></name></expr></argument>)<pos:position pos:line="207" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="209" pos:column="9">/* ship the data up the stack */</comment>
        <return pos:line="210" pos:column="9">return <expr><call><name pos:line="210" pos:column="16">ap_pass_brigade<pos:position pos:line="210" pos:column="31"/></name><argument_list pos:line="210" pos:column="31">(<argument><expr><name><name pos:line="210" pos:column="32">f<pos:position pos:line="210" pos:column="33"/></name><operator pos:line="210" pos:column="33">-&gt;<pos:position pos:line="210" pos:column="38"/></operator><name pos:line="210" pos:column="35">next<pos:position pos:line="210" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="41">in<pos:position pos:line="210" pos:column="43"/></name></expr></argument>)<pos:position pos:line="210" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="45"/></return>
    }<pos:position pos:line="211" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="213" pos:column="5">/* Make it so that we don't execute this path again. */</comment>
    <expr_stmt><expr><name><name pos:line="214" pos:column="5">cache<pos:position pos:line="214" pos:column="10"/></name><operator pos:line="214" pos:column="10">-&gt;<pos:position pos:line="214" pos:column="15"/></operator><name pos:line="214" pos:column="12">in_checked<pos:position pos:line="214" pos:column="22"/></name></name> <operator pos:line="214" pos:column="23">=<pos:position pos:line="214" pos:column="24"/></operator> <literal type="number" pos:line="214" pos:column="25">1<pos:position pos:line="214" pos:column="26"/></literal></expr>;<pos:position pos:line="214" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="216" pos:column="5">/* Set the content length if known. 
     */</comment>
    <expr_stmt><expr><name pos:line="218" pos:column="5">cl<pos:position pos:line="218" pos:column="7"/></name> <operator pos:line="218" pos:column="8">=<pos:position pos:line="218" pos:column="9"/></operator> <call><name pos:line="218" pos:column="10">apr_table_get<pos:position pos:line="218" pos:column="23"/></name><argument_list pos:line="218" pos:column="23">(<argument><expr><name><name pos:line="218" pos:column="24">r<pos:position pos:line="218" pos:column="25"/></name><operator pos:line="218" pos:column="25">-&gt;<pos:position pos:line="218" pos:column="30"/></operator><name pos:line="218" pos:column="27">err_headers_out<pos:position pos:line="218" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="44">"Content-Length"<pos:position pos:line="218" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="218" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="62"/></expr_stmt>
    <if pos:line="219" pos:column="5">if <condition pos:line="219" pos:column="8">(<expr><name pos:line="219" pos:column="9">cl<pos:position pos:line="219" pos:column="11"/></name> <operator pos:line="219" pos:column="12">==<pos:position pos:line="219" pos:column="14"/></operator> <name pos:line="219" pos:column="15">NULL<pos:position pos:line="219" pos:column="19"/></name></expr>)<pos:position pos:line="219" pos:column="20"/></condition><then pos:line="219" pos:column="20"> <block pos:line="219" pos:column="21">{
        <expr_stmt><expr><name pos:line="220" pos:column="9">cl<pos:position pos:line="220" pos:column="11"/></name> <operator pos:line="220" pos:column="12">=<pos:position pos:line="220" pos:column="13"/></operator> <call><name pos:line="220" pos:column="14">apr_table_get<pos:position pos:line="220" pos:column="27"/></name><argument_list pos:line="220" pos:column="27">(<argument><expr><name><name pos:line="220" pos:column="28">r<pos:position pos:line="220" pos:column="29"/></name><operator pos:line="220" pos:column="29">-&gt;<pos:position pos:line="220" pos:column="34"/></operator><name pos:line="220" pos:column="31">headers_out<pos:position pos:line="220" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="44">"Content-Length"<pos:position pos:line="220" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="221" pos:column="6"/></block></then></if>
    <if pos:line="222" pos:column="5">if <condition pos:line="222" pos:column="8">(<expr><name pos:line="222" pos:column="9">cl<pos:position pos:line="222" pos:column="11"/></name></expr>)<pos:position pos:line="222" pos:column="12"/></condition><then pos:line="222" pos:column="12"> <block pos:line="222" pos:column="13">{
<cpp:if pos:line="223" pos:column="1">#<cpp:directive pos:line="223" pos:column="2">if<pos:position pos:line="223" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="223" pos:column="5">0<pos:position pos:line="223" pos:column="6"/></literal></expr></cpp:if>
        char *errp;
        if (apr_strtoff(&amp;size, cl, &amp;errp, 10) || *errp || size &lt; 0) {
            cl = NULL; <comment type="block" pos:line="226" pos:column="24">/* parse error, see next 'if' block */</comment>
        }
<cpp:else pos:line="228" pos:column="1">#<cpp:directive pos:line="228" pos:column="2">else<pos:position pos:line="228" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="229" pos:column="9">size<pos:position pos:line="229" pos:column="13"/></name> <operator pos:line="229" pos:column="14">=<pos:position pos:line="229" pos:column="15"/></operator> <call><name pos:line="229" pos:column="16">apr_atoi64<pos:position pos:line="229" pos:column="26"/></name><argument_list pos:line="229" pos:column="26">(<argument><expr><name pos:line="229" pos:column="27">cl<pos:position pos:line="229" pos:column="29"/></name></expr></argument>)<pos:position pos:line="229" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="31"/></expr_stmt>
        <if pos:line="230" pos:column="9">if <condition pos:line="230" pos:column="12">(<expr><name pos:line="230" pos:column="13">size<pos:position pos:line="230" pos:column="17"/></name> <operator pos:line="230" pos:column="18">&lt;<pos:position pos:line="230" pos:column="22"/></operator> <literal type="number" pos:line="230" pos:column="20">0<pos:position pos:line="230" pos:column="21"/></literal></expr>)<pos:position pos:line="230" pos:column="22"/></condition><then pos:line="230" pos:column="22"> <block pos:line="230" pos:column="23">{
            <expr_stmt><expr><name pos:line="231" pos:column="13">cl<pos:position pos:line="231" pos:column="15"/></name> <operator pos:line="231" pos:column="16">=<pos:position pos:line="231" pos:column="17"/></operator> <name pos:line="231" pos:column="18">NULL<pos:position pos:line="231" pos:column="22"/></name></expr>;<pos:position pos:line="231" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="232" pos:column="10"/></block></then></if>
<cpp:endif pos:line="233" pos:column="1">#<cpp:directive pos:line="233" pos:column="2">endif<pos:position pos:line="233" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="234" pos:column="6"/></block></then></if>

    <if pos:line="236" pos:column="5">if <condition pos:line="236" pos:column="8">(<expr><operator pos:line="236" pos:column="9">!<pos:position pos:line="236" pos:column="10"/></operator><name pos:line="236" pos:column="10">cl<pos:position pos:line="236" pos:column="12"/></name></expr>)<pos:position pos:line="236" pos:column="13"/></condition><then pos:line="236" pos:column="13"> <block pos:line="236" pos:column="14">{
        <comment type="block" pos:line="237" pos:column="9">/* if we don't get the content-length, see if we have all the 
         * buckets and use their length to calculate the size 
         */</comment>
        <decl_stmt><decl><type><name pos:line="240" pos:column="9">apr_bucket<pos:position pos:line="240" pos:column="19"/></name> <modifier pos:line="240" pos:column="20">*<pos:position pos:line="240" pos:column="21"/></modifier></type><name pos:line="240" pos:column="21">e<pos:position pos:line="240" pos:column="22"/></name></decl>;<pos:position pos:line="240" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="241" pos:column="9">int<pos:position pos:line="241" pos:column="12"/></name></type> <name pos:line="241" pos:column="13">all_buckets_here<pos:position pos:line="241" pos:column="29"/></name><init pos:line="241" pos:column="29">=<expr><literal type="number" pos:line="241" pos:column="30">0<pos:position pos:line="241" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="241" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="242" pos:column="9">int<pos:position pos:line="242" pos:column="12"/></name></type> <name pos:line="242" pos:column="13">unresolved_length<pos:position pos:line="242" pos:column="30"/></name> <init pos:line="242" pos:column="31">= <expr><literal type="number" pos:line="242" pos:column="33">0<pos:position pos:line="242" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="242" pos:column="35"/></decl_stmt>
        <expr_stmt><expr><name pos:line="243" pos:column="9">size<pos:position pos:line="243" pos:column="13"/></name><operator pos:line="243" pos:column="13">=<pos:position pos:line="243" pos:column="14"/></operator><literal type="number" pos:line="243" pos:column="14">0<pos:position pos:line="243" pos:column="15"/></literal></expr>;<pos:position pos:line="243" pos:column="16"/></expr_stmt>
        <for pos:line="244" pos:column="9">for <control pos:line="244" pos:column="13">(<init><expr><name pos:line="244" pos:column="14">e<pos:position pos:line="244" pos:column="15"/></name> <operator pos:line="244" pos:column="16">=<pos:position pos:line="244" pos:column="17"/></operator> <call><name pos:line="244" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="244" pos:column="35"/></name><argument_list pos:line="244" pos:column="35">(<argument><expr><name pos:line="244" pos:column="36">in<pos:position pos:line="244" pos:column="38"/></name></expr></argument>)<pos:position pos:line="244" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="40"/></init>
             <condition><expr><name pos:line="245" pos:column="14">e<pos:position pos:line="245" pos:column="15"/></name> <operator pos:line="245" pos:column="16">!=<pos:position pos:line="245" pos:column="18"/></operator> <call><name pos:line="245" pos:column="19">APR_BRIGADE_SENTINEL<pos:position pos:line="245" pos:column="39"/></name><argument_list pos:line="245" pos:column="39">(<argument><expr><name pos:line="245" pos:column="40">in<pos:position pos:line="245" pos:column="42"/></name></expr></argument>)<pos:position pos:line="245" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="44"/></condition>
             <incr><expr><name pos:line="246" pos:column="14">e<pos:position pos:line="246" pos:column="15"/></name> <operator pos:line="246" pos:column="16">=<pos:position pos:line="246" pos:column="17"/></operator> <call><name pos:line="246" pos:column="18">APR_BUCKET_NEXT<pos:position pos:line="246" pos:column="33"/></name><argument_list pos:line="246" pos:column="33">(<argument><expr><name pos:line="246" pos:column="34">e<pos:position pos:line="246" pos:column="35"/></name></expr></argument>)<pos:position pos:line="246" pos:column="36"/></argument_list></call></expr></incr>)<pos:position pos:line="246" pos:column="37"/></control>
        <block pos:line="247" pos:column="9">{
            <if pos:line="248" pos:column="13">if <condition pos:line="248" pos:column="16">(<expr><call><name pos:line="248" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="248" pos:column="34"/></name><argument_list pos:line="248" pos:column="34">(<argument><expr><name pos:line="248" pos:column="35">e<pos:position pos:line="248" pos:column="36"/></name></expr></argument>)<pos:position pos:line="248" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="248" pos:column="38"/></condition><then pos:line="248" pos:column="38"> <block pos:line="248" pos:column="39">{
                <expr_stmt><expr><name pos:line="249" pos:column="17">all_buckets_here<pos:position pos:line="249" pos:column="33"/></name><operator pos:line="249" pos:column="33">=<pos:position pos:line="249" pos:column="34"/></operator><literal type="number" pos:line="249" pos:column="34">1<pos:position pos:line="249" pos:column="35"/></literal></expr>;<pos:position pos:line="249" pos:column="36"/></expr_stmt>
                <break pos:line="250" pos:column="17">break;<pos:position pos:line="250" pos:column="23"/></break>
            }<pos:position pos:line="251" pos:column="14"/></block></then></if>
            <if pos:line="252" pos:column="13">if <condition pos:line="252" pos:column="16">(<expr><call><name pos:line="252" pos:column="17">APR_BUCKET_IS_FLUSH<pos:position pos:line="252" pos:column="36"/></name><argument_list pos:line="252" pos:column="36">(<argument><expr><name pos:line="252" pos:column="37">e<pos:position pos:line="252" pos:column="38"/></name></expr></argument>)<pos:position pos:line="252" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="252" pos:column="40"/></condition><then pos:line="252" pos:column="40"> <block pos:line="252" pos:column="41">{
                <expr_stmt><expr><name pos:line="253" pos:column="17">unresolved_length<pos:position pos:line="253" pos:column="34"/></name> <operator pos:line="253" pos:column="35">=<pos:position pos:line="253" pos:column="36"/></operator> <literal type="number" pos:line="253" pos:column="37">1<pos:position pos:line="253" pos:column="38"/></literal></expr>;<pos:position pos:line="253" pos:column="39"/></expr_stmt>
                <continue pos:line="254" pos:column="17">continue;<pos:position pos:line="254" pos:column="26"/></continue>
            }<pos:position pos:line="255" pos:column="14"/></block></then></if>
            <if pos:line="256" pos:column="13">if <condition pos:line="256" pos:column="16">(<expr><name><name pos:line="256" pos:column="17">e<pos:position pos:line="256" pos:column="18"/></name><operator pos:line="256" pos:column="18">-&gt;<pos:position pos:line="256" pos:column="23"/></operator><name pos:line="256" pos:column="20">length<pos:position pos:line="256" pos:column="26"/></name></name> <operator pos:line="256" pos:column="27">==<pos:position pos:line="256" pos:column="29"/></operator> <operator pos:line="256" pos:column="30">(<pos:position pos:line="256" pos:column="31"/></operator><name pos:line="256" pos:column="31">apr_size_t<pos:position pos:line="256" pos:column="41"/></name><operator pos:line="256" pos:column="41">)<pos:position pos:line="256" pos:column="42"/></operator><operator pos:line="256" pos:column="42">-<pos:position pos:line="256" pos:column="43"/></operator><literal type="number" pos:line="256" pos:column="43">1<pos:position pos:line="256" pos:column="44"/></literal></expr>)<pos:position pos:line="256" pos:column="45"/></condition><then pos:line="256" pos:column="45"> <block pos:line="256" pos:column="46">{
                <break pos:line="257" pos:column="17">break;<pos:position pos:line="257" pos:column="23"/></break>
            }<pos:position pos:line="258" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="259" pos:column="13">size<pos:position pos:line="259" pos:column="17"/></name> <operator pos:line="259" pos:column="18">+=<pos:position pos:line="259" pos:column="20"/></operator> <name><name pos:line="259" pos:column="21">e<pos:position pos:line="259" pos:column="22"/></name><operator pos:line="259" pos:column="22">-&gt;<pos:position pos:line="259" pos:column="27"/></operator><name pos:line="259" pos:column="24">length<pos:position pos:line="259" pos:column="30"/></name></name></expr>;<pos:position pos:line="259" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="260" pos:column="10"/></block></for>
        <if pos:line="261" pos:column="9">if <condition pos:line="261" pos:column="12">(<expr><operator pos:line="261" pos:column="13">!<pos:position pos:line="261" pos:column="14"/></operator><name pos:line="261" pos:column="14">all_buckets_here<pos:position pos:line="261" pos:column="30"/></name></expr>)<pos:position pos:line="261" pos:column="31"/></condition><then pos:line="261" pos:column="31"> <block pos:line="261" pos:column="32">{
            <expr_stmt><expr><name pos:line="262" pos:column="13">size<pos:position pos:line="262" pos:column="17"/></name> <operator pos:line="262" pos:column="18">=<pos:position pos:line="262" pos:column="19"/></operator> <operator pos:line="262" pos:column="20">-<pos:position pos:line="262" pos:column="21"/></operator><literal type="number" pos:line="262" pos:column="21">1<pos:position pos:line="262" pos:column="22"/></literal></expr>;<pos:position pos:line="262" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="263" pos:column="10"/></block></then></if>
    }<pos:position pos:line="264" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="266" pos:column="5">/* It's safe to cache the response.
     *
     * There are two possiblities at this point:
     * - cache-&gt;handle == NULL. In this case there is no previously
     * cached entity anywhere on the system. We must create a brand
     * new entity and store the response in it.
     * - cache-&gt;stale_handle != NULL. In this case there is a stale
     * entity in the system which needs to be replaced by new
     * content (unless the result was 304 Not Modified, which means
     * the cached entity is actually fresh, and we should update
     * the headers).
     */</comment>

    <comment type="block" pos:line="279" pos:column="5">/* Did we have a stale cache entry that really is stale? */</comment>
    <if pos:line="280" pos:column="5">if <condition pos:line="280" pos:column="8">(<expr><name><name pos:line="280" pos:column="9">cache<pos:position pos:line="280" pos:column="14"/></name><operator pos:line="280" pos:column="14">-&gt;<pos:position pos:line="280" pos:column="19"/></operator><name pos:line="280" pos:column="16">stale_handle<pos:position pos:line="280" pos:column="28"/></name></name></expr>)<pos:position pos:line="280" pos:column="29"/></condition><then pos:line="280" pos:column="29"> <block pos:line="280" pos:column="30">{
        <if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><name><name pos:line="281" pos:column="13">r<pos:position pos:line="281" pos:column="14"/></name><operator pos:line="281" pos:column="14">-&gt;<pos:position pos:line="281" pos:column="19"/></operator><name pos:line="281" pos:column="16">status<pos:position pos:line="281" pos:column="22"/></name></name> <operator pos:line="281" pos:column="23">==<pos:position pos:line="281" pos:column="25"/></operator> <name pos:line="281" pos:column="26">HTTP_NOT_MODIFIED<pos:position pos:line="281" pos:column="43"/></name></expr>)<pos:position pos:line="281" pos:column="44"/></condition><then pos:line="281" pos:column="44"> <block pos:line="281" pos:column="45">{
            <comment type="block" pos:line="282" pos:column="13">/* Oh, hey.  It isn't that stale!  Yay! */</comment>
            <expr_stmt><expr><name><name pos:line="283" pos:column="13">cache<pos:position pos:line="283" pos:column="18"/></name><operator pos:line="283" pos:column="18">-&gt;<pos:position pos:line="283" pos:column="23"/></operator><name pos:line="283" pos:column="20">handle<pos:position pos:line="283" pos:column="26"/></name></name> <operator pos:line="283" pos:column="27">=<pos:position pos:line="283" pos:column="28"/></operator> <name><name pos:line="283" pos:column="29">cache<pos:position pos:line="283" pos:column="34"/></name><operator pos:line="283" pos:column="34">-&gt;<pos:position pos:line="283" pos:column="39"/></operator><name pos:line="283" pos:column="36">stale_handle<pos:position pos:line="283" pos:column="48"/></name></name></expr>;<pos:position pos:line="283" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="284" pos:column="13">info<pos:position pos:line="284" pos:column="17"/></name> <operator pos:line="284" pos:column="18">=<pos:position pos:line="284" pos:column="19"/></operator> <operator pos:line="284" pos:column="20">&amp;<pos:position pos:line="284" pos:column="25"/></operator><name><name pos:line="284" pos:column="21">cache<pos:position pos:line="284" pos:column="26"/></name><operator pos:line="284" pos:column="26">-&gt;<pos:position pos:line="284" pos:column="31"/></operator><name pos:line="284" pos:column="28">handle<pos:position pos:line="284" pos:column="34"/></name><operator pos:line="284" pos:column="34">-&gt;<pos:position pos:line="284" pos:column="39"/></operator><name pos:line="284" pos:column="36">cache_obj<pos:position pos:line="284" pos:column="45"/></name><operator pos:line="284" pos:column="45">-&gt;<pos:position pos:line="284" pos:column="50"/></operator><name pos:line="284" pos:column="47">info<pos:position pos:line="284" pos:column="51"/></name></name></expr>;<pos:position pos:line="284" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="285" pos:column="10"/></block></then>
        <else pos:line="286" pos:column="9">else <block pos:line="286" pos:column="14">{
            <comment type="block" pos:line="287" pos:column="13">/* Oh, well.  Toss it. */</comment>
            <expr_stmt><expr><call><name><name pos:line="288" pos:column="13">cache<pos:position pos:line="288" pos:column="18"/></name><operator pos:line="288" pos:column="18">-&gt;<pos:position pos:line="288" pos:column="23"/></operator><name pos:line="288" pos:column="20">provider<pos:position pos:line="288" pos:column="28"/></name><operator pos:line="288" pos:column="28">-&gt;<pos:position pos:line="288" pos:column="33"/></operator><name pos:line="288" pos:column="30">remove_entity<pos:position pos:line="288" pos:column="43"/></name></name><argument_list pos:line="288" pos:column="43">(<argument><expr><name><name pos:line="288" pos:column="44">cache<pos:position pos:line="288" pos:column="49"/></name><operator pos:line="288" pos:column="49">-&gt;<pos:position pos:line="288" pos:column="54"/></operator><name pos:line="288" pos:column="51">stale_handle<pos:position pos:line="288" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="288" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="65"/></expr_stmt>
            <comment type="block" pos:line="289" pos:column="13">/* Treat the request as if it wasn't conditional. */</comment>
            <expr_stmt><expr><name><name pos:line="290" pos:column="13">cache<pos:position pos:line="290" pos:column="18"/></name><operator pos:line="290" pos:column="18">-&gt;<pos:position pos:line="290" pos:column="23"/></operator><name pos:line="290" pos:column="20">stale_handle<pos:position pos:line="290" pos:column="32"/></name></name> <operator pos:line="290" pos:column="33">=<pos:position pos:line="290" pos:column="34"/></operator> <name pos:line="290" pos:column="35">NULL<pos:position pos:line="290" pos:column="39"/></name></expr>;<pos:position pos:line="290" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="291" pos:column="10"/></block></else></if>
    }<pos:position pos:line="292" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="294" pos:column="5">/* no cache handle, create a new entity */</comment>
    <if pos:line="295" pos:column="5">if <condition pos:line="295" pos:column="8">(<expr><operator pos:line="295" pos:column="9">!<pos:position pos:line="295" pos:column="10"/></operator><name><name pos:line="295" pos:column="10">cache<pos:position pos:line="295" pos:column="15"/></name><operator pos:line="295" pos:column="15">-&gt;<pos:position pos:line="295" pos:column="20"/></operator><name pos:line="295" pos:column="17">handle<pos:position pos:line="295" pos:column="23"/></name></name></expr>)<pos:position pos:line="295" pos:column="24"/></condition><then pos:line="295" pos:column="24"> <block pos:line="295" pos:column="25">{
        <expr_stmt><expr><name pos:line="296" pos:column="9">rv<pos:position pos:line="296" pos:column="11"/></name> <operator pos:line="296" pos:column="12">=<pos:position pos:line="296" pos:column="13"/></operator> <call><name pos:line="296" pos:column="14">cache_create_entity<pos:position pos:line="296" pos:column="33"/></name><argument_list pos:line="296" pos:column="33">(<argument><expr><name pos:line="296" pos:column="34">r<pos:position pos:line="296" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="37">url<pos:position pos:line="296" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="42">size<pos:position pos:line="296" pos:column="46"/></name></expr></argument>)<pos:position pos:line="296" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="297" pos:column="9">info<pos:position pos:line="297" pos:column="13"/></name> <operator pos:line="297" pos:column="14">=<pos:position pos:line="297" pos:column="15"/></operator> <call><name pos:line="297" pos:column="16">apr_pcalloc<pos:position pos:line="297" pos:column="27"/></name><argument_list pos:line="297" pos:column="27">(<argument><expr><name><name pos:line="297" pos:column="28">r<pos:position pos:line="297" pos:column="29"/></name><operator pos:line="297" pos:column="29">-&gt;<pos:position pos:line="297" pos:column="34"/></operator><name pos:line="297" pos:column="31">pool<pos:position pos:line="297" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="297" pos:column="37">sizeof<argument_list pos:line="297" pos:column="43">(<argument><expr><name pos:line="297" pos:column="44">cache_info<pos:position pos:line="297" pos:column="54"/></name></expr></argument>)<pos:position pos:line="297" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="297" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="57"/></expr_stmt>
        <comment type="block" pos:line="298" pos:column="9">/* We only set info-&gt;status upon the initial creation. */</comment>
        <expr_stmt><expr><name><name pos:line="299" pos:column="9">info<pos:position pos:line="299" pos:column="13"/></name><operator pos:line="299" pos:column="13">-&gt;<pos:position pos:line="299" pos:column="18"/></operator><name pos:line="299" pos:column="15">status<pos:position pos:line="299" pos:column="21"/></name></name> <operator pos:line="299" pos:column="22">=<pos:position pos:line="299" pos:column="23"/></operator> <name><name pos:line="299" pos:column="24">r<pos:position pos:line="299" pos:column="25"/></name><operator pos:line="299" pos:column="25">-&gt;<pos:position pos:line="299" pos:column="30"/></operator><name pos:line="299" pos:column="27">status<pos:position pos:line="299" pos:column="33"/></name></name></expr>;<pos:position pos:line="299" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="300" pos:column="6"/></block></then></if>

    <if pos:line="302" pos:column="5">if <condition pos:line="302" pos:column="8">(<expr><name pos:line="302" pos:column="9">rv<pos:position pos:line="302" pos:column="11"/></name> <operator pos:line="302" pos:column="12">!=<pos:position pos:line="302" pos:column="14"/></operator> <name pos:line="302" pos:column="15">OK<pos:position pos:line="302" pos:column="17"/></name></expr>)<pos:position pos:line="302" pos:column="18"/></condition><then pos:line="302" pos:column="18"> <block pos:line="302" pos:column="19">{
        <comment type="block" pos:line="303" pos:column="9">/* Caching layer declined the opportunity to cache the response */</comment>
        <expr_stmt><expr><call><name pos:line="304" pos:column="9">ap_remove_output_filter<pos:position pos:line="304" pos:column="32"/></name><argument_list pos:line="304" pos:column="32">(<argument><expr><name pos:line="304" pos:column="33">f<pos:position pos:line="304" pos:column="34"/></name></expr></argument>)<pos:position pos:line="304" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="36"/></expr_stmt>
        <return pos:line="305" pos:column="9">return <expr><call><name pos:line="305" pos:column="16">ap_pass_brigade<pos:position pos:line="305" pos:column="31"/></name><argument_list pos:line="305" pos:column="31">(<argument><expr><name><name pos:line="305" pos:column="32">f<pos:position pos:line="305" pos:column="33"/></name><operator pos:line="305" pos:column="33">-&gt;<pos:position pos:line="305" pos:column="38"/></operator><name pos:line="305" pos:column="35">next<pos:position pos:line="305" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="41">in<pos:position pos:line="305" pos:column="43"/></name></expr></argument>)<pos:position pos:line="305" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="45"/></return>
    }<pos:position pos:line="306" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="308" pos:column="5">ap_log_error<pos:position pos:line="308" pos:column="17"/></name><argument_list pos:line="308" pos:column="17">(<argument><expr><name pos:line="308" pos:column="18">APLOG_MARK<pos:position pos:line="308" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="308" pos:column="30">APLOG_DEBUG<pos:position pos:line="308" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="308" pos:column="43">0<pos:position pos:line="308" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="308" pos:column="46">r<pos:position pos:line="308" pos:column="47"/></name><operator pos:line="308" pos:column="47">-&gt;<pos:position pos:line="308" pos:column="52"/></operator><name pos:line="308" pos:column="49">server<pos:position pos:line="308" pos:column="55"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="309" pos:column="18">"cache: Caching url: %s"<pos:position pos:line="309" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="309" pos:column="44">url<pos:position pos:line="309" pos:column="47"/></name></expr></argument>)<pos:position pos:line="309" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="311" pos:column="5">/*
     * We now want to update the cache file header information with
     * the new date, last modified, expire and content length and write
     * it away to our cache file. First, we determine these values from
     * the response, using heuristics if appropriate.
     *
     * In addition, we make HTTP/1.1 age calculations and write them away
     * too.
     */</comment>

    <comment type="block" pos:line="321" pos:column="5">/* Read the date. Generate one if one is not supplied */</comment>
    <expr_stmt><expr><name pos:line="322" pos:column="5">dates<pos:position pos:line="322" pos:column="10"/></name> <operator pos:line="322" pos:column="11">=<pos:position pos:line="322" pos:column="12"/></operator> <call><name pos:line="322" pos:column="13">apr_table_get<pos:position pos:line="322" pos:column="26"/></name><argument_list pos:line="322" pos:column="26">(<argument><expr><name><name pos:line="322" pos:column="27">r<pos:position pos:line="322" pos:column="28"/></name><operator pos:line="322" pos:column="28">-&gt;<pos:position pos:line="322" pos:column="33"/></operator><name pos:line="322" pos:column="30">err_headers_out<pos:position pos:line="322" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="322" pos:column="47">"Date"<pos:position pos:line="322" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="55"/></expr_stmt>
    <if pos:line="323" pos:column="5">if <condition pos:line="323" pos:column="8">(<expr><name pos:line="323" pos:column="9">dates<pos:position pos:line="323" pos:column="14"/></name> <operator pos:line="323" pos:column="15">!=<pos:position pos:line="323" pos:column="17"/></operator> <name pos:line="323" pos:column="18">NULL<pos:position pos:line="323" pos:column="22"/></name></expr>)<pos:position pos:line="323" pos:column="23"/></condition><then pos:line="323" pos:column="23"> <block pos:line="323" pos:column="24">{
        <expr_stmt><expr><name pos:line="324" pos:column="9">date_in_errhdr<pos:position pos:line="324" pos:column="23"/></name> <operator pos:line="324" pos:column="24">=<pos:position pos:line="324" pos:column="25"/></operator> <literal type="number" pos:line="324" pos:column="26">1<pos:position pos:line="324" pos:column="27"/></literal></expr>;<pos:position pos:line="324" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="325" pos:column="6"/></block></then>
    <else pos:line="326" pos:column="5">else <block pos:line="326" pos:column="10">{
        <expr_stmt><expr><name pos:line="327" pos:column="9">dates<pos:position pos:line="327" pos:column="14"/></name> <operator pos:line="327" pos:column="15">=<pos:position pos:line="327" pos:column="16"/></operator> <call><name pos:line="327" pos:column="17">apr_table_get<pos:position pos:line="327" pos:column="30"/></name><argument_list pos:line="327" pos:column="30">(<argument><expr><name><name pos:line="327" pos:column="31">r<pos:position pos:line="327" pos:column="32"/></name><operator pos:line="327" pos:column="32">-&gt;<pos:position pos:line="327" pos:column="37"/></operator><name pos:line="327" pos:column="34">headers_out<pos:position pos:line="327" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="47">"Date"<pos:position pos:line="327" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="327" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="328" pos:column="6"/></block></else></if>
    <if pos:line="329" pos:column="5">if <condition pos:line="329" pos:column="8">(<expr><name pos:line="329" pos:column="9">dates<pos:position pos:line="329" pos:column="14"/></name> <operator pos:line="329" pos:column="15">!=<pos:position pos:line="329" pos:column="17"/></operator> <name pos:line="329" pos:column="18">NULL<pos:position pos:line="329" pos:column="22"/></name></expr>)<pos:position pos:line="329" pos:column="23"/></condition><then pos:line="329" pos:column="23"> <block pos:line="329" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="330" pos:column="9">info<pos:position pos:line="330" pos:column="13"/></name><operator pos:line="330" pos:column="13">-&gt;<pos:position pos:line="330" pos:column="18"/></operator><name pos:line="330" pos:column="15">date<pos:position pos:line="330" pos:column="19"/></name></name> <operator pos:line="330" pos:column="20">=<pos:position pos:line="330" pos:column="21"/></operator> <call><name pos:line="330" pos:column="22">apr_date_parse_http<pos:position pos:line="330" pos:column="41"/></name><argument_list pos:line="330" pos:column="41">(<argument><expr><name pos:line="330" pos:column="42">dates<pos:position pos:line="330" pos:column="47"/></name></expr></argument>)<pos:position pos:line="330" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="331" pos:column="6"/></block></then>
    <else pos:line="332" pos:column="5">else <block pos:line="332" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="333" pos:column="9">info<pos:position pos:line="333" pos:column="13"/></name><operator pos:line="333" pos:column="13">-&gt;<pos:position pos:line="333" pos:column="18"/></operator><name pos:line="333" pos:column="15">date<pos:position pos:line="333" pos:column="19"/></name></name> <operator pos:line="333" pos:column="20">=<pos:position pos:line="333" pos:column="21"/></operator> <name pos:line="333" pos:column="22">APR_DATE_BAD<pos:position pos:line="333" pos:column="34"/></name></expr>;<pos:position pos:line="333" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="334" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="336" pos:column="5">now<pos:position pos:line="336" pos:column="8"/></name> <operator pos:line="336" pos:column="9">=<pos:position pos:line="336" pos:column="10"/></operator> <call><name pos:line="336" pos:column="11">apr_time_now<pos:position pos:line="336" pos:column="23"/></name><argument_list pos:line="336" pos:column="23">()<pos:position pos:line="336" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="26"/></expr_stmt>
    <if pos:line="337" pos:column="5">if <condition pos:line="337" pos:column="8">(<expr><name><name pos:line="337" pos:column="9">info<pos:position pos:line="337" pos:column="13"/></name><operator pos:line="337" pos:column="13">-&gt;<pos:position pos:line="337" pos:column="18"/></operator><name pos:line="337" pos:column="15">date<pos:position pos:line="337" pos:column="19"/></name></name> <operator pos:line="337" pos:column="20">==<pos:position pos:line="337" pos:column="22"/></operator> <name pos:line="337" pos:column="23">APR_DATE_BAD<pos:position pos:line="337" pos:column="35"/></name></expr>)<pos:position pos:line="337" pos:column="36"/></condition><then pos:line="337" pos:column="36"> <block pos:line="337" pos:column="37">{  <comment type="block" pos:line="337" pos:column="40">/* No, or bad date */</comment>
        <decl_stmt><decl><type><name pos:line="338" pos:column="9">char<pos:position pos:line="338" pos:column="13"/></name> <modifier pos:line="338" pos:column="14">*<pos:position pos:line="338" pos:column="15"/></modifier></type><name pos:line="338" pos:column="15">dates<pos:position pos:line="338" pos:column="20"/></name></decl>;<pos:position pos:line="338" pos:column="21"/></decl_stmt>
        <comment type="block" pos:line="339" pos:column="9">/* no date header (or bad header)! */</comment>
        <comment type="block" pos:line="340" pos:column="9">/* add one; N.B. use the time _now_ rather than when we were checking
         * the cache 
         */</comment>
        <if pos:line="343" pos:column="9">if <condition pos:line="343" pos:column="12">(<expr><name pos:line="343" pos:column="13">date_in_errhdr<pos:position pos:line="343" pos:column="27"/></name> <operator pos:line="343" pos:column="28">==<pos:position pos:line="343" pos:column="30"/></operator> <literal type="number" pos:line="343" pos:column="31">1<pos:position pos:line="343" pos:column="32"/></literal></expr>)<pos:position pos:line="343" pos:column="33"/></condition><then pos:line="343" pos:column="33"> <block pos:line="343" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="344" pos:column="13">apr_table_unset<pos:position pos:line="344" pos:column="28"/></name><argument_list pos:line="344" pos:column="28">(<argument><expr><name><name pos:line="344" pos:column="29">r<pos:position pos:line="344" pos:column="30"/></name><operator pos:line="344" pos:column="30">-&gt;<pos:position pos:line="344" pos:column="35"/></operator><name pos:line="344" pos:column="32">err_headers_out<pos:position pos:line="344" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="344" pos:column="49">"Date"<pos:position pos:line="344" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="344" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="345" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="346" pos:column="9">date<pos:position pos:line="346" pos:column="13"/></name> <operator pos:line="346" pos:column="14">=<pos:position pos:line="346" pos:column="15"/></operator> <name pos:line="346" pos:column="16">now<pos:position pos:line="346" pos:column="19"/></name></expr>;<pos:position pos:line="346" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="347" pos:column="9">dates<pos:position pos:line="347" pos:column="14"/></name> <operator pos:line="347" pos:column="15">=<pos:position pos:line="347" pos:column="16"/></operator> <call><name pos:line="347" pos:column="17">apr_pcalloc<pos:position pos:line="347" pos:column="28"/></name><argument_list pos:line="347" pos:column="28">(<argument><expr><name><name pos:line="347" pos:column="29">r<pos:position pos:line="347" pos:column="30"/></name><operator pos:line="347" pos:column="30">-&gt;<pos:position pos:line="347" pos:column="35"/></operator><name pos:line="347" pos:column="32">pool<pos:position pos:line="347" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="38">MAX_STRING_LEN<pos:position pos:line="347" pos:column="52"/></name></expr></argument>)<pos:position pos:line="347" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="348" pos:column="9">apr_rfc822_date<pos:position pos:line="348" pos:column="24"/></name><argument_list pos:line="348" pos:column="24">(<argument><expr><name pos:line="348" pos:column="25">dates<pos:position pos:line="348" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="348" pos:column="32">now<pos:position pos:line="348" pos:column="35"/></name></expr></argument>)<pos:position pos:line="348" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="349" pos:column="9">apr_table_set<pos:position pos:line="349" pos:column="22"/></name><argument_list pos:line="349" pos:column="22">(<argument><expr><name><name pos:line="349" pos:column="23">r<pos:position pos:line="349" pos:column="24"/></name><operator pos:line="349" pos:column="24">-&gt;<pos:position pos:line="349" pos:column="29"/></operator><name pos:line="349" pos:column="26">headers_out<pos:position pos:line="349" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="349" pos:column="39">"Date"<pos:position pos:line="349" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="349" pos:column="47">dates<pos:position pos:line="349" pos:column="52"/></name></expr></argument>)<pos:position pos:line="349" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="350" pos:column="9">ap_log_error<pos:position pos:line="350" pos:column="21"/></name><argument_list pos:line="350" pos:column="21">(<argument><expr><name pos:line="350" pos:column="22">APLOG_MARK<pos:position pos:line="350" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="350" pos:column="34">APLOG_DEBUG<pos:position pos:line="350" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="350" pos:column="47">0<pos:position pos:line="350" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="350" pos:column="50">r<pos:position pos:line="350" pos:column="51"/></name><operator pos:line="350" pos:column="51">-&gt;<pos:position pos:line="350" pos:column="56"/></operator><name pos:line="350" pos:column="53">server<pos:position pos:line="350" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="351" pos:column="22">"cache: Added date header"<pos:position pos:line="351" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="351" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="352" pos:column="9">info<pos:position pos:line="352" pos:column="13"/></name><operator pos:line="352" pos:column="13">-&gt;<pos:position pos:line="352" pos:column="18"/></operator><name pos:line="352" pos:column="15">date<pos:position pos:line="352" pos:column="19"/></name></name> <operator pos:line="352" pos:column="20">=<pos:position pos:line="352" pos:column="21"/></operator> <name pos:line="352" pos:column="22">date<pos:position pos:line="352" pos:column="26"/></name></expr>;<pos:position pos:line="352" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="353" pos:column="6"/></block></then>
    <else pos:line="354" pos:column="5">else <block pos:line="354" pos:column="10">{
        <expr_stmt><expr><name pos:line="355" pos:column="9">date<pos:position pos:line="355" pos:column="13"/></name> <operator pos:line="355" pos:column="14">=<pos:position pos:line="355" pos:column="15"/></operator> <name><name pos:line="355" pos:column="16">info<pos:position pos:line="355" pos:column="20"/></name><operator pos:line="355" pos:column="20">-&gt;<pos:position pos:line="355" pos:column="25"/></operator><name pos:line="355" pos:column="22">date<pos:position pos:line="355" pos:column="26"/></name></name></expr>;<pos:position pos:line="355" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="356" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="358" pos:column="5">/* set response_time for HTTP/1.1 age calculations */</comment>
    <expr_stmt><expr><name><name pos:line="359" pos:column="5">info<pos:position pos:line="359" pos:column="9"/></name><operator pos:line="359" pos:column="9">-&gt;<pos:position pos:line="359" pos:column="14"/></operator><name pos:line="359" pos:column="11">response_time<pos:position pos:line="359" pos:column="24"/></name></name> <operator pos:line="359" pos:column="25">=<pos:position pos:line="359" pos:column="26"/></operator> <name pos:line="359" pos:column="27">now<pos:position pos:line="359" pos:column="30"/></name></expr>;<pos:position pos:line="359" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="361" pos:column="5">/* get the request time */</comment>
    <expr_stmt><expr><name><name pos:line="362" pos:column="5">info<pos:position pos:line="362" pos:column="9"/></name><operator pos:line="362" pos:column="9">-&gt;<pos:position pos:line="362" pos:column="14"/></operator><name pos:line="362" pos:column="11">request_time<pos:position pos:line="362" pos:column="23"/></name></name> <operator pos:line="362" pos:column="24">=<pos:position pos:line="362" pos:column="25"/></operator> <name><name pos:line="362" pos:column="26">r<pos:position pos:line="362" pos:column="27"/></name><operator pos:line="362" pos:column="27">-&gt;<pos:position pos:line="362" pos:column="32"/></operator><name pos:line="362" pos:column="29">request_time<pos:position pos:line="362" pos:column="41"/></name></name></expr>;<pos:position pos:line="362" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="364" pos:column="5">/* check last-modified date */</comment>
    <if pos:line="365" pos:column="5">if <condition pos:line="365" pos:column="8">(<expr><name pos:line="365" pos:column="9">lastmod<pos:position pos:line="365" pos:column="16"/></name> <operator pos:line="365" pos:column="17">!=<pos:position pos:line="365" pos:column="19"/></operator> <name pos:line="365" pos:column="20">APR_DATE_BAD<pos:position pos:line="365" pos:column="32"/></name> <operator pos:line="365" pos:column="33">&amp;&amp;<pos:position pos:line="365" pos:column="43"/></operator> <name pos:line="365" pos:column="36">lastmod<pos:position pos:line="365" pos:column="43"/></name> <operator pos:line="365" pos:column="44">&gt;<pos:position pos:line="365" pos:column="48"/></operator> <name pos:line="365" pos:column="46">date<pos:position pos:line="365" pos:column="50"/></name></expr>)<pos:position pos:line="365" pos:column="51"/></condition><then pos:line="365" pos:column="51"> <block pos:line="365" pos:column="52">{
        <comment type="block" pos:line="366" pos:column="9">/* if it's in the future, then replace by date */</comment>
        <expr_stmt><expr><name pos:line="367" pos:column="9">lastmod<pos:position pos:line="367" pos:column="16"/></name> <operator pos:line="367" pos:column="17">=<pos:position pos:line="367" pos:column="18"/></operator> <name pos:line="367" pos:column="19">date<pos:position pos:line="367" pos:column="23"/></name></expr>;<pos:position pos:line="367" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="368" pos:column="9">lastmods<pos:position pos:line="368" pos:column="17"/></name> <operator pos:line="368" pos:column="18">=<pos:position pos:line="368" pos:column="19"/></operator> <name pos:line="368" pos:column="20">dates<pos:position pos:line="368" pos:column="25"/></name></expr>;<pos:position pos:line="368" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="369" pos:column="9">ap_log_error<pos:position pos:line="369" pos:column="21"/></name><argument_list pos:line="369" pos:column="21">(<argument><expr><name pos:line="369" pos:column="22">APLOG_MARK<pos:position pos:line="369" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="369" pos:column="34">APLOG_DEBUG<pos:position pos:line="369" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="369" pos:column="47">0<pos:position pos:line="369" pos:column="48"/></literal></expr></argument>, 
                     <argument><expr><name><name pos:line="370" pos:column="22">r<pos:position pos:line="370" pos:column="23"/></name><operator pos:line="370" pos:column="23">-&gt;<pos:position pos:line="370" pos:column="28"/></operator><name pos:line="370" pos:column="25">server<pos:position pos:line="370" pos:column="31"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="371" pos:column="22">"cache: Last modified is in the future, "<pos:position pos:line="371" pos:column="63"/></literal>
                     <literal type="string" pos:line="372" pos:column="22">"replacing with now"<pos:position pos:line="372" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="372" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="373" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="374" pos:column="5">info<pos:position pos:line="374" pos:column="9"/></name><operator pos:line="374" pos:column="9">-&gt;<pos:position pos:line="374" pos:column="14"/></operator><name pos:line="374" pos:column="11">lastmod<pos:position pos:line="374" pos:column="18"/></name></name> <operator pos:line="374" pos:column="19">=<pos:position pos:line="374" pos:column="20"/></operator> <name pos:line="374" pos:column="21">lastmod<pos:position pos:line="374" pos:column="28"/></name></expr>;<pos:position pos:line="374" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="376" pos:column="5">/* if no expiry date then
     *   if lastmod
     *      expiry date = date + min((date - lastmod) * factor, maxexpire)
     *   else
     *      expire date = date + defaultexpire
     */</comment>
    <if pos:line="382" pos:column="5">if <condition pos:line="382" pos:column="8">(<expr><name pos:line="382" pos:column="9">exp<pos:position pos:line="382" pos:column="12"/></name> <operator pos:line="382" pos:column="13">==<pos:position pos:line="382" pos:column="15"/></operator> <name pos:line="382" pos:column="16">APR_DATE_BAD<pos:position pos:line="382" pos:column="28"/></name></expr>)<pos:position pos:line="382" pos:column="29"/></condition><then pos:line="382" pos:column="29"> <block pos:line="382" pos:column="30">{
        <comment type="block" pos:line="383" pos:column="9">/* if lastmod == date then you get 0*conf-&gt;factor which results in
         *   an expiration time of now. This causes some problems with
         *   freshness calculations, so we choose the else path...
         */</comment>
        <if pos:line="387" pos:column="9">if <condition pos:line="387" pos:column="12">(<expr><operator pos:line="387" pos:column="13">(<pos:position pos:line="387" pos:column="14"/></operator><name pos:line="387" pos:column="14">lastmod<pos:position pos:line="387" pos:column="21"/></name> <operator pos:line="387" pos:column="22">!=<pos:position pos:line="387" pos:column="24"/></operator> <name pos:line="387" pos:column="25">APR_DATE_BAD<pos:position pos:line="387" pos:column="37"/></name><operator pos:line="387" pos:column="37">)<pos:position pos:line="387" pos:column="38"/></operator> <operator pos:line="387" pos:column="39">&amp;&amp;<pos:position pos:line="387" pos:column="49"/></operator> <operator pos:line="387" pos:column="42">(<pos:position pos:line="387" pos:column="43"/></operator><name pos:line="387" pos:column="43">lastmod<pos:position pos:line="387" pos:column="50"/></name> <operator pos:line="387" pos:column="51">&lt;<pos:position pos:line="387" pos:column="55"/></operator> <name pos:line="387" pos:column="53">date<pos:position pos:line="387" pos:column="57"/></name><operator pos:line="387" pos:column="57">)<pos:position pos:line="387" pos:column="58"/></operator></expr>)<pos:position pos:line="387" pos:column="59"/></condition><then pos:line="387" pos:column="59"> <block pos:line="387" pos:column="60">{
            <decl_stmt><decl><type><name pos:line="388" pos:column="13">apr_time_t<pos:position pos:line="388" pos:column="23"/></name></type> <name pos:line="388" pos:column="24">x<pos:position pos:line="388" pos:column="25"/></name> <init pos:line="388" pos:column="26">= <expr><call pos:line="388" pos:column="28">(<name pos:line="388" pos:column="29">apr_time_t<pos:position pos:line="388" pos:column="39"/></name>) <argument_list pos:line="388" pos:column="41">(<argument><expr><operator pos:line="388" pos:column="42">(<pos:position pos:line="388" pos:column="43"/></operator><name pos:line="388" pos:column="43">date<pos:position pos:line="388" pos:column="47"/></name> <operator pos:line="388" pos:column="48">-<pos:position pos:line="388" pos:column="49"/></operator> <name pos:line="388" pos:column="50">lastmod<pos:position pos:line="388" pos:column="57"/></name><operator pos:line="388" pos:column="57">)<pos:position pos:line="388" pos:column="58"/></operator> <operator pos:line="388" pos:column="59">*<pos:position pos:line="388" pos:column="60"/></operator> <name><name pos:line="388" pos:column="61">conf<pos:position pos:line="388" pos:column="65"/></name><operator pos:line="388" pos:column="65">-&gt;<pos:position pos:line="388" pos:column="70"/></operator><name pos:line="388" pos:column="67">factor<pos:position pos:line="388" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="388" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="388" pos:column="75"/></decl_stmt>

            <if pos:line="390" pos:column="13">if <condition pos:line="390" pos:column="16">(<expr><name pos:line="390" pos:column="17">x<pos:position pos:line="390" pos:column="18"/></name> <operator pos:line="390" pos:column="19">&gt;<pos:position pos:line="390" pos:column="23"/></operator> <name><name pos:line="390" pos:column="21">conf<pos:position pos:line="390" pos:column="25"/></name><operator pos:line="390" pos:column="25">-&gt;<pos:position pos:line="390" pos:column="30"/></operator><name pos:line="390" pos:column="27">maxex<pos:position pos:line="390" pos:column="32"/></name></name></expr>)<pos:position pos:line="390" pos:column="33"/></condition><then pos:line="390" pos:column="33"> <block pos:line="390" pos:column="34">{
                <expr_stmt><expr><name pos:line="391" pos:column="17">x<pos:position pos:line="391" pos:column="18"/></name> <operator pos:line="391" pos:column="19">=<pos:position pos:line="391" pos:column="20"/></operator> <name><name pos:line="391" pos:column="21">conf<pos:position pos:line="391" pos:column="25"/></name><operator pos:line="391" pos:column="25">-&gt;<pos:position pos:line="391" pos:column="30"/></operator><name pos:line="391" pos:column="27">maxex<pos:position pos:line="391" pos:column="32"/></name></name></expr>;<pos:position pos:line="391" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="392" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="393" pos:column="13">exp<pos:position pos:line="393" pos:column="16"/></name> <operator pos:line="393" pos:column="17">=<pos:position pos:line="393" pos:column="18"/></operator> <name pos:line="393" pos:column="19">date<pos:position pos:line="393" pos:column="23"/></name> <operator pos:line="393" pos:column="24">+<pos:position pos:line="393" pos:column="25"/></operator> <name pos:line="393" pos:column="26">x<pos:position pos:line="393" pos:column="27"/></name></expr>;<pos:position pos:line="393" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="394" pos:column="10"/></block></then>
        <else pos:line="395" pos:column="9">else <block pos:line="395" pos:column="14">{
            <expr_stmt><expr><name pos:line="396" pos:column="13">exp<pos:position pos:line="396" pos:column="16"/></name> <operator pos:line="396" pos:column="17">=<pos:position pos:line="396" pos:column="18"/></operator> <name pos:line="396" pos:column="19">date<pos:position pos:line="396" pos:column="23"/></name> <operator pos:line="396" pos:column="24">+<pos:position pos:line="396" pos:column="25"/></operator> <name><name pos:line="396" pos:column="26">conf<pos:position pos:line="396" pos:column="30"/></name><operator pos:line="396" pos:column="30">-&gt;<pos:position pos:line="396" pos:column="35"/></operator><name pos:line="396" pos:column="32">defex<pos:position pos:line="396" pos:column="37"/></name></name></expr>;<pos:position pos:line="396" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="397" pos:column="10"/></block></else></if>
    }<pos:position pos:line="398" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="399" pos:column="5">info<pos:position pos:line="399" pos:column="9"/></name><operator pos:line="399" pos:column="9">-&gt;<pos:position pos:line="399" pos:column="14"/></operator><name pos:line="399" pos:column="11">expire<pos:position pos:line="399" pos:column="17"/></name></name> <operator pos:line="399" pos:column="18">=<pos:position pos:line="399" pos:column="19"/></operator> <name pos:line="399" pos:column="20">exp<pos:position pos:line="399" pos:column="23"/></name></expr>;<pos:position pos:line="399" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="401" pos:column="5">info<pos:position pos:line="401" pos:column="9"/></name><operator pos:line="401" pos:column="9">-&gt;<pos:position pos:line="401" pos:column="14"/></operator><name pos:line="401" pos:column="11">content_type<pos:position pos:line="401" pos:column="23"/></name></name> <operator pos:line="401" pos:column="24">=<pos:position pos:line="401" pos:column="25"/></operator> <call><name pos:line="401" pos:column="26">apr_pstrdup<pos:position pos:line="401" pos:column="37"/></name><argument_list pos:line="401" pos:column="37">(<argument><expr><name><name pos:line="401" pos:column="38">r<pos:position pos:line="401" pos:column="39"/></name><operator pos:line="401" pos:column="39">-&gt;<pos:position pos:line="401" pos:column="44"/></operator><name pos:line="401" pos:column="41">pool<pos:position pos:line="401" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="401" pos:column="47">r<pos:position pos:line="401" pos:column="48"/></name><operator pos:line="401" pos:column="48">-&gt;<pos:position pos:line="401" pos:column="53"/></operator><name pos:line="401" pos:column="50">content_type<pos:position pos:line="401" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="401" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="402" pos:column="5">info<pos:position pos:line="402" pos:column="9"/></name><operator pos:line="402" pos:column="9">-&gt;<pos:position pos:line="402" pos:column="14"/></operator><name pos:line="402" pos:column="11">etag<pos:position pos:line="402" pos:column="15"/></name></name> <operator pos:line="402" pos:column="16">=<pos:position pos:line="402" pos:column="17"/></operator> <call><name pos:line="402" pos:column="18">apr_pstrdup<pos:position pos:line="402" pos:column="29"/></name><argument_list pos:line="402" pos:column="29">(<argument><expr><name><name pos:line="402" pos:column="30">r<pos:position pos:line="402" pos:column="31"/></name><operator pos:line="402" pos:column="31">-&gt;<pos:position pos:line="402" pos:column="36"/></operator><name pos:line="402" pos:column="33">pool<pos:position pos:line="402" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="402" pos:column="39">etag<pos:position pos:line="402" pos:column="43"/></name></expr></argument>)<pos:position pos:line="402" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="403" pos:column="5">info<pos:position pos:line="403" pos:column="9"/></name><operator pos:line="403" pos:column="9">-&gt;<pos:position pos:line="403" pos:column="14"/></operator><name pos:line="403" pos:column="11">lastmods<pos:position pos:line="403" pos:column="19"/></name></name> <operator pos:line="403" pos:column="20">=<pos:position pos:line="403" pos:column="21"/></operator> <call><name pos:line="403" pos:column="22">apr_pstrdup<pos:position pos:line="403" pos:column="33"/></name><argument_list pos:line="403" pos:column="33">(<argument><expr><name><name pos:line="403" pos:column="34">r<pos:position pos:line="403" pos:column="35"/></name><operator pos:line="403" pos:column="35">-&gt;<pos:position pos:line="403" pos:column="40"/></operator><name pos:line="403" pos:column="37">pool<pos:position pos:line="403" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="43">lastmods<pos:position pos:line="403" pos:column="51"/></name></expr></argument>)<pos:position pos:line="403" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="404" pos:column="5">info<pos:position pos:line="404" pos:column="9"/></name><operator pos:line="404" pos:column="9">-&gt;<pos:position pos:line="404" pos:column="14"/></operator><name pos:line="404" pos:column="11">filename<pos:position pos:line="404" pos:column="19"/></name></name> <operator pos:line="404" pos:column="20">=<pos:position pos:line="404" pos:column="21"/></operator> <call><name pos:line="404" pos:column="22">apr_pstrdup<pos:position pos:line="404" pos:column="33"/></name><argument_list pos:line="404" pos:column="33">(<argument><expr><name><name pos:line="404" pos:column="34">r<pos:position pos:line="404" pos:column="35"/></name><operator pos:line="404" pos:column="35">-&gt;<pos:position pos:line="404" pos:column="40"/></operator><name pos:line="404" pos:column="37">pool<pos:position pos:line="404" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="404" pos:column="43">r<pos:position pos:line="404" pos:column="44"/></name><operator pos:line="404" pos:column="44">-&gt;<pos:position pos:line="404" pos:column="49"/></operator><name pos:line="404" pos:column="46">filename<pos:position pos:line="404" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="404" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="56"/></expr_stmt>

    <comment type="block" pos:line="406" pos:column="5">/*
     * Write away header information to cache.
     */</comment>
    <expr_stmt><expr><name pos:line="409" pos:column="5">rv<pos:position pos:line="409" pos:column="7"/></name> <operator pos:line="409" pos:column="8">=<pos:position pos:line="409" pos:column="9"/></operator> <call><name><name pos:line="409" pos:column="10">cache<pos:position pos:line="409" pos:column="15"/></name><operator pos:line="409" pos:column="15">-&gt;<pos:position pos:line="409" pos:column="20"/></operator><name pos:line="409" pos:column="17">provider<pos:position pos:line="409" pos:column="25"/></name><operator pos:line="409" pos:column="25">-&gt;<pos:position pos:line="409" pos:column="30"/></operator><name pos:line="409" pos:column="27">store_headers<pos:position pos:line="409" pos:column="40"/></name></name><argument_list pos:line="409" pos:column="40">(<argument><expr><name><name pos:line="409" pos:column="41">cache<pos:position pos:line="409" pos:column="46"/></name><operator pos:line="409" pos:column="46">-&gt;<pos:position pos:line="409" pos:column="51"/></operator><name pos:line="409" pos:column="48">handle<pos:position pos:line="409" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="56">r<pos:position pos:line="409" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="59">info<pos:position pos:line="409" pos:column="63"/></name></expr></argument>)<pos:position pos:line="409" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="411" pos:column="5">/* Did we actually find an entity before, but it wasn't really stale? */</comment>
    <if pos:line="412" pos:column="5">if <condition pos:line="412" pos:column="8">(<expr><name pos:line="412" pos:column="9">rv<pos:position pos:line="412" pos:column="11"/></name> <operator pos:line="412" pos:column="12">==<pos:position pos:line="412" pos:column="14"/></operator> <name pos:line="412" pos:column="15">APR_SUCCESS<pos:position pos:line="412" pos:column="26"/></name> <operator pos:line="412" pos:column="27">&amp;&amp;<pos:position pos:line="412" pos:column="37"/></operator> <name><name pos:line="412" pos:column="30">cache<pos:position pos:line="412" pos:column="35"/></name><operator pos:line="412" pos:column="35">-&gt;<pos:position pos:line="412" pos:column="40"/></operator><name pos:line="412" pos:column="37">stale_handle<pos:position pos:line="412" pos:column="49"/></name></name></expr>)<pos:position pos:line="412" pos:column="50"/></condition><then pos:line="412" pos:column="50"> <block pos:line="412" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="413" pos:column="9">apr_bucket_brigade<pos:position pos:line="413" pos:column="27"/></name> <modifier pos:line="413" pos:column="28">*<pos:position pos:line="413" pos:column="29"/></modifier></type><name pos:line="413" pos:column="29">bb<pos:position pos:line="413" pos:column="31"/></name></decl>;<pos:position pos:line="413" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="414" pos:column="9">apr_bucket<pos:position pos:line="414" pos:column="19"/></name> <modifier pos:line="414" pos:column="20">*<pos:position pos:line="414" pos:column="21"/></modifier></type><name pos:line="414" pos:column="21">bkt<pos:position pos:line="414" pos:column="24"/></name></decl>;<pos:position pos:line="414" pos:column="25"/></decl_stmt>

        <expr_stmt><expr><name pos:line="416" pos:column="9">bb<pos:position pos:line="416" pos:column="11"/></name> <operator pos:line="416" pos:column="12">=<pos:position pos:line="416" pos:column="13"/></operator> <call><name pos:line="416" pos:column="14">apr_brigade_create<pos:position pos:line="416" pos:column="32"/></name><argument_list pos:line="416" pos:column="32">(<argument><expr><name><name pos:line="416" pos:column="33">r<pos:position pos:line="416" pos:column="34"/></name><operator pos:line="416" pos:column="34">-&gt;<pos:position pos:line="416" pos:column="39"/></operator><name pos:line="416" pos:column="36">pool<pos:position pos:line="416" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="416" pos:column="42">r<pos:position pos:line="416" pos:column="43"/></name><operator pos:line="416" pos:column="43">-&gt;<pos:position pos:line="416" pos:column="48"/></operator><name pos:line="416" pos:column="45">connection<pos:position pos:line="416" pos:column="55"/></name><operator pos:line="416" pos:column="55">-&gt;<pos:position pos:line="416" pos:column="60"/></operator><name pos:line="416" pos:column="57">bucket_alloc<pos:position pos:line="416" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="416" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="416" pos:column="71"/></expr_stmt>

        <comment type="block" pos:line="418" pos:column="9">/* Were we initially a conditional request? */</comment>
        <if pos:line="419" pos:column="9">if <condition pos:line="419" pos:column="12">(<expr><call><name pos:line="419" pos:column="13">ap_cache_request_is_conditional<pos:position pos:line="419" pos:column="44"/></name><argument_list pos:line="419" pos:column="44">(<argument><expr><name><name pos:line="419" pos:column="45">cache<pos:position pos:line="419" pos:column="50"/></name><operator pos:line="419" pos:column="50">-&gt;<pos:position pos:line="419" pos:column="55"/></operator><name pos:line="419" pos:column="52">stale_headers<pos:position pos:line="419" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="419" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="419" pos:column="67"/></condition><then pos:line="419" pos:column="67"> <block pos:line="419" pos:column="68">{
            <comment type="block" pos:line="420" pos:column="13">/* FIXME: Should we now go and make sure it's really not
             * modified since what the user thought?
             */</comment>
            <expr_stmt><expr><name pos:line="423" pos:column="13">bkt<pos:position pos:line="423" pos:column="16"/></name> <operator pos:line="423" pos:column="17">=<pos:position pos:line="423" pos:column="18"/></operator> <call><name pos:line="423" pos:column="19">apr_bucket_eos_create<pos:position pos:line="423" pos:column="40"/></name><argument_list pos:line="423" pos:column="40">(<argument><expr><name><name pos:line="423" pos:column="41">bb<pos:position pos:line="423" pos:column="43"/></name><operator pos:line="423" pos:column="43">-&gt;<pos:position pos:line="423" pos:column="48"/></operator><name pos:line="423" pos:column="45">bucket_alloc<pos:position pos:line="423" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="423" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="424" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="424" pos:column="36"/></name><argument_list pos:line="424" pos:column="36">(<argument><expr><name pos:line="424" pos:column="37">bb<pos:position pos:line="424" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="41">bkt<pos:position pos:line="424" pos:column="44"/></name></expr></argument>)<pos:position pos:line="424" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="425" pos:column="10"/></block></then>
        <else pos:line="426" pos:column="9">else <block pos:line="426" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="427" pos:column="13">r<pos:position pos:line="427" pos:column="14"/></name><operator pos:line="427" pos:column="14">-&gt;<pos:position pos:line="427" pos:column="19"/></operator><name pos:line="427" pos:column="16">status<pos:position pos:line="427" pos:column="22"/></name></name> <operator pos:line="427" pos:column="23">=<pos:position pos:line="427" pos:column="24"/></operator> <name><name pos:line="427" pos:column="25">info<pos:position pos:line="427" pos:column="29"/></name><operator pos:line="427" pos:column="29">-&gt;<pos:position pos:line="427" pos:column="34"/></operator><name pos:line="427" pos:column="31">status<pos:position pos:line="427" pos:column="37"/></name></name></expr>;<pos:position pos:line="427" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="428" pos:column="13">cache<pos:position pos:line="428" pos:column="18"/></name><operator pos:line="428" pos:column="18">-&gt;<pos:position pos:line="428" pos:column="23"/></operator><name pos:line="428" pos:column="20">provider<pos:position pos:line="428" pos:column="28"/></name><operator pos:line="428" pos:column="28">-&gt;<pos:position pos:line="428" pos:column="33"/></operator><name pos:line="428" pos:column="30">recall_body<pos:position pos:line="428" pos:column="41"/></name></name><argument_list pos:line="428" pos:column="41">(<argument><expr><name><name pos:line="428" pos:column="42">cache<pos:position pos:line="428" pos:column="47"/></name><operator pos:line="428" pos:column="47">-&gt;<pos:position pos:line="428" pos:column="52"/></operator><name pos:line="428" pos:column="49">handle<pos:position pos:line="428" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="428" pos:column="57">r<pos:position pos:line="428" pos:column="58"/></name><operator pos:line="428" pos:column="58">-&gt;<pos:position pos:line="428" pos:column="63"/></operator><name pos:line="428" pos:column="60">pool<pos:position pos:line="428" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="428" pos:column="66">bb<pos:position pos:line="428" pos:column="68"/></name></expr></argument>)<pos:position pos:line="428" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="428" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="429" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="431" pos:column="9">cache<pos:position pos:line="431" pos:column="14"/></name><operator pos:line="431" pos:column="14">-&gt;<pos:position pos:line="431" pos:column="19"/></operator><name pos:line="431" pos:column="16">block_response<pos:position pos:line="431" pos:column="30"/></name></name> <operator pos:line="431" pos:column="31">=<pos:position pos:line="431" pos:column="32"/></operator> <literal type="number" pos:line="431" pos:column="33">1<pos:position pos:line="431" pos:column="34"/></literal></expr>;<pos:position pos:line="431" pos:column="35"/></expr_stmt>
        <return pos:line="432" pos:column="9">return <expr><call><name pos:line="432" pos:column="16">ap_pass_brigade<pos:position pos:line="432" pos:column="31"/></name><argument_list pos:line="432" pos:column="31">(<argument><expr><name><name pos:line="432" pos:column="32">f<pos:position pos:line="432" pos:column="33"/></name><operator pos:line="432" pos:column="33">-&gt;<pos:position pos:line="432" pos:column="38"/></operator><name pos:line="432" pos:column="35">next<pos:position pos:line="432" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="41">bb<pos:position pos:line="432" pos:column="43"/></name></expr></argument>)<pos:position pos:line="432" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="45"/></return>
    }<pos:position pos:line="433" pos:column="6"/></block></then></if>

    <if pos:line="435" pos:column="5">if <condition pos:line="435" pos:column="8">(<expr><name pos:line="435" pos:column="9">rv<pos:position pos:line="435" pos:column="11"/></name> <operator pos:line="435" pos:column="12">==<pos:position pos:line="435" pos:column="14"/></operator> <name pos:line="435" pos:column="15">APR_SUCCESS<pos:position pos:line="435" pos:column="26"/></name></expr>)<pos:position pos:line="435" pos:column="27"/></condition><then pos:line="435" pos:column="27"> <block pos:line="435" pos:column="28">{
        <expr_stmt><expr><name pos:line="436" pos:column="9">rv<pos:position pos:line="436" pos:column="11"/></name> <operator pos:line="436" pos:column="12">=<pos:position pos:line="436" pos:column="13"/></operator> <call><name><name pos:line="436" pos:column="14">cache<pos:position pos:line="436" pos:column="19"/></name><operator pos:line="436" pos:column="19">-&gt;<pos:position pos:line="436" pos:column="24"/></operator><name pos:line="436" pos:column="21">provider<pos:position pos:line="436" pos:column="29"/></name><operator pos:line="436" pos:column="29">-&gt;<pos:position pos:line="436" pos:column="34"/></operator><name pos:line="436" pos:column="31">store_body<pos:position pos:line="436" pos:column="41"/></name></name><argument_list pos:line="436" pos:column="41">(<argument><expr><name><name pos:line="436" pos:column="42">cache<pos:position pos:line="436" pos:column="47"/></name><operator pos:line="436" pos:column="47">-&gt;<pos:position pos:line="436" pos:column="52"/></operator><name pos:line="436" pos:column="49">handle<pos:position pos:line="436" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="436" pos:column="57">r<pos:position pos:line="436" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="436" pos:column="60">in<pos:position pos:line="436" pos:column="62"/></name></expr></argument>)<pos:position pos:line="436" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="436" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="437" pos:column="6"/></block></then></if>
    <if pos:line="438" pos:column="5">if <condition pos:line="438" pos:column="8">(<expr><name pos:line="438" pos:column="9">rv<pos:position pos:line="438" pos:column="11"/></name> <operator pos:line="438" pos:column="12">!=<pos:position pos:line="438" pos:column="14"/></operator> <name pos:line="438" pos:column="15">APR_SUCCESS<pos:position pos:line="438" pos:column="26"/></name></expr>)<pos:position pos:line="438" pos:column="27"/></condition><then pos:line="438" pos:column="27"> <block pos:line="438" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="439" pos:column="9">ap_remove_output_filter<pos:position pos:line="439" pos:column="32"/></name><argument_list pos:line="439" pos:column="32">(<argument><expr><name pos:line="439" pos:column="33">f<pos:position pos:line="439" pos:column="34"/></name></expr></argument>)<pos:position pos:line="439" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="440" pos:column="6"/></block></then></if>

    <return pos:line="442" pos:column="5">return <expr><call><name pos:line="442" pos:column="12">ap_pass_brigade<pos:position pos:line="442" pos:column="27"/></name><argument_list pos:line="442" pos:column="27">(<argument><expr><name><name pos:line="442" pos:column="28">f<pos:position pos:line="442" pos:column="29"/></name><operator pos:line="442" pos:column="29">-&gt;<pos:position pos:line="442" pos:column="34"/></operator><name pos:line="442" pos:column="31">next<pos:position pos:line="442" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="37">in<pos:position pos:line="442" pos:column="39"/></name></expr></argument>)<pos:position pos:line="442" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="41"/></return>
}<pos:position pos:line="443" pos:column="2"/></block></function></unit>

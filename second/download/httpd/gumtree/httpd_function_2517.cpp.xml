<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2517.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cgethost<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">in_addr<pos:position pos:line="1" pos:column="37"/></name></name></type> <name pos:line="1" pos:column="38">ipnum<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">string<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">check<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">nsrec<pos:position pos:line="3" pos:column="17"/></name></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">current<pos:position pos:line="3" pos:column="27"/></name></decl>, <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier>new;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">hostent<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">hostdata<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">name<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">current<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">&amp;<pos:position pos:line="7" pos:column="20"/></operator><name><name pos:line="7" pos:column="16">nscache<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><name><name pos:line="7" pos:column="26">ipnum<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">.<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">s_addr<pos:position pos:line="7" pos:column="38"/></name></name> <operator pos:line="7" pos:column="39">+<pos:position pos:line="7" pos:column="40"/></operator> <operator pos:line="7" pos:column="41">(<pos:position pos:line="7" pos:column="42"/></operator><name><name pos:line="7" pos:column="42">ipnum<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">.<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">s_addr<pos:position pos:line="7" pos:column="54"/></name></name> <operator pos:line="7" pos:column="55">&gt;&gt;<pos:position pos:line="7" pos:column="60"/></operator> <literal type="number" pos:line="7" pos:column="58">8<pos:position pos:line="7" pos:column="59"/></literal><operator pos:line="7" pos:column="59">)<pos:position pos:line="7" pos:column="60"/></operator> <operator pos:line="7" pos:column="61">+<pos:position pos:line="7" pos:column="62"/></operator>
                         <operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name><name pos:line="8" pos:column="27">ipnum<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">.<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">s_addr<pos:position pos:line="8" pos:column="39"/></name></name> <operator pos:line="8" pos:column="40">&gt;&gt;<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="43">16<pos:position pos:line="8" pos:column="45"/></literal><operator pos:line="8" pos:column="45">)<pos:position pos:line="8" pos:column="46"/></operator> <operator pos:line="8" pos:column="47">+<pos:position pos:line="8" pos:column="48"/></operator> <operator pos:line="8" pos:column="49">(<pos:position pos:line="8" pos:column="50"/></operator><name><name pos:line="8" pos:column="50">ipnum<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">.<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="56">s_addr<pos:position pos:line="8" pos:column="62"/></name></name> <operator pos:line="8" pos:column="63">&gt;&gt;<pos:position pos:line="8" pos:column="68"/></operator> <literal type="number" pos:line="8" pos:column="66">24<pos:position pos:line="8" pos:column="68"/></literal><operator pos:line="8" pos:column="68">)<pos:position pos:line="8" pos:column="69"/></operator><operator pos:line="8" pos:column="69">)<pos:position pos:line="8" pos:column="70"/></operator> <operator pos:line="8" pos:column="71">%<pos:position pos:line="8" pos:column="72"/></operator> <name pos:line="8" pos:column="73">BUCKETS<pos:position pos:line="8" pos:column="80"/></name><operator pos:line="8" pos:column="80">)<pos:position pos:line="8" pos:column="81"/></operator></expr>]<pos:position pos:line="8" pos:column="82"/></index></name></expr>;<pos:position pos:line="8" pos:column="83"/></expr_stmt>

    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><operator pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">current<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">!=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&amp;&amp;<pos:position pos:line="10" pos:column="39"/></operator> <name><name pos:line="10" pos:column="32">ipnum<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">.<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">s_addr<pos:position pos:line="10" pos:column="44"/></name></name> <operator pos:line="10" pos:column="45">!=<pos:position pos:line="10" pos:column="47"/></operator> <name><operator pos:line="10" pos:column="48">(<pos:position pos:line="10" pos:column="49"/></operator><operator pos:line="10" pos:column="49">*<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">current<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator><operator pos:line="10" pos:column="58">-&gt;<pos:position pos:line="10" pos:column="63"/></operator><name><name pos:line="10" pos:column="60">ipnum<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">.<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="66">s_addr<pos:position pos:line="10" pos:column="72"/></name></name></name></expr>)<pos:position pos:line="10" pos:column="73"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">current<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <operator pos:line="11" pos:column="19">&amp;<pos:position pos:line="11" pos:column="24"/></operator><name><operator pos:line="11" pos:column="20">(<pos:position pos:line="11" pos:column="21"/></operator><operator pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">current<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">next<pos:position pos:line="11" pos:column="36"/></name></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt></block></while>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">current<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">cachesize<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">++<pos:position pos:line="14" pos:column="20"/></operator></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="15" pos:column="9">new<pos:position pos:line="15" pos:column="12"/></operator> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <operator pos:line="15" pos:column="15">(<pos:position pos:line="15" pos:column="16"/></operator>struct <name pos:line="15" pos:column="23">nsrec<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">*<pos:position pos:line="15" pos:column="30"/></operator><operator pos:line="15" pos:column="30">)<pos:position pos:line="15" pos:column="31"/></operator> <call><name pos:line="15" pos:column="32">malloc<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><sizeof pos:line="15" pos:column="39">sizeof<argument_list pos:line="15" pos:column="45">(<argument><expr pos:line="15" pos:column="46">struct <name pos:line="15" pos:column="53">nsrec<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">new<pos:position pos:line="16" pos:column="16"/></operator> <operator pos:line="16" pos:column="17">==<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">NULL<pos:position pos:line="16" pos:column="24"/></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">perror<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="string" pos:line="17" pos:column="20">"malloc"<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">fprintf<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">stderr<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="29">"Insufficient memory\n"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">exit<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><literal type="number" pos:line="19" pos:column="18">1<pos:position pos:line="19" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">current<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="20">new<pos:position pos:line="21" pos:column="23"/></operator></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">new<pos:position pos:line="22" pos:column="12"/></operator><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">next<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">NULL<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="24" pos:column="9">new<pos:position pos:line="24" pos:column="12"/></operator><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">ipnum<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">ipnum<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name pos:line="26" pos:column="9">hostdata<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="20">gethostbyaddr<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><operator pos:line="26" pos:column="34">(<pos:position pos:line="26" pos:column="35"/></operator><specifier pos:line="26" pos:column="35">const<pos:position pos:line="26" pos:column="40"/></specifier> <name pos:line="26" pos:column="41">char<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">*<pos:position pos:line="26" pos:column="47"/></operator><operator pos:line="26" pos:column="47">)<pos:position pos:line="26" pos:column="48"/></operator> <operator pos:line="26" pos:column="49">&amp;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="50">ipnum<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="57">sizeof<argument_list pos:line="26" pos:column="63">(<argument><expr pos:line="26" pos:column="64">struct <name pos:line="26" pos:column="71">in_addr<pos:position pos:line="26" pos:column="78"/></name></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></sizeof></expr></argument>,
                                 <argument><expr><name pos:line="27" pos:column="34">AF_INET<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">hostdata<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">==<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">NULL<pos:position pos:line="28" pos:column="29"/></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block pos:line="28" pos:column="31">{
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">h_errno<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">&gt;<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="27">MAX_ERR<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="17">errors<pos:position pos:line="30" pos:column="23"/></name><index pos:line="30" pos:column="23">[<expr><name pos:line="30" pos:column="24">UNKNOWN_ERR<pos:position pos:line="30" pos:column="35"/></name></expr>]<pos:position pos:line="30" pos:column="36"/></index></name><operator pos:line="30" pos:column="36">++<pos:position pos:line="30" pos:column="38"/></operator></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt></block></then>
            <else pos:line="31" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="17">errors<pos:position pos:line="32" pos:column="23"/></name><index pos:line="32" pos:column="23">[<expr><name pos:line="32" pos:column="24">h_errno<pos:position pos:line="32" pos:column="31"/></name></expr>]<pos:position pos:line="32" pos:column="32"/></index></name><operator pos:line="32" pos:column="32">++<pos:position pos:line="32" pos:column="34"/></operator></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt></block></else></if>
            <expr_stmt><expr><operator pos:line="33" pos:column="13">new<pos:position pos:line="33" pos:column="16"/></operator><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">noname<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">=<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">h_errno<pos:position pos:line="33" pos:column="34"/></name></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">name<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <call><name pos:line="34" pos:column="20">strdup<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><call><name pos:line="34" pos:column="27">inet_ntoa<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">ipnum<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then>
        <else pos:line="36" pos:column="9">else <block pos:line="36" pos:column="14">{
            <expr_stmt><expr><operator pos:line="37" pos:column="13">new<pos:position pos:line="37" pos:column="16"/></operator><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">noname<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <literal type="number" pos:line="37" pos:column="27">0<pos:position pos:line="37" pos:column="28"/></literal></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="38" pos:column="13">name<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">strdup<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name><name pos:line="38" pos:column="27">hostdata<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">h_name<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><name pos:line="39" pos:column="17">check<pos:position pos:line="39" pos:column="22"/></name></expr>)<pos:position pos:line="39" pos:column="23"/></condition><then pos:line="39" pos:column="23"> <block pos:line="39" pos:column="24">{
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">name<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">==<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="29">NULL<pos:position pos:line="40" pos:column="33"/></name></expr>)<pos:position pos:line="40" pos:column="34"/></condition><then pos:line="40" pos:column="34"> <block pos:line="40" pos:column="35">{
                    <expr_stmt><expr><call><name pos:line="41" pos:column="21">perror<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><literal type="string" pos:line="41" pos:column="28">"strdup"<pos:position pos:line="41" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="42" pos:column="21">fprintf<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">stderr<pos:position pos:line="42" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="37">"Insufficient memory\n"<pos:position pos:line="42" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="43" pos:column="21">exit<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="45" pos:column="17">hostdata<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">=<pos:position pos:line="45" pos:column="27"/></operator> <call><name pos:line="45" pos:column="28">gethostbyname<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><name pos:line="45" pos:column="42">name<pos:position pos:line="45" pos:column="46"/></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
                <if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">hostdata<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">!=<pos:position pos:line="46" pos:column="32"/></operator> <name pos:line="46" pos:column="33">NULL<pos:position pos:line="46" pos:column="37"/></name></expr>)<pos:position pos:line="46" pos:column="38"/></condition><then pos:line="46" pos:column="38"> <block pos:line="46" pos:column="39">{
                    <decl_stmt><decl><type><name pos:line="47" pos:column="21">char<pos:position pos:line="47" pos:column="25"/></name> <modifier pos:line="47" pos:column="26">*<pos:position pos:line="47" pos:column="27"/></modifier><modifier pos:line="47" pos:column="27">*<pos:position pos:line="47" pos:column="28"/></modifier></type><name pos:line="47" pos:column="28">hptr<pos:position pos:line="47" pos:column="32"/></name></decl>;<pos:position pos:line="47" pos:column="33"/></decl_stmt>

                    <for pos:line="49" pos:column="21">for <control pos:line="49" pos:column="25">(<init><expr><name pos:line="49" pos:column="26">hptr<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">=<pos:position pos:line="49" pos:column="32"/></operator> <name><name pos:line="49" pos:column="33">hostdata<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">-&gt;<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="43">h_addr_list<pos:position pos:line="49" pos:column="54"/></name></name></expr>;<pos:position pos:line="49" pos:column="55"/></init> <condition><expr><operator pos:line="49" pos:column="56">*<pos:position pos:line="49" pos:column="57"/></operator><name pos:line="49" pos:column="57">hptr<pos:position pos:line="49" pos:column="61"/></name> <operator pos:line="49" pos:column="62">!=<pos:position pos:line="49" pos:column="64"/></operator> <name pos:line="49" pos:column="65">NULL<pos:position pos:line="49" pos:column="69"/></name></expr>;<pos:position pos:line="49" pos:column="70"/></condition> <incr><expr><name pos:line="49" pos:column="71">hptr<pos:position pos:line="49" pos:column="75"/></name><operator pos:line="49" pos:column="75">++<pos:position pos:line="49" pos:column="77"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="78"/></control>
                        <block type="pseudo"><if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">(<pos:position pos:line="50" pos:column="30"/></operator><operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator>struct <name pos:line="50" pos:column="38">in_addr<pos:position pos:line="50" pos:column="45"/></name> <operator pos:line="50" pos:column="46">*<pos:position pos:line="50" pos:column="47"/></operator><operator pos:line="50" pos:column="47">)<pos:position pos:line="50" pos:column="48"/></operator> <operator pos:line="50" pos:column="49">(<pos:position pos:line="50" pos:column="50"/></operator><operator pos:line="50" pos:column="50">*<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="51">hptr<pos:position pos:line="50" pos:column="55"/></name><operator pos:line="50" pos:column="55">)<pos:position pos:line="50" pos:column="56"/></operator><operator pos:line="50" pos:column="56">)<pos:position pos:line="50" pos:column="57"/></operator><operator pos:line="50" pos:column="57">-&gt;<pos:position pos:line="50" pos:column="62"/></operator><name pos:line="50" pos:column="59">s_addr<pos:position pos:line="50" pos:column="65"/></name> <operator pos:line="50" pos:column="66">==<pos:position pos:line="50" pos:column="68"/></operator> <name><name pos:line="50" pos:column="69">ipnum<pos:position pos:line="50" pos:column="74"/></name><operator pos:line="50" pos:column="74">.<pos:position pos:line="50" pos:column="75"/></operator><name pos:line="50" pos:column="75">s_addr<pos:position pos:line="50" pos:column="81"/></name></name></expr>)<pos:position pos:line="50" pos:column="82"/></condition><then pos:line="50" pos:column="82">
                            <block type="pseudo"><break pos:line="51" pos:column="29">break;<pos:position pos:line="51" pos:column="35"/></break></block></then></if></block></for>
                    <if pos:line="52" pos:column="21">if <condition pos:line="52" pos:column="24">(<expr><operator pos:line="52" pos:column="25">*<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="26">hptr<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">==<pos:position pos:line="52" pos:column="33"/></operator> <name pos:line="52" pos:column="34">NULL<pos:position pos:line="52" pos:column="38"/></name></expr>)<pos:position pos:line="52" pos:column="39"/></condition><then pos:line="52" pos:column="39">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="25">hostdata<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">=<pos:position pos:line="53" pos:column="35"/></operator> <name pos:line="53" pos:column="36">NULL<pos:position pos:line="53" pos:column="40"/></name></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt></block></then></if>
                }<pos:position pos:line="54" pos:column="18"/></block></then></if>
                <if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">hostdata<pos:position pos:line="55" pos:column="29"/></name> <operator pos:line="55" pos:column="30">==<pos:position pos:line="55" pos:column="32"/></operator> <name pos:line="55" pos:column="33">NULL<pos:position pos:line="55" pos:column="37"/></name></expr>)<pos:position pos:line="55" pos:column="38"/></condition><then pos:line="55" pos:column="38"> <block pos:line="55" pos:column="39">{
                    <expr_stmt><expr><call><name pos:line="56" pos:column="21">fprintf<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">stderr<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="37">"Bad host: %s != %s\n"<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="61">name<pos:position pos:line="56" pos:column="65"/></name></expr></argument>,
                            <argument><expr><call><name pos:line="57" pos:column="29">inet_ntoa<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">ipnum<pos:position pos:line="57" pos:column="44"/></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="58" pos:column="21">new<pos:position pos:line="58" pos:column="24"/></operator><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">noname<pos:position pos:line="58" pos:column="32"/></name> <operator pos:line="58" pos:column="33">=<pos:position pos:line="58" pos:column="34"/></operator> <name pos:line="58" pos:column="35">NO_REVERSE<pos:position pos:line="58" pos:column="45"/></name></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="59" pos:column="21">free<pos:position pos:line="59" pos:column="25"/></name><argument_list pos:line="59" pos:column="25">(<argument><expr><name pos:line="59" pos:column="26">name<pos:position pos:line="59" pos:column="30"/></name></expr></argument>)<pos:position pos:line="59" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="32"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="60" pos:column="21">name<pos:position pos:line="60" pos:column="25"/></name> <operator pos:line="60" pos:column="26">=<pos:position pos:line="60" pos:column="27"/></operator> <call><name pos:line="60" pos:column="28">strdup<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">(<argument><expr><call><name pos:line="60" pos:column="35">inet_ntoa<pos:position pos:line="60" pos:column="44"/></name><argument_list pos:line="60" pos:column="44">(<argument><expr><name pos:line="60" pos:column="45">ipnum<pos:position pos:line="60" pos:column="50"/></name></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="53"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="61" pos:column="21">errors<pos:position pos:line="61" pos:column="27"/></name><index pos:line="61" pos:column="27">[<expr><name pos:line="61" pos:column="28">NO_REVERSE<pos:position pos:line="61" pos:column="38"/></name></expr>]<pos:position pos:line="61" pos:column="39"/></index></name><operator pos:line="61" pos:column="39">++<pos:position pos:line="61" pos:column="41"/></operator></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>
                }<pos:position pos:line="62" pos:column="18"/></block></then></if>
            }<pos:position pos:line="63" pos:column="14"/></block></then></if>
        }<pos:position pos:line="64" pos:column="10"/></block></else></if>
        <expr_stmt><expr><operator pos:line="65" pos:column="9">new<pos:position pos:line="65" pos:column="12"/></operator><operator pos:line="65" pos:column="12">-&gt;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="14">hostname<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="25">name<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">new<pos:position pos:line="66" pos:column="16"/></operator><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">hostname<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">==<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="30">NULL<pos:position pos:line="66" pos:column="34"/></name></expr>)<pos:position pos:line="66" pos:column="35"/></condition><then pos:line="66" pos:column="35"> <block pos:line="66" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">perror<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">(<argument><expr><literal type="string" pos:line="67" pos:column="20">"strdup"<pos:position pos:line="67" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">fprintf<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">stderr<pos:position pos:line="68" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="29">"Insufficient memory\n"<pos:position pos:line="68" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">exit<pos:position pos:line="69" pos:column="17"/></name><argument_list pos:line="69" pos:column="17">(<argument><expr><literal type="number" pos:line="69" pos:column="18">1<pos:position pos:line="69" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></then>
    <else pos:line="72" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="9">cachehits<pos:position pos:line="73" pos:column="18"/></name><operator pos:line="73" pos:column="18">++<pos:position pos:line="73" pos:column="20"/></operator></expr>;<pos:position pos:line="73" pos:column="21"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="75" pos:column="5">/* size of string == MAXDNAME +1 */</comment>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">strncpy<pos:position pos:line="76" pos:column="12"/></name><argument_list pos:line="76" pos:column="12">(<argument><expr><name pos:line="76" pos:column="13">string<pos:position pos:line="76" pos:column="19"/></name></expr></argument>, <argument><expr><name><operator pos:line="76" pos:column="21">(<pos:position pos:line="76" pos:column="22"/></operator><operator pos:line="76" pos:column="22">*<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="23">current<pos:position pos:line="76" pos:column="30"/></name><operator pos:line="76" pos:column="30">)<pos:position pos:line="76" pos:column="31"/></operator><operator pos:line="76" pos:column="31">-&gt;<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="33">hostname<pos:position pos:line="76" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="43">MAXDNAME<pos:position pos:line="76" pos:column="51"/></name></expr></argument>)<pos:position pos:line="76" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">string<pos:position pos:line="77" pos:column="11"/></name><index pos:line="77" pos:column="11">[<expr><name pos:line="77" pos:column="12">MAXDNAME<pos:position pos:line="77" pos:column="20"/></name></expr>]<pos:position pos:line="77" pos:column="21"/></index></name> <operator pos:line="77" pos:column="22">=<pos:position pos:line="77" pos:column="23"/></operator> <literal type="char" pos:line="77" pos:column="24">'\0'<pos:position pos:line="77" pos:column="28"/></literal></expr>;<pos:position pos:line="77" pos:column="29"/></expr_stmt>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

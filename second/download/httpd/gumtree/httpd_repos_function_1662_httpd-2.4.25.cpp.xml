<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1662_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">wd_worker_cleanup<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">data<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_watchdog_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">w<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">ap_watchdog_t<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator><operator pos:line="4" pos:column="40">)<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">data<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">w<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">is_running<pos:position pos:line="6" pos:column="22"/></name></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">watchdog_list_t<pos:position pos:line="7" pos:column="24"/></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">wl<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name><name pos:line="7" pos:column="31">w<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">callbacks<pos:position pos:line="7" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
        <while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">wl<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition> <block pos:line="8" pos:column="20">{
            <if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><name><name pos:line="9" pos:column="17">wl<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">status<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">==<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">APR_SUCCESS<pos:position pos:line="9" pos:column="42"/></name></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
                <comment type="block" pos:line="10" pos:column="17">/* Execute watchdog callback with STOPPING state */</comment>
                <expr_stmt><expr><call pos:line="11" pos:column="17">(<modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier><name><name pos:line="11" pos:column="19">wl<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">callback_fn<pos:position pos:line="11" pos:column="34"/></name></name>)<argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">AP_WATCHDOG_STATE_STOPPING<pos:position pos:line="11" pos:column="62"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="12" pos:column="37">(<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">void<pos:position pos:line="12" pos:column="42"/></name> <operator pos:line="12" pos:column="43">*<pos:position pos:line="12" pos:column="44"/></operator><operator pos:line="12" pos:column="44">)<pos:position pos:line="12" pos:column="45"/></operator><name><name pos:line="12" pos:column="45">wl<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">data<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="55">w<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">pool<pos:position pos:line="12" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="13" pos:column="17">wl<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">status<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">APR_EOF<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="14" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="15" pos:column="13">wl<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name><name pos:line="15" pos:column="18">wl<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">next<pos:position pos:line="15" pos:column="26"/></name></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></while>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">w<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">is_running<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="21">0<pos:position pos:line="18" pos:column="22"/></literal></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">apr_thread_join<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><operator pos:line="19" pos:column="21">&amp;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="22">rv<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="26">w<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">thread<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">rv<pos:position pos:line="20" pos:column="14"/></name></expr>;<pos:position pos:line="20" pos:column="15"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6128.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">h2_protocol_switch<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">conn_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">c<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">request_rec<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">r<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">server_rec<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">s<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">protocol<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">found<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier><modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">protos<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><ternary><condition><expr><call><name pos:line="5" pos:column="27">h2_h2_is_tls<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name pos:line="5" pos:column="40">c<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>?<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43"> <expr><name pos:line="5" pos:column="44">h2_tls_protos<pos:position pos:line="5" pos:column="57"/></name></expr> <pos:position pos:line="5" pos:column="58"/></then><else pos:line="5" pos:column="58">: <expr><name pos:line="5" pos:column="60">h2_clear_protos<pos:position pos:line="5" pos:column="75"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">p<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">protos<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    
    <expr_stmt><expr><operator pos:line="8" pos:column="5">(<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">void<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">)<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">s<pos:position pos:line="8" pos:column="12"/></name></expr>;<pos:position pos:line="8" pos:column="13"/></expr_stmt>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">*<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">p<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition> <block pos:line="9" pos:column="16">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name pos:line="10" pos:column="14">strcmp<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">p<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="25">protocol<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="35"/></condition><then pos:line="10" pos:column="35"> <block pos:line="10" pos:column="36">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">found<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="21">1<pos:position pos:line="11" pos:column="22"/></literal></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
            <break pos:line="12" pos:column="13">break;<pos:position pos:line="12" pos:column="19"/></break>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="14" pos:column="9">p<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">++<pos:position pos:line="14" pos:column="12"/></operator></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></while>
    
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">found<pos:position pos:line="17" pos:column="14"/></name></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15"> <block pos:line="17" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">h2_ctx<pos:position pos:line="18" pos:column="15"/></name> <modifier pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></modifier></type><name pos:line="18" pos:column="17">ctx<pos:position pos:line="18" pos:column="20"/></name> <init pos:line="18" pos:column="21">= <expr><call><name pos:line="18" pos:column="23">h2_ctx_get<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">c<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="37"/></decl_stmt>
        
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_cerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_TRACE1<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="49">0<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">c<pos:position pos:line="20" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="21" pos:column="23">"switching protocol to '%s'"<pos:position pos:line="21" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">protocol<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">h2_ctx_protocol_set<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">ctx<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">protocol<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">h2_ctx_server_set<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">ctx<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">s<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
        
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">r<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">!=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">NULL<pos:position pos:line="25" pos:column="22"/></name></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23"> <block pos:line="25" pos:column="24">{
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">apr_status_t<pos:position pos:line="26" pos:column="25"/></name></type> <name pos:line="26" pos:column="26">status<pos:position pos:line="26" pos:column="32"/></name></decl>;<pos:position pos:line="26" pos:column="33"/></decl_stmt>
            <comment type="block" pos:line="27" pos:column="13">/* Switching in the middle of a request means that
             * we have to send out the response to this one in h2
             * format. So we need to take over the connection
             * right away.
             */</comment>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">ap_remove_input_filter_byhandle<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><name><name pos:line="32" pos:column="45">r<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">input_filters<pos:position pos:line="32" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="63">"http_in"<pos:position pos:line="32" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_remove_input_filter_byhandle<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">(<argument><expr><name><name pos:line="33" pos:column="45">r<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">input_filters<pos:position pos:line="33" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="63">"reqtimeout"<pos:position pos:line="33" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_remove_output_filter_byhandle<pos:position pos:line="34" pos:column="45"/></name><argument_list pos:line="34" pos:column="45">(<argument><expr><name><name pos:line="34" pos:column="46">r<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">-&gt;<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="49">output_filters<pos:position pos:line="34" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="65">"HTTP_HEADER"<pos:position pos:line="34" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="80"/></expr_stmt>
            
            <comment type="block" pos:line="36" pos:column="13">/* Ok, start an h2_conn on this one. */</comment>
            <expr_stmt><expr><name pos:line="37" pos:column="13">status<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <call><name pos:line="37" pos:column="22">h2_conn_process<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name><name pos:line="37" pos:column="38">r<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">connection<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">r<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="56">r<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">-&gt;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="59">server<pos:position pos:line="37" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><name pos:line="38" pos:column="17">status<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">!=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">DONE<pos:position pos:line="38" pos:column="31"/></name></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32"> <block pos:line="38" pos:column="33">{
                <comment type="block" pos:line="39" pos:column="17">/* Nothing really to do about this. */</comment>
                <expr_stmt><expr><call><name pos:line="40" pos:column="17">ap_log_rerror<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">APLOG_MARK<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">APLOG_DEBUG<pos:position pos:line="40" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="56">status<pos:position pos:line="40" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="64">r<pos:position pos:line="40" pos:column="65"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="41" pos:column="31">"session proessed, unexpected status"<pos:position pos:line="41" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
        <return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">DONE<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">DECLINED<pos:position pos:line="47" pos:column="20"/></name></expr>;<pos:position pos:line="47" pos:column="21"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6925.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_stream_out_prepare<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">h2_stream<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">stream<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">apr_off_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">plen<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, 
                                   <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">peos<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">h2_headers<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier><modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">presponse<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">conn_rec<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">c<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name><name pos:line="4" pos:column="19">stream<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">session<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">c<pos:position pos:line="4" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">APR_SUCCESS<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_off_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">requested<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">b<pos:position pos:line="7" pos:column="18"/></name></decl>, <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="21">e<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">presponse<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
        <expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">presponse<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">stream<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">rst_error<pos:position pos:line="13" pos:column="26"/></name></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
        <expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">plen<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">peos<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">1<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">APR_ECONNRESET<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><call><name pos:line="19" pos:column="10">output_open<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">stream<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30"> <block pos:line="19" pos:column="31">{
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">APR_ECONNRESET<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">prep_output<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">stream<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">plen<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">&gt;<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19"> <block pos:line="24" pos:column="20">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">requested<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">H2MIN<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><operator pos:line="25" pos:column="27">*<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">plen<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">H2_DATA_CHUNK_SIZE<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <else pos:line="27" pos:column="5">else <block pos:line="27" pos:column="10">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">requested<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">H2_DATA_CHUNK_SIZE<pos:position pos:line="28" pos:column="39"/></name></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>
    <expr_stmt><expr><operator pos:line="30" pos:column="5">*<pos:position pos:line="30" pos:column="6"/></operator><name pos:line="30" pos:column="6">plen<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <name pos:line="30" pos:column="13">requested<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">H2_STREAM_OUT_LOG<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">APLOG_TRACE2<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">stream<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="45">"h2_stream_out_prepare_pre"<pos:position pos:line="32" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">h2_util_bb_avail<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name><name pos:line="33" pos:column="22">stream<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">out_buffer<pos:position pos:line="33" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">plen<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">peos<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><operator pos:line="34" pos:column="10">*<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">peos<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">&amp;&amp;<pos:position pos:line="34" pos:column="26"/></operator> <operator pos:line="34" pos:column="19">*<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">plen<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">&lt;<pos:position pos:line="34" pos:column="29"/></operator> <name pos:line="34" pos:column="27">requested<pos:position pos:line="34" pos:column="36"/></name></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37"> <block pos:line="34" pos:column="38">{
        <comment type="block" pos:line="35" pos:column="9">/* try to get more data */</comment>
        <expr_stmt><expr><name pos:line="36" pos:column="9">status<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">fill_buffer<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">stream<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="38">(<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">requested<pos:position pos:line="36" pos:column="48"/></name> <operator pos:line="36" pos:column="49">-<pos:position pos:line="36" pos:column="50"/></operator> <operator pos:line="36" pos:column="51">*<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="52">plen<pos:position pos:line="36" pos:column="56"/></name><operator pos:line="36" pos:column="56">)<pos:position pos:line="36" pos:column="57"/></operator> <operator pos:line="36" pos:column="58">+<pos:position pos:line="36" pos:column="59"/></operator> <name pos:line="36" pos:column="60">H2_DATA_CHUNK_SIZE<pos:position pos:line="36" pos:column="78"/></name></expr></argument>)<pos:position pos:line="36" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="80"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">APR_STATUS_IS_EOF<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">status<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39"> <block pos:line="37" pos:column="40">{
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">apr_bucket<pos:position pos:line="38" pos:column="23"/></name> <modifier pos:line="38" pos:column="24">*<pos:position pos:line="38" pos:column="25"/></modifier></type><name pos:line="38" pos:column="25">eos<pos:position pos:line="38" pos:column="28"/></name> <init pos:line="38" pos:column="29">= <expr><call><name pos:line="38" pos:column="31">apr_bucket_eos_create<pos:position pos:line="38" pos:column="52"/></name><argument_list pos:line="38" pos:column="52">(<argument><expr><name><name pos:line="38" pos:column="53">c<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">-&gt;<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="56">bucket_alloc<pos:position pos:line="38" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="70"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><name><name pos:line="39" pos:column="37">stream<pos:position pos:line="39" pos:column="43"/></name><operator pos:line="39" pos:column="43">-&gt;<pos:position pos:line="39" pos:column="48"/></operator><name pos:line="39" pos:column="45">out_buffer<pos:position pos:line="39" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">eos<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">status<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="22">APR_SUCCESS<pos:position pos:line="40" pos:column="33"/></name></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then>
        <elseif pos:line="42" pos:column="9">else <if pos:line="42" pos:column="14">if <condition pos:line="42" pos:column="17">(<expr><name pos:line="42" pos:column="18">status<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">==<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="28">APR_EAGAIN<pos:position pos:line="42" pos:column="38"/></name></expr>)<pos:position pos:line="42" pos:column="39"/></condition><then pos:line="42" pos:column="39"> <block pos:line="42" pos:column="40">{
            <comment type="block" pos:line="43" pos:column="13">/* did not receive more, it's ok */</comment>
            <expr_stmt><expr><name pos:line="44" pos:column="13">status<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">APR_SUCCESS<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><operator pos:line="46" pos:column="9">*<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">plen<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">requested<pos:position pos:line="46" pos:column="26"/></name></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">h2_util_bb_avail<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name><name pos:line="47" pos:column="26">stream<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">out_buffer<pos:position pos:line="47" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="46">plen<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="52">peos<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">H2_STREAM_OUT_LOG<pos:position pos:line="49" pos:column="22"/></name><argument_list pos:line="49" pos:column="22">(<argument><expr><name pos:line="49" pos:column="23">APLOG_TRACE2<pos:position pos:line="49" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="37">stream<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="45">"h2_stream_out_prepare_post"<pos:position pos:line="49" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="75"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="51" pos:column="5">b<pos:position pos:line="51" pos:column="6"/></name> <operator pos:line="51" pos:column="7">=<pos:position pos:line="51" pos:column="8"/></operator> <call><name pos:line="51" pos:column="9">APR_BRIGADE_FIRST<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name><name pos:line="51" pos:column="27">stream<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">out_buffer<pos:position pos:line="51" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
    <while pos:line="52" pos:column="5">while <condition pos:line="52" pos:column="11">(<expr><name pos:line="52" pos:column="12">b<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">!=<pos:position pos:line="52" pos:column="16"/></operator> <call><name pos:line="52" pos:column="17">APR_BRIGADE_SENTINEL<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name><name pos:line="52" pos:column="38">stream<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">-&gt;<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="46">out_buffer<pos:position pos:line="52" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="58"/></condition> <block pos:line="52" pos:column="59">{
        <expr_stmt><expr><name pos:line="53" pos:column="9">e<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <call><name pos:line="53" pos:column="13">APR_BUCKET_NEXT<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">b<pos:position pos:line="53" pos:column="30"/></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><call><name pos:line="54" pos:column="13">APR_BUCKET_IS_FLUSH<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">b<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call>
            <operator pos:line="55" pos:column="13">||<pos:position pos:line="55" pos:column="15"/></operator> <operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><operator pos:line="55" pos:column="17">!<pos:position pos:line="55" pos:column="18"/></operator><call><name pos:line="55" pos:column="18">APR_BUCKET_IS_METADATA<pos:position pos:line="55" pos:column="40"/></name><argument_list pos:line="55" pos:column="40">(<argument><expr><name pos:line="55" pos:column="41">b<pos:position pos:line="55" pos:column="42"/></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call> <operator pos:line="55" pos:column="44">&amp;&amp;<pos:position pos:line="55" pos:column="54"/></operator> <name><name pos:line="55" pos:column="47">b<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">-&gt;<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="50">length<pos:position pos:line="55" pos:column="56"/></name></name> <operator pos:line="55" pos:column="57">==<pos:position pos:line="55" pos:column="59"/></operator> <literal type="number" pos:line="55" pos:column="60">0<pos:position pos:line="55" pos:column="61"/></literal><operator pos:line="55" pos:column="61">)<pos:position pos:line="55" pos:column="62"/></operator></expr>)<pos:position pos:line="55" pos:column="63"/></condition><then pos:line="55" pos:column="63"> <block pos:line="55" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">b<pos:position pos:line="56" pos:column="32"/></name></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">apr_bucket_destroy<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><name pos:line="57" pos:column="32">b<pos:position pos:line="57" pos:column="33"/></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then>
        <else pos:line="59" pos:column="9">else <block pos:line="59" pos:column="14">{
            <break pos:line="60" pos:column="13">break;<pos:position pos:line="60" pos:column="19"/></break>
        }<pos:position pos:line="61" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="62" pos:column="9">b<pos:position pos:line="62" pos:column="10"/></name> <operator pos:line="62" pos:column="11">=<pos:position pos:line="62" pos:column="12"/></operator> <name pos:line="62" pos:column="13">e<pos:position pos:line="62" pos:column="14"/></name></expr>;<pos:position pos:line="62" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></while>
    
    <expr_stmt><expr><name pos:line="65" pos:column="5">b<pos:position pos:line="65" pos:column="6"/></name> <operator pos:line="65" pos:column="7">=<pos:position pos:line="65" pos:column="8"/></operator> <call><name pos:line="65" pos:column="9">get_first_headers_bucket<pos:position pos:line="65" pos:column="33"/></name><argument_list pos:line="65" pos:column="33">(<argument><expr><name><name pos:line="65" pos:column="34">stream<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">-&gt;<pos:position pos:line="65" pos:column="45"/></operator><name pos:line="65" pos:column="42">out_buffer<pos:position pos:line="65" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="54"/></expr_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">b<pos:position pos:line="66" pos:column="10"/></name></expr>)<pos:position pos:line="66" pos:column="11"/></condition><then pos:line="66" pos:column="11"> <block pos:line="66" pos:column="12">{
        <comment type="block" pos:line="67" pos:column="9">/* there are HEADERS to submit */</comment>
        <expr_stmt><expr><operator pos:line="68" pos:column="9">*<pos:position pos:line="68" pos:column="10"/></operator><name pos:line="68" pos:column="10">peos<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">=<pos:position pos:line="68" pos:column="16"/></operator> <literal type="number" pos:line="68" pos:column="17">0<pos:position pos:line="68" pos:column="18"/></literal></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="69" pos:column="9">*<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">plen<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <literal type="number" pos:line="69" pos:column="17">0<pos:position pos:line="69" pos:column="18"/></literal></expr>;<pos:position pos:line="69" pos:column="19"/></expr_stmt>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">b<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">==<pos:position pos:line="70" pos:column="17"/></operator> <call><name pos:line="70" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="70" pos:column="35"/></name><argument_list pos:line="70" pos:column="35">(<argument><expr><name><name pos:line="70" pos:column="36">stream<pos:position pos:line="70" pos:column="42"/></name><operator pos:line="70" pos:column="42">-&gt;<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="44">out_buffer<pos:position pos:line="70" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="56"/></condition><then pos:line="70" pos:column="56"> <block pos:line="70" pos:column="57">{
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><name pos:line="71" pos:column="17">presponse<pos:position pos:line="71" pos:column="26"/></name></expr>)<pos:position pos:line="71" pos:column="27"/></condition><then pos:line="71" pos:column="27"> <block pos:line="71" pos:column="28">{
                <expr_stmt><expr><operator pos:line="72" pos:column="17">*<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">presponse<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">=<pos:position pos:line="72" pos:column="29"/></operator> <call><name pos:line="72" pos:column="30">h2_bucket_headers_get<pos:position pos:line="72" pos:column="51"/></name><argument_list pos:line="72" pos:column="51">(<argument><expr><name pos:line="72" pos:column="52">b<pos:position pos:line="72" pos:column="53"/></name></expr></argument>)<pos:position pos:line="72" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="73" pos:column="34"/></name><argument_list pos:line="73" pos:column="34">(<argument><expr><name pos:line="73" pos:column="35">b<pos:position pos:line="73" pos:column="36"/></name></expr></argument>)<pos:position pos:line="73" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">apr_bucket_destroy<pos:position pos:line="74" pos:column="35"/></name><argument_list pos:line="74" pos:column="35">(<argument><expr><name pos:line="74" pos:column="36">b<pos:position pos:line="74" pos:column="37"/></name></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">status<pos:position pos:line="75" pos:column="23"/></name> <operator pos:line="75" pos:column="24">=<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="26">APR_SUCCESS<pos:position pos:line="75" pos:column="37"/></name></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then>
            <else pos:line="77" pos:column="13">else <block pos:line="77" pos:column="18">{
                <comment type="block" pos:line="78" pos:column="17">/* someone needs to retrieve the response first */</comment>
                <expr_stmt><expr><call><name pos:line="79" pos:column="17">h2_mplx_keep_active<pos:position pos:line="79" pos:column="36"/></name><argument_list pos:line="79" pos:column="36">(<argument><expr><name><name pos:line="79" pos:column="37">stream<pos:position pos:line="79" pos:column="43"/></name><operator pos:line="79" pos:column="43">-&gt;<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="45">session<pos:position pos:line="79" pos:column="52"/></name><operator pos:line="79" pos:column="52">-&gt;<pos:position pos:line="79" pos:column="57"/></operator><name pos:line="79" pos:column="54">mplx<pos:position pos:line="79" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="60">stream<pos:position pos:line="79" pos:column="66"/></name><operator pos:line="79" pos:column="66">-&gt;<pos:position pos:line="79" pos:column="71"/></operator><name pos:line="79" pos:column="68">id<pos:position pos:line="79" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><name pos:line="80" pos:column="17">status<pos:position pos:line="80" pos:column="23"/></name> <operator pos:line="80" pos:column="24">=<pos:position pos:line="80" pos:column="25"/></operator> <name pos:line="80" pos:column="26">APR_EAGAIN<pos:position pos:line="80" pos:column="36"/></name></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="81" pos:column="14"/></block></else></if>
        }<pos:position pos:line="82" pos:column="10"/></block></then>
        <else pos:line="83" pos:column="9">else <block pos:line="83" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="84" pos:column="13">apr_bucket<pos:position pos:line="84" pos:column="23"/></name> <modifier pos:line="84" pos:column="24">*<pos:position pos:line="84" pos:column="25"/></modifier></type><name pos:line="84" pos:column="25">e<pos:position pos:line="84" pos:column="26"/></name> <init pos:line="84" pos:column="27">= <expr><call><name pos:line="84" pos:column="29">APR_BRIGADE_FIRST<pos:position pos:line="84" pos:column="46"/></name><argument_list pos:line="84" pos:column="46">(<argument><expr><name><name pos:line="84" pos:column="47">stream<pos:position pos:line="84" pos:column="53"/></name><operator pos:line="84" pos:column="53">-&gt;<pos:position pos:line="84" pos:column="58"/></operator><name pos:line="84" pos:column="55">out_buffer<pos:position pos:line="84" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="84" pos:column="67"/></decl_stmt>
            <while pos:line="85" pos:column="13">while <condition pos:line="85" pos:column="19">(<expr><name pos:line="85" pos:column="20">e<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">!=<pos:position pos:line="85" pos:column="24"/></operator> <call><name pos:line="85" pos:column="25">APR_BRIGADE_SENTINEL<pos:position pos:line="85" pos:column="45"/></name><argument_list pos:line="85" pos:column="45">(<argument><expr><name><name pos:line="85" pos:column="46">stream<pos:position pos:line="85" pos:column="52"/></name><operator pos:line="85" pos:column="52">-&gt;<pos:position pos:line="85" pos:column="57"/></operator><name pos:line="85" pos:column="54">out_buffer<pos:position pos:line="85" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="66"/></condition> <block pos:line="85" pos:column="67">{
                <if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">e<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">==<pos:position pos:line="86" pos:column="25"/></operator> <name pos:line="86" pos:column="26">b<pos:position pos:line="86" pos:column="27"/></name></expr>)<pos:position pos:line="86" pos:column="28"/></condition><then pos:line="86" pos:column="28"> <block pos:line="86" pos:column="29">{
                    <break pos:line="87" pos:column="21">break;<pos:position pos:line="87" pos:column="27"/></break>
                }<pos:position pos:line="88" pos:column="18"/></block></then>
                <elseif pos:line="89" pos:column="17">else <if pos:line="89" pos:column="22">if <condition pos:line="89" pos:column="25">(<expr><name><name pos:line="89" pos:column="26">e<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">-&gt;<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="29">length<pos:position pos:line="89" pos:column="35"/></name></name> <operator pos:line="89" pos:column="36">!=<pos:position pos:line="89" pos:column="38"/></operator> <operator pos:line="89" pos:column="39">(<pos:position pos:line="89" pos:column="40"/></operator><name pos:line="89" pos:column="40">apr_size_t<pos:position pos:line="89" pos:column="50"/></name><operator pos:line="89" pos:column="50">)<pos:position pos:line="89" pos:column="51"/></operator><operator pos:line="89" pos:column="51">-<pos:position pos:line="89" pos:column="52"/></operator><literal type="number" pos:line="89" pos:column="52">1<pos:position pos:line="89" pos:column="53"/></literal></expr>)<pos:position pos:line="89" pos:column="54"/></condition><then pos:line="89" pos:column="54"> <block pos:line="89" pos:column="55">{
                    <expr_stmt><expr><operator pos:line="90" pos:column="21">*<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="22">plen<pos:position pos:line="90" pos:column="26"/></name> <operator pos:line="90" pos:column="27">+=<pos:position pos:line="90" pos:column="29"/></operator> <name><name pos:line="90" pos:column="30">e<pos:position pos:line="90" pos:column="31"/></name><operator pos:line="90" pos:column="31">-&gt;<pos:position pos:line="90" pos:column="36"/></operator><name pos:line="90" pos:column="33">length<pos:position pos:line="90" pos:column="39"/></name></name></expr>;<pos:position pos:line="90" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="91" pos:column="18"/></block></then></if></elseif></if>
                <expr_stmt><expr><name pos:line="92" pos:column="17">e<pos:position pos:line="92" pos:column="18"/></name> <operator pos:line="92" pos:column="19">=<pos:position pos:line="92" pos:column="20"/></operator> <call><name pos:line="92" pos:column="21">APR_BUCKET_NEXT<pos:position pos:line="92" pos:column="36"/></name><argument_list pos:line="92" pos:column="36">(<argument><expr><name pos:line="92" pos:column="37">e<pos:position pos:line="92" pos:column="38"/></name></expr></argument>)<pos:position pos:line="92" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="93" pos:column="14"/></block></while>
        }<pos:position pos:line="94" pos:column="10"/></block></else></if>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>
    
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">!<pos:position pos:line="97" pos:column="10"/></operator><operator pos:line="97" pos:column="10">*<pos:position pos:line="97" pos:column="11"/></operator><name pos:line="97" pos:column="11">peos<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">&amp;&amp;<pos:position pos:line="97" pos:column="26"/></operator> <operator pos:line="97" pos:column="19">!<pos:position pos:line="97" pos:column="20"/></operator><operator pos:line="97" pos:column="20">*<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="21">plen<pos:position pos:line="97" pos:column="25"/></name> <operator pos:line="97" pos:column="26">&amp;&amp;<pos:position pos:line="97" pos:column="36"/></operator> <name pos:line="97" pos:column="29">status<pos:position pos:line="97" pos:column="35"/></name> <operator pos:line="97" pos:column="36">==<pos:position pos:line="97" pos:column="38"/></operator> <name pos:line="97" pos:column="39">APR_SUCCESS<pos:position pos:line="97" pos:column="50"/></name> 
        <operator pos:line="98" pos:column="9">&amp;&amp;<pos:position pos:line="98" pos:column="19"/></operator> <operator pos:line="98" pos:column="12">(<pos:position pos:line="98" pos:column="13"/></operator><operator pos:line="98" pos:column="13">!<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="14">presponse<pos:position pos:line="98" pos:column="23"/></name> <operator pos:line="98" pos:column="24">||<pos:position pos:line="98" pos:column="26"/></operator> <operator pos:line="98" pos:column="27">!<pos:position pos:line="98" pos:column="28"/></operator><operator pos:line="98" pos:column="28">*<pos:position pos:line="98" pos:column="29"/></operator><name pos:line="98" pos:column="29">presponse<pos:position pos:line="98" pos:column="38"/></name><operator pos:line="98" pos:column="38">)<pos:position pos:line="98" pos:column="39"/></operator></expr>)<pos:position pos:line="98" pos:column="40"/></condition><then pos:line="98" pos:column="40"> <block pos:line="98" pos:column="41">{
        <expr_stmt><expr><name pos:line="99" pos:column="9">status<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator> <name pos:line="99" pos:column="18">APR_EAGAIN<pos:position pos:line="99" pos:column="28"/></name></expr>;<pos:position pos:line="99" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="101" pos:column="5">ap_log_cerror<pos:position pos:line="101" pos:column="18"/></name><argument_list pos:line="101" pos:column="18">(<argument><expr><name pos:line="101" pos:column="19">APLOG_MARK<pos:position pos:line="101" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="31">APLOG_TRACE1<pos:position pos:line="101" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="45">status<pos:position pos:line="101" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="53">c<pos:position pos:line="101" pos:column="54"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="102" pos:column="19">"h2_stream(%ld-%d): prepare, len=%ld eos=%d"<pos:position pos:line="102" pos:column="63"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="103" pos:column="19">c<pos:position pos:line="103" pos:column="20"/></name><operator pos:line="103" pos:column="20">-&gt;<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="22">id<pos:position pos:line="103" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="26">stream<pos:position pos:line="103" pos:column="32"/></name><operator pos:line="103" pos:column="32">-&gt;<pos:position pos:line="103" pos:column="37"/></operator><name pos:line="103" pos:column="34">id<pos:position pos:line="103" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="38">(<pos:position pos:line="103" pos:column="39"/></operator><name pos:line="103" pos:column="39">long<pos:position pos:line="103" pos:column="43"/></name><operator pos:line="103" pos:column="43">)<pos:position pos:line="103" pos:column="44"/></operator><operator pos:line="103" pos:column="44">*<pos:position pos:line="103" pos:column="45"/></operator><name pos:line="103" pos:column="45">plen<pos:position pos:line="103" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="51">*<pos:position pos:line="103" pos:column="52"/></operator><name pos:line="103" pos:column="52">peos<pos:position pos:line="103" pos:column="56"/></name></expr></argument>)<pos:position pos:line="103" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="58"/></expr_stmt>
    <return pos:line="104" pos:column="5">return <expr><name pos:line="104" pos:column="12">status<pos:position pos:line="104" pos:column="18"/></name></expr>;<pos:position pos:line="104" pos:column="19"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2977.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">simple_io_accept<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">simple_core_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type> <name pos:line="1" pos:column="47">sc<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">simple_sb_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type> <name pos:line="1" pos:column="65">sb<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ptrans<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_socket_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">socket<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ap_listen_rec<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">lr<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">ap_listen_rec<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></operator><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator> <name><name pos:line="6" pos:column="43">sb<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">baton<pos:position pos:line="6" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* pqXXXXXX: Consider doing pool recycling like the event/worker MPMs do. */</comment>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">apr_pool_create<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="22">ptrans<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="30">NULL<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_pool_tag<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">ptrans<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="26">"transaction"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">rv<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">apr_socket_accept<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="29">socket<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="37">lr<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">sd<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">ptrans<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name></expr>)<pos:position pos:line="14" pos:column="12"/></condition><then pos:line="14" pos:column="12"> <block pos:line="14" pos:column="13">{
        <comment type="block" pos:line="15" pos:column="9">/* pqXXXXXX: unixd.c has _tons_ of custom handling on return values
         * from accept, but it seems really crazy, it either worked, or didn't, 
         * but taking this approach of swallowing the error it is possible we have a 
         * fatal error on our listening socket, but we don't notice.  
         * 
         * Need to discuss this on dev@
         */</comment>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ap_log_error<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">APLOG_MARK<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">APLOG_CRIT<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="46">rv<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="50">NULL<pos:position pos:line="22" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="23" pos:column="22">"simple_io_accept: apr_socket_accept failed"<pos:position pos:line="23" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">APR_SUCCESS<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">simple_conn_t<pos:position pos:line="27" pos:column="22"/></name> <modifier pos:line="27" pos:column="23">*<pos:position pos:line="27" pos:column="24"/></modifier></type><name pos:line="27" pos:column="24">scon<pos:position pos:line="27" pos:column="28"/></name> <init pos:line="27" pos:column="29">= <expr><call><name pos:line="27" pos:column="31">apr_pcalloc<pos:position pos:line="27" pos:column="42"/></name><argument_list pos:line="27" pos:column="42">(<argument><expr><name pos:line="27" pos:column="43">ptrans<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="51">sizeof<argument_list pos:line="27" pos:column="57">(<argument><expr><name pos:line="27" pos:column="58">simple_conn_t<pos:position pos:line="27" pos:column="71"/></name></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="74"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">scon<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">pool<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">ptrans<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">scon<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">sock<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">socket<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">scon<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">sc<pos:position pos:line="30" pos:column="17"/></name></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">sc<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>

        <return pos:line="32" pos:column="9">return <expr><call><name pos:line="32" pos:column="16">apr_thread_pool_push<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name><name pos:line="32" pos:column="37">sc<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">workers<pos:position pos:line="32" pos:column="48"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="33" pos:column="37">simple_io_setup_conn<pos:position pos:line="33" pos:column="57"/></name></expr></argument>,
                                    <argument><expr><name pos:line="34" pos:column="37">scon<pos:position pos:line="34" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><name pos:line="35" pos:column="37">APR_THREAD_TASK_PRIORITY_NORMAL<pos:position pos:line="35" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="70">NULL<pos:position pos:line="35" pos:column="74"/></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">APR_SUCCESS<pos:position pos:line="38" pos:column="23"/></name></expr>;<pos:position pos:line="38" pos:column="24"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

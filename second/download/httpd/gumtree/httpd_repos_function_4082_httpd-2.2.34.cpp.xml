<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4082_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">shm_attach_internal<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">apr_shm_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">m<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">file<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">apr_pool_t<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">pool<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="4" pos:column="41">int<pos:position pos:line="4" pos:column="44"/></name></type> <name pos:line="4" pos:column="45">global<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="52"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HANDLE<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">hMap<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">void<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">mapkey<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">void<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">base<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* res_name_from_filename turns file into a pseudo-name
     * without slashes or backslashes, and prepends the \global
     * or local prefix on Win2K and later
     */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">mapkey<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">res_name_from_filename<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">file<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">global<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">pool<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>

<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="16" pos:column="23"/></name></expr></cpp:if>
    <macro><name pos:line="17" pos:column="5">IF_WIN_OS_IS_UNICODE<pos:position pos:line="17" pos:column="25"/></name></macro>
    <block pos:line="18" pos:column="5">{
<cpp:ifndef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifndef<pos:position pos:line="19" pos:column="8"/></cpp:directive> <name pos:line="19" pos:column="9">_WIN32_WCE<pos:position pos:line="19" pos:column="19"/></name></cpp:ifndef>
        <expr_stmt><expr><name pos:line="20" pos:column="9">hMap<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">OpenFileMappingW<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">FILE_MAP_READ<pos:position pos:line="20" pos:column="46"/></name> <operator pos:line="20" pos:column="47">|<pos:position pos:line="20" pos:column="48"/></operator> <name pos:line="20" pos:column="49">FILE_MAP_WRITE<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="65">FALSE<pos:position pos:line="20" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="72">mapkey<pos:position pos:line="20" pos:column="78"/></name></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>
<cpp:else pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">else<pos:position pos:line="21" pos:column="6"/></cpp:directive></cpp:else>
        <comment type="block" pos:line="22" pos:column="9">/* The WCE 3.0 lacks OpenFileMapping. So we emulate one with
         * opening the existing shmem and reading its size from the header 
         */</comment>
        <expr_stmt><expr><name pos:line="25" pos:column="9">hMap<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">CreateFileMappingW<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">INVALID_HANDLE_VALUE<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">NULL<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, 
                                  <argument><expr><name pos:line="26" pos:column="35">PAGE_READWRITE<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="51">0<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="54">sizeof<argument_list pos:line="26" pos:column="60">(<argument><expr><name pos:line="26" pos:column="61">apr_shm_t<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="26" pos:column="73">mapkey<pos:position pos:line="26" pos:column="79"/></name></expr></argument>)<pos:position pos:line="26" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="81"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="28" pos:column="6"/></block>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><name pos:line="30" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="30" pos:column="20"/></name></expr></cpp:if>
    <macro><name pos:line="31" pos:column="5">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="31" pos:column="24"/></name></macro>
    <block pos:line="32" pos:column="5">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">hMap<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">OpenFileMappingA<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">FILE_MAP_READ<pos:position pos:line="33" pos:column="46"/></name> <operator pos:line="33" pos:column="47">|<pos:position pos:line="33" pos:column="48"/></operator> <name pos:line="33" pos:column="49">FILE_MAP_WRITE<pos:position pos:line="33" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="65">FALSE<pos:position pos:line="33" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="72">mapkey<pos:position pos:line="33" pos:column="78"/></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">hMap<pos:position pos:line="37" pos:column="14"/></name></expr>)<pos:position pos:line="37" pos:column="15"/></condition><then pos:line="37" pos:column="15"> <block pos:line="37" pos:column="16">{
        <return pos:line="38" pos:column="9">return <expr><call><name pos:line="38" pos:column="16">apr_get_os_error<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">()<pos:position pos:line="38" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="35"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="41" pos:column="5">base<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <call><name pos:line="41" pos:column="12">MapViewOfFile<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">hMap<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">FILE_MAP_READ<pos:position pos:line="41" pos:column="45"/></name> <operator pos:line="41" pos:column="46">|<pos:position pos:line="41" pos:column="47"/></operator> <name pos:line="41" pos:column="48">FILE_MAP_WRITE<pos:position pos:line="41" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="64">0<pos:position pos:line="41" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="67">0<pos:position pos:line="41" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="70">0<pos:position pos:line="41" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="73"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">!<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">base<pos:position pos:line="42" pos:column="14"/></name></expr>)<pos:position pos:line="42" pos:column="15"/></condition><then pos:line="42" pos:column="15"> <block pos:line="42" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">CloseHandle<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">hMap<pos:position pos:line="43" pos:column="25"/></name></expr></argument>)<pos:position pos:line="43" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><call><name pos:line="44" pos:column="16">apr_get_os_error<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">()<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><operator pos:line="47" pos:column="5">*<pos:position pos:line="47" pos:column="6"/></operator><name pos:line="47" pos:column="6">m<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <operator pos:line="47" pos:column="10">(<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">apr_shm_t<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">*<pos:position pos:line="47" pos:column="22"/></operator><operator pos:line="47" pos:column="22">)<pos:position pos:line="47" pos:column="23"/></operator> <call><name pos:line="47" pos:column="24">apr_palloc<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">pool<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="41">sizeof<argument_list pos:line="47" pos:column="47">(<argument><expr><name pos:line="47" pos:column="48">apr_shm_t<pos:position pos:line="47" pos:column="57"/></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="48" pos:column="5">(<pos:position pos:line="48" pos:column="6"/></operator><operator pos:line="48" pos:column="6">*<pos:position pos:line="48" pos:column="7"/></operator><name pos:line="48" pos:column="7">m<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">)<pos:position pos:line="48" pos:column="9"/></operator><operator pos:line="48" pos:column="9">-&gt;<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="11">pool<pos:position pos:line="48" pos:column="15"/></name></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">pool<pos:position pos:line="48" pos:column="22"/></name></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="49" pos:column="5">(<pos:position pos:line="49" pos:column="6"/></operator><operator pos:line="49" pos:column="6">*<pos:position pos:line="49" pos:column="7"/></operator><name pos:line="49" pos:column="7">m<pos:position pos:line="49" pos:column="8"/></name><operator pos:line="49" pos:column="8">)<pos:position pos:line="49" pos:column="9"/></operator><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">memblk<pos:position pos:line="49" pos:column="17"/></name></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="20">base<pos:position pos:line="49" pos:column="24"/></name></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
    <comment type="block" pos:line="50" pos:column="5">/* Real (*m)-&gt;mem-&gt;size could be recovered with VirtualQuery */</comment>
    <expr_stmt><expr><name><operator pos:line="51" pos:column="5">(<pos:position pos:line="51" pos:column="6"/></operator><operator pos:line="51" pos:column="6">*<pos:position pos:line="51" pos:column="7"/></operator><name pos:line="51" pos:column="7">m<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">)<pos:position pos:line="51" pos:column="9"/></operator><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">size<pos:position pos:line="51" pos:column="15"/></name></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <name><operator pos:line="51" pos:column="18">(<pos:position pos:line="51" pos:column="19"/></operator><operator pos:line="51" pos:column="19">*<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="20">m<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">)<pos:position pos:line="51" pos:column="22"/></operator><operator pos:line="51" pos:column="22">-&gt;<pos:position pos:line="51" pos:column="27"/></operator><name><name pos:line="51" pos:column="24">memblk<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">-&gt;<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="32">size<pos:position pos:line="51" pos:column="36"/></name></name></name></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">_WIN32_WCE<pos:position pos:line="52" pos:column="15"/></name></expr></cpp:if>
    <comment type="block" pos:line="53" pos:column="5">/* Reopen with real size  */</comment>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">UnmapViewOfFile<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">base<pos:position pos:line="54" pos:column="25"/></name></expr></argument>)<pos:position pos:line="54" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">CloseHandle<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">hMap<pos:position pos:line="55" pos:column="21"/></name></expr></argument>)<pos:position pos:line="55" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="57" pos:column="5">hMap<pos:position pos:line="57" pos:column="9"/></name> <operator pos:line="57" pos:column="10">=<pos:position pos:line="57" pos:column="11"/></operator> <call><name pos:line="57" pos:column="12">CreateFileMappingW<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">INVALID_HANDLE_VALUE<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="53">NULL<pos:position pos:line="57" pos:column="57"/></name></expr></argument>, 
                              <argument><expr><name pos:line="58" pos:column="31">PAGE_READWRITE<pos:position pos:line="58" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="47">0<pos:position pos:line="58" pos:column="48"/></literal></expr></argument>, <argument><expr><name><operator pos:line="58" pos:column="50">(<pos:position pos:line="58" pos:column="51"/></operator><operator pos:line="58" pos:column="51">*<pos:position pos:line="58" pos:column="52"/></operator><name pos:line="58" pos:column="52">m<pos:position pos:line="58" pos:column="53"/></name><operator pos:line="58" pos:column="53">)<pos:position pos:line="58" pos:column="54"/></operator><operator pos:line="58" pos:column="54">-&gt;<pos:position pos:line="58" pos:column="59"/></operator><name pos:line="58" pos:column="56">size<pos:position pos:line="58" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="62">mapkey<pos:position pos:line="58" pos:column="68"/></name></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="70"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">!<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">hMap<pos:position pos:line="59" pos:column="14"/></name></expr>)<pos:position pos:line="59" pos:column="15"/></condition><then pos:line="59" pos:column="15"> <block pos:line="59" pos:column="16">{
        <return pos:line="60" pos:column="9">return <expr><call><name pos:line="60" pos:column="16">apr_get_os_error<pos:position pos:line="60" pos:column="32"/></name><argument_list pos:line="60" pos:column="32">()<pos:position pos:line="60" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="35"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="62" pos:column="5">base<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <call><name pos:line="62" pos:column="12">MapViewOfFile<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">hMap<pos:position pos:line="62" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="32">FILE_MAP_READ<pos:position pos:line="62" pos:column="45"/></name> <operator pos:line="62" pos:column="46">|<pos:position pos:line="62" pos:column="47"/></operator> <name pos:line="62" pos:column="48">FILE_MAP_WRITE<pos:position pos:line="62" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="64">0<pos:position pos:line="62" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="67">0<pos:position pos:line="62" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="70">0<pos:position pos:line="62" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="73"/></expr_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">!<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">base<pos:position pos:line="63" pos:column="14"/></name></expr>)<pos:position pos:line="63" pos:column="15"/></condition><then pos:line="63" pos:column="15"> <block pos:line="63" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">CloseHandle<pos:position pos:line="64" pos:column="20"/></name><argument_list pos:line="64" pos:column="20">(<argument><expr><name pos:line="64" pos:column="21">hMap<pos:position pos:line="64" pos:column="25"/></name></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>
        <return pos:line="65" pos:column="9">return <expr><call><name pos:line="65" pos:column="16">apr_get_os_error<pos:position pos:line="65" pos:column="32"/></name><argument_list pos:line="65" pos:column="32">()<pos:position pos:line="65" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="35"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>    
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name><operator pos:line="68" pos:column="5">(<pos:position pos:line="68" pos:column="6"/></operator><operator pos:line="68" pos:column="6">*<pos:position pos:line="68" pos:column="7"/></operator><name pos:line="68" pos:column="7">m<pos:position pos:line="68" pos:column="8"/></name><operator pos:line="68" pos:column="8">)<pos:position pos:line="68" pos:column="9"/></operator><operator pos:line="68" pos:column="9">-&gt;<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="11">hMap<pos:position pos:line="68" pos:column="15"/></name></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <name pos:line="68" pos:column="18">hMap<pos:position pos:line="68" pos:column="22"/></name></expr>;<pos:position pos:line="68" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="69" pos:column="5">(<pos:position pos:line="69" pos:column="6"/></operator><operator pos:line="69" pos:column="6">*<pos:position pos:line="69" pos:column="7"/></operator><name pos:line="69" pos:column="7">m<pos:position pos:line="69" pos:column="8"/></name><operator pos:line="69" pos:column="8">)<pos:position pos:line="69" pos:column="9"/></operator><operator pos:line="69" pos:column="9">-&gt;<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="11">length<pos:position pos:line="69" pos:column="17"/></name></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <name><operator pos:line="69" pos:column="20">(<pos:position pos:line="69" pos:column="21"/></operator><operator pos:line="69" pos:column="21">*<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="22">m<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">)<pos:position pos:line="69" pos:column="24"/></operator><operator pos:line="69" pos:column="24">-&gt;<pos:position pos:line="69" pos:column="29"/></operator><name><name pos:line="69" pos:column="26">memblk<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">-&gt;<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="34">length<pos:position pos:line="69" pos:column="40"/></name></name></name></expr>;<pos:position pos:line="69" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="70" pos:column="5">(<pos:position pos:line="70" pos:column="6"/></operator><operator pos:line="70" pos:column="6">*<pos:position pos:line="70" pos:column="7"/></operator><name pos:line="70" pos:column="7">m<pos:position pos:line="70" pos:column="8"/></name><operator pos:line="70" pos:column="8">)<pos:position pos:line="70" pos:column="9"/></operator><operator pos:line="70" pos:column="9">-&gt;<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="11">usrmem<pos:position pos:line="70" pos:column="17"/></name></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <operator pos:line="70" pos:column="20">(<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="21">char<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">*<pos:position pos:line="70" pos:column="26"/></operator><operator pos:line="70" pos:column="26">)<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="27">base<pos:position pos:line="70" pos:column="31"/></name> <operator pos:line="70" pos:column="32">+<pos:position pos:line="70" pos:column="33"/></operator> <sizeof pos:line="70" pos:column="34">sizeof<argument_list pos:line="70" pos:column="40">(<argument><expr><name pos:line="70" pos:column="41">memblock_t<pos:position pos:line="70" pos:column="51"/></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></sizeof></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="71" pos:column="5">(<pos:position pos:line="71" pos:column="6"/></operator><operator pos:line="71" pos:column="6">*<pos:position pos:line="71" pos:column="7"/></operator><name pos:line="71" pos:column="7">m<pos:position pos:line="71" pos:column="8"/></name><operator pos:line="71" pos:column="8">)<pos:position pos:line="71" pos:column="9"/></operator><operator pos:line="71" pos:column="9">-&gt;<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="11">filename<pos:position pos:line="71" pos:column="19"/></name></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <name pos:line="71" pos:column="22">NULL<pos:position pos:line="71" pos:column="26"/></name></expr>;<pos:position pos:line="71" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name><operator pos:line="73" pos:column="31">(<pos:position pos:line="73" pos:column="32"/></operator><operator pos:line="73" pos:column="32">*<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="33">m<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">)<pos:position pos:line="73" pos:column="35"/></operator><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">pool<pos:position pos:line="73" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="43">*<pos:position pos:line="73" pos:column="44"/></operator><name pos:line="73" pos:column="44">m<pos:position pos:line="73" pos:column="45"/></name></expr></argument>, 
                              <argument><expr><name pos:line="74" pos:column="31">shm_cleanup<pos:position pos:line="74" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="44">apr_pool_cleanup_null<pos:position pos:line="74" pos:column="65"/></name></expr></argument>)<pos:position pos:line="74" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="67"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><name pos:line="75" pos:column="12">APR_SUCCESS<pos:position pos:line="75" pos:column="23"/></name></expr>;<pos:position pos:line="75" pos:column="24"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

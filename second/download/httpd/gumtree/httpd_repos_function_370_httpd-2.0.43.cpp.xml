<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_370_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">dav_prop_rollback<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">dav_prop_ctx<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ctx<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_error<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">err<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">NULL<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_elem_private<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">priv<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name><name pos:line="4" pos:column="30">ctx<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">prop<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">priv<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* do nothing if there is no rollback information. */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">ctx<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">rollback<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">==<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
	<block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/*
    ** ### if we have an error, and a rollback occurs, then the namespace
    ** ### mods should not happen at all. Basically, the namespace management
    ** ### is simply a bitch.
    */</comment>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">ctx<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">is_liveprop<pos:position pos:line="16" pos:column="25"/></name></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <block pos:line="16" pos:column="27">{
	<expr_stmt><expr><name pos:line="17" pos:column="9">err<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call pos:line="17" pos:column="15">(<modifier pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></modifier><name><name pos:line="17" pos:column="17">priv<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">provider<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">patch_rollback<pos:position pos:line="17" pos:column="47"/></name></name>)<argument_list pos:line="17" pos:column="48">(<argument><expr><name><name pos:line="17" pos:column="49">ctx<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">propdb<pos:position pos:line="17" pos:column="60"/></name><operator pos:line="17" pos:column="60">-&gt;<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="62">resource<pos:position pos:line="17" pos:column="70"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="18" pos:column="49">ctx<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">operation<pos:position pos:line="18" pos:column="63"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="19" pos:column="49">ctx<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">liveprop_ctx<pos:position pos:line="19" pos:column="66"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="20" pos:column="49">ctx<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">-&gt;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="54">rollback<pos:position pos:line="20" pos:column="62"/></name><operator pos:line="20" pos:column="62">-&gt;<pos:position pos:line="20" pos:column="67"/></operator><name pos:line="20" pos:column="64">liveprop<pos:position pos:line="20" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then>
    <else pos:line="22" pos:column="5">else <block pos:line="22" pos:column="10">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">err<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call pos:line="23" pos:column="15">(<modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier><name><name pos:line="23" pos:column="17">ctx<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">propdb<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">db_hooks<pos:position pos:line="23" pos:column="38"/></name>
               <operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">apply_rollback<pos:position pos:line="24" pos:column="32"/></name></name>)<argument_list pos:line="24" pos:column="33">(<argument><expr><name><name pos:line="24" pos:column="34">ctx<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">propdb<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">db<pos:position pos:line="24" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="51">ctx<pos:position pos:line="24" pos:column="54"/></name><operator pos:line="24" pos:column="54">-&gt;<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="56">rollback<pos:position pos:line="24" pos:column="64"/></name><operator pos:line="24" pos:column="64">-&gt;<pos:position pos:line="24" pos:column="69"/></operator><name pos:line="24" pos:column="66">deadprop<pos:position pos:line="24" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">err<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">!=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>)<pos:position pos:line="27" pos:column="21"/></condition><then pos:line="27" pos:column="21"> <block pos:line="27" pos:column="22">{
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">ctx<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">err<pos:position pos:line="28" pos:column="21"/></name></name> <operator pos:line="28" pos:column="22">==<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">NULL<pos:position pos:line="28" pos:column="29"/></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="13">ctx<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">err<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">err<pos:position pos:line="29" pos:column="27"/></name></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt></block></then>
	<else pos:line="30" pos:column="9">else <block pos:line="30" pos:column="14">{
	    <decl_stmt><decl><type><name pos:line="31" pos:column="13">dav_error<pos:position pos:line="31" pos:column="22"/></name> <modifier pos:line="31" pos:column="23">*<pos:position pos:line="31" pos:column="24"/></modifier></type><name pos:line="31" pos:column="24">scan<pos:position pos:line="31" pos:column="28"/></name> <init pos:line="31" pos:column="29">= <expr><name pos:line="31" pos:column="31">err<pos:position pos:line="31" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="35"/></decl_stmt>

	    <comment type="block" pos:line="33" pos:column="13">/* hook previous errors at the end of the rollback error */</comment>
	    <while pos:line="34" pos:column="13">while <condition pos:line="34" pos:column="19">(<expr><name><name pos:line="34" pos:column="20">scan<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">prev<pos:position pos:line="34" pos:column="30"/></name></name> <operator pos:line="34" pos:column="31">!=<pos:position pos:line="34" pos:column="33"/></operator> <name pos:line="34" pos:column="34">NULL<pos:position pos:line="34" pos:column="38"/></name></expr>)<pos:position pos:line="34" pos:column="39"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">scan<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name><name pos:line="35" pos:column="24">scan<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">prev<pos:position pos:line="35" pos:column="34"/></name></name></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt></block></while>
	    <expr_stmt><expr><name><name pos:line="36" pos:column="13">scan<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">prev<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name><name pos:line="36" pos:column="26">ctx<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">err<pos:position pos:line="36" pos:column="34"/></name></name></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="37" pos:column="13">ctx<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">err<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">err<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></else></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

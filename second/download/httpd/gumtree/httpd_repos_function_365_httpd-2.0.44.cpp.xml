<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_365_httpd-2.0.44.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">dav_get_props_result<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">dav_get_props<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">dav_propdb<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">propdb<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">apr_xml_doc<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">doc<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">dav_hooks_db<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">db_hooks<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name><name pos:line="3" pos:column="36">propdb<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">-&gt;<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="44">db_hooks<pos:position pos:line="3" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_xml_elem<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">elem<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><call><name pos:line="4" pos:column="26">dav_find_child<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name><name pos:line="4" pos:column="41">doc<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">-&gt;<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="46">root<pos:position pos:line="4" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="52">"prop"<pos:position pos:line="4" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_text_header<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">hdr_good<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><block pos:line="5" pos:column="32">{ <expr><literal type="number" pos:line="5" pos:column="34">0<pos:position pos:line="5" pos:column="35"/></literal></expr> }<pos:position pos:line="5" pos:column="37"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_text_header<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">hdr_bad<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><block pos:line="6" pos:column="31">{ <expr><literal type="number" pos:line="6" pos:column="33">0<pos:position pos:line="6" pos:column="34"/></literal></expr> }<pos:position pos:line="6" pos:column="36"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_text_header<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">hdr_ns<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><block pos:line="7" pos:column="30">{ <expr><literal type="number" pos:line="7" pos:column="32">0<pos:position pos:line="7" pos:column="33"/></literal></expr> }<pos:position pos:line="7" pos:column="35"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">have_good<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">dav_get_props_result<pos:position pos:line="9" pos:column="25"/></name></type> <name pos:line="9" pos:column="26">result<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><block pos:line="9" pos:column="35">{ <expr><literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal></expr> }<pos:position pos:line="9" pos:column="40"/></block></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">marks_liveprop<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">dav_xmlns_info<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">xi<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">xi_filled<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* ### NOTE: we should pass in TWO buffers -- one for keys, one for
       the marks */</comment>

    <comment type="block" pos:line="17" pos:column="5">/* we will ALWAYS provide a "good" result, even if it is EMPTY */</comment>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">apr_text_append<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name><name pos:line="18" pos:column="21">propdb<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">p<pos:position pos:line="18" pos:column="30"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="32">&amp;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="33">hdr_good<pos:position pos:line="18" pos:column="41"/></name></expr></argument>,
                   <argument><expr><literal type="string" pos:line="19" pos:column="20">"&lt;D:propstat&gt;"<pos:position pos:line="19" pos:column="40"/></literal> <name pos:line="19" pos:column="35">DEBUG_CR<pos:position pos:line="19" pos:column="43"/></name>
                   <literal type="string" pos:line="20" pos:column="20">"&lt;D:prop&gt;"<pos:position pos:line="20" pos:column="36"/></literal> <name pos:line="20" pos:column="31">DEBUG_CR<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* ### the marks should be in a buffer! */</comment>
    <comment type="block" pos:line="23" pos:column="5">/* allocate zeroed-memory for the marks. These marks indicate which
       liveprop namespaces we've generated into the output xmlns buffer */</comment>

    <comment type="block" pos:line="26" pos:column="5">/* same for the liveprops */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">marks_liveprop<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">apr_pcalloc<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name><name pos:line="27" pos:column="34">propdb<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">p<pos:position pos:line="27" pos:column="43"/></name></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="45">dav_get_liveprop_ns_count<pos:position pos:line="27" pos:column="70"/></name><argument_list pos:line="27" pos:column="70">()<pos:position pos:line="27" pos:column="72"/></argument_list></call> <operator pos:line="27" pos:column="73">+<pos:position pos:line="27" pos:column="74"/></operator> <literal type="number" pos:line="27" pos:column="75">1<pos:position pos:line="27" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="78"/></expr_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">xi<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">dav_xmlns_create<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name><name pos:line="29" pos:column="27">propdb<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">p<pos:position pos:line="29" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>

    <for pos:line="31" pos:column="5">for <control pos:line="31" pos:column="9">(<init><expr><name pos:line="31" pos:column="10">elem<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name><name pos:line="31" pos:column="17">elem<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">first_child<pos:position pos:line="31" pos:column="34"/></name></name></expr>;<pos:position pos:line="31" pos:column="35"/></init> <condition><expr><name pos:line="31" pos:column="36">elem<pos:position pos:line="31" pos:column="40"/></name></expr>;<pos:position pos:line="31" pos:column="41"/></condition> <incr><expr><name pos:line="31" pos:column="42">elem<pos:position pos:line="31" pos:column="46"/></name> <operator pos:line="31" pos:column="47">=<pos:position pos:line="31" pos:column="48"/></operator> <name><name pos:line="31" pos:column="49">elem<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">-&gt;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="55">next<pos:position pos:line="31" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="31" pos:column="60"/></control> <block pos:line="31" pos:column="61">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">dav_elem_private<pos:position pos:line="32" pos:column="25"/></name> <modifier pos:line="32" pos:column="26">*<pos:position pos:line="32" pos:column="27"/></modifier></type><name pos:line="32" pos:column="27">priv<pos:position pos:line="32" pos:column="31"/></name></decl>;<pos:position pos:line="32" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">dav_error<pos:position pos:line="33" pos:column="18"/></name> <modifier pos:line="33" pos:column="19">*<pos:position pos:line="33" pos:column="20"/></modifier></type><name pos:line="33" pos:column="20">err<pos:position pos:line="33" pos:column="23"/></name></decl>;<pos:position pos:line="33" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">dav_prop_insert<pos:position pos:line="34" pos:column="24"/></name></type> <name pos:line="34" pos:column="25">inserted<pos:position pos:line="34" pos:column="33"/></name></decl>;<pos:position pos:line="34" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">dav_prop_name<pos:position pos:line="35" pos:column="22"/></name></type> <name pos:line="35" pos:column="23">name<pos:position pos:line="35" pos:column="27"/></name></decl>;<pos:position pos:line="35" pos:column="28"/></decl_stmt>

        <comment type="block" pos:line="37" pos:column="9">/*
        ** First try live property providers; if they don't handle
        ** the property, then try looking it up in the propdb.
        */</comment>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">elem<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">priv<pos:position pos:line="42" pos:column="23"/></name></name> <operator pos:line="42" pos:column="24">==<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">NULL<pos:position pos:line="42" pos:column="31"/></name></expr>)<pos:position pos:line="42" pos:column="32"/></condition><then pos:line="42" pos:column="32"> <block pos:line="42" pos:column="33">{
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">elem<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">priv<pos:position pos:line="43" pos:column="23"/></name></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <call><name pos:line="43" pos:column="26">apr_pcalloc<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name><name pos:line="43" pos:column="38">propdb<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">-&gt;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="46">p<pos:position pos:line="43" pos:column="47"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="49">sizeof<argument_list pos:line="43" pos:column="55">(<argument><expr><operator pos:line="43" pos:column="56">*<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="57">priv<pos:position pos:line="43" pos:column="61"/></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="45" pos:column="9">priv<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <name><name pos:line="45" pos:column="16">elem<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">priv<pos:position pos:line="45" pos:column="26"/></name></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>

        <comment type="block" pos:line="47" pos:column="9">/* cache the propid; dav_get_props() could be called many times */</comment>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">priv<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">propid<pos:position pos:line="48" pos:column="25"/></name></name> <operator pos:line="48" pos:column="26">==<pos:position pos:line="48" pos:column="28"/></operator> <literal type="number" pos:line="48" pos:column="29">0<pos:position pos:line="48" pos:column="30"/></literal></expr>)<pos:position pos:line="48" pos:column="31"/></condition><then pos:line="48" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="13">dav_find_liveprop<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">propdb<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">elem<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt></block></then></if>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">priv<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">propid<pos:position pos:line="51" pos:column="25"/></name></name> <operator pos:line="51" pos:column="26">!=<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="29">DAV_PROPID_CORE_UNKNOWN<pos:position pos:line="51" pos:column="52"/></name></expr>)<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53"> <block pos:line="51" pos:column="54">{

            <comment type="block" pos:line="53" pos:column="13">/* insert the property. returns 1 if an insertion was done. */</comment>
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><operator pos:line="54" pos:column="17">(<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="18">err<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <call><name pos:line="54" pos:column="24">dav_insert_liveprop<pos:position pos:line="54" pos:column="43"/></name><argument_list pos:line="54" pos:column="43">(<argument><expr><name pos:line="54" pos:column="44">propdb<pos:position pos:line="54" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="52">elem<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">DAV_PROP_INSERT_VALUE<pos:position pos:line="54" pos:column="79"/></name></expr></argument>,
                                           <argument><expr><operator pos:line="55" pos:column="44">&amp;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="45">hdr_good<pos:position pos:line="55" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="55">&amp;<pos:position pos:line="55" pos:column="60"/></operator><name pos:line="55" pos:column="56">inserted<pos:position pos:line="55" pos:column="64"/></name></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call><operator pos:line="55" pos:column="65">)<pos:position pos:line="55" pos:column="66"/></operator> <operator pos:line="55" pos:column="67">!=<pos:position pos:line="55" pos:column="69"/></operator> <name pos:line="55" pos:column="70">NULL<pos:position pos:line="55" pos:column="74"/></name></expr>)<pos:position pos:line="55" pos:column="75"/></condition><then pos:line="55" pos:column="75"> <block pos:line="55" pos:column="76">{
                <comment type="block" pos:line="56" pos:column="17">/* ### need to propagate the error to the caller... */</comment>
                <comment type="block" pos:line="57" pos:column="17">/* ### skip it for now, as if nothing was inserted */</comment>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if>
            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><name pos:line="59" pos:column="17">inserted<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">==<pos:position pos:line="59" pos:column="28"/></operator> <name pos:line="59" pos:column="29">DAV_PROP_INSERT_VALUE<pos:position pos:line="59" pos:column="50"/></name></expr>)<pos:position pos:line="59" pos:column="51"/></condition><then pos:line="59" pos:column="51"> <block pos:line="59" pos:column="52">{
                <expr_stmt><expr><name pos:line="60" pos:column="17">have_good<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">=<pos:position pos:line="60" pos:column="28"/></operator> <literal type="number" pos:line="60" pos:column="29">1<pos:position pos:line="60" pos:column="30"/></literal></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>

                <comment type="block" pos:line="62" pos:column="17">/*
                ** Add the liveprop's namespace URIs. Note that provider==NULL
                ** for core properties.
                */</comment>
                <if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name><name pos:line="66" pos:column="21">priv<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">-&gt;<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="27">provider<pos:position pos:line="66" pos:column="35"/></name></name> <operator pos:line="66" pos:column="36">!=<pos:position pos:line="66" pos:column="38"/></operator> <name pos:line="66" pos:column="39">NULL<pos:position pos:line="66" pos:column="43"/></name></expr>)<pos:position pos:line="66" pos:column="44"/></condition><then pos:line="66" pos:column="44"> <block pos:line="66" pos:column="45">{
                    <decl_stmt><decl><type><specifier pos:line="67" pos:column="21">const<pos:position pos:line="67" pos:column="26"/></specifier> <name pos:line="67" pos:column="27">char<pos:position pos:line="67" pos:column="31"/></name> <modifier pos:line="67" pos:column="32">*<pos:position pos:line="67" pos:column="33"/></modifier> <specifier pos:line="67" pos:column="34">const<pos:position pos:line="67" pos:column="39"/></specifier> <modifier pos:line="67" pos:column="40">*<pos:position pos:line="67" pos:column="41"/></modifier></type> <name pos:line="67" pos:column="42">scan_ns_uri<pos:position pos:line="67" pos:column="53"/></name></decl>;<pos:position pos:line="67" pos:column="54"/></decl_stmt>

                    <for pos:line="69" pos:column="21">for <control pos:line="69" pos:column="25">(<init><expr><name pos:line="69" pos:column="26">scan_ns_uri<pos:position pos:line="69" pos:column="37"/></name> <operator pos:line="69" pos:column="38">=<pos:position pos:line="69" pos:column="39"/></operator> <name><name pos:line="69" pos:column="40">priv<pos:position pos:line="69" pos:column="44"/></name><operator pos:line="69" pos:column="44">-&gt;<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="46">provider<pos:position pos:line="69" pos:column="54"/></name><operator pos:line="69" pos:column="54">-&gt;<pos:position pos:line="69" pos:column="59"/></operator><name pos:line="69" pos:column="56">namespace_uris<pos:position pos:line="69" pos:column="70"/></name></name></expr>;<pos:position pos:line="69" pos:column="71"/></init>
                         <condition><expr><operator pos:line="70" pos:column="26">*<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="27">scan_ns_uri<pos:position pos:line="70" pos:column="38"/></name> <operator pos:line="70" pos:column="39">!=<pos:position pos:line="70" pos:column="41"/></operator> <name pos:line="70" pos:column="42">NULL<pos:position pos:line="70" pos:column="46"/></name></expr>;<pos:position pos:line="70" pos:column="47"/></condition>
                         <incr><expr><operator pos:line="71" pos:column="26">++<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="28">scan_ns_uri<pos:position pos:line="71" pos:column="39"/></name></expr></incr>)<pos:position pos:line="71" pos:column="40"/></control> <block pos:line="71" pos:column="41">{
                        <decl_stmt><decl><type><name pos:line="72" pos:column="25">int<pos:position pos:line="72" pos:column="28"/></name></type> <name pos:line="72" pos:column="29">ns<pos:position pos:line="72" pos:column="31"/></name></decl>;<pos:position pos:line="72" pos:column="32"/></decl_stmt>

                        <expr_stmt><expr><name pos:line="74" pos:column="25">ns<pos:position pos:line="74" pos:column="27"/></name> <operator pos:line="74" pos:column="28">=<pos:position pos:line="74" pos:column="29"/></operator> <call><name pos:line="74" pos:column="30">dav_get_liveprop_ns_index<pos:position pos:line="74" pos:column="55"/></name><argument_list pos:line="74" pos:column="55">(<argument><expr><operator pos:line="74" pos:column="56">*<pos:position pos:line="74" pos:column="57"/></operator><name pos:line="74" pos:column="57">scan_ns_uri<pos:position pos:line="74" pos:column="68"/></name></expr></argument>)<pos:position pos:line="74" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="70"/></expr_stmt>
                        <if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name><name pos:line="75" pos:column="29">marks_liveprop<pos:position pos:line="75" pos:column="43"/></name><index pos:line="75" pos:column="43">[<expr><name pos:line="75" pos:column="44">ns<pos:position pos:line="75" pos:column="46"/></name></expr>]<pos:position pos:line="75" pos:column="47"/></index></name></expr>)<pos:position pos:line="75" pos:column="48"/></condition><then pos:line="75" pos:column="48">
                            <block type="pseudo"><continue pos:line="76" pos:column="29">continue;<pos:position pos:line="76" pos:column="38"/></continue></block></then></if>
                        <expr_stmt><expr><name><name pos:line="77" pos:column="25">marks_liveprop<pos:position pos:line="77" pos:column="39"/></name><index pos:line="77" pos:column="39">[<expr><name pos:line="77" pos:column="40">ns<pos:position pos:line="77" pos:column="42"/></name></expr>]<pos:position pos:line="77" pos:column="43"/></index></name> <operator pos:line="77" pos:column="44">=<pos:position pos:line="77" pos:column="45"/></operator> <literal type="number" pos:line="77" pos:column="46">1<pos:position pos:line="77" pos:column="47"/></literal></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>

                        <expr_stmt><expr><call><name pos:line="79" pos:column="25">dav_insert_xmlns<pos:position pos:line="79" pos:column="41"/></name><argument_list pos:line="79" pos:column="41">(<argument><expr><name><name pos:line="79" pos:column="42">propdb<pos:position pos:line="79" pos:column="48"/></name><operator pos:line="79" pos:column="48">-&gt;<pos:position pos:line="79" pos:column="53"/></operator><name pos:line="79" pos:column="50">p<pos:position pos:line="79" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="53">"lp"<pos:position pos:line="79" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="59">ns<pos:position pos:line="79" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="63">*<pos:position pos:line="79" pos:column="64"/></operator><name pos:line="79" pos:column="64">scan_ns_uri<pos:position pos:line="79" pos:column="75"/></name></expr></argument>,
                                         <argument><expr><operator pos:line="80" pos:column="42">&amp;<pos:position pos:line="80" pos:column="47"/></operator><name pos:line="80" pos:column="43">hdr_ns<pos:position pos:line="80" pos:column="49"/></name></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="51"/></expr_stmt>
                    }<pos:position pos:line="81" pos:column="22"/></block></for>
                }<pos:position pos:line="82" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="84" pos:column="17">/* property added. move on to the next property. */</comment>
                <continue pos:line="85" pos:column="17">continue;<pos:position pos:line="85" pos:column="26"/></continue>
            }<pos:position pos:line="86" pos:column="14"/></block></then>
            <elseif pos:line="87" pos:column="13">else <if pos:line="87" pos:column="18">if <condition pos:line="87" pos:column="21">(<expr><name pos:line="87" pos:column="22">inserted<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">==<pos:position pos:line="87" pos:column="33"/></operator> <name pos:line="87" pos:column="34">DAV_PROP_INSERT_NOTDEF<pos:position pos:line="87" pos:column="56"/></name></expr>)<pos:position pos:line="87" pos:column="57"/></condition><then pos:line="87" pos:column="57"> <block pos:line="87" pos:column="58">{
                <comment type="block" pos:line="88" pos:column="17">/* nothing to do. fall thru to allow property to be handled
                   as a dead property */</comment>
            }<pos:position pos:line="90" pos:column="14"/></block></then></if></elseif>
<cpp:if pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">if<pos:position pos:line="91" pos:column="4"/></cpp:directive> <expr><name pos:line="91" pos:column="5">DAV_DEBUG<pos:position pos:line="91" pos:column="14"/></name></expr></cpp:if>
            <else pos:line="92" pos:column="13">else <block pos:line="92" pos:column="18">{
<cpp:if pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">if<pos:position pos:line="93" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="93" pos:column="5">0<pos:position pos:line="93" pos:column="6"/></literal></expr></cpp:if>
                <comment type="block" pos:line="94" pos:column="17">/* ### need to change signature to return an error */</comment>
                return dav_new_error(propdb-&gt;p, HTTP_INTERNAL_SERVER_ERROR, 0,
                                     "INTERNAL DESIGN ERROR: insert_liveprop "
                                     "did not insert what was asked for.");
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="99" pos:column="14"/></block></else></if>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="101" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="103" pos:column="9">/* The property wasn't a live property, so look in the dead property
           database. */</comment>

        <comment type="block" pos:line="106" pos:column="9">/* make sure propdb is really open */</comment>
        <if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name><name pos:line="107" pos:column="13">propdb<pos:position pos:line="107" pos:column="19"/></name><operator pos:line="107" pos:column="19">-&gt;<pos:position pos:line="107" pos:column="24"/></operator><name pos:line="107" pos:column="21">deferred<pos:position pos:line="107" pos:column="29"/></name></name></expr>)<pos:position pos:line="107" pos:column="30"/></condition><then pos:line="107" pos:column="30"> <block pos:line="107" pos:column="31">{
            <comment type="block" pos:line="108" pos:column="13">/* ### what to do with db open error? */</comment>
            <expr_stmt><expr><operator pos:line="109" pos:column="13">(<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">void<pos:position pos:line="109" pos:column="18"/></name><operator pos:line="109" pos:column="18">)<pos:position pos:line="109" pos:column="19"/></operator> <call><name pos:line="109" pos:column="20">dav_really_open_db<pos:position pos:line="109" pos:column="38"/></name><argument_list pos:line="109" pos:column="38">(<argument><expr><name pos:line="109" pos:column="39">propdb<pos:position pos:line="109" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="47">1<pos:position pos:line="109" pos:column="48"/></literal></expr></argument> <comment type="block" pos:line="109" pos:column="49">/*ro*/</comment>)<pos:position pos:line="109" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="110" pos:column="10"/></block></then></if>

        <if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><name><name pos:line="112" pos:column="13">elem<pos:position pos:line="112" pos:column="17"/></name><operator pos:line="112" pos:column="17">-&gt;<pos:position pos:line="112" pos:column="22"/></operator><name pos:line="112" pos:column="19">ns<pos:position pos:line="112" pos:column="21"/></name></name> <operator pos:line="112" pos:column="22">==<pos:position pos:line="112" pos:column="24"/></operator> <name pos:line="112" pos:column="25">APR_XML_NS_NONE<pos:position pos:line="112" pos:column="40"/></name></expr>)<pos:position pos:line="112" pos:column="41"/></condition><then pos:line="112" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="113" pos:column="13">name<pos:position pos:line="113" pos:column="17"/></name><operator pos:line="113" pos:column="17">.<pos:position pos:line="113" pos:column="18"/></operator><name pos:line="113" pos:column="18">ns<pos:position pos:line="113" pos:column="20"/></name></name> <operator pos:line="113" pos:column="21">=<pos:position pos:line="113" pos:column="22"/></operator> <literal type="string" pos:line="113" pos:column="23">""<pos:position pos:line="113" pos:column="25"/></literal></expr>;<pos:position pos:line="113" pos:column="26"/></expr_stmt></block></then>
        <else pos:line="114" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="115" pos:column="13">name<pos:position pos:line="115" pos:column="17"/></name><operator pos:line="115" pos:column="17">.<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="18">ns<pos:position pos:line="115" pos:column="20"/></name></name> <operator pos:line="115" pos:column="21">=<pos:position pos:line="115" pos:column="22"/></operator> <call><name pos:line="115" pos:column="23">APR_XML_GET_URI_ITEM<pos:position pos:line="115" pos:column="43"/></name><argument_list pos:line="115" pos:column="43">(<argument><expr><name><name pos:line="115" pos:column="44">propdb<pos:position pos:line="115" pos:column="50"/></name><operator pos:line="115" pos:column="50">-&gt;<pos:position pos:line="115" pos:column="55"/></operator><name pos:line="115" pos:column="52">ns_xlate<pos:position pos:line="115" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="62">elem<pos:position pos:line="115" pos:column="66"/></name><operator pos:line="115" pos:column="66">-&gt;<pos:position pos:line="115" pos:column="71"/></operator><name pos:line="115" pos:column="68">ns<pos:position pos:line="115" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="72"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name><name pos:line="116" pos:column="9">name<pos:position pos:line="116" pos:column="13"/></name><operator pos:line="116" pos:column="13">.<pos:position pos:line="116" pos:column="14"/></operator><name pos:line="116" pos:column="14">name<pos:position pos:line="116" pos:column="18"/></name></name> <operator pos:line="116" pos:column="19">=<pos:position pos:line="116" pos:column="20"/></operator> <name><name pos:line="116" pos:column="21">elem<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">-&gt;<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="27">name<pos:position pos:line="116" pos:column="31"/></name></name></expr>;<pos:position pos:line="116" pos:column="32"/></expr_stmt>

        <comment type="block" pos:line="118" pos:column="9">/* only bother to look if a database exists */</comment>
        <if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name><name pos:line="119" pos:column="13">propdb<pos:position pos:line="119" pos:column="19"/></name><operator pos:line="119" pos:column="19">-&gt;<pos:position pos:line="119" pos:column="24"/></operator><name pos:line="119" pos:column="21">db<pos:position pos:line="119" pos:column="23"/></name></name> <operator pos:line="119" pos:column="24">!=<pos:position pos:line="119" pos:column="26"/></operator> <name pos:line="119" pos:column="27">NULL<pos:position pos:line="119" pos:column="31"/></name></expr>)<pos:position pos:line="119" pos:column="32"/></condition><then pos:line="119" pos:column="32"> <block pos:line="119" pos:column="33">{
            <decl_stmt><decl><type><name pos:line="120" pos:column="13">int<pos:position pos:line="120" pos:column="16"/></name></type> <name pos:line="120" pos:column="17">found<pos:position pos:line="120" pos:column="22"/></name></decl>;<pos:position pos:line="120" pos:column="23"/></decl_stmt>

            <if pos:line="122" pos:column="13">if <condition pos:line="122" pos:column="16">(<expr><operator pos:line="122" pos:column="17">(<pos:position pos:line="122" pos:column="18"/></operator><name pos:line="122" pos:column="18">err<pos:position pos:line="122" pos:column="21"/></name> <operator pos:line="122" pos:column="22">=<pos:position pos:line="122" pos:column="23"/></operator> <call pos:line="122" pos:column="24">(<modifier pos:line="122" pos:column="25">*<pos:position pos:line="122" pos:column="26"/></modifier><name><name pos:line="122" pos:column="26">db_hooks<pos:position pos:line="122" pos:column="34"/></name><operator pos:line="122" pos:column="34">-&gt;<pos:position pos:line="122" pos:column="39"/></operator><name pos:line="122" pos:column="36">output_value<pos:position pos:line="122" pos:column="48"/></name></name>)<argument_list pos:line="122" pos:column="49">(<argument><expr><name><name pos:line="122" pos:column="50">propdb<pos:position pos:line="122" pos:column="56"/></name><operator pos:line="122" pos:column="56">-&gt;<pos:position pos:line="122" pos:column="61"/></operator><name pos:line="122" pos:column="58">db<pos:position pos:line="122" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="62">&amp;<pos:position pos:line="122" pos:column="67"/></operator><name pos:line="122" pos:column="63">name<pos:position pos:line="122" pos:column="67"/></name></expr></argument>,
                                                 <argument><expr><name pos:line="123" pos:column="50">xi<pos:position pos:line="123" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="123" pos:column="54">&amp;<pos:position pos:line="123" pos:column="59"/></operator><name pos:line="123" pos:column="55">hdr_good<pos:position pos:line="123" pos:column="63"/></name></expr></argument>,
                                                 <argument><expr><operator pos:line="124" pos:column="50">&amp;<pos:position pos:line="124" pos:column="55"/></operator><name pos:line="124" pos:column="51">found<pos:position pos:line="124" pos:column="56"/></name></expr></argument>)<pos:position pos:line="124" pos:column="57"/></argument_list></call><operator pos:line="124" pos:column="57">)<pos:position pos:line="124" pos:column="58"/></operator> <operator pos:line="124" pos:column="59">!=<pos:position pos:line="124" pos:column="61"/></operator> <name pos:line="124" pos:column="62">NULL<pos:position pos:line="124" pos:column="66"/></name></expr>)<pos:position pos:line="124" pos:column="67"/></condition><then pos:line="124" pos:column="67"> <block pos:line="124" pos:column="68">{
                <comment type="block" pos:line="125" pos:column="17">/* ### what to do? continue doesn't seem right... */</comment>
                <continue pos:line="126" pos:column="17">continue;<pos:position pos:line="126" pos:column="26"/></continue>
            }<pos:position pos:line="127" pos:column="14"/></block></then></if>

            <if pos:line="129" pos:column="13">if <condition pos:line="129" pos:column="16">(<expr><name pos:line="129" pos:column="17">found<pos:position pos:line="129" pos:column="22"/></name></expr>)<pos:position pos:line="129" pos:column="23"/></condition><then pos:line="129" pos:column="23"> <block pos:line="129" pos:column="24">{
                <expr_stmt><expr><name pos:line="130" pos:column="17">have_good<pos:position pos:line="130" pos:column="26"/></name> <operator pos:line="130" pos:column="27">=<pos:position pos:line="130" pos:column="28"/></operator> <literal type="number" pos:line="130" pos:column="29">1<pos:position pos:line="130" pos:column="30"/></literal></expr>;<pos:position pos:line="130" pos:column="31"/></expr_stmt>

                <comment type="block" pos:line="132" pos:column="17">/* if we haven't added the db's namespaces, then do so... */</comment>
                <if pos:line="133" pos:column="17">if <condition pos:line="133" pos:column="20">(<expr><operator pos:line="133" pos:column="21">!<pos:position pos:line="133" pos:column="22"/></operator><name pos:line="133" pos:column="22">xi_filled<pos:position pos:line="133" pos:column="31"/></name></expr>)<pos:position pos:line="133" pos:column="32"/></condition><then pos:line="133" pos:column="32"> <block pos:line="133" pos:column="33">{
                    <expr_stmt><expr><call><call pos:line="134" pos:column="21">(<name pos:line="134" pos:column="22">void<pos:position pos:line="134" pos:column="26"/></name>) <argument_list pos:line="134" pos:column="28">(<argument><expr><operator pos:line="134" pos:column="29">*<pos:position pos:line="134" pos:column="30"/></operator><name><name pos:line="134" pos:column="30">db_hooks<pos:position pos:line="134" pos:column="38"/></name><operator pos:line="134" pos:column="38">-&gt;<pos:position pos:line="134" pos:column="43"/></operator><name pos:line="134" pos:column="40">define_namespaces<pos:position pos:line="134" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="58"/></argument_list></call><argument_list pos:line="134" pos:column="58">(<argument><expr><name><name pos:line="134" pos:column="59">propdb<pos:position pos:line="134" pos:column="65"/></name><operator pos:line="134" pos:column="65">-&gt;<pos:position pos:line="134" pos:column="70"/></operator><name pos:line="134" pos:column="67">db<pos:position pos:line="134" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="71">xi<pos:position pos:line="134" pos:column="73"/></name></expr></argument>)<pos:position pos:line="134" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="75"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="135" pos:column="21">xi_filled<pos:position pos:line="135" pos:column="30"/></name> <operator pos:line="135" pos:column="31">=<pos:position pos:line="135" pos:column="32"/></operator> <literal type="number" pos:line="135" pos:column="33">1<pos:position pos:line="135" pos:column="34"/></literal></expr>;<pos:position pos:line="135" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="136" pos:column="18"/></block></then></if>
                <continue pos:line="137" pos:column="17">continue;<pos:position pos:line="137" pos:column="26"/></continue>
            }<pos:position pos:line="138" pos:column="14"/></block></then></if>
        }<pos:position pos:line="139" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="141" pos:column="9">/* not found as a live OR dead property. add a record to the "bad"
           propstats */</comment>

        <comment type="block" pos:line="144" pos:column="9">/* make sure we've started our "bad" propstat */</comment>
        <if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name><name pos:line="145" pos:column="13">hdr_bad<pos:position pos:line="145" pos:column="20"/></name><operator pos:line="145" pos:column="20">.<pos:position pos:line="145" pos:column="21"/></operator><name pos:line="145" pos:column="21">first<pos:position pos:line="145" pos:column="26"/></name></name> <operator pos:line="145" pos:column="27">==<pos:position pos:line="145" pos:column="29"/></operator> <name pos:line="145" pos:column="30">NULL<pos:position pos:line="145" pos:column="34"/></name></expr>)<pos:position pos:line="145" pos:column="35"/></condition><then pos:line="145" pos:column="35"> <block pos:line="145" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="146" pos:column="13">apr_text_append<pos:position pos:line="146" pos:column="28"/></name><argument_list pos:line="146" pos:column="28">(<argument><expr><name><name pos:line="146" pos:column="29">propdb<pos:position pos:line="146" pos:column="35"/></name><operator pos:line="146" pos:column="35">-&gt;<pos:position pos:line="146" pos:column="40"/></operator><name pos:line="146" pos:column="37">p<pos:position pos:line="146" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="40">&amp;<pos:position pos:line="146" pos:column="45"/></operator><name pos:line="146" pos:column="41">hdr_bad<pos:position pos:line="146" pos:column="48"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="147" pos:column="29">"&lt;D:propstat&gt;"<pos:position pos:line="147" pos:column="49"/></literal> <name pos:line="147" pos:column="44">DEBUG_CR<pos:position pos:line="147" pos:column="52"/></name>
                            <literal type="string" pos:line="148" pos:column="29">"&lt;D:prop&gt;"<pos:position pos:line="148" pos:column="45"/></literal> <name pos:line="148" pos:column="40">DEBUG_CR<pos:position pos:line="148" pos:column="48"/></name></expr></argument>)<pos:position pos:line="148" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="149" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="151" pos:column="9">/* output this property's name (into the bad propstats) */</comment>
        <expr_stmt><expr><call><name pos:line="152" pos:column="9">dav_output_prop_name<pos:position pos:line="152" pos:column="29"/></name><argument_list pos:line="152" pos:column="29">(<argument><expr><name><name pos:line="152" pos:column="30">propdb<pos:position pos:line="152" pos:column="36"/></name><operator pos:line="152" pos:column="36">-&gt;<pos:position pos:line="152" pos:column="41"/></operator><name pos:line="152" pos:column="38">p<pos:position pos:line="152" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="41">&amp;<pos:position pos:line="152" pos:column="46"/></operator><name pos:line="152" pos:column="42">name<pos:position pos:line="152" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="48">xi<pos:position pos:line="152" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="52">&amp;<pos:position pos:line="152" pos:column="57"/></operator><name pos:line="152" pos:column="53">hdr_bad<pos:position pos:line="152" pos:column="60"/></name></expr></argument>)<pos:position pos:line="152" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="153" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="155" pos:column="5">apr_text_append<pos:position pos:line="155" pos:column="20"/></name><argument_list pos:line="155" pos:column="20">(<argument><expr><name><name pos:line="155" pos:column="21">propdb<pos:position pos:line="155" pos:column="27"/></name><operator pos:line="155" pos:column="27">-&gt;<pos:position pos:line="155" pos:column="32"/></operator><name pos:line="155" pos:column="29">p<pos:position pos:line="155" pos:column="30"/></name></name></expr></argument>, <argument><expr><operator pos:line="155" pos:column="32">&amp;<pos:position pos:line="155" pos:column="37"/></operator><name pos:line="155" pos:column="33">hdr_good<pos:position pos:line="155" pos:column="41"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="156" pos:column="21">"&lt;/D:prop&gt;"<pos:position pos:line="156" pos:column="38"/></literal> <name pos:line="156" pos:column="33">DEBUG_CR<pos:position pos:line="156" pos:column="41"/></name>
                    <literal type="string" pos:line="157" pos:column="21">"&lt;D:status&gt;HTTP/1.1 200 OK&lt;/D:status&gt;"<pos:position pos:line="157" pos:column="71"/></literal> <name pos:line="157" pos:column="60">DEBUG_CR<pos:position pos:line="157" pos:column="68"/></name>
                    <literal type="string" pos:line="158" pos:column="21">"&lt;/D:propstat&gt;"<pos:position pos:line="158" pos:column="42"/></literal> <name pos:line="158" pos:column="37">DEBUG_CR<pos:position pos:line="158" pos:column="45"/></name></expr></argument>)<pos:position pos:line="158" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="160" pos:column="5">/* default to start with the good */</comment>
    <expr_stmt><expr><name><name pos:line="161" pos:column="5">result<pos:position pos:line="161" pos:column="11"/></name><operator pos:line="161" pos:column="11">.<pos:position pos:line="161" pos:column="12"/></operator><name pos:line="161" pos:column="12">propstats<pos:position pos:line="161" pos:column="21"/></name></name> <operator pos:line="161" pos:column="22">=<pos:position pos:line="161" pos:column="23"/></operator> <name><name pos:line="161" pos:column="24">hdr_good<pos:position pos:line="161" pos:column="32"/></name><operator pos:line="161" pos:column="32">.<pos:position pos:line="161" pos:column="33"/></operator><name pos:line="161" pos:column="33">first<pos:position pos:line="161" pos:column="38"/></name></name></expr>;<pos:position pos:line="161" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="163" pos:column="5">/* we may not have any "bad" results */</comment>
    <if pos:line="164" pos:column="5">if <condition pos:line="164" pos:column="8">(<expr><name><name pos:line="164" pos:column="9">hdr_bad<pos:position pos:line="164" pos:column="16"/></name><operator pos:line="164" pos:column="16">.<pos:position pos:line="164" pos:column="17"/></operator><name pos:line="164" pos:column="17">first<pos:position pos:line="164" pos:column="22"/></name></name> <operator pos:line="164" pos:column="23">!=<pos:position pos:line="164" pos:column="25"/></operator> <name pos:line="164" pos:column="26">NULL<pos:position pos:line="164" pos:column="30"/></name></expr>)<pos:position pos:line="164" pos:column="31"/></condition><then pos:line="164" pos:column="31"> <block pos:line="164" pos:column="32">{
        <comment type="block" pos:line="165" pos:column="9">/* "close" the bad propstat */</comment>
        <expr_stmt><expr><call><name pos:line="166" pos:column="9">apr_text_append<pos:position pos:line="166" pos:column="24"/></name><argument_list pos:line="166" pos:column="24">(<argument><expr><name><name pos:line="166" pos:column="25">propdb<pos:position pos:line="166" pos:column="31"/></name><operator pos:line="166" pos:column="31">-&gt;<pos:position pos:line="166" pos:column="36"/></operator><name pos:line="166" pos:column="33">p<pos:position pos:line="166" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="36">&amp;<pos:position pos:line="166" pos:column="41"/></operator><name pos:line="166" pos:column="37">hdr_bad<pos:position pos:line="166" pos:column="44"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="167" pos:column="25">"&lt;/D:prop&gt;"<pos:position pos:line="167" pos:column="42"/></literal> <name pos:line="167" pos:column="37">DEBUG_CR<pos:position pos:line="167" pos:column="45"/></name>
                        <literal type="string" pos:line="168" pos:column="25">"&lt;D:status&gt;HTTP/1.1 404 Not Found&lt;/D:status&gt;"<pos:position pos:line="168" pos:column="82"/></literal> <name pos:line="168" pos:column="71">DEBUG_CR<pos:position pos:line="168" pos:column="79"/></name>
                        <literal type="string" pos:line="169" pos:column="25">"&lt;/D:propstat&gt;"<pos:position pos:line="169" pos:column="46"/></literal> <name pos:line="169" pos:column="41">DEBUG_CR<pos:position pos:line="169" pos:column="49"/></name></expr></argument>)<pos:position pos:line="169" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="51"/></expr_stmt>

        <comment type="block" pos:line="171" pos:column="9">/* if there are no good props, then just return the bad */</comment>
        <if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><operator pos:line="172" pos:column="13">!<pos:position pos:line="172" pos:column="14"/></operator><name pos:line="172" pos:column="14">have_good<pos:position pos:line="172" pos:column="23"/></name></expr>)<pos:position pos:line="172" pos:column="24"/></condition><then pos:line="172" pos:column="24"> <block pos:line="172" pos:column="25">{
            <expr_stmt><expr><name><name pos:line="173" pos:column="13">result<pos:position pos:line="173" pos:column="19"/></name><operator pos:line="173" pos:column="19">.<pos:position pos:line="173" pos:column="20"/></operator><name pos:line="173" pos:column="20">propstats<pos:position pos:line="173" pos:column="29"/></name></name> <operator pos:line="173" pos:column="30">=<pos:position pos:line="173" pos:column="31"/></operator> <name><name pos:line="173" pos:column="32">hdr_bad<pos:position pos:line="173" pos:column="39"/></name><operator pos:line="173" pos:column="39">.<pos:position pos:line="173" pos:column="40"/></operator><name pos:line="173" pos:column="40">first<pos:position pos:line="173" pos:column="45"/></name></name></expr>;<pos:position pos:line="173" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="174" pos:column="10"/></block></then>
        <else pos:line="175" pos:column="9">else <block pos:line="175" pos:column="14">{
            <comment type="block" pos:line="176" pos:column="13">/* hook the bad propstat to the end of the good one */</comment>
            <expr_stmt><expr><name><name pos:line="177" pos:column="13">hdr_good<pos:position pos:line="177" pos:column="21"/></name><operator pos:line="177" pos:column="21">.<pos:position pos:line="177" pos:column="22"/></operator><name pos:line="177" pos:column="22">last<pos:position pos:line="177" pos:column="26"/></name><operator pos:line="177" pos:column="26">-&gt;<pos:position pos:line="177" pos:column="31"/></operator><name pos:line="177" pos:column="28">next<pos:position pos:line="177" pos:column="32"/></name></name> <operator pos:line="177" pos:column="33">=<pos:position pos:line="177" pos:column="34"/></operator> <name><name pos:line="177" pos:column="35">hdr_bad<pos:position pos:line="177" pos:column="42"/></name><operator pos:line="177" pos:column="42">.<pos:position pos:line="177" pos:column="43"/></operator><name pos:line="177" pos:column="43">first<pos:position pos:line="177" pos:column="48"/></name></name></expr>;<pos:position pos:line="177" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="178" pos:column="10"/></block></else></if>
    }<pos:position pos:line="179" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="181" pos:column="5">/* add in all the various namespaces, and return them */</comment>
    <expr_stmt><expr><call><name pos:line="182" pos:column="5">dav_xmlns_generate<pos:position pos:line="182" pos:column="23"/></name><argument_list pos:line="182" pos:column="23">(<argument><expr><name pos:line="182" pos:column="24">xi<pos:position pos:line="182" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="182" pos:column="28">&amp;<pos:position pos:line="182" pos:column="33"/></operator><name pos:line="182" pos:column="29">hdr_ns<pos:position pos:line="182" pos:column="35"/></name></expr></argument>)<pos:position pos:line="182" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="183" pos:column="5">result<pos:position pos:line="183" pos:column="11"/></name><operator pos:line="183" pos:column="11">.<pos:position pos:line="183" pos:column="12"/></operator><name pos:line="183" pos:column="12">xmlns<pos:position pos:line="183" pos:column="17"/></name></name> <operator pos:line="183" pos:column="18">=<pos:position pos:line="183" pos:column="19"/></operator> <name><name pos:line="183" pos:column="20">hdr_ns<pos:position pos:line="183" pos:column="26"/></name><operator pos:line="183" pos:column="26">.<pos:position pos:line="183" pos:column="27"/></operator><name pos:line="183" pos:column="27">first<pos:position pos:line="183" pos:column="32"/></name></name></expr>;<pos:position pos:line="183" pos:column="33"/></expr_stmt>

    <return pos:line="185" pos:column="5">return <expr><name pos:line="185" pos:column="12">result<pos:position pos:line="185" pos:column="18"/></name></expr>;<pos:position pos:line="185" pos:column="19"/></return>
}<pos:position pos:line="186" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3383_httpd-2.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">wait_for_io_or_timeout<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">apr_socket_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">sock<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">for_read<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">timeval<pos:position pos:line="3" pos:column="19"/></name></name></type> <name pos:line="3" pos:column="20">tv<pos:position pos:line="3" pos:column="22"/></name></decl>, <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="25">tvptr<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">fd_set<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">fdset<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">srv<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>

    <do pos:line="7" pos:column="5">do <block pos:line="7" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">FD_ZERO<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><operator pos:line="8" pos:column="17">&amp;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="18">fdset<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">FD_SET<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name><name pos:line="9" pos:column="16">sock<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">socketdes<pos:position pos:line="9" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="33">&amp;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="34">fdset<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">sock<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">timeout<pos:position pos:line="10" pos:column="26"/></name></name> <operator pos:line="10" pos:column="27">&lt;<pos:position pos:line="10" pos:column="31"/></operator> <literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">tvptr<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then>
        <else pos:line="13" pos:column="9">else <block pos:line="13" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">tv<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">tv_sec<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name><name pos:line="14" pos:column="25">sock<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">timeout<pos:position pos:line="14" pos:column="38"/></name></name> <operator pos:line="14" pos:column="39">/<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">APR_USEC_PER_SEC<pos:position pos:line="14" pos:column="57"/></name></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="15" pos:column="13">tv<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">tv_usec<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name><name pos:line="15" pos:column="26">sock<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">timeout<pos:position pos:line="15" pos:column="39"/></name></name> <operator pos:line="15" pos:column="40">%<pos:position pos:line="15" pos:column="41"/></operator> <name pos:line="15" pos:column="42">APR_USEC_PER_SEC<pos:position pos:line="15" pos:column="58"/></name></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">tvptr<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <operator pos:line="16" pos:column="21">&amp;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="22">tv<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="18" pos:column="9">srv<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">select<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name><name pos:line="18" pos:column="22">sock<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">socketdes<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">+<pos:position pos:line="18" pos:column="39"/></operator> <literal type="number" pos:line="18" pos:column="40">1<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><name pos:line="19" pos:column="13">for_read<pos:position pos:line="19" pos:column="21"/></name></expr> ?<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23"> <expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">fdset<pos:position pos:line="19" pos:column="30"/></name></expr> <pos:position pos:line="19" pos:column="31"/></then><else pos:line="19" pos:column="31">: <expr><name pos:line="19" pos:column="33">NULL<pos:position pos:line="19" pos:column="37"/></name></expr></else></ternary></expr></argument>,
            <argument><expr><ternary><condition><expr><name pos:line="20" pos:column="13">for_read<pos:position pos:line="20" pos:column="21"/></name></expr> ?<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <expr><name pos:line="20" pos:column="24">NULL<pos:position pos:line="20" pos:column="28"/></name></expr> <pos:position pos:line="20" pos:column="29"/></then><else pos:line="20" pos:column="29">: <expr><operator pos:line="20" pos:column="31">&amp;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="32">fdset<pos:position pos:line="20" pos:column="37"/></name></expr></else></ternary></expr></argument>, 
            <argument><expr><name pos:line="21" pos:column="13">NULL<pos:position pos:line="21" pos:column="17"/></name></expr></argument>,
            <argument><expr><name pos:line="22" pos:column="13">tvptr<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
            <comment type="block" pos:line="23" pos:column="13">/* TODO - timeout should be smaller on repeats of this loop */</comment>
    }<pos:position pos:line="24" pos:column="6"/></block> while <condition pos:line="24" pos:column="13">(<expr><name pos:line="24" pos:column="14">srv<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">==<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="21">-<pos:position pos:line="24" pos:column="22"/></operator><literal type="number" pos:line="24" pos:column="22">1<pos:position pos:line="24" pos:column="23"/></literal> <operator pos:line="24" pos:column="24">&amp;&amp;<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="27">errno<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">==<pos:position pos:line="24" pos:column="35"/></operator> <name pos:line="24" pos:column="36">EINTR<pos:position pos:line="24" pos:column="41"/></name></expr>)<pos:position pos:line="24" pos:column="42"/></condition>;<pos:position pos:line="24" pos:column="43"/></do>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">srv<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">==<pos:position pos:line="26" pos:column="15"/></operator> <literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18"> <block pos:line="26" pos:column="19">{
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">APR_TIMEUP<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><name pos:line="29" pos:column="14">srv<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">&lt;<pos:position pos:line="29" pos:column="22"/></operator> <literal type="number" pos:line="29" pos:column="20">0<pos:position pos:line="29" pos:column="21"/></literal></expr>)<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22"> <block pos:line="29" pos:column="23">{
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">errno<pos:position pos:line="30" pos:column="21"/></name></expr>;<pos:position pos:line="30" pos:column="22"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">APR_SUCCESS<pos:position pos:line="32" pos:column="23"/></name></expr>;<pos:position pos:line="32" pos:column="24"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

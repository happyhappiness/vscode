<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1775_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">proxy_trans<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">proxy_alias<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">ent<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">proxy_dir_conf<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">dconf<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">proxy_server_conf<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">conf<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">r<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">proxyreq<pos:position pos:line="8" pos:column="20"/></name></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
        <comment type="block" pos:line="9" pos:column="9">/* someone has already set up the proxy, it was possibly ourselves
         * in proxy_detect
         */</comment>
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">OK<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name><name pos:line="15" pos:column="10">r<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">unparsed_uri<pos:position pos:line="15" pos:column="25"/></name><index pos:line="15" pos:column="25">[<expr><literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr>]<pos:position pos:line="15" pos:column="28"/></index></name> <operator pos:line="15" pos:column="29">==<pos:position pos:line="15" pos:column="31"/></operator> <literal type="char" pos:line="15" pos:column="32">'*'<pos:position pos:line="15" pos:column="35"/></literal> <operator pos:line="15" pos:column="36">&amp;&amp;<pos:position pos:line="15" pos:column="46"/></operator> <name><name pos:line="15" pos:column="39">r<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">unparsed_uri<pos:position pos:line="15" pos:column="54"/></name><index pos:line="15" pos:column="54">[<expr><literal type="number" pos:line="15" pos:column="55">1<pos:position pos:line="15" pos:column="56"/></literal></expr>]<pos:position pos:line="15" pos:column="57"/></index></name> <operator pos:line="15" pos:column="58">==<pos:position pos:line="15" pos:column="60"/></operator> <literal type="char" pos:line="15" pos:column="61">'\0'<pos:position pos:line="15" pos:column="65"/></literal><operator pos:line="15" pos:column="65">)<pos:position pos:line="15" pos:column="66"/></operator>
        <operator pos:line="16" pos:column="9">||<pos:position pos:line="16" pos:column="11"/></operator> <operator pos:line="16" pos:column="12">!<pos:position pos:line="16" pos:column="13"/></operator><name><name pos:line="16" pos:column="13">r<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">uri<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">||<pos:position pos:line="16" pos:column="22"/></operator> <name><name pos:line="16" pos:column="23">r<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">uri<pos:position pos:line="16" pos:column="29"/></name><index pos:line="16" pos:column="29">[<expr><literal type="number" pos:line="16" pos:column="30">0<pos:position pos:line="16" pos:column="31"/></literal></expr>]<pos:position pos:line="16" pos:column="32"/></index></name> <operator pos:line="16" pos:column="33">!=<pos:position pos:line="16" pos:column="35"/></operator> <literal type="char" pos:line="16" pos:column="36">'/'<pos:position pos:line="16" pos:column="39"/></literal></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40"> <block pos:line="16" pos:column="41">{
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">DECLINED<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* XXX: since r-&gt;uri has been manipulated already we're not really
     * compliant with RFC1945 at this point.  But this probably isn't
     * an issue because this is a hybrid proxy/origin server.
     */</comment>

    <expr_stmt><expr><name pos:line="25" pos:column="5">dconf<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name pos:line="25" pos:column="13">ap_get_module_config<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name><name pos:line="25" pos:column="34">r<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">per_dir_config<pos:position pos:line="25" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="53">&amp;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="54">proxy_module<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* short way - this location is reverse proxied? */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">dconf<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">alias<pos:position pos:line="28" pos:column="21"/></name></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22"> <block pos:line="28" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">int<pos:position pos:line="29" pos:column="12"/></name></type> <name pos:line="29" pos:column="13">rv<pos:position pos:line="29" pos:column="15"/></name> <init pos:line="29" pos:column="16">= <expr><call><name pos:line="29" pos:column="18">ap_proxy_trans_match<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">r<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="42">dconf<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">alias<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="56">dconf<pos:position pos:line="29" pos:column="61"/></name></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="63"/></decl_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">DONE<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">!=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">rv<pos:position pos:line="30" pos:column="23"/></name></expr>)<pos:position pos:line="30" pos:column="24"/></condition><then pos:line="30" pos:column="24"> <block pos:line="30" pos:column="25">{
            <return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">rv<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="35" pos:column="5">conf<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">proxy_server_conf<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">*<pos:position pos:line="35" pos:column="32"/></operator><operator pos:line="35" pos:column="32">)<pos:position pos:line="35" pos:column="33"/></operator> <call><name pos:line="35" pos:column="34">ap_get_module_config<pos:position pos:line="35" pos:column="54"/></name><argument_list pos:line="35" pos:column="54">(<argument><expr><name><name pos:line="35" pos:column="55">r<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">-&gt;<pos:position pos:line="35" pos:column="61"/></operator><name pos:line="35" pos:column="58">server<pos:position pos:line="35" pos:column="64"/></name><operator pos:line="35" pos:column="64">-&gt;<pos:position pos:line="35" pos:column="69"/></operator><name pos:line="35" pos:column="66">module_config<pos:position pos:line="35" pos:column="79"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="36" pos:column="55">&amp;<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="56">proxy_module<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="70"/></expr_stmt>

    <comment type="block" pos:line="38" pos:column="5">/* long way - walk the list of aliases, find a match */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">conf<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">aliases<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">nelts<pos:position pos:line="39" pos:column="29"/></name></name></expr>)<pos:position pos:line="39" pos:column="30"/></condition><then pos:line="39" pos:column="30"> <block pos:line="39" pos:column="31">{
        <expr_stmt><expr><name pos:line="40" pos:column="9">ent<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <operator pos:line="40" pos:column="15">(<pos:position pos:line="40" pos:column="16"/></operator>struct <name pos:line="40" pos:column="23">proxy_alias<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">*<pos:position pos:line="40" pos:column="36"/></operator><operator pos:line="40" pos:column="36">)<pos:position pos:line="40" pos:column="37"/></operator> <name><name pos:line="40" pos:column="38">conf<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">aliases<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">-&gt;<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="53">elts<pos:position pos:line="40" pos:column="57"/></name></name></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>
        <for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">i<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></init> <condition><expr><name pos:line="41" pos:column="21">i<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&lt;<pos:position pos:line="41" pos:column="27"/></operator> <name><name pos:line="41" pos:column="25">conf<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">aliases<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">nelts<pos:position pos:line="41" pos:column="45"/></name></name></expr>;<pos:position pos:line="41" pos:column="46"/></condition> <incr><expr><name pos:line="41" pos:column="47">i<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">++<pos:position pos:line="41" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="51"/></control> <block pos:line="41" pos:column="52">{
            <decl_stmt><decl><type><name pos:line="42" pos:column="13">int<pos:position pos:line="42" pos:column="16"/></name></type> <name pos:line="42" pos:column="17">rv<pos:position pos:line="42" pos:column="19"/></name> <init pos:line="42" pos:column="20">= <expr><call><name pos:line="42" pos:column="22">ap_proxy_trans_match<pos:position pos:line="42" pos:column="42"/></name><argument_list pos:line="42" pos:column="42">(<argument><expr><name pos:line="42" pos:column="43">r<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="46">&amp;<pos:position pos:line="42" pos:column="51"/></operator><name><name pos:line="42" pos:column="47">ent<pos:position pos:line="42" pos:column="50"/></name><index pos:line="42" pos:column="50">[<expr><name pos:line="42" pos:column="51">i<pos:position pos:line="42" pos:column="52"/></name></expr>]<pos:position pos:line="42" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="55">dconf<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="62"/></decl_stmt>
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">DONE<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">!=<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">rv<pos:position pos:line="43" pos:column="27"/></name></expr>)<pos:position pos:line="43" pos:column="28"/></condition><then pos:line="43" pos:column="28"> <block pos:line="43" pos:column="29">{
                <return pos:line="44" pos:column="17">return <expr><name pos:line="44" pos:column="24">rv<pos:position pos:line="44" pos:column="26"/></name></expr>;<pos:position pos:line="44" pos:column="27"/></return>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if>
        }<pos:position pos:line="46" pos:column="10"/></block></for>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">DECLINED<pos:position pos:line="48" pos:column="20"/></name></expr>;<pos:position pos:line="48" pos:column="21"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6576.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">h2_h2_post_read_req<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* slave connection? */</comment>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">r<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">connection<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">master<pos:position pos:line="4" pos:column="30"/></name></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31"> <block pos:line="4" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">h2_ctx<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">ctx<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><call><name pos:line="5" pos:column="23">h2_ctx_rget<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">r<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">h2_task<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">task<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><call><name pos:line="6" pos:column="32">h2_ctx_get_task<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><name pos:line="6" pos:column="48">ctx<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>
        <comment type="block" pos:line="7" pos:column="9">/* This hook will get called twice on internal redirects. Take care
         * that we manipulate filters only once. */</comment>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">task<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&amp;&amp;<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><name><name pos:line="9" pos:column="22">task<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">filters_set<pos:position pos:line="9" pos:column="39"/></name></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40"> <block pos:line="9" pos:column="41">{
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">ap_filter_t<pos:position pos:line="10" pos:column="24"/></name> <modifier pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></modifier></type><name pos:line="10" pos:column="26">f<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
            
            <comment type="block" pos:line="12" pos:column="13">/* setup the correct output filters to process the response
             * on the proper mod_http2 way. */</comment>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_log_rerror<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">APLOG_MARK<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">APLOG_TRACE3<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="53">0<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">r<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="59">"adding task output filter"<pos:position pos:line="14" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="88"/></expr_stmt>
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name><name pos:line="15" pos:column="17">task<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">ser_headers<pos:position pos:line="15" pos:column="34"/></name></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35"> <block pos:line="15" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">ap_add_output_filter<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><literal type="string" pos:line="16" pos:column="38">"H1_TO_H2_RESP"<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="55">task<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="61">r<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="64">r<pos:position pos:line="16" pos:column="65"/></name><operator pos:line="16" pos:column="65">-&gt;<pos:position pos:line="16" pos:column="70"/></operator><name pos:line="16" pos:column="67">connection<pos:position pos:line="16" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="17" pos:column="14"/></block></then>
            <else pos:line="18" pos:column="13">else <block pos:line="18" pos:column="18">{
                <comment type="block" pos:line="19" pos:column="17">/* replace the core http filter that formats response headers
                 * in HTTP/1 with our own that collects status and headers */</comment>
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">ap_remove_output_filter_byhandle<pos:position pos:line="21" pos:column="49"/></name><argument_list pos:line="21" pos:column="49">(<argument><expr><name><name pos:line="21" pos:column="50">r<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">-&gt;<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="53">output_filters<pos:position pos:line="21" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="69">"HTTP_HEADER"<pos:position pos:line="21" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">ap_add_output_filter<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><literal type="string" pos:line="22" pos:column="38">"H2_RESPONSE"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">task<pos:position pos:line="22" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="59">r<pos:position pos:line="22" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="62">r<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">-&gt;<pos:position pos:line="22" pos:column="68"/></operator><name pos:line="22" pos:column="65">connection<pos:position pos:line="22" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></else></if>
            
            <comment type="block" pos:line="25" pos:column="13">/* trailers processing. Incoming trailers are added to this
             * request via our h2 input filter, outgoing trailers
             * in a special h2 out filter. */</comment>
            <for pos:line="28" pos:column="13">for <control pos:line="28" pos:column="17">(<init><expr><name pos:line="28" pos:column="18">f<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name><name pos:line="28" pos:column="22">r<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">input_filters<pos:position pos:line="28" pos:column="38"/></name></name></expr>;<pos:position pos:line="28" pos:column="39"/></init> <condition><expr><name pos:line="28" pos:column="40">f<pos:position pos:line="28" pos:column="41"/></name></expr>;<pos:position pos:line="28" pos:column="42"/></condition> <incr><expr><name pos:line="28" pos:column="43">f<pos:position pos:line="28" pos:column="44"/></name> <operator pos:line="28" pos:column="45">=<pos:position pos:line="28" pos:column="46"/></operator> <name><name pos:line="28" pos:column="47">f<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">next<pos:position pos:line="28" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="28" pos:column="55"/></control> <block pos:line="28" pos:column="56">{
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><call><name pos:line="29" pos:column="22">strcmp<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"H2_TO_H1"<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="41">f<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">frec<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">-&gt;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="50">name<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="56"/></condition><then pos:line="29" pos:column="56"> <block pos:line="29" pos:column="57">{
                    <expr_stmt><expr><name><name pos:line="30" pos:column="21">f<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">r<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">r<pos:position pos:line="30" pos:column="29"/></name></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
                    <break pos:line="31" pos:column="21">break;<pos:position pos:line="31" pos:column="27"/></break>
                }<pos:position pos:line="32" pos:column="18"/></block></then></if>
            }<pos:position pos:line="33" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_add_output_filter<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><literal type="string" pos:line="34" pos:column="34">"H2_TRAILERS"<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">task<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">r<pos:position pos:line="34" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="58">r<pos:position pos:line="34" pos:column="59"/></name><operator pos:line="34" pos:column="59">-&gt;<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="61">connection<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">task<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">filters_set<pos:position pos:line="35" pos:column="30"/></name></name> <operator pos:line="35" pos:column="31">=<pos:position pos:line="35" pos:column="32"/></operator> <literal type="number" pos:line="35" pos:column="33">1<pos:position pos:line="35" pos:column="34"/></literal></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">DECLINED<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

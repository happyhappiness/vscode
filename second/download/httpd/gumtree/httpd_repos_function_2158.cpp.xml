<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2158.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">slotmem_create<pos:position pos:line="1" pos:column="35"/></name><argument_list pos:line="1" pos:column="35">(<argument><expr><name pos:line="1" pos:column="36">ap_slotmem_instance_t<pos:position pos:line="1" pos:column="57"/></name> <operator pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></operator><operator pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></operator><operator pos:line="1" pos:column="60">new<pos:position pos:line="1" pos:column="63"/></operator></expr></argument>,
                                   <argument><expr><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <operator pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">name<pos:position pos:line="2" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="54">apr_size_t<pos:position pos:line="2" pos:column="64"/></name> <name pos:line="2" pos:column="65">item_size<pos:position pos:line="2" pos:column="74"/></name></expr></argument>,
                                   <argument><expr><name pos:line="3" pos:column="36">unsigned<pos:position pos:line="3" pos:column="44"/></name> <name pos:line="3" pos:column="45">int<pos:position pos:line="3" pos:column="48"/></name> <name pos:line="3" pos:column="49">item_num<pos:position pos:line="3" pos:column="57"/></name></expr></argument>,
                                   <argument><expr><name pos:line="4" pos:column="36">ap_slotmem_type_t<pos:position pos:line="4" pos:column="53"/></name> <name pos:line="4" pos:column="54">type<pos:position pos:line="4" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="60">apr_pool_t<pos:position pos:line="4" pos:column="70"/></name> <operator pos:line="4" pos:column="71">*<pos:position pos:line="4" pos:column="72"/></operator><name pos:line="4" pos:column="72">pool<pos:position pos:line="4" pos:column="76"/></name></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list>
<argument_list pos:line="5" pos:column="1">{
<comment type="block" pos:line="6" pos:column="1">/*    void *slotmem = NULL; */</comment>
    <argument><expr><name pos:line="7" pos:column="5">void<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">ptr<pos:position pos:line="7" pos:column="14"/></name></expr></argument>;
    <argument><expr><name pos:line="8" pos:column="5">sharedslotdesc_t<pos:position pos:line="8" pos:column="21"/></name> <name pos:line="8" pos:column="22">desc<pos:position pos:line="8" pos:column="26"/></name></expr></argument>;
    <argument><expr><name pos:line="9" pos:column="5">ap_slotmem_instance_t<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">res<pos:position pos:line="9" pos:column="31"/></name></expr></argument>;
    <argument><expr><name pos:line="10" pos:column="5">ap_slotmem_instance_t<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">next<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">globallistmem<pos:position pos:line="10" pos:column="48"/></name></expr></argument>;
    <argument><expr><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">fname<pos:position pos:line="11" pos:column="22"/></name></expr></argument>;
    <argument><expr><name pos:line="12" pos:column="5">apr_shm_t<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">shm<pos:position pos:line="12" pos:column="19"/></name></expr></argument>;
    <argument><expr><name pos:line="13" pos:column="5">apr_size_t<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">basesize<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <operator pos:line="13" pos:column="27">(<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">item_size<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">item_num<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">)<pos:position pos:line="13" pos:column="49"/></operator></expr></argument>;
    <argument><expr><name pos:line="14" pos:column="5">apr_size_t<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">size<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <sizeof pos:line="14" pos:column="23">sizeof<argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">sharedslotdesc_t<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></sizeof> <operator pos:line="14" pos:column="48">+<pos:position pos:line="14" pos:column="49"/></operator>
                      <operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">item_num<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">*<pos:position pos:line="15" pos:column="34"/></operator> <sizeof pos:line="15" pos:column="35">sizeof<argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">char<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></sizeof><operator pos:line="15" pos:column="47">)<pos:position pos:line="15" pos:column="48"/></operator> <operator pos:line="15" pos:column="49">+<pos:position pos:line="15" pos:column="50"/></operator> <name pos:line="15" pos:column="51">basesize<pos:position pos:line="15" pos:column="59"/></name></expr></argument>;
    <argument><expr><name pos:line="16" pos:column="5">apr_status_t<pos:position pos:line="16" pos:column="17"/></name> <name pos:line="16" pos:column="18">rv<pos:position pos:line="16" pos:column="20"/></name></expr></argument>;

    if <argument><expr><operator pos:line="18" pos:column="8">(<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">gpool<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">)<pos:position pos:line="18" pos:column="23"/></operator></expr></argument>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">APR_ENOSHMAVAIL<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></return></argument_list></decl></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">name<pos:position pos:line="20" pos:column="13"/></name></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14"> <block pos:line="20" pos:column="15">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">name<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>]<pos:position pos:line="21" pos:column="20"/></index></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <literal type="char" pos:line="21" pos:column="24">':'<pos:position pos:line="21" pos:column="27"/></literal></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28"> <block pos:line="21" pos:column="29">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">fname<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">name<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then>
        <else pos:line="24" pos:column="9">else <block pos:line="24" pos:column="14">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">fname<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">ap_server_root_relative<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">pool<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">name<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="28" pos:column="9">/* first try to attach to existing slotmem */</comment>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">next<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18"> <block pos:line="29" pos:column="19">{
            <for pos:line="30" pos:column="13">for <control pos:line="30" pos:column="17">(<init pos:line="30" pos:column="18">;<pos:position pos:line="30" pos:column="19"/></init><condition pos:line="30" pos:column="19">;<pos:position pos:line="30" pos:column="20"/></condition><incr/>)<pos:position pos:line="30" pos:column="21"/></control> <block pos:line="30" pos:column="22">{
                <if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">strcmp<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name><name pos:line="31" pos:column="28">next<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">name<pos:position pos:line="31" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="40">fname<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call> <operator pos:line="31" pos:column="47">==<pos:position pos:line="31" pos:column="49"/></operator> <literal type="number" pos:line="31" pos:column="50">0<pos:position pos:line="31" pos:column="51"/></literal></expr>)<pos:position pos:line="31" pos:column="52"/></condition><then pos:line="31" pos:column="52"> <block pos:line="31" pos:column="53">{
                    <comment type="block" pos:line="32" pos:column="21">/* we already have it */</comment>
                    <expr_stmt><expr><operator pos:line="33" pos:column="21">*<pos:position pos:line="33" pos:column="22"/></operator><operator pos:line="33" pos:column="22">new<pos:position pos:line="33" pos:column="25"/></operator> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">next<pos:position pos:line="33" pos:column="32"/></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
                    <return pos:line="34" pos:column="21">return <expr><name pos:line="34" pos:column="28">APR_SUCCESS<pos:position pos:line="34" pos:column="39"/></name></expr>;<pos:position pos:line="34" pos:column="40"/></return>
                }<pos:position pos:line="35" pos:column="18"/></block></then></if>
                <if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><name><name pos:line="36" pos:column="22">next<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">next<pos:position pos:line="36" pos:column="32"/></name></name></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33"> <block pos:line="36" pos:column="34">{
                     <break pos:line="37" pos:column="22">break;<pos:position pos:line="37" pos:column="28"/></break>
                }<pos:position pos:line="38" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="39" pos:column="17">next<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <name><name pos:line="39" pos:column="24">next<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">next<pos:position pos:line="39" pos:column="34"/></name></name></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></for>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">fname<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <literal type="string" pos:line="44" pos:column="17">"anonymous"<pos:position pos:line="44" pos:column="28"/></literal></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="47" pos:column="5">/* first try to attach to existing shared memory */</comment>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">name<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">&amp;&amp;<pos:position pos:line="48" pos:column="24"/></operator> <name><name pos:line="48" pos:column="17">name<pos:position pos:line="48" pos:column="21"/></name><index pos:line="48" pos:column="21">[<expr><literal type="number" pos:line="48" pos:column="22">0<pos:position pos:line="48" pos:column="23"/></literal></expr>]<pos:position pos:line="48" pos:column="24"/></index></name> <operator pos:line="48" pos:column="25">!=<pos:position pos:line="48" pos:column="27"/></operator> <literal type="char" pos:line="48" pos:column="28">':'<pos:position pos:line="48" pos:column="31"/></literal></expr>)<pos:position pos:line="48" pos:column="32"/></condition><then pos:line="48" pos:column="32"> <block pos:line="48" pos:column="33">{
        <expr_stmt><expr><name pos:line="49" pos:column="9">rv<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <call><name pos:line="49" pos:column="14">apr_shm_attach<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><operator pos:line="49" pos:column="29">&amp;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="30">shm<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="35">fname<pos:position pos:line="49" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">gpool<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then>
    <else pos:line="51" pos:column="5">else <block pos:line="51" pos:column="10">{
        <expr_stmt><expr><name pos:line="52" pos:column="9">rv<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <name pos:line="52" pos:column="14">APR_EINVAL<pos:position pos:line="52" pos:column="24"/></name></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></else></if>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">rv<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">==<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">APR_SUCCESS<pos:position pos:line="54" pos:column="26"/></name></expr>)<pos:position pos:line="54" pos:column="27"/></condition><then pos:line="54" pos:column="27"> <block pos:line="54" pos:column="28">{
        <comment type="block" pos:line="55" pos:column="9">/* check size */</comment>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">apr_shm_size_get<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">shm<pos:position pos:line="56" pos:column="33"/></name></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call> <operator pos:line="56" pos:column="35">!=<pos:position pos:line="56" pos:column="37"/></operator> <name pos:line="56" pos:column="38">size<pos:position pos:line="56" pos:column="42"/></name></expr>)<pos:position pos:line="56" pos:column="43"/></condition><then pos:line="56" pos:column="43"> <block pos:line="56" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">apr_shm_detach<pos:position pos:line="57" pos:column="27"/></name><argument_list pos:line="57" pos:column="27">(<argument><expr><name pos:line="57" pos:column="28">shm<pos:position pos:line="57" pos:column="31"/></name></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
            <return pos:line="58" pos:column="13">return <expr><name pos:line="58" pos:column="20">APR_EINVAL<pos:position pos:line="58" pos:column="30"/></name></expr>;<pos:position pos:line="58" pos:column="31"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="60" pos:column="9">ptr<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <call><name pos:line="60" pos:column="15">apr_shm_baseaddr_get<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><name pos:line="60" pos:column="36">shm<pos:position pos:line="60" pos:column="39"/></name></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">memcpy<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><operator pos:line="61" pos:column="16">&amp;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="17">desc<pos:position pos:line="61" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="23">ptr<pos:position pos:line="61" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="28">sizeof<argument_list pos:line="61" pos:column="34">(<argument><expr><name pos:line="61" pos:column="35">desc<pos:position pos:line="61" pos:column="39"/></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">desc<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">.<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">size<pos:position pos:line="62" pos:column="22"/></name></name> <operator pos:line="62" pos:column="23">!=<pos:position pos:line="62" pos:column="25"/></operator> <name pos:line="62" pos:column="26">item_size<pos:position pos:line="62" pos:column="35"/></name> <operator pos:line="62" pos:column="36">||<pos:position pos:line="62" pos:column="38"/></operator> <name><name pos:line="62" pos:column="39">desc<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">.<pos:position pos:line="62" pos:column="44"/></operator><name pos:line="62" pos:column="44">num<pos:position pos:line="62" pos:column="47"/></name></name> <operator pos:line="62" pos:column="48">!=<pos:position pos:line="62" pos:column="50"/></operator> <name pos:line="62" pos:column="51">item_num<pos:position pos:line="62" pos:column="59"/></name></expr>)<pos:position pos:line="62" pos:column="60"/></condition><then pos:line="62" pos:column="60"> <block pos:line="62" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">apr_shm_detach<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><name pos:line="63" pos:column="28">shm<pos:position pos:line="63" pos:column="31"/></name></expr></argument>)<pos:position pos:line="63" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
            <return pos:line="64" pos:column="13">return <expr><name pos:line="64" pos:column="20">APR_EINVAL<pos:position pos:line="64" pos:column="30"/></name></expr>;<pos:position pos:line="64" pos:column="31"/></return>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="66" pos:column="9">ptr<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <name pos:line="66" pos:column="15">ptr<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">+<pos:position pos:line="66" pos:column="20"/></operator> <sizeof pos:line="66" pos:column="21">sizeof<argument_list pos:line="66" pos:column="27">(<argument><expr><name pos:line="66" pos:column="28">desc<pos:position pos:line="66" pos:column="32"/></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></sizeof></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then>
    <else pos:line="68" pos:column="5">else <block pos:line="68" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="69" pos:column="9">apr_size_t<pos:position pos:line="69" pos:column="19"/></name></type> <name pos:line="69" pos:column="20">dsize<pos:position pos:line="69" pos:column="25"/></name> <init pos:line="69" pos:column="26">= <expr><name pos:line="69" pos:column="28">size<pos:position pos:line="69" pos:column="32"/></name> <operator pos:line="69" pos:column="33">-<pos:position pos:line="69" pos:column="34"/></operator> <sizeof pos:line="69" pos:column="35">sizeof<argument_list pos:line="69" pos:column="41">(<argument><expr><name pos:line="69" pos:column="42">sharedslotdesc_t<pos:position pos:line="69" pos:column="58"/></name></expr></argument>)<pos:position pos:line="69" pos:column="59"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="69" pos:column="60"/></decl_stmt>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">name<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">&amp;&amp;<pos:position pos:line="70" pos:column="28"/></operator> <name><name pos:line="70" pos:column="21">name<pos:position pos:line="70" pos:column="25"/></name><index pos:line="70" pos:column="25">[<expr><literal type="number" pos:line="70" pos:column="26">0<pos:position pos:line="70" pos:column="27"/></literal></expr>]<pos:position pos:line="70" pos:column="28"/></index></name> <operator pos:line="70" pos:column="29">!=<pos:position pos:line="70" pos:column="31"/></operator> <literal type="char" pos:line="70" pos:column="32">':'<pos:position pos:line="70" pos:column="35"/></literal></expr>)<pos:position pos:line="70" pos:column="36"/></condition><then pos:line="70" pos:column="36"> <block pos:line="70" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">apr_shm_remove<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">fname<pos:position pos:line="71" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="35">gpool<pos:position pos:line="71" pos:column="40"/></name></expr></argument>)<pos:position pos:line="71" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name pos:line="72" pos:column="13">rv<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">=<pos:position pos:line="72" pos:column="17"/></operator> <call><name pos:line="72" pos:column="18">apr_shm_create<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><operator pos:line="72" pos:column="33">&amp;<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="34">shm<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="39">size<pos:position pos:line="72" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="45">fname<pos:position pos:line="72" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="52">gpool<pos:position pos:line="72" pos:column="57"/></name></expr></argument>)<pos:position pos:line="72" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></then>
        <else pos:line="74" pos:column="9">else <block pos:line="74" pos:column="14">{
            <expr_stmt><expr><name pos:line="75" pos:column="13">rv<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <call><name pos:line="75" pos:column="18">apr_shm_create<pos:position pos:line="75" pos:column="32"/></name><argument_list pos:line="75" pos:column="32">(<argument><expr><operator pos:line="75" pos:column="33">&amp;<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="34">shm<pos:position pos:line="75" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="39">size<pos:position pos:line="75" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="45">NULL<pos:position pos:line="75" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="51">gpool<pos:position pos:line="75" pos:column="56"/></name></expr></argument>)<pos:position pos:line="75" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></else></if>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">rv<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">!=<pos:position pos:line="77" pos:column="18"/></operator> <name pos:line="77" pos:column="19">APR_SUCCESS<pos:position pos:line="77" pos:column="30"/></name></expr>)<pos:position pos:line="77" pos:column="31"/></condition><then pos:line="77" pos:column="31"> <block pos:line="77" pos:column="32">{
            <return pos:line="78" pos:column="13">return <expr><name pos:line="78" pos:column="20">rv<pos:position pos:line="78" pos:column="22"/></name></expr>;<pos:position pos:line="78" pos:column="23"/></return>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">name<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">&amp;&amp;<pos:position pos:line="80" pos:column="28"/></operator> <name><name pos:line="80" pos:column="21">name<pos:position pos:line="80" pos:column="25"/></name><index pos:line="80" pos:column="25">[<expr><literal type="number" pos:line="80" pos:column="26">0<pos:position pos:line="80" pos:column="27"/></literal></expr>]<pos:position pos:line="80" pos:column="28"/></index></name> <operator pos:line="80" pos:column="29">!=<pos:position pos:line="80" pos:column="31"/></operator> <literal type="char" pos:line="80" pos:column="32">':'<pos:position pos:line="80" pos:column="35"/></literal></expr>)<pos:position pos:line="80" pos:column="36"/></condition><then pos:line="80" pos:column="36"> <block pos:line="80" pos:column="37">{
            <comment type="block" pos:line="81" pos:column="13">/* Set permissions to shared memory
             * so it can be attached by child process
             * having different user credentials
             *
             * See apr:shmem/unix/shm.c
             */</comment>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">unixd_set_shm_perms<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">fname<pos:position pos:line="87" pos:column="38"/></name></expr></argument>)<pos:position pos:line="87" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="89" pos:column="9">ptr<pos:position pos:line="89" pos:column="12"/></name> <operator pos:line="89" pos:column="13">=<pos:position pos:line="89" pos:column="14"/></operator> <call><name pos:line="89" pos:column="15">apr_shm_baseaddr_get<pos:position pos:line="89" pos:column="35"/></name><argument_list pos:line="89" pos:column="35">(<argument><expr><name pos:line="89" pos:column="36">shm<pos:position pos:line="89" pos:column="39"/></name></expr></argument>)<pos:position pos:line="89" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="90" pos:column="9">desc<pos:position pos:line="90" pos:column="13"/></name><operator pos:line="90" pos:column="13">.<pos:position pos:line="90" pos:column="14"/></operator><name pos:line="90" pos:column="14">size<pos:position pos:line="90" pos:column="18"/></name></name> <operator pos:line="90" pos:column="19">=<pos:position pos:line="90" pos:column="20"/></operator> <name pos:line="90" pos:column="21">item_size<pos:position pos:line="90" pos:column="30"/></name></expr>;<pos:position pos:line="90" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="91" pos:column="9">desc<pos:position pos:line="91" pos:column="13"/></name><operator pos:line="91" pos:column="13">.<pos:position pos:line="91" pos:column="14"/></operator><name pos:line="91" pos:column="14">num<pos:position pos:line="91" pos:column="17"/></name></name> <operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator> <name pos:line="91" pos:column="20">item_num<pos:position pos:line="91" pos:column="28"/></name></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">desc<pos:position pos:line="92" pos:column="13"/></name><operator pos:line="92" pos:column="13">.<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">type<pos:position pos:line="92" pos:column="18"/></name></name> <operator pos:line="92" pos:column="19">=<pos:position pos:line="92" pos:column="20"/></operator> <name pos:line="92" pos:column="21">type<pos:position pos:line="92" pos:column="25"/></name></expr>;<pos:position pos:line="92" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">memcpy<pos:position pos:line="93" pos:column="15"/></name><argument_list pos:line="93" pos:column="15">(<argument><expr><name pos:line="93" pos:column="16">ptr<pos:position pos:line="93" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="21">&amp;<pos:position pos:line="93" pos:column="26"/></operator><name pos:line="93" pos:column="22">desc<pos:position pos:line="93" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="93" pos:column="28">sizeof<argument_list pos:line="93" pos:column="34">(<argument><expr><name pos:line="93" pos:column="35">desc<pos:position pos:line="93" pos:column="39"/></name></expr></argument>)<pos:position pos:line="93" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="93" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="94" pos:column="9">ptr<pos:position pos:line="94" pos:column="12"/></name> <operator pos:line="94" pos:column="13">=<pos:position pos:line="94" pos:column="14"/></operator> <name pos:line="94" pos:column="15">ptr<pos:position pos:line="94" pos:column="18"/></name> <operator pos:line="94" pos:column="19">+<pos:position pos:line="94" pos:column="20"/></operator> <sizeof pos:line="94" pos:column="21">sizeof<argument_list pos:line="94" pos:column="27">(<argument><expr><name pos:line="94" pos:column="28">desc<pos:position pos:line="94" pos:column="32"/></name></expr></argument>)<pos:position pos:line="94" pos:column="33"/></argument_list></sizeof></expr>;<pos:position pos:line="94" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">memset<pos:position pos:line="95" pos:column="15"/></name><argument_list pos:line="95" pos:column="15">(<argument><expr><name pos:line="95" pos:column="16">ptr<pos:position pos:line="95" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="21">0<pos:position pos:line="95" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="24">dsize<pos:position pos:line="95" pos:column="29"/></name></expr></argument>)<pos:position pos:line="95" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="31"/></expr_stmt>
        <comment type="block" pos:line="96" pos:column="9">/*
         * TODO: Error check the below... What error makes
         * sense if the restore fails? Any?
         */</comment>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">type<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">&amp;<pos:position pos:line="100" pos:column="23"/></operator> <name pos:line="100" pos:column="20">AP_SLOTMEM_TYPE_PERSIST<pos:position pos:line="100" pos:column="43"/></name></expr>)<pos:position pos:line="100" pos:column="44"/></condition><then pos:line="100" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="13">restore_slotmem<pos:position pos:line="101" pos:column="28"/></name><argument_list pos:line="101" pos:column="28">(<argument><expr><name pos:line="101" pos:column="29">ptr<pos:position pos:line="101" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="34">fname<pos:position pos:line="101" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="41">dsize<pos:position pos:line="101" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="48">pool<pos:position pos:line="101" pos:column="52"/></name></expr></argument>)<pos:position pos:line="101" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="54"/></expr_stmt></block></then></if>
    }<pos:position pos:line="102" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="104" pos:column="5">/* For the chained slotmem stuff */</comment>
    <expr_stmt><expr><name pos:line="105" pos:column="5">res<pos:position pos:line="105" pos:column="8"/></name> <operator pos:line="105" pos:column="9">=<pos:position pos:line="105" pos:column="10"/></operator> <operator pos:line="105" pos:column="11">(<pos:position pos:line="105" pos:column="12"/></operator><name pos:line="105" pos:column="12">ap_slotmem_instance_t<pos:position pos:line="105" pos:column="33"/></name> <operator pos:line="105" pos:column="34">*<pos:position pos:line="105" pos:column="35"/></operator><operator pos:line="105" pos:column="35">)<pos:position pos:line="105" pos:column="36"/></operator> <call><name pos:line="105" pos:column="37">apr_pcalloc<pos:position pos:line="105" pos:column="48"/></name><argument_list pos:line="105" pos:column="48">(<argument><expr><name pos:line="105" pos:column="49">gpool<pos:position pos:line="105" pos:column="54"/></name></expr></argument>,
                                                <argument><expr><sizeof pos:line="106" pos:column="49">sizeof<argument_list pos:line="106" pos:column="55">(<argument><expr><name pos:line="106" pos:column="56">ap_slotmem_instance_t<pos:position pos:line="106" pos:column="77"/></name></expr></argument>)<pos:position pos:line="106" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="106" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="107" pos:column="5">res<pos:position pos:line="107" pos:column="8"/></name><operator pos:line="107" pos:column="8">-&gt;<pos:position pos:line="107" pos:column="13"/></operator><name pos:line="107" pos:column="10">name<pos:position pos:line="107" pos:column="14"/></name></name> <operator pos:line="107" pos:column="15">=<pos:position pos:line="107" pos:column="16"/></operator> <call><name pos:line="107" pos:column="17">apr_pstrdup<pos:position pos:line="107" pos:column="28"/></name><argument_list pos:line="107" pos:column="28">(<argument><expr><name pos:line="107" pos:column="29">gpool<pos:position pos:line="107" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="36">fname<pos:position pos:line="107" pos:column="41"/></name></expr></argument>)<pos:position pos:line="107" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="108" pos:column="5">res<pos:position pos:line="108" pos:column="8"/></name><operator pos:line="108" pos:column="8">-&gt;<pos:position pos:line="108" pos:column="13"/></operator><name pos:line="108" pos:column="10">shm<pos:position pos:line="108" pos:column="13"/></name></name> <operator pos:line="108" pos:column="14">=<pos:position pos:line="108" pos:column="15"/></operator> <name pos:line="108" pos:column="16">shm<pos:position pos:line="108" pos:column="19"/></name></expr>;<pos:position pos:line="108" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="109" pos:column="5">res<pos:position pos:line="109" pos:column="8"/></name><operator pos:line="109" pos:column="8">-&gt;<pos:position pos:line="109" pos:column="13"/></operator><name pos:line="109" pos:column="10">base<pos:position pos:line="109" pos:column="14"/></name></name> <operator pos:line="109" pos:column="15">=<pos:position pos:line="109" pos:column="16"/></operator> <name pos:line="109" pos:column="17">ptr<pos:position pos:line="109" pos:column="20"/></name></expr>;<pos:position pos:line="109" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="110" pos:column="5">res<pos:position pos:line="110" pos:column="8"/></name><operator pos:line="110" pos:column="8">-&gt;<pos:position pos:line="110" pos:column="13"/></operator><name pos:line="110" pos:column="10">desc<pos:position pos:line="110" pos:column="14"/></name></name> <operator pos:line="110" pos:column="15">=<pos:position pos:line="110" pos:column="16"/></operator> <name pos:line="110" pos:column="17">desc<pos:position pos:line="110" pos:column="21"/></name></expr>;<pos:position pos:line="110" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="111" pos:column="5">res<pos:position pos:line="111" pos:column="8"/></name><operator pos:line="111" pos:column="8">-&gt;<pos:position pos:line="111" pos:column="13"/></operator><name pos:line="111" pos:column="10">gpool<pos:position pos:line="111" pos:column="15"/></name></name> <operator pos:line="111" pos:column="16">=<pos:position pos:line="111" pos:column="17"/></operator> <name pos:line="111" pos:column="18">gpool<pos:position pos:line="111" pos:column="23"/></name></expr>;<pos:position pos:line="111" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="112" pos:column="5">res<pos:position pos:line="112" pos:column="8"/></name><operator pos:line="112" pos:column="8">-&gt;<pos:position pos:line="112" pos:column="13"/></operator><name pos:line="112" pos:column="10">next<pos:position pos:line="112" pos:column="14"/></name></name> <operator pos:line="112" pos:column="15">=<pos:position pos:line="112" pos:column="16"/></operator> <name pos:line="112" pos:column="17">NULL<pos:position pos:line="112" pos:column="21"/></name></expr>;<pos:position pos:line="112" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="113" pos:column="5">res<pos:position pos:line="113" pos:column="8"/></name><operator pos:line="113" pos:column="8">-&gt;<pos:position pos:line="113" pos:column="13"/></operator><name pos:line="113" pos:column="10">inuse<pos:position pos:line="113" pos:column="15"/></name></name> <operator pos:line="113" pos:column="16">=<pos:position pos:line="113" pos:column="17"/></operator> <name pos:line="113" pos:column="18">ptr<pos:position pos:line="113" pos:column="21"/></name> <operator pos:line="113" pos:column="22">+<pos:position pos:line="113" pos:column="23"/></operator> <name pos:line="113" pos:column="24">basesize<pos:position pos:line="113" pos:column="32"/></name></expr>;<pos:position pos:line="113" pos:column="33"/></expr_stmt>
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><name pos:line="114" pos:column="9">globallistmem<pos:position pos:line="114" pos:column="22"/></name> <operator pos:line="114" pos:column="23">==<pos:position pos:line="114" pos:column="25"/></operator> <name pos:line="114" pos:column="26">NULL<pos:position pos:line="114" pos:column="30"/></name></expr>)<pos:position pos:line="114" pos:column="31"/></condition><then pos:line="114" pos:column="31"> <block pos:line="114" pos:column="32">{
        <expr_stmt><expr><name pos:line="115" pos:column="9">globallistmem<pos:position pos:line="115" pos:column="22"/></name> <operator pos:line="115" pos:column="23">=<pos:position pos:line="115" pos:column="24"/></operator> <name pos:line="115" pos:column="25">res<pos:position pos:line="115" pos:column="28"/></name></expr>;<pos:position pos:line="115" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then>
    <else pos:line="117" pos:column="5">else <block pos:line="117" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="118" pos:column="9">next<pos:position pos:line="118" pos:column="13"/></name><operator pos:line="118" pos:column="13">-&gt;<pos:position pos:line="118" pos:column="18"/></operator><name pos:line="118" pos:column="15">next<pos:position pos:line="118" pos:column="19"/></name></name> <operator pos:line="118" pos:column="20">=<pos:position pos:line="118" pos:column="21"/></operator> <name pos:line="118" pos:column="22">res<pos:position pos:line="118" pos:column="25"/></name></expr>;<pos:position pos:line="118" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="119" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="121" pos:column="5">*<pos:position pos:line="121" pos:column="6"/></operator><operator pos:line="121" pos:column="6">new<pos:position pos:line="121" pos:column="9"/></operator> <operator pos:line="121" pos:column="10">=<pos:position pos:line="121" pos:column="11"/></operator> <name pos:line="121" pos:column="12">res<pos:position pos:line="121" pos:column="15"/></name></expr>;<pos:position pos:line="121" pos:column="16"/></expr_stmt>
    <return pos:line="122" pos:column="5">return <expr><name pos:line="122" pos:column="12">APR_SUCCESS<pos:position pos:line="122" pos:column="23"/></name></expr>;<pos:position pos:line="122" pos:column="24"/></return>
}</unit>

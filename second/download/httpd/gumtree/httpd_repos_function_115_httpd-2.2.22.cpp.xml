<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_115_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mkrecord<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">user<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">record<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">apr_size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">rlen<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">passwd<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">alg<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">pw<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">cpw<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">120<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">pwin<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">MAX_STRING_LEN<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">pwv<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><name pos:line="7" pos:column="14">MAX_STRING_LEN<pos:position pos:line="7" pos:column="28"/></name></expr>]<pos:position pos:line="7" pos:column="29"/></index></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">salt<pos:position pos:line="8" pos:column="14"/></name><index pos:line="8" pos:column="14">[<expr><literal type="number" pos:line="8" pos:column="15">9<pos:position pos:line="8" pos:column="16"/></literal></expr>]<pos:position pos:line="8" pos:column="17"/></index></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">bufsize<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">passwd<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">!=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">pw<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">passwd<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then>
    <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">bufsize<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <sizeof pos:line="15" pos:column="19">sizeof<argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">pwin<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">apr_password_get<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><literal type="string" pos:line="16" pos:column="30">"New password: "<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">pwin<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="54">&amp;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="55">bufsize<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call> <operator pos:line="16" pos:column="64">!=<pos:position pos:line="16" pos:column="66"/></operator> <literal type="number" pos:line="16" pos:column="67">0<pos:position pos:line="16" pos:column="68"/></literal></expr>)<pos:position pos:line="16" pos:column="69"/></condition><then pos:line="16" pos:column="69"> <block pos:line="16" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">apr_snprintf<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">record<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="34">(<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">rlen<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">-<pos:position pos:line="17" pos:column="41"/></operator> <literal type="number" pos:line="17" pos:column="42">1<pos:position pos:line="17" pos:column="43"/></literal><operator pos:line="17" pos:column="43">)<pos:position pos:line="17" pos:column="44"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="46">"password too long (&gt;%"<pos:position pos:line="17" pos:column="72"/></literal>
                         <name pos:line="18" pos:column="26">APR_SIZE_T_FMT<pos:position pos:line="18" pos:column="40"/></name> <literal type="string" pos:line="18" pos:column="41">")"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="46">sizeof<argument_list pos:line="18" pos:column="52">(<argument><expr><name pos:line="18" pos:column="53">pwin<pos:position pos:line="18" pos:column="57"/></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></sizeof> <operator pos:line="18" pos:column="59">-<pos:position pos:line="18" pos:column="60"/></operator> <literal type="number" pos:line="18" pos:column="61">1<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><name pos:line="19" pos:column="20">ERR_OVERFLOW<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="21" pos:column="9">bufsize<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <sizeof pos:line="21" pos:column="19">sizeof<argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">pwv<pos:position pos:line="21" pos:column="29"/></name></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></sizeof></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">apr_password_get<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><literal type="string" pos:line="22" pos:column="26">"Re-type new password: "<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="52">pwv<pos:position pos:line="22" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="57">&amp;<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="58">bufsize<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">strcmp<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">pwin<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">pwv<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call> <operator pos:line="23" pos:column="31">!=<pos:position pos:line="23" pos:column="33"/></operator> <literal type="number" pos:line="23" pos:column="34">0<pos:position pos:line="23" pos:column="35"/></literal></expr>)<pos:position pos:line="23" pos:column="36"/></condition><then pos:line="23" pos:column="36"> <block pos:line="23" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">apr_cpystrn<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">record<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"password verification error"<pos:position pos:line="24" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="64">(<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="65">rlen<pos:position pos:line="24" pos:column="69"/></name> <operator pos:line="24" pos:column="70">-<pos:position pos:line="24" pos:column="71"/></operator> <literal type="number" pos:line="24" pos:column="72">1<pos:position pos:line="24" pos:column="73"/></literal><operator pos:line="24" pos:column="73">)<pos:position pos:line="24" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="76"/></expr_stmt>
            <return pos:line="25" pos:column="13">return <expr><name pos:line="25" pos:column="20">ERR_PWMISMATCH<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="27" pos:column="9">pw<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <name pos:line="27" pos:column="14">pwin<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">memset<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">pwv<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="28" pos:column="21">'\0'<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="27">sizeof<argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">pwin<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>
    <switch pos:line="30" pos:column="5">switch <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">alg<pos:position pos:line="30" pos:column="16"/></name></expr>)<pos:position pos:line="30" pos:column="17"/></condition> <block pos:line="30" pos:column="18">{

    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">ALG_APSHA<pos:position pos:line="32" pos:column="19"/></name></expr>:<pos:position pos:line="32" pos:column="20"/></case>
        <comment type="block" pos:line="33" pos:column="9">/* XXX cpw &gt;= 28 + strlen(sha1) chars - fixed len SHA */</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">apr_sha1_base64<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">pw<pos:position pos:line="34" pos:column="27"/></name></expr></argument>,<argument><expr><call><name pos:line="34" pos:column="28">strlen<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">pw<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="34" pos:column="39">cpw<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
        <break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>

    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">ALG_APMD5<pos:position pos:line="37" pos:column="19"/></name></expr>:<pos:position pos:line="37" pos:column="20"/></case>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">seed_rand<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">()<pos:position pos:line="38" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="25"/></condition><then pos:line="38" pos:column="25"> <block pos:line="38" pos:column="26">{
            <break pos:line="39" pos:column="13">break;<pos:position pos:line="39" pos:column="19"/></break>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">generate_salt<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><operator pos:line="41" pos:column="23">&amp;<pos:position pos:line="41" pos:column="28"/></operator><name><name pos:line="41" pos:column="24">salt<pos:position pos:line="41" pos:column="28"/></name><index pos:line="41" pos:column="28">[<expr><literal type="number" pos:line="41" pos:column="29">0<pos:position pos:line="41" pos:column="30"/></literal></expr>]<pos:position pos:line="41" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="33">8<pos:position pos:line="41" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">salt<pos:position pos:line="42" pos:column="13"/></name><index pos:line="42" pos:column="13">[<expr><literal type="number" pos:line="42" pos:column="14">8<pos:position pos:line="42" pos:column="15"/></literal></expr>]<pos:position pos:line="42" pos:column="16"/></index></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <literal type="char" pos:line="42" pos:column="19">'\0'<pos:position pos:line="42" pos:column="23"/></literal></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="44" pos:column="9">apr_md5_encode<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><specifier pos:line="44" pos:column="25">const<pos:position pos:line="44" pos:column="30"/></specifier> <name pos:line="44" pos:column="31">char<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">*<pos:position pos:line="44" pos:column="37"/></operator><operator pos:line="44" pos:column="37">)<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="38">pw<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="42">(<pos:position pos:line="44" pos:column="43"/></operator><specifier pos:line="44" pos:column="43">const<pos:position pos:line="44" pos:column="48"/></specifier> <name pos:line="44" pos:column="49">char<pos:position pos:line="44" pos:column="53"/></name> <operator pos:line="44" pos:column="54">*<pos:position pos:line="44" pos:column="55"/></operator><operator pos:line="44" pos:column="55">)<pos:position pos:line="44" pos:column="56"/></operator><name pos:line="44" pos:column="56">salt<pos:position pos:line="44" pos:column="60"/></name></expr></argument>,
                     <argument><expr><name pos:line="45" pos:column="22">cpw<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="27">sizeof<argument_list pos:line="45" pos:column="33">(<argument><expr><name pos:line="45" pos:column="34">cpw<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
        <break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break>

    <case pos:line="48" pos:column="5">case <expr><name pos:line="48" pos:column="10">ALG_PLAIN<pos:position pos:line="48" pos:column="19"/></name></expr>:<pos:position pos:line="48" pos:column="20"/></case>
        <comment type="block" pos:line="49" pos:column="9">/* XXX this len limitation is not in sync with any HTTPd len. */</comment>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">apr_cpystrn<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">cpw<pos:position pos:line="50" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="50" pos:column="25">pw<pos:position pos:line="50" pos:column="27"/></name></expr></argument>,<argument><expr><sizeof pos:line="50" pos:column="28">sizeof<argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">cpw<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
        <break pos:line="51" pos:column="9">break;<pos:position pos:line="51" pos:column="15"/></break>

<cpp:if pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">if<pos:position pos:line="53" pos:column="4"/></cpp:directive> <expr><operator pos:line="53" pos:column="5">(<pos:position pos:line="53" pos:column="6"/></operator><operator pos:line="53" pos:column="6">!<pos:position pos:line="53" pos:column="7"/></operator><operator pos:line="53" pos:column="7">(<pos:position pos:line="53" pos:column="8"/></operator><call><name pos:line="53" pos:column="8">defined<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">WIN32<pos:position pos:line="53" pos:column="21"/></name></expr></argument>)<pos:position pos:line="53" pos:column="22"/></argument_list></call> <operator pos:line="53" pos:column="23">||<pos:position pos:line="53" pos:column="25"/></operator> <call><name pos:line="53" pos:column="26">defined<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><name pos:line="53" pos:column="34">NETWARE<pos:position pos:line="53" pos:column="41"/></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call><operator pos:line="53" pos:column="42">)<pos:position pos:line="53" pos:column="43"/></operator><operator pos:line="53" pos:column="43">)<pos:position pos:line="53" pos:column="44"/></operator></expr></cpp:if>
    <case pos:line="54" pos:column="5">case <expr><name pos:line="54" pos:column="10">ALG_CRYPT<pos:position pos:line="54" pos:column="19"/></name></expr>:<pos:position pos:line="54" pos:column="20"/></case>
    <default pos:line="55" pos:column="5">default:<pos:position pos:line="55" pos:column="13"/></default>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">seed_rand<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">()<pos:position pos:line="56" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25"> <block pos:line="56" pos:column="26">{
            <break pos:line="57" pos:column="13">break;<pos:position pos:line="57" pos:column="19"/></break>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">to64<pos:position pos:line="59" pos:column="13"/></name><argument_list pos:line="59" pos:column="13">(<argument><expr><operator pos:line="59" pos:column="14">&amp;<pos:position pos:line="59" pos:column="19"/></operator><name><name pos:line="59" pos:column="15">salt<pos:position pos:line="59" pos:column="19"/></name><index pos:line="59" pos:column="19">[<expr><literal type="number" pos:line="59" pos:column="20">0<pos:position pos:line="59" pos:column="21"/></literal></expr>]<pos:position pos:line="59" pos:column="22"/></index></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="24">rand<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">()<pos:position pos:line="59" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="32">8<pos:position pos:line="59" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">salt<pos:position pos:line="60" pos:column="13"/></name><index pos:line="60" pos:column="13">[<expr><literal type="number" pos:line="60" pos:column="14">8<pos:position pos:line="60" pos:column="15"/></literal></expr>]<pos:position pos:line="60" pos:column="16"/></index></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <literal type="char" pos:line="60" pos:column="19">'\0'<pos:position pos:line="60" pos:column="23"/></literal></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="62" pos:column="9">apr_cpystrn<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><name pos:line="62" pos:column="21">cpw<pos:position pos:line="62" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="26">crypt<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">pw<pos:position pos:line="62" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="36">salt<pos:position pos:line="62" pos:column="40"/></name></expr></argument>)<pos:position pos:line="62" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="43">sizeof<argument_list pos:line="62" pos:column="49">(<argument><expr><name pos:line="62" pos:column="50">cpw<pos:position pos:line="62" pos:column="53"/></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></sizeof> <operator pos:line="62" pos:column="55">-<pos:position pos:line="62" pos:column="56"/></operator> <literal type="number" pos:line="62" pos:column="57">1<pos:position pos:line="62" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="60"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><call><name pos:line="63" pos:column="13">strlen<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><name pos:line="63" pos:column="20">pw<pos:position pos:line="63" pos:column="22"/></name></expr></argument>)<pos:position pos:line="63" pos:column="23"/></argument_list></call> <operator pos:line="63" pos:column="24">&gt;<pos:position pos:line="63" pos:column="28"/></operator> <literal type="number" pos:line="63" pos:column="26">8<pos:position pos:line="63" pos:column="27"/></literal></expr>)<pos:position pos:line="63" pos:column="28"/></condition><then pos:line="63" pos:column="28"> <block pos:line="63" pos:column="29">{
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">char<pos:position pos:line="64" pos:column="17"/></name> <modifier pos:line="64" pos:column="18">*<pos:position pos:line="64" pos:column="19"/></modifier></type><name pos:line="64" pos:column="19">truncpw<pos:position pos:line="64" pos:column="26"/></name> <init pos:line="64" pos:column="27">= <expr><call><name pos:line="64" pos:column="29">strdup<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name pos:line="64" pos:column="36">pw<pos:position pos:line="64" pos:column="38"/></name></expr></argument>)<pos:position pos:line="64" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">truncpw<pos:position pos:line="65" pos:column="20"/></name><index pos:line="65" pos:column="20">[<expr><literal type="number" pos:line="65" pos:column="21">8<pos:position pos:line="65" pos:column="22"/></literal></expr>]<pos:position pos:line="65" pos:column="23"/></index></name> <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <literal type="char" pos:line="65" pos:column="26">'\0'<pos:position pos:line="65" pos:column="30"/></literal></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><operator pos:line="66" pos:column="17">!<pos:position pos:line="66" pos:column="18"/></operator><call><name pos:line="66" pos:column="18">strcmp<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">cpw<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="30">crypt<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><name pos:line="66" pos:column="36">truncpw<pos:position pos:line="66" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="45">salt<pos:position pos:line="66" pos:column="49"/></name></expr></argument>)<pos:position pos:line="66" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="52"/></condition><then pos:line="66" pos:column="52"> <block pos:line="66" pos:column="53">{
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">apr_file_printf<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">errfile<pos:position pos:line="67" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="42">"Warning: Password truncated to 8 characters "<pos:position pos:line="67" pos:column="88"/></literal>
                                <literal type="string" pos:line="68" pos:column="33">"by CRYPT algorithm."<pos:position pos:line="68" pos:column="54"/></literal> <name pos:line="68" pos:column="55">NL<pos:position pos:line="68" pos:column="57"/></name></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="69" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">free<pos:position pos:line="70" pos:column="17"/></name><argument_list pos:line="70" pos:column="17">(<argument><expr><name pos:line="70" pos:column="18">truncpw<pos:position pos:line="70" pos:column="25"/></name></expr></argument>)<pos:position pos:line="70" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
        <break pos:line="72" pos:column="9">break;<pos:position pos:line="72" pos:column="15"/></break>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="74" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">memset<pos:position pos:line="75" pos:column="11"/></name><argument_list pos:line="75" pos:column="11">(<argument><expr><name pos:line="75" pos:column="12">pw<pos:position pos:line="75" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="75" pos:column="16">'\0'<pos:position pos:line="75" pos:column="20"/></literal></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="22">strlen<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">pw<pos:position pos:line="75" pos:column="31"/></name></expr></argument>)<pos:position pos:line="75" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="77" pos:column="5">/*
     * Check to see if the buffer is large enough to hold the username,
     * hash, and delimiters.
     */</comment>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">(<pos:position pos:line="81" pos:column="10"/></operator><call><name pos:line="81" pos:column="10">strlen<pos:position pos:line="81" pos:column="16"/></name><argument_list pos:line="81" pos:column="16">(<argument><expr><name pos:line="81" pos:column="17">user<pos:position pos:line="81" pos:column="21"/></name></expr></argument>)<pos:position pos:line="81" pos:column="22"/></argument_list></call> <operator pos:line="81" pos:column="23">+<pos:position pos:line="81" pos:column="24"/></operator> <literal type="number" pos:line="81" pos:column="25">1<pos:position pos:line="81" pos:column="26"/></literal> <operator pos:line="81" pos:column="27">+<pos:position pos:line="81" pos:column="28"/></operator> <call><name pos:line="81" pos:column="29">strlen<pos:position pos:line="81" pos:column="35"/></name><argument_list pos:line="81" pos:column="35">(<argument><expr><name pos:line="81" pos:column="36">cpw<pos:position pos:line="81" pos:column="39"/></name></expr></argument>)<pos:position pos:line="81" pos:column="40"/></argument_list></call><operator pos:line="81" pos:column="40">)<pos:position pos:line="81" pos:column="41"/></operator> <operator pos:line="81" pos:column="42">&gt;<pos:position pos:line="81" pos:column="46"/></operator> <operator pos:line="81" pos:column="44">(<pos:position pos:line="81" pos:column="45"/></operator><name pos:line="81" pos:column="45">rlen<pos:position pos:line="81" pos:column="49"/></name> <operator pos:line="81" pos:column="50">-<pos:position pos:line="81" pos:column="51"/></operator> <literal type="number" pos:line="81" pos:column="52">1<pos:position pos:line="81" pos:column="53"/></literal><operator pos:line="81" pos:column="53">)<pos:position pos:line="81" pos:column="54"/></operator></expr>)<pos:position pos:line="81" pos:column="55"/></condition><then pos:line="81" pos:column="55"> <block pos:line="81" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">apr_cpystrn<pos:position pos:line="82" pos:column="20"/></name><argument_list pos:line="82" pos:column="20">(<argument><expr><name pos:line="82" pos:column="21">record<pos:position pos:line="82" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="29">"resultant record too long"<pos:position pos:line="82" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="82" pos:column="58">(<pos:position pos:line="82" pos:column="59"/></operator><name pos:line="82" pos:column="59">rlen<pos:position pos:line="82" pos:column="63"/></name> <operator pos:line="82" pos:column="64">-<pos:position pos:line="82" pos:column="65"/></operator> <literal type="number" pos:line="82" pos:column="66">1<pos:position pos:line="82" pos:column="67"/></literal><operator pos:line="82" pos:column="67">)<pos:position pos:line="82" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="82" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="70"/></expr_stmt>
        <return pos:line="83" pos:column="9">return <expr><name pos:line="83" pos:column="16">ERR_OVERFLOW<pos:position pos:line="83" pos:column="28"/></name></expr>;<pos:position pos:line="83" pos:column="29"/></return>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">strcpy<pos:position pos:line="85" pos:column="11"/></name><argument_list pos:line="85" pos:column="11">(<argument><expr><name pos:line="85" pos:column="12">record<pos:position pos:line="85" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="20">user<pos:position pos:line="85" pos:column="24"/></name></expr></argument>)<pos:position pos:line="85" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">strcat<pos:position pos:line="86" pos:column="11"/></name><argument_list pos:line="86" pos:column="11">(<argument><expr><name pos:line="86" pos:column="12">record<pos:position pos:line="86" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="20">":"<pos:position pos:line="86" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">strcat<pos:position pos:line="87" pos:column="11"/></name><argument_list pos:line="87" pos:column="11">(<argument><expr><name pos:line="87" pos:column="12">record<pos:position pos:line="87" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="20">cpw<pos:position pos:line="87" pos:column="23"/></name></expr></argument>)<pos:position pos:line="87" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">strcat<pos:position pos:line="88" pos:column="11"/></name><argument_list pos:line="88" pos:column="11">(<argument><expr><name pos:line="88" pos:column="12">record<pos:position pos:line="88" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="20">"\n"<pos:position pos:line="88" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="26"/></expr_stmt>
    <return pos:line="89" pos:column="5">return <expr><literal type="number" pos:line="89" pos:column="12">0<pos:position pos:line="89" pos:column="13"/></literal></expr>;<pos:position pos:line="89" pos:column="14"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_165_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_fs_remove_locknull_member<pos:position pos:line="1" pos:column="49"/></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name pos:line="1" pos:column="50">apr_pool_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">p<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                                 <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">filename<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
						 <parameter><decl><type><name pos:line="3" pos:column="50">dav_buffer<pos:position pos:line="3" pos:column="60"/></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier></type><name pos:line="3" pos:column="62">pbuf<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="67"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_error<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">err<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">len<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">scanlen<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">scan<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">scanend<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">dirpath<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><call><name pos:line="10" pos:column="21">apr_pstrdup<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">p<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">filename<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">fname<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><call><name pos:line="11" pos:column="19">strrchr<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">dirpath<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="36">'/'<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">dirty<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">fname<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">!=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">NULL<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">fname<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">++<pos:position pos:line="15" pos:column="17"/></operator> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <literal type="char" pos:line="15" pos:column="20">'\0'<pos:position pos:line="15" pos:column="24"/></literal></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt></block></then>
    <else pos:line="16" pos:column="5">else
	<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">fname<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">dirpath<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name pos:line="18" pos:column="5">len<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">strlen<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">fname<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call> <operator pos:line="18" pos:column="25">+<pos:position pos:line="18" pos:column="26"/></operator> <literal type="number" pos:line="18" pos:column="27">1<pos:position pos:line="18" pos:column="28"/></literal></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">err<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">dav_fs_load_locknull_list<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">p<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">dirpath<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">pbuf<pos:position pos:line="20" pos:column="58"/></name></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call><operator pos:line="20" pos:column="59">)<pos:position pos:line="20" pos:column="60"/></operator> <operator pos:line="20" pos:column="61">!=<pos:position pos:line="20" pos:column="63"/></operator> <name pos:line="20" pos:column="64">NULL<pos:position pos:line="20" pos:column="68"/></name></expr>)<pos:position pos:line="20" pos:column="69"/></condition><then pos:line="20" pos:column="69"> <block pos:line="20" pos:column="70">{
	<comment type="block" pos:line="21" pos:column="9">/* ### add a higher level description? */</comment>
	<return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">err<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><expr><name pos:line="25" pos:column="10">scan<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name><name pos:line="25" pos:column="17">pbuf<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">buf<pos:position pos:line="25" pos:column="26"/></name></name></expr><operator pos:line="25" pos:column="26">,<pos:position pos:line="25" pos:column="27"/></operator> <expr><name pos:line="25" pos:column="28">scanend<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">=<pos:position pos:line="25" pos:column="37"/></operator> <name pos:line="25" pos:column="38">scan<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">+<pos:position pos:line="25" pos:column="44"/></operator> <name><name pos:line="25" pos:column="45">pbuf<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">-&gt;<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="51">cur_len<pos:position pos:line="25" pos:column="58"/></name></name></expr>;<pos:position pos:line="25" pos:column="59"/></init>
	 <condition><expr><name pos:line="26" pos:column="10">scan<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">&lt;<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="17">scanend<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></condition>
	 <incr><expr><name pos:line="27" pos:column="10">scan<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">+=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">scanlen<pos:position pos:line="27" pos:column="25"/></name></expr></incr>)<pos:position pos:line="27" pos:column="26"/></control> <block pos:line="27" pos:column="27">{
	<expr_stmt><expr><name pos:line="28" pos:column="9">scanlen<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">strlen<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">scan<pos:position pos:line="28" pos:column="30"/></name></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call> <operator pos:line="28" pos:column="32">+<pos:position pos:line="28" pos:column="33"/></operator> <literal type="number" pos:line="28" pos:column="34">1<pos:position pos:line="28" pos:column="35"/></literal></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">len<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">==<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">scanlen<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">&amp;&amp;<pos:position pos:line="29" pos:column="38"/></operator> <call><name pos:line="29" pos:column="31">memcmp<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">fname<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">scan<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">scanlen<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call> <operator pos:line="29" pos:column="60">==<pos:position pos:line="29" pos:column="62"/></operator> <literal type="number" pos:line="29" pos:column="63">0<pos:position pos:line="29" pos:column="64"/></literal></expr>)<pos:position pos:line="29" pos:column="65"/></condition><then pos:line="29" pos:column="65"> <block pos:line="29" pos:column="66">{
	    <expr_stmt><expr><name><name pos:line="30" pos:column="13">pbuf<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">cur_len<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">-=<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">scanlen<pos:position pos:line="30" pos:column="37"/></name></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="31" pos:column="13">memmove<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">scan<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="27">scan<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">+<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">scanlen<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="43">scanend<pos:position pos:line="31" pos:column="50"/></name> <operator pos:line="31" pos:column="51">-<pos:position pos:line="31" pos:column="52"/></operator> <operator pos:line="31" pos:column="53">(<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="54">scan<pos:position pos:line="31" pos:column="58"/></name> <operator pos:line="31" pos:column="59">+<pos:position pos:line="31" pos:column="60"/></operator> <name pos:line="31" pos:column="61">scanlen<pos:position pos:line="31" pos:column="68"/></name><operator pos:line="31" pos:column="68">)<pos:position pos:line="31" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="71"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="32" pos:column="13">dirty<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <literal type="number" pos:line="32" pos:column="21">1<pos:position pos:line="32" pos:column="22"/></literal></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt>
	    <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></for>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">dirty<pos:position pos:line="37" pos:column="14"/></name></expr>)<pos:position pos:line="37" pos:column="15"/></condition><then pos:line="37" pos:column="15"> <block pos:line="37" pos:column="16">{
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">err<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">dav_fs_save_locknull_list<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">p<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">dirpath<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="58">pbuf<pos:position pos:line="38" pos:column="62"/></name></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call><operator pos:line="38" pos:column="63">)<pos:position pos:line="38" pos:column="64"/></operator> <operator pos:line="38" pos:column="65">!=<pos:position pos:line="38" pos:column="67"/></operator> <name pos:line="38" pos:column="68">NULL<pos:position pos:line="38" pos:column="72"/></name></expr>)<pos:position pos:line="38" pos:column="73"/></condition><then pos:line="38" pos:column="73"> <block pos:line="38" pos:column="74">{
	    <comment type="block" pos:line="39" pos:column="13">/* ### add a higher level description? */</comment>
	    <return pos:line="40" pos:column="13">return <expr><name pos:line="40" pos:column="20">err<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">NULL<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

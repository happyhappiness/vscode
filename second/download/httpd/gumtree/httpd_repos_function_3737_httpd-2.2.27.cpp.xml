<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3737_httpd-2.2.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">apr__SHA256_Init<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">SHA256_CTX<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">context<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <block pos:line="1" pos:column="44">{
        <if pos:line="2" pos:column="9">if <condition pos:line="2" pos:column="12">(<expr><name pos:line="2" pos:column="13">context<pos:position pos:line="2" pos:column="20"/></name> <operator pos:line="2" pos:column="21">==<pos:position pos:line="2" pos:column="23"/></operator> <operator pos:line="2" pos:column="24">(<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">SHA256_CTX<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></operator><operator pos:line="2" pos:column="36">)<pos:position pos:line="2" pos:column="37"/></operator><literal type="number" pos:line="2" pos:column="37">0<pos:position pos:line="2" pos:column="38"/></literal></expr>)<pos:position pos:line="2" pos:column="39"/></condition><then pos:line="2" pos:column="39"> <block pos:line="2" pos:column="40">{
                <return pos:line="3" pos:column="17">return;<pos:position pos:line="3" pos:column="24"/></return>
        }<pos:position pos:line="4" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">MEMCPY_BCOPY<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name><name pos:line="5" pos:column="22">context<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">state<pos:position pos:line="5" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="38">sha256_initial_hash_value<pos:position pos:line="5" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="65">SHA256_DIGEST_LENGTH<pos:position pos:line="5" pos:column="85"/></name></expr></argument>)<pos:position pos:line="5" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">MEMSET_BZERO<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name><name pos:line="6" pos:column="22">context<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">buffer<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">SHA256_BLOCK_LENGTH<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">context<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">bitcount<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">=<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

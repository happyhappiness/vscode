<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2369_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_size_t<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">find_partial_start_sequence<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">include_ctx_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">ctx<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">data<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                              <parameter><decl><type><name pos:line="3" pos:column="47">apr_size_t<pos:position pos:line="3" pos:column="57"/></name></type> <name pos:line="3" pos:column="58">len<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>,
                                              <parameter><decl><type><name pos:line="4" pos:column="47">apr_size_t<pos:position pos:line="4" pos:column="57"/></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier></type><name pos:line="4" pos:column="59">release<pos:position pos:line="4" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="67"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">ssi_internal_ctx<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">intern<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><name><name pos:line="6" pos:column="39">ctx<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">-&gt;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="44">intern<pos:position pos:line="6" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">pos<pos:position pos:line="7" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="21">spos<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">slen<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name><name pos:line="8" pos:column="23">intern<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">start_seq_pat<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">pattern_len<pos:position pos:line="8" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">p<pos:position pos:line="9" pos:column="18"/></name></decl>, <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="21">ep<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">pos<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <name><name pos:line="11" pos:column="11">intern<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">parse_pos<pos:position pos:line="11" pos:column="28"/></name></name></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">ep<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name pos:line="12" pos:column="10">data<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">+<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">len<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">release<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>

    <do pos:line="15" pos:column="5">do <block pos:line="15" pos:column="8">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">p<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">data<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>

        <while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><name pos:line="18" pos:column="16">p<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">&lt;<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="20">ep<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&amp;&amp;<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="26">pos<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">&lt;<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="32">slen<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">&amp;&amp;<pos:position pos:line="18" pos:column="47"/></operator> <operator pos:line="18" pos:column="40">*<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">p<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">==<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="46">intern<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">start_seq<pos:position pos:line="18" pos:column="63"/></name><index pos:line="18" pos:column="63">[<expr><name pos:line="18" pos:column="64">pos<pos:position pos:line="18" pos:column="67"/></name></expr>]<pos:position pos:line="18" pos:column="68"/></index></name></expr>)<pos:position pos:line="18" pos:column="69"/></condition> <block pos:line="18" pos:column="70">{
            <expr_stmt><expr><operator pos:line="19" pos:column="13">++<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">p<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="20" pos:column="13">++<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">pos<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></while>

        <comment type="block" pos:line="23" pos:column="9">/* full match */</comment>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">pos<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">==<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">slen<pos:position pos:line="24" pos:column="24"/></name></expr>)<pos:position pos:line="24" pos:column="25"/></condition><then pos:line="24" pos:column="25"> <block pos:line="24" pos:column="26">{
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">intern<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">state<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="29">PARSE_DIRECTIVE<pos:position pos:line="25" pos:column="44"/></name></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
            <return pos:line="26" pos:column="13">return <expr><operator pos:line="26" pos:column="20">(<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">p<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">-<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">data<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator></expr>;<pos:position pos:line="26" pos:column="31"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="29" pos:column="9">/* the whole buffer is a partial match */</comment>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">p<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">==<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">ep<pos:position pos:line="30" pos:column="20"/></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21"> <block pos:line="30" pos:column="22">{
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">intern<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">parse_pos<pos:position pos:line="31" pos:column="30"/></name></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="33">pos<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
            <return pos:line="32" pos:column="13">return <expr><operator pos:line="32" pos:column="20">(<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">p<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">-<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">data<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">)<pos:position pos:line="32" pos:column="30"/></operator></expr>;<pos:position pos:line="32" pos:column="31"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="35" pos:column="9">/* No match so far, but again:
         * We must try all combinations, since the start_seq is a random
         * user supplied string
         *
         * So: look if the first char of start_seq appears somewhere within
         * the current partial match. If it does, try to start a match that
         * begins with this offset. (This can happen, if a strange
         * start_seq like "----&gt;" spans buffers)
         */</comment>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">spos<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">&lt;<pos:position pos:line="44" pos:column="22"/></operator> <name><name pos:line="44" pos:column="20">intern<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">parse_pos<pos:position pos:line="44" pos:column="37"/></name></name></expr>)<pos:position pos:line="44" pos:column="38"/></condition><then pos:line="44" pos:column="38"> <block pos:line="44" pos:column="39">{
            <do pos:line="45" pos:column="13">do <block pos:line="45" pos:column="16">{
                <expr_stmt><expr><operator pos:line="46" pos:column="17">++<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="19">spos<pos:position pos:line="46" pos:column="23"/></name></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="47" pos:column="17">++<pos:position pos:line="47" pos:column="19"/></operator><operator pos:line="47" pos:column="19">*<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">release<pos:position pos:line="47" pos:column="27"/></name></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name pos:line="48" pos:column="17">p<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <name><name pos:line="48" pos:column="21">intern<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">start_seq<pos:position pos:line="48" pos:column="38"/></name></name> <operator pos:line="48" pos:column="39">+<pos:position pos:line="48" pos:column="40"/></operator> <name pos:line="48" pos:column="41">spos<pos:position pos:line="48" pos:column="45"/></name></expr>;<pos:position pos:line="48" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">pos<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <name><name pos:line="49" pos:column="23">intern<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">parse_pos<pos:position pos:line="49" pos:column="40"/></name></name> <operator pos:line="49" pos:column="41">-<pos:position pos:line="49" pos:column="42"/></operator> <name pos:line="49" pos:column="43">spos<pos:position pos:line="49" pos:column="47"/></name></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt>

                <while pos:line="51" pos:column="17">while <condition pos:line="51" pos:column="23">(<expr><name pos:line="51" pos:column="24">pos<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">&amp;&amp;<pos:position pos:line="51" pos:column="38"/></operator> <operator pos:line="51" pos:column="31">*<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="32">p<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">!=<pos:position pos:line="51" pos:column="36"/></operator> <operator pos:line="51" pos:column="37">*<pos:position pos:line="51" pos:column="38"/></operator><name><name pos:line="51" pos:column="38">intern<pos:position pos:line="51" pos:column="44"/></name><operator pos:line="51" pos:column="44">-&gt;<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="46">start_seq<pos:position pos:line="51" pos:column="55"/></name></name></expr>)<pos:position pos:line="51" pos:column="56"/></condition> <block pos:line="51" pos:column="57">{
                    <expr_stmt><expr><operator pos:line="52" pos:column="21">++<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="23">p<pos:position pos:line="52" pos:column="24"/></name></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="53" pos:column="21">++<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">spos<pos:position pos:line="53" pos:column="27"/></name></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="54" pos:column="21">++<pos:position pos:line="54" pos:column="23"/></operator><operator pos:line="54" pos:column="23">*<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="24">release<pos:position pos:line="54" pos:column="31"/></name></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="55" pos:column="21">--<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="23">pos<pos:position pos:line="55" pos:column="26"/></name></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
                }<pos:position pos:line="56" pos:column="18"/></block></while>

                <comment type="block" pos:line="58" pos:column="17">/* if a matching beginning char was found, try to match the
                 * remainder of the old buffer.
                 */</comment>
                <if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">pos<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">&gt;<pos:position pos:line="61" pos:column="29"/></operator> <literal type="number" pos:line="61" pos:column="27">1<pos:position pos:line="61" pos:column="28"/></literal></expr>)<pos:position pos:line="61" pos:column="29"/></condition><then pos:line="61" pos:column="29"> <block pos:line="61" pos:column="30">{
                    <decl_stmt><decl><type><name pos:line="62" pos:column="21">apr_size_t<pos:position pos:line="62" pos:column="31"/></name></type> <name pos:line="62" pos:column="32">t<pos:position pos:line="62" pos:column="33"/></name> <init pos:line="62" pos:column="34">= <expr><literal type="number" pos:line="62" pos:column="36">1<pos:position pos:line="62" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="62" pos:column="38"/></decl_stmt>

                    <expr_stmt><expr><operator pos:line="64" pos:column="21">++<pos:position pos:line="64" pos:column="23"/></operator><name pos:line="64" pos:column="23">p<pos:position pos:line="64" pos:column="24"/></name></expr>;<pos:position pos:line="64" pos:column="25"/></expr_stmt>
                    <while pos:line="65" pos:column="21">while <condition pos:line="65" pos:column="27">(<expr><name pos:line="65" pos:column="28">t<pos:position pos:line="65" pos:column="29"/></name> <operator pos:line="65" pos:column="30">&lt;<pos:position pos:line="65" pos:column="34"/></operator> <name pos:line="65" pos:column="32">pos<pos:position pos:line="65" pos:column="35"/></name> <operator pos:line="65" pos:column="36">&amp;&amp;<pos:position pos:line="65" pos:column="46"/></operator> <operator pos:line="65" pos:column="39">*<pos:position pos:line="65" pos:column="40"/></operator><name pos:line="65" pos:column="40">p<pos:position pos:line="65" pos:column="41"/></name> <operator pos:line="65" pos:column="42">==<pos:position pos:line="65" pos:column="44"/></operator> <name><name pos:line="65" pos:column="45">intern<pos:position pos:line="65" pos:column="51"/></name><operator pos:line="65" pos:column="51">-&gt;<pos:position pos:line="65" pos:column="56"/></operator><name pos:line="65" pos:column="53">start_seq<pos:position pos:line="65" pos:column="62"/></name><index pos:line="65" pos:column="62">[<expr><name pos:line="65" pos:column="63">t<pos:position pos:line="65" pos:column="64"/></name></expr>]<pos:position pos:line="65" pos:column="65"/></index></name></expr>)<pos:position pos:line="65" pos:column="66"/></condition> <block pos:line="65" pos:column="67">{
                        <expr_stmt><expr><operator pos:line="66" pos:column="25">++<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="27">p<pos:position pos:line="66" pos:column="28"/></name></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt>
                        <expr_stmt><expr><operator pos:line="67" pos:column="25">++<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="27">t<pos:position pos:line="67" pos:column="28"/></name></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>
                    }<pos:position pos:line="68" pos:column="22"/></block></while>

                    <if pos:line="70" pos:column="21">if <condition pos:line="70" pos:column="24">(<expr><name pos:line="70" pos:column="25">t<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">==<pos:position pos:line="70" pos:column="29"/></operator> <name pos:line="70" pos:column="30">pos<pos:position pos:line="70" pos:column="33"/></name></expr>)<pos:position pos:line="70" pos:column="34"/></condition><then pos:line="70" pos:column="34"> <block pos:line="70" pos:column="35">{
                        <comment type="block" pos:line="71" pos:column="25">/* yeah, another partial match found in the *old*
                         * buffer, now test the *current* buffer for
                         * continuing match
                         */</comment>
                        <break pos:line="75" pos:column="25">break;<pos:position pos:line="75" pos:column="31"/></break>
                    }<pos:position pos:line="76" pos:column="22"/></block></then></if>
                }<pos:position pos:line="77" pos:column="18"/></block></then></if>
            }<pos:position pos:line="78" pos:column="14"/></block> while <condition pos:line="78" pos:column="21">(<expr><name pos:line="78" pos:column="22">pos<pos:position pos:line="78" pos:column="25"/></name> <operator pos:line="78" pos:column="26">&gt;<pos:position pos:line="78" pos:column="30"/></operator> <literal type="number" pos:line="78" pos:column="28">1<pos:position pos:line="78" pos:column="29"/></literal></expr>)<pos:position pos:line="78" pos:column="30"/></condition>;<pos:position pos:line="78" pos:column="31"/></do>

            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><name pos:line="80" pos:column="17">pos<pos:position pos:line="80" pos:column="20"/></name></expr>)<pos:position pos:line="80" pos:column="21"/></condition><then pos:line="80" pos:column="21"> <block pos:line="80" pos:column="22">{
                <continue pos:line="81" pos:column="17">continue;<pos:position pos:line="81" pos:column="26"/></continue>
            }<pos:position pos:line="82" pos:column="14"/></block></then></if>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>

        <break pos:line="85" pos:column="9">break;<pos:position pos:line="85" pos:column="15"/></break>
    }<pos:position pos:line="86" pos:column="6"/></block> while <condition pos:line="86" pos:column="13">(<expr><literal type="number" pos:line="86" pos:column="14">1<pos:position pos:line="86" pos:column="15"/></literal></expr>)<pos:position pos:line="86" pos:column="16"/></condition>;<pos:position pos:line="86" pos:column="17"/></do> <comment type="block" pos:line="86" pos:column="18">/* work hard to find a match ;-) */</comment>

    <comment type="block" pos:line="88" pos:column="5">/* no match at all, release all (wrongly) matched chars so far */</comment>
    <expr_stmt><expr><operator pos:line="89" pos:column="5">*<pos:position pos:line="89" pos:column="6"/></operator><name pos:line="89" pos:column="6">release<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">=<pos:position pos:line="89" pos:column="15"/></operator> <name><name pos:line="89" pos:column="16">intern<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">-&gt;<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="24">parse_pos<pos:position pos:line="89" pos:column="33"/></name></name></expr>;<pos:position pos:line="89" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="90" pos:column="5">intern<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">-&gt;<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="13">state<pos:position pos:line="90" pos:column="18"/></name></name> <operator pos:line="90" pos:column="19">=<pos:position pos:line="90" pos:column="20"/></operator> <name pos:line="90" pos:column="21">PARSE_PRE_HEAD<pos:position pos:line="90" pos:column="35"/></name></expr>;<pos:position pos:line="90" pos:column="36"/></expr_stmt>
    <return pos:line="91" pos:column="5">return <expr><literal type="number" pos:line="91" pos:column="12">0<pos:position pos:line="91" pos:column="13"/></literal></expr>;<pos:position pos:line="91" pos:column="14"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

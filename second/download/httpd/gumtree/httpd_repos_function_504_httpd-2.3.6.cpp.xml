<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_504_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mcheck<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">request_rec<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">r<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="35">union<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">VALUETYPE<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">p<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">magic<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">m<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">register<pos:position pos:line="3" pos:column="13"/></specifier> <name pos:line="3" pos:column="14">unsigned<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">long<pos:position pos:line="3" pos:column="27"/></name></type> <name pos:line="3" pos:column="28">l<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name><name pos:line="3" pos:column="32">m<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">value<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">.<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="41">l<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">unsigned<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">long<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">v<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">matched<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">m<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">value<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">.<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">s<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr>]<pos:position pos:line="7" pos:column="23"/></index></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <literal type="char" pos:line="7" pos:column="27">'x'<pos:position pos:line="7" pos:column="30"/></literal><operator pos:line="7" pos:column="30">)<pos:position pos:line="7" pos:column="31"/></operator> <operator pos:line="7" pos:column="32">&amp;&amp;<pos:position pos:line="7" pos:column="42"/></operator> <operator pos:line="7" pos:column="35">(<pos:position pos:line="7" pos:column="36"/></operator><name><name pos:line="7" pos:column="36">m<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">value<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">.<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="45">s<pos:position pos:line="7" pos:column="46"/></name><index pos:line="7" pos:column="46">[<expr><literal type="number" pos:line="7" pos:column="47">1<pos:position pos:line="7" pos:column="48"/></literal></expr>]<pos:position pos:line="7" pos:column="49"/></index></name> <operator pos:line="7" pos:column="50">==<pos:position pos:line="7" pos:column="52"/></operator> <literal type="char" pos:line="7" pos:column="53">'\0'<pos:position pos:line="7" pos:column="57"/></literal><operator pos:line="7" pos:column="57">)<pos:position pos:line="7" pos:column="58"/></operator></expr>)<pos:position pos:line="7" pos:column="59"/></condition><then pos:line="7" pos:column="59"> <block pos:line="7" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_rerror<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">APLOG_MARK<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">APLOG_ERR<pos:position pos:line="8" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="46">0<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">r<pos:position pos:line="8" pos:column="50"/></name></expr></argument>,
                    <argument><expr><name pos:line="9" pos:column="21">MODNAME<pos:position pos:line="9" pos:column="28"/></name> <literal type="string" pos:line="9" pos:column="29">": BOINK"<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <switch pos:line="13" pos:column="5">switch <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">m<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">type<pos:position pos:line="13" pos:column="20"/></name></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition> <block pos:line="13" pos:column="22">{
    <case pos:line="14" pos:column="5">case <expr><name pos:line="14" pos:column="10">BYTE<pos:position pos:line="14" pos:column="14"/></name></expr>:<pos:position pos:line="14" pos:column="15"/></case>
        <expr_stmt><expr><name pos:line="15" pos:column="9">v<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name><name pos:line="15" pos:column="13">p<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">b<pos:position pos:line="15" pos:column="17"/></name></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
        <break pos:line="16" pos:column="9">break;<pos:position pos:line="16" pos:column="15"/></break>

    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">SHORT<pos:position pos:line="18" pos:column="15"/></name></expr>:<pos:position pos:line="18" pos:column="16"/></case>
    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">BESHORT<pos:position pos:line="19" pos:column="17"/></name></expr>:<pos:position pos:line="19" pos:column="18"/></case>
    <case pos:line="20" pos:column="5">case <expr><name pos:line="20" pos:column="10">LESHORT<pos:position pos:line="20" pos:column="17"/></name></expr>:<pos:position pos:line="20" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="21" pos:column="9">v<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name><name pos:line="21" pos:column="13">p<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">h<pos:position pos:line="21" pos:column="17"/></name></name></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
        <break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>

    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">LONG<pos:position pos:line="24" pos:column="14"/></name></expr>:<pos:position pos:line="24" pos:column="15"/></case>
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">BELONG<pos:position pos:line="25" pos:column="16"/></name></expr>:<pos:position pos:line="25" pos:column="17"/></case>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">LELONG<pos:position pos:line="26" pos:column="16"/></name></expr>:<pos:position pos:line="26" pos:column="17"/></case>
    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">DATE<pos:position pos:line="27" pos:column="14"/></name></expr>:<pos:position pos:line="27" pos:column="15"/></case>
    <case pos:line="28" pos:column="5">case <expr><name pos:line="28" pos:column="10">BEDATE<pos:position pos:line="28" pos:column="16"/></name></expr>:<pos:position pos:line="28" pos:column="17"/></case>
    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">LEDATE<pos:position pos:line="29" pos:column="16"/></name></expr>:<pos:position pos:line="29" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="30" pos:column="9">v<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <name><name pos:line="30" pos:column="13">p<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">l<pos:position pos:line="30" pos:column="17"/></name></name></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>
        <break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>

    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">STRING<pos:position pos:line="33" pos:column="16"/></name></expr>:<pos:position pos:line="33" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="34" pos:column="9">l<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="number" pos:line="34" pos:column="13">0<pos:position pos:line="34" pos:column="14"/></literal></expr>;<pos:position pos:line="34" pos:column="15"/></expr_stmt>
        <comment type="block" pos:line="35" pos:column="9">/*
         * What we want here is: v = strncmp(m-&gt;value.s, p-&gt;s, m-&gt;vallen);
         * but ignoring any nulls.  bcmp doesn't give -/+/0 and isn't
         * universally available anyway.
         */</comment>
        <expr_stmt><expr><name pos:line="40" pos:column="9">v<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></expr_stmt>
        <block pos:line="41" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="42" pos:column="13">register<pos:position pos:line="42" pos:column="21"/></specifier> <name pos:line="42" pos:column="22">unsigned<pos:position pos:line="42" pos:column="30"/></name> <name pos:line="42" pos:column="31">char<pos:position pos:line="42" pos:column="35"/></name> <modifier pos:line="42" pos:column="36">*<pos:position pos:line="42" pos:column="37"/></modifier></type><name pos:line="42" pos:column="37">a<pos:position pos:line="42" pos:column="38"/></name> <init pos:line="42" pos:column="39">= <expr><operator pos:line="42" pos:column="41">(<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="42">unsigned<pos:position pos:line="42" pos:column="50"/></name> <name pos:line="42" pos:column="51">char<pos:position pos:line="42" pos:column="55"/></name> <operator pos:line="42" pos:column="56">*<pos:position pos:line="42" pos:column="57"/></operator><operator pos:line="42" pos:column="57">)<pos:position pos:line="42" pos:column="58"/></operator> <name><name pos:line="42" pos:column="59">m<pos:position pos:line="42" pos:column="60"/></name><operator pos:line="42" pos:column="60">-&gt;<pos:position pos:line="42" pos:column="65"/></operator><name pos:line="42" pos:column="62">value<pos:position pos:line="42" pos:column="67"/></name><operator pos:line="42" pos:column="67">.<pos:position pos:line="42" pos:column="68"/></operator><name pos:line="42" pos:column="68">s<pos:position pos:line="42" pos:column="69"/></name></name></expr></init></decl>;<pos:position pos:line="42" pos:column="70"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="43" pos:column="13">register<pos:position pos:line="43" pos:column="21"/></specifier> <name pos:line="43" pos:column="22">unsigned<pos:position pos:line="43" pos:column="30"/></name> <name pos:line="43" pos:column="31">char<pos:position pos:line="43" pos:column="35"/></name> <modifier pos:line="43" pos:column="36">*<pos:position pos:line="43" pos:column="37"/></modifier></type><name pos:line="43" pos:column="37">b<pos:position pos:line="43" pos:column="38"/></name> <init pos:line="43" pos:column="39">= <expr><operator pos:line="43" pos:column="41">(<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="42">unsigned<pos:position pos:line="43" pos:column="50"/></name> <name pos:line="43" pos:column="51">char<pos:position pos:line="43" pos:column="55"/></name> <operator pos:line="43" pos:column="56">*<pos:position pos:line="43" pos:column="57"/></operator><operator pos:line="43" pos:column="57">)<pos:position pos:line="43" pos:column="58"/></operator> <name><name pos:line="43" pos:column="59">p<pos:position pos:line="43" pos:column="60"/></name><operator pos:line="43" pos:column="60">-&gt;<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="62">s<pos:position pos:line="43" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="43" pos:column="64"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="44" pos:column="13">register<pos:position pos:line="44" pos:column="21"/></specifier> <name pos:line="44" pos:column="22">int<pos:position pos:line="44" pos:column="25"/></name></type> <name pos:line="44" pos:column="26">len<pos:position pos:line="44" pos:column="29"/></name> <init pos:line="44" pos:column="30">= <expr><name><name pos:line="44" pos:column="32">m<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">vallen<pos:position pos:line="44" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="44" pos:column="42"/></decl_stmt>

            <while pos:line="46" pos:column="13">while <condition pos:line="46" pos:column="19">(<expr><operator pos:line="46" pos:column="20">--<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">len<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">&gt;=<pos:position pos:line="46" pos:column="31"/></operator> <literal type="number" pos:line="46" pos:column="29">0<pos:position pos:line="46" pos:column="30"/></literal></expr>)<pos:position pos:line="46" pos:column="31"/></condition>
                <block type="pseudo"><if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><operator pos:line="47" pos:column="21">(<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">v<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <operator pos:line="47" pos:column="26">*<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">b<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">++<pos:position pos:line="47" pos:column="30"/></operator> <operator pos:line="47" pos:column="31">-<pos:position pos:line="47" pos:column="32"/></operator> <operator pos:line="47" pos:column="33">*<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="34">a<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">++<pos:position pos:line="47" pos:column="37"/></operator><operator pos:line="47" pos:column="37">)<pos:position pos:line="47" pos:column="38"/></operator> <operator pos:line="47" pos:column="39">!=<pos:position pos:line="47" pos:column="41"/></operator> <literal type="number" pos:line="47" pos:column="42">0<pos:position pos:line="47" pos:column="43"/></literal></expr>)<pos:position pos:line="47" pos:column="44"/></condition><then pos:line="47" pos:column="44">
                    <block type="pseudo"><break pos:line="48" pos:column="21">break;<pos:position pos:line="48" pos:column="27"/></break></block></then></if></block></while>
        }<pos:position pos:line="49" pos:column="10"/></block>
        <break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break>
    <default pos:line="51" pos:column="5">default:<pos:position pos:line="51" pos:column="13"/></default>
        <comment type="block" pos:line="52" pos:column="9">/*  bogosity, pretend that it just wasn't a match */</comment>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">ap_log_rerror<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">APLOG_MARK<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="35">APLOG_ERR<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="46">0<pos:position pos:line="53" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="49">r<pos:position pos:line="53" pos:column="50"/></name></expr></argument>,
                    <argument><expr><name pos:line="54" pos:column="21">MODNAME<pos:position pos:line="54" pos:column="28"/></name> <literal type="string" pos:line="54" pos:column="29">": invalid type %d in mcheck()."<pos:position pos:line="54" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="63">m<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">-&gt;<pos:position pos:line="54" pos:column="69"/></operator><name pos:line="54" pos:column="66">type<pos:position pos:line="54" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="72"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr>;<pos:position pos:line="55" pos:column="18"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></switch>

    <expr_stmt><expr><name pos:line="58" pos:column="5">v<pos:position pos:line="58" pos:column="6"/></name> <operator pos:line="58" pos:column="7">=<pos:position pos:line="58" pos:column="8"/></operator> <call><name pos:line="58" pos:column="9">signextend<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name><name pos:line="58" pos:column="20">r<pos:position pos:line="58" pos:column="21"/></name><operator pos:line="58" pos:column="21">-&gt;<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="23">server<pos:position pos:line="58" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="31">m<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">v<pos:position pos:line="58" pos:column="35"/></name></expr></argument>)<pos:position pos:line="58" pos:column="36"/></argument_list></call> <operator pos:line="58" pos:column="37">&amp;<pos:position pos:line="58" pos:column="42"/></operator> <name><name pos:line="58" pos:column="39">m<pos:position pos:line="58" pos:column="40"/></name><operator pos:line="58" pos:column="40">-&gt;<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="42">mask<pos:position pos:line="58" pos:column="46"/></name></name></expr>;<pos:position pos:line="58" pos:column="47"/></expr_stmt>

    <switch pos:line="60" pos:column="5">switch <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">m<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">reln<pos:position pos:line="60" pos:column="20"/></name></name></expr>)<pos:position pos:line="60" pos:column="21"/></condition> <block pos:line="60" pos:column="22">{
    <case pos:line="61" pos:column="5">case <expr><literal type="char" pos:line="61" pos:column="10">'x'<pos:position pos:line="61" pos:column="13"/></literal></expr>:<pos:position pos:line="61" pos:column="14"/></case>
<cpp:if pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">if<pos:position pos:line="62" pos:column="4"/></cpp:directive> <expr><name pos:line="62" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="62" pos:column="21"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">ap_log_rerror<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">APLOG_MARK<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="35">APLOG_DEBUG<pos:position pos:line="63" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="48">0<pos:position pos:line="63" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="51">r<pos:position pos:line="63" pos:column="52"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="64" pos:column="21">"%lu == *any* = 1"<pos:position pos:line="64" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="41">v<pos:position pos:line="64" pos:column="42"/></name></expr></argument>)<pos:position pos:line="64" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="66" pos:column="9">matched<pos:position pos:line="66" pos:column="16"/></name> <operator pos:line="66" pos:column="17">=<pos:position pos:line="66" pos:column="18"/></operator> <literal type="number" pos:line="66" pos:column="19">1<pos:position pos:line="66" pos:column="20"/></literal></expr>;<pos:position pos:line="66" pos:column="21"/></expr_stmt>
        <break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>

    <case pos:line="69" pos:column="5">case <expr><literal type="char" pos:line="69" pos:column="10">'!'<pos:position pos:line="69" pos:column="13"/></literal></expr>:<pos:position pos:line="69" pos:column="14"/></case>
        <expr_stmt><expr><name pos:line="70" pos:column="9">matched<pos:position pos:line="70" pos:column="16"/></name> <operator pos:line="70" pos:column="17">=<pos:position pos:line="70" pos:column="18"/></operator> <name pos:line="70" pos:column="19">v<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">!=<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">l<pos:position pos:line="70" pos:column="25"/></name></expr>;<pos:position pos:line="70" pos:column="26"/></expr_stmt>
<cpp:if pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">if<pos:position pos:line="71" pos:column="4"/></cpp:directive> <expr><name pos:line="71" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="71" pos:column="21"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">ap_log_rerror<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><name pos:line="72" pos:column="23">APLOG_MARK<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="35">APLOG_DEBUG<pos:position pos:line="72" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="48">0<pos:position pos:line="72" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="51">r<pos:position pos:line="72" pos:column="52"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="73" pos:column="21">"%lu != %lu = %d"<pos:position pos:line="73" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="40">v<pos:position pos:line="73" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="43">l<pos:position pos:line="73" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">matched<pos:position pos:line="73" pos:column="53"/></name></expr></argument>)<pos:position pos:line="73" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="75" pos:column="9">break;<pos:position pos:line="75" pos:column="15"/></break>

    <case pos:line="77" pos:column="5">case <expr><literal type="char" pos:line="77" pos:column="10">'='<pos:position pos:line="77" pos:column="13"/></literal></expr>:<pos:position pos:line="77" pos:column="14"/></case>
        <expr_stmt><expr><name pos:line="78" pos:column="9">matched<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <name pos:line="78" pos:column="19">v<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">==<pos:position pos:line="78" pos:column="23"/></operator> <name pos:line="78" pos:column="24">l<pos:position pos:line="78" pos:column="25"/></name></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt>
<cpp:if pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">if<pos:position pos:line="79" pos:column="4"/></cpp:directive> <expr><name pos:line="79" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="79" pos:column="21"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">ap_log_rerror<pos:position pos:line="80" pos:column="22"/></name><argument_list pos:line="80" pos:column="22">(<argument><expr><name pos:line="80" pos:column="23">APLOG_MARK<pos:position pos:line="80" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="35">APLOG_DEBUG<pos:position pos:line="80" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="48">0<pos:position pos:line="80" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="51">r<pos:position pos:line="80" pos:column="52"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="81" pos:column="21">"%lu == %lu = %d"<pos:position pos:line="81" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="40">v<pos:position pos:line="81" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="43">l<pos:position pos:line="81" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="46">matched<pos:position pos:line="81" pos:column="53"/></name></expr></argument>)<pos:position pos:line="81" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="83" pos:column="9">break;<pos:position pos:line="83" pos:column="15"/></break>

    <case pos:line="85" pos:column="5">case <expr><literal type="char" pos:line="85" pos:column="10">'&gt;'<pos:position pos:line="85" pos:column="16"/></literal></expr>:<pos:position pos:line="85" pos:column="14"/></case>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name><name pos:line="86" pos:column="13">m<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">-&gt;<pos:position pos:line="86" pos:column="19"/></operator><name pos:line="86" pos:column="16">flag<pos:position pos:line="86" pos:column="20"/></name></name> <operator pos:line="86" pos:column="21">&amp;<pos:position pos:line="86" pos:column="26"/></operator> <name pos:line="86" pos:column="23">UNSIGNED<pos:position pos:line="86" pos:column="31"/></name></expr>)<pos:position pos:line="86" pos:column="32"/></condition><then pos:line="86" pos:column="32"> <block pos:line="86" pos:column="33">{
            <expr_stmt><expr><name pos:line="87" pos:column="13">matched<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">=<pos:position pos:line="87" pos:column="22"/></operator> <name pos:line="87" pos:column="23">v<pos:position pos:line="87" pos:column="24"/></name> <operator pos:line="87" pos:column="25">&gt;<pos:position pos:line="87" pos:column="29"/></operator> <name pos:line="87" pos:column="27">l<pos:position pos:line="87" pos:column="28"/></name></expr>;<pos:position pos:line="87" pos:column="29"/></expr_stmt>
<cpp:if pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">if<pos:position pos:line="88" pos:column="4"/></cpp:directive> <expr><name pos:line="88" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="88" pos:column="21"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">ap_log_rerror<pos:position pos:line="89" pos:column="26"/></name><argument_list pos:line="89" pos:column="26">(<argument><expr><name pos:line="89" pos:column="27">APLOG_MARK<pos:position pos:line="89" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="39">APLOG_DEBUG<pos:position pos:line="89" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="52">0<pos:position pos:line="89" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="55">r<pos:position pos:line="89" pos:column="56"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="90" pos:column="25">"%lu &gt; %lu = %d"<pos:position pos:line="90" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="43">v<pos:position pos:line="90" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="46">l<pos:position pos:line="90" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="49">matched<pos:position pos:line="90" pos:column="56"/></name></expr></argument>)<pos:position pos:line="90" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif<pos:position pos:line="91" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="92" pos:column="10"/></block></then>
        <else pos:line="93" pos:column="9">else <block pos:line="93" pos:column="14">{
            <expr_stmt><expr><name pos:line="94" pos:column="13">matched<pos:position pos:line="94" pos:column="20"/></name> <operator pos:line="94" pos:column="21">=<pos:position pos:line="94" pos:column="22"/></operator> <operator pos:line="94" pos:column="23">(<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="24">long<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">)<pos:position pos:line="94" pos:column="29"/></operator> <name pos:line="94" pos:column="30">v<pos:position pos:line="94" pos:column="31"/></name> <operator pos:line="94" pos:column="32">&gt;<pos:position pos:line="94" pos:column="36"/></operator> <operator pos:line="94" pos:column="34">(<pos:position pos:line="94" pos:column="35"/></operator><name pos:line="94" pos:column="35">long<pos:position pos:line="94" pos:column="39"/></name><operator pos:line="94" pos:column="39">)<pos:position pos:line="94" pos:column="40"/></operator> <name pos:line="94" pos:column="41">l<pos:position pos:line="94" pos:column="42"/></name></expr>;<pos:position pos:line="94" pos:column="43"/></expr_stmt>
<cpp:if pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">if<pos:position pos:line="95" pos:column="4"/></cpp:directive> <expr><name pos:line="95" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="95" pos:column="21"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">ap_log_rerror<pos:position pos:line="96" pos:column="26"/></name><argument_list pos:line="96" pos:column="26">(<argument><expr><name pos:line="96" pos:column="27">APLOG_MARK<pos:position pos:line="96" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="39">APLOG_DEBUG<pos:position pos:line="96" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="96" pos:column="52">0<pos:position pos:line="96" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="55">r<pos:position pos:line="96" pos:column="56"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="97" pos:column="25">"%ld &gt; %ld = %d"<pos:position pos:line="97" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="43">v<pos:position pos:line="97" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="46">l<pos:position pos:line="97" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="49">matched<pos:position pos:line="97" pos:column="56"/></name></expr></argument>)<pos:position pos:line="97" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="99" pos:column="10"/></block></else></if>
        <break pos:line="100" pos:column="9">break;<pos:position pos:line="100" pos:column="15"/></break>

    <case pos:line="102" pos:column="5">case <expr><literal type="char" pos:line="102" pos:column="10">'&lt;'<pos:position pos:line="102" pos:column="16"/></literal></expr>:<pos:position pos:line="102" pos:column="14"/></case>
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name><name pos:line="103" pos:column="13">m<pos:position pos:line="103" pos:column="14"/></name><operator pos:line="103" pos:column="14">-&gt;<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="16">flag<pos:position pos:line="103" pos:column="20"/></name></name> <operator pos:line="103" pos:column="21">&amp;<pos:position pos:line="103" pos:column="26"/></operator> <name pos:line="103" pos:column="23">UNSIGNED<pos:position pos:line="103" pos:column="31"/></name></expr>)<pos:position pos:line="103" pos:column="32"/></condition><then pos:line="103" pos:column="32"> <block pos:line="103" pos:column="33">{
            <expr_stmt><expr><name pos:line="104" pos:column="13">matched<pos:position pos:line="104" pos:column="20"/></name> <operator pos:line="104" pos:column="21">=<pos:position pos:line="104" pos:column="22"/></operator> <name pos:line="104" pos:column="23">v<pos:position pos:line="104" pos:column="24"/></name> <operator pos:line="104" pos:column="25">&lt;<pos:position pos:line="104" pos:column="29"/></operator> <name pos:line="104" pos:column="27">l<pos:position pos:line="104" pos:column="28"/></name></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>
<cpp:if pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">if<pos:position pos:line="105" pos:column="4"/></cpp:directive> <expr><name pos:line="105" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="105" pos:column="21"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">ap_log_rerror<pos:position pos:line="106" pos:column="26"/></name><argument_list pos:line="106" pos:column="26">(<argument><expr><name pos:line="106" pos:column="27">APLOG_MARK<pos:position pos:line="106" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="39">APLOG_DEBUG<pos:position pos:line="106" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="52">0<pos:position pos:line="106" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="55">r<pos:position pos:line="106" pos:column="56"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="107" pos:column="25">"%lu &lt; %lu = %d"<pos:position pos:line="107" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="43">v<pos:position pos:line="107" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="46">l<pos:position pos:line="107" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="49">matched<pos:position pos:line="107" pos:column="56"/></name></expr></argument>)<pos:position pos:line="107" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="109" pos:column="10"/></block></then>
        <else pos:line="110" pos:column="9">else <block pos:line="110" pos:column="14">{
            <expr_stmt><expr><name pos:line="111" pos:column="13">matched<pos:position pos:line="111" pos:column="20"/></name> <operator pos:line="111" pos:column="21">=<pos:position pos:line="111" pos:column="22"/></operator> <operator pos:line="111" pos:column="23">(<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="24">long<pos:position pos:line="111" pos:column="28"/></name><operator pos:line="111" pos:column="28">)<pos:position pos:line="111" pos:column="29"/></operator> <name pos:line="111" pos:column="30">v<pos:position pos:line="111" pos:column="31"/></name> <operator pos:line="111" pos:column="32">&lt;<pos:position pos:line="111" pos:column="36"/></operator> <operator pos:line="111" pos:column="34">(<pos:position pos:line="111" pos:column="35"/></operator><name pos:line="111" pos:column="35">long<pos:position pos:line="111" pos:column="39"/></name><operator pos:line="111" pos:column="39">)<pos:position pos:line="111" pos:column="40"/></operator> <name pos:line="111" pos:column="41">l<pos:position pos:line="111" pos:column="42"/></name></expr>;<pos:position pos:line="111" pos:column="43"/></expr_stmt>
<cpp:if pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">if<pos:position pos:line="112" pos:column="4"/></cpp:directive> <expr><name pos:line="112" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="112" pos:column="21"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="113" pos:column="13">ap_log_rerror<pos:position pos:line="113" pos:column="26"/></name><argument_list pos:line="113" pos:column="26">(<argument><expr><name pos:line="113" pos:column="27">APLOG_MARK<pos:position pos:line="113" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="39">APLOG_DEBUG<pos:position pos:line="113" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="52">0<pos:position pos:line="113" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="55">r<pos:position pos:line="113" pos:column="56"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="114" pos:column="25">"%ld &lt; %ld = %d"<pos:position pos:line="114" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="43">v<pos:position pos:line="114" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="46">l<pos:position pos:line="114" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="49">matched<pos:position pos:line="114" pos:column="56"/></name></expr></argument>)<pos:position pos:line="114" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">endif<pos:position pos:line="115" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="116" pos:column="10"/></block></else></if>
        <break pos:line="117" pos:column="9">break;<pos:position pos:line="117" pos:column="15"/></break>

    <case pos:line="119" pos:column="5">case <expr><literal type="char" pos:line="119" pos:column="10">'&amp;'<pos:position pos:line="119" pos:column="17"/></literal></expr>:<pos:position pos:line="119" pos:column="14"/></case>
        <expr_stmt><expr><name pos:line="120" pos:column="9">matched<pos:position pos:line="120" pos:column="16"/></name> <operator pos:line="120" pos:column="17">=<pos:position pos:line="120" pos:column="18"/></operator> <operator pos:line="120" pos:column="19">(<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="20">v<pos:position pos:line="120" pos:column="21"/></name> <operator pos:line="120" pos:column="22">&amp;<pos:position pos:line="120" pos:column="27"/></operator> <name pos:line="120" pos:column="24">l<pos:position pos:line="120" pos:column="25"/></name><operator pos:line="120" pos:column="25">)<pos:position pos:line="120" pos:column="26"/></operator> <operator pos:line="120" pos:column="27">==<pos:position pos:line="120" pos:column="29"/></operator> <name pos:line="120" pos:column="30">l<pos:position pos:line="120" pos:column="31"/></name></expr>;<pos:position pos:line="120" pos:column="32"/></expr_stmt>
<cpp:if pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">if<pos:position pos:line="121" pos:column="4"/></cpp:directive> <expr><name pos:line="121" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="121" pos:column="21"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">ap_log_rerror<pos:position pos:line="122" pos:column="22"/></name><argument_list pos:line="122" pos:column="22">(<argument><expr><name pos:line="122" pos:column="23">APLOG_MARK<pos:position pos:line="122" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="35">APLOG_DEBUG<pos:position pos:line="122" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="48">0<pos:position pos:line="122" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="51">r<pos:position pos:line="122" pos:column="52"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="123" pos:column="21">"((%lx &amp; %lx) == %lx) = %d"<pos:position pos:line="123" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="50">v<pos:position pos:line="123" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="53">l<pos:position pos:line="123" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="56">l<pos:position pos:line="123" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="59">matched<pos:position pos:line="123" pos:column="66"/></name></expr></argument>)<pos:position pos:line="123" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">endif<pos:position pos:line="124" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="125" pos:column="9">break;<pos:position pos:line="125" pos:column="15"/></break>

    <case pos:line="127" pos:column="5">case <expr><literal type="char" pos:line="127" pos:column="10">'^'<pos:position pos:line="127" pos:column="13"/></literal></expr>:<pos:position pos:line="127" pos:column="14"/></case>
        <expr_stmt><expr><name pos:line="128" pos:column="9">matched<pos:position pos:line="128" pos:column="16"/></name> <operator pos:line="128" pos:column="17">=<pos:position pos:line="128" pos:column="18"/></operator> <operator pos:line="128" pos:column="19">(<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="20">v<pos:position pos:line="128" pos:column="21"/></name> <operator pos:line="128" pos:column="22">&amp;<pos:position pos:line="128" pos:column="27"/></operator> <name pos:line="128" pos:column="24">l<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">)<pos:position pos:line="128" pos:column="26"/></operator> <operator pos:line="128" pos:column="27">!=<pos:position pos:line="128" pos:column="29"/></operator> <name pos:line="128" pos:column="30">l<pos:position pos:line="128" pos:column="31"/></name></expr>;<pos:position pos:line="128" pos:column="32"/></expr_stmt>
<cpp:if pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">if<pos:position pos:line="129" pos:column="4"/></cpp:directive> <expr><name pos:line="129" pos:column="5">MIME_MAGIC_DEBUG<pos:position pos:line="129" pos:column="21"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">ap_log_rerror<pos:position pos:line="130" pos:column="22"/></name><argument_list pos:line="130" pos:column="22">(<argument><expr><name pos:line="130" pos:column="23">APLOG_MARK<pos:position pos:line="130" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="35">APLOG_DEBUG<pos:position pos:line="130" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="48">0<pos:position pos:line="130" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="51">r<pos:position pos:line="130" pos:column="52"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="131" pos:column="21">"((%lx &amp; %lx) != %lx) = %d"<pos:position pos:line="131" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="50">v<pos:position pos:line="131" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="53">l<pos:position pos:line="131" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="56">l<pos:position pos:line="131" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="59">matched<pos:position pos:line="131" pos:column="66"/></name></expr></argument>)<pos:position pos:line="131" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">endif<pos:position pos:line="132" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="133" pos:column="9">break;<pos:position pos:line="133" pos:column="15"/></break>

    <default pos:line="135" pos:column="5">default:<pos:position pos:line="135" pos:column="13"/></default>
        <comment type="block" pos:line="136" pos:column="9">/* bogosity, pretend it didn't match */</comment>
        <expr_stmt><expr><name pos:line="137" pos:column="9">matched<pos:position pos:line="137" pos:column="16"/></name> <operator pos:line="137" pos:column="17">=<pos:position pos:line="137" pos:column="18"/></operator> <literal type="number" pos:line="137" pos:column="19">0<pos:position pos:line="137" pos:column="20"/></literal></expr>;<pos:position pos:line="137" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="138" pos:column="9">ap_log_rerror<pos:position pos:line="138" pos:column="22"/></name><argument_list pos:line="138" pos:column="22">(<argument><expr><name pos:line="138" pos:column="23">APLOG_MARK<pos:position pos:line="138" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="35">APLOG_ERR<pos:position pos:line="138" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="138" pos:column="46">0<pos:position pos:line="138" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="49">r<pos:position pos:line="138" pos:column="50"/></name></expr></argument>,
                    <argument><expr><name pos:line="139" pos:column="21">MODNAME<pos:position pos:line="139" pos:column="28"/></name> <literal type="string" pos:line="139" pos:column="29">": mcheck: can't happen: invalid relation %d."<pos:position pos:line="139" pos:column="75"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="140" pos:column="21">m<pos:position pos:line="140" pos:column="22"/></name><operator pos:line="140" pos:column="22">-&gt;<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="24">reln<pos:position pos:line="140" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="30"/></expr_stmt>
        <break pos:line="141" pos:column="9">break;<pos:position pos:line="141" pos:column="15"/></break>
    }<pos:position pos:line="142" pos:column="6"/></block></switch>

    <return pos:line="144" pos:column="5">return <expr><name pos:line="144" pos:column="12">matched<pos:position pos:line="144" pos:column="19"/></name></expr>;<pos:position pos:line="144" pos:column="20"/></return>
}<pos:position pos:line="145" pos:column="2"/></block></function></unit>

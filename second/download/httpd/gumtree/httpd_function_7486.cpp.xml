<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7486.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_init_ctx_tls_extensions<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">server_rec<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">s<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">apr_pool_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">p<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">apr_pool_t<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">ptemp<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="4" pos:column="41">modssl_ctx_t<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">mctx<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="60"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <comment type="block" pos:line="6" pos:column="5">/*
     * Configure TLS extensions support
     */</comment>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ap_log_error<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">APLOG_MARK<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="30">APLOG_DEBUG<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="43">0<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">s<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="49">APLOGNO<pos:position pos:line="9" pos:column="56"/></name><argument_list pos:line="9" pos:column="56">(<argument><expr><literal type="number" pos:line="9" pos:column="57">01893<pos:position pos:line="9" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call>
                 <literal type="string" pos:line="10" pos:column="18">"Configuring TLS extension handling"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/*
     * Server name indication (SNI)
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><call><name pos:line="15" pos:column="10">SSL_CTX_set_tlsext_servername_callback<pos:position pos:line="15" pos:column="48"/></name><argument_list pos:line="15" pos:column="48">(<argument><expr><name><name pos:line="15" pos:column="49">mctx<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">-&gt;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="55">ssl_ctx<pos:position pos:line="15" pos:column="62"/></name></name></expr></argument>,
                          <argument><expr><name pos:line="16" pos:column="27">ssl_callback_ServerNameIndication<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call> <operator pos:line="16" pos:column="62">||<pos:position pos:line="16" pos:column="64"/></operator>
        <operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">SSL_CTX_set_tlsext_servername_arg<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><name><name pos:line="17" pos:column="44">mctx<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">ssl_ctx<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">mctx<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="65"/></condition><then pos:line="17" pos:column="65"> <block pos:line="17" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_EMERG<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="47">0<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">s<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="53">APLOGNO<pos:position pos:line="18" pos:column="60"/></name><argument_list pos:line="18" pos:column="60">(<argument><expr><literal type="number" pos:line="18" pos:column="61">01894<pos:position pos:line="18" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call>
                     <literal type="string" pos:line="19" pos:column="22">"Unable to initialize TLS servername extension "<pos:position pos:line="19" pos:column="70"/></literal>
                     <literal type="string" pos:line="20" pos:column="22">"callback (incompatible OpenSSL version?)"<pos:position pos:line="20" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ssl_log_ssl_error<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">SSLLOG_MARK<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">APLOG_EMERG<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">s<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ssl_die<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">s<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifdef<pos:position pos:line="25" pos:column="7"/></cpp:directive> <name pos:line="25" pos:column="8">HAVE_OCSP_STAPLING<pos:position pos:line="25" pos:column="26"/></name></cpp:ifdef>
    <comment type="block" pos:line="26" pos:column="5">/*
     * OCSP Stapling support, status_request extension
     */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name><name pos:line="29" pos:column="10">mctx<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">pkp<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">==<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">FALSE<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">)<pos:position pos:line="29" pos:column="29"/></operator> <operator pos:line="29" pos:column="30">&amp;&amp;<pos:position pos:line="29" pos:column="40"/></operator> <operator pos:line="29" pos:column="33">(<pos:position pos:line="29" pos:column="34"/></operator><name><name pos:line="29" pos:column="34">mctx<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">-&gt;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="40">stapling_enabled<pos:position pos:line="29" pos:column="56"/></name></name> <operator pos:line="29" pos:column="57">==<pos:position pos:line="29" pos:column="59"/></operator> <name pos:line="29" pos:column="60">TRUE<pos:position pos:line="29" pos:column="64"/></name><operator pos:line="29" pos:column="64">)<pos:position pos:line="29" pos:column="65"/></operator></expr>)<pos:position pos:line="29" pos:column="66"/></condition><then pos:line="29" pos:column="66"> <block pos:line="29" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">modssl_init_stapling<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">s<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">p<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">ptemp<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">mctx<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">HAVE_SRP<pos:position pos:line="34" pos:column="16"/></name></cpp:ifdef>
    <comment type="block" pos:line="35" pos:column="5">/*
     * TLS-SRP support
     */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">mctx<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">srp_vfile<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">!=<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="28">NULL<pos:position pos:line="38" pos:column="32"/></name></expr>)<pos:position pos:line="38" pos:column="33"/></condition><then pos:line="38" pos:column="33"> <block pos:line="38" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="39" pos:column="9">int<pos:position pos:line="39" pos:column="12"/></name></type> <name pos:line="39" pos:column="13">err<pos:position pos:line="39" pos:column="16"/></name></decl>;<pos:position pos:line="39" pos:column="17"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_log_error<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">APLOG_MARK<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">APLOG_DEBUG<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="47">0<pos:position pos:line="40" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="50">s<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="53">APLOGNO<pos:position pos:line="40" pos:column="60"/></name><argument_list pos:line="40" pos:column="60">(<argument><expr><literal type="number" pos:line="40" pos:column="61">02308<pos:position pos:line="40" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call>
                     <literal type="string" pos:line="41" pos:column="22">"Using SRP verifier file [%s]"<pos:position pos:line="41" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="54">mctx<pos:position pos:line="41" pos:column="58"/></name><operator pos:line="41" pos:column="58">-&gt;<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="60">srp_vfile<pos:position pos:line="41" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="71"/></expr_stmt>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><operator pos:line="43" pos:column="14">(<pos:position pos:line="43" pos:column="15"/></operator><name><name pos:line="43" pos:column="15">mctx<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">-&gt;<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="21">srp_vbase<pos:position pos:line="43" pos:column="30"/></name></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <call><name pos:line="43" pos:column="33">SRP_VBASE_new<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><name><name pos:line="43" pos:column="47">mctx<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">-&gt;<pos:position pos:line="43" pos:column="56"/></operator><name pos:line="43" pos:column="53">srp_unknown_user_seed<pos:position pos:line="43" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></call><operator pos:line="43" pos:column="75">)<pos:position pos:line="43" pos:column="76"/></operator></expr>)<pos:position pos:line="43" pos:column="77"/></condition><then pos:line="43" pos:column="77"> <block pos:line="43" pos:column="78">{
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_log_error<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">APLOG_MARK<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">APLOG_EMERG<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="51">0<pos:position pos:line="44" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">s<pos:position pos:line="44" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="57">APLOGNO<pos:position pos:line="44" pos:column="64"/></name><argument_list pos:line="44" pos:column="64">(<argument><expr><literal type="number" pos:line="44" pos:column="65">02309<pos:position pos:line="44" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="45" pos:column="26">"Unable to initialize SRP verifier structure "<pos:position pos:line="45" pos:column="72"/></literal>
                         <literal type="string" pos:line="46" pos:column="26">"[%s seed]"<pos:position pos:line="46" pos:column="37"/></literal></expr></argument>,
                         <argument><expr><ternary><condition><expr><name><name pos:line="47" pos:column="26">mctx<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">-&gt;<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="32">srp_unknown_user_seed<pos:position pos:line="47" pos:column="53"/></name></name></expr> ?<pos:position pos:line="47" pos:column="55"/></condition><then pos:line="47" pos:column="55"> <expr><literal type="string" pos:line="47" pos:column="56">"with"<pos:position pos:line="47" pos:column="62"/></literal></expr> <pos:position pos:line="47" pos:column="63"/></then><else pos:line="47" pos:column="63">: <expr><literal type="string" pos:line="47" pos:column="65">"without"<pos:position pos:line="47" pos:column="74"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="47" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ssl_log_ssl_error<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name pos:line="48" pos:column="31">SSLLOG_MARK<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="44">APLOG_EMERG<pos:position pos:line="48" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="57">s<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ssl_die<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">s<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="52" pos:column="9">err<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <call><name pos:line="52" pos:column="15">SRP_VBASE_init<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name><name pos:line="52" pos:column="30">mctx<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">-&gt;<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="36">srp_vbase<pos:position pos:line="52" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="47">mctx<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">-&gt;<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="53">srp_vfile<pos:position pos:line="52" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="64"/></expr_stmt>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">err<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">!=<pos:position pos:line="53" pos:column="19"/></operator> <name pos:line="53" pos:column="20">SRP_NO_ERROR<pos:position pos:line="53" pos:column="32"/></name></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33"> <block pos:line="53" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_log_error<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">APLOG_MARK<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">APLOG_EMERG<pos:position pos:line="54" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="51">0<pos:position pos:line="54" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">s<pos:position pos:line="54" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="57">APLOGNO<pos:position pos:line="54" pos:column="64"/></name><argument_list pos:line="54" pos:column="64">(<argument><expr><literal type="number" pos:line="54" pos:column="65">02310<pos:position pos:line="54" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="55" pos:column="26">"Unable to load SRP verifier file [error %d]"<pos:position pos:line="55" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="73">err<pos:position pos:line="55" pos:column="76"/></name></expr></argument>)<pos:position pos:line="55" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">ssl_log_ssl_error<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">SSLLOG_MARK<pos:position pos:line="56" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="44">APLOG_EMERG<pos:position pos:line="56" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">s<pos:position pos:line="56" pos:column="58"/></name></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">ssl_die<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">s<pos:position pos:line="57" pos:column="22"/></name></expr></argument>)<pos:position pos:line="57" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="60" pos:column="9">SSL_CTX_set_srp_username_callback<pos:position pos:line="60" pos:column="42"/></name><argument_list pos:line="60" pos:column="42">(<argument><expr><name><name pos:line="60" pos:column="43">mctx<pos:position pos:line="60" pos:column="47"/></name><operator pos:line="60" pos:column="47">-&gt;<pos:position pos:line="60" pos:column="52"/></operator><name pos:line="60" pos:column="49">ssl_ctx<pos:position pos:line="60" pos:column="56"/></name></name></expr></argument>,
                                          <argument><expr><name pos:line="61" pos:column="43">ssl_callback_SRPServerParams<pos:position pos:line="61" pos:column="71"/></name></expr></argument>)<pos:position pos:line="61" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">SSL_CTX_set_srp_cb_arg<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name><name pos:line="62" pos:column="32">mctx<pos:position pos:line="62" pos:column="36"/></name><operator pos:line="62" pos:column="36">-&gt;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="38">ssl_ctx<pos:position pos:line="62" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="47">mctx<pos:position pos:line="62" pos:column="51"/></name></expr></argument>)<pos:position pos:line="62" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2867_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">proc_mutex_fcntl_release<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">apr_proc_mutex_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">mutex<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rc<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="5" pos:column="5">mutex<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">curr_locked<pos:position pos:line="5" pos:column="23"/></name></name><operator pos:line="5" pos:column="23">=<pos:position pos:line="5" pos:column="24"/></operator><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
    <do pos:line="6" pos:column="5">do <block pos:line="6" pos:column="8">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">rc<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">fcntl<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name><name pos:line="7" pos:column="20">mutex<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">interproc<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">filedes<pos:position pos:line="7" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">F_SETLKW<pos:position pos:line="7" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="57">&amp;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="58">proc_mutex_unlock_it<pos:position pos:line="7" pos:column="78"/></name></expr></argument>)<pos:position pos:line="7" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="80"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block> while <condition pos:line="8" pos:column="13">(<expr><name pos:line="8" pos:column="14">rc<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&lt;<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal> <operator pos:line="8" pos:column="21">&amp;&amp;<pos:position pos:line="8" pos:column="31"/></operator> <name pos:line="8" pos:column="24">errno<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">==<pos:position pos:line="8" pos:column="32"/></operator> <name pos:line="8" pos:column="33">EINTR<pos:position pos:line="8" pos:column="38"/></name></expr>)<pos:position pos:line="8" pos:column="39"/></condition>;<pos:position pos:line="8" pos:column="40"/></do>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">rc<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">&lt;<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>)<pos:position pos:line="9" pos:column="16"/></condition><then pos:line="9" pos:column="16"> <block pos:line="9" pos:column="17">{
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">errno<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">APR_SUCCESS<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_611_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">SSL_CTX_use_certificate_chain<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(
    <parameter><decl><type><name pos:line="2" pos:column="5">SSL_CTX<pos:position pos:line="2" pos:column="12"/></name> <modifier pos:line="2" pos:column="13">*<pos:position pos:line="2" pos:column="14"/></modifier></type><name pos:line="2" pos:column="14">ctx<pos:position pos:line="2" pos:column="17"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">file<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">skipfirst<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="2" pos:column="46">int<pos:position pos:line="2" pos:column="49"/></name></type> (<modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier><name pos:line="2" pos:column="52">cb<pos:position pos:line="2" pos:column="54"/></name>)<parameter_list pos:line="2" pos:column="55">(<parameter><decl><type><name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name><modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type></decl></parameter>,<parameter><decl><type><name pos:line="2" pos:column="62">int<pos:position pos:line="2" pos:column="65"/></name></type></decl></parameter>,<parameter><decl><type><name pos:line="2" pos:column="66">int<pos:position pos:line="2" pos:column="69"/></name></type></decl></parameter>,<parameter><decl><type><name pos:line="2" pos:column="70">void<pos:position pos:line="2" pos:column="74"/></name><modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list></function_decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">BIO<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">bio<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">X509<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">x509<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">long<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">err<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">n<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">STACK<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">extra_certs<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">bio<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">BIO_new<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><call><name pos:line="10" pos:column="24">BIO_s_file_internal<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">()<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="48">==<pos:position pos:line="10" pos:column="50"/></operator> <name pos:line="10" pos:column="51">NULL<pos:position pos:line="10" pos:column="55"/></name></expr>)<pos:position pos:line="10" pos:column="56"/></condition><then pos:line="10" pos:column="56">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">-<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></return></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">BIO_read_filename<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">bio<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">file<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call> <operator pos:line="12" pos:column="38">&lt;=<pos:position pos:line="12" pos:column="43"/></operator> <literal type="number" pos:line="12" pos:column="41">0<pos:position pos:line="12" pos:column="42"/></literal></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43"> <block pos:line="12" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">BIO_free<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">bio<pos:position pos:line="13" pos:column="21"/></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">-<pos:position pos:line="14" pos:column="17"/></operator><literal type="number" pos:line="14" pos:column="17">1<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="16" pos:column="5">/* optionally skip a leading server certificate */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">skipfirst<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <block pos:line="17" pos:column="20">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">x509<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">modssl_PEM_read_bio_X509<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">bio<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">NULL<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">cb<pos:position pos:line="18" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">NULL<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call><operator pos:line="18" pos:column="66">)<pos:position pos:line="18" pos:column="67"/></operator> <operator pos:line="18" pos:column="68">==<pos:position pos:line="18" pos:column="70"/></operator> <name pos:line="18" pos:column="71">NULL<pos:position pos:line="18" pos:column="75"/></name></expr>)<pos:position pos:line="18" pos:column="76"/></condition><then pos:line="18" pos:column="76"> <block pos:line="18" pos:column="77">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">BIO_free<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">bio<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
            <return pos:line="20" pos:column="13">return <expr><operator pos:line="20" pos:column="20">-<pos:position pos:line="20" pos:column="21"/></operator><literal type="number" pos:line="20" pos:column="21">1<pos:position pos:line="20" pos:column="22"/></literal></expr>;<pos:position pos:line="20" pos:column="23"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">X509_free<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">x509<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="24" pos:column="5">/* free a perhaps already configured extra chain */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">extra_certs<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator><call><name pos:line="25" pos:column="17">SSL_CTX_get_extra_certs<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">ctx<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">extra_certs<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">!=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29"> <block pos:line="26" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">sk_X509_pop_free<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><operator pos:line="27" pos:column="26">(<pos:position pos:line="27" pos:column="27"/></operator><call><name pos:line="27" pos:column="27">STACK_OF<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">X509<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call> <operator pos:line="27" pos:column="42">*<pos:position pos:line="27" pos:column="43"/></operator><operator pos:line="27" pos:column="43">)<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">extra_certs<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">X509_free<pos:position pos:line="27" pos:column="66"/></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">SSL_CTX_set_extra_certs<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">ctx<pos:position pos:line="28" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="28" pos:column="37">NULL<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="30" pos:column="5">/* create new extra chain by loading the certs */</comment>
    <expr_stmt><expr><name pos:line="31" pos:column="5">n<pos:position pos:line="31" pos:column="6"/></name> <operator pos:line="31" pos:column="7">=<pos:position pos:line="31" pos:column="8"/></operator> <literal type="number" pos:line="31" pos:column="9">0<pos:position pos:line="31" pos:column="10"/></literal></expr>;<pos:position pos:line="31" pos:column="11"/></expr_stmt>
<cpp:if pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">if<pos:position pos:line="32" pos:column="4"/></cpp:directive> <expr><name pos:line="32" pos:column="5">SSL_LIBRARY_VERSION<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">&lt;<pos:position pos:line="32" pos:column="29"/></operator> <literal type="number" pos:line="32" pos:column="27">0x00904000<pos:position pos:line="32" pos:column="37"/></literal></expr></cpp:if>
    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">x509<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">PEM_read_bio_X509<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">bio<pos:position pos:line="33" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="43">NULL<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">cb<pos:position pos:line="33" pos:column="51"/></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call><operator pos:line="33" pos:column="52">)<pos:position pos:line="33" pos:column="53"/></operator> <operator pos:line="33" pos:column="54">!=<pos:position pos:line="33" pos:column="56"/></operator> <name pos:line="33" pos:column="57">NULL<pos:position pos:line="33" pos:column="61"/></name></expr>)<pos:position pos:line="33" pos:column="62"/></condition> <block pos:line="33" pos:column="63">{
<cpp:else pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">else<pos:position pos:line="34" pos:column="6"/></cpp:directive></cpp:else>
    <while pos:line="35" pos:column="5">while <condition pos:line="35" pos:column="11">(<expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">x509<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">PEM_read_bio_X509<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">bio<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">NULL<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">cb<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">NULL<pos:position pos:line="35" pos:column="57"/></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call><operator pos:line="35" pos:column="58">)<pos:position pos:line="35" pos:column="59"/></operator> <operator pos:line="35" pos:column="60">!=<pos:position pos:line="35" pos:column="62"/></operator> <name pos:line="35" pos:column="63">NULL<pos:position pos:line="35" pos:column="67"/></name></expr>)<pos:position pos:line="35" pos:column="68"/></condition> <block pos:line="35" pos:column="69">{
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><call><name pos:line="37" pos:column="14">SSL_CTX_add_extra_chain_cert<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name pos:line="37" pos:column="43">ctx<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">x509<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="54"/></condition><then pos:line="37" pos:column="54"> <block pos:line="37" pos:column="55">{ 
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">X509_free<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">x509<pos:position pos:line="38" pos:column="27"/></name></expr></argument>)<pos:position pos:line="38" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">BIO_free<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">bio<pos:position pos:line="39" pos:column="25"/></name></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
            <return pos:line="40" pos:column="13">return <expr><operator pos:line="40" pos:column="20">-<pos:position pos:line="40" pos:column="21"/></operator><literal type="number" pos:line="40" pos:column="21">1<pos:position pos:line="40" pos:column="22"/></literal></expr>;<pos:position pos:line="40" pos:column="23"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="42" pos:column="9">n<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">++<pos:position pos:line="42" pos:column="12"/></operator></expr>;<pos:position pos:line="42" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></while>
    <comment type="block" pos:line="44" pos:column="5">/* Make sure that only the error is just an EOF */</comment>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">(<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">err<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name pos:line="45" pos:column="16">ERR_peek_error<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">()<pos:position pos:line="45" pos:column="32"/></argument_list></call><operator pos:line="45" pos:column="32">)<pos:position pos:line="45" pos:column="33"/></operator> <operator pos:line="45" pos:column="34">&gt;<pos:position pos:line="45" pos:column="38"/></operator> <literal type="number" pos:line="45" pos:column="36">0<pos:position pos:line="45" pos:column="37"/></literal></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38"> <block pos:line="45" pos:column="39">{
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><operator pos:line="46" pos:column="14">(<pos:position pos:line="46" pos:column="15"/></operator>   <call><name pos:line="46" pos:column="18">ERR_GET_LIB<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">err<pos:position pos:line="46" pos:column="33"/></name></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call> <operator pos:line="46" pos:column="35">==<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="38">ERR_LIB_PEM<pos:position pos:line="46" pos:column="49"/></name> 
              <operator pos:line="47" pos:column="15">&amp;&amp;<pos:position pos:line="47" pos:column="25"/></operator> <call><name pos:line="47" pos:column="18">ERR_GET_REASON<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">err<pos:position pos:line="47" pos:column="36"/></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call> <operator pos:line="47" pos:column="38">==<pos:position pos:line="47" pos:column="40"/></operator> <name pos:line="47" pos:column="41">PEM_R_NO_START_LINE<pos:position pos:line="47" pos:column="60"/></name><operator pos:line="47" pos:column="60">)<pos:position pos:line="47" pos:column="61"/></operator></expr>)<pos:position pos:line="47" pos:column="62"/></condition><then pos:line="47" pos:column="62"> <block pos:line="47" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">BIO_free<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">bio<pos:position pos:line="48" pos:column="25"/></name></expr></argument>)<pos:position pos:line="48" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
            <return pos:line="49" pos:column="13">return <expr><operator pos:line="49" pos:column="20">-<pos:position pos:line="49" pos:column="21"/></operator><literal type="number" pos:line="49" pos:column="21">1<pos:position pos:line="49" pos:column="22"/></literal></expr>;<pos:position pos:line="49" pos:column="23"/></return>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
        <while pos:line="51" pos:column="9">while <condition pos:line="51" pos:column="15">(<expr><call><name pos:line="51" pos:column="16">ERR_get_error<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">()<pos:position pos:line="51" pos:column="31"/></argument_list></call> <operator pos:line="51" pos:column="32">&gt;<pos:position pos:line="51" pos:column="36"/></operator> <literal type="number" pos:line="51" pos:column="34">0<pos:position pos:line="51" pos:column="35"/></literal></expr>)<pos:position pos:line="51" pos:column="36"/></condition> <block type="pseudo"><empty_stmt pos:line="51" pos:column="37">;<pos:position pos:line="51" pos:column="38"/></empty_stmt></block></while>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">BIO_free<pos:position pos:line="53" pos:column="13"/></name><argument_list pos:line="53" pos:column="13">(<argument><expr><name pos:line="53" pos:column="14">bio<pos:position pos:line="53" pos:column="17"/></name></expr></argument>)<pos:position pos:line="53" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">n<pos:position pos:line="54" pos:column="13"/></name></expr>;<pos:position pos:line="54" pos:column="14"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></while>

<comment type="block" pos:line="57" pos:column="1">/*  _________________________________________________________________
**
**  Session Stuff
**  _________________________________________________________________
*/</comment>

<function><type><name pos:line="63" pos:column="1">char<pos:position pos:line="63" pos:column="5"/></name> <modifier pos:line="63" pos:column="6">*<pos:position pos:line="63" pos:column="7"/></modifier></type><name pos:line="63" pos:column="7">SSL_SESSION_id2sz<pos:position pos:line="63" pos:column="24"/></name><parameter_list pos:line="63" pos:column="24">(<parameter><decl><type><name pos:line="63" pos:column="25">unsigned<pos:position pos:line="63" pos:column="33"/></name> <name pos:line="63" pos:column="34">char<pos:position pos:line="63" pos:column="38"/></name> <modifier pos:line="63" pos:column="39">*<pos:position pos:line="63" pos:column="40"/></modifier></type><name pos:line="63" pos:column="40">id<pos:position pos:line="63" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="63" pos:column="44">int<pos:position pos:line="63" pos:column="47"/></name></type> <name pos:line="63" pos:column="48">idlen<pos:position pos:line="63" pos:column="53"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="64" pos:column="25">char<pos:position pos:line="64" pos:column="29"/></name> <modifier pos:line="64" pos:column="30">*<pos:position pos:line="64" pos:column="31"/></modifier></type><name pos:line="64" pos:column="31">str<pos:position pos:line="64" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="64" pos:column="36">int<pos:position pos:line="64" pos:column="39"/></name></type> <name pos:line="64" pos:column="40">strsize<pos:position pos:line="64" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="64" pos:column="48"/></parameter_list>
<block pos:line="65" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="66" pos:column="5">char<pos:position pos:line="66" pos:column="9"/></name> <modifier pos:line="66" pos:column="10">*<pos:position pos:line="66" pos:column="11"/></modifier></type><name pos:line="66" pos:column="11">cp<pos:position pos:line="66" pos:column="13"/></name></decl>;<pos:position pos:line="66" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="67" pos:column="5">int<pos:position pos:line="67" pos:column="8"/></name></type> <name pos:line="67" pos:column="9">n<pos:position pos:line="67" pos:column="10"/></name></decl>;<pos:position pos:line="67" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="69" pos:column="5">cp<pos:position pos:line="69" pos:column="7"/></name> <operator pos:line="69" pos:column="8">=<pos:position pos:line="69" pos:column="9"/></operator> <name pos:line="69" pos:column="10">str<pos:position pos:line="69" pos:column="13"/></name></expr>;<pos:position pos:line="69" pos:column="14"/></expr_stmt>
    <for pos:line="70" pos:column="5">for <control pos:line="70" pos:column="9">(<init><expr><name pos:line="70" pos:column="10">n<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">=<pos:position pos:line="70" pos:column="13"/></operator> <literal type="number" pos:line="70" pos:column="14">0<pos:position pos:line="70" pos:column="15"/></literal></expr>;<pos:position pos:line="70" pos:column="16"/></init> <condition><expr><name pos:line="70" pos:column="17">n<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">&lt;<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="21">idlen<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">&amp;&amp;<pos:position pos:line="70" pos:column="37"/></operator> <name pos:line="70" pos:column="30">n<pos:position pos:line="70" pos:column="31"/></name> <operator pos:line="70" pos:column="32">&lt;<pos:position pos:line="70" pos:column="36"/></operator> <name pos:line="70" pos:column="34">SSL_MAX_SSL_SESSION_ID_LENGTH<pos:position pos:line="70" pos:column="63"/></name></expr>;<pos:position pos:line="70" pos:column="64"/></condition> <incr><expr><name pos:line="70" pos:column="65">n<pos:position pos:line="70" pos:column="66"/></name><operator pos:line="70" pos:column="66">++<pos:position pos:line="70" pos:column="68"/></operator></expr></incr>)<pos:position pos:line="70" pos:column="69"/></control> <block pos:line="70" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">apr_snprintf<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><name pos:line="71" pos:column="22">cp<pos:position pos:line="71" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="26">strsize<pos:position pos:line="71" pos:column="33"/></name> <operator pos:line="71" pos:column="34">-<pos:position pos:line="71" pos:column="35"/></operator> <operator pos:line="71" pos:column="36">(<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="37">cp<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">-<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="40">str<pos:position pos:line="71" pos:column="43"/></name><operator pos:line="71" pos:column="43">)<pos:position pos:line="71" pos:column="44"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="46">"%02X"<pos:position pos:line="71" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="54">id<pos:position pos:line="71" pos:column="56"/></name><index pos:line="71" pos:column="56">[<expr><name pos:line="71" pos:column="57">n<pos:position pos:line="71" pos:column="58"/></name></expr>]<pos:position pos:line="71" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="72" pos:column="9">cp<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">+=<pos:position pos:line="72" pos:column="14"/></operator> <literal type="number" pos:line="72" pos:column="15">2<pos:position pos:line="72" pos:column="16"/></literal></expr>;<pos:position pos:line="72" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="74" pos:column="5">*<pos:position pos:line="74" pos:column="6"/></operator><name pos:line="74" pos:column="6">cp<pos:position pos:line="74" pos:column="8"/></name> <operator pos:line="74" pos:column="9">=<pos:position pos:line="74" pos:column="10"/></operator> <name pos:line="74" pos:column="11">NUL<pos:position pos:line="74" pos:column="14"/></name></expr>;<pos:position pos:line="74" pos:column="15"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><name pos:line="75" pos:column="12">str<pos:position pos:line="75" pos:column="15"/></name></expr>;<pos:position pos:line="75" pos:column="16"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function>

<comment type="block" pos:line="78" pos:column="1">/* sslc+OpenSSL compat */</comment>

<function><type><name pos:line="80" pos:column="1">int<pos:position pos:line="80" pos:column="4"/></name></type> <name pos:line="80" pos:column="5">modssl_session_get_time<pos:position pos:line="80" pos:column="28"/></name><parameter_list pos:line="80" pos:column="28">(<parameter><decl><type><name pos:line="80" pos:column="29">SSL_SESSION<pos:position pos:line="80" pos:column="40"/></name> <modifier pos:line="80" pos:column="41">*<pos:position pos:line="80" pos:column="42"/></modifier></type><name pos:line="80" pos:column="42">session<pos:position pos:line="80" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="80" pos:column="50"/></parameter_list>
<block pos:line="81" pos:column="1">{
<cpp:ifdef pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">ifdef<pos:position pos:line="82" pos:column="7"/></cpp:directive> <name pos:line="82" pos:column="8">OPENSSL_VERSION_NUMBER<pos:position pos:line="82" pos:column="30"/></name></cpp:ifdef>
    <return pos:line="83" pos:column="5">return <expr><call><name pos:line="83" pos:column="12">SSL_SESSION_get_time<pos:position pos:line="83" pos:column="32"/></name><argument_list pos:line="83" pos:column="32">(<argument><expr><name pos:line="83" pos:column="33">session<pos:position pos:line="83" pos:column="40"/></name></expr></argument>)<pos:position pos:line="83" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="42"/></return>
<cpp:else pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">else<pos:position pos:line="84" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="84" pos:column="7">/* assume sslc */</comment>
    <decl_stmt><decl><type><name pos:line="85" pos:column="5">CRYPTO_TIME_T<pos:position pos:line="85" pos:column="18"/></name></type> <name pos:line="85" pos:column="19">ct<pos:position pos:line="85" pos:column="21"/></name></decl>;<pos:position pos:line="85" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">SSL_SESSION_get_time<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument><expr><name pos:line="86" pos:column="26">session<pos:position pos:line="86" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="35">&amp;<pos:position pos:line="86" pos:column="40"/></operator><name pos:line="86" pos:column="36">ct<pos:position pos:line="86" pos:column="38"/></name></expr></argument>)<pos:position pos:line="86" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="40"/></expr_stmt>
    <return pos:line="87" pos:column="5">return <expr><call><name pos:line="87" pos:column="12">CRYPTO_time_to_int<pos:position pos:line="87" pos:column="30"/></name><argument_list pos:line="87" pos:column="30">(<argument><expr><operator pos:line="87" pos:column="31">&amp;<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="32">ct<pos:position pos:line="87" pos:column="34"/></name></expr></argument>)<pos:position pos:line="87" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="36"/></return>
<cpp:endif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">endif<pos:position pos:line="88" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="89" pos:column="2"/></block></function>

<cpp:ifndef pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">ifndef<pos:position pos:line="91" pos:column="8"/></cpp:directive> <name pos:line="91" pos:column="9">SSLC_VERSION_NUMBER<pos:position pos:line="91" pos:column="28"/></name></cpp:ifndef>
<cpp:define pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">define<pos:position pos:line="92" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="92" pos:column="9">SSLC_VERSION_NUMBER<pos:position pos:line="92" pos:column="28"/></name></cpp:macro> <cpp:value pos:line="92" pos:column="29">0x0000<pos:position pos:line="92" pos:column="35"/></cpp:value></cpp:define>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>

<function><type><name pos:line="95" pos:column="1">DH<pos:position pos:line="95" pos:column="3"/></name> <modifier pos:line="95" pos:column="4">*<pos:position pos:line="95" pos:column="5"/></modifier></type><name pos:line="95" pos:column="5">modssl_dh_configure<pos:position pos:line="95" pos:column="24"/></name><parameter_list pos:line="95" pos:column="24">(<parameter><decl><type><name pos:line="95" pos:column="25">unsigned<pos:position pos:line="95" pos:column="33"/></name> <name pos:line="95" pos:column="34">char<pos:position pos:line="95" pos:column="38"/></name> <modifier pos:line="95" pos:column="39">*<pos:position pos:line="95" pos:column="40"/></modifier></type><name pos:line="95" pos:column="40">p<pos:position pos:line="95" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="95" pos:column="43">int<pos:position pos:line="95" pos:column="46"/></name></type> <name pos:line="95" pos:column="47">plen<pos:position pos:line="95" pos:column="51"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="96" pos:column="25">unsigned<pos:position pos:line="96" pos:column="33"/></name> <name pos:line="96" pos:column="34">char<pos:position pos:line="96" pos:column="38"/></name> <modifier pos:line="96" pos:column="39">*<pos:position pos:line="96" pos:column="40"/></modifier></type><name pos:line="96" pos:column="40">g<pos:position pos:line="96" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="96" pos:column="43">int<pos:position pos:line="96" pos:column="46"/></name></type> <name pos:line="96" pos:column="47">glen<pos:position pos:line="96" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="96" pos:column="52"/></parameter_list>
<block pos:line="97" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="98" pos:column="5">DH<pos:position pos:line="98" pos:column="7"/></name> <modifier pos:line="98" pos:column="8">*<pos:position pos:line="98" pos:column="9"/></modifier></type><name pos:line="98" pos:column="9">dh<pos:position pos:line="98" pos:column="11"/></name></decl>;<pos:position pos:line="98" pos:column="12"/></decl_stmt>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><operator pos:line="100" pos:column="9">!<pos:position pos:line="100" pos:column="10"/></operator><operator pos:line="100" pos:column="10">(<pos:position pos:line="100" pos:column="11"/></operator><name pos:line="100" pos:column="11">dh<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">=<pos:position pos:line="100" pos:column="15"/></operator> <call><name pos:line="100" pos:column="16">DH_new<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">()<pos:position pos:line="100" pos:column="24"/></argument_list></call><operator pos:line="100" pos:column="24">)<pos:position pos:line="100" pos:column="25"/></operator></expr>)<pos:position pos:line="100" pos:column="26"/></condition><then pos:line="100" pos:column="26"> <block pos:line="100" pos:column="27">{
        <return pos:line="101" pos:column="9">return <expr><name pos:line="101" pos:column="16">NULL<pos:position pos:line="101" pos:column="20"/></name></expr>;<pos:position pos:line="101" pos:column="21"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>

<cpp:if pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">if<pos:position pos:line="104" pos:column="4"/></cpp:directive> <expr><call><name pos:line="104" pos:column="5">defined<pos:position pos:line="104" pos:column="12"/></name><argument_list pos:line="104" pos:column="12">(<argument><expr><name pos:line="104" pos:column="13">OPENSSL_VERSION_NUMBER<pos:position pos:line="104" pos:column="35"/></name></expr></argument>)<pos:position pos:line="104" pos:column="36"/></argument_list></call> <operator pos:line="104" pos:column="37">||<pos:position pos:line="104" pos:column="39"/></operator> <operator pos:line="104" pos:column="40">(<pos:position pos:line="104" pos:column="41"/></operator><name pos:line="104" pos:column="41">SSLC_VERSION_NUMBER<pos:position pos:line="104" pos:column="60"/></name> <operator pos:line="104" pos:column="61">&lt;<pos:position pos:line="104" pos:column="65"/></operator> <literal type="number" pos:line="104" pos:column="63">0x2000<pos:position pos:line="104" pos:column="69"/></literal><operator pos:line="104" pos:column="69">)<pos:position pos:line="104" pos:column="70"/></operator></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="105" pos:column="5">dh<pos:position pos:line="105" pos:column="7"/></name><operator pos:line="105" pos:column="7">-&gt;<pos:position pos:line="105" pos:column="12"/></operator><name pos:line="105" pos:column="9">p<pos:position pos:line="105" pos:column="10"/></name></name> <operator pos:line="105" pos:column="11">=<pos:position pos:line="105" pos:column="12"/></operator> <call><name pos:line="105" pos:column="13">BN_bin2bn<pos:position pos:line="105" pos:column="22"/></name><argument_list pos:line="105" pos:column="22">(<argument><expr><name pos:line="105" pos:column="23">p<pos:position pos:line="105" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="26">plen<pos:position pos:line="105" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="32">NULL<pos:position pos:line="105" pos:column="36"/></name></expr></argument>)<pos:position pos:line="105" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="106" pos:column="5">dh<pos:position pos:line="106" pos:column="7"/></name><operator pos:line="106" pos:column="7">-&gt;<pos:position pos:line="106" pos:column="12"/></operator><name pos:line="106" pos:column="9">g<pos:position pos:line="106" pos:column="10"/></name></name> <operator pos:line="106" pos:column="11">=<pos:position pos:line="106" pos:column="12"/></operator> <call><name pos:line="106" pos:column="13">BN_bin2bn<pos:position pos:line="106" pos:column="22"/></name><argument_list pos:line="106" pos:column="22">(<argument><expr><name pos:line="106" pos:column="23">g<pos:position pos:line="106" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="26">glen<pos:position pos:line="106" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="32">NULL<pos:position pos:line="106" pos:column="36"/></name></expr></argument>)<pos:position pos:line="106" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="38"/></expr_stmt>
    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><operator pos:line="107" pos:column="9">!<pos:position pos:line="107" pos:column="10"/></operator><operator pos:line="107" pos:column="10">(<pos:position pos:line="107" pos:column="11"/></operator><name><name pos:line="107" pos:column="11">dh<pos:position pos:line="107" pos:column="13"/></name><operator pos:line="107" pos:column="13">-&gt;<pos:position pos:line="107" pos:column="18"/></operator><name pos:line="107" pos:column="15">p<pos:position pos:line="107" pos:column="16"/></name></name> <operator pos:line="107" pos:column="17">&amp;&amp;<pos:position pos:line="107" pos:column="27"/></operator> <name><name pos:line="107" pos:column="20">dh<pos:position pos:line="107" pos:column="22"/></name><operator pos:line="107" pos:column="22">-&gt;<pos:position pos:line="107" pos:column="27"/></operator><name pos:line="107" pos:column="24">g<pos:position pos:line="107" pos:column="25"/></name></name><operator pos:line="107" pos:column="25">)<pos:position pos:line="107" pos:column="26"/></operator></expr>)<pos:position pos:line="107" pos:column="27"/></condition><then pos:line="107" pos:column="27"> <block pos:line="107" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">DH_free<pos:position pos:line="108" pos:column="16"/></name><argument_list pos:line="108" pos:column="16">(<argument><expr><name pos:line="108" pos:column="17">dh<pos:position pos:line="108" pos:column="19"/></name></expr></argument>)<pos:position pos:line="108" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="21"/></expr_stmt>
        <return pos:line="109" pos:column="9">return <expr><name pos:line="109" pos:column="16">NULL<pos:position pos:line="109" pos:column="20"/></name></expr>;<pos:position pos:line="109" pos:column="21"/></return>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>
<cpp:else pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">else<pos:position pos:line="111" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="112" pos:column="5">R_EITEMS_add<pos:position pos:line="112" pos:column="17"/></name><argument_list pos:line="112" pos:column="17">(<argument><expr><name><name pos:line="112" pos:column="18">dh<pos:position pos:line="112" pos:column="20"/></name><operator pos:line="112" pos:column="20">-&gt;<pos:position pos:line="112" pos:column="25"/></operator><name pos:line="112" pos:column="22">data<pos:position pos:line="112" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="28">PK_TYPE_DH<pos:position pos:line="112" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="40">PK_DH_P<pos:position pos:line="112" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="49">0<pos:position pos:line="112" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="52">p<pos:position pos:line="112" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="55">plen<pos:position pos:line="112" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="61">R_EITEMS_PF_COPY<pos:position pos:line="112" pos:column="77"/></name></expr></argument>)<pos:position pos:line="112" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">R_EITEMS_add<pos:position pos:line="113" pos:column="17"/></name><argument_list pos:line="113" pos:column="17">(<argument><expr><name><name pos:line="113" pos:column="18">dh<pos:position pos:line="113" pos:column="20"/></name><operator pos:line="113" pos:column="20">-&gt;<pos:position pos:line="113" pos:column="25"/></operator><name pos:line="113" pos:column="22">data<pos:position pos:line="113" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="28">PK_TYPE_DH<pos:position pos:line="113" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="40">PK_DH_G<pos:position pos:line="113" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="49">0<pos:position pos:line="113" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="52">g<pos:position pos:line="113" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="55">glen<pos:position pos:line="113" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="61">R_EITEMS_PF_COPY<pos:position pos:line="113" pos:column="77"/></name></expr></argument>)<pos:position pos:line="113" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="79"/></expr_stmt>
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif<pos:position pos:line="114" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="116" pos:column="5">return <expr><name pos:line="116" pos:column="12">dh<pos:position pos:line="116" pos:column="14"/></name></expr>;<pos:position pos:line="116" pos:column="15"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4763.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_hook_UserCheck<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLConnRec<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">sslconn<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myConnConfig<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">(<argument><expr><name><name pos:line="3" pos:column="40">r<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">-&gt;<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="43">connection<pos:position pos:line="3" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLSrvConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">sc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">mySrvConfig<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name><name pos:line="4" pos:column="39">r<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">server<pos:position pos:line="4" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLDirConfigRec<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">dc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">myDirConfig<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">r<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">clientdn<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">auth_line<pos:position pos:line="7" pos:column="26"/></name></decl>, <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="29">username<pos:position pos:line="7" pos:column="37"/></name></decl>, <modifier pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="40">password<pos:position pos:line="7" pos:column="48"/></name></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/*
     * Additionally forbid access (again)
     * when strict require option is used.
     */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">dc<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">nOptions<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">&amp;<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="25">SSL_OPT_STRICTREQUIRE<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">)<pos:position pos:line="13" pos:column="47"/></operator> <operator pos:line="13" pos:column="48">&amp;&amp;<pos:position pos:line="13" pos:column="58"/></operator>
        <operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><call><name pos:line="14" pos:column="10">apr_table_get<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name><name pos:line="14" pos:column="24">r<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">notes<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"ssl-access-forbidden"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call><operator pos:line="14" pos:column="57">)<pos:position pos:line="14" pos:column="58"/></operator></expr>)<pos:position pos:line="14" pos:column="59"/></condition><then pos:line="14" pos:column="59">
    <block pos:line="15" pos:column="5">{
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">HTTP_FORBIDDEN<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/*
     * We decline when we are in a subrequest.  The Authorization header
     * would already be present if it was added in the main request.
     */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><call><name pos:line="23" pos:column="10">ap_is_initial_req<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">r<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block pos:line="23" pos:column="32">{
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">DECLINED<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/*
     * Make sure the user is not able to fake the client certificate
     * based authentication by just entering an X.509 Subject DN
     * ("/XX=YYY/XX=YYY/..") as the username and "password" as the
     * password.
     */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">auth_line<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <call><name pos:line="33" pos:column="22">apr_table_get<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name><name pos:line="33" pos:column="36">r<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">headers_in<pos:position pos:line="33" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="51">"Authorization"<pos:position pos:line="33" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call><operator pos:line="33" pos:column="67">)<pos:position pos:line="33" pos:column="68"/></operator></expr>)<pos:position pos:line="33" pos:column="69"/></condition><then pos:line="33" pos:column="69"> <block pos:line="33" pos:column="70">{
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">strcEQ<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><call><name pos:line="34" pos:column="20">ap_getword<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name><name pos:line="34" pos:column="31">r<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">-&gt;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="34">pool<pos:position pos:line="34" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="40">&amp;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="41">auth_line<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="34" pos:column="52">' '<pos:position pos:line="34" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="58">"Basic"<pos:position pos:line="34" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="67"/></condition><then pos:line="34" pos:column="67"> <block pos:line="34" pos:column="68">{
            <while pos:line="35" pos:column="13">while <condition pos:line="35" pos:column="19">(<expr><operator pos:line="35" pos:column="20">(<pos:position pos:line="35" pos:column="21"/></operator><operator pos:line="35" pos:column="21">*<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">auth_line<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">==<pos:position pos:line="35" pos:column="34"/></operator> <literal type="char" pos:line="35" pos:column="35">' '<pos:position pos:line="35" pos:column="38"/></literal><operator pos:line="35" pos:column="38">)<pos:position pos:line="35" pos:column="39"/></operator> <operator pos:line="35" pos:column="40">||<pos:position pos:line="35" pos:column="42"/></operator> <operator pos:line="35" pos:column="43">(<pos:position pos:line="35" pos:column="44"/></operator><operator pos:line="35" pos:column="44">*<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="45">auth_line<pos:position pos:line="35" pos:column="54"/></name> <operator pos:line="35" pos:column="55">==<pos:position pos:line="35" pos:column="57"/></operator> <literal type="char" pos:line="35" pos:column="58">'\t'<pos:position pos:line="35" pos:column="62"/></literal><operator pos:line="35" pos:column="62">)<pos:position pos:line="35" pos:column="63"/></operator></expr>)<pos:position pos:line="35" pos:column="64"/></condition> <block pos:line="35" pos:column="65">{
                <expr_stmt><expr><name pos:line="36" pos:column="17">auth_line<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">++<pos:position pos:line="36" pos:column="28"/></operator></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></while>

            <expr_stmt><expr><name pos:line="39" pos:column="13">auth_line<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <call><name pos:line="39" pos:column="25">ap_pbase64decode<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><name><name pos:line="39" pos:column="42">r<pos:position pos:line="39" pos:column="43"/></name><operator pos:line="39" pos:column="43">-&gt;<pos:position pos:line="39" pos:column="48"/></operator><name pos:line="39" pos:column="45">pool<pos:position pos:line="39" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="51">auth_line<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">username<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <call><name pos:line="40" pos:column="24">ap_getword_nulls<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name><name pos:line="40" pos:column="41">r<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">pool<pos:position pos:line="40" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="50">&amp;<pos:position pos:line="40" pos:column="55"/></operator><name pos:line="40" pos:column="51">auth_line<pos:position pos:line="40" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="40" pos:column="62">':'<pos:position pos:line="40" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">password<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">auth_line<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>

            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><operator pos:line="43" pos:column="17">(<pos:position pos:line="43" pos:column="18"/></operator><name><name pos:line="43" pos:column="18">username<pos:position pos:line="43" pos:column="26"/></name><index pos:line="43" pos:column="26">[<expr><literal type="number" pos:line="43" pos:column="27">0<pos:position pos:line="43" pos:column="28"/></literal></expr>]<pos:position pos:line="43" pos:column="29"/></index></name> <operator pos:line="43" pos:column="30">==<pos:position pos:line="43" pos:column="32"/></operator> <literal type="char" pos:line="43" pos:column="33">'/'<pos:position pos:line="43" pos:column="36"/></literal><operator pos:line="43" pos:column="36">)<pos:position pos:line="43" pos:column="37"/></operator> <operator pos:line="43" pos:column="38">&amp;&amp;<pos:position pos:line="43" pos:column="48"/></operator> <call><name pos:line="43" pos:column="41">strEQ<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><name pos:line="43" pos:column="47">password<pos:position pos:line="43" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="57">"password"<pos:position pos:line="43" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="69"/></condition><then pos:line="43" pos:column="69"> <block pos:line="43" pos:column="70">{
                <expr_stmt><expr><call><name pos:line="44" pos:column="17">ap_log_rerror<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">APLOG_MARK<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="43">APLOG_ERR<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="54">0<pos:position pos:line="44" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="57">r<pos:position pos:line="44" pos:column="58"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="45" pos:column="21">"Encountered FakeBasicAuth spoof: %s"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="60">username<pos:position pos:line="45" pos:column="68"/></name></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="70"/></expr_stmt>
                <return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="46" pos:column="38"/></name></expr>;<pos:position pos:line="46" pos:column="39"/></return>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="51" pos:column="5">/*
     * We decline operation in various situations...
     * - SSLOptions +FakeBasicAuth not configured
     * - r-&gt;user already authenticated
     * - ssl not enabled
     * - client did not present a certificate
     */</comment>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><operator pos:line="58" pos:column="11">(<pos:position pos:line="58" pos:column="12"/></operator><name><name pos:line="58" pos:column="12">sc<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">enabled<pos:position pos:line="58" pos:column="23"/></name></name> <operator pos:line="58" pos:column="24">==<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">SSL_ENABLED_TRUE<pos:position pos:line="58" pos:column="43"/></name> <operator pos:line="58" pos:column="44">||<pos:position pos:line="58" pos:column="46"/></operator> <name><name pos:line="58" pos:column="47">sc<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">enabled<pos:position pos:line="58" pos:column="58"/></name></name> <operator pos:line="58" pos:column="59">==<pos:position pos:line="58" pos:column="61"/></operator> <name pos:line="58" pos:column="62">SSL_ENABLED_OPTIONAL<pos:position pos:line="58" pos:column="82"/></name><operator pos:line="58" pos:column="82">)<pos:position pos:line="58" pos:column="83"/></operator>
          <operator pos:line="59" pos:column="11">&amp;&amp;<pos:position pos:line="59" pos:column="21"/></operator> <name pos:line="59" pos:column="14">sslconn<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">&amp;&amp;<pos:position pos:line="59" pos:column="32"/></operator> <name><name pos:line="59" pos:column="25">sslconn<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">-&gt;<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="34">ssl<pos:position pos:line="59" pos:column="37"/></name></name> <operator pos:line="59" pos:column="38">&amp;&amp;<pos:position pos:line="59" pos:column="48"/></operator> <name><name pos:line="59" pos:column="41">sslconn<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">-&gt;<pos:position pos:line="59" pos:column="53"/></operator><name pos:line="59" pos:column="50">client_cert<pos:position pos:line="59" pos:column="61"/></name></name><operator pos:line="59" pos:column="61">)<pos:position pos:line="59" pos:column="62"/></operator> <operator pos:line="59" pos:column="63">||<pos:position pos:line="59" pos:column="65"/></operator>
        <operator pos:line="60" pos:column="9">!<pos:position pos:line="60" pos:column="10"/></operator><operator pos:line="60" pos:column="10">(<pos:position pos:line="60" pos:column="11"/></operator><name><name pos:line="60" pos:column="11">dc<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">nOptions<pos:position pos:line="60" pos:column="23"/></name></name> <operator pos:line="60" pos:column="24">&amp;<pos:position pos:line="60" pos:column="29"/></operator> <name pos:line="60" pos:column="26">SSL_OPT_FAKEBASICAUTH<pos:position pos:line="60" pos:column="47"/></name><operator pos:line="60" pos:column="47">)<pos:position pos:line="60" pos:column="48"/></operator> <operator pos:line="60" pos:column="49">||<pos:position pos:line="60" pos:column="51"/></operator> <name><name pos:line="60" pos:column="52">r<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">-&gt;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="55">user<pos:position pos:line="60" pos:column="59"/></name></name></expr>)<pos:position pos:line="60" pos:column="60"/></condition><then pos:line="60" pos:column="60">
    <block pos:line="61" pos:column="5">{
        <return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">DECLINED<pos:position pos:line="62" pos:column="24"/></name></expr>;<pos:position pos:line="62" pos:column="25"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><name><name pos:line="65" pos:column="10">sslconn<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">-&gt;<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="19">client_dn<pos:position pos:line="65" pos:column="28"/></name></name></expr>)<pos:position pos:line="65" pos:column="29"/></condition><then pos:line="65" pos:column="29"> <block pos:line="65" pos:column="30">{
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">X509_NAME<pos:position pos:line="66" pos:column="18"/></name> <modifier pos:line="66" pos:column="19">*<pos:position pos:line="66" pos:column="20"/></modifier></type><name pos:line="66" pos:column="20">name<pos:position pos:line="66" pos:column="24"/></name> <init pos:line="66" pos:column="25">= <expr><call><name pos:line="66" pos:column="27">X509_get_subject_name<pos:position pos:line="66" pos:column="48"/></name><argument_list pos:line="66" pos:column="48">(<argument><expr><name><name pos:line="66" pos:column="49">sslconn<pos:position pos:line="66" pos:column="56"/></name><operator pos:line="66" pos:column="56">-&gt;<pos:position pos:line="66" pos:column="61"/></operator><name pos:line="66" pos:column="58">client_cert<pos:position pos:line="66" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="66" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">char<pos:position pos:line="67" pos:column="13"/></name> <modifier pos:line="67" pos:column="14">*<pos:position pos:line="67" pos:column="15"/></modifier></type><name pos:line="67" pos:column="15">cp<pos:position pos:line="67" pos:column="17"/></name> <init pos:line="67" pos:column="18">= <expr><call><name pos:line="67" pos:column="20">X509_NAME_oneline<pos:position pos:line="67" pos:column="37"/></name><argument_list pos:line="67" pos:column="37">(<argument><expr><name pos:line="67" pos:column="38">name<pos:position pos:line="67" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="44">NULL<pos:position pos:line="67" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="50">0<pos:position pos:line="67" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="53"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">sslconn<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">client_dn<pos:position pos:line="68" pos:column="27"/></name></name> <operator pos:line="68" pos:column="28">=<pos:position pos:line="68" pos:column="29"/></operator> <call><name pos:line="68" pos:column="30">apr_pstrdup<pos:position pos:line="68" pos:column="41"/></name><argument_list pos:line="68" pos:column="41">(<argument><expr><name><name pos:line="68" pos:column="42">r<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">-&gt;<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="45">connection<pos:position pos:line="68" pos:column="55"/></name><operator pos:line="68" pos:column="55">-&gt;<pos:position pos:line="68" pos:column="60"/></operator><name pos:line="68" pos:column="57">pool<pos:position pos:line="68" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="63">cp<pos:position pos:line="68" pos:column="65"/></name></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">modssl_free<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">cp<pos:position pos:line="69" pos:column="23"/></name></expr></argument>)<pos:position pos:line="69" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="72" pos:column="5">clientdn<pos:position pos:line="72" pos:column="13"/></name> <operator pos:line="72" pos:column="14">=<pos:position pos:line="72" pos:column="15"/></operator> <operator pos:line="72" pos:column="16">(<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="17">char<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">*<pos:position pos:line="72" pos:column="23"/></operator><operator pos:line="72" pos:column="23">)<pos:position pos:line="72" pos:column="24"/></operator><name><name pos:line="72" pos:column="24">sslconn<pos:position pos:line="72" pos:column="31"/></name><operator pos:line="72" pos:column="31">-&gt;<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="33">client_dn<pos:position pos:line="72" pos:column="42"/></name></name></expr>;<pos:position pos:line="72" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="74" pos:column="5">/*
     * Fake a password - which one would be immaterial, as, it seems, an empty
     * password in the users file would match ALL incoming passwords, if only
     * we were using the standard crypt library routine. Unfortunately, OpenSSL
     * "fixes" a "bug" in crypt and thus prevents blank passwords from
     * working.  (IMHO what they really fix is a bug in the users of the code
     * - failing to program correctly for shadow passwords).  We need,
     * therefore, to provide a password. This password can be matched by
     * adding the string "xxj31ZMTZzkVA" as the password in the user file.
     * This is just the crypted variant of the word "password" ;-)
     */</comment>
    <expr_stmt><expr><name pos:line="85" pos:column="5">auth_line<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">=<pos:position pos:line="85" pos:column="16"/></operator> <call><name pos:line="85" pos:column="17">apr_pstrcat<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><name><name pos:line="85" pos:column="29">r<pos:position pos:line="85" pos:column="30"/></name><operator pos:line="85" pos:column="30">-&gt;<pos:position pos:line="85" pos:column="35"/></operator><name pos:line="85" pos:column="32">pool<pos:position pos:line="85" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="38">"Basic "<pos:position pos:line="85" pos:column="46"/></literal></expr></argument>,
                            <argument><expr><call><name pos:line="86" pos:column="29">ap_pbase64encode<pos:position pos:line="86" pos:column="45"/></name><argument_list pos:line="86" pos:column="45">(<argument><expr><name><name pos:line="86" pos:column="46">r<pos:position pos:line="86" pos:column="47"/></name><operator pos:line="86" pos:column="47">-&gt;<pos:position pos:line="86" pos:column="52"/></operator><name pos:line="86" pos:column="49">pool<pos:position pos:line="86" pos:column="53"/></name></name></expr></argument>,
                                             <argument><expr><call><name pos:line="87" pos:column="46">apr_pstrcat<pos:position pos:line="87" pos:column="57"/></name><argument_list pos:line="87" pos:column="57">(<argument><expr><name><name pos:line="87" pos:column="58">r<pos:position pos:line="87" pos:column="59"/></name><operator pos:line="87" pos:column="59">-&gt;<pos:position pos:line="87" pos:column="64"/></operator><name pos:line="87" pos:column="61">pool<pos:position pos:line="87" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="67">clientdn<pos:position pos:line="87" pos:column="75"/></name></expr></argument>,
                                                         <argument><expr><literal type="string" pos:line="88" pos:column="58">":password"<pos:position pos:line="88" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="71">NULL<pos:position pos:line="88" pos:column="75"/></name></expr></argument>)<pos:position pos:line="88" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="77"/></argument_list></call></expr></argument>,
                            <argument><expr><name pos:line="89" pos:column="29">NULL<pos:position pos:line="89" pos:column="33"/></name></expr></argument>)<pos:position pos:line="89" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="90" pos:column="5">apr_table_set<pos:position pos:line="90" pos:column="18"/></name><argument_list pos:line="90" pos:column="18">(<argument><expr><name><name pos:line="90" pos:column="19">r<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">headers_in<pos:position pos:line="90" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="34">"Authorization"<pos:position pos:line="90" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="51">auth_line<pos:position pos:line="90" pos:column="60"/></name></expr></argument>)<pos:position pos:line="90" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="92" pos:column="5">ap_log_rerror<pos:position pos:line="92" pos:column="18"/></name><argument_list pos:line="92" pos:column="18">(<argument><expr><name pos:line="92" pos:column="19">APLOG_MARK<pos:position pos:line="92" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="31">APLOG_INFO<pos:position pos:line="92" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="43">0<pos:position pos:line="92" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="46">r<pos:position pos:line="92" pos:column="47"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="93" pos:column="19">"Faking HTTP Basic Auth header: \"Authorization: %s\""<pos:position pos:line="93" pos:column="73"/></literal></expr></argument>,
                  <argument><expr><name pos:line="94" pos:column="19">auth_line<pos:position pos:line="94" pos:column="28"/></name></expr></argument>)<pos:position pos:line="94" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="30"/></expr_stmt>

    <return pos:line="96" pos:column="5">return <expr><name pos:line="96" pos:column="12">DECLINED<pos:position pos:line="96" pos:column="20"/></name></expr>;<pos:position pos:line="96" pos:column="21"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1161_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">include_cgi<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">s<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">r<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">ap_filter_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">next<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">apr_bucket<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">head_ptr<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">apr_bucket<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier><modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">inserted_head<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">rr<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name pos:line="4" pos:column="23">ap_sub_req_lookup_uri<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><name pos:line="4" pos:column="45">s<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="48">r<pos:position pos:line="4" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="51">next<pos:position pos:line="4" pos:column="55"/></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rr_status<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name>  <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">tmp_buck<pos:position pos:line="6" pos:column="26"/></name></decl>, <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="29">tmp2_buck<pos:position pos:line="6" pos:column="38"/></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">rr<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">status<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">!=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">HTTP_OK<pos:position pos:line="8" pos:column="30"/></name></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_destroy_sub_req<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">rr<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">-<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* No hardwired path info or query allowed */</comment>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name><name pos:line="15" pos:column="10">rr<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">path_info<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">&amp;&amp;<pos:position pos:line="15" pos:column="34"/></operator> <name><name pos:line="15" pos:column="27">rr<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">path_info<pos:position pos:line="15" pos:column="40"/></name><index pos:line="15" pos:column="40">[<expr><literal type="number" pos:line="15" pos:column="41">0<pos:position pos:line="15" pos:column="42"/></literal></expr>]<pos:position pos:line="15" pos:column="43"/></index></name><operator pos:line="15" pos:column="43">)<pos:position pos:line="15" pos:column="44"/></operator> <operator pos:line="15" pos:column="45">||<pos:position pos:line="15" pos:column="47"/></operator> <name><name pos:line="15" pos:column="48">rr<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">-&gt;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="52">args<pos:position pos:line="15" pos:column="56"/></name></name></expr>)<pos:position pos:line="15" pos:column="57"/></condition><then pos:line="15" pos:column="57"> <block pos:line="15" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ap_destroy_sub_req<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">rr<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">-<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">rr<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">finfo<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">.<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">filetype<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">!=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">APR_REG<pos:position pos:line="19" pos:column="38"/></name></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39"> <block pos:line="19" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_destroy_sub_req<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">rr<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">-<pos:position pos:line="21" pos:column="17"/></operator><literal type="number" pos:line="21" pos:column="17">1<pos:position pos:line="21" pos:column="18"/></literal></expr>;<pos:position pos:line="21" pos:column="19"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* Script gets parameters of the *document*, for back compatibility */</comment>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">rr<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">path_info<pos:position pos:line="26" pos:column="18"/></name></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name><name pos:line="26" pos:column="21">r<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">path_info<pos:position pos:line="26" pos:column="33"/></name></name></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>       <comment type="block" pos:line="26" pos:column="41">/* hard to get right; see mod_cgi.c */</comment>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">rr<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">args<pos:position pos:line="27" pos:column="13"/></name></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name><name pos:line="27" pos:column="16">r<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">args<pos:position pos:line="27" pos:column="23"/></name></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* Force sub_req to be treated as a CGI request, even if ordinary
     * typing rules would have called it something else.
     */</comment>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ap_set_content_type<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">rr<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="29">CGI_MAGIC_TYPE<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* Run it. */</comment>

    <expr_stmt><expr><name pos:line="36" pos:column="5">rr_status<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">ap_run_sub_req<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">rr<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name pos:line="37" pos:column="9">ap_is_HTTP_REDIRECT<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">rr_status<pos:position pos:line="37" pos:column="38"/></name></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40"> <block pos:line="37" pos:column="41">{
        <decl_stmt><decl><type><name pos:line="38" pos:column="9">apr_size_t<pos:position pos:line="38" pos:column="19"/></name></type> <name pos:line="38" pos:column="20">len_loc<pos:position pos:line="38" pos:column="27"/></name></decl>;<pos:position pos:line="38" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="39" pos:column="9">const<pos:position pos:line="39" pos:column="14"/></specifier> <name pos:line="39" pos:column="15">char<pos:position pos:line="39" pos:column="19"/></name> <modifier pos:line="39" pos:column="20">*<pos:position pos:line="39" pos:column="21"/></modifier></type><name pos:line="39" pos:column="21">location<pos:position pos:line="39" pos:column="29"/></name> <init pos:line="39" pos:column="30">= <expr><call><name pos:line="39" pos:column="32">apr_table_get<pos:position pos:line="39" pos:column="45"/></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name><name pos:line="39" pos:column="46">rr<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">headers_out<pos:position pos:line="39" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="63">"Location"<pos:position pos:line="39" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="75"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">conn_rec<pos:position pos:line="40" pos:column="17"/></name> <modifier pos:line="40" pos:column="18">*<pos:position pos:line="40" pos:column="19"/></modifier></type><name pos:line="40" pos:column="19">c<pos:position pos:line="40" pos:column="20"/></name> <init pos:line="40" pos:column="21">= <expr><name><name pos:line="40" pos:column="23">r<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">connection<pos:position pos:line="40" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="40" pos:column="37"/></decl_stmt>

        <expr_stmt><expr><name pos:line="42" pos:column="9">location<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <call><name pos:line="42" pos:column="20">ap_escape_html<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">(<argument><expr><name><name pos:line="42" pos:column="35">rr<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">-&gt;<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="39">pool<pos:position pos:line="42" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="45">location<pos:position pos:line="42" pos:column="53"/></name></expr></argument>)<pos:position pos:line="42" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="43" pos:column="9">len_loc<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <call><name pos:line="43" pos:column="19">strlen<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">location<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="45" pos:column="9">/* XXX: if most of this stuff is going to get copied anyway,
         * it'd be more efficient to pstrcat it into a single pool buffer
         * and a single pool bucket */</comment>

        <expr_stmt><expr><name pos:line="49" pos:column="9">tmp_buck<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <call><name pos:line="49" pos:column="20">apr_bucket_immortal_create<pos:position pos:line="49" pos:column="46"/></name><argument_list pos:line="49" pos:column="46">(<argument><expr><literal type="string" pos:line="49" pos:column="47">"&lt;A HREF=\""<pos:position pos:line="49" pos:column="62"/></literal></expr></argument>,
                                              <argument><expr><sizeof pos:line="50" pos:column="47">sizeof<argument_list pos:line="50" pos:column="53">(<argument><expr><literal type="string" pos:line="50" pos:column="54">"&lt;A HREF=\""<pos:position pos:line="50" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></sizeof> <operator pos:line="50" pos:column="68">-<pos:position pos:line="50" pos:column="69"/></operator> <literal type="number" pos:line="50" pos:column="70">1<pos:position pos:line="50" pos:column="71"/></literal></expr></argument>,
                                              <argument><expr><name><name pos:line="51" pos:column="47">c<pos:position pos:line="51" pos:column="48"/></name><operator pos:line="51" pos:column="48">-&gt;<pos:position pos:line="51" pos:column="53"/></operator><name pos:line="51" pos:column="50">bucket_alloc<pos:position pos:line="51" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">head_ptr<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="44">tmp_buck<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">tmp2_buck<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <call><name pos:line="53" pos:column="21">apr_bucket_heap_create<pos:position pos:line="53" pos:column="43"/></name><argument_list pos:line="53" pos:column="43">(<argument><expr><name pos:line="53" pos:column="44">location<pos:position pos:line="53" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="54">len_loc<pos:position pos:line="53" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="63">NULL<pos:position pos:line="53" pos:column="67"/></name></expr></argument>,
                                           <argument><expr><name><name pos:line="54" pos:column="44">c<pos:position pos:line="54" pos:column="45"/></name><operator pos:line="54" pos:column="45">-&gt;<pos:position pos:line="54" pos:column="50"/></operator><name pos:line="54" pos:column="47">bucket_alloc<pos:position pos:line="54" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name pos:line="55" pos:column="34">head_ptr<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">tmp2_buck<pos:position pos:line="55" pos:column="53"/></name></expr></argument>)<pos:position pos:line="55" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">tmp2_buck<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <call><name pos:line="56" pos:column="21">apr_bucket_immortal_create<pos:position pos:line="56" pos:column="47"/></name><argument_list pos:line="56" pos:column="47">(<argument><expr><literal type="string" pos:line="56" pos:column="48">"\"&gt;"<pos:position pos:line="56" pos:column="56"/></literal></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="55">sizeof<argument_list pos:line="56" pos:column="61">(<argument><expr><literal type="string" pos:line="56" pos:column="62">"\"&gt;"<pos:position pos:line="56" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></sizeof> <operator pos:line="56" pos:column="69">-<pos:position pos:line="56" pos:column="70"/></operator> <literal type="number" pos:line="56" pos:column="71">1<pos:position pos:line="56" pos:column="72"/></literal></expr></argument>,
                                               <argument><expr><name><name pos:line="57" pos:column="48">c<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">-&gt;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="51">bucket_alloc<pos:position pos:line="57" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">head_ptr<pos:position pos:line="58" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="44">tmp2_buck<pos:position pos:line="58" pos:column="53"/></name></expr></argument>)<pos:position pos:line="58" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">tmp2_buck<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">apr_bucket_heap_create<pos:position pos:line="59" pos:column="43"/></name><argument_list pos:line="59" pos:column="43">(<argument><expr><name pos:line="59" pos:column="44">location<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="54">len_loc<pos:position pos:line="59" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="63">NULL<pos:position pos:line="59" pos:column="67"/></name></expr></argument>,
                                           <argument><expr><name><name pos:line="60" pos:column="44">c<pos:position pos:line="60" pos:column="45"/></name><operator pos:line="60" pos:column="45">-&gt;<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="47">bucket_alloc<pos:position pos:line="60" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">head_ptr<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="44">tmp2_buck<pos:position pos:line="61" pos:column="53"/></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="62" pos:column="9">tmp2_buck<pos:position pos:line="62" pos:column="18"/></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <call><name pos:line="62" pos:column="21">apr_bucket_immortal_create<pos:position pos:line="62" pos:column="47"/></name><argument_list pos:line="62" pos:column="47">(<argument><expr><literal type="string" pos:line="62" pos:column="48">"&lt;/A&gt;"<pos:position pos:line="62" pos:column="60"/></literal></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="56">sizeof<argument_list pos:line="62" pos:column="62">(<argument><expr><literal type="string" pos:line="62" pos:column="63">"&lt;/A&gt;"<pos:position pos:line="62" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></sizeof> <operator pos:line="62" pos:column="71">-<pos:position pos:line="62" pos:column="72"/></operator> <literal type="number" pos:line="62" pos:column="73">1<pos:position pos:line="62" pos:column="74"/></literal></expr></argument>,
                                               <argument><expr><name><name pos:line="63" pos:column="48">c<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">-&gt;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="51">bucket_alloc<pos:position pos:line="63" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><name pos:line="64" pos:column="34">head_ptr<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="44">tmp2_buck<pos:position pos:line="64" pos:column="53"/></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>

        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">*<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">inserted_head<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">==<pos:position pos:line="66" pos:column="30"/></operator> <name pos:line="66" pos:column="31">NULL<pos:position pos:line="66" pos:column="35"/></name></expr>)<pos:position pos:line="66" pos:column="36"/></condition><then pos:line="66" pos:column="36"> <block pos:line="66" pos:column="37">{
            <expr_stmt><expr><operator pos:line="67" pos:column="13">*<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">inserted_head<pos:position pos:line="67" pos:column="27"/></name> <operator pos:line="67" pos:column="28">=<pos:position pos:line="67" pos:column="29"/></operator> <name pos:line="67" pos:column="30">tmp_buck<pos:position pos:line="67" pos:column="38"/></name></expr>;<pos:position pos:line="67" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">ap_destroy_sub_req<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">rr<pos:position pos:line="71" pos:column="26"/></name></expr></argument>)<pos:position pos:line="71" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>

    <return pos:line="73" pos:column="5">return <expr><literal type="number" pos:line="73" pos:column="12">0<pos:position pos:line="73" pos:column="13"/></literal></expr>;<pos:position pos:line="73" pos:column="14"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

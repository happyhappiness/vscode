<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2180_httpd-2.2.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ap_mpm_pod_killpg<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">ap_pod_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">pod<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">num<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">APR_SUCCESS<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* we don't write anything to the pod here...  we assume
     * that the would-be reader of the pod has another way to
     * see that it is time to die once we wake it up
     *
     * writing lots of things to the pod at once is very
     * problematic... we can fill the kernel pipe buffer and
     * be blocked until somebody consumes some bytes or
     * we hit a timeout...  if we hit a timeout we can't just
     * keep trying because maybe we'll never successfully
     * write again...  but then maybe we'll leave would-be
     * readers stranded (a number of them could be tied up for
     * a while serving time-consuming requests)
     */</comment>
    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">i<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></init> <condition><expr><name pos:line="19" pos:column="17">i<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&lt;<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="21">num<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&amp;&amp;<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="28">rv<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">==<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="34">APR_SUCCESS<pos:position pos:line="19" pos:column="45"/></name></expr>;<pos:position pos:line="19" pos:column="46"/></condition> <incr><expr><name pos:line="19" pos:column="47">i<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">++<pos:position pos:line="19" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="51"/></control> <block pos:line="19" pos:column="52">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">rv<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">dummy_connection<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">pod<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></for>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

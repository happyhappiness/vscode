<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2118_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">make_worker<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">slot<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">thread_id<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">tid<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">proc_info<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">my_info<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">proc_info<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></operator><operator pos:line="4" pos:column="38">)<pos:position pos:line="4" pos:column="39"/></operator><call><name pos:line="4" pos:column="39">malloc<pos:position pos:line="4" pos:column="45"/></name><argument_list pos:line="4" pos:column="45">(<argument><expr><sizeof pos:line="4" pos:column="46">sizeof<argument_list pos:line="4" pos:column="52">(<argument><expr><name pos:line="4" pos:column="53">proc_info<pos:position pos:line="4" pos:column="62"/></name></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt> <comment type="block" pos:line="4" pos:column="66">/* freed by thread... */</comment>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">my_info<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">==<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25"> <block pos:line="6" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">ap_log_error<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">APLOG_MARK<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">APLOG_ALERT<pos:position pos:line="7" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">errno<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="54">ap_server_conf<pos:position pos:line="7" pos:column="68"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="8" pos:column="13">"malloc: out of memory"<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">clean_child_exit<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">APEXIT_CHILDFATAL<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">my_info<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">slot<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">slot<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">apr_pool_create<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><operator pos:line="13" pos:column="21">&amp;<pos:position pos:line="13" pos:column="26"/></operator><name><name pos:line="13" pos:column="22">my_info<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">tpool<pos:position pos:line="13" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="38">pchild<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">slot<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">+<pos:position pos:line="15" pos:column="15"/></operator> <literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal> <operator pos:line="15" pos:column="18">&gt;<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="20">ap_max_child_assigned<pos:position pos:line="15" pos:column="41"/></name></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="13">ap_max_child_assigned<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">=<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">slot<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">+<pos:position pos:line="16" pos:column="43"/></operator> <literal type="number" pos:line="16" pos:column="44">1<pos:position pos:line="16" pos:column="45"/></literal></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">one_process<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
    	<expr_stmt><expr><call><name pos:line="19" pos:column="9">set_signals<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">()<pos:position pos:line="19" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">ap_scoreboard_image<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">parent<pos:position pos:line="20" pos:column="36"/></name><index pos:line="20" pos:column="36">[<expr><literal type="number" pos:line="20" pos:column="37">0<pos:position pos:line="20" pos:column="38"/></literal></expr>]<pos:position pos:line="20" pos:column="39"/></index></name><operator pos:line="20" pos:column="39">.<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="40">pid<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">=<pos:position pos:line="20" pos:column="45"/></operator> <call><name pos:line="20" pos:column="46">getpid<pos:position pos:line="20" pos:column="52"/></name><argument_list pos:line="20" pos:column="52">()<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="24" pos:column="5">(<pos:position pos:line="24" pos:column="6"/></operator><name pos:line="24" pos:column="6">void<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">)<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">ap_update_child_status_from_indexes<pos:position pos:line="24" pos:column="47"/></name><argument_list pos:line="24" pos:column="47">(<argument><expr><literal type="number" pos:line="24" pos:column="48">0<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">slot<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="57">SERVER_STARTING<pos:position pos:line="24" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="74">(<pos:position pos:line="24" pos:column="75"/></operator><name pos:line="24" pos:column="75">request_rec<pos:position pos:line="24" pos:column="86"/></name><operator pos:line="24" pos:column="86">*<pos:position pos:line="24" pos:column="87"/></operator><operator pos:line="24" pos:column="87">)<pos:position pos:line="24" pos:column="88"/></operator><name pos:line="24" pos:column="88">NULL<pos:position pos:line="24" pos:column="92"/></name></expr></argument>)<pos:position pos:line="24" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="94"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">tid<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">spawn_thread<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">worker_thread<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"apache_worker"<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">B_NORMAL_PRIORITY<pos:position pos:line="25" pos:column="73"/></name></expr></argument>,
        <argument><expr><name pos:line="26" pos:column="9">my_info<pos:position pos:line="26" pos:column="16"/></name></expr></argument>)<pos:position pos:line="26" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">tid<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">&lt;<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="15">B_NO_ERROR<pos:position pos:line="27" pos:column="25"/></name></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26"> <block pos:line="27" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ap_log_error<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">APLOG_MARK<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">APLOG_ERR<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">errno<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">NULL<pos:position pos:line="28" pos:column="56"/></name></expr></argument>, 
            <argument><expr><literal type="string" pos:line="29" pos:column="13">"spawn_thread: Unable to start a new thread"<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
        <comment type="block" pos:line="30" pos:column="9">/* In case system resources are maxxed out, we don't want
         * Apache running away with the CPU trying to fork over and
         * over and over again. 
         */</comment>
        <expr_stmt><expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">void<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">)<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">ap_update_child_status_from_indexes<pos:position pos:line="34" pos:column="51"/></name><argument_list pos:line="34" pos:column="51">(<argument><expr><literal type="number" pos:line="34" pos:column="52">0<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">slot<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="61">SERVER_DEAD<pos:position pos:line="34" pos:column="72"/></name></expr></argument>, 
                                                   <argument><expr><operator pos:line="35" pos:column="52">(<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="53">request_rec<pos:position pos:line="35" pos:column="64"/></name><operator pos:line="35" pos:column="64">*<pos:position pos:line="35" pos:column="65"/></operator><operator pos:line="35" pos:column="65">)<pos:position pos:line="35" pos:column="66"/></operator><name pos:line="35" pos:column="66">NULL<pos:position pos:line="35" pos:column="70"/></name></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="72"/></expr_stmt>
        
    	<expr_stmt><expr><call><name pos:line="37" pos:column="9">sleep<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><literal type="number" pos:line="37" pos:column="15">10<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">free<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">my_info<pos:position pos:line="38" pos:column="21"/></name></expr></argument>)<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
        
    	<return pos:line="40" pos:column="9">return <expr><operator pos:line="40" pos:column="16">-<pos:position pos:line="40" pos:column="17"/></operator><literal type="number" pos:line="40" pos:column="17">1<pos:position pos:line="40" pos:column="18"/></literal></expr>;<pos:position pos:line="40" pos:column="19"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">resume_thread<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">tid<pos:position pos:line="42" pos:column="22"/></name></expr></argument>)<pos:position pos:line="42" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="44" pos:column="5">ap_scoreboard_image<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">-&gt;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="26">servers<pos:position pos:line="44" pos:column="33"/></name><index pos:line="44" pos:column="33">[<expr><literal type="number" pos:line="44" pos:column="34">0<pos:position pos:line="44" pos:column="35"/></literal></expr>]<pos:position pos:line="44" pos:column="36"/></index><index pos:line="44" pos:column="36">[<expr><name pos:line="44" pos:column="37">slot<pos:position pos:line="44" pos:column="41"/></name></expr>]<pos:position pos:line="44" pos:column="42"/></index></name><operator pos:line="44" pos:column="42">.<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="43">tid<pos:position pos:line="44" pos:column="46"/></name> <operator pos:line="44" pos:column="47">=<pos:position pos:line="44" pos:column="48"/></operator> <name pos:line="44" pos:column="49">tid<pos:position pos:line="44" pos:column="52"/></name></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><literal type="number" pos:line="45" pos:column="12">0<pos:position pos:line="45" pos:column="13"/></literal></expr>;<pos:position pos:line="45" pos:column="14"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2662_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">insert_rows<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type> <name pos:line="1" pos:column="36">pool<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">apr_dbd_t<pos:position pos:line="1" pos:column="51"/></name><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="53">handle<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">apr_dbd_driver_t<pos:position pos:line="2" pos:column="46"/></name><modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">driver<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rv<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">nrows<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">nerrors<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">statement<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">=
        <expr><literal type="string" pos:line="9" pos:column="9">"INSERT into apr_dbd_test (col1) values ('foo');"<pos:position pos:line="9" pos:column="58"/></literal>
        <literal type="string" pos:line="10" pos:column="9">"INSERT into apr_dbd_test values ('wibble', 'other', 5);"<pos:position pos:line="10" pos:column="66"/></literal>
        <literal type="string" pos:line="11" pos:column="9">"INSERT into apr_dbd_test values ('wibble', 'nothing', 5);"<pos:position pos:line="11" pos:column="68"/></literal>
        <literal type="string" pos:line="12" pos:column="9">"INSERT into apr_dbd_test values ('qwerty', 'foo', 0);"<pos:position pos:line="12" pos:column="64"/></literal>
        <literal type="string" pos:line="13" pos:column="9">"INSERT into apr_dbd_test values ('asdfgh', 'bar', 1);"<pos:position pos:line="13" pos:column="64"/></literal></expr></init></decl>
    ;<pos:position pos:line="14" pos:column="6"/></decl_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">rv<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <call><name pos:line="15" pos:column="10">apr_dbd_query<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">driver<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">handle<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="40">&amp;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="41">nrows<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">statement<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">rv<pos:position pos:line="16" pos:column="11"/></name></expr>)<pos:position pos:line="16" pos:column="12"/></condition><then pos:line="16" pos:column="12"> <block pos:line="16" pos:column="13">{
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name><modifier pos:line="17" pos:column="19">*<pos:position pos:line="17" pos:column="20"/></modifier></type> <name><name pos:line="17" pos:column="21">stmt<pos:position pos:line="17" pos:column="25"/></name><index pos:line="17" pos:column="25">[]<pos:position pos:line="17" pos:column="27"/></index></name> <init pos:line="17" pos:column="28">= <expr><block pos:line="17" pos:column="30">{
            <expr><literal type="string" pos:line="18" pos:column="13">"INSERT into apr_dbd_test (col1) values ('foo');"<pos:position pos:line="18" pos:column="62"/></literal></expr>,
            <expr><literal type="string" pos:line="19" pos:column="13">"INSERT into apr_dbd_test values ('wibble', 'other', 5);"<pos:position pos:line="19" pos:column="70"/></literal></expr>,
            <expr><literal type="string" pos:line="20" pos:column="13">"INSERT into apr_dbd_test values ('wibble', 'nothing', 5);"<pos:position pos:line="20" pos:column="72"/></literal></expr>,
            <expr><literal type="string" pos:line="21" pos:column="13">"INSERT into apr_dbd_test values ('qwerty', 'foo', 0);"<pos:position pos:line="21" pos:column="68"/></literal></expr>,
            <expr><literal type="string" pos:line="22" pos:column="13">"INSERT into apr_dbd_test values ('asdfgh', 'bar', 1);"<pos:position pos:line="22" pos:column="68"/></literal></expr>,
            <expr><name pos:line="23" pos:column="13">NULL<pos:position pos:line="23" pos:column="17"/></name></expr>
        }<pos:position pos:line="24" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="24" pos:column="11"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">printf<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="string" pos:line="25" pos:column="16">"Compound insert failed; trying statements one-by-one\n"<pos:position pos:line="25" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr> ;<pos:position pos:line="25" pos:column="75"/></expr_stmt>
        <for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></init> <condition><expr><name><name pos:line="26" pos:column="19">stmt<pos:position pos:line="26" pos:column="23"/></name><index pos:line="26" pos:column="23">[<expr><name pos:line="26" pos:column="24">i<pos:position pos:line="26" pos:column="25"/></name></expr>]<pos:position pos:line="26" pos:column="26"/></index></name> <operator pos:line="26" pos:column="27">!=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">NULL<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></condition> <incr><expr><operator pos:line="26" pos:column="36">++<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">i<pos:position pos:line="26" pos:column="39"/></name></expr></incr>)<pos:position pos:line="26" pos:column="40"/></control> <block pos:line="26" pos:column="41">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">statement<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name><name pos:line="27" pos:column="25">stmt<pos:position pos:line="27" pos:column="29"/></name><index pos:line="27" pos:column="29">[<expr><name pos:line="27" pos:column="30">i<pos:position pos:line="27" pos:column="31"/></name></expr>]<pos:position pos:line="27" pos:column="32"/></index></name></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="28" pos:column="13">rv<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">apr_dbd_query<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">driver<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">handle<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="48">&amp;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="49">nrows<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">statement<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">rv<pos:position pos:line="29" pos:column="19"/></name></expr>)<pos:position pos:line="29" pos:column="20"/></condition><then pos:line="29" pos:column="20"> <block pos:line="29" pos:column="21">{
                <expr_stmt><expr><name pos:line="30" pos:column="17">nerrors<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">++<pos:position pos:line="30" pos:column="26"/></operator></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></for>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">nerrors<pos:position pos:line="33" pos:column="20"/></name></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21"> <block pos:line="33" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">printf<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="string" pos:line="34" pos:column="20">"%d single inserts failed too.\n"<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">nerrors<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr> ;<pos:position pos:line="34" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">rv<pos:position pos:line="37" pos:column="14"/></name></expr>;<pos:position pos:line="37" pos:column="15"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

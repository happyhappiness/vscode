<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2258_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ap_add_output_filters_by_type<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">request_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">r<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">core_dir_config<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">conf<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ctype<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">conf<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">core_dir_config<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></operator><operator pos:line="6" pos:column="30">)<pos:position pos:line="6" pos:column="31"/></operator><call><name pos:line="6" pos:column="31">ap_get_module_config<pos:position pos:line="6" pos:column="51"/></name><argument_list pos:line="6" pos:column="51">(<argument><expr><name><name pos:line="6" pos:column="52">r<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">per_dir_config<pos:position pos:line="6" pos:column="69"/></name></name></expr></argument>,
                                                   <argument><expr><operator pos:line="7" pos:column="52">&amp;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="53">core_module<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* We can't do anything with no content-type or if we don't have a
     * filter configured.
     */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">r<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">content_type<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator> <operator pos:line="12" pos:column="29">!<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="30">conf<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">ct_output_filters<pos:position pos:line="12" pos:column="53"/></name></name></expr>)<pos:position pos:line="12" pos:column="54"/></condition><then pos:line="12" pos:column="54"> <block pos:line="12" pos:column="55">{
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* remove c-t decoration */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">ctype<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">ap_field_noparam<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name><name pos:line="17" pos:column="30">r<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">pool<pos:position pos:line="17" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="39">r<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">content_type<pos:position pos:line="17" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">ctype<pos:position pos:line="18" pos:column="14"/></name></expr>)<pos:position pos:line="18" pos:column="15"/></condition><then pos:line="18" pos:column="15"> <block pos:line="18" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">ap_filter_rec_t<pos:position pos:line="19" pos:column="24"/></name> <modifier pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></modifier></type><name pos:line="19" pos:column="26">ct_filter<pos:position pos:line="19" pos:column="35"/></name></decl>;<pos:position pos:line="19" pos:column="36"/></decl_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">ct_filter<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">apr_hash_get<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name><name pos:line="20" pos:column="34">conf<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">ct_output_filters<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">ctype<pos:position pos:line="20" pos:column="64"/></name></expr></argument>,
                                 <argument><expr><name pos:line="21" pos:column="34">APR_HASH_KEY_STRING<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
        <while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><name pos:line="22" pos:column="16">ct_filter<pos:position pos:line="22" pos:column="25"/></name></expr>)<pos:position pos:line="22" pos:column="26"/></condition> <block pos:line="22" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ap_add_output_filter<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name><name pos:line="23" pos:column="34">ct_filter<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">name<pos:position pos:line="23" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">NULL<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="57">r<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="60">r<pos:position pos:line="23" pos:column="61"/></name><operator pos:line="23" pos:column="61">-&gt;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="63">connection<pos:position pos:line="23" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name pos:line="24" pos:column="13">ct_filter<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <name><name pos:line="24" pos:column="25">ct_filter<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">next<pos:position pos:line="24" pos:column="40"/></name></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></while>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <return pos:line="28" pos:column="5">return;<pos:position pos:line="28" pos:column="12"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

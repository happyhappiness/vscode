<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3712.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">filter_lookup<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">ap_filter_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">f<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">ap_filter_rec_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">filter<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_filter_provider_t<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">provider<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">match<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">err<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">request_rec<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">r<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">f<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">r<pos:position pos:line="6" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">harness_ctx<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">ctx<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name><name pos:line="7" pos:column="24">f<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">ctx<pos:position pos:line="7" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">provider_ctx<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">pctx<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
<cpp:ifndef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifndef<pos:position pos:line="9" pos:column="8"/></cpp:directive> <name pos:line="9" pos:column="9">NO_PROTOCOL<pos:position pos:line="9" pos:column="20"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">int<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">proto_flags<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">mod_filter_ctx<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">rctx<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><call><name pos:line="11" pos:column="28">ap_get_module_config<pos:position pos:line="11" pos:column="48"/></name><argument_list pos:line="11" pos:column="48">(<argument><expr><name><name pos:line="11" pos:column="49">r<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">-&gt;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="52">request_config<pos:position pos:line="11" pos:column="66"/></name></name></expr></argument>,
                                                <argument><expr><operator pos:line="12" pos:column="49">&amp;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="50">filter_module<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="65"/></decl_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="15" pos:column="5">/* Check registered providers in order */</comment>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">provider<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name><name pos:line="16" pos:column="21">filter<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">providers<pos:position pos:line="16" pos:column="38"/></name></name></expr>;<pos:position pos:line="16" pos:column="39"/></init> <condition><expr><name pos:line="16" pos:column="40">provider<pos:position pos:line="16" pos:column="48"/></name></expr>;<pos:position pos:line="16" pos:column="49"/></condition> <incr><expr><name pos:line="16" pos:column="50">provider<pos:position pos:line="16" pos:column="58"/></name> <operator pos:line="16" pos:column="59">=<pos:position pos:line="16" pos:column="60"/></operator> <name><name pos:line="16" pos:column="61">provider<pos:position pos:line="16" pos:column="69"/></name><operator pos:line="16" pos:column="69">-&gt;<pos:position pos:line="16" pos:column="74"/></operator><name pos:line="16" pos:column="71">next<pos:position pos:line="16" pos:column="75"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="76"/></control> <block pos:line="16" pos:column="77">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">provider<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">expr<pos:position pos:line="17" pos:column="27"/></name></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28"> <block pos:line="17" pos:column="29">{
            <expr_stmt><expr><name pos:line="18" pos:column="13">match<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">ap_expr_exec<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">r<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="37">provider<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">-&gt;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="47">expr<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="53">&amp;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="54">err<pos:position pos:line="18" pos:column="57"/></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">err<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
                <expr_stmt><expr><call><name pos:line="20" pos:column="17">ap_log_rerror<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">APLOG_MARK<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">APLOG_ERR<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="54">0<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">r<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="60">APLOGNO<pos:position pos:line="20" pos:column="67"/></name><argument_list pos:line="20" pos:column="67">(<argument><expr><literal type="number" pos:line="20" pos:column="68">01379<pos:position pos:line="20" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call>
                              <literal type="string" pos:line="21" pos:column="31">"Error evaluating filter dispatch condition: %s"<pos:position pos:line="21" pos:column="79"/></literal></expr></argument>,
                              <argument><expr><name pos:line="22" pos:column="31">err<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name pos:line="23" pos:column="17">match<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">ap_log_rerror<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">APLOG_MARK<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">APLOG_TRACE2<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="53">0<pos:position pos:line="25" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">r<pos:position pos:line="25" pos:column="57"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="26" pos:column="27">"Expression condition for '%s' %s"<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="27" pos:column="27">provider<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">frec<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">name<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name pos:line="28" pos:column="27">match<pos:position pos:line="28" pos:column="32"/></name></expr> ?<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34"> <expr><literal type="string" pos:line="28" pos:column="35">"matched"<pos:position pos:line="28" pos:column="44"/></literal></expr> <pos:position pos:line="28" pos:column="45"/></then><else pos:line="28" pos:column="45">: <expr><literal type="string" pos:line="28" pos:column="47">"did not match"<pos:position pos:line="28" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then>
        <elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><name><name pos:line="30" pos:column="18">r<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">content_type<pos:position pos:line="30" pos:column="33"/></name></name></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34"> <block pos:line="30" pos:column="35">{
            <decl_stmt><decl><type><specifier pos:line="31" pos:column="13">const<pos:position pos:line="31" pos:column="18"/></specifier> <name pos:line="31" pos:column="19">char<pos:position pos:line="31" pos:column="23"/></name> <modifier pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></modifier><modifier pos:line="31" pos:column="25">*<pos:position pos:line="31" pos:column="26"/></modifier></type><name pos:line="31" pos:column="26">type<pos:position pos:line="31" pos:column="30"/></name> <init pos:line="31" pos:column="31">= <expr><name><name pos:line="31" pos:column="33">provider<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">-&gt;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="43">types<pos:position pos:line="31" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="31" pos:column="49"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="32" pos:column="13">size_t<pos:position pos:line="32" pos:column="19"/></name></type> <name pos:line="32" pos:column="20">len<pos:position pos:line="32" pos:column="23"/></name> <init pos:line="32" pos:column="24">= <expr><call><name pos:line="32" pos:column="26">strcspn<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name><name pos:line="32" pos:column="34">r<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">content_type<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="51">"; \t"<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="59"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">AP_DEBUG_ASSERT<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">type<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">!=<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">NULL<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
            <while pos:line="34" pos:column="13">while <condition pos:line="34" pos:column="19">(<expr><operator pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">type<pos:position pos:line="34" pos:column="25"/></name></expr>)<pos:position pos:line="34" pos:column="26"/></condition> <block pos:line="34" pos:column="27">{
                <comment type="block" pos:line="35" pos:column="17">/* Handle 'content-type;charset=...' correctly */</comment>
                <if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">strncmp<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><operator pos:line="36" pos:column="29">*<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">type<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="36">r<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">content_type<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">len<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call> <operator pos:line="36" pos:column="58">==<pos:position pos:line="36" pos:column="60"/></operator> <literal type="number" pos:line="36" pos:column="61">0<pos:position pos:line="36" pos:column="62"/></literal>
                    <operator pos:line="37" pos:column="21">&amp;&amp;<pos:position pos:line="37" pos:column="31"/></operator> <operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">*<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">type<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">)<pos:position pos:line="37" pos:column="31"/></operator><index pos:line="37" pos:column="31">[<expr><name pos:line="37" pos:column="32">len<pos:position pos:line="37" pos:column="35"/></name></expr>]<pos:position pos:line="37" pos:column="36"/></index> <operator pos:line="37" pos:column="37">==<pos:position pos:line="37" pos:column="39"/></operator> <literal type="char" pos:line="37" pos:column="40">'\0'<pos:position pos:line="37" pos:column="44"/></literal></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45"> <block pos:line="37" pos:column="46">{
                    <expr_stmt><expr><name pos:line="38" pos:column="21">match<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <literal type="number" pos:line="38" pos:column="29">1<pos:position pos:line="38" pos:column="30"/></literal></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
                    <break pos:line="39" pos:column="21">break;<pos:position pos:line="39" pos:column="27"/></break>
                }<pos:position pos:line="40" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="41" pos:column="17">type<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">++<pos:position pos:line="41" pos:column="23"/></operator></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="42" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_log_rerror<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">APLOG_MARK<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">APLOG_TRACE2<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="53">0<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="56">r<pos:position pos:line="43" pos:column="57"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="44" pos:column="27">"Content-Type condition for '%s' %s"<pos:position pos:line="44" pos:column="63"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="45" pos:column="27">provider<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">-&gt;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="37">frec<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">name<pos:position pos:line="45" pos:column="47"/></name></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name pos:line="46" pos:column="27">match<pos:position pos:line="46" pos:column="32"/></name></expr> ?<pos:position pos:line="46" pos:column="34"/></condition><then pos:line="46" pos:column="34"> <expr><literal type="string" pos:line="46" pos:column="35">"matched"<pos:position pos:line="46" pos:column="44"/></literal></expr> <pos:position pos:line="46" pos:column="45"/></then><else pos:line="46" pos:column="45">: <expr><literal type="string" pos:line="46" pos:column="47">"did not match"<pos:position pos:line="46" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">match<pos:position pos:line="49" pos:column="18"/></name></expr>)<pos:position pos:line="49" pos:column="19"/></condition><then pos:line="49" pos:column="19"> <block pos:line="49" pos:column="20">{
            <comment type="block" pos:line="50" pos:column="13">/* condition matches this provider */</comment>
<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef<pos:position pos:line="51" pos:column="8"/></cpp:directive> <name pos:line="51" pos:column="9">NO_PROTOCOL<pos:position pos:line="51" pos:column="20"/></name></cpp:ifndef>
            <comment type="block" pos:line="52" pos:column="13">/* check protocol
             *
             * FIXME:
             * This is a quick hack and almost certainly buggy.
             * The idea is that by putting this in mod_filter, we relieve
             * filter implementations of the burden of fixing up HTTP headers
             * for cases that are routinely affected by filters.
             *
             * Default is ALWAYS to do nothing, so as not to tread on the
             * toes of filters which want to do it themselves.
             *
             */</comment>
            <expr_stmt><expr><name pos:line="64" pos:column="13">proto_flags<pos:position pos:line="64" pos:column="24"/></name> <operator pos:line="64" pos:column="25">=<pos:position pos:line="64" pos:column="26"/></operator> <name><name pos:line="64" pos:column="27">provider<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">-&gt;<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="37">frec<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">-&gt;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="43">proto_flags<pos:position pos:line="64" pos:column="54"/></name></name></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>

            <comment type="block" pos:line="66" pos:column="13">/* some specific things can't happen in a proxy */</comment>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><name><name pos:line="67" pos:column="17">r<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">-&gt;<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="20">proxyreq<pos:position pos:line="67" pos:column="28"/></name></name></expr>)<pos:position pos:line="67" pos:column="29"/></condition><then pos:line="67" pos:column="29"> <block pos:line="67" pos:column="30">{
                <if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">proto_flags<pos:position pos:line="68" pos:column="32"/></name> <operator pos:line="68" pos:column="33">&amp;<pos:position pos:line="68" pos:column="38"/></operator> <name pos:line="68" pos:column="35">AP_FILTER_PROTO_NO_PROXY<pos:position pos:line="68" pos:column="59"/></name></expr>)<pos:position pos:line="68" pos:column="60"/></condition><then pos:line="68" pos:column="60"> <block pos:line="68" pos:column="61">{
                    <comment type="block" pos:line="69" pos:column="21">/* can't use this provider; try next */</comment>
                    <continue pos:line="70" pos:column="21">continue;<pos:position pos:line="70" pos:column="30"/></continue>
                }<pos:position pos:line="71" pos:column="18"/></block></then></if>

                <if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">proto_flags<pos:position pos:line="73" pos:column="32"/></name> <operator pos:line="73" pos:column="33">&amp;<pos:position pos:line="73" pos:column="38"/></operator> <name pos:line="73" pos:column="35">AP_FILTER_PROTO_TRANSFORM<pos:position pos:line="73" pos:column="60"/></name></expr>)<pos:position pos:line="73" pos:column="61"/></condition><then pos:line="73" pos:column="61"> <block pos:line="73" pos:column="62">{
                    <decl_stmt><decl><type><specifier pos:line="74" pos:column="21">const<pos:position pos:line="74" pos:column="26"/></specifier> <name pos:line="74" pos:column="27">char<pos:position pos:line="74" pos:column="31"/></name> <modifier pos:line="74" pos:column="32">*<pos:position pos:line="74" pos:column="33"/></modifier></type><name pos:line="74" pos:column="33">str<pos:position pos:line="74" pos:column="36"/></name> <init pos:line="74" pos:column="37">= <expr><call><name pos:line="74" pos:column="39">apr_table_get<pos:position pos:line="74" pos:column="52"/></name><argument_list pos:line="74" pos:column="52">(<argument><expr><name><name pos:line="74" pos:column="53">r<pos:position pos:line="74" pos:column="54"/></name><operator pos:line="74" pos:column="54">-&gt;<pos:position pos:line="74" pos:column="59"/></operator><name pos:line="74" pos:column="56">headers_out<pos:position pos:line="74" pos:column="67"/></name></name></expr></argument>,
                                                    <argument><expr><literal type="string" pos:line="75" pos:column="53">"Cache-Control"<pos:position pos:line="75" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="70"/></decl_stmt>
                    <if pos:line="76" pos:column="21">if <condition pos:line="76" pos:column="24">(<expr><name pos:line="76" pos:column="25">str<pos:position pos:line="76" pos:column="28"/></name></expr>)<pos:position pos:line="76" pos:column="29"/></condition><then pos:line="76" pos:column="29"> <block pos:line="76" pos:column="30">{
                        <decl_stmt><decl><type><name pos:line="77" pos:column="25">char<pos:position pos:line="77" pos:column="29"/></name> <modifier pos:line="77" pos:column="30">*<pos:position pos:line="77" pos:column="31"/></modifier></type><name pos:line="77" pos:column="31">str1<pos:position pos:line="77" pos:column="35"/></name> <init pos:line="77" pos:column="36">= <expr><call><name pos:line="77" pos:column="38">apr_pstrdup<pos:position pos:line="77" pos:column="49"/></name><argument_list pos:line="77" pos:column="49">(<argument><expr><name><name pos:line="77" pos:column="50">r<pos:position pos:line="77" pos:column="51"/></name><operator pos:line="77" pos:column="51">-&gt;<pos:position pos:line="77" pos:column="56"/></operator><name pos:line="77" pos:column="53">pool<pos:position pos:line="77" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="59">str<pos:position pos:line="77" pos:column="62"/></name></expr></argument>)<pos:position pos:line="77" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="77" pos:column="64"/></decl_stmt>
                        <expr_stmt><expr><call><name pos:line="78" pos:column="25">ap_str_tolower<pos:position pos:line="78" pos:column="39"/></name><argument_list pos:line="78" pos:column="39">(<argument><expr><name pos:line="78" pos:column="40">str1<pos:position pos:line="78" pos:column="44"/></name></expr></argument>)<pos:position pos:line="78" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="46"/></expr_stmt>
                        <if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><call><name pos:line="79" pos:column="29">strstr<pos:position pos:line="79" pos:column="35"/></name><argument_list pos:line="79" pos:column="35">(<argument><expr><name pos:line="79" pos:column="36">str1<pos:position pos:line="79" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="42">"no-transform"<pos:position pos:line="79" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="58"/></condition><then pos:line="79" pos:column="58"> <block pos:line="79" pos:column="59">{
                            <comment type="block" pos:line="80" pos:column="29">/* can't use this provider; try next */</comment>
                            <continue pos:line="81" pos:column="29">continue;<pos:position pos:line="81" pos:column="38"/></continue>
                        }<pos:position pos:line="82" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="83" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="84" pos:column="21">apr_table_addn<pos:position pos:line="84" pos:column="35"/></name><argument_list pos:line="84" pos:column="35">(<argument><expr><name><name pos:line="84" pos:column="36">r<pos:position pos:line="84" pos:column="37"/></name><operator pos:line="84" pos:column="37">-&gt;<pos:position pos:line="84" pos:column="42"/></operator><name pos:line="84" pos:column="39">headers_out<pos:position pos:line="84" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="52">"Warning"<pos:position pos:line="84" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><call><name pos:line="85" pos:column="36">apr_psprintf<pos:position pos:line="85" pos:column="48"/></name><argument_list pos:line="85" pos:column="48">(<argument><expr><name><name pos:line="85" pos:column="49">r<pos:position pos:line="85" pos:column="50"/></name><operator pos:line="85" pos:column="50">-&gt;<pos:position pos:line="85" pos:column="55"/></operator><name pos:line="85" pos:column="52">pool<pos:position pos:line="85" pos:column="56"/></name></name></expr></argument>,
                                                <argument><expr><literal type="string" pos:line="86" pos:column="49">"214 %s Transformation applied"<pos:position pos:line="86" pos:column="80"/></literal></expr></argument>,
                                                <argument><expr><name><name pos:line="87" pos:column="49">r<pos:position pos:line="87" pos:column="50"/></name><operator pos:line="87" pos:column="50">-&gt;<pos:position pos:line="87" pos:column="55"/></operator><name pos:line="87" pos:column="52">hostname<pos:position pos:line="87" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="63"/></expr_stmt>
                }<pos:position pos:line="88" pos:column="18"/></block></then></if>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="91" pos:column="13">/* things that are invalidated if the filter transforms content */</comment>
            <if pos:line="92" pos:column="13">if <condition pos:line="92" pos:column="16">(<expr><name pos:line="92" pos:column="17">proto_flags<pos:position pos:line="92" pos:column="28"/></name> <operator pos:line="92" pos:column="29">&amp;<pos:position pos:line="92" pos:column="34"/></operator> <name pos:line="92" pos:column="31">AP_FILTER_PROTO_CHANGE<pos:position pos:line="92" pos:column="53"/></name></expr>)<pos:position pos:line="92" pos:column="54"/></condition><then pos:line="92" pos:column="54"> <block pos:line="92" pos:column="55">{
                <expr_stmt><expr><call><name pos:line="93" pos:column="17">apr_table_unset<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name><name pos:line="93" pos:column="33">r<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">headers_out<pos:position pos:line="93" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="49">"Content-MD5"<pos:position pos:line="93" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="94" pos:column="17">apr_table_unset<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name><name pos:line="94" pos:column="33">r<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">-&gt;<pos:position pos:line="94" pos:column="39"/></operator><name pos:line="94" pos:column="36">headers_out<pos:position pos:line="94" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="49">"ETag"<pos:position pos:line="94" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="57"/></expr_stmt>
                <if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name pos:line="95" pos:column="21">proto_flags<pos:position pos:line="95" pos:column="32"/></name> <operator pos:line="95" pos:column="33">&amp;<pos:position pos:line="95" pos:column="38"/></operator> <name pos:line="95" pos:column="35">AP_FILTER_PROTO_CHANGE_LENGTH<pos:position pos:line="95" pos:column="64"/></name></expr>)<pos:position pos:line="95" pos:column="65"/></condition><then pos:line="95" pos:column="65"> <block pos:line="95" pos:column="66">{
                    <expr_stmt><expr><call><name pos:line="96" pos:column="21">apr_table_unset<pos:position pos:line="96" pos:column="36"/></name><argument_list pos:line="96" pos:column="36">(<argument><expr><name><name pos:line="96" pos:column="37">r<pos:position pos:line="96" pos:column="38"/></name><operator pos:line="96" pos:column="38">-&gt;<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="40">headers_out<pos:position pos:line="96" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="53">"Content-Length"<pos:position pos:line="96" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="71"/></expr_stmt>
                }<pos:position pos:line="97" pos:column="18"/></block></then></if>
            }<pos:position pos:line="98" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="100" pos:column="13">/* no-cache is for a filter that has different effect per-hit */</comment>
            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><name pos:line="101" pos:column="17">proto_flags<pos:position pos:line="101" pos:column="28"/></name> <operator pos:line="101" pos:column="29">&amp;<pos:position pos:line="101" pos:column="34"/></operator> <name pos:line="101" pos:column="31">AP_FILTER_PROTO_NO_CACHE<pos:position pos:line="101" pos:column="55"/></name></expr>)<pos:position pos:line="101" pos:column="56"/></condition><then pos:line="101" pos:column="56"> <block pos:line="101" pos:column="57">{
                <expr_stmt><expr><call><name pos:line="102" pos:column="17">apr_table_unset<pos:position pos:line="102" pos:column="32"/></name><argument_list pos:line="102" pos:column="32">(<argument><expr><name><name pos:line="102" pos:column="33">r<pos:position pos:line="102" pos:column="34"/></name><operator pos:line="102" pos:column="34">-&gt;<pos:position pos:line="102" pos:column="39"/></operator><name pos:line="102" pos:column="36">headers_out<pos:position pos:line="102" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="49">"Last-Modified"<pos:position pos:line="102" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="103" pos:column="17">apr_table_addn<pos:position pos:line="103" pos:column="31"/></name><argument_list pos:line="103" pos:column="31">(<argument><expr><name><name pos:line="103" pos:column="32">r<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">-&gt;<pos:position pos:line="103" pos:column="38"/></operator><name pos:line="103" pos:column="35">headers_out<pos:position pos:line="103" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="48">"Cache-Control"<pos:position pos:line="103" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="65">"no-cache"<pos:position pos:line="103" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="77"/></expr_stmt>
            }<pos:position pos:line="104" pos:column="14"/></block></then></if>

            <if pos:line="106" pos:column="13">if <condition pos:line="106" pos:column="16">(<expr><name pos:line="106" pos:column="17">proto_flags<pos:position pos:line="106" pos:column="28"/></name> <operator pos:line="106" pos:column="29">&amp;<pos:position pos:line="106" pos:column="34"/></operator> <name pos:line="106" pos:column="31">AP_FILTER_PROTO_NO_BYTERANGE<pos:position pos:line="106" pos:column="59"/></name></expr>)<pos:position pos:line="106" pos:column="60"/></condition><then pos:line="106" pos:column="60"> <block pos:line="106" pos:column="61">{
                <expr_stmt><expr><call><name pos:line="107" pos:column="17">apr_table_setn<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><name><name pos:line="107" pos:column="32">r<pos:position pos:line="107" pos:column="33"/></name><operator pos:line="107" pos:column="33">-&gt;<pos:position pos:line="107" pos:column="38"/></operator><name pos:line="107" pos:column="35">headers_out<pos:position pos:line="107" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="48">"Accept-Ranges"<pos:position pos:line="107" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="65">"none"<pos:position pos:line="107" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="108" pos:column="14"/></block></then>
            <elseif pos:line="109" pos:column="13">else <if pos:line="109" pos:column="18">if <condition pos:line="109" pos:column="21">(<expr><name pos:line="109" pos:column="22">rctx<pos:position pos:line="109" pos:column="26"/></name> <operator pos:line="109" pos:column="27">&amp;&amp;<pos:position pos:line="109" pos:column="37"/></operator> <name><name pos:line="109" pos:column="30">rctx<pos:position pos:line="109" pos:column="34"/></name><operator pos:line="109" pos:column="34">-&gt;<pos:position pos:line="109" pos:column="39"/></operator><name pos:line="109" pos:column="36">range<pos:position pos:line="109" pos:column="41"/></name></name></expr>)<pos:position pos:line="109" pos:column="42"/></condition><then pos:line="109" pos:column="42"> <block pos:line="109" pos:column="43">{
                <comment type="block" pos:line="110" pos:column="17">/* restore range header we saved earlier */</comment>
                <expr_stmt><expr><call><name pos:line="111" pos:column="17">apr_table_setn<pos:position pos:line="111" pos:column="31"/></name><argument_list pos:line="111" pos:column="31">(<argument><expr><name><name pos:line="111" pos:column="32">r<pos:position pos:line="111" pos:column="33"/></name><operator pos:line="111" pos:column="33">-&gt;<pos:position pos:line="111" pos:column="38"/></operator><name pos:line="111" pos:column="35">headers_in<pos:position pos:line="111" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="47">"Range"<pos:position pos:line="111" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="56">rctx<pos:position pos:line="111" pos:column="60"/></name><operator pos:line="111" pos:column="60">-&gt;<pos:position pos:line="111" pos:column="65"/></operator><name pos:line="111" pos:column="62">range<pos:position pos:line="111" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="112" pos:column="17">rctx<pos:position pos:line="112" pos:column="21"/></name><operator pos:line="112" pos:column="21">-&gt;<pos:position pos:line="112" pos:column="26"/></operator><name pos:line="112" pos:column="23">range<pos:position pos:line="112" pos:column="28"/></name></name> <operator pos:line="112" pos:column="29">=<pos:position pos:line="112" pos:column="30"/></operator> <name pos:line="112" pos:column="31">NULL<pos:position pos:line="112" pos:column="35"/></name></expr>;<pos:position pos:line="112" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="113" pos:column="14"/></block></then></if></elseif></if>
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif<pos:position pos:line="114" pos:column="7"/></cpp:directive></cpp:endif>
            <for pos:line="115" pos:column="13">for <control pos:line="115" pos:column="17">(<init><expr><name pos:line="115" pos:column="18">pctx<pos:position pos:line="115" pos:column="22"/></name> <operator pos:line="115" pos:column="23">=<pos:position pos:line="115" pos:column="24"/></operator> <name><name pos:line="115" pos:column="25">ctx<pos:position pos:line="115" pos:column="28"/></name><operator pos:line="115" pos:column="28">-&gt;<pos:position pos:line="115" pos:column="33"/></operator><name pos:line="115" pos:column="30">init_ctx<pos:position pos:line="115" pos:column="38"/></name></name></expr>;<pos:position pos:line="115" pos:column="39"/></init> <condition><expr><name pos:line="115" pos:column="40">pctx<pos:position pos:line="115" pos:column="44"/></name></expr>;<pos:position pos:line="115" pos:column="45"/></condition> <incr><expr><name pos:line="115" pos:column="46">pctx<pos:position pos:line="115" pos:column="50"/></name> <operator pos:line="115" pos:column="51">=<pos:position pos:line="115" pos:column="52"/></operator> <name><name pos:line="115" pos:column="53">pctx<pos:position pos:line="115" pos:column="57"/></name><operator pos:line="115" pos:column="57">-&gt;<pos:position pos:line="115" pos:column="62"/></operator><name pos:line="115" pos:column="59">next<pos:position pos:line="115" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="115" pos:column="64"/></control> <block pos:line="115" pos:column="65">{
                <if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><name><name pos:line="116" pos:column="21">pctx<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">-&gt;<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="27">provider<pos:position pos:line="116" pos:column="35"/></name></name> <operator pos:line="116" pos:column="36">==<pos:position pos:line="116" pos:column="38"/></operator> <name pos:line="116" pos:column="39">provider<pos:position pos:line="116" pos:column="47"/></name></expr>)<pos:position pos:line="116" pos:column="48"/></condition><then pos:line="116" pos:column="48"> <block pos:line="116" pos:column="49">{
                    <expr_stmt><expr><name><name pos:line="117" pos:column="21">ctx<pos:position pos:line="117" pos:column="24"/></name><operator pos:line="117" pos:column="24">-&gt;<pos:position pos:line="117" pos:column="29"/></operator><name pos:line="117" pos:column="26">fctx<pos:position pos:line="117" pos:column="30"/></name></name> <operator pos:line="117" pos:column="31">=<pos:position pos:line="117" pos:column="32"/></operator> <name><name pos:line="117" pos:column="33">pctx<pos:position pos:line="117" pos:column="37"/></name><operator pos:line="117" pos:column="37">-&gt;<pos:position pos:line="117" pos:column="42"/></operator><name pos:line="117" pos:column="39">ctx<pos:position pos:line="117" pos:column="42"/></name></name></expr> ;<pos:position pos:line="117" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="118" pos:column="18"/></block></then></if>
            }<pos:position pos:line="119" pos:column="14"/></block></for>
            <expr_stmt><expr><name><name pos:line="120" pos:column="13">ctx<pos:position pos:line="120" pos:column="16"/></name><operator pos:line="120" pos:column="16">-&gt;<pos:position pos:line="120" pos:column="21"/></operator><name pos:line="120" pos:column="18">func<pos:position pos:line="120" pos:column="22"/></name></name> <operator pos:line="120" pos:column="23">=<pos:position pos:line="120" pos:column="24"/></operator> <name><name pos:line="120" pos:column="25">provider<pos:position pos:line="120" pos:column="33"/></name><operator pos:line="120" pos:column="33">-&gt;<pos:position pos:line="120" pos:column="38"/></operator><name pos:line="120" pos:column="35">frec<pos:position pos:line="120" pos:column="39"/></name><operator pos:line="120" pos:column="39">-&gt;<pos:position pos:line="120" pos:column="44"/></operator><name pos:line="120" pos:column="41">filter_func<pos:position pos:line="120" pos:column="52"/></name><operator pos:line="120" pos:column="52">.<pos:position pos:line="120" pos:column="53"/></operator><name pos:line="120" pos:column="53">out_func<pos:position pos:line="120" pos:column="61"/></name></name></expr>;<pos:position pos:line="120" pos:column="62"/></expr_stmt>
            <return pos:line="121" pos:column="13">return <expr><literal type="number" pos:line="121" pos:column="20">1<pos:position pos:line="121" pos:column="21"/></literal></expr>;<pos:position pos:line="121" pos:column="22"/></return>
        }<pos:position pos:line="122" pos:column="10"/></block></then></if>
    }<pos:position pos:line="123" pos:column="6"/></block></for>

    <comment type="block" pos:line="125" pos:column="5">/* No provider matched */</comment>
    <return pos:line="126" pos:column="5">return <expr><literal type="number" pos:line="126" pos:column="12">0<pos:position pos:line="126" pos:column="13"/></literal></expr>;<pos:position pos:line="126" pos:column="14"/></return>
}<pos:position pos:line="127" pos:column="2"/></block></function></unit>

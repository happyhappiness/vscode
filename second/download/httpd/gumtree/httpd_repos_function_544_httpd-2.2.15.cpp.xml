<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_544_httpd-2.2.15.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_setenvif_core<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">cmd_parms<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">cmd<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">mconfig<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">fname<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">args<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">regex<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">simple_pattern<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">feature<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">sei_cfg_rec<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">sconf<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">sei_entry<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></operator><operator pos:line="8" pos:column="16">new<pos:position pos:line="8" pos:column="19"/></operator></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">sei_entry<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">entries<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">var<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">beenhere<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">icase<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="15" pos:column="5">/*
     * Determine from our context into which record to put the entry.
     * cmd-&gt;path == NULL means we're in server-wide context; otherwise,
     * we're dealing with a per-directory setting.
     */</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">sconf<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">cmd<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">path<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">!=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">NULL<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator></expr>
      ?<pos:position pos:line="21" pos:column="8"/></condition><then pos:line="21" pos:column="8"> <expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">sei_cfg_rec<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></operator><operator pos:line="21" pos:column="23">)<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">mconfig<pos:position pos:line="21" pos:column="32"/></name></expr>
      <pos:position pos:line="22" pos:column="7"/></then><else pos:line="22" pos:column="7">: <expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">sei_cfg_rec<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">)<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">ap_get_module_config<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><name><name pos:line="22" pos:column="46">cmd<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">server<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">-&gt;<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="59">module_config<pos:position pos:line="22" pos:column="72"/></name></name></expr></argument>,
                                               <argument><expr><operator pos:line="23" pos:column="48">&amp;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="49">setenvif_module<pos:position pos:line="23" pos:column="64"/></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">entries<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">sei_entry<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">*<pos:position pos:line="24" pos:column="27"/></operator><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="29">sconf<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">conditionals<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">elts<pos:position pos:line="24" pos:column="54"/></name></name></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
    <comment type="block" pos:line="25" pos:column="5">/* get regex */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">regex<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <call><name pos:line="26" pos:column="13">ap_getword_conf<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name><name pos:line="26" pos:column="29">cmd<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">pool<pos:position pos:line="26" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="40">&amp;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="41">args<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><operator pos:line="27" pos:column="10">*<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">regex<pos:position pos:line="27" pos:column="16"/></name></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17"> <block pos:line="27" pos:column="18">{
        <return pos:line="28" pos:column="9">return <expr><call><name pos:line="28" pos:column="16">apr_pstrcat<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name><name pos:line="28" pos:column="28">cmd<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">pool<pos:position pos:line="28" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">"Missing regular expression for "<pos:position pos:line="28" pos:column="72"/></literal></expr></argument>,
                           <argument><expr><name><name pos:line="29" pos:column="28">cmd<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">cmd<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">-&gt;<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="38">name<pos:position pos:line="29" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">NULL<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/*
     * If we've already got a sei_entry with the same name we want to
     * just copy the name pointer... so that later on we can compare
     * two header names just by comparing the pointers.
     */</comment>
    <for pos:line="37" pos:column="5">for <control pos:line="37" pos:column="9">(<init><expr><name pos:line="37" pos:column="10">i<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="number" pos:line="37" pos:column="14">0<pos:position pos:line="37" pos:column="15"/></literal></expr>;<pos:position pos:line="37" pos:column="16"/></init> <condition><expr><name pos:line="37" pos:column="17">i<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">&lt;<pos:position pos:line="37" pos:column="23"/></operator> <name><name pos:line="37" pos:column="21">sconf<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">-&gt;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="28">conditionals<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">nelts<pos:position pos:line="37" pos:column="47"/></name></name></expr>;<pos:position pos:line="37" pos:column="48"/></condition> <incr><expr><operator pos:line="37" pos:column="49">++<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="51">i<pos:position pos:line="37" pos:column="52"/></name></expr></incr>)<pos:position pos:line="37" pos:column="53"/></control> <block pos:line="37" pos:column="54">{
        <expr_stmt><expr><operator pos:line="38" pos:column="9">new<pos:position pos:line="38" pos:column="12"/></operator> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <operator pos:line="38" pos:column="15">&amp;<pos:position pos:line="38" pos:column="20"/></operator><name><name pos:line="38" pos:column="16">entries<pos:position pos:line="38" pos:column="23"/></name><index pos:line="38" pos:column="23">[<expr><name pos:line="38" pos:column="24">i<pos:position pos:line="38" pos:column="25"/></name></expr>]<pos:position pos:line="38" pos:column="26"/></index></name></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><call><name pos:line="39" pos:column="14">strcasecmp<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><operator pos:line="39" pos:column="25">new<pos:position pos:line="39" pos:column="28"/></operator><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">name<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="36">fname<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
            <expr_stmt><expr><name pos:line="40" pos:column="13">fname<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <operator pos:line="40" pos:column="21">new<pos:position pos:line="40" pos:column="24"/></operator><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">name<pos:position pos:line="40" pos:column="30"/></name></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
            <break pos:line="41" pos:column="13">break;<pos:position pos:line="41" pos:column="19"/></break>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
    }<pos:position pos:line="43" pos:column="6"/></block></for>

    <comment type="block" pos:line="45" pos:column="5">/* if the last entry has an identical headername and regex then
     * merge with it
     */</comment>
    <expr_stmt><expr><name pos:line="48" pos:column="5">i<pos:position pos:line="48" pos:column="6"/></name> <operator pos:line="48" pos:column="7">=<pos:position pos:line="48" pos:column="8"/></operator> <name><name pos:line="48" pos:column="9">sconf<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">-&gt;<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="16">conditionals<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">nelts<pos:position pos:line="48" pos:column="35"/></name></name> <operator pos:line="48" pos:column="36">-<pos:position pos:line="48" pos:column="37"/></operator> <literal type="number" pos:line="48" pos:column="38">1<pos:position pos:line="48" pos:column="39"/></literal></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">icase<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <name><name pos:line="49" pos:column="13">cmd<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">info<pos:position pos:line="49" pos:column="22"/></name></name> <operator pos:line="49" pos:column="23">==<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">ICASE_MAGIC<pos:position pos:line="49" pos:column="37"/></name></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">i<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">&lt;<pos:position pos:line="50" pos:column="15"/></operator> <literal type="number" pos:line="50" pos:column="13">0<pos:position pos:line="50" pos:column="14"/></literal>
        <operator pos:line="51" pos:column="9">||<pos:position pos:line="51" pos:column="11"/></operator> <name><name pos:line="51" pos:column="12">entries<pos:position pos:line="51" pos:column="19"/></name><index pos:line="51" pos:column="19">[<expr><name pos:line="51" pos:column="20">i<pos:position pos:line="51" pos:column="21"/></name></expr>]<pos:position pos:line="51" pos:column="22"/></index></name><operator pos:line="51" pos:column="22">.<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">name<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">!=<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">fname<pos:position pos:line="51" pos:column="36"/></name>
        <operator pos:line="52" pos:column="9">||<pos:position pos:line="52" pos:column="11"/></operator> <name><name pos:line="52" pos:column="12">entries<pos:position pos:line="52" pos:column="19"/></name><index pos:line="52" pos:column="19">[<expr><name pos:line="52" pos:column="20">i<pos:position pos:line="52" pos:column="21"/></name></expr>]<pos:position pos:line="52" pos:column="22"/></index></name><operator pos:line="52" pos:column="22">.<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="23">icase<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">!=<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="32">icase<pos:position pos:line="52" pos:column="37"/></name>
        <operator pos:line="53" pos:column="9">||<pos:position pos:line="53" pos:column="11"/></operator> <call><name pos:line="53" pos:column="12">strcmp<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><name><name pos:line="53" pos:column="19">entries<pos:position pos:line="53" pos:column="26"/></name><index pos:line="53" pos:column="26">[<expr><name pos:line="53" pos:column="27">i<pos:position pos:line="53" pos:column="28"/></name></expr>]<pos:position pos:line="53" pos:column="29"/></index></name><operator pos:line="53" pos:column="29">.<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">regex<pos:position pos:line="53" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="37">regex<pos:position pos:line="53" pos:column="42"/></name></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="44"/></condition><then pos:line="53" pos:column="44"> <block pos:line="53" pos:column="45">{

        <comment type="block" pos:line="55" pos:column="9">/* no match, create a new entry */</comment>
        <expr_stmt><expr><operator pos:line="56" pos:column="9">new<pos:position pos:line="56" pos:column="12"/></operator> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">apr_array_push<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name><name pos:line="56" pos:column="30">sconf<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">-&gt;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="37">conditionals<pos:position pos:line="56" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="57" pos:column="9">new<pos:position pos:line="57" pos:column="12"/></operator><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">name<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">fname<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="58" pos:column="9">new<pos:position pos:line="58" pos:column="12"/></operator><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">regex<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator> <name pos:line="58" pos:column="22">regex<pos:position pos:line="58" pos:column="27"/></name></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="59" pos:column="9">new<pos:position pos:line="59" pos:column="12"/></operator><operator pos:line="59" pos:column="12">-&gt;<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="14">icase<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator> <name pos:line="59" pos:column="22">icase<pos:position pos:line="59" pos:column="27"/></name></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">(<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">simple_pattern<pos:position pos:line="60" pos:column="28"/></name> <operator pos:line="60" pos:column="29">=<pos:position pos:line="60" pos:column="30"/></operator> <call><name pos:line="60" pos:column="31">non_regex_pattern<pos:position pos:line="60" pos:column="48"/></name><argument_list pos:line="60" pos:column="48">(<argument><expr><name><name pos:line="60" pos:column="49">cmd<pos:position pos:line="60" pos:column="52"/></name><operator pos:line="60" pos:column="52">-&gt;<pos:position pos:line="60" pos:column="57"/></operator><name pos:line="60" pos:column="54">pool<pos:position pos:line="60" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="60">regex<pos:position pos:line="60" pos:column="65"/></name></expr></argument>)<pos:position pos:line="60" pos:column="66"/></argument_list></call><operator pos:line="60" pos:column="66">)<pos:position pos:line="60" pos:column="67"/></operator></expr>)<pos:position pos:line="60" pos:column="68"/></condition><then pos:line="60" pos:column="68"> <block pos:line="60" pos:column="69">{
            <expr_stmt><expr><operator pos:line="61" pos:column="13">new<pos:position pos:line="61" pos:column="16"/></operator><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">pattern<pos:position pos:line="61" pos:column="25"/></name> <operator pos:line="61" pos:column="26">=<pos:position pos:line="61" pos:column="27"/></operator> <call><name pos:line="61" pos:column="28">apr_strmatch_precompile<pos:position pos:line="61" pos:column="51"/></name><argument_list pos:line="61" pos:column="51">(<argument><expr><name><name pos:line="61" pos:column="52">cmd<pos:position pos:line="61" pos:column="55"/></name><operator pos:line="61" pos:column="55">-&gt;<pos:position pos:line="61" pos:column="60"/></operator><name pos:line="61" pos:column="57">pool<pos:position pos:line="61" pos:column="61"/></name></name></expr></argument>,
                                                   <argument><expr><name pos:line="62" pos:column="52">simple_pattern<pos:position pos:line="62" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="68">!<pos:position pos:line="62" pos:column="69"/></operator><name pos:line="62" pos:column="69">icase<pos:position pos:line="62" pos:column="74"/></name></expr></argument>)<pos:position pos:line="62" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="76"/></expr_stmt>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><operator pos:line="63" pos:column="17">new<pos:position pos:line="63" pos:column="20"/></operator><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">pattern<pos:position pos:line="63" pos:column="29"/></name> <operator pos:line="63" pos:column="30">==<pos:position pos:line="63" pos:column="32"/></operator> <name pos:line="63" pos:column="33">NULL<pos:position pos:line="63" pos:column="37"/></name></expr>)<pos:position pos:line="63" pos:column="38"/></condition><then pos:line="63" pos:column="38"> <block pos:line="63" pos:column="39">{
                <return pos:line="64" pos:column="17">return <expr><call><name pos:line="64" pos:column="24">apr_pstrcat<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name><name pos:line="64" pos:column="36">cmd<pos:position pos:line="64" pos:column="39"/></name><operator pos:line="64" pos:column="39">-&gt;<pos:position pos:line="64" pos:column="44"/></operator><name pos:line="64" pos:column="41">pool<pos:position pos:line="64" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="47">cmd<pos:position pos:line="64" pos:column="50"/></name><operator pos:line="64" pos:column="50">-&gt;<pos:position pos:line="64" pos:column="55"/></operator><name pos:line="64" pos:column="52">cmd<pos:position pos:line="64" pos:column="55"/></name><operator pos:line="64" pos:column="55">-&gt;<pos:position pos:line="64" pos:column="60"/></operator><name pos:line="64" pos:column="57">name<pos:position pos:line="64" pos:column="61"/></name></name></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="65" pos:column="36">" pattern could not be compiled."<pos:position pos:line="65" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="71">NULL<pos:position pos:line="65" pos:column="75"/></name></expr></argument>)<pos:position pos:line="65" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="77"/></return>
            }<pos:position pos:line="66" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="67" pos:column="13">new<pos:position pos:line="67" pos:column="16"/></operator><operator pos:line="67" pos:column="16">-&gt;<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="18">preg<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <name pos:line="67" pos:column="25">NULL<pos:position pos:line="67" pos:column="29"/></name></expr>;<pos:position pos:line="67" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then>
        <else pos:line="69" pos:column="9">else <block pos:line="69" pos:column="14">{
            <expr_stmt><expr><operator pos:line="70" pos:column="13">new<pos:position pos:line="70" pos:column="16"/></operator><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">preg<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">=<pos:position pos:line="70" pos:column="24"/></operator> <call><name pos:line="70" pos:column="25">ap_pregcomp<pos:position pos:line="70" pos:column="36"/></name><argument_list pos:line="70" pos:column="36">(<argument><expr><name><name pos:line="70" pos:column="37">cmd<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">-&gt;<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="42">pool<pos:position pos:line="70" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="48">regex<pos:position pos:line="70" pos:column="53"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="71" pos:column="37">(<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="38">AP_REG_EXTENDED<pos:position pos:line="71" pos:column="53"/></name> <operator pos:line="71" pos:column="54">|<pos:position pos:line="71" pos:column="55"/></operator> <operator pos:line="71" pos:column="56">(<pos:position pos:line="71" pos:column="57"/></operator><ternary><condition><expr><name pos:line="71" pos:column="57">icase<pos:position pos:line="71" pos:column="62"/></name></expr> ?<pos:position pos:line="71" pos:column="64"/></condition><then pos:line="71" pos:column="64"> <expr><name pos:line="71" pos:column="65">AP_REG_ICASE<pos:position pos:line="71" pos:column="77"/></name></expr> <pos:position pos:line="71" pos:column="78"/></then><else pos:line="71" pos:column="78">: <expr><literal type="number" pos:line="71" pos:column="80">0<pos:position pos:line="71" pos:column="81"/></literal></expr></else></ternary><operator pos:line="71" pos:column="81">)<pos:position pos:line="71" pos:column="82"/></operator><operator pos:line="71" pos:column="82">)<pos:position pos:line="71" pos:column="83"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="85"/></expr_stmt>
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><operator pos:line="72" pos:column="17">new<pos:position pos:line="72" pos:column="20"/></operator><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">preg<pos:position pos:line="72" pos:column="26"/></name> <operator pos:line="72" pos:column="27">==<pos:position pos:line="72" pos:column="29"/></operator> <name pos:line="72" pos:column="30">NULL<pos:position pos:line="72" pos:column="34"/></name></expr>)<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35"> <block pos:line="72" pos:column="36">{
                <return pos:line="73" pos:column="17">return <expr><call><name pos:line="73" pos:column="24">apr_pstrcat<pos:position pos:line="73" pos:column="35"/></name><argument_list pos:line="73" pos:column="35">(<argument><expr><name><name pos:line="73" pos:column="36">cmd<pos:position pos:line="73" pos:column="39"/></name><operator pos:line="73" pos:column="39">-&gt;<pos:position pos:line="73" pos:column="44"/></operator><name pos:line="73" pos:column="41">pool<pos:position pos:line="73" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="47">cmd<pos:position pos:line="73" pos:column="50"/></name><operator pos:line="73" pos:column="50">-&gt;<pos:position pos:line="73" pos:column="55"/></operator><name pos:line="73" pos:column="52">cmd<pos:position pos:line="73" pos:column="55"/></name><operator pos:line="73" pos:column="55">-&gt;<pos:position pos:line="73" pos:column="60"/></operator><name pos:line="73" pos:column="57">name<pos:position pos:line="73" pos:column="61"/></name></name></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="74" pos:column="36">" regex could not be compiled."<pos:position pos:line="74" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="69">NULL<pos:position pos:line="74" pos:column="73"/></name></expr></argument>)<pos:position pos:line="74" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="75"/></return>
            }<pos:position pos:line="75" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="76" pos:column="13">new<pos:position pos:line="76" pos:column="16"/></operator><operator pos:line="76" pos:column="16">-&gt;<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="18">pattern<pos:position pos:line="76" pos:column="25"/></name> <operator pos:line="76" pos:column="26">=<pos:position pos:line="76" pos:column="27"/></operator> <name pos:line="76" pos:column="28">NULL<pos:position pos:line="76" pos:column="32"/></name></expr>;<pos:position pos:line="76" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>
        <expr_stmt><expr><operator pos:line="78" pos:column="9">new<pos:position pos:line="78" pos:column="12"/></operator><operator pos:line="78" pos:column="12">-&gt;<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="14">features<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <call><name pos:line="78" pos:column="25">apr_table_make<pos:position pos:line="78" pos:column="39"/></name><argument_list pos:line="78" pos:column="39">(<argument><expr><name><name pos:line="78" pos:column="40">cmd<pos:position pos:line="78" pos:column="43"/></name><operator pos:line="78" pos:column="43">-&gt;<pos:position pos:line="78" pos:column="48"/></operator><name pos:line="78" pos:column="45">pool<pos:position pos:line="78" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="51">2<pos:position pos:line="78" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="54"/></expr_stmt>

        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">!<pos:position pos:line="80" pos:column="14"/></operator><call><name pos:line="80" pos:column="14">strcasecmp<pos:position pos:line="80" pos:column="24"/></name><argument_list pos:line="80" pos:column="24">(<argument><expr><name pos:line="80" pos:column="25">fname<pos:position pos:line="80" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="32">"remote_addr"<pos:position pos:line="80" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="47"/></condition><then pos:line="80" pos:column="47"> <block pos:line="80" pos:column="48">{
            <expr_stmt><expr><operator pos:line="81" pos:column="13">new<pos:position pos:line="81" pos:column="16"/></operator><operator pos:line="81" pos:column="16">-&gt;<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="18">special_type<pos:position pos:line="81" pos:column="30"/></name> <operator pos:line="81" pos:column="31">=<pos:position pos:line="81" pos:column="32"/></operator> <name pos:line="81" pos:column="33">SPECIAL_REMOTE_ADDR<pos:position pos:line="81" pos:column="52"/></name></expr>;<pos:position pos:line="81" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="82" pos:column="10"/></block></then>
        <elseif pos:line="83" pos:column="9">else <if pos:line="83" pos:column="14">if <condition pos:line="83" pos:column="17">(<expr><operator pos:line="83" pos:column="18">!<pos:position pos:line="83" pos:column="19"/></operator><call><name pos:line="83" pos:column="19">strcasecmp<pos:position pos:line="83" pos:column="29"/></name><argument_list pos:line="83" pos:column="29">(<argument><expr><name pos:line="83" pos:column="30">fname<pos:position pos:line="83" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="37">"remote_host"<pos:position pos:line="83" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="52"/></condition><then pos:line="83" pos:column="52"> <block pos:line="83" pos:column="53">{
            <expr_stmt><expr><operator pos:line="84" pos:column="13">new<pos:position pos:line="84" pos:column="16"/></operator><operator pos:line="84" pos:column="16">-&gt;<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="18">special_type<pos:position pos:line="84" pos:column="30"/></name> <operator pos:line="84" pos:column="31">=<pos:position pos:line="84" pos:column="32"/></operator> <name pos:line="84" pos:column="33">SPECIAL_REMOTE_HOST<pos:position pos:line="84" pos:column="52"/></name></expr>;<pos:position pos:line="84" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="86" pos:column="9">else <if pos:line="86" pos:column="14">if <condition pos:line="86" pos:column="17">(<expr><operator pos:line="86" pos:column="18">!<pos:position pos:line="86" pos:column="19"/></operator><call><name pos:line="86" pos:column="19">strcasecmp<pos:position pos:line="86" pos:column="29"/></name><argument_list pos:line="86" pos:column="29">(<argument><expr><name pos:line="86" pos:column="30">fname<pos:position pos:line="86" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="37">"request_uri"<pos:position pos:line="86" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="52"/></condition><then pos:line="86" pos:column="52"> <block pos:line="86" pos:column="53">{
            <expr_stmt><expr><operator pos:line="87" pos:column="13">new<pos:position pos:line="87" pos:column="16"/></operator><operator pos:line="87" pos:column="16">-&gt;<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="18">special_type<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">=<pos:position pos:line="87" pos:column="32"/></operator> <name pos:line="87" pos:column="33">SPECIAL_REQUEST_URI<pos:position pos:line="87" pos:column="52"/></name></expr>;<pos:position pos:line="87" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="89" pos:column="9">else <if pos:line="89" pos:column="14">if <condition pos:line="89" pos:column="17">(<expr><operator pos:line="89" pos:column="18">!<pos:position pos:line="89" pos:column="19"/></operator><call><name pos:line="89" pos:column="19">strcasecmp<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><name pos:line="89" pos:column="30">fname<pos:position pos:line="89" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="37">"request_method"<pos:position pos:line="89" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="55"/></condition><then pos:line="89" pos:column="55"> <block pos:line="89" pos:column="56">{
            <expr_stmt><expr><operator pos:line="90" pos:column="13">new<pos:position pos:line="90" pos:column="16"/></operator><operator pos:line="90" pos:column="16">-&gt;<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="18">special_type<pos:position pos:line="90" pos:column="30"/></name> <operator pos:line="90" pos:column="31">=<pos:position pos:line="90" pos:column="32"/></operator> <name pos:line="90" pos:column="33">SPECIAL_REQUEST_METHOD<pos:position pos:line="90" pos:column="55"/></name></expr>;<pos:position pos:line="90" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="92" pos:column="9">else <if pos:line="92" pos:column="14">if <condition pos:line="92" pos:column="17">(<expr><operator pos:line="92" pos:column="18">!<pos:position pos:line="92" pos:column="19"/></operator><call><name pos:line="92" pos:column="19">strcasecmp<pos:position pos:line="92" pos:column="29"/></name><argument_list pos:line="92" pos:column="29">(<argument><expr><name pos:line="92" pos:column="30">fname<pos:position pos:line="92" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="37">"request_protocol"<pos:position pos:line="92" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="57"/></condition><then pos:line="92" pos:column="57"> <block pos:line="92" pos:column="58">{
            <expr_stmt><expr><operator pos:line="93" pos:column="13">new<pos:position pos:line="93" pos:column="16"/></operator><operator pos:line="93" pos:column="16">-&gt;<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="18">special_type<pos:position pos:line="93" pos:column="30"/></name> <operator pos:line="93" pos:column="31">=<pos:position pos:line="93" pos:column="32"/></operator> <name pos:line="93" pos:column="33">SPECIAL_REQUEST_PROTOCOL<pos:position pos:line="93" pos:column="57"/></name></expr>;<pos:position pos:line="93" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="95" pos:column="9">else <if pos:line="95" pos:column="14">if <condition pos:line="95" pos:column="17">(<expr><operator pos:line="95" pos:column="18">!<pos:position pos:line="95" pos:column="19"/></operator><call><name pos:line="95" pos:column="19">strcasecmp<pos:position pos:line="95" pos:column="29"/></name><argument_list pos:line="95" pos:column="29">(<argument><expr><name pos:line="95" pos:column="30">fname<pos:position pos:line="95" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="37">"server_addr"<pos:position pos:line="95" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="52"/></condition><then pos:line="95" pos:column="52"> <block pos:line="95" pos:column="53">{
            <expr_stmt><expr><operator pos:line="96" pos:column="13">new<pos:position pos:line="96" pos:column="16"/></operator><operator pos:line="96" pos:column="16">-&gt;<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="18">special_type<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">=<pos:position pos:line="96" pos:column="32"/></operator> <name pos:line="96" pos:column="33">SPECIAL_SERVER_ADDR<pos:position pos:line="96" pos:column="52"/></name></expr>;<pos:position pos:line="96" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="97" pos:column="10"/></block></then></if></elseif>
        <else pos:line="98" pos:column="9">else <block pos:line="98" pos:column="14">{
            <expr_stmt><expr><operator pos:line="99" pos:column="13">new<pos:position pos:line="99" pos:column="16"/></operator><operator pos:line="99" pos:column="16">-&gt;<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="18">special_type<pos:position pos:line="99" pos:column="30"/></name> <operator pos:line="99" pos:column="31">=<pos:position pos:line="99" pos:column="32"/></operator> <name pos:line="99" pos:column="33">SPECIAL_NOT<pos:position pos:line="99" pos:column="44"/></name></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt>
            <comment type="block" pos:line="100" pos:column="13">/* Handle fname as a regular expression.
             * If fname a simple header string, identify as such
             * (new-&gt;pnamereg = NULL) to avoid the overhead of searching
             * through headers_in for a regex match.
             */</comment>
            <if pos:line="105" pos:column="13">if <condition pos:line="105" pos:column="16">(<expr><call><name pos:line="105" pos:column="17">is_header_regex<pos:position pos:line="105" pos:column="32"/></name><argument_list pos:line="105" pos:column="32">(<argument><expr><name><name pos:line="105" pos:column="33">cmd<pos:position pos:line="105" pos:column="36"/></name><operator pos:line="105" pos:column="36">-&gt;<pos:position pos:line="105" pos:column="41"/></operator><name pos:line="105" pos:column="38">pool<pos:position pos:line="105" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="44">fname<pos:position pos:line="105" pos:column="49"/></name></expr></argument>)<pos:position pos:line="105" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="51"/></condition><then pos:line="105" pos:column="51"> <block pos:line="105" pos:column="52">{
                <expr_stmt><expr><operator pos:line="106" pos:column="17">new<pos:position pos:line="106" pos:column="20"/></operator><operator pos:line="106" pos:column="20">-&gt;<pos:position pos:line="106" pos:column="25"/></operator><name pos:line="106" pos:column="22">pnamereg<pos:position pos:line="106" pos:column="30"/></name> <operator pos:line="106" pos:column="31">=<pos:position pos:line="106" pos:column="32"/></operator> <call><name pos:line="106" pos:column="33">ap_pregcomp<pos:position pos:line="106" pos:column="44"/></name><argument_list pos:line="106" pos:column="44">(<argument><expr><name><name pos:line="106" pos:column="45">cmd<pos:position pos:line="106" pos:column="48"/></name><operator pos:line="106" pos:column="48">-&gt;<pos:position pos:line="106" pos:column="53"/></operator><name pos:line="106" pos:column="50">pool<pos:position pos:line="106" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="56">fname<pos:position pos:line="106" pos:column="61"/></name></expr></argument>,
                                            <argument><expr><operator pos:line="107" pos:column="45">(<pos:position pos:line="107" pos:column="46"/></operator><name pos:line="107" pos:column="46">AP_REG_EXTENDED<pos:position pos:line="107" pos:column="61"/></name> <operator pos:line="107" pos:column="62">|<pos:position pos:line="107" pos:column="63"/></operator> <name pos:line="107" pos:column="64">AP_REG_NOSUB<pos:position pos:line="107" pos:column="76"/></name>
                                             <operator pos:line="108" pos:column="46">|<pos:position pos:line="108" pos:column="47"/></operator> <operator pos:line="108" pos:column="48">(<pos:position pos:line="108" pos:column="49"/></operator><ternary><condition><expr><name pos:line="108" pos:column="49">icase<pos:position pos:line="108" pos:column="54"/></name></expr> ?<pos:position pos:line="108" pos:column="56"/></condition><then pos:line="108" pos:column="56"> <expr><name pos:line="108" pos:column="57">AP_REG_ICASE<pos:position pos:line="108" pos:column="69"/></name></expr> <pos:position pos:line="108" pos:column="70"/></then><else pos:line="108" pos:column="70">: <expr><literal type="number" pos:line="108" pos:column="72">0<pos:position pos:line="108" pos:column="73"/></literal></expr></else></ternary><operator pos:line="108" pos:column="73">)<pos:position pos:line="108" pos:column="74"/></operator><operator pos:line="108" pos:column="74">)<pos:position pos:line="108" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="108" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="77"/></expr_stmt>
                <if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><operator pos:line="109" pos:column="21">new<pos:position pos:line="109" pos:column="24"/></operator><operator pos:line="109" pos:column="24">-&gt;<pos:position pos:line="109" pos:column="29"/></operator><name pos:line="109" pos:column="26">pnamereg<pos:position pos:line="109" pos:column="34"/></name> <operator pos:line="109" pos:column="35">==<pos:position pos:line="109" pos:column="37"/></operator> <name pos:line="109" pos:column="38">NULL<pos:position pos:line="109" pos:column="42"/></name></expr>)<pos:position pos:line="109" pos:column="43"/></condition><then pos:line="109" pos:column="43">
                    <block type="pseudo"><return pos:line="110" pos:column="21">return <expr><call><name pos:line="110" pos:column="28">apr_pstrcat<pos:position pos:line="110" pos:column="39"/></name><argument_list pos:line="110" pos:column="39">(<argument><expr><name><name pos:line="110" pos:column="40">cmd<pos:position pos:line="110" pos:column="43"/></name><operator pos:line="110" pos:column="43">-&gt;<pos:position pos:line="110" pos:column="48"/></operator><name pos:line="110" pos:column="45">pool<pos:position pos:line="110" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="51">cmd<pos:position pos:line="110" pos:column="54"/></name><operator pos:line="110" pos:column="54">-&gt;<pos:position pos:line="110" pos:column="59"/></operator><name pos:line="110" pos:column="56">cmd<pos:position pos:line="110" pos:column="59"/></name><operator pos:line="110" pos:column="59">-&gt;<pos:position pos:line="110" pos:column="64"/></operator><name pos:line="110" pos:column="61">name<pos:position pos:line="110" pos:column="65"/></name></name></expr></argument>,
                                       <argument><expr><literal type="string" pos:line="111" pos:column="40">"Header name regex could not be "<pos:position pos:line="111" pos:column="73"/></literal>
                                       <literal type="string" pos:line="112" pos:column="40">"compiled."<pos:position pos:line="112" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="53">NULL<pos:position pos:line="112" pos:column="57"/></name></expr></argument>)<pos:position pos:line="112" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="59"/></return></block></then></if>
            }<pos:position pos:line="113" pos:column="14"/></block></then>
            <else pos:line="114" pos:column="13">else <block pos:line="114" pos:column="18">{
                <expr_stmt><expr><operator pos:line="115" pos:column="17">new<pos:position pos:line="115" pos:column="20"/></operator><operator pos:line="115" pos:column="20">-&gt;<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="22">pnamereg<pos:position pos:line="115" pos:column="30"/></name> <operator pos:line="115" pos:column="31">=<pos:position pos:line="115" pos:column="32"/></operator> <name pos:line="115" pos:column="33">NULL<pos:position pos:line="115" pos:column="37"/></name></expr>;<pos:position pos:line="115" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="116" pos:column="14"/></block></else></if>
        }<pos:position pos:line="117" pos:column="10"/></block></else></if>
    }<pos:position pos:line="118" pos:column="6"/></block></then>
    <else pos:line="119" pos:column="5">else <block pos:line="119" pos:column="10">{
        <expr_stmt><expr><operator pos:line="120" pos:column="9">new<pos:position pos:line="120" pos:column="12"/></operator> <operator pos:line="120" pos:column="13">=<pos:position pos:line="120" pos:column="14"/></operator> <operator pos:line="120" pos:column="15">&amp;<pos:position pos:line="120" pos:column="20"/></operator><name><name pos:line="120" pos:column="16">entries<pos:position pos:line="120" pos:column="23"/></name><index pos:line="120" pos:column="23">[<expr><name pos:line="120" pos:column="24">i<pos:position pos:line="120" pos:column="25"/></name></expr>]<pos:position pos:line="120" pos:column="26"/></index></name></expr>;<pos:position pos:line="120" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="121" pos:column="6"/></block></else></if>

    <for pos:line="123" pos:column="5">for <control pos:line="123" pos:column="9">( <init pos:line="123" pos:column="11">;<pos:position pos:line="123" pos:column="12"/></init> <condition pos:line="123" pos:column="13">;<pos:position pos:line="123" pos:column="14"/></condition> <incr/>)<pos:position pos:line="123" pos:column="16"/></control> <block pos:line="123" pos:column="17">{
        <expr_stmt><expr><name pos:line="124" pos:column="9">feature<pos:position pos:line="124" pos:column="16"/></name> <operator pos:line="124" pos:column="17">=<pos:position pos:line="124" pos:column="18"/></operator> <call><name pos:line="124" pos:column="19">ap_getword_conf<pos:position pos:line="124" pos:column="34"/></name><argument_list pos:line="124" pos:column="34">(<argument><expr><name><name pos:line="124" pos:column="35">cmd<pos:position pos:line="124" pos:column="38"/></name><operator pos:line="124" pos:column="38">-&gt;<pos:position pos:line="124" pos:column="43"/></operator><name pos:line="124" pos:column="40">pool<pos:position pos:line="124" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="46">&amp;<pos:position pos:line="124" pos:column="51"/></operator><name pos:line="124" pos:column="47">args<pos:position pos:line="124" pos:column="51"/></name></expr></argument>)<pos:position pos:line="124" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="53"/></expr_stmt>
        <if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><operator pos:line="125" pos:column="13">!<pos:position pos:line="125" pos:column="14"/></operator><operator pos:line="125" pos:column="14">*<pos:position pos:line="125" pos:column="15"/></operator><name pos:line="125" pos:column="15">feature<pos:position pos:line="125" pos:column="22"/></name></expr>)<pos:position pos:line="125" pos:column="23"/></condition><then pos:line="125" pos:column="23"> <block pos:line="125" pos:column="24">{
            <break pos:line="126" pos:column="13">break;<pos:position pos:line="126" pos:column="19"/></break>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="128" pos:column="9">beenhere<pos:position pos:line="128" pos:column="17"/></name><operator pos:line="128" pos:column="17">++<pos:position pos:line="128" pos:column="19"/></operator></expr>;<pos:position pos:line="128" pos:column="20"/></expr_stmt>

        <expr_stmt><expr><name pos:line="130" pos:column="9">var<pos:position pos:line="130" pos:column="12"/></name> <operator pos:line="130" pos:column="13">=<pos:position pos:line="130" pos:column="14"/></operator> <call><name pos:line="130" pos:column="15">ap_getword<pos:position pos:line="130" pos:column="25"/></name><argument_list pos:line="130" pos:column="25">(<argument><expr><name><name pos:line="130" pos:column="26">cmd<pos:position pos:line="130" pos:column="29"/></name><operator pos:line="130" pos:column="29">-&gt;<pos:position pos:line="130" pos:column="34"/></operator><name pos:line="130" pos:column="31">pool<pos:position pos:line="130" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="37">&amp;<pos:position pos:line="130" pos:column="42"/></operator><name pos:line="130" pos:column="38">feature<pos:position pos:line="130" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="130" pos:column="47">'='<pos:position pos:line="130" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="52"/></expr_stmt>
        <if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><operator pos:line="131" pos:column="13">*<pos:position pos:line="131" pos:column="14"/></operator><name pos:line="131" pos:column="14">feature<pos:position pos:line="131" pos:column="21"/></name></expr>)<pos:position pos:line="131" pos:column="22"/></condition><then pos:line="131" pos:column="22"> <block pos:line="131" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="132" pos:column="13">apr_table_setn<pos:position pos:line="132" pos:column="27"/></name><argument_list pos:line="132" pos:column="27">(<argument><expr><operator pos:line="132" pos:column="28">new<pos:position pos:line="132" pos:column="31"/></operator><operator pos:line="132" pos:column="31">-&gt;<pos:position pos:line="132" pos:column="36"/></operator><name pos:line="132" pos:column="33">features<pos:position pos:line="132" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="43">var<pos:position pos:line="132" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="48">feature<pos:position pos:line="132" pos:column="55"/></name></expr></argument>)<pos:position pos:line="132" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="133" pos:column="10"/></block></then>
        <elseif pos:line="134" pos:column="9">else <if pos:line="134" pos:column="14">if <condition pos:line="134" pos:column="17">(<expr><operator pos:line="134" pos:column="18">*<pos:position pos:line="134" pos:column="19"/></operator><name pos:line="134" pos:column="19">var<pos:position pos:line="134" pos:column="22"/></name> <operator pos:line="134" pos:column="23">==<pos:position pos:line="134" pos:column="25"/></operator> <literal type="char" pos:line="134" pos:column="26">'!'<pos:position pos:line="134" pos:column="29"/></literal></expr>)<pos:position pos:line="134" pos:column="30"/></condition><then pos:line="134" pos:column="30"> <block pos:line="134" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="135" pos:column="13">apr_table_setn<pos:position pos:line="135" pos:column="27"/></name><argument_list pos:line="135" pos:column="27">(<argument><expr><operator pos:line="135" pos:column="28">new<pos:position pos:line="135" pos:column="31"/></operator><operator pos:line="135" pos:column="31">-&gt;<pos:position pos:line="135" pos:column="36"/></operator><name pos:line="135" pos:column="33">features<pos:position pos:line="135" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="43">var<pos:position pos:line="135" pos:column="46"/></name> <operator pos:line="135" pos:column="47">+<pos:position pos:line="135" pos:column="48"/></operator> <literal type="number" pos:line="135" pos:column="49">1<pos:position pos:line="135" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="52">"!"<pos:position pos:line="135" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="136" pos:column="10"/></block></then></if></elseif>
        <else pos:line="137" pos:column="9">else <block pos:line="137" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="138" pos:column="13">apr_table_setn<pos:position pos:line="138" pos:column="27"/></name><argument_list pos:line="138" pos:column="27">(<argument><expr><operator pos:line="138" pos:column="28">new<pos:position pos:line="138" pos:column="31"/></operator><operator pos:line="138" pos:column="31">-&gt;<pos:position pos:line="138" pos:column="36"/></operator><name pos:line="138" pos:column="33">features<pos:position pos:line="138" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="43">var<pos:position pos:line="138" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="48">"1"<pos:position pos:line="138" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="139" pos:column="10"/></block></else></if>
    }<pos:position pos:line="140" pos:column="6"/></block></for>

    <if pos:line="142" pos:column="5">if <condition pos:line="142" pos:column="8">(<expr><operator pos:line="142" pos:column="9">!<pos:position pos:line="142" pos:column="10"/></operator><name pos:line="142" pos:column="10">beenhere<pos:position pos:line="142" pos:column="18"/></name></expr>)<pos:position pos:line="142" pos:column="19"/></condition><then pos:line="142" pos:column="19"> <block pos:line="142" pos:column="20">{
        <return pos:line="143" pos:column="9">return <expr><call><name pos:line="143" pos:column="16">apr_pstrcat<pos:position pos:line="143" pos:column="27"/></name><argument_list pos:line="143" pos:column="27">(<argument><expr><name><name pos:line="143" pos:column="28">cmd<pos:position pos:line="143" pos:column="31"/></name><operator pos:line="143" pos:column="31">-&gt;<pos:position pos:line="143" pos:column="36"/></operator><name pos:line="143" pos:column="33">pool<pos:position pos:line="143" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="39">"Missing envariable expression for "<pos:position pos:line="143" pos:column="75"/></literal></expr></argument>,
                           <argument><expr><name><name pos:line="144" pos:column="28">cmd<pos:position pos:line="144" pos:column="31"/></name><operator pos:line="144" pos:column="31">-&gt;<pos:position pos:line="144" pos:column="36"/></operator><name pos:line="144" pos:column="33">cmd<pos:position pos:line="144" pos:column="36"/></name><operator pos:line="144" pos:column="36">-&gt;<pos:position pos:line="144" pos:column="41"/></operator><name pos:line="144" pos:column="38">name<pos:position pos:line="144" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="44">NULL<pos:position pos:line="144" pos:column="48"/></name></expr></argument>)<pos:position pos:line="144" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="50"/></return>
    }<pos:position pos:line="145" pos:column="6"/></block></then></if>

    <return pos:line="147" pos:column="5">return <expr><name pos:line="147" pos:column="12">NULL<pos:position pos:line="147" pos:column="16"/></name></expr>;<pos:position pos:line="147" pos:column="17"/></return>
}<pos:position pos:line="148" pos:column="2"/></block></function></unit>

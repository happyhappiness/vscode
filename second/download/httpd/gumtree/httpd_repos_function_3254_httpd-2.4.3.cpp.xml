<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3254_httpd-2.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">winnt_insert_network_bucket<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">conn_rec<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">c<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">apr_bucket_brigade<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">bb<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">apr_socket_t<pos:position pos:line="3" pos:column="54"/></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">socket<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">winnt_conn_ctx_t<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">context<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><call><name pos:line="6" pos:column="33">ap_get_module_config<pos:position pos:line="6" pos:column="53"/></name><argument_list pos:line="6" pos:column="53">(<argument><expr><name><name pos:line="6" pos:column="54">c<pos:position pos:line="6" pos:column="55"/></name><operator pos:line="6" pos:column="55">-&gt;<pos:position pos:line="6" pos:column="60"/></operator><name pos:line="6" pos:column="57">conn_config<pos:position pos:line="6" pos:column="68"/></name></name></expr></argument>,
                                                     <argument><expr><operator pos:line="7" pos:column="54">&amp;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="55">mpm_winnt_module<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="73"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">context<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">||<pos:position pos:line="8" pos:column="27"/></operator> <operator pos:line="8" pos:column="28">(<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">e<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <name><name pos:line="8" pos:column="33">context<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">overlapped<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">.<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">Pointer<pos:position pos:line="8" pos:column="60"/></name></name><operator pos:line="8" pos:column="60">)<pos:position pos:line="8" pos:column="61"/></operator> <operator pos:line="8" pos:column="62">==<pos:position pos:line="8" pos:column="64"/></operator> <name pos:line="8" pos:column="65">NULL<pos:position pos:line="8" pos:column="69"/></name></expr>)<pos:position pos:line="8" pos:column="70"/></condition><then pos:line="8" pos:column="70">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">AP_DECLINED<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></return></block></then></if>

    <comment type="block" pos:line="11" pos:column="5">/* seed the brigade with AcceptEx read heap bucket */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">bb<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">e<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    <comment type="block" pos:line="13" pos:column="5">/* also seed the brigade with the client socket. */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">e<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">apr_bucket_socket_create<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">socket<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="42">c<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">bucket_alloc<pos:position pos:line="14" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">bb<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="33">e<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">APR_SUCCESS<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

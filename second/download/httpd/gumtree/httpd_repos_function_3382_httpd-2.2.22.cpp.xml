<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3382_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">apr_xlate_cleanup<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">convset<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_xlate_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">old<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name pos:line="3" pos:column="24">convset<pos:position pos:line="3" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">APU_HAVE_APR_ICONV<pos:position pos:line="5" pos:column="23"/></name></expr></cpp:if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">old<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">ich<pos:position pos:line="6" pos:column="17"/></name></name> <operator pos:line="6" pos:column="18">!=<pos:position pos:line="6" pos:column="20"/></operator> <operator pos:line="6" pos:column="21">(<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">apr_iconv_t<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator><operator pos:line="6" pos:column="34">-<pos:position pos:line="6" pos:column="35"/></operator><literal type="number" pos:line="6" pos:column="35">1<pos:position pos:line="6" pos:column="36"/></literal></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37"> <block pos:line="6" pos:column="38">{
        <return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">apr_iconv_close<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name><name pos:line="7" pos:column="32">old<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">ich<pos:position pos:line="7" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="42">old<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">pool<pos:position pos:line="7" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

<cpp:elif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">elif<pos:position pos:line="10" pos:column="6"/></cpp:directive> <expr><name pos:line="10" pos:column="7">APU_HAVE_ICONV<pos:position pos:line="10" pos:column="21"/></name></expr></cpp:elif>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">old<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">ich<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">!=<pos:position pos:line="11" pos:column="20"/></operator> <operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">iconv_t<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator><operator pos:line="11" pos:column="30">-<pos:position pos:line="11" pos:column="31"/></operator><literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block pos:line="11" pos:column="34">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">iconv_close<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name><name pos:line="12" pos:column="25">old<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">ich<pos:position pos:line="12" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35"> <block pos:line="12" pos:column="36">{
            <decl_stmt><decl><type><name pos:line="13" pos:column="13">int<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">rv<pos:position pos:line="13" pos:column="19"/></name> <init pos:line="13" pos:column="20">= <expr><name pos:line="13" pos:column="22">errno<pos:position pos:line="13" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>

            <comment type="block" pos:line="15" pos:column="13">/* Sometimes, iconv is not good about setting errno. */</comment>
            <return pos:line="16" pos:column="13">return <expr><ternary><condition><expr><name pos:line="16" pos:column="20">rv<pos:position pos:line="16" pos:column="22"/></name></expr> ?<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24"> <expr><name pos:line="16" pos:column="25">rv<pos:position pos:line="16" pos:column="27"/></name></expr> <pos:position pos:line="16" pos:column="28"/></then><else pos:line="16" pos:column="28">: <expr><name pos:line="16" pos:column="30">APR_EINVAL<pos:position pos:line="16" pos:column="40"/></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="41"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">APR_SUCCESS<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

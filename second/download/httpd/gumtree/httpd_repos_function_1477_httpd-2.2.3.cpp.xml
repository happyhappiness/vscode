<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1477_httpd-2.2.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">proxy_send_dir_filter<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">ap_filter_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">f<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="2" pos:column="43">apr_bucket_brigade<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">in<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">conn_rec<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">c<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name><name pos:line="5" pos:column="19">r<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">-&gt;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="22">connection<pos:position pos:line="5" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_pool_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">p<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name><name pos:line="6" pos:column="21">r<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">pool<pos:position pos:line="6" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket_brigade<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">out<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><call><name pos:line="7" pos:column="31">apr_brigade_create<pos:position pos:line="7" pos:column="49"/></name><argument_list pos:line="7" pos:column="49">(<argument><expr><name pos:line="7" pos:column="50">p<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="53">c<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">-&gt;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="56">bucket_alloc<pos:position pos:line="7" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">register<pos:position pos:line="10" pos:column="13"/></specifier> <name pos:line="10" pos:column="14">int<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">n<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">dir<pos:position pos:line="11" pos:column="14"/></name></decl>, <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="17">path<pos:position pos:line="11" pos:column="21"/></name></decl>, <modifier pos:line="11" pos:column="23">*<pos:position pos:line="11" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="24">reldir<pos:position pos:line="11" pos:column="30"/></name></decl>, <modifier pos:line="11" pos:column="32">*<pos:position pos:line="11" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="33">site<pos:position pos:line="11" pos:column="37"/></name></decl>, <modifier pos:line="11" pos:column="39">*<pos:position pos:line="11" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="40">str<pos:position pos:line="11" pos:column="43"/></name></decl>, <modifier pos:line="11" pos:column="45">*<pos:position pos:line="11" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="46">type<pos:position pos:line="11" pos:column="50"/></name></decl>;<pos:position pos:line="11" pos:column="51"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">char<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">pwd<pos:position pos:line="13" pos:column="20"/></name> <init pos:line="13" pos:column="21">= <expr><call><name pos:line="13" pos:column="23">apr_table_get<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name><name pos:line="13" pos:column="37">r<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">notes<pos:position pos:line="13" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="47">"Directory-PWD"<pos:position pos:line="13" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">readme<pos:position pos:line="14" pos:column="23"/></name> <init pos:line="14" pos:column="24">= <expr><call><name pos:line="14" pos:column="26">apr_table_get<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name><name pos:line="14" pos:column="40">r<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">notes<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="50">"Directory-README"<pos:position pos:line="14" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="70"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">proxy_dir_ctx_t<pos:position pos:line="16" pos:column="20"/></name> <modifier pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></modifier></type><name pos:line="16" pos:column="22">ctx<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><name><name pos:line="16" pos:column="28">f<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">ctx<pos:position pos:line="16" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="35"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">ctx<pos:position pos:line="18" pos:column="13"/></name></expr>)<pos:position pos:line="18" pos:column="14"/></condition><then pos:line="18" pos:column="14"> <block pos:line="18" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">f<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">ctx<pos:position pos:line="19" pos:column="15"/></name></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">ctx<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <call><name pos:line="19" pos:column="24">apr_pcalloc<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">p<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="39">sizeof<argument_list pos:line="19" pos:column="45">(<argument><expr><operator pos:line="19" pos:column="46">*<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="47">ctx<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">ctx<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">in<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">apr_brigade_create<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">p<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="41">c<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">bucket_alloc<pos:position pos:line="20" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">ctx<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">buffer<pos:position pos:line="21" pos:column="20"/></name><index pos:line="21" pos:column="20">[<expr><literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal></expr>]<pos:position pos:line="21" pos:column="23"/></index></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">0<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">ctx<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">state<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">HEADER<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* combine the stored and the new */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">APR_BRIGADE_CONCAT<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name><name pos:line="26" pos:column="24">ctx<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">in<pos:position pos:line="26" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="33">in<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">HEADER<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">==<pos:position pos:line="28" pos:column="18"/></operator> <name><name pos:line="28" pos:column="19">ctx<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">state<pos:position pos:line="28" pos:column="29"/></name></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block pos:line="28" pos:column="31">{

        <comment type="block" pos:line="30" pos:column="9">/* basedir is either "", or "/%2f" for the "squid %2f hack" */</comment>
        <decl_stmt><decl><type><specifier pos:line="31" pos:column="9">const<pos:position pos:line="31" pos:column="14"/></specifier> <name pos:line="31" pos:column="15">char<pos:position pos:line="31" pos:column="19"/></name> <modifier pos:line="31" pos:column="20">*<pos:position pos:line="31" pos:column="21"/></modifier></type><name pos:line="31" pos:column="21">basedir<pos:position pos:line="31" pos:column="28"/></name> <init pos:line="31" pos:column="29">= <expr><literal type="string" pos:line="31" pos:column="31">""<pos:position pos:line="31" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="34"/></decl_stmt>  <comment type="block" pos:line="31" pos:column="36">/* By default, path is relative to the $HOME dir */</comment>
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">char<pos:position pos:line="32" pos:column="13"/></name> <modifier pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></modifier></type><name pos:line="32" pos:column="15">wildcard<pos:position pos:line="32" pos:column="23"/></name> <init pos:line="32" pos:column="24">= <expr><name pos:line="32" pos:column="26">NULL<pos:position pos:line="32" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="31"/></decl_stmt>

        <comment type="block" pos:line="34" pos:column="9">/* Save "scheme://site" prefix without password */</comment>
        <expr_stmt><expr><name pos:line="35" pos:column="9">site<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">apr_uri_unparse<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">p<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="35">&amp;<pos:position pos:line="35" pos:column="40"/></operator><name><name pos:line="35" pos:column="36">f<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">r<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">parsed_uri<pos:position pos:line="35" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">APR_URI_UNP_OMITPASSWORD<pos:position pos:line="35" pos:column="78"/></name> <operator pos:line="35" pos:column="79">|<pos:position pos:line="35" pos:column="80"/></operator> <name pos:line="35" pos:column="81">APR_URI_UNP_OMITPATHINFO<pos:position pos:line="35" pos:column="105"/></name></expr></argument>)<pos:position pos:line="35" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="107"/></expr_stmt>
        <comment type="block" pos:line="36" pos:column="9">/* ... and path without query args */</comment>
        <expr_stmt><expr><name pos:line="37" pos:column="9">path<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">apr_uri_unparse<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">p<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="35">&amp;<pos:position pos:line="37" pos:column="40"/></operator><name><name pos:line="37" pos:column="36">f<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">r<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">parsed_uri<pos:position pos:line="37" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="54">APR_URI_UNP_OMITSITEPART<pos:position pos:line="37" pos:column="78"/></name> <operator pos:line="37" pos:column="79">|<pos:position pos:line="37" pos:column="80"/></operator> <name pos:line="37" pos:column="81">APR_URI_UNP_OMITQUERY<pos:position pos:line="37" pos:column="102"/></name></expr></argument>)<pos:position pos:line="37" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="104"/></expr_stmt>

        <comment type="block" pos:line="39" pos:column="9">/* If path began with /%2f, change the basedir */</comment>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">strncasecmp<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">path<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="31">"/%2f"<pos:position pos:line="40" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="39">4<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call> <operator pos:line="40" pos:column="42">==<pos:position pos:line="40" pos:column="44"/></operator> <literal type="number" pos:line="40" pos:column="45">0<pos:position pos:line="40" pos:column="46"/></literal></expr>)<pos:position pos:line="40" pos:column="47"/></condition><then pos:line="40" pos:column="47"> <block pos:line="40" pos:column="48">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">basedir<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <literal type="string" pos:line="41" pos:column="23">"/%2f"<pos:position pos:line="41" pos:column="29"/></literal></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="44" pos:column="9">/* Strip off a type qualifier. It is ignored for dir listings */</comment>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">(<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">type<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <call><name pos:line="45" pos:column="21">strstr<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">path<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="34">";type="<pos:position pos:line="45" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call><operator pos:line="45" pos:column="43">)<pos:position pos:line="45" pos:column="44"/></operator> <operator pos:line="45" pos:column="45">!=<pos:position pos:line="45" pos:column="47"/></operator> <name pos:line="45" pos:column="48">NULL<pos:position pos:line="45" pos:column="52"/></name></expr>)<pos:position pos:line="45" pos:column="53"/></condition><then pos:line="45" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="13">*<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">type<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">++<pos:position pos:line="46" pos:column="20"/></operator> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <literal type="char" pos:line="46" pos:column="23">'\0'<pos:position pos:line="46" pos:column="27"/></literal></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt></block></then></if>

        <expr_stmt><expr><operator pos:line="48" pos:column="9">(<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">void<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">)<pos:position pos:line="48" pos:column="15"/></operator><call><name pos:line="48" pos:column="15">decodeenc<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">path<pos:position pos:line="48" pos:column="29"/></name></expr></argument>)<pos:position pos:line="48" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>

        <while pos:line="50" pos:column="9">while <condition pos:line="50" pos:column="15">(<expr><name><name pos:line="50" pos:column="16">path<pos:position pos:line="50" pos:column="20"/></name><index pos:line="50" pos:column="20">[<expr><literal type="number" pos:line="50" pos:column="21">1<pos:position pos:line="50" pos:column="22"/></literal></expr>]<pos:position pos:line="50" pos:column="23"/></index></name> <operator pos:line="50" pos:column="24">==<pos:position pos:line="50" pos:column="26"/></operator> <literal type="char" pos:line="50" pos:column="27">'/'<pos:position pos:line="50" pos:column="30"/></literal></expr>)<pos:position pos:line="50" pos:column="31"/></condition> <comment type="block" pos:line="50" pos:column="32">/* collapse multiple leading slashes to one */</comment>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="51" pos:column="13">++<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="15">path<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt></block></while>

        <expr_stmt><expr><name pos:line="53" pos:column="9">reldir<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">strrchr<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">path<pos:position pos:line="53" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="32">'/'<pos:position pos:line="53" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">reldir<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">!=<pos:position pos:line="54" pos:column="22"/></operator> <name pos:line="54" pos:column="23">NULL<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">&amp;&amp;<pos:position pos:line="54" pos:column="38"/></operator> <call><name pos:line="54" pos:column="31">ftp_check_globbingchars<pos:position pos:line="54" pos:column="54"/></name><argument_list pos:line="54" pos:column="54">(<argument><expr><name pos:line="54" pos:column="55">reldir<pos:position pos:line="54" pos:column="61"/></name></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="63"/></condition><then pos:line="54" pos:column="63"> <block pos:line="54" pos:column="64">{
            <expr_stmt><expr><name pos:line="55" pos:column="13">wildcard<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <operator pos:line="55" pos:column="24">&amp;<pos:position pos:line="55" pos:column="29"/></operator><name><name pos:line="55" pos:column="25">reldir<pos:position pos:line="55" pos:column="31"/></name><index pos:line="55" pos:column="31">[<expr><literal type="number" pos:line="55" pos:column="32">1<pos:position pos:line="55" pos:column="33"/></literal></expr>]<pos:position pos:line="55" pos:column="34"/></index></name></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="56" pos:column="13">reldir<pos:position pos:line="56" pos:column="19"/></name><index pos:line="56" pos:column="19">[<expr><literal type="number" pos:line="56" pos:column="20">0<pos:position pos:line="56" pos:column="21"/></literal></expr>]<pos:position pos:line="56" pos:column="22"/></index></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <literal type="char" pos:line="56" pos:column="25">'\0'<pos:position pos:line="56" pos:column="29"/></literal></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt> <comment type="block" pos:line="56" pos:column="31">/* strip off the wildcard suffix */</comment>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="59" pos:column="9">/* Copy path, strip (all except the last) trailing slashes */</comment>
        <comment type="block" pos:line="60" pos:column="9">/* (the trailing slash is needed for the dir component loop below) */</comment>
        <expr_stmt><expr><name pos:line="61" pos:column="9">path<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <name pos:line="61" pos:column="16">dir<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <call><name pos:line="61" pos:column="22">apr_pstrcat<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">p<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">path<pos:position pos:line="61" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="43">"/"<pos:position pos:line="61" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">NULL<pos:position pos:line="61" pos:column="52"/></name></expr></argument>)<pos:position pos:line="61" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="54"/></expr_stmt>
        <for pos:line="62" pos:column="9">for <control pos:line="62" pos:column="13">(<init><expr><name pos:line="62" pos:column="14">n<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">strlen<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name pos:line="62" pos:column="25">path<pos:position pos:line="62" pos:column="29"/></name></expr></argument>)<pos:position pos:line="62" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="31"/></init> <condition><expr><name pos:line="62" pos:column="32">n<pos:position pos:line="62" pos:column="33"/></name> <operator pos:line="62" pos:column="34">&gt;<pos:position pos:line="62" pos:column="38"/></operator> <literal type="number" pos:line="62" pos:column="36">1<pos:position pos:line="62" pos:column="37"/></literal> <operator pos:line="62" pos:column="38">&amp;&amp;<pos:position pos:line="62" pos:column="48"/></operator> <name><name pos:line="62" pos:column="41">path<pos:position pos:line="62" pos:column="45"/></name><index pos:line="62" pos:column="45">[<expr><name pos:line="62" pos:column="46">n<pos:position pos:line="62" pos:column="47"/></name> <operator pos:line="62" pos:column="48">-<pos:position pos:line="62" pos:column="49"/></operator> <literal type="number" pos:line="62" pos:column="50">1<pos:position pos:line="62" pos:column="51"/></literal></expr>]<pos:position pos:line="62" pos:column="52"/></index></name> <operator pos:line="62" pos:column="53">==<pos:position pos:line="62" pos:column="55"/></operator> <literal type="char" pos:line="62" pos:column="56">'/'<pos:position pos:line="62" pos:column="59"/></literal> <operator pos:line="62" pos:column="60">&amp;&amp;<pos:position pos:line="62" pos:column="70"/></operator> <name><name pos:line="62" pos:column="63">path<pos:position pos:line="62" pos:column="67"/></name><index pos:line="62" pos:column="67">[<expr><name pos:line="62" pos:column="68">n<pos:position pos:line="62" pos:column="69"/></name> <operator pos:line="62" pos:column="70">-<pos:position pos:line="62" pos:column="71"/></operator> <literal type="number" pos:line="62" pos:column="72">2<pos:position pos:line="62" pos:column="73"/></literal></expr>]<pos:position pos:line="62" pos:column="74"/></index></name> <operator pos:line="62" pos:column="75">==<pos:position pos:line="62" pos:column="77"/></operator> <literal type="char" pos:line="62" pos:column="78">'/'<pos:position pos:line="62" pos:column="81"/></literal></expr>;<pos:position pos:line="62" pos:column="82"/></condition> <incr><expr><operator pos:line="62" pos:column="83">--<pos:position pos:line="62" pos:column="85"/></operator><name pos:line="62" pos:column="85">n<pos:position pos:line="62" pos:column="86"/></name></expr></incr>)<pos:position pos:line="62" pos:column="87"/></control>
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="13">path<pos:position pos:line="63" pos:column="17"/></name><index pos:line="63" pos:column="17">[<expr><name pos:line="63" pos:column="18">n<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">-<pos:position pos:line="63" pos:column="21"/></operator> <literal type="number" pos:line="63" pos:column="22">1<pos:position pos:line="63" pos:column="23"/></literal></expr>]<pos:position pos:line="63" pos:column="24"/></index></name> <operator pos:line="63" pos:column="25">=<pos:position pos:line="63" pos:column="26"/></operator> <literal type="char" pos:line="63" pos:column="27">'\0'<pos:position pos:line="63" pos:column="31"/></literal></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt></block></for>

        <comment type="block" pos:line="65" pos:column="9">/* Add a link to the root directory (if %2f hack was used) */</comment>
        <expr_stmt><expr><name pos:line="66" pos:column="9">str<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="66" pos:column="15">(<pos:position pos:line="66" pos:column="16"/></operator><name><name pos:line="66" pos:column="16">basedir<pos:position pos:line="66" pos:column="23"/></name><index pos:line="66" pos:column="23">[<expr><literal type="number" pos:line="66" pos:column="24">0<pos:position pos:line="66" pos:column="25"/></literal></expr>]<pos:position pos:line="66" pos:column="26"/></index></name> <operator pos:line="66" pos:column="27">!=<pos:position pos:line="66" pos:column="29"/></operator> <literal type="char" pos:line="66" pos:column="30">'\0'<pos:position pos:line="66" pos:column="34"/></literal><operator pos:line="66" pos:column="34">)<pos:position pos:line="66" pos:column="35"/></operator></expr> ?<pos:position pos:line="66" pos:column="37"/></condition><then pos:line="66" pos:column="37"> <expr><literal type="string" pos:line="66" pos:column="38">"&lt;a href=\"/%2f/\"&gt;%2f&lt;/a&gt;/"<pos:position pos:line="66" pos:column="78"/></literal></expr> <pos:position pos:line="66" pos:column="67"/></then><else pos:line="66" pos:column="67">: <expr><literal type="string" pos:line="66" pos:column="69">""<pos:position pos:line="66" pos:column="71"/></literal></expr></else></ternary></expr>;<pos:position pos:line="66" pos:column="72"/></expr_stmt>

        <comment type="block" pos:line="68" pos:column="9">/* print "ftp://host/" */</comment>
        <expr_stmt><expr><name pos:line="69" pos:column="9">str<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <call><name pos:line="69" pos:column="15">apr_psprintf<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name pos:line="69" pos:column="28">p<pos:position pos:line="69" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="31">DOCTYPE_HTML_3_2<pos:position pos:line="69" pos:column="47"/></name>
                <literal type="string" pos:line="70" pos:column="17">"&lt;html&gt;\n &lt;head&gt;\n  &lt;title&gt;%s%s%s&lt;/title&gt;\n"<pos:position pos:line="70" pos:column="85"/></literal>
                <literal type="string" pos:line="71" pos:column="17">" &lt;/head&gt;\n"<pos:position pos:line="71" pos:column="35"/></literal>
                <literal type="string" pos:line="72" pos:column="17">" &lt;body&gt;\n  &lt;h2&gt;Directory of "<pos:position pos:line="72" pos:column="59"/></literal>
                <literal type="string" pos:line="73" pos:column="17">"&lt;a href=\"/\"&gt;%s&lt;/a&gt;/%s"<pos:position pos:line="73" pos:column="54"/></literal></expr></argument>,
                <argument><expr><name pos:line="74" pos:column="17">site<pos:position pos:line="74" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="23">basedir<pos:position pos:line="74" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="32">ap_escape_html<pos:position pos:line="74" pos:column="46"/></name><argument_list pos:line="74" pos:column="46">(<argument><expr><name pos:line="74" pos:column="47">p<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">path<pos:position pos:line="74" pos:column="54"/></name></expr></argument>)<pos:position pos:line="74" pos:column="55"/></argument_list></call></expr></argument>,
                <argument><expr><name pos:line="75" pos:column="17">site<pos:position pos:line="75" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="23">str<pos:position pos:line="75" pos:column="26"/></name></expr></argument>)<pos:position pos:line="75" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="77" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name pos:line="77" pos:column="33">out<pos:position pos:line="77" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="38">apr_bucket_pool_create<pos:position pos:line="77" pos:column="60"/></name><argument_list pos:line="77" pos:column="60">(<argument><expr><name pos:line="77" pos:column="61">str<pos:position pos:line="77" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="66">strlen<pos:position pos:line="77" pos:column="72"/></name><argument_list pos:line="77" pos:column="72">(<argument><expr><name pos:line="77" pos:column="73">str<pos:position pos:line="77" pos:column="76"/></name></expr></argument>)<pos:position pos:line="77" pos:column="77"/></argument_list></call></expr></argument>,
                                                          <argument><expr><name pos:line="78" pos:column="59">p<pos:position pos:line="78" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="62">c<pos:position pos:line="78" pos:column="63"/></name><operator pos:line="78" pos:column="63">-&gt;<pos:position pos:line="78" pos:column="68"/></operator><name pos:line="78" pos:column="65">bucket_alloc<pos:position pos:line="78" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="80"/></expr_stmt>

        <for pos:line="80" pos:column="9">for <control pos:line="80" pos:column="13">(<init><expr><name pos:line="80" pos:column="14">dir<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <name pos:line="80" pos:column="20">path<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">+<pos:position pos:line="80" pos:column="25"/></operator><literal type="number" pos:line="80" pos:column="25">1<pos:position pos:line="80" pos:column="26"/></literal></expr>;<pos:position pos:line="80" pos:column="27"/></init> <condition><expr><operator pos:line="80" pos:column="28">(<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="29">dir<pos:position pos:line="80" pos:column="32"/></name> <operator pos:line="80" pos:column="33">=<pos:position pos:line="80" pos:column="34"/></operator> <call><name pos:line="80" pos:column="35">strchr<pos:position pos:line="80" pos:column="41"/></name><argument_list pos:line="80" pos:column="41">(<argument><expr><name pos:line="80" pos:column="42">dir<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="80" pos:column="47">'/'<pos:position pos:line="80" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="51"/></argument_list></call><operator pos:line="80" pos:column="51">)<pos:position pos:line="80" pos:column="52"/></operator> <operator pos:line="80" pos:column="53">!=<pos:position pos:line="80" pos:column="55"/></operator> <name pos:line="80" pos:column="56">NULL<pos:position pos:line="80" pos:column="60"/></name></expr>;<pos:position pos:line="80" pos:column="61"/></condition> <incr/>)<pos:position pos:line="80" pos:column="63"/></control>
        <block pos:line="81" pos:column="9">{
            <expr_stmt><expr><operator pos:line="82" pos:column="13">*<pos:position pos:line="82" pos:column="14"/></operator><name pos:line="82" pos:column="14">dir<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">=<pos:position pos:line="82" pos:column="19"/></operator> <literal type="char" pos:line="82" pos:column="20">'\0'<pos:position pos:line="82" pos:column="24"/></literal></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt>
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><operator pos:line="83" pos:column="17">(<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="18">reldir<pos:position pos:line="83" pos:column="24"/></name> <operator pos:line="83" pos:column="25">=<pos:position pos:line="83" pos:column="26"/></operator> <call><name pos:line="83" pos:column="27">strrchr<pos:position pos:line="83" pos:column="34"/></name><argument_list pos:line="83" pos:column="34">(<argument><expr><name pos:line="83" pos:column="35">path<pos:position pos:line="83" pos:column="39"/></name><operator pos:line="83" pos:column="39">+<pos:position pos:line="83" pos:column="40"/></operator><literal type="number" pos:line="83" pos:column="40">1<pos:position pos:line="83" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="83" pos:column="43">'/'<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="47"/></argument_list></call><operator pos:line="83" pos:column="47">)<pos:position pos:line="83" pos:column="48"/></operator><operator pos:line="83" pos:column="48">==<pos:position pos:line="83" pos:column="50"/></operator><name pos:line="83" pos:column="50">NULL<pos:position pos:line="83" pos:column="54"/></name></expr>)<pos:position pos:line="83" pos:column="55"/></condition><then pos:line="83" pos:column="55"> <block pos:line="83" pos:column="56">{
                <expr_stmt><expr><name pos:line="84" pos:column="17">reldir<pos:position pos:line="84" pos:column="23"/></name> <operator pos:line="84" pos:column="24">=<pos:position pos:line="84" pos:column="25"/></operator> <name pos:line="84" pos:column="26">path<pos:position pos:line="84" pos:column="30"/></name><operator pos:line="84" pos:column="30">+<pos:position pos:line="84" pos:column="31"/></operator><literal type="number" pos:line="84" pos:column="31">1<pos:position pos:line="84" pos:column="32"/></literal></expr>;<pos:position pos:line="84" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></then>
            <else pos:line="86" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><operator pos:line="87" pos:column="17">++<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">reldir<pos:position pos:line="87" pos:column="25"/></name></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt></block></else></if>
            <comment type="block" pos:line="88" pos:column="13">/* print "path/" component */</comment>
            <expr_stmt><expr><name pos:line="89" pos:column="13">str<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">=<pos:position pos:line="89" pos:column="18"/></operator> <call><name pos:line="89" pos:column="19">apr_psprintf<pos:position pos:line="89" pos:column="31"/></name><argument_list pos:line="89" pos:column="31">(<argument><expr><name pos:line="89" pos:column="32">p<pos:position pos:line="89" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="35">"&lt;a href=\"%s%s/\"&gt;%s&lt;/a&gt;/"<pos:position pos:line="89" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="64">basedir<pos:position pos:line="89" pos:column="71"/></name></expr></argument>,
                        <argument><expr><call><name pos:line="90" pos:column="25">ap_escape_uri<pos:position pos:line="90" pos:column="38"/></name><argument_list pos:line="90" pos:column="38">(<argument><expr><name pos:line="90" pos:column="39">p<pos:position pos:line="90" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="42">path<pos:position pos:line="90" pos:column="46"/></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr></argument>,
                        <argument><expr><call><name pos:line="91" pos:column="25">ap_escape_html<pos:position pos:line="91" pos:column="39"/></name><argument_list pos:line="91" pos:column="39">(<argument><expr><name pos:line="91" pos:column="40">p<pos:position pos:line="91" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="43">reldir<pos:position pos:line="91" pos:column="49"/></name></expr></argument>)<pos:position pos:line="91" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="92" pos:column="13">*<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">dir<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">=<pos:position pos:line="92" pos:column="19"/></operator> <literal type="char" pos:line="92" pos:column="20">'/'<pos:position pos:line="92" pos:column="23"/></literal></expr>;<pos:position pos:line="92" pos:column="24"/></expr_stmt>
            <while pos:line="93" pos:column="13">while <condition pos:line="93" pos:column="19">(<expr><operator pos:line="93" pos:column="20">*<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="21">dir<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">==<pos:position pos:line="93" pos:column="27"/></operator> <literal type="char" pos:line="93" pos:column="28">'/'<pos:position pos:line="93" pos:column="31"/></literal></expr>)<pos:position pos:line="93" pos:column="32"/></condition>
              <block type="pseudo"><expr_stmt><expr><operator pos:line="94" pos:column="15">++<pos:position pos:line="94" pos:column="17"/></operator><name pos:line="94" pos:column="17">dir<pos:position pos:line="94" pos:column="20"/></name></expr>;<pos:position pos:line="94" pos:column="21"/></expr_stmt></block></while>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="95" pos:column="36"/></name><argument_list pos:line="95" pos:column="36">(<argument><expr><name pos:line="95" pos:column="37">out<pos:position pos:line="95" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="95" pos:column="42">apr_bucket_pool_create<pos:position pos:line="95" pos:column="64"/></name><argument_list pos:line="95" pos:column="64">(<argument><expr><name pos:line="95" pos:column="65">str<pos:position pos:line="95" pos:column="68"/></name></expr></argument>,
                                                           <argument><expr><call><name pos:line="96" pos:column="60">strlen<pos:position pos:line="96" pos:column="66"/></name><argument_list pos:line="96" pos:column="66">(<argument><expr><name pos:line="96" pos:column="67">str<pos:position pos:line="96" pos:column="70"/></name></expr></argument>)<pos:position pos:line="96" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="96" pos:column="73">p<pos:position pos:line="96" pos:column="74"/></name></expr></argument>,
                                                           <argument><expr><name><name pos:line="97" pos:column="60">c<pos:position pos:line="97" pos:column="61"/></name><operator pos:line="97" pos:column="61">-&gt;<pos:position pos:line="97" pos:column="66"/></operator><name pos:line="97" pos:column="63">bucket_alloc<pos:position pos:line="97" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></for>
        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><name pos:line="99" pos:column="13">wildcard<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">!=<pos:position pos:line="99" pos:column="24"/></operator> <name pos:line="99" pos:column="25">NULL<pos:position pos:line="99" pos:column="29"/></name></expr>)<pos:position pos:line="99" pos:column="30"/></condition><then pos:line="99" pos:column="30"> <block pos:line="99" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="100" pos:column="36"/></name><argument_list pos:line="100" pos:column="36">(<argument><expr><name pos:line="100" pos:column="37">out<pos:position pos:line="100" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="100" pos:column="42">apr_bucket_pool_create<pos:position pos:line="100" pos:column="64"/></name><argument_list pos:line="100" pos:column="64">(<argument><expr><name pos:line="100" pos:column="65">wildcard<pos:position pos:line="100" pos:column="73"/></name></expr></argument>,
                                                           <argument><expr><call><name pos:line="101" pos:column="60">strlen<pos:position pos:line="101" pos:column="66"/></name><argument_list pos:line="101" pos:column="66">(<argument><expr><name pos:line="101" pos:column="67">wildcard<pos:position pos:line="101" pos:column="75"/></name></expr></argument>)<pos:position pos:line="101" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="101" pos:column="78">p<pos:position pos:line="101" pos:column="79"/></name></expr></argument>,
                                                           <argument><expr><name><name pos:line="102" pos:column="60">c<pos:position pos:line="102" pos:column="61"/></name><operator pos:line="102" pos:column="61">-&gt;<pos:position pos:line="102" pos:column="66"/></operator><name pos:line="102" pos:column="63">bucket_alloc<pos:position pos:line="102" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="105" pos:column="9">/* If the caller has determined the current directory, and it differs */</comment>
        <comment type="block" pos:line="106" pos:column="9">/* from what the client requested, then show the real name */</comment>
        <if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">pwd<pos:position pos:line="107" pos:column="16"/></name> <operator pos:line="107" pos:column="17">==<pos:position pos:line="107" pos:column="19"/></operator> <name pos:line="107" pos:column="20">NULL<pos:position pos:line="107" pos:column="24"/></name> <operator pos:line="107" pos:column="25">||<pos:position pos:line="107" pos:column="27"/></operator> <call><name pos:line="107" pos:column="28">strncmp<pos:position pos:line="107" pos:column="35"/></name><argument_list pos:line="107" pos:column="35">(<argument><expr><name pos:line="107" pos:column="36">pwd<pos:position pos:line="107" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="41">path<pos:position pos:line="107" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="47">strlen<pos:position pos:line="107" pos:column="53"/></name><argument_list pos:line="107" pos:column="53">(<argument><expr><name pos:line="107" pos:column="54">pwd<pos:position pos:line="107" pos:column="57"/></name></expr></argument>)<pos:position pos:line="107" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="59"/></argument_list></call> <operator pos:line="107" pos:column="60">==<pos:position pos:line="107" pos:column="62"/></operator> <literal type="number" pos:line="107" pos:column="63">0<pos:position pos:line="107" pos:column="64"/></literal></expr>)<pos:position pos:line="107" pos:column="65"/></condition><then pos:line="107" pos:column="65"> <block pos:line="107" pos:column="66">{
            <expr_stmt><expr><name pos:line="108" pos:column="13">str<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">=<pos:position pos:line="108" pos:column="18"/></operator> <call><name pos:line="108" pos:column="19">apr_psprintf<pos:position pos:line="108" pos:column="31"/></name><argument_list pos:line="108" pos:column="31">(<argument><expr><name pos:line="108" pos:column="32">p<pos:position pos:line="108" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="35">"&lt;/h2&gt;\n\n  &lt;hr /&gt;\n\n&lt;pre&gt;"<pos:position pos:line="108" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="109" pos:column="10"/></block></then>
        <else pos:line="110" pos:column="9">else <block pos:line="110" pos:column="14">{
            <expr_stmt><expr><name pos:line="111" pos:column="13">str<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <call><name pos:line="111" pos:column="19">apr_psprintf<pos:position pos:line="111" pos:column="31"/></name><argument_list pos:line="111" pos:column="31">(<argument><expr><name pos:line="111" pos:column="32">p<pos:position pos:line="111" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="35">"&lt;/h2&gt;\n\n(%s)\n\n  &lt;hr /&gt;\n\n&lt;pre&gt;"<pos:position pos:line="111" pos:column="89"/></literal></expr></argument>,
                               <argument><expr><call><name pos:line="112" pos:column="32">ap_escape_html<pos:position pos:line="112" pos:column="46"/></name><argument_list pos:line="112" pos:column="46">(<argument><expr><name pos:line="112" pos:column="47">p<pos:position pos:line="112" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="50">pwd<pos:position pos:line="112" pos:column="53"/></name></expr></argument>)<pos:position pos:line="112" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="113" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="114" pos:column="32"/></name><argument_list pos:line="114" pos:column="32">(<argument><expr><name pos:line="114" pos:column="33">out<pos:position pos:line="114" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="38">apr_bucket_pool_create<pos:position pos:line="114" pos:column="60"/></name><argument_list pos:line="114" pos:column="60">(<argument><expr><name pos:line="114" pos:column="61">str<pos:position pos:line="114" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="66">strlen<pos:position pos:line="114" pos:column="72"/></name><argument_list pos:line="114" pos:column="72">(<argument><expr><name pos:line="114" pos:column="73">str<pos:position pos:line="114" pos:column="76"/></name></expr></argument>)<pos:position pos:line="114" pos:column="77"/></argument_list></call></expr></argument>,
                                                           <argument><expr><name pos:line="115" pos:column="60">p<pos:position pos:line="115" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="63">c<pos:position pos:line="115" pos:column="64"/></name><operator pos:line="115" pos:column="64">-&gt;<pos:position pos:line="115" pos:column="69"/></operator><name pos:line="115" pos:column="66">bucket_alloc<pos:position pos:line="115" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="81"/></expr_stmt>

        <comment type="block" pos:line="117" pos:column="9">/* print README */</comment>
        <if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name pos:line="118" pos:column="13">readme<pos:position pos:line="118" pos:column="19"/></name></expr>)<pos:position pos:line="118" pos:column="20"/></condition><then pos:line="118" pos:column="20"> <block pos:line="118" pos:column="21">{
            <expr_stmt><expr><name pos:line="119" pos:column="13">str<pos:position pos:line="119" pos:column="16"/></name> <operator pos:line="119" pos:column="17">=<pos:position pos:line="119" pos:column="18"/></operator> <call><name pos:line="119" pos:column="19">apr_psprintf<pos:position pos:line="119" pos:column="31"/></name><argument_list pos:line="119" pos:column="31">(<argument><expr><name pos:line="119" pos:column="32">p<pos:position pos:line="119" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="35">"%s\n&lt;/pre&gt;\n\n&lt;hr /&gt;\n\n&lt;pre&gt;\n"<pos:position pos:line="119" pos:column="86"/></literal></expr></argument>,
                               <argument><expr><call><name pos:line="120" pos:column="32">ap_escape_html<pos:position pos:line="120" pos:column="46"/></name><argument_list pos:line="120" pos:column="46">(<argument><expr><name pos:line="120" pos:column="47">p<pos:position pos:line="120" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="50">readme<pos:position pos:line="120" pos:column="56"/></name></expr></argument>)<pos:position pos:line="120" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="120" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="59"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="122" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="122" pos:column="36"/></name><argument_list pos:line="122" pos:column="36">(<argument><expr><name pos:line="122" pos:column="37">out<pos:position pos:line="122" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="122" pos:column="42">apr_bucket_pool_create<pos:position pos:line="122" pos:column="64"/></name><argument_list pos:line="122" pos:column="64">(<argument><expr><name pos:line="122" pos:column="65">str<pos:position pos:line="122" pos:column="68"/></name></expr></argument>,
                                                           <argument><expr><call><name pos:line="123" pos:column="60">strlen<pos:position pos:line="123" pos:column="66"/></name><argument_list pos:line="123" pos:column="66">(<argument><expr><name pos:line="123" pos:column="67">str<pos:position pos:line="123" pos:column="70"/></name></expr></argument>)<pos:position pos:line="123" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="123" pos:column="73">p<pos:position pos:line="123" pos:column="74"/></name></expr></argument>,
                                                           <argument><expr><name><name pos:line="124" pos:column="60">c<pos:position pos:line="124" pos:column="61"/></name><operator pos:line="124" pos:column="61">-&gt;<pos:position pos:line="124" pos:column="66"/></operator><name pos:line="124" pos:column="63">bucket_alloc<pos:position pos:line="124" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="124" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="125" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="127" pos:column="9">/* make sure page intro gets sent out */</comment>
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="128" pos:column="32"/></name><argument_list pos:line="128" pos:column="32">(<argument><expr><name pos:line="128" pos:column="33">out<pos:position pos:line="128" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="128" pos:column="38">apr_bucket_flush_create<pos:position pos:line="128" pos:column="61"/></name><argument_list pos:line="128" pos:column="61">(<argument><expr><name><name pos:line="128" pos:column="62">c<pos:position pos:line="128" pos:column="63"/></name><operator pos:line="128" pos:column="63">-&gt;<pos:position pos:line="128" pos:column="68"/></operator><name pos:line="128" pos:column="65">bucket_alloc<pos:position pos:line="128" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="80"/></expr_stmt>
        <if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><name pos:line="129" pos:column="13">APR_SUCCESS<pos:position pos:line="129" pos:column="24"/></name> <operator pos:line="129" pos:column="25">!=<pos:position pos:line="129" pos:column="27"/></operator> <operator pos:line="129" pos:column="28">(<pos:position pos:line="129" pos:column="29"/></operator><name pos:line="129" pos:column="29">rv<pos:position pos:line="129" pos:column="31"/></name> <operator pos:line="129" pos:column="32">=<pos:position pos:line="129" pos:column="33"/></operator> <call><name pos:line="129" pos:column="34">ap_pass_brigade<pos:position pos:line="129" pos:column="49"/></name><argument_list pos:line="129" pos:column="49">(<argument><expr><name><name pos:line="129" pos:column="50">f<pos:position pos:line="129" pos:column="51"/></name><operator pos:line="129" pos:column="51">-&gt;<pos:position pos:line="129" pos:column="56"/></operator><name pos:line="129" pos:column="53">next<pos:position pos:line="129" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="59">out<pos:position pos:line="129" pos:column="62"/></name></expr></argument>)<pos:position pos:line="129" pos:column="63"/></argument_list></call><operator pos:line="129" pos:column="63">)<pos:position pos:line="129" pos:column="64"/></operator></expr>)<pos:position pos:line="129" pos:column="65"/></condition><then pos:line="129" pos:column="65"> <block pos:line="129" pos:column="66">{
            <return pos:line="130" pos:column="13">return <expr><name pos:line="130" pos:column="20">rv<pos:position pos:line="130" pos:column="22"/></name></expr>;<pos:position pos:line="130" pos:column="23"/></return>
        }<pos:position pos:line="131" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">apr_brigade_cleanup<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><name pos:line="132" pos:column="29">out<pos:position pos:line="132" pos:column="32"/></name></expr></argument>)<pos:position pos:line="132" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="134" pos:column="9">ctx<pos:position pos:line="134" pos:column="12"/></name><operator pos:line="134" pos:column="12">-&gt;<pos:position pos:line="134" pos:column="17"/></operator><name pos:line="134" pos:column="14">state<pos:position pos:line="134" pos:column="19"/></name></name> <operator pos:line="134" pos:column="20">=<pos:position pos:line="134" pos:column="21"/></operator> <name pos:line="134" pos:column="22">BODY<pos:position pos:line="134" pos:column="26"/></name></expr>;<pos:position pos:line="134" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="135" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="137" pos:column="5">/* loop through each line of directory */</comment>
    <while pos:line="138" pos:column="5">while <condition pos:line="138" pos:column="11">(<expr><name pos:line="138" pos:column="12">BODY<pos:position pos:line="138" pos:column="16"/></name> <operator pos:line="138" pos:column="17">==<pos:position pos:line="138" pos:column="19"/></operator> <name><name pos:line="138" pos:column="20">ctx<pos:position pos:line="138" pos:column="23"/></name><operator pos:line="138" pos:column="23">-&gt;<pos:position pos:line="138" pos:column="28"/></operator><name pos:line="138" pos:column="25">state<pos:position pos:line="138" pos:column="30"/></name></name></expr>)<pos:position pos:line="138" pos:column="31"/></condition> <block pos:line="138" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="139" pos:column="9">char<pos:position pos:line="139" pos:column="13"/></name> <modifier pos:line="139" pos:column="14">*<pos:position pos:line="139" pos:column="15"/></modifier></type><name pos:line="139" pos:column="15">filename<pos:position pos:line="139" pos:column="23"/></name></decl>;<pos:position pos:line="139" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="140" pos:column="9">int<pos:position pos:line="140" pos:column="12"/></name></type> <name pos:line="140" pos:column="13">found<pos:position pos:line="140" pos:column="18"/></name> <init pos:line="140" pos:column="19">= <expr><literal type="number" pos:line="140" pos:column="21">0<pos:position pos:line="140" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="140" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="141" pos:column="9">int<pos:position pos:line="141" pos:column="12"/></name></type> <name pos:line="141" pos:column="13">eos<pos:position pos:line="141" pos:column="16"/></name> <init pos:line="141" pos:column="17">= <expr><literal type="number" pos:line="141" pos:column="19">0<pos:position pos:line="141" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="141" pos:column="21"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="143" pos:column="9">ap_regex_t<pos:position pos:line="143" pos:column="19"/></name> <modifier pos:line="143" pos:column="20">*<pos:position pos:line="143" pos:column="21"/></modifier></type><name pos:line="143" pos:column="21">re<pos:position pos:line="143" pos:column="23"/></name> <init pos:line="143" pos:column="24">= <expr><name pos:line="143" pos:column="26">NULL<pos:position pos:line="143" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="143" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="144" pos:column="9">ap_regmatch_t<pos:position pos:line="144" pos:column="22"/></name></type> <name><name pos:line="144" pos:column="23">re_result<pos:position pos:line="144" pos:column="32"/></name><index pos:line="144" pos:column="32">[<expr><name pos:line="144" pos:column="33">LS_REG_MATCH<pos:position pos:line="144" pos:column="45"/></name></expr>]<pos:position pos:line="144" pos:column="46"/></index></name></decl>;<pos:position pos:line="144" pos:column="47"/></decl_stmt>

        <comment type="block" pos:line="146" pos:column="9">/* Compile the output format of "ls -s1" as a fallback for non-unix ftp listings */</comment>
        <expr_stmt><expr><name pos:line="147" pos:column="9">re<pos:position pos:line="147" pos:column="11"/></name> <operator pos:line="147" pos:column="12">=<pos:position pos:line="147" pos:column="13"/></operator> <call><name pos:line="147" pos:column="14">ap_pregcomp<pos:position pos:line="147" pos:column="25"/></name><argument_list pos:line="147" pos:column="25">(<argument><expr><name pos:line="147" pos:column="26">p<pos:position pos:line="147" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="29">LS_REG_PATTERN<pos:position pos:line="147" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="45">AP_REG_EXTENDED<pos:position pos:line="147" pos:column="60"/></name></expr></argument>)<pos:position pos:line="147" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="148" pos:column="9">ap_assert<pos:position pos:line="148" pos:column="18"/></name><argument_list pos:line="148" pos:column="18">(<argument><expr><name pos:line="148" pos:column="19">re<pos:position pos:line="148" pos:column="21"/></name> <operator pos:line="148" pos:column="22">!=<pos:position pos:line="148" pos:column="24"/></operator> <name pos:line="148" pos:column="25">NULL<pos:position pos:line="148" pos:column="29"/></name></expr></argument>)<pos:position pos:line="148" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="31"/></expr_stmt>

        <comment type="block" pos:line="150" pos:column="9">/* get a complete line */</comment>
        <comment type="block" pos:line="151" pos:column="9">/* if the buffer overruns - throw data away */</comment>
        <while pos:line="152" pos:column="9">while <condition pos:line="152" pos:column="15">(<expr><operator pos:line="152" pos:column="16">!<pos:position pos:line="152" pos:column="17"/></operator><name pos:line="152" pos:column="17">found<pos:position pos:line="152" pos:column="22"/></name> <operator pos:line="152" pos:column="23">&amp;&amp;<pos:position pos:line="152" pos:column="33"/></operator> <operator pos:line="152" pos:column="26">!<pos:position pos:line="152" pos:column="27"/></operator><call><name pos:line="152" pos:column="27">APR_BRIGADE_EMPTY<pos:position pos:line="152" pos:column="44"/></name><argument_list pos:line="152" pos:column="44">(<argument><expr><name><name pos:line="152" pos:column="45">ctx<pos:position pos:line="152" pos:column="48"/></name><operator pos:line="152" pos:column="48">-&gt;<pos:position pos:line="152" pos:column="53"/></operator><name pos:line="152" pos:column="50">in<pos:position pos:line="152" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="152" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="54"/></condition> <block pos:line="152" pos:column="55">{
            <decl_stmt><decl><type><name pos:line="153" pos:column="13">char<pos:position pos:line="153" pos:column="17"/></name> <modifier pos:line="153" pos:column="18">*<pos:position pos:line="153" pos:column="19"/></modifier></type><name pos:line="153" pos:column="19">pos<pos:position pos:line="153" pos:column="22"/></name></decl>, <modifier pos:line="153" pos:column="24">*<pos:position pos:line="153" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="153" pos:column="25">response<pos:position pos:line="153" pos:column="33"/></name></decl>;<pos:position pos:line="153" pos:column="34"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="154" pos:column="13">apr_size_t<pos:position pos:line="154" pos:column="23"/></name></type> <name pos:line="154" pos:column="24">len<pos:position pos:line="154" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="154" pos:column="29">max<pos:position pos:line="154" pos:column="32"/></name></decl>;<pos:position pos:line="154" pos:column="33"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="155" pos:column="13">apr_bucket<pos:position pos:line="155" pos:column="23"/></name> <modifier pos:line="155" pos:column="24">*<pos:position pos:line="155" pos:column="25"/></modifier></type><name pos:line="155" pos:column="25">e<pos:position pos:line="155" pos:column="26"/></name></decl>;<pos:position pos:line="155" pos:column="27"/></decl_stmt>

            <expr_stmt><expr><name pos:line="157" pos:column="13">e<pos:position pos:line="157" pos:column="14"/></name> <operator pos:line="157" pos:column="15">=<pos:position pos:line="157" pos:column="16"/></operator> <call><name pos:line="157" pos:column="17">APR_BRIGADE_FIRST<pos:position pos:line="157" pos:column="34"/></name><argument_list pos:line="157" pos:column="34">(<argument><expr><name><name pos:line="157" pos:column="35">ctx<pos:position pos:line="157" pos:column="38"/></name><operator pos:line="157" pos:column="38">-&gt;<pos:position pos:line="157" pos:column="43"/></operator><name pos:line="157" pos:column="40">in<pos:position pos:line="157" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="44"/></expr_stmt>
            <if pos:line="158" pos:column="13">if <condition pos:line="158" pos:column="16">(<expr><call><name pos:line="158" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="158" pos:column="34"/></name><argument_list pos:line="158" pos:column="34">(<argument><expr><name pos:line="158" pos:column="35">e<pos:position pos:line="158" pos:column="36"/></name></expr></argument>)<pos:position pos:line="158" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="158" pos:column="38"/></condition><then pos:line="158" pos:column="38"> <block pos:line="158" pos:column="39">{
                <expr_stmt><expr><name pos:line="159" pos:column="17">eos<pos:position pos:line="159" pos:column="20"/></name> <operator pos:line="159" pos:column="21">=<pos:position pos:line="159" pos:column="22"/></operator> <literal type="number" pos:line="159" pos:column="23">1<pos:position pos:line="159" pos:column="24"/></literal></expr>;<pos:position pos:line="159" pos:column="25"/></expr_stmt>
                <break pos:line="160" pos:column="17">break;<pos:position pos:line="160" pos:column="23"/></break>
            }<pos:position pos:line="161" pos:column="14"/></block></then></if>
            <if pos:line="162" pos:column="13">if <condition pos:line="162" pos:column="16">(<expr><name pos:line="162" pos:column="17">APR_SUCCESS<pos:position pos:line="162" pos:column="28"/></name> <operator pos:line="162" pos:column="29">!=<pos:position pos:line="162" pos:column="31"/></operator> <operator pos:line="162" pos:column="32">(<pos:position pos:line="162" pos:column="33"/></operator><name pos:line="162" pos:column="33">rv<pos:position pos:line="162" pos:column="35"/></name> <operator pos:line="162" pos:column="36">=<pos:position pos:line="162" pos:column="37"/></operator> <call><name pos:line="162" pos:column="38">apr_bucket_read<pos:position pos:line="162" pos:column="53"/></name><argument_list pos:line="162" pos:column="53">(<argument><expr><name pos:line="162" pos:column="54">e<pos:position pos:line="162" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="57">(<pos:position pos:line="162" pos:column="58"/></operator><specifier pos:line="162" pos:column="58">const<pos:position pos:line="162" pos:column="63"/></specifier> <name pos:line="162" pos:column="64">char<pos:position pos:line="162" pos:column="68"/></name> <operator pos:line="162" pos:column="69">*<pos:position pos:line="162" pos:column="70"/></operator><operator pos:line="162" pos:column="70">*<pos:position pos:line="162" pos:column="71"/></operator><operator pos:line="162" pos:column="71">)<pos:position pos:line="162" pos:column="72"/></operator><operator pos:line="162" pos:column="72">&amp;<pos:position pos:line="162" pos:column="77"/></operator><name pos:line="162" pos:column="73">response<pos:position pos:line="162" pos:column="81"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="83">&amp;<pos:position pos:line="162" pos:column="88"/></operator><name pos:line="162" pos:column="84">len<pos:position pos:line="162" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="89">APR_BLOCK_READ<pos:position pos:line="162" pos:column="103"/></name></expr></argument>)<pos:position pos:line="162" pos:column="104"/></argument_list></call><operator pos:line="162" pos:column="104">)<pos:position pos:line="162" pos:column="105"/></operator></expr>)<pos:position pos:line="162" pos:column="106"/></condition><then pos:line="162" pos:column="106"> <block pos:line="162" pos:column="107">{
                <return pos:line="163" pos:column="17">return <expr><name pos:line="163" pos:column="24">rv<pos:position pos:line="163" pos:column="26"/></name></expr>;<pos:position pos:line="163" pos:column="27"/></return>
            }<pos:position pos:line="164" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="165" pos:column="13">pos<pos:position pos:line="165" pos:column="16"/></name> <operator pos:line="165" pos:column="17">=<pos:position pos:line="165" pos:column="18"/></operator> <call><name pos:line="165" pos:column="19">memchr<pos:position pos:line="165" pos:column="25"/></name><argument_list pos:line="165" pos:column="25">(<argument><expr><name pos:line="165" pos:column="26">response<pos:position pos:line="165" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="36">APR_ASCII_LF<pos:position pos:line="165" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="50">len<pos:position pos:line="165" pos:column="53"/></name></expr></argument>)<pos:position pos:line="165" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="55"/></expr_stmt>
            <if pos:line="166" pos:column="13">if <condition pos:line="166" pos:column="16">(<expr><name pos:line="166" pos:column="17">pos<pos:position pos:line="166" pos:column="20"/></name> <operator pos:line="166" pos:column="21">!=<pos:position pos:line="166" pos:column="23"/></operator> <name pos:line="166" pos:column="24">NULL<pos:position pos:line="166" pos:column="28"/></name></expr>)<pos:position pos:line="166" pos:column="29"/></condition><then pos:line="166" pos:column="29"> <block pos:line="166" pos:column="30">{
                <if pos:line="167" pos:column="17">if <condition pos:line="167" pos:column="20">(<expr><operator pos:line="167" pos:column="21">(<pos:position pos:line="167" pos:column="22"/></operator><name pos:line="167" pos:column="22">response<pos:position pos:line="167" pos:column="30"/></name> <operator pos:line="167" pos:column="31">+<pos:position pos:line="167" pos:column="32"/></operator> <name pos:line="167" pos:column="33">len<pos:position pos:line="167" pos:column="36"/></name><operator pos:line="167" pos:column="36">)<pos:position pos:line="167" pos:column="37"/></operator> <operator pos:line="167" pos:column="38">!=<pos:position pos:line="167" pos:column="40"/></operator> <operator pos:line="167" pos:column="41">(<pos:position pos:line="167" pos:column="42"/></operator><name pos:line="167" pos:column="42">pos<pos:position pos:line="167" pos:column="45"/></name> <operator pos:line="167" pos:column="46">+<pos:position pos:line="167" pos:column="47"/></operator> <literal type="number" pos:line="167" pos:column="48">1<pos:position pos:line="167" pos:column="49"/></literal><operator pos:line="167" pos:column="49">)<pos:position pos:line="167" pos:column="50"/></operator></expr>)<pos:position pos:line="167" pos:column="51"/></condition><then pos:line="167" pos:column="51"> <block pos:line="167" pos:column="52">{
                    <expr_stmt><expr><name pos:line="168" pos:column="21">len<pos:position pos:line="168" pos:column="24"/></name> <operator pos:line="168" pos:column="25">=<pos:position pos:line="168" pos:column="26"/></operator> <name pos:line="168" pos:column="27">pos<pos:position pos:line="168" pos:column="30"/></name> <operator pos:line="168" pos:column="31">-<pos:position pos:line="168" pos:column="32"/></operator> <name pos:line="168" pos:column="33">response<pos:position pos:line="168" pos:column="41"/></name> <operator pos:line="168" pos:column="42">+<pos:position pos:line="168" pos:column="43"/></operator> <literal type="number" pos:line="168" pos:column="44">1<pos:position pos:line="168" pos:column="45"/></literal></expr>;<pos:position pos:line="168" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="169" pos:column="21">apr_bucket_split<pos:position pos:line="169" pos:column="37"/></name><argument_list pos:line="169" pos:column="37">(<argument><expr><name pos:line="169" pos:column="38">e<pos:position pos:line="169" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="41">pos<pos:position pos:line="169" pos:column="44"/></name> <operator pos:line="169" pos:column="45">-<pos:position pos:line="169" pos:column="46"/></operator> <name pos:line="169" pos:column="47">response<pos:position pos:line="169" pos:column="55"/></name> <operator pos:line="169" pos:column="56">+<pos:position pos:line="169" pos:column="57"/></operator> <literal type="number" pos:line="169" pos:column="58">1<pos:position pos:line="169" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="61"/></expr_stmt>
                }<pos:position pos:line="170" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="171" pos:column="17">found<pos:position pos:line="171" pos:column="22"/></name> <operator pos:line="171" pos:column="23">=<pos:position pos:line="171" pos:column="24"/></operator> <literal type="number" pos:line="171" pos:column="25">1<pos:position pos:line="171" pos:column="26"/></literal></expr>;<pos:position pos:line="171" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="172" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="173" pos:column="13">max<pos:position pos:line="173" pos:column="16"/></name> <operator pos:line="173" pos:column="17">=<pos:position pos:line="173" pos:column="18"/></operator> <sizeof pos:line="173" pos:column="19">sizeof<argument_list pos:line="173" pos:column="25">(<argument><expr><name><name pos:line="173" pos:column="26">ctx<pos:position pos:line="173" pos:column="29"/></name><operator pos:line="173" pos:column="29">-&gt;<pos:position pos:line="173" pos:column="34"/></operator><name pos:line="173" pos:column="31">buffer<pos:position pos:line="173" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="38"/></argument_list></sizeof> <operator pos:line="173" pos:column="39">-<pos:position pos:line="173" pos:column="40"/></operator> <call><name pos:line="173" pos:column="41">strlen<pos:position pos:line="173" pos:column="47"/></name><argument_list pos:line="173" pos:column="47">(<argument><expr><name><name pos:line="173" pos:column="48">ctx<pos:position pos:line="173" pos:column="51"/></name><operator pos:line="173" pos:column="51">-&gt;<pos:position pos:line="173" pos:column="56"/></operator><name pos:line="173" pos:column="53">buffer<pos:position pos:line="173" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="60"/></argument_list></call> <operator pos:line="173" pos:column="61">-<pos:position pos:line="173" pos:column="62"/></operator> <literal type="number" pos:line="173" pos:column="63">1<pos:position pos:line="173" pos:column="64"/></literal></expr>;<pos:position pos:line="173" pos:column="65"/></expr_stmt>
            <if pos:line="174" pos:column="13">if <condition pos:line="174" pos:column="16">(<expr><name pos:line="174" pos:column="17">len<pos:position pos:line="174" pos:column="20"/></name> <operator pos:line="174" pos:column="21">&gt;<pos:position pos:line="174" pos:column="25"/></operator> <name pos:line="174" pos:column="23">max<pos:position pos:line="174" pos:column="26"/></name></expr>)<pos:position pos:line="174" pos:column="27"/></condition><then pos:line="174" pos:column="27"> <block pos:line="174" pos:column="28">{
                <expr_stmt><expr><name pos:line="175" pos:column="17">len<pos:position pos:line="175" pos:column="20"/></name> <operator pos:line="175" pos:column="21">=<pos:position pos:line="175" pos:column="22"/></operator> <name pos:line="175" pos:column="23">max<pos:position pos:line="175" pos:column="26"/></name></expr>;<pos:position pos:line="175" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="176" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="178" pos:column="13">/* len+1 to leave space for the trailing nil char */</comment>
            <expr_stmt><expr><call><name pos:line="179" pos:column="13">apr_cpystrn<pos:position pos:line="179" pos:column="24"/></name><argument_list pos:line="179" pos:column="24">(<argument><expr><name><name pos:line="179" pos:column="25">ctx<pos:position pos:line="179" pos:column="28"/></name><operator pos:line="179" pos:column="28">-&gt;<pos:position pos:line="179" pos:column="33"/></operator><name pos:line="179" pos:column="30">buffer<pos:position pos:line="179" pos:column="36"/></name></name><operator pos:line="179" pos:column="36">+<pos:position pos:line="179" pos:column="37"/></operator><call><name pos:line="179" pos:column="37">strlen<pos:position pos:line="179" pos:column="43"/></name><argument_list pos:line="179" pos:column="43">(<argument><expr><name><name pos:line="179" pos:column="44">ctx<pos:position pos:line="179" pos:column="47"/></name><operator pos:line="179" pos:column="47">-&gt;<pos:position pos:line="179" pos:column="52"/></operator><name pos:line="179" pos:column="49">buffer<pos:position pos:line="179" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="179" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="179" pos:column="58">response<pos:position pos:line="179" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="68">len<pos:position pos:line="179" pos:column="71"/></name><operator pos:line="179" pos:column="71">+<pos:position pos:line="179" pos:column="72"/></operator><literal type="number" pos:line="179" pos:column="72">1<pos:position pos:line="179" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="75"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="181" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="181" pos:column="30"/></name><argument_list pos:line="181" pos:column="30">(<argument><expr><name pos:line="181" pos:column="31">e<pos:position pos:line="181" pos:column="32"/></name></expr></argument>)<pos:position pos:line="181" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="182" pos:column="13">apr_bucket_destroy<pos:position pos:line="182" pos:column="31"/></name><argument_list pos:line="182" pos:column="31">(<argument><expr><name pos:line="182" pos:column="32">e<pos:position pos:line="182" pos:column="33"/></name></expr></argument>)<pos:position pos:line="182" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="183" pos:column="10"/></block></while>

        <comment type="block" pos:line="185" pos:column="9">/* EOS? jump to footer */</comment>
        <if pos:line="186" pos:column="9">if <condition pos:line="186" pos:column="12">(<expr><name pos:line="186" pos:column="13">eos<pos:position pos:line="186" pos:column="16"/></name></expr>)<pos:position pos:line="186" pos:column="17"/></condition><then pos:line="186" pos:column="17"> <block pos:line="186" pos:column="18">{
            <expr_stmt><expr><name><name pos:line="187" pos:column="13">ctx<pos:position pos:line="187" pos:column="16"/></name><operator pos:line="187" pos:column="16">-&gt;<pos:position pos:line="187" pos:column="21"/></operator><name pos:line="187" pos:column="18">state<pos:position pos:line="187" pos:column="23"/></name></name> <operator pos:line="187" pos:column="24">=<pos:position pos:line="187" pos:column="25"/></operator> <name pos:line="187" pos:column="26">FOOTER<pos:position pos:line="187" pos:column="32"/></name></expr>;<pos:position pos:line="187" pos:column="33"/></expr_stmt>
            <break pos:line="188" pos:column="13">break;<pos:position pos:line="188" pos:column="19"/></break>
        }<pos:position pos:line="189" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="191" pos:column="9">/* not complete? leave and try get some more */</comment>
        <if pos:line="192" pos:column="9">if <condition pos:line="192" pos:column="12">(<expr><operator pos:line="192" pos:column="13">!<pos:position pos:line="192" pos:column="14"/></operator><name pos:line="192" pos:column="14">found<pos:position pos:line="192" pos:column="19"/></name></expr>)<pos:position pos:line="192" pos:column="20"/></condition><then pos:line="192" pos:column="20"> <block pos:line="192" pos:column="21">{
            <return pos:line="193" pos:column="13">return <expr><name pos:line="193" pos:column="20">APR_SUCCESS<pos:position pos:line="193" pos:column="31"/></name></expr>;<pos:position pos:line="193" pos:column="32"/></return>
        }<pos:position pos:line="194" pos:column="10"/></block></then></if>

        <block pos:line="196" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="197" pos:column="13">apr_size_t<pos:position pos:line="197" pos:column="23"/></name></type> <name pos:line="197" pos:column="24">n<pos:position pos:line="197" pos:column="25"/></name> <init pos:line="197" pos:column="26">= <expr><call><name pos:line="197" pos:column="28">strlen<pos:position pos:line="197" pos:column="34"/></name><argument_list pos:line="197" pos:column="34">(<argument><expr><name><name pos:line="197" pos:column="35">ctx<pos:position pos:line="197" pos:column="38"/></name><operator pos:line="197" pos:column="38">-&gt;<pos:position pos:line="197" pos:column="43"/></operator><name pos:line="197" pos:column="40">buffer<pos:position pos:line="197" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="197" pos:column="48"/></decl_stmt>
            <if pos:line="198" pos:column="13">if <condition pos:line="198" pos:column="16">(<expr><name><name pos:line="198" pos:column="17">ctx<pos:position pos:line="198" pos:column="20"/></name><operator pos:line="198" pos:column="20">-&gt;<pos:position pos:line="198" pos:column="25"/></operator><name pos:line="198" pos:column="22">buffer<pos:position pos:line="198" pos:column="28"/></name><index pos:line="198" pos:column="28">[<expr><name pos:line="198" pos:column="29">n<pos:position pos:line="198" pos:column="30"/></name><operator pos:line="198" pos:column="30">-<pos:position pos:line="198" pos:column="31"/></operator><literal type="number" pos:line="198" pos:column="31">1<pos:position pos:line="198" pos:column="32"/></literal></expr>]<pos:position pos:line="198" pos:column="33"/></index></name> <operator pos:line="198" pos:column="34">==<pos:position pos:line="198" pos:column="36"/></operator> <name><name pos:line="198" pos:column="37">CRLF<pos:position pos:line="198" pos:column="41"/></name><index pos:line="198" pos:column="41">[<expr><literal type="number" pos:line="198" pos:column="42">1<pos:position pos:line="198" pos:column="43"/></literal></expr>]<pos:position pos:line="198" pos:column="44"/></index></name></expr>)<pos:position pos:line="198" pos:column="45"/></condition><then pos:line="198" pos:column="45">  <comment type="block" pos:line="198" pos:column="47">/* strip trailing '\n' */</comment>
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="199" pos:column="17">ctx<pos:position pos:line="199" pos:column="20"/></name><operator pos:line="199" pos:column="20">-&gt;<pos:position pos:line="199" pos:column="25"/></operator><name pos:line="199" pos:column="22">buffer<pos:position pos:line="199" pos:column="28"/></name><index pos:line="199" pos:column="28">[<expr><operator pos:line="199" pos:column="29">--<pos:position pos:line="199" pos:column="31"/></operator><name pos:line="199" pos:column="31">n<pos:position pos:line="199" pos:column="32"/></name></expr>]<pos:position pos:line="199" pos:column="33"/></index></name> <operator pos:line="199" pos:column="34">=<pos:position pos:line="199" pos:column="35"/></operator> <literal type="char" pos:line="199" pos:column="36">'\0'<pos:position pos:line="199" pos:column="40"/></literal></expr>;<pos:position pos:line="199" pos:column="41"/></expr_stmt></block></then></if>
            <if pos:line="200" pos:column="13">if <condition pos:line="200" pos:column="16">(<expr><name><name pos:line="200" pos:column="17">ctx<pos:position pos:line="200" pos:column="20"/></name><operator pos:line="200" pos:column="20">-&gt;<pos:position pos:line="200" pos:column="25"/></operator><name pos:line="200" pos:column="22">buffer<pos:position pos:line="200" pos:column="28"/></name><index pos:line="200" pos:column="28">[<expr><name pos:line="200" pos:column="29">n<pos:position pos:line="200" pos:column="30"/></name><operator pos:line="200" pos:column="30">-<pos:position pos:line="200" pos:column="31"/></operator><literal type="number" pos:line="200" pos:column="31">1<pos:position pos:line="200" pos:column="32"/></literal></expr>]<pos:position pos:line="200" pos:column="33"/></index></name> <operator pos:line="200" pos:column="34">==<pos:position pos:line="200" pos:column="36"/></operator> <name><name pos:line="200" pos:column="37">CRLF<pos:position pos:line="200" pos:column="41"/></name><index pos:line="200" pos:column="41">[<expr><literal type="number" pos:line="200" pos:column="42">0<pos:position pos:line="200" pos:column="43"/></literal></expr>]<pos:position pos:line="200" pos:column="44"/></index></name></expr>)<pos:position pos:line="200" pos:column="45"/></condition><then pos:line="200" pos:column="45">  <comment type="block" pos:line="200" pos:column="47">/* strip trailing '\r' if present */</comment>
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="201" pos:column="17">ctx<pos:position pos:line="201" pos:column="20"/></name><operator pos:line="201" pos:column="20">-&gt;<pos:position pos:line="201" pos:column="25"/></operator><name pos:line="201" pos:column="22">buffer<pos:position pos:line="201" pos:column="28"/></name><index pos:line="201" pos:column="28">[<expr><operator pos:line="201" pos:column="29">--<pos:position pos:line="201" pos:column="31"/></operator><name pos:line="201" pos:column="31">n<pos:position pos:line="201" pos:column="32"/></name></expr>]<pos:position pos:line="201" pos:column="33"/></index></name> <operator pos:line="201" pos:column="34">=<pos:position pos:line="201" pos:column="35"/></operator> <literal type="char" pos:line="201" pos:column="36">'\0'<pos:position pos:line="201" pos:column="40"/></literal></expr>;<pos:position pos:line="201" pos:column="41"/></expr_stmt></block></then></if>
        }<pos:position pos:line="202" pos:column="10"/></block>

        <comment type="block" pos:line="204" pos:column="9">/* a symlink? */</comment>
        <if pos:line="205" pos:column="9">if <condition pos:line="205" pos:column="12">(<expr><name><name pos:line="205" pos:column="13">ctx<pos:position pos:line="205" pos:column="16"/></name><operator pos:line="205" pos:column="16">-&gt;<pos:position pos:line="205" pos:column="21"/></operator><name pos:line="205" pos:column="18">buffer<pos:position pos:line="205" pos:column="24"/></name><index pos:line="205" pos:column="24">[<expr><literal type="number" pos:line="205" pos:column="25">0<pos:position pos:line="205" pos:column="26"/></literal></expr>]<pos:position pos:line="205" pos:column="27"/></index></name> <operator pos:line="205" pos:column="28">==<pos:position pos:line="205" pos:column="30"/></operator> <literal type="char" pos:line="205" pos:column="31">'l'<pos:position pos:line="205" pos:column="34"/></literal> <operator pos:line="205" pos:column="35">&amp;&amp;<pos:position pos:line="205" pos:column="45"/></operator> <operator pos:line="205" pos:column="38">(<pos:position pos:line="205" pos:column="39"/></operator><name pos:line="205" pos:column="39">filename<pos:position pos:line="205" pos:column="47"/></name> <operator pos:line="205" pos:column="48">=<pos:position pos:line="205" pos:column="49"/></operator> <call><name pos:line="205" pos:column="50">strstr<pos:position pos:line="205" pos:column="56"/></name><argument_list pos:line="205" pos:column="56">(<argument><expr><name><name pos:line="205" pos:column="57">ctx<pos:position pos:line="205" pos:column="60"/></name><operator pos:line="205" pos:column="60">-&gt;<pos:position pos:line="205" pos:column="65"/></operator><name pos:line="205" pos:column="62">buffer<pos:position pos:line="205" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="70">" -&gt; "<pos:position pos:line="205" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="77"/></argument_list></call><operator pos:line="205" pos:column="77">)<pos:position pos:line="205" pos:column="78"/></operator> <operator pos:line="205" pos:column="79">!=<pos:position pos:line="205" pos:column="81"/></operator> <name pos:line="205" pos:column="82">NULL<pos:position pos:line="205" pos:column="86"/></name></expr>)<pos:position pos:line="205" pos:column="87"/></condition><then pos:line="205" pos:column="87"> <block pos:line="205" pos:column="88">{
            <decl_stmt><decl><type><name pos:line="206" pos:column="13">char<pos:position pos:line="206" pos:column="17"/></name> <modifier pos:line="206" pos:column="18">*<pos:position pos:line="206" pos:column="19"/></modifier></type><name pos:line="206" pos:column="19">link_ptr<pos:position pos:line="206" pos:column="27"/></name> <init pos:line="206" pos:column="28">= <expr><name pos:line="206" pos:column="30">filename<pos:position pos:line="206" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="206" pos:column="39"/></decl_stmt>

            <do pos:line="208" pos:column="13">do <block pos:line="208" pos:column="16">{
                <expr_stmt><expr><name pos:line="209" pos:column="17">filename<pos:position pos:line="209" pos:column="25"/></name><operator pos:line="209" pos:column="25">--<pos:position pos:line="209" pos:column="27"/></operator></expr>;<pos:position pos:line="209" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="210" pos:column="14"/></block> while <condition pos:line="210" pos:column="21">(<expr><name><name pos:line="210" pos:column="22">filename<pos:position pos:line="210" pos:column="30"/></name><index pos:line="210" pos:column="30">[<expr><literal type="number" pos:line="210" pos:column="31">0<pos:position pos:line="210" pos:column="32"/></literal></expr>]<pos:position pos:line="210" pos:column="33"/></index></name> <operator pos:line="210" pos:column="34">!=<pos:position pos:line="210" pos:column="36"/></operator> <literal type="char" pos:line="210" pos:column="37">' '<pos:position pos:line="210" pos:column="40"/></literal> <operator pos:line="210" pos:column="41">&amp;&amp;<pos:position pos:line="210" pos:column="51"/></operator> <name pos:line="210" pos:column="44">filename<pos:position pos:line="210" pos:column="52"/></name> <operator pos:line="210" pos:column="53">&gt;<pos:position pos:line="210" pos:column="57"/></operator> <name><name pos:line="210" pos:column="55">ctx<pos:position pos:line="210" pos:column="58"/></name><operator pos:line="210" pos:column="58">-&gt;<pos:position pos:line="210" pos:column="63"/></operator><name pos:line="210" pos:column="60">buffer<pos:position pos:line="210" pos:column="66"/></name></name></expr>)<pos:position pos:line="210" pos:column="67"/></condition>;<pos:position pos:line="210" pos:column="68"/></do>
            <if pos:line="211" pos:column="13">if <condition pos:line="211" pos:column="16">(<expr><name pos:line="211" pos:column="17">filename<pos:position pos:line="211" pos:column="25"/></name> <operator pos:line="211" pos:column="26">&gt;<pos:position pos:line="211" pos:column="30"/></operator> <name><name pos:line="211" pos:column="28">ctx<pos:position pos:line="211" pos:column="31"/></name><operator pos:line="211" pos:column="31">-&gt;<pos:position pos:line="211" pos:column="36"/></operator><name pos:line="211" pos:column="33">buffer<pos:position pos:line="211" pos:column="39"/></name></name></expr>)<pos:position pos:line="211" pos:column="40"/></condition><then pos:line="211" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="212" pos:column="17">*<pos:position pos:line="212" pos:column="18"/></operator><operator pos:line="212" pos:column="18">(<pos:position pos:line="212" pos:column="19"/></operator><name pos:line="212" pos:column="19">filename<pos:position pos:line="212" pos:column="27"/></name><operator pos:line="212" pos:column="27">++<pos:position pos:line="212" pos:column="29"/></operator><operator pos:line="212" pos:column="29">)<pos:position pos:line="212" pos:column="30"/></operator> <operator pos:line="212" pos:column="31">=<pos:position pos:line="212" pos:column="32"/></operator> <literal type="char" pos:line="212" pos:column="33">'\0'<pos:position pos:line="212" pos:column="37"/></literal></expr>;<pos:position pos:line="212" pos:column="38"/></expr_stmt></block></then></if>
            <expr_stmt><expr><operator pos:line="213" pos:column="13">*<pos:position pos:line="213" pos:column="14"/></operator><operator pos:line="213" pos:column="14">(<pos:position pos:line="213" pos:column="15"/></operator><name pos:line="213" pos:column="15">link_ptr<pos:position pos:line="213" pos:column="23"/></name><operator pos:line="213" pos:column="23">++<pos:position pos:line="213" pos:column="25"/></operator><operator pos:line="213" pos:column="25">)<pos:position pos:line="213" pos:column="26"/></operator> <operator pos:line="213" pos:column="27">=<pos:position pos:line="213" pos:column="28"/></operator> <literal type="char" pos:line="213" pos:column="29">'\0'<pos:position pos:line="213" pos:column="33"/></literal></expr>;<pos:position pos:line="213" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="214" pos:column="13">str<pos:position pos:line="214" pos:column="16"/></name> <operator pos:line="214" pos:column="17">=<pos:position pos:line="214" pos:column="18"/></operator> <call><name pos:line="214" pos:column="19">apr_psprintf<pos:position pos:line="214" pos:column="31"/></name><argument_list pos:line="214" pos:column="31">(<argument><expr><name pos:line="214" pos:column="32">p<pos:position pos:line="214" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="35">"%s &lt;a href=\"%s\"&gt;%s %s&lt;/a&gt;\n"<pos:position pos:line="214" pos:column="78"/></literal></expr></argument>,
                               <argument><expr><call><name pos:line="215" pos:column="32">ap_escape_html<pos:position pos:line="215" pos:column="46"/></name><argument_list pos:line="215" pos:column="46">(<argument><expr><name pos:line="215" pos:column="47">p<pos:position pos:line="215" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="215" pos:column="50">ctx<pos:position pos:line="215" pos:column="53"/></name><operator pos:line="215" pos:column="53">-&gt;<pos:position pos:line="215" pos:column="58"/></operator><name pos:line="215" pos:column="55">buffer<pos:position pos:line="215" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="62"/></argument_list></call></expr></argument>,
                               <argument><expr><call><name pos:line="216" pos:column="32">ap_escape_uri<pos:position pos:line="216" pos:column="45"/></name><argument_list pos:line="216" pos:column="45">(<argument><expr><name pos:line="216" pos:column="46">p<pos:position pos:line="216" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="49">filename<pos:position pos:line="216" pos:column="57"/></name></expr></argument>)<pos:position pos:line="216" pos:column="58"/></argument_list></call></expr></argument>,
                               <argument><expr><call><name pos:line="217" pos:column="32">ap_escape_html<pos:position pos:line="217" pos:column="46"/></name><argument_list pos:line="217" pos:column="46">(<argument><expr><name pos:line="217" pos:column="47">p<pos:position pos:line="217" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="50">filename<pos:position pos:line="217" pos:column="58"/></name></expr></argument>)<pos:position pos:line="217" pos:column="59"/></argument_list></call></expr></argument>,
                               <argument><expr><call><name pos:line="218" pos:column="32">ap_escape_html<pos:position pos:line="218" pos:column="46"/></name><argument_list pos:line="218" pos:column="46">(<argument><expr><name pos:line="218" pos:column="47">p<pos:position pos:line="218" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="50">link_ptr<pos:position pos:line="218" pos:column="58"/></name></expr></argument>)<pos:position pos:line="218" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="218" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="219" pos:column="10"/></block></then>

        <comment type="block" pos:line="221" pos:column="9">/* a directory/file? */</comment>
        <elseif pos:line="222" pos:column="9">else <if pos:line="222" pos:column="14">if <condition pos:line="222" pos:column="17">(<expr><name><name pos:line="222" pos:column="18">ctx<pos:position pos:line="222" pos:column="21"/></name><operator pos:line="222" pos:column="21">-&gt;<pos:position pos:line="222" pos:column="26"/></operator><name pos:line="222" pos:column="23">buffer<pos:position pos:line="222" pos:column="29"/></name><index pos:line="222" pos:column="29">[<expr><literal type="number" pos:line="222" pos:column="30">0<pos:position pos:line="222" pos:column="31"/></literal></expr>]<pos:position pos:line="222" pos:column="32"/></index></name> <operator pos:line="222" pos:column="33">==<pos:position pos:line="222" pos:column="35"/></operator> <literal type="char" pos:line="222" pos:column="36">'d'<pos:position pos:line="222" pos:column="39"/></literal> <operator pos:line="222" pos:column="40">||<pos:position pos:line="222" pos:column="42"/></operator> <name><name pos:line="222" pos:column="43">ctx<pos:position pos:line="222" pos:column="46"/></name><operator pos:line="222" pos:column="46">-&gt;<pos:position pos:line="222" pos:column="51"/></operator><name pos:line="222" pos:column="48">buffer<pos:position pos:line="222" pos:column="54"/></name><index pos:line="222" pos:column="54">[<expr><literal type="number" pos:line="222" pos:column="55">0<pos:position pos:line="222" pos:column="56"/></literal></expr>]<pos:position pos:line="222" pos:column="57"/></index></name> <operator pos:line="222" pos:column="58">==<pos:position pos:line="222" pos:column="60"/></operator> <literal type="char" pos:line="222" pos:column="61">'-'<pos:position pos:line="222" pos:column="64"/></literal> <operator pos:line="222" pos:column="65">||<pos:position pos:line="222" pos:column="67"/></operator> <name><name pos:line="222" pos:column="68">ctx<pos:position pos:line="222" pos:column="71"/></name><operator pos:line="222" pos:column="71">-&gt;<pos:position pos:line="222" pos:column="76"/></operator><name pos:line="222" pos:column="73">buffer<pos:position pos:line="222" pos:column="79"/></name><index pos:line="222" pos:column="79">[<expr><literal type="number" pos:line="222" pos:column="80">0<pos:position pos:line="222" pos:column="81"/></literal></expr>]<pos:position pos:line="222" pos:column="82"/></index></name> <operator pos:line="222" pos:column="83">==<pos:position pos:line="222" pos:column="85"/></operator> <literal type="char" pos:line="222" pos:column="86">'l'<pos:position pos:line="222" pos:column="89"/></literal> <operator pos:line="222" pos:column="90">||<pos:position pos:line="222" pos:column="92"/></operator> <call><name pos:line="222" pos:column="93">apr_isdigit<pos:position pos:line="222" pos:column="104"/></name><argument_list pos:line="222" pos:column="104">(<argument><expr><name><name pos:line="222" pos:column="105">ctx<pos:position pos:line="222" pos:column="108"/></name><operator pos:line="222" pos:column="108">-&gt;<pos:position pos:line="222" pos:column="113"/></operator><name pos:line="222" pos:column="110">buffer<pos:position pos:line="222" pos:column="116"/></name><index pos:line="222" pos:column="116">[<expr><literal type="number" pos:line="222" pos:column="117">0<pos:position pos:line="222" pos:column="118"/></literal></expr>]<pos:position pos:line="222" pos:column="119"/></index></name></expr></argument>)<pos:position pos:line="222" pos:column="120"/></argument_list></call></expr>)<pos:position pos:line="222" pos:column="121"/></condition><then pos:line="222" pos:column="121"> <block pos:line="222" pos:column="122">{
            <decl_stmt><decl><type><name pos:line="223" pos:column="13">int<pos:position pos:line="223" pos:column="16"/></name></type> <name pos:line="223" pos:column="17">searchidx<pos:position pos:line="223" pos:column="26"/></name> <init pos:line="223" pos:column="27">= <expr><literal type="number" pos:line="223" pos:column="29">0<pos:position pos:line="223" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="223" pos:column="31"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="224" pos:column="13">char<pos:position pos:line="224" pos:column="17"/></name> <modifier pos:line="224" pos:column="18">*<pos:position pos:line="224" pos:column="19"/></modifier></type><name pos:line="224" pos:column="19">searchptr<pos:position pos:line="224" pos:column="28"/></name> <init pos:line="224" pos:column="29">= <expr><name pos:line="224" pos:column="31">NULL<pos:position pos:line="224" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="224" pos:column="36"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="225" pos:column="13">int<pos:position pos:line="225" pos:column="16"/></name></type> <name pos:line="225" pos:column="17">firstfile<pos:position pos:line="225" pos:column="26"/></name> <init pos:line="225" pos:column="27">= <expr><literal type="number" pos:line="225" pos:column="29">1<pos:position pos:line="225" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="225" pos:column="31"/></decl_stmt>
            <if pos:line="226" pos:column="13">if <condition pos:line="226" pos:column="16">(<expr><call><name pos:line="226" pos:column="17">apr_isdigit<pos:position pos:line="226" pos:column="28"/></name><argument_list pos:line="226" pos:column="28">(<argument><expr><name><name pos:line="226" pos:column="29">ctx<pos:position pos:line="226" pos:column="32"/></name><operator pos:line="226" pos:column="32">-&gt;<pos:position pos:line="226" pos:column="37"/></operator><name pos:line="226" pos:column="34">buffer<pos:position pos:line="226" pos:column="40"/></name><index pos:line="226" pos:column="40">[<expr><literal type="number" pos:line="226" pos:column="41">0<pos:position pos:line="226" pos:column="42"/></literal></expr>]<pos:position pos:line="226" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="226" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="226" pos:column="45"/></condition><then pos:line="226" pos:column="45"> <block pos:line="226" pos:column="46">{  <comment type="block" pos:line="226" pos:column="49">/* handle DOS dir */</comment>
                <expr_stmt><expr><name pos:line="227" pos:column="17">searchptr<pos:position pos:line="227" pos:column="26"/></name> <operator pos:line="227" pos:column="27">=<pos:position pos:line="227" pos:column="28"/></operator> <call><name pos:line="227" pos:column="29">strchr<pos:position pos:line="227" pos:column="35"/></name><argument_list pos:line="227" pos:column="35">(<argument><expr><name><name pos:line="227" pos:column="36">ctx<pos:position pos:line="227" pos:column="39"/></name><operator pos:line="227" pos:column="39">-&gt;<pos:position pos:line="227" pos:column="44"/></operator><name pos:line="227" pos:column="41">buffer<pos:position pos:line="227" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="227" pos:column="49">'&lt;'<pos:position pos:line="227" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="54"/></expr_stmt>
                <if pos:line="228" pos:column="17">if <condition pos:line="228" pos:column="20">(<expr><name pos:line="228" pos:column="21">searchptr<pos:position pos:line="228" pos:column="30"/></name> <operator pos:line="228" pos:column="31">!=<pos:position pos:line="228" pos:column="33"/></operator> <name pos:line="228" pos:column="34">NULL<pos:position pos:line="228" pos:column="38"/></name></expr>)<pos:position pos:line="228" pos:column="39"/></condition><then pos:line="228" pos:column="39">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="229" pos:column="21">*<pos:position pos:line="229" pos:column="22"/></operator><name pos:line="229" pos:column="22">searchptr<pos:position pos:line="229" pos:column="31"/></name> <operator pos:line="229" pos:column="32">=<pos:position pos:line="229" pos:column="33"/></operator> <literal type="char" pos:line="229" pos:column="34">'['<pos:position pos:line="229" pos:column="37"/></literal></expr>;<pos:position pos:line="229" pos:column="38"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="230" pos:column="17">searchptr<pos:position pos:line="230" pos:column="26"/></name> <operator pos:line="230" pos:column="27">=<pos:position pos:line="230" pos:column="28"/></operator> <call><name pos:line="230" pos:column="29">strchr<pos:position pos:line="230" pos:column="35"/></name><argument_list pos:line="230" pos:column="35">(<argument><expr><name><name pos:line="230" pos:column="36">ctx<pos:position pos:line="230" pos:column="39"/></name><operator pos:line="230" pos:column="39">-&gt;<pos:position pos:line="230" pos:column="44"/></operator><name pos:line="230" pos:column="41">buffer<pos:position pos:line="230" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="230" pos:column="49">'&gt;'<pos:position pos:line="230" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="54"/></expr_stmt>
                <if pos:line="231" pos:column="17">if <condition pos:line="231" pos:column="20">(<expr><name pos:line="231" pos:column="21">searchptr<pos:position pos:line="231" pos:column="30"/></name> <operator pos:line="231" pos:column="31">!=<pos:position pos:line="231" pos:column="33"/></operator> <name pos:line="231" pos:column="34">NULL<pos:position pos:line="231" pos:column="38"/></name></expr>)<pos:position pos:line="231" pos:column="39"/></condition><then pos:line="231" pos:column="39">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="232" pos:column="21">*<pos:position pos:line="232" pos:column="22"/></operator><name pos:line="232" pos:column="22">searchptr<pos:position pos:line="232" pos:column="31"/></name> <operator pos:line="232" pos:column="32">=<pos:position pos:line="232" pos:column="33"/></operator> <literal type="char" pos:line="232" pos:column="34">']'<pos:position pos:line="232" pos:column="37"/></literal></expr>;<pos:position pos:line="232" pos:column="38"/></expr_stmt></block></then></if>
            }<pos:position pos:line="233" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="235" pos:column="13">filename<pos:position pos:line="235" pos:column="21"/></name> <operator pos:line="235" pos:column="22">=<pos:position pos:line="235" pos:column="23"/></operator> <call><name pos:line="235" pos:column="24">strrchr<pos:position pos:line="235" pos:column="31"/></name><argument_list pos:line="235" pos:column="31">(<argument><expr><name><name pos:line="235" pos:column="32">ctx<pos:position pos:line="235" pos:column="35"/></name><operator pos:line="235" pos:column="35">-&gt;<pos:position pos:line="235" pos:column="40"/></operator><name pos:line="235" pos:column="37">buffer<pos:position pos:line="235" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="235" pos:column="45">' '<pos:position pos:line="235" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="236" pos:column="13">*<pos:position pos:line="236" pos:column="14"/></operator><operator pos:line="236" pos:column="14">(<pos:position pos:line="236" pos:column="15"/></operator><name pos:line="236" pos:column="15">filename<pos:position pos:line="236" pos:column="23"/></name><operator pos:line="236" pos:column="23">++<pos:position pos:line="236" pos:column="25"/></operator><operator pos:line="236" pos:column="25">)<pos:position pos:line="236" pos:column="26"/></operator> <operator pos:line="236" pos:column="27">=<pos:position pos:line="236" pos:column="28"/></operator> <literal type="char" pos:line="236" pos:column="29">'\0'<pos:position pos:line="236" pos:column="33"/></literal></expr>;<pos:position pos:line="236" pos:column="34"/></expr_stmt>

            <comment type="block" pos:line="238" pos:column="13">/* handle filenames with spaces in 'em */</comment>
            <if pos:line="239" pos:column="13">if <condition pos:line="239" pos:column="16">(<expr><operator pos:line="239" pos:column="17">!<pos:position pos:line="239" pos:column="18"/></operator><call><name pos:line="239" pos:column="18">strcmp<pos:position pos:line="239" pos:column="24"/></name><argument_list pos:line="239" pos:column="24">(<argument><expr><name pos:line="239" pos:column="25">filename<pos:position pos:line="239" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="35">"."<pos:position pos:line="239" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="39"/></argument_list></call> <operator pos:line="239" pos:column="40">||<pos:position pos:line="239" pos:column="42"/></operator> <operator pos:line="239" pos:column="43">!<pos:position pos:line="239" pos:column="44"/></operator><call><name pos:line="239" pos:column="44">strcmp<pos:position pos:line="239" pos:column="50"/></name><argument_list pos:line="239" pos:column="50">(<argument><expr><name pos:line="239" pos:column="51">filename<pos:position pos:line="239" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="61">".."<pos:position pos:line="239" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="66"/></argument_list></call> <operator pos:line="239" pos:column="67">||<pos:position pos:line="239" pos:column="69"/></operator> <name pos:line="239" pos:column="70">firstfile<pos:position pos:line="239" pos:column="79"/></name></expr>)<pos:position pos:line="239" pos:column="80"/></condition><then pos:line="239" pos:column="80"> <block pos:line="239" pos:column="81">{
                <expr_stmt><expr><name pos:line="240" pos:column="17">firstfile<pos:position pos:line="240" pos:column="26"/></name> <operator pos:line="240" pos:column="27">=<pos:position pos:line="240" pos:column="28"/></operator> <literal type="number" pos:line="240" pos:column="29">0<pos:position pos:line="240" pos:column="30"/></literal></expr>;<pos:position pos:line="240" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name pos:line="241" pos:column="17">searchidx<pos:position pos:line="241" pos:column="26"/></name> <operator pos:line="241" pos:column="27">=<pos:position pos:line="241" pos:column="28"/></operator> <name pos:line="241" pos:column="29">filename<pos:position pos:line="241" pos:column="37"/></name> <operator pos:line="241" pos:column="38">-<pos:position pos:line="241" pos:column="39"/></operator> <name><name pos:line="241" pos:column="40">ctx<pos:position pos:line="241" pos:column="43"/></name><operator pos:line="241" pos:column="43">-&gt;<pos:position pos:line="241" pos:column="48"/></operator><name pos:line="241" pos:column="45">buffer<pos:position pos:line="241" pos:column="51"/></name></name></expr>;<pos:position pos:line="241" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="242" pos:column="14"/></block></then>
            <elseif pos:line="243" pos:column="13">else <if pos:line="243" pos:column="18">if <condition pos:line="243" pos:column="21">(<expr><name pos:line="243" pos:column="22">searchidx<pos:position pos:line="243" pos:column="31"/></name> <operator pos:line="243" pos:column="32">!=<pos:position pos:line="243" pos:column="34"/></operator> <literal type="number" pos:line="243" pos:column="35">0<pos:position pos:line="243" pos:column="36"/></literal> <operator pos:line="243" pos:column="37">&amp;&amp;<pos:position pos:line="243" pos:column="47"/></operator> <name><name pos:line="243" pos:column="40">ctx<pos:position pos:line="243" pos:column="43"/></name><operator pos:line="243" pos:column="43">-&gt;<pos:position pos:line="243" pos:column="48"/></operator><name pos:line="243" pos:column="45">buffer<pos:position pos:line="243" pos:column="51"/></name><index pos:line="243" pos:column="51">[<expr><name pos:line="243" pos:column="52">searchidx<pos:position pos:line="243" pos:column="61"/></name></expr>]<pos:position pos:line="243" pos:column="62"/></index></name> <operator pos:line="243" pos:column="63">!=<pos:position pos:line="243" pos:column="65"/></operator> <literal type="number" pos:line="243" pos:column="66">0<pos:position pos:line="243" pos:column="67"/></literal></expr>)<pos:position pos:line="243" pos:column="68"/></condition><then pos:line="243" pos:column="68"> <block pos:line="243" pos:column="69">{
                <expr_stmt><expr><operator pos:line="244" pos:column="17">*<pos:position pos:line="244" pos:column="18"/></operator><operator pos:line="244" pos:column="18">(<pos:position pos:line="244" pos:column="19"/></operator><operator pos:line="244" pos:column="19">--<pos:position pos:line="244" pos:column="21"/></operator><name pos:line="244" pos:column="21">filename<pos:position pos:line="244" pos:column="29"/></name><operator pos:line="244" pos:column="29">)<pos:position pos:line="244" pos:column="30"/></operator> <operator pos:line="244" pos:column="31">=<pos:position pos:line="244" pos:column="32"/></operator> <literal type="char" pos:line="244" pos:column="33">' '<pos:position pos:line="244" pos:column="36"/></literal></expr>;<pos:position pos:line="244" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="245" pos:column="17">ctx<pos:position pos:line="245" pos:column="20"/></name><operator pos:line="245" pos:column="20">-&gt;<pos:position pos:line="245" pos:column="25"/></operator><name pos:line="245" pos:column="22">buffer<pos:position pos:line="245" pos:column="28"/></name><index pos:line="245" pos:column="28">[<expr><name pos:line="245" pos:column="29">searchidx<pos:position pos:line="245" pos:column="38"/></name> <operator pos:line="245" pos:column="39">-<pos:position pos:line="245" pos:column="40"/></operator> <literal type="number" pos:line="245" pos:column="41">1<pos:position pos:line="245" pos:column="42"/></literal></expr>]<pos:position pos:line="245" pos:column="43"/></index></name> <operator pos:line="245" pos:column="44">=<pos:position pos:line="245" pos:column="45"/></operator> <literal type="char" pos:line="245" pos:column="46">'\0'<pos:position pos:line="245" pos:column="50"/></literal></expr>;<pos:position pos:line="245" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name pos:line="246" pos:column="17">filename<pos:position pos:line="246" pos:column="25"/></name> <operator pos:line="246" pos:column="26">=<pos:position pos:line="246" pos:column="27"/></operator> <operator pos:line="246" pos:column="28">&amp;<pos:position pos:line="246" pos:column="33"/></operator><name><name pos:line="246" pos:column="29">ctx<pos:position pos:line="246" pos:column="32"/></name><operator pos:line="246" pos:column="32">-&gt;<pos:position pos:line="246" pos:column="37"/></operator><name pos:line="246" pos:column="34">buffer<pos:position pos:line="246" pos:column="40"/></name><index pos:line="246" pos:column="40">[<expr><name pos:line="246" pos:column="41">searchidx<pos:position pos:line="246" pos:column="50"/></name></expr>]<pos:position pos:line="246" pos:column="51"/></index></name></expr>;<pos:position pos:line="246" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="247" pos:column="14"/></block></then></if></elseif></if>

            <comment type="block" pos:line="249" pos:column="13">/* Append a slash to the HREF link for directories */</comment>
            <if pos:line="250" pos:column="13">if <condition pos:line="250" pos:column="16">(<expr><operator pos:line="250" pos:column="17">!<pos:position pos:line="250" pos:column="18"/></operator><call><name pos:line="250" pos:column="18">strcmp<pos:position pos:line="250" pos:column="24"/></name><argument_list pos:line="250" pos:column="24">(<argument><expr><name pos:line="250" pos:column="25">filename<pos:position pos:line="250" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="35">"."<pos:position pos:line="250" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="250" pos:column="39"/></argument_list></call> <operator pos:line="250" pos:column="40">||<pos:position pos:line="250" pos:column="42"/></operator> <operator pos:line="250" pos:column="43">!<pos:position pos:line="250" pos:column="44"/></operator><call><name pos:line="250" pos:column="44">strcmp<pos:position pos:line="250" pos:column="50"/></name><argument_list pos:line="250" pos:column="50">(<argument><expr><name pos:line="250" pos:column="51">filename<pos:position pos:line="250" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="61">".."<pos:position pos:line="250" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="250" pos:column="66"/></argument_list></call> <operator pos:line="250" pos:column="67">||<pos:position pos:line="250" pos:column="69"/></operator> <name><name pos:line="250" pos:column="70">ctx<pos:position pos:line="250" pos:column="73"/></name><operator pos:line="250" pos:column="73">-&gt;<pos:position pos:line="250" pos:column="78"/></operator><name pos:line="250" pos:column="75">buffer<pos:position pos:line="250" pos:column="81"/></name><index pos:line="250" pos:column="81">[<expr><literal type="number" pos:line="250" pos:column="82">0<pos:position pos:line="250" pos:column="83"/></literal></expr>]<pos:position pos:line="250" pos:column="84"/></index></name> <operator pos:line="250" pos:column="85">==<pos:position pos:line="250" pos:column="87"/></operator> <literal type="char" pos:line="250" pos:column="88">'d'<pos:position pos:line="250" pos:column="91"/></literal></expr>)<pos:position pos:line="250" pos:column="92"/></condition><then pos:line="250" pos:column="92"> <block pos:line="250" pos:column="93">{
                <expr_stmt><expr><name pos:line="251" pos:column="17">str<pos:position pos:line="251" pos:column="20"/></name> <operator pos:line="251" pos:column="21">=<pos:position pos:line="251" pos:column="22"/></operator> <call><name pos:line="251" pos:column="23">apr_psprintf<pos:position pos:line="251" pos:column="35"/></name><argument_list pos:line="251" pos:column="35">(<argument><expr><name pos:line="251" pos:column="36">p<pos:position pos:line="251" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="39">"%s &lt;a href=\"%s/\"&gt;%s&lt;/a&gt;\n"<pos:position pos:line="251" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><call><name pos:line="252" pos:column="36">ap_escape_html<pos:position pos:line="252" pos:column="50"/></name><argument_list pos:line="252" pos:column="50">(<argument><expr><name pos:line="252" pos:column="51">p<pos:position pos:line="252" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="252" pos:column="54">ctx<pos:position pos:line="252" pos:column="57"/></name><operator pos:line="252" pos:column="57">-&gt;<pos:position pos:line="252" pos:column="62"/></operator><name pos:line="252" pos:column="59">buffer<pos:position pos:line="252" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="252" pos:column="66"/></argument_list></call></expr></argument>,
                                   <argument><expr><call><name pos:line="253" pos:column="36">ap_escape_uri<pos:position pos:line="253" pos:column="49"/></name><argument_list pos:line="253" pos:column="49">(<argument><expr><name pos:line="253" pos:column="50">p<pos:position pos:line="253" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="53">filename<pos:position pos:line="253" pos:column="61"/></name></expr></argument>)<pos:position pos:line="253" pos:column="62"/></argument_list></call></expr></argument>,
                                   <argument><expr><call><name pos:line="254" pos:column="36">ap_escape_html<pos:position pos:line="254" pos:column="50"/></name><argument_list pos:line="254" pos:column="50">(<argument><expr><name pos:line="254" pos:column="51">p<pos:position pos:line="254" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="54">filename<pos:position pos:line="254" pos:column="62"/></name></expr></argument>)<pos:position pos:line="254" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="254" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="255" pos:column="14"/></block></then>
            <else pos:line="256" pos:column="13">else <block pos:line="256" pos:column="18">{
                <expr_stmt><expr><name pos:line="257" pos:column="17">str<pos:position pos:line="257" pos:column="20"/></name> <operator pos:line="257" pos:column="21">=<pos:position pos:line="257" pos:column="22"/></operator> <call><name pos:line="257" pos:column="23">apr_psprintf<pos:position pos:line="257" pos:column="35"/></name><argument_list pos:line="257" pos:column="35">(<argument><expr><name pos:line="257" pos:column="36">p<pos:position pos:line="257" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="39">"%s &lt;a href=\"%s\"&gt;%s&lt;/a&gt;\n"<pos:position pos:line="257" pos:column="79"/></literal></expr></argument>,
                                   <argument><expr><call><name pos:line="258" pos:column="36">ap_escape_html<pos:position pos:line="258" pos:column="50"/></name><argument_list pos:line="258" pos:column="50">(<argument><expr><name pos:line="258" pos:column="51">p<pos:position pos:line="258" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="258" pos:column="54">ctx<pos:position pos:line="258" pos:column="57"/></name><operator pos:line="258" pos:column="57">-&gt;<pos:position pos:line="258" pos:column="62"/></operator><name pos:line="258" pos:column="59">buffer<pos:position pos:line="258" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="258" pos:column="66"/></argument_list></call></expr></argument>,
                                   <argument><expr><call><name pos:line="259" pos:column="36">ap_escape_uri<pos:position pos:line="259" pos:column="49"/></name><argument_list pos:line="259" pos:column="49">(<argument><expr><name pos:line="259" pos:column="50">p<pos:position pos:line="259" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="53">filename<pos:position pos:line="259" pos:column="61"/></name></expr></argument>)<pos:position pos:line="259" pos:column="62"/></argument_list></call></expr></argument>,
                                   <argument><expr><call><name pos:line="260" pos:column="36">ap_escape_html<pos:position pos:line="260" pos:column="50"/></name><argument_list pos:line="260" pos:column="50">(<argument><expr><name pos:line="260" pos:column="51">p<pos:position pos:line="260" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="54">filename<pos:position pos:line="260" pos:column="62"/></name></expr></argument>)<pos:position pos:line="260" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="260" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="261" pos:column="14"/></block></else></if>
        }<pos:position pos:line="262" pos:column="10"/></block></then></if></elseif>
        <comment type="block" pos:line="263" pos:column="9">/* Try a fallback for listings in the format of "ls -s1" */</comment>
        <elseif pos:line="264" pos:column="9">else <if pos:line="264" pos:column="14">if <condition pos:line="264" pos:column="17">(<expr><literal type="number" pos:line="264" pos:column="18">0<pos:position pos:line="264" pos:column="19"/></literal> <operator pos:line="264" pos:column="20">==<pos:position pos:line="264" pos:column="22"/></operator> <call><name pos:line="264" pos:column="23">ap_regexec<pos:position pos:line="264" pos:column="33"/></name><argument_list pos:line="264" pos:column="33">(<argument><expr><name pos:line="264" pos:column="34">re<pos:position pos:line="264" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="264" pos:column="38">ctx<pos:position pos:line="264" pos:column="41"/></name><operator pos:line="264" pos:column="41">-&gt;<pos:position pos:line="264" pos:column="46"/></operator><name pos:line="264" pos:column="43">buffer<pos:position pos:line="264" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="51">LS_REG_MATCH<pos:position pos:line="264" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="65">re_result<pos:position pos:line="264" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="264" pos:column="76">0<pos:position pos:line="264" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="264" pos:column="79"/></condition><then pos:line="264" pos:column="79"> <block pos:line="264" pos:column="80">{

            <expr_stmt><expr><name pos:line="266" pos:column="13">filename<pos:position pos:line="266" pos:column="21"/></name> <operator pos:line="266" pos:column="22">=<pos:position pos:line="266" pos:column="23"/></operator> <call><name pos:line="266" pos:column="24">apr_pstrndup<pos:position pos:line="266" pos:column="36"/></name><argument_list pos:line="266" pos:column="36">(<argument><expr><name pos:line="266" pos:column="37">p<pos:position pos:line="266" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="266" pos:column="40">&amp;<pos:position pos:line="266" pos:column="45"/></operator><name><name pos:line="266" pos:column="41">ctx<pos:position pos:line="266" pos:column="44"/></name><operator pos:line="266" pos:column="44">-&gt;<pos:position pos:line="266" pos:column="49"/></operator><name pos:line="266" pos:column="46">buffer<pos:position pos:line="266" pos:column="52"/></name><index pos:line="266" pos:column="52">[<expr><name><name pos:line="266" pos:column="53">re_result<pos:position pos:line="266" pos:column="62"/></name><index pos:line="266" pos:column="62">[<expr><literal type="number" pos:line="266" pos:column="63">2<pos:position pos:line="266" pos:column="64"/></literal></expr>]<pos:position pos:line="266" pos:column="65"/></index></name><operator pos:line="266" pos:column="65">.<pos:position pos:line="266" pos:column="66"/></operator><name pos:line="266" pos:column="66">rm_so<pos:position pos:line="266" pos:column="71"/></name></expr>]<pos:position pos:line="266" pos:column="72"/></index></name></expr></argument>, <argument><expr><name><name pos:line="266" pos:column="74">re_result<pos:position pos:line="266" pos:column="83"/></name><index pos:line="266" pos:column="83">[<expr><literal type="number" pos:line="266" pos:column="84">2<pos:position pos:line="266" pos:column="85"/></literal></expr>]<pos:position pos:line="266" pos:column="86"/></index></name><operator pos:line="266" pos:column="86">.<pos:position pos:line="266" pos:column="87"/></operator><name pos:line="266" pos:column="87">rm_eo<pos:position pos:line="266" pos:column="92"/></name> <operator pos:line="266" pos:column="93">-<pos:position pos:line="266" pos:column="94"/></operator> <name><name pos:line="266" pos:column="95">re_result<pos:position pos:line="266" pos:column="104"/></name><index pos:line="266" pos:column="104">[<expr><literal type="number" pos:line="266" pos:column="105">2<pos:position pos:line="266" pos:column="106"/></literal></expr>]<pos:position pos:line="266" pos:column="107"/></index></name><operator pos:line="266" pos:column="107">.<pos:position pos:line="266" pos:column="108"/></operator><name pos:line="266" pos:column="108">rm_so<pos:position pos:line="266" pos:column="113"/></name></expr></argument>)<pos:position pos:line="266" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="115"/></expr_stmt>

            <expr_stmt><expr><name pos:line="268" pos:column="13">str<pos:position pos:line="268" pos:column="16"/></name> <operator pos:line="268" pos:column="17">=<pos:position pos:line="268" pos:column="18"/></operator> <call><name pos:line="268" pos:column="19">apr_pstrcat<pos:position pos:line="268" pos:column="30"/></name><argument_list pos:line="268" pos:column="30">(<argument><expr><name pos:line="268" pos:column="31">p<pos:position pos:line="268" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="268" pos:column="34">ap_escape_html<pos:position pos:line="268" pos:column="48"/></name><argument_list pos:line="268" pos:column="48">(<argument><expr><name pos:line="268" pos:column="49">p<pos:position pos:line="268" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="268" pos:column="52">apr_pstrndup<pos:position pos:line="268" pos:column="64"/></name><argument_list pos:line="268" pos:column="64">(<argument><expr><name pos:line="268" pos:column="65">p<pos:position pos:line="268" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="268" pos:column="68">ctx<pos:position pos:line="268" pos:column="71"/></name><operator pos:line="268" pos:column="71">-&gt;<pos:position pos:line="268" pos:column="76"/></operator><name pos:line="268" pos:column="73">buffer<pos:position pos:line="268" pos:column="79"/></name></name></expr></argument>, <argument><expr><name><name pos:line="268" pos:column="81">re_result<pos:position pos:line="268" pos:column="90"/></name><index pos:line="268" pos:column="90">[<expr><literal type="number" pos:line="268" pos:column="91">2<pos:position pos:line="268" pos:column="92"/></literal></expr>]<pos:position pos:line="268" pos:column="93"/></index></name><operator pos:line="268" pos:column="93">.<pos:position pos:line="268" pos:column="94"/></operator><name pos:line="268" pos:column="94">rm_so<pos:position pos:line="268" pos:column="99"/></name></expr></argument>)<pos:position pos:line="268" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="268" pos:column="101"/></argument_list></call></expr></argument>,
                              <argument><expr><literal type="string" pos:line="269" pos:column="31">"&lt;a href=\""<pos:position pos:line="269" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="269" pos:column="45">ap_escape_uri<pos:position pos:line="269" pos:column="58"/></name><argument_list pos:line="269" pos:column="58">(<argument><expr><name pos:line="269" pos:column="59">p<pos:position pos:line="269" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="62">filename<pos:position pos:line="269" pos:column="70"/></name></expr></argument>)<pos:position pos:line="269" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="269" pos:column="73">"\"&gt;"<pos:position pos:line="269" pos:column="81"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="270" pos:column="31">ap_escape_html<pos:position pos:line="270" pos:column="45"/></name><argument_list pos:line="270" pos:column="45">(<argument><expr><name pos:line="270" pos:column="46">p<pos:position pos:line="270" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="270" pos:column="49">filename<pos:position pos:line="270" pos:column="57"/></name></expr></argument>)<pos:position pos:line="270" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="60">"&lt;/a&gt;\n"<pos:position pos:line="270" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="270" pos:column="70">NULL<pos:position pos:line="270" pos:column="74"/></name></expr></argument>)<pos:position pos:line="270" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="271" pos:column="10"/></block></then></if></elseif>
        <else pos:line="272" pos:column="9">else <block pos:line="272" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="273" pos:column="13">strcat<pos:position pos:line="273" pos:column="19"/></name><argument_list pos:line="273" pos:column="19">(<argument><expr><name><name pos:line="273" pos:column="20">ctx<pos:position pos:line="273" pos:column="23"/></name><operator pos:line="273" pos:column="23">-&gt;<pos:position pos:line="273" pos:column="28"/></operator><name pos:line="273" pos:column="25">buffer<pos:position pos:line="273" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="33">"\n"<pos:position pos:line="273" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="39"/></expr_stmt> <comment type="block" pos:line="273" pos:column="40">/* re-append the newline */</comment>
            <expr_stmt><expr><name pos:line="274" pos:column="13">str<pos:position pos:line="274" pos:column="16"/></name> <operator pos:line="274" pos:column="17">=<pos:position pos:line="274" pos:column="18"/></operator> <call><name pos:line="274" pos:column="19">ap_escape_html<pos:position pos:line="274" pos:column="33"/></name><argument_list pos:line="274" pos:column="33">(<argument><expr><name pos:line="274" pos:column="34">p<pos:position pos:line="274" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="274" pos:column="37">ctx<pos:position pos:line="274" pos:column="40"/></name><operator pos:line="274" pos:column="40">-&gt;<pos:position pos:line="274" pos:column="45"/></operator><name pos:line="274" pos:column="42">buffer<pos:position pos:line="274" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="274" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="275" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="277" pos:column="9">/* erase buffer for next time around */</comment>
        <expr_stmt><expr><name><name pos:line="278" pos:column="9">ctx<pos:position pos:line="278" pos:column="12"/></name><operator pos:line="278" pos:column="12">-&gt;<pos:position pos:line="278" pos:column="17"/></operator><name pos:line="278" pos:column="14">buffer<pos:position pos:line="278" pos:column="20"/></name><index pos:line="278" pos:column="20">[<expr><literal type="number" pos:line="278" pos:column="21">0<pos:position pos:line="278" pos:column="22"/></literal></expr>]<pos:position pos:line="278" pos:column="23"/></index></name> <operator pos:line="278" pos:column="24">=<pos:position pos:line="278" pos:column="25"/></operator> <literal type="number" pos:line="278" pos:column="26">0<pos:position pos:line="278" pos:column="27"/></literal></expr>;<pos:position pos:line="278" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="280" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="280" pos:column="32"/></name><argument_list pos:line="280" pos:column="32">(<argument><expr><name pos:line="280" pos:column="33">out<pos:position pos:line="280" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="280" pos:column="38">apr_bucket_pool_create<pos:position pos:line="280" pos:column="60"/></name><argument_list pos:line="280" pos:column="60">(<argument><expr><name pos:line="280" pos:column="61">str<pos:position pos:line="280" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="280" pos:column="66">strlen<pos:position pos:line="280" pos:column="72"/></name><argument_list pos:line="280" pos:column="72">(<argument><expr><name pos:line="280" pos:column="73">str<pos:position pos:line="280" pos:column="76"/></name></expr></argument>)<pos:position pos:line="280" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="280" pos:column="79">p<pos:position pos:line="280" pos:column="80"/></name></expr></argument>,
                                                            <argument><expr><name><name pos:line="281" pos:column="61">c<pos:position pos:line="281" pos:column="62"/></name><operator pos:line="281" pos:column="62">-&gt;<pos:position pos:line="281" pos:column="67"/></operator><name pos:line="281" pos:column="64">bucket_alloc<pos:position pos:line="281" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="281" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="281" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="282" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="282" pos:column="32"/></name><argument_list pos:line="282" pos:column="32">(<argument><expr><name pos:line="282" pos:column="33">out<pos:position pos:line="282" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="282" pos:column="38">apr_bucket_flush_create<pos:position pos:line="282" pos:column="61"/></name><argument_list pos:line="282" pos:column="61">(<argument><expr><name><name pos:line="282" pos:column="62">c<pos:position pos:line="282" pos:column="63"/></name><operator pos:line="282" pos:column="63">-&gt;<pos:position pos:line="282" pos:column="68"/></operator><name pos:line="282" pos:column="65">bucket_alloc<pos:position pos:line="282" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="282" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="282" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="80"/></expr_stmt>
        <if pos:line="283" pos:column="9">if <condition pos:line="283" pos:column="12">(<expr><name pos:line="283" pos:column="13">APR_SUCCESS<pos:position pos:line="283" pos:column="24"/></name> <operator pos:line="283" pos:column="25">!=<pos:position pos:line="283" pos:column="27"/></operator> <operator pos:line="283" pos:column="28">(<pos:position pos:line="283" pos:column="29"/></operator><name pos:line="283" pos:column="29">rv<pos:position pos:line="283" pos:column="31"/></name> <operator pos:line="283" pos:column="32">=<pos:position pos:line="283" pos:column="33"/></operator> <call><name pos:line="283" pos:column="34">ap_pass_brigade<pos:position pos:line="283" pos:column="49"/></name><argument_list pos:line="283" pos:column="49">(<argument><expr><name><name pos:line="283" pos:column="50">f<pos:position pos:line="283" pos:column="51"/></name><operator pos:line="283" pos:column="51">-&gt;<pos:position pos:line="283" pos:column="56"/></operator><name pos:line="283" pos:column="53">next<pos:position pos:line="283" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="59">out<pos:position pos:line="283" pos:column="62"/></name></expr></argument>)<pos:position pos:line="283" pos:column="63"/></argument_list></call><operator pos:line="283" pos:column="63">)<pos:position pos:line="283" pos:column="64"/></operator></expr>)<pos:position pos:line="283" pos:column="65"/></condition><then pos:line="283" pos:column="65"> <block pos:line="283" pos:column="66">{
            <return pos:line="284" pos:column="13">return <expr><name pos:line="284" pos:column="20">rv<pos:position pos:line="284" pos:column="22"/></name></expr>;<pos:position pos:line="284" pos:column="23"/></return>
        }<pos:position pos:line="285" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="286" pos:column="9">apr_brigade_cleanup<pos:position pos:line="286" pos:column="28"/></name><argument_list pos:line="286" pos:column="28">(<argument><expr><name pos:line="286" pos:column="29">out<pos:position pos:line="286" pos:column="32"/></name></expr></argument>)<pos:position pos:line="286" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="34"/></expr_stmt>

    }<pos:position pos:line="288" pos:column="6"/></block></while>

    <if pos:line="290" pos:column="5">if <condition pos:line="290" pos:column="8">(<expr><name pos:line="290" pos:column="9">FOOTER<pos:position pos:line="290" pos:column="15"/></name> <operator pos:line="290" pos:column="16">==<pos:position pos:line="290" pos:column="18"/></operator> <name><name pos:line="290" pos:column="19">ctx<pos:position pos:line="290" pos:column="22"/></name><operator pos:line="290" pos:column="22">-&gt;<pos:position pos:line="290" pos:column="27"/></operator><name pos:line="290" pos:column="24">state<pos:position pos:line="290" pos:column="29"/></name></name></expr>)<pos:position pos:line="290" pos:column="30"/></condition><then pos:line="290" pos:column="30"> <block pos:line="290" pos:column="31">{
        <expr_stmt><expr><name pos:line="291" pos:column="9">str<pos:position pos:line="291" pos:column="12"/></name> <operator pos:line="291" pos:column="13">=<pos:position pos:line="291" pos:column="14"/></operator> <call><name pos:line="291" pos:column="15">apr_psprintf<pos:position pos:line="291" pos:column="27"/></name><argument_list pos:line="291" pos:column="27">(<argument><expr><name pos:line="291" pos:column="28">p<pos:position pos:line="291" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="31">"&lt;/pre&gt;\n\n  &lt;hr /&gt;\n\n  %s\n\n &lt;/body&gt;\n&lt;/html&gt;\n"<pos:position pos:line="291" pos:column="106"/></literal></expr></argument>, <argument><expr><call><name pos:line="291" pos:column="84">ap_psignature<pos:position pos:line="291" pos:column="97"/></name><argument_list pos:line="291" pos:column="97">(<argument><expr><literal type="string" pos:line="291" pos:column="98">""<pos:position pos:line="291" pos:column="100"/></literal></expr></argument>, <argument><expr><name pos:line="291" pos:column="102">r<pos:position pos:line="291" pos:column="103"/></name></expr></argument>)<pos:position pos:line="291" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="291" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="106"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="292" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="292" pos:column="32"/></name><argument_list pos:line="292" pos:column="32">(<argument><expr><name pos:line="292" pos:column="33">out<pos:position pos:line="292" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="292" pos:column="38">apr_bucket_pool_create<pos:position pos:line="292" pos:column="60"/></name><argument_list pos:line="292" pos:column="60">(<argument><expr><name pos:line="292" pos:column="61">str<pos:position pos:line="292" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="292" pos:column="66">strlen<pos:position pos:line="292" pos:column="72"/></name><argument_list pos:line="292" pos:column="72">(<argument><expr><name pos:line="292" pos:column="73">str<pos:position pos:line="292" pos:column="76"/></name></expr></argument>)<pos:position pos:line="292" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="292" pos:column="79">p<pos:position pos:line="292" pos:column="80"/></name></expr></argument>,
                                                            <argument><expr><name><name pos:line="293" pos:column="61">c<pos:position pos:line="293" pos:column="62"/></name><operator pos:line="293" pos:column="62">-&gt;<pos:position pos:line="293" pos:column="67"/></operator><name pos:line="293" pos:column="64">bucket_alloc<pos:position pos:line="293" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="293" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="293" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="294" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="294" pos:column="32"/></name><argument_list pos:line="294" pos:column="32">(<argument><expr><name pos:line="294" pos:column="33">out<pos:position pos:line="294" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="294" pos:column="38">apr_bucket_flush_create<pos:position pos:line="294" pos:column="61"/></name><argument_list pos:line="294" pos:column="61">(<argument><expr><name><name pos:line="294" pos:column="62">c<pos:position pos:line="294" pos:column="63"/></name><operator pos:line="294" pos:column="63">-&gt;<pos:position pos:line="294" pos:column="68"/></operator><name pos:line="294" pos:column="65">bucket_alloc<pos:position pos:line="294" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="294" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="294" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="295" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="295" pos:column="32"/></name><argument_list pos:line="295" pos:column="32">(<argument><expr><name pos:line="295" pos:column="33">out<pos:position pos:line="295" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="295" pos:column="38">apr_bucket_eos_create<pos:position pos:line="295" pos:column="59"/></name><argument_list pos:line="295" pos:column="59">(<argument><expr><name><name pos:line="295" pos:column="60">c<pos:position pos:line="295" pos:column="61"/></name><operator pos:line="295" pos:column="61">-&gt;<pos:position pos:line="295" pos:column="66"/></operator><name pos:line="295" pos:column="63">bucket_alloc<pos:position pos:line="295" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="295" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="295" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="78"/></expr_stmt>
        <if pos:line="296" pos:column="9">if <condition pos:line="296" pos:column="12">(<expr><name pos:line="296" pos:column="13">APR_SUCCESS<pos:position pos:line="296" pos:column="24"/></name> <operator pos:line="296" pos:column="25">!=<pos:position pos:line="296" pos:column="27"/></operator> <operator pos:line="296" pos:column="28">(<pos:position pos:line="296" pos:column="29"/></operator><name pos:line="296" pos:column="29">rv<pos:position pos:line="296" pos:column="31"/></name> <operator pos:line="296" pos:column="32">=<pos:position pos:line="296" pos:column="33"/></operator> <call><name pos:line="296" pos:column="34">ap_pass_brigade<pos:position pos:line="296" pos:column="49"/></name><argument_list pos:line="296" pos:column="49">(<argument><expr><name><name pos:line="296" pos:column="50">f<pos:position pos:line="296" pos:column="51"/></name><operator pos:line="296" pos:column="51">-&gt;<pos:position pos:line="296" pos:column="56"/></operator><name pos:line="296" pos:column="53">next<pos:position pos:line="296" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="59">out<pos:position pos:line="296" pos:column="62"/></name></expr></argument>)<pos:position pos:line="296" pos:column="63"/></argument_list></call><operator pos:line="296" pos:column="63">)<pos:position pos:line="296" pos:column="64"/></operator></expr>)<pos:position pos:line="296" pos:column="65"/></condition><then pos:line="296" pos:column="65"> <block pos:line="296" pos:column="66">{
            <return pos:line="297" pos:column="13">return <expr><name pos:line="297" pos:column="20">rv<pos:position pos:line="297" pos:column="22"/></name></expr>;<pos:position pos:line="297" pos:column="23"/></return>
        }<pos:position pos:line="298" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="299" pos:column="9">apr_brigade_destroy<pos:position pos:line="299" pos:column="28"/></name><argument_list pos:line="299" pos:column="28">(<argument><expr><name pos:line="299" pos:column="29">out<pos:position pos:line="299" pos:column="32"/></name></expr></argument>)<pos:position pos:line="299" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="300" pos:column="6"/></block></then></if>

    <return pos:line="302" pos:column="5">return <expr><name pos:line="302" pos:column="12">APR_SUCCESS<pos:position pos:line="302" pos:column="23"/></name></expr>;<pos:position pos:line="302" pos:column="24"/></return>
}<pos:position pos:line="303" pos:column="2"/></block></function></unit>

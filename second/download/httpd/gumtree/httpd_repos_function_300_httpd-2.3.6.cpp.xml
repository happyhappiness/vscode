<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_300_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_prop_insert<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">dav_core_insert_prop<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">dav_resource<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">resource<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">propid<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">dav_prop_insert<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">what<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="3" pos:column="45">apr_text_header<pos:position pos:line="3" pos:column="60"/></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier></type><name pos:line="3" pos:column="62">phdr<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="67"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">value<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">s<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">p<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name><name pos:line="7" pos:column="21">resource<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">pool<pos:position pos:line="7" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">dav_liveprop_spec<pos:position pos:line="8" pos:column="28"/></name> <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier></type><name pos:line="8" pos:column="30">info<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">long<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">global_ns<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

    <switch pos:line="11" pos:column="5">switch <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">propid<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition>
    <block pos:line="12" pos:column="5">{
    <case pos:line="13" pos:column="5">case <expr><name pos:line="13" pos:column="10">DAV_PROPID_resourcetype<pos:position pos:line="13" pos:column="33"/></name></expr>:<pos:position pos:line="13" pos:column="34"/></case>
        <block pos:line="14" pos:column="9">{ <comment type="block" pos:line="14" pos:column="11">/* additional type info provided by external modules ? */</comment>
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">int<pos:position pos:line="15" pos:column="16"/></name></type> <name pos:line="15" pos:column="17">i<pos:position pos:line="15" pos:column="18"/></name></decl>;<pos:position pos:line="15" pos:column="19"/></decl_stmt>

            <decl_stmt><decl><type><name pos:line="17" pos:column="13">apr_array_header_t<pos:position pos:line="17" pos:column="31"/></name> <modifier pos:line="17" pos:column="32">*<pos:position pos:line="17" pos:column="33"/></modifier></type><name pos:line="17" pos:column="33">extensions<pos:position pos:line="17" pos:column="43"/></name> <init pos:line="17" pos:column="44">=
                <expr><call><name pos:line="18" pos:column="17">ap_list_provider_names<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">p<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">DAV_RESOURCE_TYPE_GROUP<pos:position pos:line="18" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="68">"0"<pos:position pos:line="18" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="73"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">ap_list_provider_names_t<pos:position pos:line="19" pos:column="37"/></name> <modifier pos:line="19" pos:column="38">*<pos:position pos:line="19" pos:column="39"/></modifier></type><name pos:line="19" pos:column="39">entry<pos:position pos:line="19" pos:column="44"/></name> <init pos:line="19" pos:column="45">=
                <expr><operator pos:line="20" pos:column="17">(<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">ap_list_provider_names_t<pos:position pos:line="20" pos:column="42"/></name> <operator pos:line="20" pos:column="43">*<pos:position pos:line="20" pos:column="44"/></operator><operator pos:line="20" pos:column="44">)<pos:position pos:line="20" pos:column="45"/></operator><name><name pos:line="20" pos:column="45">extensions<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">-&gt;<pos:position pos:line="20" pos:column="60"/></operator><name pos:line="20" pos:column="57">elts<pos:position pos:line="20" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="62"/></decl_stmt>

            <for pos:line="22" pos:column="13">for <control pos:line="22" pos:column="17">(<init><expr><name pos:line="22" pos:column="18">i<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr>;<pos:position pos:line="22" pos:column="24"/></init> <condition><expr><name pos:line="22" pos:column="25">i<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">&lt;<pos:position pos:line="22" pos:column="31"/></operator> <name><name pos:line="22" pos:column="29">extensions<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">nelts<pos:position pos:line="22" pos:column="46"/></name></name></expr>;<pos:position pos:line="22" pos:column="47"/></condition> <incr><expr><name pos:line="22" pos:column="48">i<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">++<pos:position pos:line="22" pos:column="51"/></operator></expr><operator pos:line="22" pos:column="51">,<pos:position pos:line="22" pos:column="52"/></operator> <expr><name pos:line="22" pos:column="53">entry<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">++<pos:position pos:line="22" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="61"/></control> <block pos:line="22" pos:column="62">{
                <decl_stmt><decl><type><specifier pos:line="23" pos:column="17">const<pos:position pos:line="23" pos:column="22"/></specifier> <name pos:line="23" pos:column="23">dav_resource_type_provider<pos:position pos:line="23" pos:column="49"/></name> <modifier pos:line="23" pos:column="50">*<pos:position pos:line="23" pos:column="51"/></modifier></type><name pos:line="23" pos:column="51">res_hooks<pos:position pos:line="23" pos:column="60"/></name> <init pos:line="23" pos:column="61">=
                    <expr><call><name pos:line="24" pos:column="21">dav_get_resource_type_providers<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name><name pos:line="24" pos:column="53">entry<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="60">provider_name<pos:position pos:line="24" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="75"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="25" pos:column="17">const<pos:position pos:line="25" pos:column="22"/></specifier> <name pos:line="25" pos:column="23">char<pos:position pos:line="25" pos:column="27"/></name> <modifier pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></modifier></type><name pos:line="25" pos:column="29">name<pos:position pos:line="25" pos:column="33"/></name> <init pos:line="25" pos:column="34">= <expr><name pos:line="25" pos:column="36">NULL<pos:position pos:line="25" pos:column="40"/></name></expr></init></decl>, <modifier pos:line="25" pos:column="42">*<pos:position pos:line="25" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="25" pos:column="43">uri<pos:position pos:line="25" pos:column="46"/></name> <init pos:line="25" pos:column="47">= <expr><name pos:line="25" pos:column="49">NULL<pos:position pos:line="25" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="54"/></decl_stmt>

                <if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">res_hooks<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">||<pos:position pos:line="27" pos:column="34"/></operator> <operator pos:line="27" pos:column="35">!<pos:position pos:line="27" pos:column="36"/></operator><name><name pos:line="27" pos:column="36">res_hooks<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">get_resource_type<pos:position pos:line="27" pos:column="64"/></name></name></expr>)<pos:position pos:line="27" pos:column="65"/></condition><then pos:line="27" pos:column="65">
                    <block type="pseudo"><continue pos:line="28" pos:column="21">continue;<pos:position pos:line="28" pos:column="30"/></continue></block></then></if>

                <if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><call><name><name pos:line="30" pos:column="22">res_hooks<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">get_resource_type<pos:position pos:line="30" pos:column="50"/></name></name><argument_list pos:line="30" pos:column="50">(<argument><expr><name pos:line="30" pos:column="51">resource<pos:position pos:line="30" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="61">&amp;<pos:position pos:line="30" pos:column="66"/></operator><name pos:line="30" pos:column="62">name<pos:position pos:line="30" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="68">&amp;<pos:position pos:line="30" pos:column="73"/></operator><name pos:line="30" pos:column="69">uri<pos:position pos:line="30" pos:column="72"/></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call> <operator pos:line="30" pos:column="74">&amp;&amp;<pos:position pos:line="30" pos:column="84"/></operator>
            <name pos:line="31" pos:column="13">name<pos:position pos:line="31" pos:column="17"/></name></expr>)<pos:position pos:line="31" pos:column="18"/></condition><then pos:line="31" pos:column="18"> <block pos:line="31" pos:column="19">{

                    <if pos:line="33" pos:column="21">if <condition pos:line="33" pos:column="24">(<expr><operator pos:line="33" pos:column="25">!<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">uri<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">||<pos:position pos:line="33" pos:column="32"/></operator> <operator pos:line="33" pos:column="33">!<pos:position pos:line="33" pos:column="34"/></operator><call><name pos:line="33" pos:column="34">strcasecmp<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">(<argument><expr><name pos:line="33" pos:column="45">uri<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="50">"DAV:"<pos:position pos:line="33" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="58"/></condition><then pos:line="33" pos:column="58">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">value<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <call><name pos:line="34" pos:column="33">apr_pstrcat<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">p<pos:position pos:line="34" pos:column="46"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="34" pos:column="48">value<pos:position pos:line="34" pos:column="53"/></name></expr> ?<pos:position pos:line="34" pos:column="55"/></condition><then pos:line="34" pos:column="55"> <expr><name pos:line="34" pos:column="56">value<pos:position pos:line="34" pos:column="61"/></name></expr> <pos:position pos:line="34" pos:column="62"/></then><else pos:line="34" pos:column="62">: <expr><literal type="string" pos:line="34" pos:column="64">""<pos:position pos:line="34" pos:column="66"/></literal></expr></else></ternary></expr></argument>,
                        <argument><expr><literal type="string" pos:line="35" pos:column="25">"&lt;D:"<pos:position pos:line="35" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="32">name<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="38">"/&gt;"<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">NULL<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt></block></then>
            <else pos:line="36" pos:column="13">else
                        <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">value<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <call><name pos:line="37" pos:column="33">apr_pstrcat<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">p<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="37" pos:column="48">value<pos:position pos:line="37" pos:column="53"/></name></expr> ?<pos:position pos:line="37" pos:column="55"/></condition><then pos:line="37" pos:column="55"> <expr><name pos:line="37" pos:column="56">value<pos:position pos:line="37" pos:column="61"/></name></expr> <pos:position pos:line="37" pos:column="62"/></then><else pos:line="37" pos:column="62">: <expr><literal type="string" pos:line="37" pos:column="64">""<pos:position pos:line="37" pos:column="66"/></literal></expr></else></ternary></expr></argument>,
                        <argument><expr><literal type="string" pos:line="38" pos:column="25">"&lt;x:"<pos:position pos:line="38" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="32">name<pos:position pos:line="38" pos:column="36"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="39" pos:column="25">" xmlns:x=\""<pos:position pos:line="39" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">uri<pos:position pos:line="39" pos:column="43"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="40" pos:column="25">"\"/&gt;"<pos:position pos:line="40" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">NULL<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt></block></else></if>
                }<pos:position pos:line="41" pos:column="18"/></block></then></if>
        }<pos:position pos:line="42" pos:column="10"/></block></for>
        }<pos:position pos:line="43" pos:column="10"/></block>
        <switch pos:line="44" pos:column="9">switch <condition pos:line="44" pos:column="16">(<expr><name><name pos:line="44" pos:column="17">resource<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">type<pos:position pos:line="44" pos:column="31"/></name></name></expr>)<pos:position pos:line="44" pos:column="32"/></condition> <block pos:line="44" pos:column="33">{
        <case pos:line="45" pos:column="9">case <expr><name pos:line="45" pos:column="14">DAV_RESOURCE_TYPE_VERSION<pos:position pos:line="45" pos:column="39"/></name></expr>:<pos:position pos:line="45" pos:column="40"/></case>
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name><name pos:line="46" pos:column="17">resource<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">baselined<pos:position pos:line="46" pos:column="36"/></name></name></expr>)<pos:position pos:line="46" pos:column="37"/></condition><then pos:line="46" pos:column="37"> <block pos:line="46" pos:column="38">{
                <expr_stmt><expr><name pos:line="47" pos:column="17">value<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">=<pos:position pos:line="47" pos:column="24"/></operator> <call><name pos:line="47" pos:column="25">apr_pstrcat<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">p<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="47" pos:column="40">value<pos:position pos:line="47" pos:column="45"/></name></expr> ?<pos:position pos:line="47" pos:column="47"/></condition><then pos:line="47" pos:column="47"> <expr><name pos:line="47" pos:column="48">value<pos:position pos:line="47" pos:column="53"/></name></expr> <pos:position pos:line="47" pos:column="54"/></then><else pos:line="47" pos:column="54">: <expr><literal type="string" pos:line="47" pos:column="56">""<pos:position pos:line="47" pos:column="58"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="60">"&lt;D:baseline/&gt;"<pos:position pos:line="47" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="77">NULL<pos:position pos:line="47" pos:column="81"/></name></expr></argument>)<pos:position pos:line="47" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="83"/></expr_stmt>
                <break pos:line="48" pos:column="17">break;<pos:position pos:line="48" pos:column="23"/></break>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="50" pos:column="13">/* fall through */</comment>
        <case pos:line="51" pos:column="9">case <expr><name pos:line="51" pos:column="14">DAV_RESOURCE_TYPE_REGULAR<pos:position pos:line="51" pos:column="39"/></name></expr>:<pos:position pos:line="51" pos:column="40"/></case>
        <case pos:line="52" pos:column="9">case <expr><name pos:line="52" pos:column="14">DAV_RESOURCE_TYPE_WORKING<pos:position pos:line="52" pos:column="39"/></name></expr>:<pos:position pos:line="52" pos:column="40"/></case>
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><name><name pos:line="53" pos:column="17">resource<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">-&gt;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="27">collection<pos:position pos:line="53" pos:column="37"/></name></name></expr>)<pos:position pos:line="53" pos:column="38"/></condition><then pos:line="53" pos:column="38"> <block pos:line="53" pos:column="39">{
                <expr_stmt><expr><name pos:line="54" pos:column="17">value<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <call><name pos:line="54" pos:column="25">apr_pstrcat<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><name pos:line="54" pos:column="37">p<pos:position pos:line="54" pos:column="38"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="54" pos:column="40">value<pos:position pos:line="54" pos:column="45"/></name></expr> ?<pos:position pos:line="54" pos:column="47"/></condition><then pos:line="54" pos:column="47"> <expr><name pos:line="54" pos:column="48">value<pos:position pos:line="54" pos:column="53"/></name></expr> <pos:position pos:line="54" pos:column="54"/></then><else pos:line="54" pos:column="54">: <expr><literal type="string" pos:line="54" pos:column="56">""<pos:position pos:line="54" pos:column="58"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="60">"&lt;D:collection/&gt;"<pos:position pos:line="54" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="79">NULL<pos:position pos:line="54" pos:column="83"/></name></expr></argument>)<pos:position pos:line="54" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="85"/></expr_stmt>
            }<pos:position pos:line="55" pos:column="14"/></block></then>
            <else pos:line="56" pos:column="13">else <block pos:line="56" pos:column="18">{
                <comment type="block" pos:line="57" pos:column="17">/* ### should we denote lock-null resources? */</comment>
                <if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name pos:line="58" pos:column="21">value<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">==<pos:position pos:line="58" pos:column="29"/></operator> <name pos:line="58" pos:column="30">NULL<pos:position pos:line="58" pos:column="34"/></name></expr>)<pos:position pos:line="58" pos:column="35"/></condition><then pos:line="58" pos:column="35"> <block pos:line="58" pos:column="36">{
                <expr_stmt><expr><name pos:line="59" pos:column="17">value<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <literal type="string" pos:line="59" pos:column="25">""<pos:position pos:line="59" pos:column="27"/></literal></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>        <comment type="block" pos:line="59" pos:column="36">/* becomes: &lt;D:resourcetype/&gt; */</comment>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if>
            }<pos:position pos:line="61" pos:column="14"/></block></else></if>
            <break pos:line="62" pos:column="13">break;<pos:position pos:line="62" pos:column="19"/></break>
        <case pos:line="63" pos:column="9">case <expr><name pos:line="63" pos:column="14">DAV_RESOURCE_TYPE_HISTORY<pos:position pos:line="63" pos:column="39"/></name></expr>:<pos:position pos:line="63" pos:column="40"/></case>
            <expr_stmt><expr><name pos:line="64" pos:column="13">value<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <call><name pos:line="64" pos:column="21">apr_pstrcat<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">(<argument><expr><name pos:line="64" pos:column="33">p<pos:position pos:line="64" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="64" pos:column="36">value<pos:position pos:line="64" pos:column="41"/></name></expr> ?<pos:position pos:line="64" pos:column="43"/></condition><then pos:line="64" pos:column="43"> <expr><name pos:line="64" pos:column="44">value<pos:position pos:line="64" pos:column="49"/></name></expr> <pos:position pos:line="64" pos:column="50"/></then><else pos:line="64" pos:column="50">: <expr><literal type="string" pos:line="64" pos:column="52">""<pos:position pos:line="64" pos:column="54"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="56">"&lt;D:version-history/&gt;"<pos:position pos:line="64" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="80">NULL<pos:position pos:line="64" pos:column="84"/></name></expr></argument>)<pos:position pos:line="64" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="86"/></expr_stmt>
            <break pos:line="65" pos:column="13">break;<pos:position pos:line="65" pos:column="19"/></break>
        <case pos:line="66" pos:column="9">case <expr><name pos:line="66" pos:column="14">DAV_RESOURCE_TYPE_WORKSPACE<pos:position pos:line="66" pos:column="41"/></name></expr>:<pos:position pos:line="66" pos:column="42"/></case>
            <expr_stmt><expr><name pos:line="67" pos:column="13">value<pos:position pos:line="67" pos:column="18"/></name> <operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator> <call><name pos:line="67" pos:column="21">apr_pstrcat<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">p<pos:position pos:line="67" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="67" pos:column="36">value<pos:position pos:line="67" pos:column="41"/></name></expr> ?<pos:position pos:line="67" pos:column="43"/></condition><then pos:line="67" pos:column="43"> <expr><name pos:line="67" pos:column="44">value<pos:position pos:line="67" pos:column="49"/></name></expr> <pos:position pos:line="67" pos:column="50"/></then><else pos:line="67" pos:column="50">: <expr><literal type="string" pos:line="67" pos:column="52">""<pos:position pos:line="67" pos:column="54"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="56">"&lt;D:collection/&gt;"<pos:position pos:line="67" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="75">NULL<pos:position pos:line="67" pos:column="79"/></name></expr></argument>)<pos:position pos:line="67" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="81"/></expr_stmt>
            <break pos:line="68" pos:column="13">break;<pos:position pos:line="68" pos:column="19"/></break>
        <case pos:line="69" pos:column="9">case <expr><name pos:line="69" pos:column="14">DAV_RESOURCE_TYPE_ACTIVITY<pos:position pos:line="69" pos:column="40"/></name></expr>:<pos:position pos:line="69" pos:column="41"/></case>
            <expr_stmt><expr><name pos:line="70" pos:column="13">value<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <call><name pos:line="70" pos:column="21">apr_pstrcat<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">p<pos:position pos:line="70" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="70" pos:column="36">value<pos:position pos:line="70" pos:column="41"/></name></expr> ?<pos:position pos:line="70" pos:column="43"/></condition><then pos:line="70" pos:column="43"> <expr><name pos:line="70" pos:column="44">value<pos:position pos:line="70" pos:column="49"/></name></expr> <pos:position pos:line="70" pos:column="50"/></then><else pos:line="70" pos:column="50">: <expr><literal type="string" pos:line="70" pos:column="52">""<pos:position pos:line="70" pos:column="54"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="56">"&lt;D:activity/&gt;"<pos:position pos:line="70" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="73">NULL<pos:position pos:line="70" pos:column="77"/></name></expr></argument>)<pos:position pos:line="70" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="79"/></expr_stmt>
            <break pos:line="71" pos:column="13">break;<pos:position pos:line="71" pos:column="19"/></break>

        <default pos:line="73" pos:column="9">default:<pos:position pos:line="73" pos:column="17"/></default>
            <comment type="block" pos:line="74" pos:column="13">/* ### bad juju */</comment>
            <return pos:line="75" pos:column="13">return <expr><name pos:line="75" pos:column="20">DAV_PROP_INSERT_NOTDEF<pos:position pos:line="75" pos:column="42"/></name></expr>;<pos:position pos:line="75" pos:column="43"/></return>
        }<pos:position pos:line="76" pos:column="10"/></block></switch>
        <break pos:line="77" pos:column="9">break;<pos:position pos:line="77" pos:column="15"/></break>

    <case pos:line="79" pos:column="5">case <expr><name pos:line="79" pos:column="10">DAV_PROPID_comment<pos:position pos:line="79" pos:column="28"/></name></expr>:<pos:position pos:line="79" pos:column="29"/></case>
    <case pos:line="80" pos:column="5">case <expr><name pos:line="80" pos:column="10">DAV_PROPID_creator_displayname<pos:position pos:line="80" pos:column="40"/></name></expr>:<pos:position pos:line="80" pos:column="41"/></case>
    <case pos:line="81" pos:column="5">case <expr><name pos:line="81" pos:column="10">DAV_PROPID_displayname<pos:position pos:line="81" pos:column="32"/></name></expr>:<pos:position pos:line="81" pos:column="33"/></case>
    <case pos:line="82" pos:column="5">case <expr><name pos:line="82" pos:column="10">DAV_PROPID_source<pos:position pos:line="82" pos:column="27"/></name></expr>:<pos:position pos:line="82" pos:column="28"/></case>
    <default pos:line="83" pos:column="5">default:<pos:position pos:line="83" pos:column="13"/></default>
        <comment type="block" pos:line="84" pos:column="9">/*
        ** This property is known, but not defined as a liveprop. However,
        ** it may be a dead property.
        */</comment>
        <return pos:line="88" pos:column="9">return <expr><name pos:line="88" pos:column="16">DAV_PROP_INSERT_NOTDEF<pos:position pos:line="88" pos:column="38"/></name></expr>;<pos:position pos:line="88" pos:column="39"/></return>
    }<pos:position pos:line="89" pos:column="6"/></block></switch>

    <comment type="block" pos:line="91" pos:column="5">/* assert: value != NULL */</comment>

    <comment type="block" pos:line="93" pos:column="5">/* get the information and global NS index for the property */</comment>
    <expr_stmt><expr><name pos:line="94" pos:column="5">global_ns<pos:position pos:line="94" pos:column="14"/></name> <operator pos:line="94" pos:column="15">=<pos:position pos:line="94" pos:column="16"/></operator> <call><name pos:line="94" pos:column="17">dav_get_liveprop_info<pos:position pos:line="94" pos:column="38"/></name><argument_list pos:line="94" pos:column="38">(<argument><expr><name pos:line="94" pos:column="39">propid<pos:position pos:line="94" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="47">&amp;<pos:position pos:line="94" pos:column="52"/></operator><name pos:line="94" pos:column="48">dav_core_liveprop_group<pos:position pos:line="94" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="73">&amp;<pos:position pos:line="94" pos:column="78"/></operator><name pos:line="94" pos:column="74">info<pos:position pos:line="94" pos:column="78"/></name></expr></argument>)<pos:position pos:line="94" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="80"/></expr_stmt>

    <comment type="block" pos:line="96" pos:column="5">/* assert: info != NULL &amp;&amp; info-&gt;name != NULL */</comment>

    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name pos:line="98" pos:column="9">what<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">==<pos:position pos:line="98" pos:column="16"/></operator> <name pos:line="98" pos:column="17">DAV_PROP_INSERT_SUPPORTED<pos:position pos:line="98" pos:column="42"/></name></expr>)<pos:position pos:line="98" pos:column="43"/></condition><then pos:line="98" pos:column="43"> <block pos:line="98" pos:column="44">{
        <expr_stmt><expr><name pos:line="99" pos:column="9">s<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">=<pos:position pos:line="99" pos:column="12"/></operator> <call><name pos:line="99" pos:column="13">apr_psprintf<pos:position pos:line="99" pos:column="25"/></name><argument_list pos:line="99" pos:column="25">(<argument><expr><name pos:line="99" pos:column="26">p<pos:position pos:line="99" pos:column="27"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="100" pos:column="26">"&lt;D:supported-live-property D:name=\"%s\" "<pos:position pos:line="100" pos:column="72"/></literal>
                         <literal type="string" pos:line="101" pos:column="26">"D:namespace=\"%s\"/&gt;"<pos:position pos:line="101" pos:column="51"/></literal> <name pos:line="101" pos:column="49">DEBUG_CR<pos:position pos:line="101" pos:column="57"/></name></expr></argument>,
                         <argument><expr><name><name pos:line="102" pos:column="26">info<pos:position pos:line="102" pos:column="30"/></name><operator pos:line="102" pos:column="30">-&gt;<pos:position pos:line="102" pos:column="35"/></operator><name pos:line="102" pos:column="32">name<pos:position pos:line="102" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="38">dav_core_namespace_uris<pos:position pos:line="102" pos:column="61"/></name><index pos:line="102" pos:column="61">[<expr><name><name pos:line="102" pos:column="62">info<pos:position pos:line="102" pos:column="66"/></name><operator pos:line="102" pos:column="66">-&gt;<pos:position pos:line="102" pos:column="71"/></operator><name pos:line="102" pos:column="68">ns<pos:position pos:line="102" pos:column="70"/></name></name></expr>]<pos:position pos:line="102" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="102" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></then>
    <elseif pos:line="104" pos:column="5">else <if pos:line="104" pos:column="10">if <condition pos:line="104" pos:column="13">(<expr><name pos:line="104" pos:column="14">what<pos:position pos:line="104" pos:column="18"/></name> <operator pos:line="104" pos:column="19">==<pos:position pos:line="104" pos:column="21"/></operator> <name pos:line="104" pos:column="22">DAV_PROP_INSERT_VALUE<pos:position pos:line="104" pos:column="43"/></name> <operator pos:line="104" pos:column="44">&amp;&amp;<pos:position pos:line="104" pos:column="54"/></operator> <operator pos:line="104" pos:column="47">*<pos:position pos:line="104" pos:column="48"/></operator><name pos:line="104" pos:column="48">value<pos:position pos:line="104" pos:column="53"/></name> <operator pos:line="104" pos:column="54">!=<pos:position pos:line="104" pos:column="56"/></operator> <literal type="char" pos:line="104" pos:column="57">'\0'<pos:position pos:line="104" pos:column="61"/></literal></expr>)<pos:position pos:line="104" pos:column="62"/></condition><then pos:line="104" pos:column="62"> <block pos:line="104" pos:column="63">{
        <expr_stmt><expr><name pos:line="105" pos:column="9">s<pos:position pos:line="105" pos:column="10"/></name> <operator pos:line="105" pos:column="11">=<pos:position pos:line="105" pos:column="12"/></operator> <call><name pos:line="105" pos:column="13">apr_psprintf<pos:position pos:line="105" pos:column="25"/></name><argument_list pos:line="105" pos:column="25">(<argument><expr><name pos:line="105" pos:column="26">p<pos:position pos:line="105" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="29">"&lt;lp%ld:%s&gt;%s&lt;/lp%ld:%s&gt;"<pos:position pos:line="105" pos:column="66"/></literal> <name pos:line="105" pos:column="55">DEBUG_CR<pos:position pos:line="105" pos:column="63"/></name></expr></argument>,
                         <argument><expr><name pos:line="106" pos:column="26">global_ns<pos:position pos:line="106" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="37">info<pos:position pos:line="106" pos:column="41"/></name><operator pos:line="106" pos:column="41">-&gt;<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="43">name<pos:position pos:line="106" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="49">value<pos:position pos:line="106" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="56">global_ns<pos:position pos:line="106" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="67">info<pos:position pos:line="106" pos:column="71"/></name><operator pos:line="106" pos:column="71">-&gt;<pos:position pos:line="106" pos:column="76"/></operator><name pos:line="106" pos:column="73">name<pos:position pos:line="106" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if></elseif>
    <else pos:line="108" pos:column="5">else <block pos:line="108" pos:column="10">{
        <expr_stmt><expr><name pos:line="109" pos:column="9">s<pos:position pos:line="109" pos:column="10"/></name> <operator pos:line="109" pos:column="11">=<pos:position pos:line="109" pos:column="12"/></operator> <call><name pos:line="109" pos:column="13">apr_psprintf<pos:position pos:line="109" pos:column="25"/></name><argument_list pos:line="109" pos:column="25">(<argument><expr><name pos:line="109" pos:column="26">p<pos:position pos:line="109" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="29">"&lt;lp%ld:%s/&gt;"<pos:position pos:line="109" pos:column="48"/></literal> <name pos:line="109" pos:column="43">DEBUG_CR<pos:position pos:line="109" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="53">global_ns<pos:position pos:line="109" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="64">info<pos:position pos:line="109" pos:column="68"/></name><operator pos:line="109" pos:column="68">-&gt;<pos:position pos:line="109" pos:column="73"/></operator><name pos:line="109" pos:column="70">name<pos:position pos:line="109" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">apr_text_append<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><name pos:line="111" pos:column="21">p<pos:position pos:line="111" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="24">phdr<pos:position pos:line="111" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="30">s<pos:position pos:line="111" pos:column="31"/></name></expr></argument>)<pos:position pos:line="111" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="113" pos:column="5">/* we inserted what was asked for */</comment>
    <return pos:line="114" pos:column="5">return <expr><name pos:line="114" pos:column="12">what<pos:position pos:line="114" pos:column="16"/></name></expr>;<pos:position pos:line="114" pos:column="17"/></return>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

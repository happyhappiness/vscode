<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5762.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">prefork_open_logs<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_pool_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">p<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_pool_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">plog<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">apr_pool_t<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">ptemp<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="82">server_rec<pos:position pos:line="1" pos:column="92"/></name> <modifier pos:line="1" pos:column="93">*<pos:position pos:line="1" pos:column="94"/></modifier></type><name pos:line="1" pos:column="94">s<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="96"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">startup<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">level_flags<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_listen_rec<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier><modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">listen_buckets<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">id<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><literal type="number" pos:line="7" pos:column="13">16<pos:position pos:line="7" pos:column="15"/></literal></expr>]<pos:position pos:line="7" pos:column="16"/></index></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">pconf<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">p<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* the reverse of pre_config, we want this only the first time around */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">retained<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">module_loads<pos:position pos:line="13" pos:column="31"/></name></name> <operator pos:line="13" pos:column="32">==<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="35">1<pos:position pos:line="13" pos:column="36"/></literal></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37"> <block pos:line="13" pos:column="38">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">startup<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">1<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">level_flags<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">|=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">APLOG_STARTUP<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">num_listensocks<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <call><name pos:line="18" pos:column="28">ap_setup_listeners<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">ap_server_conf<pos:position pos:line="18" pos:column="61"/></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call><operator pos:line="18" pos:column="62">)<pos:position pos:line="18" pos:column="63"/></operator> <operator pos:line="18" pos:column="64">&lt;<pos:position pos:line="18" pos:column="68"/></operator> <literal type="number" pos:line="18" pos:column="66">1<pos:position pos:line="18" pos:column="67"/></literal></expr>)<pos:position pos:line="18" pos:column="68"/></condition><then pos:line="18" pos:column="68"> <block pos:line="18" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">ap_log_error<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">APLOG_MARK<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">APLOG_ALERT<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">|<pos:position pos:line="19" pos:column="47"/></operator> <name pos:line="19" pos:column="48">level_flags<pos:position pos:line="19" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="61">0<pos:position pos:line="19" pos:column="62"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="20" pos:column="22">(<pos:position pos:line="20" pos:column="23"/></operator><ternary><condition><expr><name pos:line="20" pos:column="23">startup<pos:position pos:line="20" pos:column="30"/></name></expr> ?<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32"> <expr><name pos:line="20" pos:column="33">NULL<pos:position pos:line="20" pos:column="37"/></name></expr> <pos:position pos:line="20" pos:column="38"/></then><else pos:line="20" pos:column="38">: <expr><name pos:line="20" pos:column="40">s<pos:position pos:line="20" pos:column="41"/></name></expr></else></ternary><operator pos:line="20" pos:column="41">)<pos:position pos:line="20" pos:column="42"/></operator></expr></argument>,
                     <argument><expr><literal type="string" pos:line="21" pos:column="22">"no listening sockets available, shutting down"<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">DONE<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">one_process<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21"> <block pos:line="25" pos:column="22">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">num_buckets<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">1<pos:position pos:line="26" pos:column="24"/></literal></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><operator pos:line="28" pos:column="14">!<pos:position pos:line="28" pos:column="15"/></operator><name><name pos:line="28" pos:column="15">retained<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">is_graceful<pos:position pos:line="28" pos:column="36"/></name></name></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37"> <block pos:line="28" pos:column="38">{ <comment type="block" pos:line="28" pos:column="40">/* Preserve the number of buckets
                                          on graceful restarts. */</comment>
        <expr_stmt><expr><name pos:line="30" pos:column="9">num_buckets<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <literal type="number" pos:line="30" pos:column="23">0<pos:position pos:line="30" pos:column="24"/></literal></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">rv<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">ap_duplicate_listeners<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">pconf<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="45">ap_server_conf<pos:position pos:line="32" pos:column="59"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="33" pos:column="38">&amp;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="39">listen_buckets<pos:position pos:line="33" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="55">&amp;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="56">num_buckets<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call><operator pos:line="33" pos:column="68">)<pos:position pos:line="33" pos:column="69"/></operator></expr>)<pos:position pos:line="33" pos:column="70"/></condition><then pos:line="33" pos:column="70"> <block pos:line="33" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_log_error<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">APLOG_MARK<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">APLOG_CRIT<pos:position pos:line="34" pos:column="44"/></name> <operator pos:line="34" pos:column="45">|<pos:position pos:line="34" pos:column="46"/></operator> <name pos:line="34" pos:column="47">level_flags<pos:position pos:line="34" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="60">rv<pos:position pos:line="34" pos:column="62"/></name></expr></argument>,
                     <argument><expr><operator pos:line="35" pos:column="22">(<pos:position pos:line="35" pos:column="23"/></operator><ternary><condition><expr><name pos:line="35" pos:column="23">startup<pos:position pos:line="35" pos:column="30"/></name></expr> ?<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32"> <expr><name pos:line="35" pos:column="33">NULL<pos:position pos:line="35" pos:column="37"/></name></expr> <pos:position pos:line="35" pos:column="38"/></then><else pos:line="35" pos:column="38">: <expr><name pos:line="35" pos:column="40">s<pos:position pos:line="35" pos:column="41"/></name></expr></else></ternary><operator pos:line="35" pos:column="41">)<pos:position pos:line="35" pos:column="42"/></operator></expr></argument>,
                     <argument><expr><literal type="string" pos:line="36" pos:column="22">"could not duplicate listeners"<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">DONE<pos:position pos:line="37" pos:column="20"/></name></expr>;<pos:position pos:line="37" pos:column="21"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="39" pos:column="5">all_buckets<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <call><name pos:line="39" pos:column="19">apr_pcalloc<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><name pos:line="39" pos:column="31">pconf<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">num_buckets<pos:position pos:line="39" pos:column="49"/></name> <operator pos:line="39" pos:column="50">*<pos:position pos:line="39" pos:column="51"/></operator>
                                     <sizeof pos:line="40" pos:column="38">sizeof<argument_list pos:line="40" pos:column="44">(<argument><expr><name pos:line="40" pos:column="45">prefork_child_bucket<pos:position pos:line="40" pos:column="65"/></name></expr></argument>)<pos:position pos:line="40" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="68"/></expr_stmt>
    <for pos:line="41" pos:column="5">for <control pos:line="41" pos:column="9">(<init><expr><name pos:line="41" pos:column="10">i<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <literal type="number" pos:line="41" pos:column="14">0<pos:position pos:line="41" pos:column="15"/></literal></expr>;<pos:position pos:line="41" pos:column="16"/></init> <condition><expr><name pos:line="41" pos:column="17">i<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">&lt;<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="21">num_buckets<pos:position pos:line="41" pos:column="32"/></name></expr>;<pos:position pos:line="41" pos:column="33"/></condition> <incr><expr><name pos:line="41" pos:column="34">i<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">++<pos:position pos:line="41" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="38"/></control> <block pos:line="41" pos:column="39">{
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">one_process<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">&amp;&amp;<pos:position pos:line="42" pos:column="36"/></operator> <comment type="block" pos:line="42" pos:column="29">/* no POD in one_process mode */</comment>
                <operator pos:line="43" pos:column="17">(<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">rv<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <call><name pos:line="43" pos:column="23">ap_mpm_pod_open<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">pconf<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="46">&amp;<pos:position pos:line="43" pos:column="51"/></operator><name><name pos:line="43" pos:column="47">all_buckets<pos:position pos:line="43" pos:column="58"/></name><index pos:line="43" pos:column="58">[<expr><name pos:line="43" pos:column="59">i<pos:position pos:line="43" pos:column="60"/></name></expr>]<pos:position pos:line="43" pos:column="61"/></index></name><operator pos:line="43" pos:column="61">.<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="62">pod<pos:position pos:line="43" pos:column="65"/></name></expr></argument>)<pos:position pos:line="43" pos:column="66"/></argument_list></call><operator pos:line="43" pos:column="66">)<pos:position pos:line="43" pos:column="67"/></operator></expr>)<pos:position pos:line="43" pos:column="68"/></condition><then pos:line="43" pos:column="68"> <block pos:line="43" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">ap_log_error<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">APLOG_MARK<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">APLOG_CRIT<pos:position pos:line="44" pos:column="48"/></name> <operator pos:line="44" pos:column="49">|<pos:position pos:line="44" pos:column="50"/></operator> <name pos:line="44" pos:column="51">level_flags<pos:position pos:line="44" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="64">rv<pos:position pos:line="44" pos:column="66"/></name></expr></argument>,
                         <argument><expr><operator pos:line="45" pos:column="26">(<pos:position pos:line="45" pos:column="27"/></operator><ternary><condition><expr><name pos:line="45" pos:column="27">startup<pos:position pos:line="45" pos:column="34"/></name></expr> ?<pos:position pos:line="45" pos:column="36"/></condition><then pos:line="45" pos:column="36"> <expr><name pos:line="45" pos:column="37">NULL<pos:position pos:line="45" pos:column="41"/></name></expr> <pos:position pos:line="45" pos:column="42"/></then><else pos:line="45" pos:column="42">: <expr><name pos:line="45" pos:column="44">s<pos:position pos:line="45" pos:column="45"/></name></expr></else></ternary><operator pos:line="45" pos:column="45">)<pos:position pos:line="45" pos:column="46"/></operator></expr></argument>,
                         <argument><expr><literal type="string" pos:line="46" pos:column="26">"could not open pipe-of-death"<pos:position pos:line="46" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="58"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">DONE<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="49" pos:column="9">/* Initialize cross-process accept lock (safe accept needed only) */</comment>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">rv<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <call><name pos:line="50" pos:column="19">SAFE_ACCEPT<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><operator pos:line="50" pos:column="31">(<pos:position pos:line="50" pos:column="32"/></operator><call><name pos:line="50" pos:column="32">apr_snprintf<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name pos:line="50" pos:column="45">id<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="49">sizeof <name pos:line="50" pos:column="56">id<pos:position pos:line="50" pos:column="58"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="60">"%i"<pos:position pos:line="50" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="66">i<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call><operator pos:line="50" pos:column="68">,<pos:position pos:line="50" pos:column="69"/></operator>
                               <call><name pos:line="51" pos:column="32">ap_proc_mutex_create<pos:position pos:line="51" pos:column="52"/></name><argument_list pos:line="51" pos:column="52">(<argument><expr><operator pos:line="51" pos:column="53">&amp;<pos:position pos:line="51" pos:column="58"/></operator><name><name pos:line="51" pos:column="54">all_buckets<pos:position pos:line="51" pos:column="65"/></name><index pos:line="51" pos:column="65">[<expr><name pos:line="51" pos:column="66">i<pos:position pos:line="51" pos:column="67"/></name></expr>]<pos:position pos:line="51" pos:column="68"/></index></name><operator pos:line="51" pos:column="68">.<pos:position pos:line="51" pos:column="69"/></operator><name pos:line="51" pos:column="69">mutex<pos:position pos:line="51" pos:column="74"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="52" pos:column="53">NULL<pos:position pos:line="52" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="59">AP_ACCEPT_MUTEX_TYPE<pos:position pos:line="52" pos:column="79"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="53" pos:column="53">id<pos:position pos:line="53" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="57">s<pos:position pos:line="53" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="60">pconf<pos:position pos:line="53" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="67">0<pos:position pos:line="53" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="69"/></argument_list></call><operator pos:line="53" pos:column="69">)<pos:position pos:line="53" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call><operator pos:line="53" pos:column="71">)<pos:position pos:line="53" pos:column="72"/></operator></expr>)<pos:position pos:line="53" pos:column="73"/></condition><then pos:line="53" pos:column="73"> <block pos:line="53" pos:column="74">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_log_error<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">APLOG_MARK<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">APLOG_CRIT<pos:position pos:line="54" pos:column="48"/></name> <operator pos:line="54" pos:column="49">|<pos:position pos:line="54" pos:column="50"/></operator> <name pos:line="54" pos:column="51">level_flags<pos:position pos:line="54" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="64">rv<pos:position pos:line="54" pos:column="66"/></name></expr></argument>,
                         <argument><expr><operator pos:line="55" pos:column="26">(<pos:position pos:line="55" pos:column="27"/></operator><ternary><condition><expr><name pos:line="55" pos:column="27">startup<pos:position pos:line="55" pos:column="34"/></name></expr> ?<pos:position pos:line="55" pos:column="36"/></condition><then pos:line="55" pos:column="36"> <expr><name pos:line="55" pos:column="37">NULL<pos:position pos:line="55" pos:column="41"/></name></expr> <pos:position pos:line="55" pos:column="42"/></then><else pos:line="55" pos:column="42">: <expr><name pos:line="55" pos:column="44">s<pos:position pos:line="55" pos:column="45"/></name></expr></else></ternary><operator pos:line="55" pos:column="45">)<pos:position pos:line="55" pos:column="46"/></operator></expr></argument>,
                         <argument><expr><literal type="string" pos:line="56" pos:column="26">"could not create accept mutex"<pos:position pos:line="56" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="59"/></expr_stmt>
            <return pos:line="57" pos:column="13">return <expr><name pos:line="57" pos:column="20">DONE<pos:position pos:line="57" pos:column="24"/></name></expr>;<pos:position pos:line="57" pos:column="25"/></return>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">all_buckets<pos:position pos:line="59" pos:column="20"/></name><index pos:line="59" pos:column="20">[<expr><name pos:line="59" pos:column="21">i<pos:position pos:line="59" pos:column="22"/></name></expr>]<pos:position pos:line="59" pos:column="23"/></index></name><operator pos:line="59" pos:column="23">.<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">listeners<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">=<pos:position pos:line="59" pos:column="35"/></operator> <name><name pos:line="59" pos:column="36">listen_buckets<pos:position pos:line="59" pos:column="50"/></name><index pos:line="59" pos:column="50">[<expr><name pos:line="59" pos:column="51">i<pos:position pos:line="59" pos:column="52"/></name></expr>]<pos:position pos:line="59" pos:column="53"/></index></name></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></for>

    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">OK<pos:position pos:line="62" pos:column="14"/></name></expr>;<pos:position pos:line="62" pos:column="15"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_72_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">start_connect<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">connection<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type> <name pos:line="1" pos:column="47">c<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">USE_SSL<pos:position pos:line="5" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">ssl<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18"> <block pos:line="6" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">ssl_start_connect<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">c<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
    
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">started<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&lt;<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="21">requests<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">)<pos:position pos:line="12" pos:column="30"/></operator></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
	<block type="pseudo"><return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">c<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">read<pos:position pos:line="15" pos:column="12"/></name></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">c<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">bread<pos:position pos:line="16" pos:column="13"/></name></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">c<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">keepalive<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <literal type="number" pos:line="17" pos:column="20">0<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">c<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">cbx<pos:position pos:line="18" pos:column="11"/></name></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">c<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">gotheader<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">c<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">rwrite<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">c<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">ctx<pos:position pos:line="21" pos:column="15"/></name></name></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="9">apr_pool_destroy<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name><name pos:line="22" pos:column="26">c<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">ctx<pos:position pos:line="22" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">apr_pool_create<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><operator pos:line="23" pos:column="21">&amp;<pos:position pos:line="23" pos:column="26"/></operator><name><name pos:line="23" pos:column="22">c<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="25">ctx<pos:position pos:line="23" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">cntxt<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">rv<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">apr_socket_create<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><operator pos:line="25" pos:column="33">&amp;<pos:position pos:line="25" pos:column="38"/></operator><name><name pos:line="25" pos:column="34">c<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">aprsock<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="46">destsa<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">family<pos:position pos:line="25" pos:column="60"/></name></name></expr></argument>,
				<argument><expr><name pos:line="26" pos:column="33">SOCK_STREAM<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="46">c<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">-&gt;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="49">ctx<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call><operator pos:line="26" pos:column="53">)<pos:position pos:line="26" pos:column="54"/></operator> <operator pos:line="26" pos:column="55">!=<pos:position pos:line="26" pos:column="57"/></operator> <name pos:line="26" pos:column="58">APR_SUCCESS<pos:position pos:line="26" pos:column="69"/></name></expr>)<pos:position pos:line="26" pos:column="70"/></condition><then pos:line="26" pos:column="70"> <block pos:line="26" pos:column="71">{
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_err<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><literal type="string" pos:line="27" pos:column="17">"socket"<pos:position pos:line="27" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">rv<pos:position pos:line="27" pos:column="29"/></name></expr></argument>)<pos:position pos:line="27" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">rv<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">apr_socket_opt_set<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name><name pos:line="29" pos:column="34">c<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">aprsock<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">APR_SO_NONBLOCK<pos:position pos:line="29" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="63">1<pos:position pos:line="29" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call><operator pos:line="29" pos:column="65">)<pos:position pos:line="29" pos:column="66"/></operator>
         <operator pos:line="30" pos:column="10">!=<pos:position pos:line="30" pos:column="12"/></operator> <name pos:line="30" pos:column="13">APR_SUCCESS<pos:position pos:line="30" pos:column="24"/></name></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25"> <block pos:line="30" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">apr_err<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><literal type="string" pos:line="31" pos:column="17">"socket nonblock"<pos:position pos:line="31" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">rv<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">c<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">start<pos:position pos:line="33" pos:column="13"/></name></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">apr_time_now<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">()<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">rv<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">apr_connect<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name><name pos:line="34" pos:column="27">c<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">aprsock<pos:position pos:line="34" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">destsa<pos:position pos:line="34" pos:column="45"/></name></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call><operator pos:line="34" pos:column="46">)<pos:position pos:line="34" pos:column="47"/></operator> <operator pos:line="34" pos:column="48">!=<pos:position pos:line="34" pos:column="50"/></operator> <name pos:line="34" pos:column="51">APR_SUCCESS<pos:position pos:line="34" pos:column="62"/></name></expr>)<pos:position pos:line="34" pos:column="63"/></condition><then pos:line="34" pos:column="63"> <block pos:line="34" pos:column="64">{
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name pos:line="35" pos:column="13">APR_STATUS_IS_EINPROGRESS<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">rv<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43"> <block pos:line="35" pos:column="44">{
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">apr_pollfd_t<pos:position pos:line="36" pos:column="25"/></name></type> <name pos:line="36" pos:column="26">new_pollfd<pos:position pos:line="36" pos:column="36"/></name></decl>;<pos:position pos:line="36" pos:column="37"/></decl_stmt>
	    <expr_stmt><expr><name><name pos:line="37" pos:column="13">c<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">state<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">STATE_CONNECTING<pos:position pos:line="37" pos:column="40"/></name></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="38" pos:column="13">c<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">rwrite<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <literal type="number" pos:line="38" pos:column="25">0<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">new_pollfd<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">desc_type<pos:position pos:line="39" pos:column="33"/></name></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">APR_POLL_SOCKET<pos:position pos:line="39" pos:column="51"/></name></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">new_pollfd<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">reqevents<pos:position pos:line="40" pos:column="33"/></name></name> <operator pos:line="40" pos:column="34">=<pos:position pos:line="40" pos:column="35"/></operator> <name pos:line="40" pos:column="36">APR_POLLIN<pos:position pos:line="40" pos:column="46"/></name></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">new_pollfd<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">.<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">desc<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">.<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="29">s<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <name><name pos:line="41" pos:column="33">c<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">aprsock<pos:position pos:line="41" pos:column="43"/></name></name></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">new_pollfd<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">.<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">client_data<pos:position pos:line="42" pos:column="35"/></name></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">c<pos:position pos:line="42" pos:column="39"/></name></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="43" pos:column="13">apr_pollset_add<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">readbits<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="39">&amp;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="40">new_pollfd<pos:position pos:line="43" pos:column="50"/></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
	    <return pos:line="44" pos:column="13">return;<pos:position pos:line="44" pos:column="20"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then>
	<else pos:line="46" pos:column="9">else <block pos:line="46" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="47" pos:column="13">apr_pollfd_t<pos:position pos:line="47" pos:column="25"/></name></type> <name pos:line="47" pos:column="26">remove_pollfd<pos:position pos:line="47" pos:column="39"/></name></decl>;<pos:position pos:line="47" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="48" pos:column="13">remove_pollfd<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">.<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="27">desc_type<pos:position pos:line="48" pos:column="36"/></name></name> <operator pos:line="48" pos:column="37">=<pos:position pos:line="48" pos:column="38"/></operator> <name pos:line="48" pos:column="39">APR_POLL_SOCKET<pos:position pos:line="48" pos:column="54"/></name></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">remove_pollfd<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">.<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="27">desc<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">.<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="32">s<pos:position pos:line="49" pos:column="33"/></name></name> <operator pos:line="49" pos:column="34">=<pos:position pos:line="49" pos:column="35"/></operator> <name><name pos:line="49" pos:column="36">c<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">-&gt;<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="39">aprsock<pos:position pos:line="49" pos:column="46"/></name></name></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="50" pos:column="13">apr_pollset_remove<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">readbits<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="42">&amp;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="43">remove_pollfd<pos:position pos:line="50" pos:column="56"/></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="51" pos:column="13">apr_socket_close<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><name><name pos:line="51" pos:column="30">c<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">-&gt;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="33">aprsock<pos:position pos:line="51" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="42"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="52" pos:column="13">err_conn<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">++<pos:position pos:line="52" pos:column="23"/></operator></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt>
	    <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><name pos:line="53" pos:column="17">bad<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">++<pos:position pos:line="53" pos:column="22"/></operator> <operator pos:line="53" pos:column="23">&gt;<pos:position pos:line="53" pos:column="27"/></operator> <literal type="number" pos:line="53" pos:column="25">10<pos:position pos:line="53" pos:column="27"/></literal></expr>)<pos:position pos:line="53" pos:column="28"/></condition><then pos:line="53" pos:column="28"> <block pos:line="53" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">fprintf<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">stderr<pos:position pos:line="54" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="55" pos:column="25">"\nTest aborted after 10 failures\n\n"<pos:position pos:line="55" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">apr_err<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><literal type="string" pos:line="56" pos:column="25">"apr_connect()"<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">rv<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>
	    }<pos:position pos:line="57" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><name><name pos:line="58" pos:column="13">c<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">state<pos:position pos:line="58" pos:column="21"/></name></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">STATE_UNCONNECTED<pos:position pos:line="58" pos:column="41"/></name></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="59" pos:column="13">start_connect<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><name pos:line="59" pos:column="27">c<pos:position pos:line="59" pos:column="28"/></name></expr></argument>)<pos:position pos:line="59" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="30"/></expr_stmt>
	    <return pos:line="60" pos:column="13">return;<pos:position pos:line="60" pos:column="20"/></return>
	}<pos:position pos:line="61" pos:column="10"/></block></else></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/* connected first time */</comment>
    <expr_stmt><expr><name pos:line="65" pos:column="5">started<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">++<pos:position pos:line="65" pos:column="14"/></operator></expr>;<pos:position pos:line="65" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">write_request<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><name pos:line="66" pos:column="19">c<pos:position pos:line="66" pos:column="20"/></name></expr></argument>)<pos:position pos:line="66" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

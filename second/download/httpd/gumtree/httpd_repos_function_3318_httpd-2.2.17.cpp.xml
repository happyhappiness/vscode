<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3318_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">socket_bucket_read<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">apr_bucket<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">a<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier><modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">str<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">apr_size_t<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">len<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">apr_read_type_e<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">block<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_socket_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">p<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name><name pos:line="4" pos:column="23">a<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">data<pos:position pos:line="4" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">buf<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_interval_time_t<pos:position pos:line="7" pos:column="24"/></name></type> <name pos:line="7" pos:column="25">timeout<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">block<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">==<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">APR_NONBLOCK_READ<pos:position pos:line="9" pos:column="35"/></name></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <block pos:line="9" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_socket_timeout_get<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">p<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="36">timeout<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">apr_socket_timeout_set<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">p<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">str<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">NULL<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">len<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <name pos:line="15" pos:column="12">APR_BUCKET_BUFF_SIZE<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">buf<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">apr_bucket_alloc<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><operator pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">len<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="34">a<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">list<pos:position pos:line="16" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt> <comment type="block" pos:line="16" pos:column="44">/* XXX: check for failure? */</comment>

    <expr_stmt><expr><name pos:line="18" pos:column="5">rv<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">apr_socket_recv<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">p<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="29">buf<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">len<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">block<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">==<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">APR_NONBLOCK_READ<pos:position pos:line="20" pos:column="35"/></name></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36"> <block pos:line="20" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">apr_socket_timeout_set<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">p<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">timeout<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">rv<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">!=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">APR_SUCCESS<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">&amp;&amp;<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="30">rv<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">!=<pos:position pos:line="24" pos:column="35"/></operator> <name pos:line="24" pos:column="36">APR_EOF<pos:position pos:line="24" pos:column="43"/></name></expr>)<pos:position pos:line="24" pos:column="44"/></condition><then pos:line="24" pos:column="44"> <block pos:line="24" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">apr_bucket_free<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">buf<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">rv<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="28" pos:column="5">/*
     * If there's more to read we have to keep the rest of the socket
     * for later. XXX: Note that more complicated bucket types that
     * refer to data not in memory and must therefore have a read()
     * function similar to this one should be wary of copying this
     * code because if they have a destroy function they probably
     * want to migrate the bucket's subordinate structure from the
     * old bucket to a raw new one and adjust it as appropriate,
     * rather than destroying the old one and creating a completely
     * new bucket.
     *
     * Even if there is nothing more to read, don't close the socket here
     * as we have to use it to send any response :)  We could shut it 
     * down for reading, but there is no benefit to doing so.
     */</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><operator pos:line="43" pos:column="9">*<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">len<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">&gt;<pos:position pos:line="43" pos:column="18"/></operator> <literal type="number" pos:line="43" pos:column="16">0<pos:position pos:line="43" pos:column="17"/></literal></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
        <decl_stmt><decl><type><name pos:line="44" pos:column="9">apr_bucket_heap<pos:position pos:line="44" pos:column="24"/></name> <modifier pos:line="44" pos:column="25">*<pos:position pos:line="44" pos:column="26"/></modifier></type><name pos:line="44" pos:column="26">h<pos:position pos:line="44" pos:column="27"/></name></decl>;<pos:position pos:line="44" pos:column="28"/></decl_stmt>
        <comment type="block" pos:line="45" pos:column="9">/* Change the current bucket to refer to what we read */</comment>
        <expr_stmt><expr><name pos:line="46" pos:column="9">a<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <call><name pos:line="46" pos:column="13">apr_bucket_heap_make<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">a<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">buf<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="42">*<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="43">len<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">apr_bucket_free<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="47" pos:column="9">h<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <name><name pos:line="47" pos:column="13">a<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">data<pos:position pos:line="47" pos:column="20"/></name></name></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">h<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">alloc_len<pos:position pos:line="48" pos:column="21"/></name></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">APR_BUCKET_BUFF_SIZE<pos:position pos:line="48" pos:column="44"/></name></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt> <comment type="block" pos:line="48" pos:column="46">/* note the real buffer size */</comment>
        <expr_stmt><expr><operator pos:line="49" pos:column="9">*<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">str<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <name pos:line="49" pos:column="16">buf<pos:position pos:line="49" pos:column="19"/></name></expr>;<pos:position pos:line="49" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">APR_BUCKET_INSERT_AFTER<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name pos:line="50" pos:column="33">a<pos:position pos:line="50" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="36">apr_bucket_socket_create<pos:position pos:line="50" pos:column="60"/></name><argument_list pos:line="50" pos:column="60">(<argument><expr><name pos:line="50" pos:column="61">p<pos:position pos:line="50" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="64">a<pos:position pos:line="50" pos:column="65"/></name><operator pos:line="50" pos:column="65">-&gt;<pos:position pos:line="50" pos:column="70"/></operator><name pos:line="50" pos:column="67">list<pos:position pos:line="50" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then>
    <else pos:line="52" pos:column="5">else <block pos:line="52" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">apr_bucket_free<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">buf<pos:position pos:line="53" pos:column="28"/></name></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">a<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <call><name pos:line="54" pos:column="13">apr_bucket_immortal_make<pos:position pos:line="54" pos:column="37"/></name><argument_list pos:line="54" pos:column="37">(<argument><expr><name pos:line="54" pos:column="38">a<pos:position pos:line="54" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="41">""<pos:position pos:line="54" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="45">0<pos:position pos:line="54" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="55" pos:column="9">*<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">str<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <name><name pos:line="55" pos:column="16">a<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">data<pos:position pos:line="55" pos:column="23"/></name></name></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>
    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">APR_SUCCESS<pos:position pos:line="57" pos:column="23"/></name></expr>;<pos:position pos:line="57" pos:column="24"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

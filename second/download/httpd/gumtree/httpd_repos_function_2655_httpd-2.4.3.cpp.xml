<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2655_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">method_parse_config<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">cmd_parms<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">cmd<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">require_line<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">void<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">parsed_require_line<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">w<pos:position pos:line="4" pos:column="18"/></name></decl>, <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="21">t<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_int64_t<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">allowed<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><call><name pos:line="5" pos:column="28">apr_pcalloc<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name><name pos:line="5" pos:column="40">cmd<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">-&gt;<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="45">pool<pos:position pos:line="5" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="51">sizeof<argument_list pos:line="5" pos:column="57">(<argument><expr><name pos:line="5" pos:column="58">apr_int64_t<pos:position pos:line="5" pos:column="69"/></name></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="72"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">t<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <name pos:line="7" pos:column="9">require_line<pos:position pos:line="7" pos:column="21"/></name></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">w<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">ap_getword_conf<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name><name pos:line="9" pos:column="33">cmd<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">temp_pool<pos:position pos:line="9" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="49">&amp;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="50">t<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call><operator pos:line="9" pos:column="52">)<pos:position pos:line="9" pos:column="53"/></operator> <operator pos:line="9" pos:column="54">&amp;&amp;<pos:position pos:line="9" pos:column="64"/></operator> <name><name pos:line="9" pos:column="57">w<pos:position pos:line="9" pos:column="58"/></name><index pos:line="9" pos:column="58">[<expr><literal type="number" pos:line="9" pos:column="59">0<pos:position pos:line="9" pos:column="60"/></literal></expr>]<pos:position pos:line="9" pos:column="61"/></index></name></expr>)<pos:position pos:line="9" pos:column="62"/></condition> <block pos:line="9" pos:column="63">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">m<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><call><name pos:line="10" pos:column="17">ap_method_number_of<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">w<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">m<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">M_INVALID<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <block pos:line="11" pos:column="29">{
            <return pos:line="12" pos:column="13">return <expr><call><name pos:line="12" pos:column="20">apr_pstrcat<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name><name pos:line="12" pos:column="32">cmd<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">pool<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="43">"Invalid Method '"<pos:position pos:line="12" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="63">w<pos:position pos:line="12" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="66">"'"<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="71">NULL<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">allowed<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">|=<pos:position pos:line="15" pos:column="20"/></operator> <operator pos:line="15" pos:column="21">(<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">AP_METHOD_BIT<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">&lt;&lt;<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="39">m<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">)<pos:position pos:line="15" pos:column="41"/></operator></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">parsed_require_line<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">allowed<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">NULL<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

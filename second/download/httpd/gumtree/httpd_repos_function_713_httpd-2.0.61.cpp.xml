<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_713_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">long<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">ssl_util_thr_id<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">void<pos:position pos:line="1" pos:column="42"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* OpenSSL needs this to return an unsigned long.  On OS/390, the pthread 
     * id is a structure twice that big.  Use the TCB pointer instead as a 
     * unique unsigned long.
     */</comment>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">__MVS__<pos:position pos:line="7" pos:column="15"/></name></cpp:ifdef>
    <struct pos:line="8" pos:column="5">struct <name pos:line="8" pos:column="12">PSA<pos:position pos:line="8" pos:column="15"/></name> <block pos:line="8" pos:column="16">{<public type="default" pos:line="8" pos:column="17">
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">unmapped<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[<expr><literal type="number" pos:line="9" pos:column="23">540<pos:position pos:line="9" pos:column="26"/></literal></expr>]<pos:position pos:line="9" pos:column="27"/></index></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">long<pos:position pos:line="10" pos:column="22"/></name></type> <name pos:line="10" pos:column="23">PSATOLD<pos:position pos:line="10" pos:column="30"/></name></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <pos:position pos:line="11" pos:column="5"/></public>}<pos:position pos:line="11" pos:column="6"/></block> <decl><modifier pos:line="11" pos:column="7">*<pos:position pos:line="11" pos:column="8"/></modifier><name pos:line="11" pos:column="8">psaptr<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="19"/></struct>

    <return pos:line="13" pos:column="5">return <expr><name><name pos:line="13" pos:column="12">psaptr<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">PSATOLD<pos:position pos:line="13" pos:column="27"/></name></name></expr>;<pos:position pos:line="13" pos:column="28"/></return>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">unsigned<pos:position pos:line="15" pos:column="21"/></name> <name pos:line="15" pos:column="22">long<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator> <call><name pos:line="15" pos:column="28">apr_os_thread_current<pos:position pos:line="15" pos:column="49"/></name><argument_list pos:line="15" pos:column="49">()<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></return>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

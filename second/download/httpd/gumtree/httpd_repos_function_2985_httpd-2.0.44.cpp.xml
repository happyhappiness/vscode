<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2985_httpd-2.0.44.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_create_ex<pos:position pos:line="1" pos:column="34"/></name><argument_list pos:line="1" pos:column="34">(<argument><expr><name pos:line="1" pos:column="35">apr_socket_t<pos:position pos:line="1" pos:column="47"/></name> <operator pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></operator><operator pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></operator><operator pos:line="1" pos:column="50">new<pos:position pos:line="1" pos:column="53"/></operator></expr></argument>, <argument><expr><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">ofamily<pos:position pos:line="1" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name> <name pos:line="1" pos:column="72">type<pos:position pos:line="1" pos:column="76"/></name></expr></argument>,
                                  <argument><expr><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">protocol<pos:position pos:line="2" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="49">apr_pool_t<pos:position pos:line="2" pos:column="59"/></name> <operator pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></operator><name pos:line="2" pos:column="61">cont<pos:position pos:line="2" pos:column="65"/></name></expr></argument>)<pos:position pos:line="2" pos:column="66"/></argument_list>
<argument_list pos:line="3" pos:column="1">{
    <argument><expr><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name> <name pos:line="4" pos:column="9">family<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">ofamily<pos:position pos:line="4" pos:column="25"/></name></expr></argument>;

    if <argument><expr><operator pos:line="6" pos:column="8">(<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">family<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">==<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">APR_UNSPEC<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator> <block pos:line="6" pos:column="31">{
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="7" pos:column="18"/></name></expr></cpp:if>
        <expr><name pos:line="8" pos:column="9">family<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">APR_INET6<pos:position pos:line="8" pos:column="27"/></name></expr>;
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
        <expr><name pos:line="10" pos:column="9">family<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">APR_INET<pos:position pos:line="10" pos:column="26"/></name></expr>;
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="12" pos:column="6"/></block>

    <call><name pos:line="14" pos:column="5">alloc_socket<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><operator pos:line="14" pos:column="18">new<pos:position pos:line="14" pos:column="21"/></operator></expr></argument>, <argument><expr><name pos:line="14" pos:column="23">cont<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr></argument>;

    <argument><expr><operator pos:line="16" pos:column="5">(<pos:position pos:line="16" pos:column="6"/></operator><operator pos:line="16" pos:column="6">*<pos:position pos:line="16" pos:column="7"/></operator><operator pos:line="16" pos:column="7">new<pos:position pos:line="16" pos:column="10"/></operator><operator pos:line="16" pos:column="10">)<pos:position pos:line="16" pos:column="11"/></operator><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">socketdes<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <call><name pos:line="16" pos:column="25">socket<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">family<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">type<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">protocol<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></argument>;

<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><name pos:line="18" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="18" pos:column="18"/></name></expr></cpp:if>
    if <argument><expr><operator pos:line="19" pos:column="8">(<pos:position pos:line="19" pos:column="9"/></operator><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><operator pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></operator><operator pos:line="19" pos:column="11">new<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">)<pos:position pos:line="19" pos:column="15"/></operator><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">socketdes<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&lt;<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="29">0<pos:position pos:line="19" pos:column="30"/></literal> <operator pos:line="19" pos:column="31">&amp;&amp;<pos:position pos:line="19" pos:column="41"/></operator> <name pos:line="19" pos:column="34">ofamily<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">==<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">APR_UNSPEC<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">)<pos:position pos:line="19" pos:column="56"/></operator> <block pos:line="19" pos:column="57">{
        <expr><name pos:line="20" pos:column="9">family<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">APR_INET<pos:position pos:line="20" pos:column="26"/></name></expr>;
        <expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><operator pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></operator><operator pos:line="21" pos:column="11">new<pos:position pos:line="21" pos:column="14"/></operator><operator pos:line="21" pos:column="14">)<pos:position pos:line="21" pos:column="15"/></operator><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">socketdes<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <call><name pos:line="21" pos:column="29">socket<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">family<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">type<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">protocol<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;
    }<pos:position pos:line="22" pos:column="6"/></block></expr></argument>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><operator pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></operator><operator pos:line="25" pos:column="11">new<pos:position pos:line="25" pos:column="14"/></operator><operator pos:line="25" pos:column="14">)<pos:position pos:line="25" pos:column="15"/></operator><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">socketdes<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">&lt;<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="29">0<pos:position pos:line="25" pos:column="30"/></literal></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31"> <expr_stmt><expr><block pos:line="25" pos:column="32">{
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">errno<pos:position pos:line="26" pos:column="21"/></name></expr>;<pos:position pos:line="26" pos:column="22"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block>
    <call><name pos:line="28" pos:column="5">set_socket_vars<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><operator pos:line="28" pos:column="21">*<pos:position pos:line="28" pos:column="22"/></operator><operator pos:line="28" pos:column="22">new<pos:position pos:line="28" pos:column="25"/></operator></expr></argument>, <argument><expr><name pos:line="28" pos:column="27">family<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">type<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">protocol<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt></then></if></argument_list></decl></decl_stmt>

    <expr_stmt><expr><operator pos:line="30" pos:column="5">(<pos:position pos:line="30" pos:column="6"/></operator><operator pos:line="30" pos:column="6">*<pos:position pos:line="30" pos:column="7"/></operator><operator pos:line="30" pos:column="7">new<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">)<pos:position pos:line="30" pos:column="11"/></operator><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">timeout<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <operator pos:line="30" pos:column="23">-<pos:position pos:line="30" pos:column="24"/></operator><literal type="number" pos:line="30" pos:column="24">1<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="31" pos:column="5">(<pos:position pos:line="31" pos:column="6"/></operator><operator pos:line="31" pos:column="6">*<pos:position pos:line="31" pos:column="7"/></operator><operator pos:line="31" pos:column="7">new<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">)<pos:position pos:line="31" pos:column="11"/></operator><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">inherit<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="23">0<pos:position pos:line="31" pos:column="24"/></literal></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">(<pos:position pos:line="32" pos:column="32"/></operator><operator pos:line="32" pos:column="32">*<pos:position pos:line="32" pos:column="33"/></operator><operator pos:line="32" pos:column="33">new<pos:position pos:line="32" pos:column="36"/></operator><operator pos:line="32" pos:column="36">)<pos:position pos:line="32" pos:column="37"/></operator><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">cntxt<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="46">(<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="47">void<pos:position pos:line="32" pos:column="51"/></name> <operator pos:line="32" pos:column="52">*<pos:position pos:line="32" pos:column="53"/></operator><operator pos:line="32" pos:column="53">)<pos:position pos:line="32" pos:column="54"/></operator><operator pos:line="32" pos:column="54">(<pos:position pos:line="32" pos:column="55"/></operator><operator pos:line="32" pos:column="55">*<pos:position pos:line="32" pos:column="56"/></operator><operator pos:line="32" pos:column="56">new<pos:position pos:line="32" pos:column="59"/></operator><operator pos:line="32" pos:column="59">)<pos:position pos:line="32" pos:column="60"/></operator></expr></argument>, <argument><expr><name pos:line="32" pos:column="62">socket_cleanup<pos:position pos:line="32" pos:column="76"/></name></expr></argument>,
                              <argument><expr><name pos:line="33" pos:column="31">socket_cleanup<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">APR_SUCCESS<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></return>
}</unit>

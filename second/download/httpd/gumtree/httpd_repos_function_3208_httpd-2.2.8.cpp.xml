<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3208_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">APR_INLINE<pos:position pos:line="1" pos:column="18"/></name> <name pos:line="1" pos:column="19">apr_status_t<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">_thread_cond_timedwait<pos:position pos:line="1" pos:column="54"/></name><parameter_list pos:line="1" pos:column="54">(<parameter><decl><type><name pos:line="1" pos:column="55">apr_thread_cond_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">cond<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                                                      <parameter><decl><type><name pos:line="2" pos:column="55">apr_thread_mutex_t<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">mutex<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                                                      <parameter><decl><type><name pos:line="3" pos:column="55">DWORD<pos:position pos:line="3" pos:column="60"/></name></type> <name pos:line="3" pos:column="61">timeout_ms<pos:position pos:line="3" pos:column="71"/></name></decl></parameter> )<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">DWORD<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">res<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr>)<pos:position pos:line="7" pos:column="14"/></condition> <block pos:line="7" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">cond<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">num_waiting<pos:position pos:line="8" pos:column="26"/></name></name><operator pos:line="8" pos:column="26">++<pos:position pos:line="8" pos:column="28"/></operator></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">mutex<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">res<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">WaitForSingleObject<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name><name pos:line="11" pos:column="35">cond<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">event<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">timeout_ms<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">mutex<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">cond<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">num_waiting<pos:position pos:line="13" pos:column="26"/></name></name><operator pos:line="13" pos:column="26">--<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">res<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">!=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">WAIT_OBJECT_0<pos:position pos:line="14" pos:column="33"/></name></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34"> <block pos:line="14" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">apr_status_t<pos:position pos:line="15" pos:column="25"/></name></type> <name pos:line="15" pos:column="26">rv<pos:position pos:line="15" pos:column="28"/></name> <init pos:line="15" pos:column="29">= <expr><call><name pos:line="15" pos:column="31">apr_get_os_error<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">()<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="50"/></decl_stmt>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">res<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">WAIT_TIMEOUT<pos:position pos:line="16" pos:column="36"/></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37"> <block pos:line="16" pos:column="38">{
                <return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">APR_TIMEUP<pos:position pos:line="17" pos:column="34"/></name></expr>;<pos:position pos:line="17" pos:column="35"/></return>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>
            <return pos:line="19" pos:column="13">return <expr><call><name pos:line="19" pos:column="20">apr_get_os_error<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">()<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">cond<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">signal_all<pos:position pos:line="21" pos:column="29"/></name></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30"> <block pos:line="21" pos:column="31">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name><name pos:line="22" pos:column="17">cond<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">num_waiting<pos:position pos:line="22" pos:column="34"/></name></name> <operator pos:line="22" pos:column="35">==<pos:position pos:line="22" pos:column="37"/></operator> <literal type="number" pos:line="22" pos:column="38">0<pos:position pos:line="22" pos:column="39"/></literal></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40"> <block pos:line="22" pos:column="41">{
                <expr_stmt><expr><name><name pos:line="23" pos:column="17">cond<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">signal_all<pos:position pos:line="23" pos:column="33"/></name></name> <operator pos:line="23" pos:column="34">=<pos:position pos:line="23" pos:column="35"/></operator> <literal type="number" pos:line="23" pos:column="36">0<pos:position pos:line="23" pos:column="37"/></literal></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="24" pos:column="17">cond<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">signalled<pos:position pos:line="24" pos:column="32"/></name></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">ResetEvent<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name><name pos:line="25" pos:column="28">cond<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">event<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></then></if>
            <break pos:line="27" pos:column="13">break;<pos:position pos:line="27" pos:column="19"/></break>
        }<pos:position pos:line="28" pos:column="10"/></block></then>
        <elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><name><name pos:line="29" pos:column="18">cond<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">signalled<pos:position pos:line="29" pos:column="33"/></name></name></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34"> <block pos:line="29" pos:column="35">{
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">cond<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">signalled<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="number" pos:line="30" pos:column="31">0<pos:position pos:line="30" pos:column="32"/></literal></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">ResetEvent<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name><name pos:line="31" pos:column="24">cond<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">event<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
            <break pos:line="32" pos:column="13">break;<pos:position pos:line="32" pos:column="19"/></break>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="34" pos:column="6"/></block></while>
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">APR_SUCCESS<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

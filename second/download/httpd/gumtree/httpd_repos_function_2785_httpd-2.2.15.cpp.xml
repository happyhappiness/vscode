<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2785_httpd-2.2.15.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">SQLRETURN<pos:position pos:line="1" pos:column="17"/></name></type> <name pos:line="1" pos:column="18">odbc_set_result_column<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">icol<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_dbd_results_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type> <name pos:line="1" pos:column="71">res<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, 
                                         <parameter><decl><type><name pos:line="2" pos:column="42">SQLHANDLE<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">stmt<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SQLRETURN<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">rc<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">maxsize<pos:position pos:line="5" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="18">textsize<pos:position pos:line="5" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="28">realsize<pos:position pos:line="5" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="38">type<pos:position pos:line="5" pos:column="42"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="44">isunsigned<pos:position pos:line="5" pos:column="54"/></name> <init pos:line="5" pos:column="55">= <expr><literal type="number" pos:line="5" pos:column="57">1<pos:position pos:line="5" pos:column="58"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>

     <comment type="block" pos:line="7" pos:column="6">/* discover the sql type */</comment>
    <expr_stmt><expr><name pos:line="8" pos:column="5">rc<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">SQLColAttribute<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">stmt<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">icol<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">+<pos:position pos:line="8" pos:column="38"/></operator> <literal type="number" pos:line="8" pos:column="39">1<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">SQL_DESC_UNSIGNED<pos:position pos:line="8" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="61">NULL<pos:position pos:line="8" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="67">0<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="70">NULL<pos:position pos:line="8" pos:column="74"/></name></expr></argument>,
                         <argument><expr><operator pos:line="9" pos:column="26">(<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">SQLPOINTER<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="39">&amp;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="40">isunsigned<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">isunsigned<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">isunsigned<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">==<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">SQL_TRUE<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">)<pos:position pos:line="10" pos:column="42"/></operator></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">rc<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">SQLColAttribute<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">stmt<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">icol<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">+<pos:position pos:line="12" pos:column="38"/></operator> <literal type="number" pos:line="12" pos:column="39">1<pos:position pos:line="12" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">SQL_DESC_TYPE<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">NULL<pos:position pos:line="12" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="63">0<pos:position pos:line="12" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="66">NULL<pos:position pos:line="12" pos:column="70"/></name></expr></argument>,
                         <argument><expr><operator pos:line="13" pos:column="26">(<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">SQLPOINTER<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator> <operator pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="40">type<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><call><name pos:line="14" pos:column="10">SQL_SUCCEEDED<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">rc<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call> <operator pos:line="14" pos:column="28">||<pos:position pos:line="14" pos:column="30"/></operator> <name pos:line="14" pos:column="31">type<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">==<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="39">SQL_UNKNOWN_TYPE<pos:position pos:line="14" pos:column="55"/></name></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
        <comment type="block" pos:line="15" pos:column="9">/* MANY ODBC v2 datasources only supply CONCISE_TYPE */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">rc<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">SQLColAttribute<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">stmt<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">icol<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">+<pos:position pos:line="16" pos:column="42"/></operator> <literal type="number" pos:line="16" pos:column="43">1<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">SQL_DESC_CONCISE_TYPE<pos:position pos:line="16" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="69">NULL<pos:position pos:line="16" pos:column="73"/></name></expr></argument>,
                             <argument><expr><literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">NULL<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="39">(<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">SQLPOINTER<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">)<pos:position pos:line="17" pos:column="51"/></operator> <operator pos:line="17" pos:column="52">&amp;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="53">type<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt></block></then></if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name pos:line="18" pos:column="10">SQL_SUCCEEDED<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">rc<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28">
        <comment type="block" pos:line="19" pos:column="9">/* if still unknown make it CHAR */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">type<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">SQL_C_CHAR<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt></block></then></if>

    <switch pos:line="22" pos:column="5">switch <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">type<pos:position pos:line="22" pos:column="17"/></name></expr>)<pos:position pos:line="22" pos:column="18"/></condition> <block pos:line="22" pos:column="19">{
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">SQL_INTEGER<pos:position pos:line="23" pos:column="21"/></name></expr>:<pos:position pos:line="23" pos:column="22"/></case>
    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">SQL_SMALLINT<pos:position pos:line="24" pos:column="22"/></name></expr>:<pos:position pos:line="24" pos:column="23"/></case>
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">SQL_TINYINT<pos:position pos:line="25" pos:column="21"/></name></expr>:<pos:position pos:line="25" pos:column="22"/></case>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">SQL_BIGINT<pos:position pos:line="26" pos:column="20"/></name></expr>:<pos:position pos:line="26" pos:column="21"/></case>
      <comment type="block" pos:line="27" pos:column="7">/* fix these numeric binary types up as signed/unsigned for C types */</comment>
      <expr_stmt><expr><name pos:line="28" pos:column="7">type<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">+=<pos:position pos:line="28" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="28" pos:column="15">(<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">isunsigned<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">)<pos:position pos:line="28" pos:column="27"/></operator></expr> ?<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29"> <expr><name pos:line="28" pos:column="30">SQL_UNSIGNED_OFFSET<pos:position pos:line="28" pos:column="49"/></name></expr> <pos:position pos:line="28" pos:column="50"/></then><else pos:line="28" pos:column="50">: <expr><name pos:line="28" pos:column="52">SQL_SIGNED_OFFSET<pos:position pos:line="28" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="70"/></expr_stmt>
      <break pos:line="29" pos:column="7">break;<pos:position pos:line="29" pos:column="13"/></break>
    <comment type="block" pos:line="30" pos:column="5">/* LOB types are not changed to C types */</comment>
    <case pos:line="31" pos:column="5">case <expr><name pos:line="31" pos:column="10">SQL_LONGVARCHAR<pos:position pos:line="31" pos:column="25"/></name></expr>:<pos:position pos:line="31" pos:column="26"/></case> 
        <expr_stmt><expr><name pos:line="32" pos:column="9">type<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">SQL_LONGVARCHAR<pos:position pos:line="32" pos:column="31"/></name></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt> 
        <break pos:line="33" pos:column="9">break;<pos:position pos:line="33" pos:column="15"/></break>
    <case pos:line="34" pos:column="5">case <expr><name pos:line="34" pos:column="10">SQL_LONGVARBINARY<pos:position pos:line="34" pos:column="27"/></name></expr>:<pos:position pos:line="34" pos:column="28"/></case> 
        <expr_stmt><expr><name pos:line="35" pos:column="9">type<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">SQL_LONGVARBINARY<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt> 
        <break pos:line="36" pos:column="9">break;<pos:position pos:line="36" pos:column="15"/></break>
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">SQL_FLOAT<pos:position pos:line="37" pos:column="19"/></name></expr> :<pos:position pos:line="37" pos:column="21"/></case> 
        <expr_stmt><expr><name pos:line="38" pos:column="9">type<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <name pos:line="38" pos:column="16">SQL_C_FLOAT<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt> 
        <break pos:line="39" pos:column="9">break;<pos:position pos:line="39" pos:column="15"/></break>
    <case pos:line="40" pos:column="5">case <expr><name pos:line="40" pos:column="10">SQL_DOUBLE<pos:position pos:line="40" pos:column="20"/></name></expr> :<pos:position pos:line="40" pos:column="22"/></case> 
        <expr_stmt><expr><name pos:line="41" pos:column="9">type<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">SQL_C_DOUBLE<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt> 
        <break pos:line="42" pos:column="9">break;<pos:position pos:line="42" pos:column="15"/></break>

    <comment type="block" pos:line="44" pos:column="5">/* DBD wants times as strings */</comment>
    <case pos:line="45" pos:column="5">case <expr><name pos:line="45" pos:column="10">SQL_TIMESTAMP<pos:position pos:line="45" pos:column="23"/></name></expr>:<pos:position pos:line="45" pos:column="24"/></case>      
    <case pos:line="46" pos:column="5">case <expr><name pos:line="46" pos:column="10">SQL_DATE<pos:position pos:line="46" pos:column="18"/></name></expr>:<pos:position pos:line="46" pos:column="19"/></case>
    <case pos:line="47" pos:column="5">case <expr><name pos:line="47" pos:column="10">SQL_TIME<pos:position pos:line="47" pos:column="18"/></name></expr>:<pos:position pos:line="47" pos:column="19"/></case>
    <default pos:line="48" pos:column="5">default:<pos:position pos:line="48" pos:column="13"/></default>
      <expr_stmt><expr><name pos:line="49" pos:column="7">type<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <name pos:line="49" pos:column="14">SQL_C_CHAR<pos:position pos:line="49" pos:column="24"/></name></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></switch>

    <expr_stmt><expr><name><name pos:line="52" pos:column="5">res<pos:position pos:line="52" pos:column="8"/></name><operator pos:line="52" pos:column="8">-&gt;<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="10">coltypes<pos:position pos:line="52" pos:column="18"/></name><index pos:line="52" pos:column="18">[<expr><name pos:line="52" pos:column="19">icol<pos:position pos:line="52" pos:column="23"/></name></expr>]<pos:position pos:line="52" pos:column="24"/></index></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <name pos:line="52" pos:column="27">type<pos:position pos:line="52" pos:column="31"/></name></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* size if retrieved as text */</comment>
    <expr_stmt><expr><name pos:line="55" pos:column="5">rc<pos:position pos:line="55" pos:column="7"/></name> <operator pos:line="55" pos:column="8">=<pos:position pos:line="55" pos:column="9"/></operator> <call><name pos:line="55" pos:column="10">SQLColAttribute<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">stmt<pos:position pos:line="55" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="32">icol<pos:position pos:line="55" pos:column="36"/></name> <operator pos:line="55" pos:column="37">+<pos:position pos:line="55" pos:column="38"/></operator> <literal type="number" pos:line="55" pos:column="39">1<pos:position pos:line="55" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="42">SQL_DESC_DISPLAY_SIZE<pos:position pos:line="55" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="65">NULL<pos:position pos:line="55" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="71">0<pos:position pos:line="55" pos:column="72"/></literal></expr></argument>,
                         <argument><expr><name pos:line="56" pos:column="26">NULL<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="32">(<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="33">SQLPOINTER<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">)<pos:position pos:line="56" pos:column="44"/></operator> <operator pos:line="56" pos:column="45">&amp;<pos:position pos:line="56" pos:column="50"/></operator> <name pos:line="56" pos:column="47">textsize<pos:position pos:line="56" pos:column="55"/></name></expr></argument>)<pos:position pos:line="56" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="57"/></expr_stmt>
     <if pos:line="57" pos:column="6">if <condition pos:line="57" pos:column="9">(<expr><operator pos:line="57" pos:column="10">!<pos:position pos:line="57" pos:column="11"/></operator><call><name pos:line="57" pos:column="11">SQL_SUCCEEDED<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">rc<pos:position pos:line="57" pos:column="27"/></name></expr></argument>)<pos:position pos:line="57" pos:column="28"/></argument_list></call> <operator pos:line="57" pos:column="29">||<pos:position pos:line="57" pos:column="31"/></operator> <name pos:line="57" pos:column="32">textsize<pos:position pos:line="57" pos:column="40"/></name> <operator pos:line="57" pos:column="41">&lt;<pos:position pos:line="57" pos:column="45"/></operator> <literal type="number" pos:line="57" pos:column="43">0<pos:position pos:line="57" pos:column="44"/></literal></expr>)<pos:position pos:line="57" pos:column="45"/></condition><then pos:line="57" pos:column="45">
        <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="9">textsize<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <name><name pos:line="58" pos:column="20">res<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">apr_dbd<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">-&gt;<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="34">defaultBufferSize<pos:position pos:line="58" pos:column="51"/></name></name></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt></block></then></if>
    <comment type="block" pos:line="59" pos:column="5">/* for null-term, which sometimes isn't included */</comment>
    <expr_stmt><expr><name pos:line="60" pos:column="5">textsize<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">++<pos:position pos:line="60" pos:column="15"/></operator></expr>;<pos:position pos:line="60" pos:column="16"/></expr_stmt>

    <comment type="block" pos:line="62" pos:column="5">/* real size */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">rc<pos:position pos:line="63" pos:column="7"/></name> <operator pos:line="63" pos:column="8">=<pos:position pos:line="63" pos:column="9"/></operator> <call><name pos:line="63" pos:column="10">SQLColAttribute<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">stmt<pos:position pos:line="63" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="32">icol<pos:position pos:line="63" pos:column="36"/></name> <operator pos:line="63" pos:column="37">+<pos:position pos:line="63" pos:column="38"/></operator> <literal type="number" pos:line="63" pos:column="39">1<pos:position pos:line="63" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="42">SQL_DESC_OCTET_LENGTH<pos:position pos:line="63" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="65">NULL<pos:position pos:line="63" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="71">0<pos:position pos:line="63" pos:column="72"/></literal></expr></argument>,
                         <argument><expr><name pos:line="64" pos:column="26">NULL<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="32">(<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="33">SQLPOINTER<pos:position pos:line="64" pos:column="43"/></name><operator pos:line="64" pos:column="43">)<pos:position pos:line="64" pos:column="44"/></operator> <operator pos:line="64" pos:column="45">&amp;<pos:position pos:line="64" pos:column="50"/></operator> <name pos:line="64" pos:column="47">realsize<pos:position pos:line="64" pos:column="55"/></name></expr></argument>)<pos:position pos:line="64" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="57"/></expr_stmt>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><call><name pos:line="65" pos:column="10">SQL_SUCCEEDED<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">rc<pos:position pos:line="65" pos:column="26"/></name></expr></argument>)<pos:position pos:line="65" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="28"/></condition><then pos:line="65" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="9">realsize<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <name pos:line="66" pos:column="20">textsize<pos:position pos:line="66" pos:column="28"/></name></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="68" pos:column="5">maxsize<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="68" pos:column="15">(<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="16">textsize<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">&gt;<pos:position pos:line="68" pos:column="29"/></operator> <name pos:line="68" pos:column="27">realsize<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">)<pos:position pos:line="68" pos:column="36"/></operator></expr> ?<pos:position pos:line="68" pos:column="38"/></condition><then pos:line="68" pos:column="38"> <expr><name pos:line="68" pos:column="39">textsize<pos:position pos:line="68" pos:column="47"/></name></expr> <pos:position pos:line="68" pos:column="48"/></then><else pos:line="68" pos:column="48">: <expr><name pos:line="68" pos:column="50">realsize<pos:position pos:line="68" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="68" pos:column="59"/></expr_stmt>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">( <expr><call><name pos:line="69" pos:column="10">IS_LOB<pos:position pos:line="69" pos:column="16"/></name><argument_list pos:line="69" pos:column="16">(<argument><expr><name pos:line="69" pos:column="17">type<pos:position pos:line="69" pos:column="21"/></name></expr></argument>)<pos:position pos:line="69" pos:column="22"/></argument_list></call> <operator pos:line="69" pos:column="23">||<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">maxsize<pos:position pos:line="69" pos:column="33"/></name> <operator pos:line="69" pos:column="34">&lt;=<pos:position pos:line="69" pos:column="39"/></operator> <literal type="number" pos:line="69" pos:column="37">0<pos:position pos:line="69" pos:column="38"/></literal></expr>)<pos:position pos:line="69" pos:column="39"/></condition><then pos:line="69" pos:column="39"> <block pos:line="69" pos:column="40">{
        <comment type="block" pos:line="70" pos:column="9">/* LOB types are never bound and have a NULL colptr for binary.
         * Ingore their real (1-2gb) length &amp; use a default - the larger
         * of defaultBufferSize or APR_BUCKET_BUFF_SIZE.
         * If not a LOB, but simply unknown length - always use defaultBufferSize.
         */</comment>
        <expr_stmt><expr><name pos:line="75" pos:column="9">maxsize<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <name><name pos:line="75" pos:column="19">res<pos:position pos:line="75" pos:column="22"/></name><operator pos:line="75" pos:column="22">-&gt;<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="24">apr_dbd<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><name pos:line="75" pos:column="33">defaultBufferSize<pos:position pos:line="75" pos:column="50"/></name></name></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt>
        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">( <expr><call><name pos:line="76" pos:column="14">IS_LOB<pos:position pos:line="76" pos:column="20"/></name><argument_list pos:line="76" pos:column="20">(<argument><expr><name pos:line="76" pos:column="21">type<pos:position pos:line="76" pos:column="25"/></name></expr></argument>)<pos:position pos:line="76" pos:column="26"/></argument_list></call> <operator pos:line="76" pos:column="27">&amp;&amp;<pos:position pos:line="76" pos:column="37"/></operator> <name pos:line="76" pos:column="30">maxsize<pos:position pos:line="76" pos:column="37"/></name> <operator pos:line="76" pos:column="38">&lt;<pos:position pos:line="76" pos:column="42"/></operator> <name pos:line="76" pos:column="40">APR_BUCKET_BUFF_SIZE<pos:position pos:line="76" pos:column="60"/></name></expr> )<pos:position pos:line="76" pos:column="62"/></condition><then pos:line="76" pos:column="62">
            <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="13">maxsize<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <name pos:line="77" pos:column="23">APR_BUCKET_BUFF_SIZE<pos:position pos:line="77" pos:column="43"/></name></expr>;<pos:position pos:line="77" pos:column="44"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="79" pos:column="9">res<pos:position pos:line="79" pos:column="12"/></name><operator pos:line="79" pos:column="12">-&gt;<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="14">colptrs<pos:position pos:line="79" pos:column="21"/></name><index pos:line="79" pos:column="21">[<expr><name pos:line="79" pos:column="22">icol<pos:position pos:line="79" pos:column="26"/></name></expr>]<pos:position pos:line="79" pos:column="27"/></index></name> <operator pos:line="79" pos:column="28">=<pos:position pos:line="79" pos:column="29"/></operator>  <name pos:line="79" pos:column="31">NULL<pos:position pos:line="79" pos:column="35"/></name></expr>;<pos:position pos:line="79" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">res<pos:position pos:line="80" pos:column="12"/></name><operator pos:line="80" pos:column="12">-&gt;<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="14">colstate<pos:position pos:line="80" pos:column="22"/></name><index pos:line="80" pos:column="22">[<expr><name pos:line="80" pos:column="23">icol<pos:position pos:line="80" pos:column="27"/></name></expr>]<pos:position pos:line="80" pos:column="28"/></index></name> <operator pos:line="80" pos:column="29">=<pos:position pos:line="80" pos:column="30"/></operator> <name pos:line="80" pos:column="31">COL_AVAIL<pos:position pos:line="80" pos:column="40"/></name></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">res<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">-&gt;<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="14">colsizes<pos:position pos:line="81" pos:column="22"/></name><index pos:line="81" pos:column="22">[<expr><name pos:line="81" pos:column="23">icol<pos:position pos:line="81" pos:column="27"/></name></expr>]<pos:position pos:line="81" pos:column="28"/></index></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <name pos:line="81" pos:column="31">maxsize<pos:position pos:line="81" pos:column="38"/></name></expr>;<pos:position pos:line="81" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="82" pos:column="9">rc<pos:position pos:line="82" pos:column="11"/></name> <operator pos:line="82" pos:column="12">=<pos:position pos:line="82" pos:column="13"/></operator> <name pos:line="82" pos:column="14">SQL_SUCCESS<pos:position pos:line="82" pos:column="25"/></name></expr>;<pos:position pos:line="82" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then>
    <else pos:line="84" pos:column="5">else <block pos:line="84" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="85" pos:column="9">res<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">colptrs<pos:position pos:line="85" pos:column="21"/></name><index pos:line="85" pos:column="21">[<expr><name pos:line="85" pos:column="22">icol<pos:position pos:line="85" pos:column="26"/></name></expr>]<pos:position pos:line="85" pos:column="27"/></index></name> <operator pos:line="85" pos:column="28">=<pos:position pos:line="85" pos:column="29"/></operator> <call><name pos:line="85" pos:column="30">apr_pcalloc<pos:position pos:line="85" pos:column="41"/></name><argument_list pos:line="85" pos:column="41">(<argument><expr><name><name pos:line="85" pos:column="42">res<pos:position pos:line="85" pos:column="45"/></name><operator pos:line="85" pos:column="45">-&gt;<pos:position pos:line="85" pos:column="50"/></operator><name pos:line="85" pos:column="47">pool<pos:position pos:line="85" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="53">maxsize<pos:position pos:line="85" pos:column="60"/></name></expr></argument>)<pos:position pos:line="85" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="86" pos:column="9">res<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">-&gt;<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="14">colsizes<pos:position pos:line="86" pos:column="22"/></name><index pos:line="86" pos:column="22">[<expr><name pos:line="86" pos:column="23">icol<pos:position pos:line="86" pos:column="27"/></name></expr>]<pos:position pos:line="86" pos:column="28"/></index></name> <operator pos:line="86" pos:column="29">=<pos:position pos:line="86" pos:column="30"/></operator> <name pos:line="86" pos:column="31">maxsize<pos:position pos:line="86" pos:column="38"/></name></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name><name pos:line="87" pos:column="13">res<pos:position pos:line="87" pos:column="16"/></name><operator pos:line="87" pos:column="16">-&gt;<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="18">apr_dbd<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">-&gt;<pos:position pos:line="87" pos:column="30"/></operator><name pos:line="87" pos:column="27">dboptions<pos:position pos:line="87" pos:column="36"/></name></name> <operator pos:line="87" pos:column="37">&amp;<pos:position pos:line="87" pos:column="42"/></operator> <name pos:line="87" pos:column="39">SQL_GD_BOUND<pos:position pos:line="87" pos:column="51"/></name></expr>)<pos:position pos:line="87" pos:column="52"/></condition><then pos:line="87" pos:column="52"> <block pos:line="87" pos:column="53">{
            <comment type="block" pos:line="88" pos:column="13">/* we are allowed to call SQLGetData if we need to */</comment>
            <expr_stmt><expr><name pos:line="89" pos:column="13">rc<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">=<pos:position pos:line="89" pos:column="17"/></operator> <call><name pos:line="89" pos:column="18">SQLBindCol<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><name pos:line="89" pos:column="29">stmt<pos:position pos:line="89" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="35">icol<pos:position pos:line="89" pos:column="39"/></name> <operator pos:line="89" pos:column="40">+<pos:position pos:line="89" pos:column="41"/></operator> <literal type="number" pos:line="89" pos:column="42">1<pos:position pos:line="89" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="45">res<pos:position pos:line="89" pos:column="48"/></name><operator pos:line="89" pos:column="48">-&gt;<pos:position pos:line="89" pos:column="53"/></operator><name pos:line="89" pos:column="50">coltypes<pos:position pos:line="89" pos:column="58"/></name><index pos:line="89" pos:column="58">[<expr><name pos:line="89" pos:column="59">icol<pos:position pos:line="89" pos:column="63"/></name></expr>]<pos:position pos:line="89" pos:column="64"/></index></name></expr></argument>, 
                            <argument><expr><name><name pos:line="90" pos:column="29">res<pos:position pos:line="90" pos:column="32"/></name><operator pos:line="90" pos:column="32">-&gt;<pos:position pos:line="90" pos:column="37"/></operator><name pos:line="90" pos:column="34">colptrs<pos:position pos:line="90" pos:column="41"/></name><index pos:line="90" pos:column="41">[<expr><name pos:line="90" pos:column="42">icol<pos:position pos:line="90" pos:column="46"/></name></expr>]<pos:position pos:line="90" pos:column="47"/></index></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="49">maxsize<pos:position pos:line="90" pos:column="56"/></name></expr></argument>, 
                            <argument><expr><operator pos:line="91" pos:column="29">&amp;<pos:position pos:line="91" pos:column="34"/></operator><operator pos:line="91" pos:column="30">(<pos:position pos:line="91" pos:column="31"/></operator><name><name pos:line="91" pos:column="31">res<pos:position pos:line="91" pos:column="34"/></name><operator pos:line="91" pos:column="34">-&gt;<pos:position pos:line="91" pos:column="39"/></operator><name pos:line="91" pos:column="36">colinds<pos:position pos:line="91" pos:column="43"/></name><index pos:line="91" pos:column="43">[<expr><name pos:line="91" pos:column="44">icol<pos:position pos:line="91" pos:column="48"/></name></expr>]<pos:position pos:line="91" pos:column="49"/></index></name><operator pos:line="91" pos:column="49">)<pos:position pos:line="91" pos:column="50"/></operator></expr></argument> )<pos:position pos:line="91" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="92" pos:column="13">CHECK_ERROR<pos:position pos:line="92" pos:column="24"/></name><argument_list pos:line="92" pos:column="24">(<argument><expr><name><name pos:line="92" pos:column="25">res<pos:position pos:line="92" pos:column="28"/></name><operator pos:line="92" pos:column="28">-&gt;<pos:position pos:line="92" pos:column="33"/></operator><name pos:line="92" pos:column="30">apr_dbd<pos:position pos:line="92" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="39">"SQLBindCol"<pos:position pos:line="92" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="53">rc<pos:position pos:line="92" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="57">SQL_HANDLE_STMT<pos:position pos:line="92" pos:column="72"/></name></expr></argument>,
                        <argument><expr><name pos:line="93" pos:column="25">stmt<pos:position pos:line="93" pos:column="29"/></name></expr></argument>)<pos:position pos:line="93" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="94" pos:column="13">res<pos:position pos:line="94" pos:column="16"/></name><operator pos:line="94" pos:column="16">-&gt;<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="18">colstate<pos:position pos:line="94" pos:column="26"/></name><index pos:line="94" pos:column="26">[<expr><name pos:line="94" pos:column="27">icol<pos:position pos:line="94" pos:column="31"/></name></expr>]<pos:position pos:line="94" pos:column="32"/></index></name> <operator pos:line="94" pos:column="33">=<pos:position pos:line="94" pos:column="34"/></operator> <ternary><condition><expr><call><name pos:line="94" pos:column="35">SQL_SUCCEEDED<pos:position pos:line="94" pos:column="48"/></name><argument_list pos:line="94" pos:column="48">(<argument><expr><name pos:line="94" pos:column="49">rc<pos:position pos:line="94" pos:column="51"/></name></expr></argument>)<pos:position pos:line="94" pos:column="52"/></argument_list></call></expr> ?<pos:position pos:line="94" pos:column="54"/></condition><then pos:line="94" pos:column="54"> <expr><name pos:line="94" pos:column="55">COL_BOUND<pos:position pos:line="94" pos:column="64"/></name></expr> <pos:position pos:line="94" pos:column="65"/></then><else pos:line="94" pos:column="65">: <expr><name pos:line="94" pos:column="67">COL_AVAIL<pos:position pos:line="94" pos:column="76"/></name></expr></else></ternary></expr>;<pos:position pos:line="94" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="95" pos:column="10"/></block></then>
        <else pos:line="96" pos:column="9">else <block pos:line="96" pos:column="14">{
            <comment type="block" pos:line="97" pos:column="13">/* this driver won't allow us to call SQLGetData on bound 
             * columns - so don't bind any */</comment>
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">res<pos:position pos:line="99" pos:column="16"/></name><operator pos:line="99" pos:column="16">-&gt;<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="18">colstate<pos:position pos:line="99" pos:column="26"/></name><index pos:line="99" pos:column="26">[<expr><name pos:line="99" pos:column="27">icol<pos:position pos:line="99" pos:column="31"/></name></expr>]<pos:position pos:line="99" pos:column="32"/></index></name> <operator pos:line="99" pos:column="33">=<pos:position pos:line="99" pos:column="34"/></operator> <name pos:line="99" pos:column="35">COL_AVAIL<pos:position pos:line="99" pos:column="44"/></name></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="100" pos:column="13">rc<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">=<pos:position pos:line="100" pos:column="17"/></operator> <name pos:line="100" pos:column="18">SQL_SUCCESS<pos:position pos:line="100" pos:column="29"/></name></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="101" pos:column="10"/></block></else></if>
    }<pos:position pos:line="102" pos:column="6"/></block></else></if>
    <return pos:line="103" pos:column="5">return <expr><name pos:line="103" pos:column="12">rc<pos:position pos:line="103" pos:column="14"/></name></expr>;<pos:position pos:line="103" pos:column="15"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

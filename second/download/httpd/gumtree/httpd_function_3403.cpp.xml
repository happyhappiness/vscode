<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3403.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">cache_generate_key_default<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">request_rec<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">r<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">apr_pool_t<pos:position pos:line="1" pos:column="67"/></name><modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type> <name pos:line="1" pos:column="69">p<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier><modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">key<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">cache_server_conf<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">conf<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">cache_request_rec<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">cache<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">port_str<pos:position pos:line="6" pos:column="19"/></name></decl>, <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="22">hn<pos:position pos:line="6" pos:column="24"/></name></decl>, <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="27">lcs<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">hostname<pos:position pos:line="7" pos:column="25"/></name></decl>, <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="28">scheme<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">path<pos:position pos:line="9" pos:column="15"/></name></decl>, <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="18">querystring<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">cache<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">cache_request_rec<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">*<pos:position pos:line="11" pos:column="33"/></operator><operator pos:line="11" pos:column="33">)<pos:position pos:line="11" pos:column="34"/></operator> <call><name pos:line="11" pos:column="35">ap_get_module_config<pos:position pos:line="11" pos:column="55"/></name><argument_list pos:line="11" pos:column="55">(<argument><expr><name><name pos:line="11" pos:column="56">r<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">-&gt;<pos:position pos:line="11" pos:column="62"/></operator><name pos:line="11" pos:column="59">request_config<pos:position pos:line="11" pos:column="73"/></name></name></expr></argument>,
                                                       <argument><expr><operator pos:line="12" pos:column="56">&amp;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="57">cache_module<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">cache<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16"> <block pos:line="13" pos:column="17">{
        <comment type="block" pos:line="14" pos:column="9">/* This should never happen */</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_log_error<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">APLOG_MARK<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">APLOG_ERR<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="45">0<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="48">r<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">server<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="16" pos:column="22">"cache: No cache request information available for key"<pos:position pos:line="16" pos:column="77"/></literal>
                     <literal type="string" pos:line="17" pos:column="22">" generation"<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">key<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <literal type="string" pos:line="18" pos:column="16">""<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">APR_EGENERAL<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">cache<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">key<pos:position pos:line="21" pos:column="19"/></name></name></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20"> <block pos:line="21" pos:column="21">{
        <comment type="block" pos:line="22" pos:column="9">/*
         * We have been here before during the processing of this request.
         * So return the key we already have.
         */</comment>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">key<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">apr_pstrdup<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">p<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="31">cache<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">key<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">APR_SUCCESS<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/*
     * Get the module configuration. We need this for the CacheIgnoreQueryString
     * option below.
     */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">conf<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">cache_server_conf<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">*<pos:position pos:line="34" pos:column="32"/></operator><operator pos:line="34" pos:column="32">)<pos:position pos:line="34" pos:column="33"/></operator> <call><name pos:line="34" pos:column="34">ap_get_module_config<pos:position pos:line="34" pos:column="54"/></name><argument_list pos:line="34" pos:column="54">(<argument><expr><name><name pos:line="34" pos:column="55">r<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">server<pos:position pos:line="34" pos:column="64"/></name><operator pos:line="34" pos:column="64">-&gt;<pos:position pos:line="34" pos:column="69"/></operator><name pos:line="34" pos:column="66">module_config<pos:position pos:line="34" pos:column="79"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="35" pos:column="55">&amp;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="56">cache_module<pos:position pos:line="35" pos:column="68"/></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="70"/></expr_stmt>

    <comment type="block" pos:line="37" pos:column="5">/*
     * Use the canonical name to improve cache hit rate, but only if this is
     * not a proxy request or if this is a reverse proxy request.
     * We need to handle both cases in the same manner as for the reverse proxy
     * case we have the following situation:
     *
     * If a cached entry is looked up by mod_cache's quick handler r-&gt;proxyreq
     * is still unset in the reverse proxy case as it only gets set in the
     * translate name hook (either by ProxyPass or mod_rewrite) which is run
     * after the quick handler hook. This is different to the forward proxy
     * case where it gets set before the quick handler is run (in the
     * post_read_request hook).
     * If a cache entry is created by the CACHE_SAVE filter we always have
     * r-&gt;proxyreq set correctly.
     * So we must ensure that in the reverse proxy case we use the same code
     * path and using the canonical name seems to be the right thing to do
     * in the reverse proxy case.
     */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><name><name pos:line="55" pos:column="10">r<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">proxyreq<pos:position pos:line="55" pos:column="21"/></name></name> <operator pos:line="55" pos:column="22">||<pos:position pos:line="55" pos:column="24"/></operator> <operator pos:line="55" pos:column="25">(<pos:position pos:line="55" pos:column="26"/></operator><name><name pos:line="55" pos:column="26">r<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">-&gt;<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="29">proxyreq<pos:position pos:line="55" pos:column="37"/></name></name> <operator pos:line="55" pos:column="38">==<pos:position pos:line="55" pos:column="40"/></operator> <name pos:line="55" pos:column="41">PROXYREQ_REVERSE<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">)<pos:position pos:line="55" pos:column="58"/></operator></expr>)<pos:position pos:line="55" pos:column="59"/></condition><then pos:line="55" pos:column="59"> <block pos:line="55" pos:column="60">{
        <comment type="block" pos:line="56" pos:column="9">/* Use _default_ as the hostname if none present, as in mod_vhost */</comment>
        <expr_stmt><expr><name pos:line="57" pos:column="9">hostname<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator>  <call><name pos:line="57" pos:column="21">ap_get_server_name<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><name pos:line="57" pos:column="40">r<pos:position pos:line="57" pos:column="41"/></name></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">!<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">hostname<pos:position pos:line="58" pos:column="22"/></name></expr>)<pos:position pos:line="58" pos:column="23"/></condition><then pos:line="58" pos:column="23"> <block pos:line="58" pos:column="24">{
            <expr_stmt><expr><name pos:line="59" pos:column="13">hostname<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <literal type="string" pos:line="59" pos:column="24">"_default_"<pos:position pos:line="59" pos:column="35"/></literal></expr>;<pos:position pos:line="59" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
    }<pos:position pos:line="61" pos:column="6"/></block></then>
    <elseif pos:line="62" pos:column="5">else <if pos:line="62" pos:column="10">if<condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">r<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">-&gt;<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="16">parsed_uri<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">.<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="27">hostname<pos:position pos:line="62" pos:column="35"/></name></name></expr>)<pos:position pos:line="62" pos:column="36"/></condition><then pos:line="62" pos:column="36"> <block pos:line="62" pos:column="37">{
        <comment type="block" pos:line="63" pos:column="9">/* Copy the parsed uri hostname */</comment>
        <expr_stmt><expr><name pos:line="64" pos:column="9">hn<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <call><name pos:line="64" pos:column="14">apr_pstrdup<pos:position pos:line="64" pos:column="25"/></name><argument_list pos:line="64" pos:column="25">(<argument><expr><name pos:line="64" pos:column="26">p<pos:position pos:line="64" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="29">r<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">-&gt;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="32">parsed_uri<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">.<pos:position pos:line="64" pos:column="43"/></operator><name pos:line="64" pos:column="43">hostname<pos:position pos:line="64" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">ap_str_tolower<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">hn<pos:position pos:line="65" pos:column="26"/></name></expr></argument>)<pos:position pos:line="65" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="66" pos:column="9">/* const work-around */</comment>
        <expr_stmt><expr><name pos:line="67" pos:column="9">hostname<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <name pos:line="67" pos:column="20">hn<pos:position pos:line="67" pos:column="22"/></name></expr>;<pos:position pos:line="67" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if></elseif>
    <else pos:line="69" pos:column="5">else <block pos:line="69" pos:column="10">{
        <comment type="block" pos:line="70" pos:column="9">/* We are a proxied request, with no hostname. Unlikely
         * to get very far - but just in case */</comment>
        <expr_stmt><expr><name pos:line="72" pos:column="9">hostname<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">=<pos:position pos:line="72" pos:column="19"/></operator> <literal type="string" pos:line="72" pos:column="20">"_default_"<pos:position pos:line="72" pos:column="31"/></literal></expr>;<pos:position pos:line="72" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="75" pos:column="5">/*
     * Copy the scheme, ensuring that it is lower case. If the parsed uri
     * contains no string or if this is not a proxy request get the http
     * scheme for this request. As r-&gt;parsed_uri.scheme is not set if this
     * is a reverse proxy request, it is ensured that the cases
     * "no proxy request" and "reverse proxy request" are handled in the same
     * manner (see above why this is needed).
     */</comment>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name><name pos:line="83" pos:column="9">r<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">-&gt;<pos:position pos:line="83" pos:column="15"/></operator><name pos:line="83" pos:column="12">proxyreq<pos:position pos:line="83" pos:column="20"/></name></name> <operator pos:line="83" pos:column="21">&amp;&amp;<pos:position pos:line="83" pos:column="31"/></operator> <name><name pos:line="83" pos:column="24">r<pos:position pos:line="83" pos:column="25"/></name><operator pos:line="83" pos:column="25">-&gt;<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="27">parsed_uri<pos:position pos:line="83" pos:column="37"/></name><operator pos:line="83" pos:column="37">.<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="38">scheme<pos:position pos:line="83" pos:column="44"/></name></name></expr>)<pos:position pos:line="83" pos:column="45"/></condition><then pos:line="83" pos:column="45"> <block pos:line="83" pos:column="46">{
        <comment type="block" pos:line="84" pos:column="9">/* Copy the scheme and lower-case it */</comment>
        <expr_stmt><expr><name pos:line="85" pos:column="9">lcs<pos:position pos:line="85" pos:column="12"/></name> <operator pos:line="85" pos:column="13">=<pos:position pos:line="85" pos:column="14"/></operator> <call><name pos:line="85" pos:column="15">apr_pstrdup<pos:position pos:line="85" pos:column="26"/></name><argument_list pos:line="85" pos:column="26">(<argument><expr><name pos:line="85" pos:column="27">p<pos:position pos:line="85" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="30">r<pos:position pos:line="85" pos:column="31"/></name><operator pos:line="85" pos:column="31">-&gt;<pos:position pos:line="85" pos:column="36"/></operator><name pos:line="85" pos:column="33">parsed_uri<pos:position pos:line="85" pos:column="43"/></name><operator pos:line="85" pos:column="43">.<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="44">scheme<pos:position pos:line="85" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">ap_str_tolower<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><name pos:line="86" pos:column="24">lcs<pos:position pos:line="86" pos:column="27"/></name></expr></argument>)<pos:position pos:line="86" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="29"/></expr_stmt>
        <comment type="block" pos:line="87" pos:column="9">/* const work-around */</comment>
        <expr_stmt><expr><name pos:line="88" pos:column="9">scheme<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">lcs<pos:position pos:line="88" pos:column="21"/></name></expr>;<pos:position pos:line="88" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></then>
    <else pos:line="90" pos:column="5">else <block pos:line="90" pos:column="10">{
        <expr_stmt><expr><name pos:line="91" pos:column="9">scheme<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <call><name pos:line="91" pos:column="18">ap_http_scheme<pos:position pos:line="91" pos:column="32"/></name><argument_list pos:line="91" pos:column="32">(<argument><expr><name pos:line="91" pos:column="33">r<pos:position pos:line="91" pos:column="34"/></name></expr></argument>)<pos:position pos:line="91" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="94" pos:column="5">/*
     * If this is a proxy request, but not a reverse proxy request (see comment
     * above why these cases must be handled in the same manner), copy the
     * URI's port-string (which may be a service name). If the URI contains
     * no port-string, use apr-util's notion of the default port for that
     * scheme - if available. Otherwise use the port-number of the current
     * server.
     */</comment>
    <if pos:line="102" pos:column="5">if<condition pos:line="102" pos:column="7">(<expr><name><name pos:line="102" pos:column="8">r<pos:position pos:line="102" pos:column="9"/></name><operator pos:line="102" pos:column="9">-&gt;<pos:position pos:line="102" pos:column="14"/></operator><name pos:line="102" pos:column="11">proxyreq<pos:position pos:line="102" pos:column="19"/></name></name> <operator pos:line="102" pos:column="20">&amp;&amp;<pos:position pos:line="102" pos:column="30"/></operator> <operator pos:line="102" pos:column="23">(<pos:position pos:line="102" pos:column="24"/></operator><name><name pos:line="102" pos:column="24">r<pos:position pos:line="102" pos:column="25"/></name><operator pos:line="102" pos:column="25">-&gt;<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="27">proxyreq<pos:position pos:line="102" pos:column="35"/></name></name> <operator pos:line="102" pos:column="36">!=<pos:position pos:line="102" pos:column="38"/></operator> <name pos:line="102" pos:column="39">PROXYREQ_REVERSE<pos:position pos:line="102" pos:column="55"/></name><operator pos:line="102" pos:column="55">)<pos:position pos:line="102" pos:column="56"/></operator></expr>)<pos:position pos:line="102" pos:column="57"/></condition><then pos:line="102" pos:column="57"> <block pos:line="102" pos:column="58">{
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name><name pos:line="103" pos:column="13">r<pos:position pos:line="103" pos:column="14"/></name><operator pos:line="103" pos:column="14">-&gt;<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="16">parsed_uri<pos:position pos:line="103" pos:column="26"/></name><operator pos:line="103" pos:column="26">.<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="27">port_str<pos:position pos:line="103" pos:column="35"/></name></name></expr>)<pos:position pos:line="103" pos:column="36"/></condition><then pos:line="103" pos:column="36"> <block pos:line="103" pos:column="37">{
            <expr_stmt><expr><name pos:line="104" pos:column="13">port_str<pos:position pos:line="104" pos:column="21"/></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <call><name pos:line="104" pos:column="24">apr_pcalloc<pos:position pos:line="104" pos:column="35"/></name><argument_list pos:line="104" pos:column="35">(<argument><expr><name pos:line="104" pos:column="36">p<pos:position pos:line="104" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="104" pos:column="39">strlen<pos:position pos:line="104" pos:column="45"/></name><argument_list pos:line="104" pos:column="45">(<argument><expr><name><name pos:line="104" pos:column="46">r<pos:position pos:line="104" pos:column="47"/></name><operator pos:line="104" pos:column="47">-&gt;<pos:position pos:line="104" pos:column="52"/></operator><name pos:line="104" pos:column="49">parsed_uri<pos:position pos:line="104" pos:column="59"/></name><operator pos:line="104" pos:column="59">.<pos:position pos:line="104" pos:column="60"/></operator><name pos:line="104" pos:column="60">port_str<pos:position pos:line="104" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="69"/></argument_list></call> <operator pos:line="104" pos:column="70">+<pos:position pos:line="104" pos:column="71"/></operator> <literal type="number" pos:line="104" pos:column="72">2<pos:position pos:line="104" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="105" pos:column="13">port_str<pos:position pos:line="105" pos:column="21"/></name><index pos:line="105" pos:column="21">[<expr><literal type="number" pos:line="105" pos:column="22">0<pos:position pos:line="105" pos:column="23"/></literal></expr>]<pos:position pos:line="105" pos:column="24"/></index></name> <operator pos:line="105" pos:column="25">=<pos:position pos:line="105" pos:column="26"/></operator> <literal type="char" pos:line="105" pos:column="27">':'<pos:position pos:line="105" pos:column="30"/></literal></expr>;<pos:position pos:line="105" pos:column="31"/></expr_stmt>
            <for pos:line="106" pos:column="13">for <control pos:line="106" pos:column="17">(<init><expr><name pos:line="106" pos:column="18">i<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <literal type="number" pos:line="106" pos:column="22">0<pos:position pos:line="106" pos:column="23"/></literal></expr>;<pos:position pos:line="106" pos:column="24"/></init> <condition><expr><name><name pos:line="106" pos:column="25">r<pos:position pos:line="106" pos:column="26"/></name><operator pos:line="106" pos:column="26">-&gt;<pos:position pos:line="106" pos:column="31"/></operator><name pos:line="106" pos:column="28">parsed_uri<pos:position pos:line="106" pos:column="38"/></name><operator pos:line="106" pos:column="38">.<pos:position pos:line="106" pos:column="39"/></operator><name pos:line="106" pos:column="39">port_str<pos:position pos:line="106" pos:column="47"/></name><index pos:line="106" pos:column="47">[<expr><name pos:line="106" pos:column="48">i<pos:position pos:line="106" pos:column="49"/></name></expr>]<pos:position pos:line="106" pos:column="50"/></index></name></expr>;<pos:position pos:line="106" pos:column="51"/></condition> <incr><expr><name pos:line="106" pos:column="52">i<pos:position pos:line="106" pos:column="53"/></name><operator pos:line="106" pos:column="53">++<pos:position pos:line="106" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="106" pos:column="56"/></control> <block pos:line="106" pos:column="57">{
                <expr_stmt><expr><name><name pos:line="107" pos:column="17">port_str<pos:position pos:line="107" pos:column="25"/></name><index pos:line="107" pos:column="25">[<expr><name pos:line="107" pos:column="26">i<pos:position pos:line="107" pos:column="27"/></name> <operator pos:line="107" pos:column="28">+<pos:position pos:line="107" pos:column="29"/></operator> <literal type="number" pos:line="107" pos:column="30">1<pos:position pos:line="107" pos:column="31"/></literal></expr>]<pos:position pos:line="107" pos:column="32"/></index></name> <operator pos:line="107" pos:column="33">=<pos:position pos:line="107" pos:column="34"/></operator> <call><name pos:line="107" pos:column="35">apr_tolower<pos:position pos:line="107" pos:column="46"/></name><argument_list pos:line="107" pos:column="46">(<argument><expr><name><name pos:line="107" pos:column="47">r<pos:position pos:line="107" pos:column="48"/></name><operator pos:line="107" pos:column="48">-&gt;<pos:position pos:line="107" pos:column="53"/></operator><name pos:line="107" pos:column="50">parsed_uri<pos:position pos:line="107" pos:column="60"/></name><operator pos:line="107" pos:column="60">.<pos:position pos:line="107" pos:column="61"/></operator><name pos:line="107" pos:column="61">port_str<pos:position pos:line="107" pos:column="69"/></name><index pos:line="107" pos:column="69">[<expr><name pos:line="107" pos:column="70">i<pos:position pos:line="107" pos:column="71"/></name></expr>]<pos:position pos:line="107" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="107" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="108" pos:column="14"/></block></for>
        }<pos:position pos:line="109" pos:column="10"/></block></then>
        <elseif pos:line="110" pos:column="9">else <if pos:line="110" pos:column="14">if <condition pos:line="110" pos:column="17">(<expr><call><name pos:line="110" pos:column="18">apr_uri_port_of_scheme<pos:position pos:line="110" pos:column="40"/></name><argument_list pos:line="110" pos:column="40">(<argument><expr><name pos:line="110" pos:column="41">scheme<pos:position pos:line="110" pos:column="47"/></name></expr></argument>)<pos:position pos:line="110" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="110" pos:column="49"/></condition><then pos:line="110" pos:column="49"> <block pos:line="110" pos:column="50">{
            <expr_stmt><expr><name pos:line="111" pos:column="13">port_str<pos:position pos:line="111" pos:column="21"/></name> <operator pos:line="111" pos:column="22">=<pos:position pos:line="111" pos:column="23"/></operator> <call><name pos:line="111" pos:column="24">apr_psprintf<pos:position pos:line="111" pos:column="36"/></name><argument_list pos:line="111" pos:column="36">(<argument><expr><name pos:line="111" pos:column="37">p<pos:position pos:line="111" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="40">":%u"<pos:position pos:line="111" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="111" pos:column="47">apr_uri_port_of_scheme<pos:position pos:line="111" pos:column="69"/></name><argument_list pos:line="111" pos:column="69">(<argument><expr><name pos:line="111" pos:column="70">scheme<pos:position pos:line="111" pos:column="76"/></name></expr></argument>)<pos:position pos:line="111" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="112" pos:column="10"/></block></then></if></elseif>
        <else pos:line="113" pos:column="9">else <block pos:line="113" pos:column="14">{
            <comment type="block" pos:line="114" pos:column="13">/* No port string given in the AbsoluteUri, and we have no
             * idea what the default port for the scheme is. Leave it
             * blank and live with the inefficiency of some extra cached
             * entities.
             */</comment>
            <expr_stmt><expr><name pos:line="119" pos:column="13">port_str<pos:position pos:line="119" pos:column="21"/></name> <operator pos:line="119" pos:column="22">=<pos:position pos:line="119" pos:column="23"/></operator> <literal type="string" pos:line="119" pos:column="24">""<pos:position pos:line="119" pos:column="26"/></literal></expr>;<pos:position pos:line="119" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="120" pos:column="10"/></block></else></if>
    }<pos:position pos:line="121" pos:column="6"/></block></then>
    <else pos:line="122" pos:column="5">else <block pos:line="122" pos:column="10">{
        <comment type="block" pos:line="123" pos:column="9">/* Use the server port */</comment>
        <expr_stmt><expr><name pos:line="124" pos:column="9">port_str<pos:position pos:line="124" pos:column="17"/></name> <operator pos:line="124" pos:column="18">=<pos:position pos:line="124" pos:column="19"/></operator> <call><name pos:line="124" pos:column="20">apr_psprintf<pos:position pos:line="124" pos:column="32"/></name><argument_list pos:line="124" pos:column="32">(<argument><expr><name pos:line="124" pos:column="33">p<pos:position pos:line="124" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="36">":%u"<pos:position pos:line="124" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="124" pos:column="43">ap_get_server_port<pos:position pos:line="124" pos:column="61"/></name><argument_list pos:line="124" pos:column="61">(<argument><expr><name pos:line="124" pos:column="62">r<pos:position pos:line="124" pos:column="63"/></name></expr></argument>)<pos:position pos:line="124" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="124" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="125" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="127" pos:column="5">/*
     * Check if we need to ignore session identifiers in the URL and do so
     * if needed.
     */</comment>
    <expr_stmt><expr><name pos:line="131" pos:column="5">path<pos:position pos:line="131" pos:column="9"/></name> <operator pos:line="131" pos:column="10">=<pos:position pos:line="131" pos:column="11"/></operator> <name><name pos:line="131" pos:column="12">r<pos:position pos:line="131" pos:column="13"/></name><operator pos:line="131" pos:column="13">-&gt;<pos:position pos:line="131" pos:column="18"/></operator><name pos:line="131" pos:column="15">uri<pos:position pos:line="131" pos:column="18"/></name></name></expr>;<pos:position pos:line="131" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="132" pos:column="5">querystring<pos:position pos:line="132" pos:column="16"/></name> <operator pos:line="132" pos:column="17">=<pos:position pos:line="132" pos:column="18"/></operator> <name><name pos:line="132" pos:column="19">r<pos:position pos:line="132" pos:column="20"/></name><operator pos:line="132" pos:column="20">-&gt;<pos:position pos:line="132" pos:column="25"/></operator><name pos:line="132" pos:column="22">parsed_uri<pos:position pos:line="132" pos:column="32"/></name><operator pos:line="132" pos:column="32">.<pos:position pos:line="132" pos:column="33"/></operator><name pos:line="132" pos:column="33">query<pos:position pos:line="132" pos:column="38"/></name></name></expr>;<pos:position pos:line="132" pos:column="39"/></expr_stmt>
    <if pos:line="133" pos:column="5">if <condition pos:line="133" pos:column="8">(<expr><name><name pos:line="133" pos:column="9">conf<pos:position pos:line="133" pos:column="13"/></name><operator pos:line="133" pos:column="13">-&gt;<pos:position pos:line="133" pos:column="18"/></operator><name pos:line="133" pos:column="15">ignore_session_id<pos:position pos:line="133" pos:column="32"/></name><operator pos:line="133" pos:column="32">-&gt;<pos:position pos:line="133" pos:column="37"/></operator><name pos:line="133" pos:column="34">nelts<pos:position pos:line="133" pos:column="39"/></name></name></expr>)<pos:position pos:line="133" pos:column="40"/></condition><then pos:line="133" pos:column="40"> <block pos:line="133" pos:column="41">{
        <decl_stmt><decl><type><name pos:line="134" pos:column="9">int<pos:position pos:line="134" pos:column="12"/></name></type> <name pos:line="134" pos:column="13">i<pos:position pos:line="134" pos:column="14"/></name></decl>;<pos:position pos:line="134" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="135" pos:column="9">char<pos:position pos:line="135" pos:column="13"/></name> <modifier pos:line="135" pos:column="14">*<pos:position pos:line="135" pos:column="15"/></modifier><modifier pos:line="135" pos:column="15">*<pos:position pos:line="135" pos:column="16"/></modifier></type><name pos:line="135" pos:column="16">identifier<pos:position pos:line="135" pos:column="26"/></name></decl>;<pos:position pos:line="135" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><name pos:line="137" pos:column="9">identifier<pos:position pos:line="137" pos:column="19"/></name> <operator pos:line="137" pos:column="20">=<pos:position pos:line="137" pos:column="21"/></operator> <operator pos:line="137" pos:column="22">(<pos:position pos:line="137" pos:column="23"/></operator><name pos:line="137" pos:column="23">char<pos:position pos:line="137" pos:column="27"/></name> <operator pos:line="137" pos:column="28">*<pos:position pos:line="137" pos:column="29"/></operator><operator pos:line="137" pos:column="29">*<pos:position pos:line="137" pos:column="30"/></operator><operator pos:line="137" pos:column="30">)<pos:position pos:line="137" pos:column="31"/></operator><name><name pos:line="137" pos:column="31">conf<pos:position pos:line="137" pos:column="35"/></name><operator pos:line="137" pos:column="35">-&gt;<pos:position pos:line="137" pos:column="40"/></operator><name pos:line="137" pos:column="37">ignore_session_id<pos:position pos:line="137" pos:column="54"/></name><operator pos:line="137" pos:column="54">-&gt;<pos:position pos:line="137" pos:column="59"/></operator><name pos:line="137" pos:column="56">elts<pos:position pos:line="137" pos:column="60"/></name></name></expr>;<pos:position pos:line="137" pos:column="61"/></expr_stmt>
        <for pos:line="138" pos:column="9">for <control pos:line="138" pos:column="13">(<init><expr><name pos:line="138" pos:column="14">i<pos:position pos:line="138" pos:column="15"/></name> <operator pos:line="138" pos:column="16">=<pos:position pos:line="138" pos:column="17"/></operator> <literal type="number" pos:line="138" pos:column="18">0<pos:position pos:line="138" pos:column="19"/></literal></expr>;<pos:position pos:line="138" pos:column="20"/></init> <condition><expr><name pos:line="138" pos:column="21">i<pos:position pos:line="138" pos:column="22"/></name> <operator pos:line="138" pos:column="23">&lt;<pos:position pos:line="138" pos:column="27"/></operator> <name><name pos:line="138" pos:column="25">conf<pos:position pos:line="138" pos:column="29"/></name><operator pos:line="138" pos:column="29">-&gt;<pos:position pos:line="138" pos:column="34"/></operator><name pos:line="138" pos:column="31">ignore_session_id<pos:position pos:line="138" pos:column="48"/></name><operator pos:line="138" pos:column="48">-&gt;<pos:position pos:line="138" pos:column="53"/></operator><name pos:line="138" pos:column="50">nelts<pos:position pos:line="138" pos:column="55"/></name></name></expr>;<pos:position pos:line="138" pos:column="56"/></condition> <incr><expr><name pos:line="138" pos:column="57">i<pos:position pos:line="138" pos:column="58"/></name><operator pos:line="138" pos:column="58">++<pos:position pos:line="138" pos:column="60"/></operator></expr><operator pos:line="138" pos:column="60">,<pos:position pos:line="138" pos:column="61"/></operator> <expr><name pos:line="138" pos:column="62">identifier<pos:position pos:line="138" pos:column="72"/></name><operator pos:line="138" pos:column="72">++<pos:position pos:line="138" pos:column="74"/></operator></expr></incr>)<pos:position pos:line="138" pos:column="75"/></control> <block pos:line="138" pos:column="76">{
            <decl_stmt><decl><type><name pos:line="139" pos:column="13">int<pos:position pos:line="139" pos:column="16"/></name></type> <name pos:line="139" pos:column="17">len<pos:position pos:line="139" pos:column="20"/></name></decl>;<pos:position pos:line="139" pos:column="21"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="140" pos:column="13">char<pos:position pos:line="140" pos:column="17"/></name> <modifier pos:line="140" pos:column="18">*<pos:position pos:line="140" pos:column="19"/></modifier></type><name pos:line="140" pos:column="19">param<pos:position pos:line="140" pos:column="24"/></name></decl>;<pos:position pos:line="140" pos:column="25"/></decl_stmt>

            <expr_stmt><expr><name pos:line="142" pos:column="13">len<pos:position pos:line="142" pos:column="16"/></name> <operator pos:line="142" pos:column="17">=<pos:position pos:line="142" pos:column="18"/></operator> <call><name pos:line="142" pos:column="19">strlen<pos:position pos:line="142" pos:column="25"/></name><argument_list pos:line="142" pos:column="25">(<argument><expr><operator pos:line="142" pos:column="26">*<pos:position pos:line="142" pos:column="27"/></operator><name pos:line="142" pos:column="27">identifier<pos:position pos:line="142" pos:column="37"/></name></expr></argument>)<pos:position pos:line="142" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="39"/></expr_stmt>
            <comment type="block" pos:line="143" pos:column="13">/*
             * Check that we have a parameter separator in the last segment
             * of the path and that the parameter matches our identifier
             */</comment>
            <if pos:line="147" pos:column="13">if <condition pos:line="147" pos:column="16">(<expr><operator pos:line="147" pos:column="17">(<pos:position pos:line="147" pos:column="18"/></operator><name pos:line="147" pos:column="18">param<pos:position pos:line="147" pos:column="23"/></name> <operator pos:line="147" pos:column="24">=<pos:position pos:line="147" pos:column="25"/></operator> <call><name pos:line="147" pos:column="26">strrchr<pos:position pos:line="147" pos:column="33"/></name><argument_list pos:line="147" pos:column="33">(<argument><expr><name pos:line="147" pos:column="34">path<pos:position pos:line="147" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="147" pos:column="40">';'<pos:position pos:line="147" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="44"/></argument_list></call><operator pos:line="147" pos:column="44">)<pos:position pos:line="147" pos:column="45"/></operator>
                <operator pos:line="148" pos:column="17">&amp;&amp;<pos:position pos:line="148" pos:column="27"/></operator> <operator pos:line="148" pos:column="20">!<pos:position pos:line="148" pos:column="21"/></operator><call><name pos:line="148" pos:column="21">strncmp<pos:position pos:line="148" pos:column="28"/></name><argument_list pos:line="148" pos:column="28">(<argument><expr><name pos:line="148" pos:column="29">param<pos:position pos:line="148" pos:column="34"/></name> <operator pos:line="148" pos:column="35">+<pos:position pos:line="148" pos:column="36"/></operator> <literal type="number" pos:line="148" pos:column="37">1<pos:position pos:line="148" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="148" pos:column="40">*<pos:position pos:line="148" pos:column="41"/></operator><name pos:line="148" pos:column="41">identifier<pos:position pos:line="148" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="53">len<pos:position pos:line="148" pos:column="56"/></name></expr></argument>)<pos:position pos:line="148" pos:column="57"/></argument_list></call>
                <operator pos:line="149" pos:column="17">&amp;&amp;<pos:position pos:line="149" pos:column="27"/></operator> <operator pos:line="149" pos:column="20">(<pos:position pos:line="149" pos:column="21"/></operator><operator pos:line="149" pos:column="21">*<pos:position pos:line="149" pos:column="22"/></operator><operator pos:line="149" pos:column="22">(<pos:position pos:line="149" pos:column="23"/></operator><name pos:line="149" pos:column="23">param<pos:position pos:line="149" pos:column="28"/></name> <operator pos:line="149" pos:column="29">+<pos:position pos:line="149" pos:column="30"/></operator> <name pos:line="149" pos:column="31">len<pos:position pos:line="149" pos:column="34"/></name> <operator pos:line="149" pos:column="35">+<pos:position pos:line="149" pos:column="36"/></operator> <literal type="number" pos:line="149" pos:column="37">1<pos:position pos:line="149" pos:column="38"/></literal><operator pos:line="149" pos:column="38">)<pos:position pos:line="149" pos:column="39"/></operator> <operator pos:line="149" pos:column="40">==<pos:position pos:line="149" pos:column="42"/></operator> <literal type="char" pos:line="149" pos:column="43">'='<pos:position pos:line="149" pos:column="46"/></literal><operator pos:line="149" pos:column="46">)<pos:position pos:line="149" pos:column="47"/></operator>
                <operator pos:line="150" pos:column="17">&amp;&amp;<pos:position pos:line="150" pos:column="27"/></operator> <operator pos:line="150" pos:column="20">!<pos:position pos:line="150" pos:column="21"/></operator><call><name pos:line="150" pos:column="21">strchr<pos:position pos:line="150" pos:column="27"/></name><argument_list pos:line="150" pos:column="27">(<argument><expr><name pos:line="150" pos:column="28">param<pos:position pos:line="150" pos:column="33"/></name> <operator pos:line="150" pos:column="34">+<pos:position pos:line="150" pos:column="35"/></operator> <name pos:line="150" pos:column="36">len<pos:position pos:line="150" pos:column="39"/></name> <operator pos:line="150" pos:column="40">+<pos:position pos:line="150" pos:column="41"/></operator> <literal type="number" pos:line="150" pos:column="42">2<pos:position pos:line="150" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="150" pos:column="45">'/'<pos:position pos:line="150" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="50"/></condition><then pos:line="150" pos:column="50"> <block pos:line="150" pos:column="51">{
                <expr_stmt><expr><name pos:line="151" pos:column="17">path<pos:position pos:line="151" pos:column="21"/></name> <operator pos:line="151" pos:column="22">=<pos:position pos:line="151" pos:column="23"/></operator> <call><name pos:line="151" pos:column="24">apr_pstrndup<pos:position pos:line="151" pos:column="36"/></name><argument_list pos:line="151" pos:column="36">(<argument><expr><name pos:line="151" pos:column="37">p<pos:position pos:line="151" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="40">path<pos:position pos:line="151" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="46">param<pos:position pos:line="151" pos:column="51"/></name> <operator pos:line="151" pos:column="52">-<pos:position pos:line="151" pos:column="53"/></operator> <name pos:line="151" pos:column="54">path<pos:position pos:line="151" pos:column="58"/></name></expr></argument>)<pos:position pos:line="151" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="60"/></expr_stmt>
                <continue pos:line="152" pos:column="17">continue;<pos:position pos:line="152" pos:column="26"/></continue>
            }<pos:position pos:line="153" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="154" pos:column="13">/*
             * Check if the identifier is in the querystring and cut it out.
             */</comment>
            <if pos:line="157" pos:column="13">if <condition pos:line="157" pos:column="16">(<expr><name pos:line="157" pos:column="17">querystring<pos:position pos:line="157" pos:column="28"/></name></expr>)<pos:position pos:line="157" pos:column="29"/></condition><then pos:line="157" pos:column="29"> <block pos:line="157" pos:column="30">{
                <comment type="block" pos:line="158" pos:column="17">/*
                 * First check if the identifier is at the beginning of the
                 * querystring and followed by a '='
                 */</comment>
                <if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><operator pos:line="162" pos:column="21">!<pos:position pos:line="162" pos:column="22"/></operator><call><name pos:line="162" pos:column="22">strncmp<pos:position pos:line="162" pos:column="29"/></name><argument_list pos:line="162" pos:column="29">(<argument><expr><name pos:line="162" pos:column="30">querystring<pos:position pos:line="162" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="43">*<pos:position pos:line="162" pos:column="44"/></operator><name pos:line="162" pos:column="44">identifier<pos:position pos:line="162" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="56">len<pos:position pos:line="162" pos:column="59"/></name></expr></argument>)<pos:position pos:line="162" pos:column="60"/></argument_list></call>
                    <operator pos:line="163" pos:column="21">&amp;&amp;<pos:position pos:line="163" pos:column="31"/></operator> <operator pos:line="163" pos:column="24">(<pos:position pos:line="163" pos:column="25"/></operator><operator pos:line="163" pos:column="25">*<pos:position pos:line="163" pos:column="26"/></operator><operator pos:line="163" pos:column="26">(<pos:position pos:line="163" pos:column="27"/></operator><name pos:line="163" pos:column="27">querystring<pos:position pos:line="163" pos:column="38"/></name> <operator pos:line="163" pos:column="39">+<pos:position pos:line="163" pos:column="40"/></operator> <name pos:line="163" pos:column="41">len<pos:position pos:line="163" pos:column="44"/></name><operator pos:line="163" pos:column="44">)<pos:position pos:line="163" pos:column="45"/></operator> <operator pos:line="163" pos:column="46">==<pos:position pos:line="163" pos:column="48"/></operator> <literal type="char" pos:line="163" pos:column="49">'='<pos:position pos:line="163" pos:column="52"/></literal><operator pos:line="163" pos:column="52">)<pos:position pos:line="163" pos:column="53"/></operator></expr>)<pos:position pos:line="163" pos:column="54"/></condition><then pos:line="163" pos:column="54"> <block pos:line="163" pos:column="55">{
                    <expr_stmt><expr><name pos:line="164" pos:column="21">param<pos:position pos:line="164" pos:column="26"/></name> <operator pos:line="164" pos:column="27">=<pos:position pos:line="164" pos:column="28"/></operator> <name pos:line="164" pos:column="29">querystring<pos:position pos:line="164" pos:column="40"/></name></expr>;<pos:position pos:line="164" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="165" pos:column="18"/></block></then>
                <else pos:line="166" pos:column="17">else <block pos:line="166" pos:column="22">{
                    <decl_stmt><decl><type><name pos:line="167" pos:column="21">char<pos:position pos:line="167" pos:column="25"/></name> <modifier pos:line="167" pos:column="26">*<pos:position pos:line="167" pos:column="27"/></modifier></type><name pos:line="167" pos:column="27">complete<pos:position pos:line="167" pos:column="35"/></name></decl>;<pos:position pos:line="167" pos:column="36"/></decl_stmt>

                    <comment type="block" pos:line="169" pos:column="21">/*
                     * In order to avoid subkey matching (PR 48401) prepend
                     * identifier with a '&amp;' and append a '='
                     */</comment>
                    <expr_stmt><expr><name pos:line="173" pos:column="21">complete<pos:position pos:line="173" pos:column="29"/></name> <operator pos:line="173" pos:column="30">=<pos:position pos:line="173" pos:column="31"/></operator> <call><name pos:line="173" pos:column="32">apr_pstrcat<pos:position pos:line="173" pos:column="43"/></name><argument_list pos:line="173" pos:column="43">(<argument><expr><name pos:line="173" pos:column="44">p<pos:position pos:line="173" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="47">"&amp;"<pos:position pos:line="173" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="173" pos:column="52">*<pos:position pos:line="173" pos:column="53"/></operator><name pos:line="173" pos:column="53">identifier<pos:position pos:line="173" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="65">"="<pos:position pos:line="173" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="173" pos:column="70">NULL<pos:position pos:line="173" pos:column="74"/></name></expr></argument>)<pos:position pos:line="173" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="76"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="174" pos:column="21">param<pos:position pos:line="174" pos:column="26"/></name> <operator pos:line="174" pos:column="27">=<pos:position pos:line="174" pos:column="28"/></operator> <call><name pos:line="174" pos:column="29">strstr<pos:position pos:line="174" pos:column="35"/></name><argument_list pos:line="174" pos:column="35">(<argument><expr><name pos:line="174" pos:column="36">querystring<pos:position pos:line="174" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="49">complete<pos:position pos:line="174" pos:column="57"/></name></expr></argument>)<pos:position pos:line="174" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="59"/></expr_stmt>
                    <comment type="block" pos:line="175" pos:column="21">/* If we found something we are sitting on the '&amp;' */</comment>
                    <if pos:line="176" pos:column="21">if <condition pos:line="176" pos:column="24">(<expr><name pos:line="176" pos:column="25">param<pos:position pos:line="176" pos:column="30"/></name></expr>)<pos:position pos:line="176" pos:column="31"/></condition><then pos:line="176" pos:column="31"> <block pos:line="176" pos:column="32">{
                        <expr_stmt><expr><name pos:line="177" pos:column="25">param<pos:position pos:line="177" pos:column="30"/></name><operator pos:line="177" pos:column="30">++<pos:position pos:line="177" pos:column="32"/></operator></expr>;<pos:position pos:line="177" pos:column="33"/></expr_stmt>
                    }<pos:position pos:line="178" pos:column="22"/></block></then></if>
                }<pos:position pos:line="179" pos:column="18"/></block></else></if>
                <if pos:line="180" pos:column="17">if <condition pos:line="180" pos:column="20">(<expr><name pos:line="180" pos:column="21">param<pos:position pos:line="180" pos:column="26"/></name></expr>)<pos:position pos:line="180" pos:column="27"/></condition><then pos:line="180" pos:column="27"> <block pos:line="180" pos:column="28">{
                    <decl_stmt><decl><type><name pos:line="181" pos:column="21">char<pos:position pos:line="181" pos:column="25"/></name> <modifier pos:line="181" pos:column="26">*<pos:position pos:line="181" pos:column="27"/></modifier></type><name pos:line="181" pos:column="27">amp<pos:position pos:line="181" pos:column="30"/></name></decl>;<pos:position pos:line="181" pos:column="31"/></decl_stmt>

                    <if pos:line="183" pos:column="21">if <condition pos:line="183" pos:column="24">(<expr><name pos:line="183" pos:column="25">querystring<pos:position pos:line="183" pos:column="36"/></name> <operator pos:line="183" pos:column="37">!=<pos:position pos:line="183" pos:column="39"/></operator> <name pos:line="183" pos:column="40">param<pos:position pos:line="183" pos:column="45"/></name></expr>)<pos:position pos:line="183" pos:column="46"/></condition><then pos:line="183" pos:column="46"> <block pos:line="183" pos:column="47">{
                        <expr_stmt><expr><name pos:line="184" pos:column="25">querystring<pos:position pos:line="184" pos:column="36"/></name> <operator pos:line="184" pos:column="37">=<pos:position pos:line="184" pos:column="38"/></operator> <call><name pos:line="184" pos:column="39">apr_pstrndup<pos:position pos:line="184" pos:column="51"/></name><argument_list pos:line="184" pos:column="51">(<argument><expr><name pos:line="184" pos:column="52">p<pos:position pos:line="184" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="55">querystring<pos:position pos:line="184" pos:column="66"/></name></expr></argument>,
                                               <argument><expr><name pos:line="185" pos:column="48">param<pos:position pos:line="185" pos:column="53"/></name> <operator pos:line="185" pos:column="54">-<pos:position pos:line="185" pos:column="55"/></operator> <name pos:line="185" pos:column="56">querystring<pos:position pos:line="185" pos:column="67"/></name></expr></argument>)<pos:position pos:line="185" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="69"/></expr_stmt>
                    }<pos:position pos:line="186" pos:column="22"/></block></then>
                    <else pos:line="187" pos:column="21">else <block pos:line="187" pos:column="26">{
                        <expr_stmt><expr><name pos:line="188" pos:column="25">querystring<pos:position pos:line="188" pos:column="36"/></name> <operator pos:line="188" pos:column="37">=<pos:position pos:line="188" pos:column="38"/></operator> <literal type="string" pos:line="188" pos:column="39">""<pos:position pos:line="188" pos:column="41"/></literal></expr>;<pos:position pos:line="188" pos:column="42"/></expr_stmt>
                    }<pos:position pos:line="189" pos:column="22"/></block></else></if>

                    <if pos:line="191" pos:column="21">if <condition pos:line="191" pos:column="24">(<expr><operator pos:line="191" pos:column="25">(<pos:position pos:line="191" pos:column="26"/></operator><name pos:line="191" pos:column="26">amp<pos:position pos:line="191" pos:column="29"/></name> <operator pos:line="191" pos:column="30">=<pos:position pos:line="191" pos:column="31"/></operator> <call><name pos:line="191" pos:column="32">strchr<pos:position pos:line="191" pos:column="38"/></name><argument_list pos:line="191" pos:column="38">(<argument><expr><name pos:line="191" pos:column="39">param<pos:position pos:line="191" pos:column="44"/></name> <operator pos:line="191" pos:column="45">+<pos:position pos:line="191" pos:column="46"/></operator> <name pos:line="191" pos:column="47">len<pos:position pos:line="191" pos:column="50"/></name> <operator pos:line="191" pos:column="51">+<pos:position pos:line="191" pos:column="52"/></operator> <literal type="number" pos:line="191" pos:column="53">1<pos:position pos:line="191" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="191" pos:column="56">'&amp;'<pos:position pos:line="191" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="60"/></argument_list></call><operator pos:line="191" pos:column="60">)<pos:position pos:line="191" pos:column="61"/></operator></expr>)<pos:position pos:line="191" pos:column="62"/></condition><then pos:line="191" pos:column="62"> <block pos:line="191" pos:column="63">{
                        <expr_stmt><expr><name pos:line="192" pos:column="25">querystring<pos:position pos:line="192" pos:column="36"/></name> <operator pos:line="192" pos:column="37">=<pos:position pos:line="192" pos:column="38"/></operator> <call><name pos:line="192" pos:column="39">apr_pstrcat<pos:position pos:line="192" pos:column="50"/></name><argument_list pos:line="192" pos:column="50">(<argument><expr><name pos:line="192" pos:column="51">p<pos:position pos:line="192" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="54">querystring<pos:position pos:line="192" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="67">amp<pos:position pos:line="192" pos:column="70"/></name> <operator pos:line="192" pos:column="71">+<pos:position pos:line="192" pos:column="72"/></operator> <literal type="number" pos:line="192" pos:column="73">1<pos:position pos:line="192" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="192" pos:column="76">NULL<pos:position pos:line="192" pos:column="80"/></name></expr></argument>)<pos:position pos:line="192" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="82"/></expr_stmt>
                    }<pos:position pos:line="193" pos:column="22"/></block></then>
                    <else pos:line="194" pos:column="21">else <block pos:line="194" pos:column="26">{
                        <comment type="block" pos:line="195" pos:column="25">/*
                         * If querystring is not "", then we have the case
                         * that the identifier parameter we removed was the
                         * last one in the original querystring. Hence we have
                         * a trailing '&amp;' which needs to be removed.
                         */</comment>
                        <if pos:line="201" pos:column="25">if <condition pos:line="201" pos:column="28">(<expr><operator pos:line="201" pos:column="29">*<pos:position pos:line="201" pos:column="30"/></operator><name pos:line="201" pos:column="30">querystring<pos:position pos:line="201" pos:column="41"/></name></expr>)<pos:position pos:line="201" pos:column="42"/></condition><then pos:line="201" pos:column="42"> <block pos:line="201" pos:column="43">{
                            <expr_stmt><expr><name><name pos:line="202" pos:column="29">querystring<pos:position pos:line="202" pos:column="40"/></name><index pos:line="202" pos:column="40">[<expr><call><name pos:line="202" pos:column="41">strlen<pos:position pos:line="202" pos:column="47"/></name><argument_list pos:line="202" pos:column="47">(<argument><expr><name pos:line="202" pos:column="48">querystring<pos:position pos:line="202" pos:column="59"/></name></expr></argument>)<pos:position pos:line="202" pos:column="60"/></argument_list></call> <operator pos:line="202" pos:column="61">-<pos:position pos:line="202" pos:column="62"/></operator> <literal type="number" pos:line="202" pos:column="63">1<pos:position pos:line="202" pos:column="64"/></literal></expr>]<pos:position pos:line="202" pos:column="65"/></index></name> <operator pos:line="202" pos:column="66">=<pos:position pos:line="202" pos:column="67"/></operator> <literal type="char" pos:line="202" pos:column="68">'\0'<pos:position pos:line="202" pos:column="72"/></literal></expr>;<pos:position pos:line="202" pos:column="73"/></expr_stmt>
                        }<pos:position pos:line="203" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="204" pos:column="22"/></block></else></if>
                }<pos:position pos:line="205" pos:column="18"/></block></then></if>
            }<pos:position pos:line="206" pos:column="14"/></block></then></if>
        }<pos:position pos:line="207" pos:column="10"/></block></for>
    }<pos:position pos:line="208" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="210" pos:column="5">/* Key format is a URI, optionally without the query-string */</comment>
    <if pos:line="211" pos:column="5">if <condition pos:line="211" pos:column="8">(<expr><name><name pos:line="211" pos:column="9">conf<pos:position pos:line="211" pos:column="13"/></name><operator pos:line="211" pos:column="13">-&gt;<pos:position pos:line="211" pos:column="18"/></operator><name pos:line="211" pos:column="15">ignorequerystring<pos:position pos:line="211" pos:column="32"/></name></name></expr>)<pos:position pos:line="211" pos:column="33"/></condition><then pos:line="211" pos:column="33"> <block pos:line="211" pos:column="34">{
        <expr_stmt><expr><operator pos:line="212" pos:column="9">*<pos:position pos:line="212" pos:column="10"/></operator><name pos:line="212" pos:column="10">key<pos:position pos:line="212" pos:column="13"/></name> <operator pos:line="212" pos:column="14">=<pos:position pos:line="212" pos:column="15"/></operator> <call><name pos:line="212" pos:column="16">apr_pstrcat<pos:position pos:line="212" pos:column="27"/></name><argument_list pos:line="212" pos:column="27">(<argument><expr><name pos:line="212" pos:column="28">p<pos:position pos:line="212" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="31">scheme<pos:position pos:line="212" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="39">"://"<pos:position pos:line="212" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="212" pos:column="46">hostname<pos:position pos:line="212" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="56">port_str<pos:position pos:line="212" pos:column="64"/></name></expr></argument>,
                           <argument><expr><name pos:line="213" pos:column="28">path<pos:position pos:line="213" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="34">"?"<pos:position pos:line="213" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="213" pos:column="39">NULL<pos:position pos:line="213" pos:column="43"/></name></expr></argument>)<pos:position pos:line="213" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="214" pos:column="6"/></block></then>
    <else pos:line="215" pos:column="5">else <block pos:line="215" pos:column="10">{
        <expr_stmt><expr><operator pos:line="216" pos:column="9">*<pos:position pos:line="216" pos:column="10"/></operator><name pos:line="216" pos:column="10">key<pos:position pos:line="216" pos:column="13"/></name> <operator pos:line="216" pos:column="14">=<pos:position pos:line="216" pos:column="15"/></operator> <call><name pos:line="216" pos:column="16">apr_pstrcat<pos:position pos:line="216" pos:column="27"/></name><argument_list pos:line="216" pos:column="27">(<argument><expr><name pos:line="216" pos:column="28">p<pos:position pos:line="216" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="31">scheme<pos:position pos:line="216" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="39">"://"<pos:position pos:line="216" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="216" pos:column="46">hostname<pos:position pos:line="216" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="56">port_str<pos:position pos:line="216" pos:column="64"/></name></expr></argument>,
                           <argument><expr><name pos:line="217" pos:column="28">path<pos:position pos:line="217" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="34">"?"<pos:position pos:line="217" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="217" pos:column="39">querystring<pos:position pos:line="217" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="52">NULL<pos:position pos:line="217" pos:column="56"/></name></expr></argument>)<pos:position pos:line="217" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="218" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="220" pos:column="5">/*
     * Store the key in the request_config for the cache as r-&gt;parsed_uri
     * might have changed in the time from our first visit here triggered by the
     * quick handler and our possible second visit triggered by the CACHE_SAVE
     * filter (e.g. r-&gt;parsed_uri got unescaped). In this case we would save the
     * resource in the cache under a key where it is never found by the quick
     * handler during following requests.
     */</comment>
    <expr_stmt><expr><name><name pos:line="228" pos:column="5">cache<pos:position pos:line="228" pos:column="10"/></name><operator pos:line="228" pos:column="10">-&gt;<pos:position pos:line="228" pos:column="15"/></operator><name pos:line="228" pos:column="12">key<pos:position pos:line="228" pos:column="15"/></name></name> <operator pos:line="228" pos:column="16">=<pos:position pos:line="228" pos:column="17"/></operator> <call><name pos:line="228" pos:column="18">apr_pstrdup<pos:position pos:line="228" pos:column="29"/></name><argument_list pos:line="228" pos:column="29">(<argument><expr><name><name pos:line="228" pos:column="30">r<pos:position pos:line="228" pos:column="31"/></name><operator pos:line="228" pos:column="31">-&gt;<pos:position pos:line="228" pos:column="36"/></operator><name pos:line="228" pos:column="33">pool<pos:position pos:line="228" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="228" pos:column="39">*<pos:position pos:line="228" pos:column="40"/></operator><name pos:line="228" pos:column="40">key<pos:position pos:line="228" pos:column="43"/></name></expr></argument>)<pos:position pos:line="228" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="229" pos:column="5">ap_log_error<pos:position pos:line="229" pos:column="17"/></name><argument_list pos:line="229" pos:column="17">(<argument><expr><name pos:line="229" pos:column="18">APLOG_MARK<pos:position pos:line="229" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="30">APLOG_DEBUG<pos:position pos:line="229" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="229" pos:column="43">0<pos:position pos:line="229" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="229" pos:column="46">NULL<pos:position pos:line="229" pos:column="50"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="230" pos:column="18">"cache: Key for entity %s?%s is %s"<pos:position pos:line="230" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="230" pos:column="55">r<pos:position pos:line="230" pos:column="56"/></name><operator pos:line="230" pos:column="56">-&gt;<pos:position pos:line="230" pos:column="61"/></operator><name pos:line="230" pos:column="58">uri<pos:position pos:line="230" pos:column="61"/></name></name></expr></argument>,
                 <argument><expr><name><name pos:line="231" pos:column="18">r<pos:position pos:line="231" pos:column="19"/></name><operator pos:line="231" pos:column="19">-&gt;<pos:position pos:line="231" pos:column="24"/></operator><name pos:line="231" pos:column="21">parsed_uri<pos:position pos:line="231" pos:column="31"/></name><operator pos:line="231" pos:column="31">.<pos:position pos:line="231" pos:column="32"/></operator><name pos:line="231" pos:column="32">query<pos:position pos:line="231" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="231" pos:column="39">*<pos:position pos:line="231" pos:column="40"/></operator><name pos:line="231" pos:column="40">key<pos:position pos:line="231" pos:column="43"/></name></expr></argument>)<pos:position pos:line="231" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="45"/></expr_stmt>

    <return pos:line="233" pos:column="5">return <expr><name pos:line="233" pos:column="12">APR_SUCCESS<pos:position pos:line="233" pos:column="23"/></name></expr>;<pos:position pos:line="233" pos:column="24"/></return>
}<pos:position pos:line="234" pos:column="2"/></block></function></unit>

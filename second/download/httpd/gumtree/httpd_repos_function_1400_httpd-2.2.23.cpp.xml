<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1400_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">uniq_field_values<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">d<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">key<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">val<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_array_header_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">values<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">start<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">e<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier><modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">strpp<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type>  <name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">values<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">apr_array_header_t<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></operator><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">d<pos:position pos:line="9" pos:column="37"/></name></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">e<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">apr_pstrdup<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name><name pos:line="11" pos:column="21">values<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">pool<pos:position pos:line="11" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">val<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>

    <do pos:line="13" pos:column="5">do <block pos:line="13" pos:column="8">{
        <comment type="block" pos:line="14" pos:column="9">/* Find a non-empty fieldname */</comment>

        <while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">e<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <literal type="char" pos:line="16" pos:column="22">','<pos:position pos:line="16" pos:column="25"/></literal> <operator pos:line="16" pos:column="26">||<pos:position pos:line="16" pos:column="28"/></operator> <call><name pos:line="16" pos:column="29">apr_isspace<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><operator pos:line="16" pos:column="41">*<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">e<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="45"/></condition> <block pos:line="16" pos:column="46">{
            <expr_stmt><expr><operator pos:line="17" pos:column="13">++<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">e<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></while>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">e<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">==<pos:position pos:line="19" pos:column="18"/></operator> <literal type="char" pos:line="19" pos:column="19">'\0'<pos:position pos:line="19" pos:column="23"/></literal></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24"> <block pos:line="19" pos:column="25">{
            <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="22" pos:column="9">start<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">e<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
        <while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><operator pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">e<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">!=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="char" pos:line="23" pos:column="22">'\0'<pos:position pos:line="23" pos:column="26"/></literal> <operator pos:line="23" pos:column="27">&amp;&amp;<pos:position pos:line="23" pos:column="37"/></operator> <operator pos:line="23" pos:column="30">*<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">e<pos:position pos:line="23" pos:column="32"/></name> <operator pos:line="23" pos:column="33">!=<pos:position pos:line="23" pos:column="35"/></operator> <literal type="char" pos:line="23" pos:column="36">','<pos:position pos:line="23" pos:column="39"/></literal> <operator pos:line="23" pos:column="40">&amp;&amp;<pos:position pos:line="23" pos:column="50"/></operator> <operator pos:line="23" pos:column="43">!<pos:position pos:line="23" pos:column="44"/></operator><call><name pos:line="23" pos:column="44">apr_isspace<pos:position pos:line="23" pos:column="55"/></name><argument_list pos:line="23" pos:column="55">(<argument><expr><operator pos:line="23" pos:column="56">*<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">e<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="60"/></condition> <block pos:line="23" pos:column="61">{
            <expr_stmt><expr><operator pos:line="24" pos:column="13">++<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">e<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></while>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">e<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">!=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="char" pos:line="26" pos:column="19">'\0'<pos:position pos:line="26" pos:column="23"/></literal></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{
            <expr_stmt><expr><operator pos:line="27" pos:column="13">*<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">e<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">++<pos:position pos:line="27" pos:column="17"/></operator> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <literal type="char" pos:line="27" pos:column="20">'\0'<pos:position pos:line="27" pos:column="24"/></literal></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="30" pos:column="9">/* Now add it to values if it isn't already represented.
         * Could be replaced by a ap_array_strcasecmp() if we had one.
         */</comment>
        <for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr><operator pos:line="33" pos:column="19">,<pos:position pos:line="33" pos:column="20"/></operator> <expr><name pos:line="33" pos:column="21">strpp<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="29">(<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">char<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">*<pos:position pos:line="33" pos:column="36"/></operator><operator pos:line="33" pos:column="36">*<pos:position pos:line="33" pos:column="37"/></operator><operator pos:line="33" pos:column="37">)<pos:position pos:line="33" pos:column="38"/></operator> <name><name pos:line="33" pos:column="39">values<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">-&gt;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="47">elts<pos:position pos:line="33" pos:column="51"/></name></name></expr>;<pos:position pos:line="33" pos:column="52"/></init> <condition><expr><name pos:line="33" pos:column="53">i<pos:position pos:line="33" pos:column="54"/></name> <operator pos:line="33" pos:column="55">&lt;<pos:position pos:line="33" pos:column="59"/></operator> <name><name pos:line="33" pos:column="57">values<pos:position pos:line="33" pos:column="63"/></name><operator pos:line="33" pos:column="63">-&gt;<pos:position pos:line="33" pos:column="68"/></operator><name pos:line="33" pos:column="65">nelts<pos:position pos:line="33" pos:column="70"/></name></name></expr>;<pos:position pos:line="33" pos:column="71"/></condition>
             <incr><expr><operator pos:line="34" pos:column="14">++<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">i<pos:position pos:line="34" pos:column="17"/></name></expr><operator pos:line="34" pos:column="17">,<pos:position pos:line="34" pos:column="18"/></operator> <expr><operator pos:line="34" pos:column="19">++<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">strpp<pos:position pos:line="34" pos:column="26"/></name></expr></incr>)<pos:position pos:line="34" pos:column="27"/></control> <block pos:line="34" pos:column="28">{
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">strpp<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">&amp;&amp;<pos:position pos:line="35" pos:column="34"/></operator> <call><name pos:line="35" pos:column="27">strcasecmp<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><operator pos:line="35" pos:column="38">*<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">strpp<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">start<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call> <operator pos:line="35" pos:column="53">==<pos:position pos:line="35" pos:column="55"/></operator> <literal type="number" pos:line="35" pos:column="56">0<pos:position pos:line="35" pos:column="57"/></literal></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then pos:line="35" pos:column="58"> <block pos:line="35" pos:column="59">{
                <break pos:line="36" pos:column="17">break;<pos:position pos:line="36" pos:column="23"/></break>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></for>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">i<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">==<pos:position pos:line="39" pos:column="17"/></operator> <name><name pos:line="39" pos:column="18">values<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">nelts<pos:position pos:line="39" pos:column="31"/></name></name></expr>)<pos:position pos:line="39" pos:column="32"/></condition><then pos:line="39" pos:column="32"> <block pos:line="39" pos:column="33">{  <comment type="block" pos:line="39" pos:column="36">/* if not found */</comment>
            <expr_stmt><expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">char<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">*<pos:position pos:line="40" pos:column="21"/></operator><operator pos:line="40" pos:column="21">*<pos:position pos:line="40" pos:column="22"/></operator><operator pos:line="40" pos:column="22">)<pos:position pos:line="40" pos:column="23"/></operator><call><name pos:line="40" pos:column="23">apr_array_push<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">values<pos:position pos:line="40" pos:column="44"/></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call> <operator pos:line="40" pos:column="46">=<pos:position pos:line="40" pos:column="47"/></operator> <name pos:line="40" pos:column="48">start<pos:position pos:line="40" pos:column="53"/></name></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block> while <condition pos:line="42" pos:column="13">(<expr><operator pos:line="42" pos:column="14">*<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">e<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">!=<pos:position pos:line="42" pos:column="19"/></operator> <literal type="char" pos:line="42" pos:column="20">'\0'<pos:position pos:line="42" pos:column="24"/></literal></expr>)<pos:position pos:line="42" pos:column="25"/></condition>;<pos:position pos:line="42" pos:column="26"/></do>

    <return pos:line="44" pos:column="5">return <expr><literal type="number" pos:line="44" pos:column="12">1<pos:position pos:line="44" pos:column="13"/></literal></expr>;<pos:position pos:line="44" pos:column="14"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2461_httpd-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_ssize_t<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">send_response_header<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">isapi_cid<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">cid<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">stat<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="3" pos:column="41">const<pos:position pos:line="3" pos:column="46"/></specifier> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">head<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="4" pos:column="41">apr_size_t<pos:position pos:line="4" pos:column="51"/></name></type> <name pos:line="4" pos:column="52">statlen<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="5" pos:column="41">apr_size_t<pos:position pos:line="5" pos:column="51"/></name></type> <name pos:line="5" pos:column="52">headlen<pos:position pos:line="5" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="60"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">head_present<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="number" pos:line="7" pos:column="24">1<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">termarg<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">res<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">old_status<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">termch<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">ate<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">head<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">||<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">headlen<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">==<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="29">0<pos:position pos:line="14" pos:column="30"/></literal> <operator pos:line="14" pos:column="31">||<pos:position pos:line="14" pos:column="33"/></operator> <operator pos:line="14" pos:column="34">!<pos:position pos:line="14" pos:column="35"/></operator><operator pos:line="14" pos:column="35">*<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">head<pos:position pos:line="14" pos:column="40"/></name></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41"> <block pos:line="14" pos:column="42">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">head<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">stat<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">stat<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">headlen<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">statlen<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">statlen<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">head_present<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt> <comment type="block" pos:line="19" pos:column="27">/* Don't eat the header */</comment>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">stat<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">||<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">statlen<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">==<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal> <operator pos:line="22" pos:column="31">||<pos:position pos:line="22" pos:column="33"/></operator> <operator pos:line="22" pos:column="34">!<pos:position pos:line="22" pos:column="35"/></operator><operator pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">stat<pos:position pos:line="22" pos:column="40"/></name></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">head<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&amp;&amp;<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="21">headlen<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">&amp;&amp;<pos:position pos:line="23" pos:column="39"/></operator> <operator pos:line="23" pos:column="32">*<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">head<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">&amp;&amp;<pos:position pos:line="23" pos:column="48"/></operator> <operator pos:line="23" pos:column="41">(<pos:position pos:line="23" pos:column="42"/></operator><operator pos:line="23" pos:column="42">(<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">stat<pos:position pos:line="23" pos:column="47"/></name> <operator pos:line="23" pos:column="48">=<pos:position pos:line="23" pos:column="49"/></operator> <call><name pos:line="23" pos:column="50">memchr<pos:position pos:line="23" pos:column="56"/></name><argument_list pos:line="23" pos:column="56">(<argument><expr><name pos:line="23" pos:column="57">head<pos:position pos:line="23" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="63">'\r'<pos:position pos:line="23" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="69">headlen<pos:position pos:line="23" pos:column="76"/></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call><operator pos:line="23" pos:column="77">)<pos:position pos:line="23" pos:column="78"/></operator>
                                      <operator pos:line="24" pos:column="39">||<pos:position pos:line="24" pos:column="41"/></operator> <operator pos:line="24" pos:column="42">(<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">stat<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">=<pos:position pos:line="24" pos:column="49"/></operator> <call><name pos:line="24" pos:column="50">memchr<pos:position pos:line="24" pos:column="56"/></name><argument_list pos:line="24" pos:column="56">(<argument><expr><name pos:line="24" pos:column="57">head<pos:position pos:line="24" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="63">'\n'<pos:position pos:line="24" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="69">headlen<pos:position pos:line="24" pos:column="76"/></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call><operator pos:line="24" pos:column="77">)<pos:position pos:line="24" pos:column="78"/></operator>
                                      <operator pos:line="25" pos:column="39">||<pos:position pos:line="25" pos:column="41"/></operator> <operator pos:line="25" pos:column="42">(<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">stat<pos:position pos:line="25" pos:column="47"/></name> <operator pos:line="25" pos:column="48">=<pos:position pos:line="25" pos:column="49"/></operator> <call><name pos:line="25" pos:column="50">memchr<pos:position pos:line="25" pos:column="56"/></name><argument_list pos:line="25" pos:column="56">(<argument><expr><name pos:line="25" pos:column="57">head<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="63">'\0'<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="69">headlen<pos:position pos:line="25" pos:column="76"/></name></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call><operator pos:line="25" pos:column="77">)<pos:position pos:line="25" pos:column="78"/></operator>
                                      <operator pos:line="26" pos:column="39">||<pos:position pos:line="26" pos:column="41"/></operator> <operator pos:line="26" pos:column="42">(<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="43">stat<pos:position pos:line="26" pos:column="47"/></name> <operator pos:line="26" pos:column="48">=<pos:position pos:line="26" pos:column="49"/></operator> <name pos:line="26" pos:column="50">head<pos:position pos:line="26" pos:column="54"/></name> <operator pos:line="26" pos:column="55">+<pos:position pos:line="26" pos:column="56"/></operator> <name pos:line="26" pos:column="57">headlen<pos:position pos:line="26" pos:column="64"/></name><operator pos:line="26" pos:column="64">)<pos:position pos:line="26" pos:column="65"/></operator><operator pos:line="26" pos:column="65">)<pos:position pos:line="26" pos:column="66"/></operator></expr>)<pos:position pos:line="26" pos:column="67"/></condition><then pos:line="26" pos:column="67"> <block pos:line="26" pos:column="68">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">statlen<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">stat<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">-<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">head<pos:position pos:line="27" pos:column="34"/></name></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><call><name pos:line="28" pos:column="17">memchr<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">head<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="28" pos:column="30">':'<pos:position pos:line="28" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">statlen<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44"> <block pos:line="28" pos:column="45">{
                <expr_stmt><expr><name pos:line="29" pos:column="17">stat<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="string" pos:line="29" pos:column="24">"Status: 200 OK"<pos:position pos:line="29" pos:column="40"/></literal></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="30" pos:column="17">statlen<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <call><name pos:line="30" pos:column="27">strlen<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">stat<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></then>
            <else pos:line="32" pos:column="13">else <block pos:line="32" pos:column="18">{
                <decl_stmt><decl><type><specifier pos:line="33" pos:column="17">const<pos:position pos:line="33" pos:column="22"/></specifier> <name pos:line="33" pos:column="23">char<pos:position pos:line="33" pos:column="27"/></name> <modifier pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></modifier></type><name pos:line="33" pos:column="29">flip<pos:position pos:line="33" pos:column="33"/></name> <init pos:line="33" pos:column="34">= <expr><name pos:line="33" pos:column="36">head<pos:position pos:line="33" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="41"/></decl_stmt>
                <expr_stmt><expr><name pos:line="34" pos:column="17">head<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">stat<pos:position pos:line="34" pos:column="28"/></name></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="35" pos:column="17">stat<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">flip<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="36" pos:column="17">headlen<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">-=<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="28">statlen<pos:position pos:line="36" pos:column="35"/></name></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name pos:line="37" pos:column="17">ate<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">+=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">statlen<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
                <if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">*<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">head<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">==<pos:position pos:line="38" pos:column="29"/></operator> <literal type="char" pos:line="38" pos:column="30">'\r'<pos:position pos:line="38" pos:column="34"/></literal> <operator pos:line="38" pos:column="35">&amp;&amp;<pos:position pos:line="38" pos:column="45"/></operator> <name pos:line="38" pos:column="38">headlen<pos:position pos:line="38" pos:column="45"/></name></expr>)<pos:position pos:line="38" pos:column="46"/></condition><then pos:line="38" pos:column="46">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="39" pos:column="21">++<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">head<pos:position pos:line="39" pos:column="27"/></name></expr><operator pos:line="39" pos:column="27">,<pos:position pos:line="39" pos:column="28"/></operator> <expr><operator pos:line="39" pos:column="29">--<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">headlen<pos:position pos:line="39" pos:column="38"/></name></expr><operator pos:line="39" pos:column="38">,<pos:position pos:line="39" pos:column="39"/></operator> <expr><operator pos:line="39" pos:column="40">++<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">ate<pos:position pos:line="39" pos:column="45"/></name></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt></block></then></if>
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">*<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">head<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">==<pos:position pos:line="40" pos:column="29"/></operator> <literal type="char" pos:line="40" pos:column="30">'\n'<pos:position pos:line="40" pos:column="34"/></literal> <operator pos:line="40" pos:column="35">&amp;&amp;<pos:position pos:line="40" pos:column="45"/></operator> <name pos:line="40" pos:column="38">headlen<pos:position pos:line="40" pos:column="45"/></name></expr>)<pos:position pos:line="40" pos:column="46"/></condition><then pos:line="40" pos:column="46">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="41" pos:column="21">++<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">head<pos:position pos:line="41" pos:column="27"/></name></expr><operator pos:line="41" pos:column="27">,<pos:position pos:line="41" pos:column="28"/></operator> <expr><operator pos:line="41" pos:column="29">--<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">headlen<pos:position pos:line="41" pos:column="38"/></name></expr><operator pos:line="41" pos:column="38">,<pos:position pos:line="41" pos:column="39"/></operator> <expr><operator pos:line="41" pos:column="40">++<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="42">ate<pos:position pos:line="41" pos:column="45"/></name></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt></block></then></if>
            }<pos:position pos:line="42" pos:column="14"/></block></else></if>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">stat<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">&amp;&amp;<pos:position pos:line="46" pos:column="24"/></operator> <operator pos:line="46" pos:column="17">(<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">statlen<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">&gt;<pos:position pos:line="46" pos:column="30"/></operator> <literal type="number" pos:line="46" pos:column="28">0<pos:position pos:line="46" pos:column="29"/></literal><operator pos:line="46" pos:column="29">)<pos:position pos:line="46" pos:column="30"/></operator> <operator pos:line="46" pos:column="31">&amp;&amp;<pos:position pos:line="46" pos:column="41"/></operator> <operator pos:line="46" pos:column="34">*<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">stat<pos:position pos:line="46" pos:column="39"/></name></expr>)<pos:position pos:line="46" pos:column="40"/></condition><then pos:line="46" pos:column="40"> <block pos:line="46" pos:column="41">{
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">char<pos:position pos:line="47" pos:column="13"/></name> <modifier pos:line="47" pos:column="14">*<pos:position pos:line="47" pos:column="15"/></modifier></type><name pos:line="47" pos:column="15">newstat<pos:position pos:line="47" pos:column="22"/></name></decl>;<pos:position pos:line="47" pos:column="23"/></decl_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><call><name pos:line="48" pos:column="14">apr_isdigit<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><operator pos:line="48" pos:column="26">*<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="27">stat<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="33"/></condition><then pos:line="48" pos:column="33"> <block pos:line="48" pos:column="34">{
            <decl_stmt><decl><type><specifier pos:line="49" pos:column="13">const<pos:position pos:line="49" pos:column="18"/></specifier> <name pos:line="49" pos:column="19">char<pos:position pos:line="49" pos:column="23"/></name> <modifier pos:line="49" pos:column="24">*<pos:position pos:line="49" pos:column="25"/></modifier></type><name pos:line="49" pos:column="25">stattok<pos:position pos:line="49" pos:column="32"/></name> <init pos:line="49" pos:column="33">= <expr><name pos:line="49" pos:column="35">stat<pos:position pos:line="49" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="49" pos:column="40"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="50" pos:column="13">int<pos:position pos:line="50" pos:column="16"/></name></type> <name pos:line="50" pos:column="17">toklen<pos:position pos:line="50" pos:column="23"/></name> <init pos:line="50" pos:column="24">= <expr><name pos:line="50" pos:column="26">statlen<pos:position pos:line="50" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="34"/></decl_stmt>
            <while pos:line="51" pos:column="13">while <condition pos:line="51" pos:column="19">(<expr><name pos:line="51" pos:column="20">toklen<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">&amp;&amp;<pos:position pos:line="51" pos:column="37"/></operator> <operator pos:line="51" pos:column="30">*<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="31">stattok<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">&amp;&amp;<pos:position pos:line="51" pos:column="49"/></operator> <operator pos:line="51" pos:column="42">!<pos:position pos:line="51" pos:column="43"/></operator><call><name pos:line="51" pos:column="43">apr_isspace<pos:position pos:line="51" pos:column="54"/></name><argument_list pos:line="51" pos:column="54">(<argument><expr><operator pos:line="51" pos:column="55">*<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="56">stattok<pos:position pos:line="51" pos:column="63"/></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="65"/></condition> <block pos:line="51" pos:column="66">{
                <expr_stmt><expr><operator pos:line="52" pos:column="17">++<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">stattok<pos:position pos:line="52" pos:column="26"/></name></expr>;<pos:position pos:line="52" pos:column="27"/></expr_stmt> <expr_stmt><expr><operator pos:line="52" pos:column="28">--<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">toklen<pos:position pos:line="52" pos:column="36"/></name></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></while>
            <while pos:line="54" pos:column="13">while <condition pos:line="54" pos:column="19">(<expr><name pos:line="54" pos:column="20">toklen<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">&amp;&amp;<pos:position pos:line="54" pos:column="37"/></operator> <call><name pos:line="54" pos:column="30">apr_isspace<pos:position pos:line="54" pos:column="41"/></name><argument_list pos:line="54" pos:column="41">(<argument><expr><operator pos:line="54" pos:column="42">*<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="43">stattok<pos:position pos:line="54" pos:column="50"/></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="52"/></condition> <block pos:line="54" pos:column="53">{
                <expr_stmt><expr><operator pos:line="55" pos:column="17">++<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">stattok<pos:position pos:line="55" pos:column="26"/></name></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt> <expr_stmt><expr><operator pos:line="55" pos:column="28">--<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">toklen<pos:position pos:line="55" pos:column="36"/></name></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></while>
            <comment type="block" pos:line="57" pos:column="13">/* Now decide if we follow the xxx message
             * or the http/x.x xxx message format
             */</comment>
            <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><name pos:line="60" pos:column="17">toklen<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">&amp;&amp;<pos:position pos:line="60" pos:column="34"/></operator> <call><name pos:line="60" pos:column="27">apr_isdigit<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><operator pos:line="60" pos:column="39">*<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="40">stattok<pos:position pos:line="60" pos:column="47"/></name></expr></argument>)<pos:position pos:line="60" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="49"/></condition><then pos:line="60" pos:column="49"> <block pos:line="60" pos:column="50">{
                <expr_stmt><expr><name pos:line="61" pos:column="17">statlen<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">=<pos:position pos:line="61" pos:column="26"/></operator> <name pos:line="61" pos:column="27">toklen<pos:position pos:line="61" pos:column="33"/></name></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name pos:line="62" pos:column="17">stat<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">stattok<pos:position pos:line="62" pos:column="31"/></name></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="63" pos:column="14"/></block></then></if>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="65" pos:column="9">newstat<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <call><name pos:line="65" pos:column="19">apr_palloc<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name><name pos:line="65" pos:column="30">cid<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">-&gt;<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="35">r<pos:position pos:line="65" pos:column="36"/></name><operator pos:line="65" pos:column="36">-&gt;<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="38">pool<pos:position pos:line="65" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="44">statlen<pos:position pos:line="65" pos:column="51"/></name> <operator pos:line="65" pos:column="52">+<pos:position pos:line="65" pos:column="53"/></operator> <literal type="number" pos:line="65" pos:column="54">9<pos:position pos:line="65" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">strcpy<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><name pos:line="66" pos:column="16">newstat<pos:position pos:line="66" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="25">"Status: "<pos:position pos:line="66" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">apr_cpystrn<pos:position pos:line="67" pos:column="20"/></name><argument_list pos:line="67" pos:column="20">(<argument><expr><name pos:line="67" pos:column="21">newstat<pos:position pos:line="67" pos:column="28"/></name> <operator pos:line="67" pos:column="29">+<pos:position pos:line="67" pos:column="30"/></operator> <literal type="number" pos:line="67" pos:column="31">8<pos:position pos:line="67" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="34">stat<pos:position pos:line="67" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="40">statlen<pos:position pos:line="67" pos:column="47"/></name> <operator pos:line="67" pos:column="48">+<pos:position pos:line="67" pos:column="49"/></operator> <literal type="number" pos:line="67" pos:column="50">1<pos:position pos:line="67" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">stat<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <name pos:line="68" pos:column="16">newstat<pos:position pos:line="68" pos:column="23"/></name></expr>;<pos:position pos:line="68" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="69" pos:column="9">statlen<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">+=<pos:position pos:line="69" pos:column="19"/></operator> <literal type="number" pos:line="69" pos:column="20">8<pos:position pos:line="69" pos:column="21"/></literal></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><operator pos:line="72" pos:column="9">!<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">head<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">||<pos:position pos:line="72" pos:column="17"/></operator> <name pos:line="72" pos:column="18">headlen<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">==<pos:position pos:line="72" pos:column="28"/></operator> <literal type="number" pos:line="72" pos:column="29">0<pos:position pos:line="72" pos:column="30"/></literal> <operator pos:line="72" pos:column="31">||<pos:position pos:line="72" pos:column="33"/></operator> <operator pos:line="72" pos:column="34">!<pos:position pos:line="72" pos:column="35"/></operator><operator pos:line="72" pos:column="35">*<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="36">head<pos:position pos:line="72" pos:column="40"/></name></expr>)<pos:position pos:line="72" pos:column="41"/></condition><then pos:line="72" pos:column="41"> <block pos:line="72" pos:column="42">{
        <expr_stmt><expr><name pos:line="73" pos:column="9">head<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <literal type="string" pos:line="73" pos:column="16">"\r\n"<pos:position pos:line="73" pos:column="22"/></literal></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">headlen<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">=<pos:position pos:line="74" pos:column="18"/></operator> <literal type="number" pos:line="74" pos:column="19">2<pos:position pos:line="74" pos:column="20"/></literal></expr>;<pos:position pos:line="74" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></then>
    <else pos:line="76" pos:column="5">else
    <block pos:line="77" pos:column="5">{
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name><name pos:line="78" pos:column="13">head<pos:position pos:line="78" pos:column="17"/></name><index pos:line="78" pos:column="17">[<expr><name pos:line="78" pos:column="18">headlen<pos:position pos:line="78" pos:column="25"/></name> <operator pos:line="78" pos:column="26">-<pos:position pos:line="78" pos:column="27"/></operator> <literal type="number" pos:line="78" pos:column="28">1<pos:position pos:line="78" pos:column="29"/></literal></expr>]<pos:position pos:line="78" pos:column="30"/></index></name> <operator pos:line="78" pos:column="31">&amp;&amp;<pos:position pos:line="78" pos:column="41"/></operator> <name><name pos:line="78" pos:column="34">head<pos:position pos:line="78" pos:column="38"/></name><index pos:line="78" pos:column="38">[<expr><name pos:line="78" pos:column="39">headlen<pos:position pos:line="78" pos:column="46"/></name></expr>]<pos:position pos:line="78" pos:column="47"/></index></name></expr>)<pos:position pos:line="78" pos:column="48"/></condition><then pos:line="78" pos:column="48"> <block pos:line="78" pos:column="49">{
            <comment type="block" pos:line="79" pos:column="13">/* Whoops... not NULL terminated */</comment>
            <expr_stmt><expr><name pos:line="80" pos:column="13">head<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <call><name pos:line="80" pos:column="20">apr_pstrndup<pos:position pos:line="80" pos:column="32"/></name><argument_list pos:line="80" pos:column="32">(<argument><expr><name><name pos:line="80" pos:column="33">cid<pos:position pos:line="80" pos:column="36"/></name><operator pos:line="80" pos:column="36">-&gt;<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="38">r<pos:position pos:line="80" pos:column="39"/></name><operator pos:line="80" pos:column="39">-&gt;<pos:position pos:line="80" pos:column="44"/></operator><name pos:line="80" pos:column="41">pool<pos:position pos:line="80" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="47">head<pos:position pos:line="80" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="53">headlen<pos:position pos:line="80" pos:column="60"/></name></expr></argument>)<pos:position pos:line="80" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>
    }<pos:position pos:line="82" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="84" pos:column="5">/* Seems IIS does not enforce the requirement for \r\n termination
     * on HSE_REQ_SEND_RESPONSE_HEADER, but we won't panic...
     * ap_scan_script_header_err_strs handles this aspect for us.
     *
     * Parse them out, or die trying
     */</comment>
    <expr_stmt><expr><name pos:line="90" pos:column="5">old_status<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <name><name pos:line="90" pos:column="18">cid<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">r<pos:position pos:line="90" pos:column="24"/></name><operator pos:line="90" pos:column="24">-&gt;<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="26">status<pos:position pos:line="90" pos:column="32"/></name></name></expr>;<pos:position pos:line="90" pos:column="33"/></expr_stmt>

    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name pos:line="92" pos:column="9">stat<pos:position pos:line="92" pos:column="13"/></name></expr>)<pos:position pos:line="92" pos:column="14"/></condition><then pos:line="92" pos:column="14"> <block pos:line="92" pos:column="15">{
        <expr_stmt><expr><name pos:line="93" pos:column="9">res<pos:position pos:line="93" pos:column="12"/></name> <operator pos:line="93" pos:column="13">=<pos:position pos:line="93" pos:column="14"/></operator> <call><name pos:line="93" pos:column="15">ap_scan_script_header_err_strs_ex<pos:position pos:line="93" pos:column="48"/></name><argument_list pos:line="93" pos:column="48">(<argument><expr><name><name pos:line="93" pos:column="49">cid<pos:position pos:line="93" pos:column="52"/></name><operator pos:line="93" pos:column="52">-&gt;<pos:position pos:line="93" pos:column="57"/></operator><name pos:line="93" pos:column="54">r<pos:position pos:line="93" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="57">NULL<pos:position pos:line="93" pos:column="61"/></name></expr></argument>,
                <argument><expr><name pos:line="94" pos:column="17">APLOG_MODULE_INDEX<pos:position pos:line="94" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="37">&amp;<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="38">termch<pos:position pos:line="94" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="46">&amp;<pos:position pos:line="94" pos:column="51"/></operator><name pos:line="94" pos:column="47">termarg<pos:position pos:line="94" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="56">stat<pos:position pos:line="94" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="62">head<pos:position pos:line="94" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="68">NULL<pos:position pos:line="94" pos:column="72"/></name></expr></argument>)<pos:position pos:line="94" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></then>
    <else pos:line="96" pos:column="5">else <block pos:line="96" pos:column="10">{
        <expr_stmt><expr><name pos:line="97" pos:column="9">res<pos:position pos:line="97" pos:column="12"/></name> <operator pos:line="97" pos:column="13">=<pos:position pos:line="97" pos:column="14"/></operator> <call><name pos:line="97" pos:column="15">ap_scan_script_header_err_strs_ex<pos:position pos:line="97" pos:column="48"/></name><argument_list pos:line="97" pos:column="48">(<argument><expr><name><name pos:line="97" pos:column="49">cid<pos:position pos:line="97" pos:column="52"/></name><operator pos:line="97" pos:column="52">-&gt;<pos:position pos:line="97" pos:column="57"/></operator><name pos:line="97" pos:column="54">r<pos:position pos:line="97" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="57">NULL<pos:position pos:line="97" pos:column="61"/></name></expr></argument>,
                <argument><expr><name pos:line="98" pos:column="17">APLOG_MODULE_INDEX<pos:position pos:line="98" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="37">&amp;<pos:position pos:line="98" pos:column="42"/></operator><name pos:line="98" pos:column="38">termch<pos:position pos:line="98" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="46">&amp;<pos:position pos:line="98" pos:column="51"/></operator><name pos:line="98" pos:column="47">termarg<pos:position pos:line="98" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="56">head<pos:position pos:line="98" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="62">NULL<pos:position pos:line="98" pos:column="66"/></name></expr></argument>)<pos:position pos:line="98" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="101" pos:column="5">/* Set our status. */</comment>
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><name pos:line="102" pos:column="9">res<pos:position pos:line="102" pos:column="12"/></name></expr>)<pos:position pos:line="102" pos:column="13"/></condition><then pos:line="102" pos:column="13"> <block pos:line="102" pos:column="14">{
        <comment type="block" pos:line="103" pos:column="9">/* This is an immediate error result from the parser
         */</comment>
        <expr_stmt><expr><name><name pos:line="105" pos:column="9">cid<pos:position pos:line="105" pos:column="12"/></name><operator pos:line="105" pos:column="12">-&gt;<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="14">r<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">-&gt;<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="17">status<pos:position pos:line="105" pos:column="23"/></name></name> <operator pos:line="105" pos:column="24">=<pos:position pos:line="105" pos:column="25"/></operator> <name pos:line="105" pos:column="26">res<pos:position pos:line="105" pos:column="29"/></name></expr>;<pos:position pos:line="105" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="106" pos:column="9">cid<pos:position pos:line="106" pos:column="12"/></name><operator pos:line="106" pos:column="12">-&gt;<pos:position pos:line="106" pos:column="17"/></operator><name pos:line="106" pos:column="14">r<pos:position pos:line="106" pos:column="15"/></name><operator pos:line="106" pos:column="15">-&gt;<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="17">status_line<pos:position pos:line="106" pos:column="28"/></name></name> <operator pos:line="106" pos:column="29">=<pos:position pos:line="106" pos:column="30"/></operator> <call><name pos:line="106" pos:column="31">ap_get_status_line<pos:position pos:line="106" pos:column="49"/></name><argument_list pos:line="106" pos:column="49">(<argument><expr><name><name pos:line="106" pos:column="50">cid<pos:position pos:line="106" pos:column="53"/></name><operator pos:line="106" pos:column="53">-&gt;<pos:position pos:line="106" pos:column="58"/></operator><name pos:line="106" pos:column="55">r<pos:position pos:line="106" pos:column="56"/></name><operator pos:line="106" pos:column="56">-&gt;<pos:position pos:line="106" pos:column="61"/></operator><name pos:line="106" pos:column="58">status<pos:position pos:line="106" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="107" pos:column="9">cid<pos:position pos:line="107" pos:column="12"/></name><operator pos:line="107" pos:column="12">-&gt;<pos:position pos:line="107" pos:column="17"/></operator><name pos:line="107" pos:column="14">ecb<pos:position pos:line="107" pos:column="17"/></name><operator pos:line="107" pos:column="17">-&gt;<pos:position pos:line="107" pos:column="22"/></operator><name pos:line="107" pos:column="19">dwHttpStatusCode<pos:position pos:line="107" pos:column="35"/></name></name> <operator pos:line="107" pos:column="36">=<pos:position pos:line="107" pos:column="37"/></operator> <name><name pos:line="107" pos:column="38">cid<pos:position pos:line="107" pos:column="41"/></name><operator pos:line="107" pos:column="41">-&gt;<pos:position pos:line="107" pos:column="46"/></operator><name pos:line="107" pos:column="43">r<pos:position pos:line="107" pos:column="44"/></name><operator pos:line="107" pos:column="44">-&gt;<pos:position pos:line="107" pos:column="49"/></operator><name pos:line="107" pos:column="46">status<pos:position pos:line="107" pos:column="52"/></name></name></expr>;<pos:position pos:line="107" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></then>
    <elseif pos:line="109" pos:column="5">else <if pos:line="109" pos:column="10">if <condition pos:line="109" pos:column="13">(<expr><name><name pos:line="109" pos:column="14">cid<pos:position pos:line="109" pos:column="17"/></name><operator pos:line="109" pos:column="17">-&gt;<pos:position pos:line="109" pos:column="22"/></operator><name pos:line="109" pos:column="19">r<pos:position pos:line="109" pos:column="20"/></name><operator pos:line="109" pos:column="20">-&gt;<pos:position pos:line="109" pos:column="25"/></operator><name pos:line="109" pos:column="22">status<pos:position pos:line="109" pos:column="28"/></name></name></expr>)<pos:position pos:line="109" pos:column="29"/></condition><then pos:line="109" pos:column="29"> <block pos:line="109" pos:column="30">{
        <comment type="block" pos:line="110" pos:column="9">/* We have a status in r-&gt;status, so let's just use it.
         * This is likely to be the Status: parsed above, and
         * may also be a delayed error result from the parser.
         * If it was filled in, status_line should also have
         * been filled in.
         */</comment>
        <expr_stmt><expr><name><name pos:line="116" pos:column="9">cid<pos:position pos:line="116" pos:column="12"/></name><operator pos:line="116" pos:column="12">-&gt;<pos:position pos:line="116" pos:column="17"/></operator><name pos:line="116" pos:column="14">ecb<pos:position pos:line="116" pos:column="17"/></name><operator pos:line="116" pos:column="17">-&gt;<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="19">dwHttpStatusCode<pos:position pos:line="116" pos:column="35"/></name></name> <operator pos:line="116" pos:column="36">=<pos:position pos:line="116" pos:column="37"/></operator> <name><name pos:line="116" pos:column="38">cid<pos:position pos:line="116" pos:column="41"/></name><operator pos:line="116" pos:column="41">-&gt;<pos:position pos:line="116" pos:column="46"/></operator><name pos:line="116" pos:column="43">r<pos:position pos:line="116" pos:column="44"/></name><operator pos:line="116" pos:column="44">-&gt;<pos:position pos:line="116" pos:column="49"/></operator><name pos:line="116" pos:column="46">status<pos:position pos:line="116" pos:column="52"/></name></name></expr>;<pos:position pos:line="116" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="118" pos:column="5">else <if pos:line="118" pos:column="10">if <condition pos:line="118" pos:column="13">(<expr><name><name pos:line="118" pos:column="14">cid<pos:position pos:line="118" pos:column="17"/></name><operator pos:line="118" pos:column="17">-&gt;<pos:position pos:line="118" pos:column="22"/></operator><name pos:line="118" pos:column="19">ecb<pos:position pos:line="118" pos:column="22"/></name><operator pos:line="118" pos:column="22">-&gt;<pos:position pos:line="118" pos:column="27"/></operator><name pos:line="118" pos:column="24">dwHttpStatusCode<pos:position pos:line="118" pos:column="40"/></name></name>
              <operator pos:line="119" pos:column="15">&amp;&amp;<pos:position pos:line="119" pos:column="25"/></operator> <name><name pos:line="119" pos:column="18">cid<pos:position pos:line="119" pos:column="21"/></name><operator pos:line="119" pos:column="21">-&gt;<pos:position pos:line="119" pos:column="26"/></operator><name pos:line="119" pos:column="23">ecb<pos:position pos:line="119" pos:column="26"/></name><operator pos:line="119" pos:column="26">-&gt;<pos:position pos:line="119" pos:column="31"/></operator><name pos:line="119" pos:column="28">dwHttpStatusCode<pos:position pos:line="119" pos:column="44"/></name></name> <operator pos:line="119" pos:column="45">!=<pos:position pos:line="119" pos:column="47"/></operator> <name pos:line="119" pos:column="48">HTTP_OK<pos:position pos:line="119" pos:column="55"/></name></expr>)<pos:position pos:line="119" pos:column="56"/></condition><then pos:line="119" pos:column="56"> <block pos:line="119" pos:column="57">{
        <comment type="block" pos:line="120" pos:column="9">/* Now we fall back on dwHttpStatusCode if it appears
         * ap_scan_script_header fell back on the default code.
         * Any other results set dwHttpStatusCode to the decoded
         * status value.
         */</comment>
        <expr_stmt><expr><name><name pos:line="125" pos:column="9">cid<pos:position pos:line="125" pos:column="12"/></name><operator pos:line="125" pos:column="12">-&gt;<pos:position pos:line="125" pos:column="17"/></operator><name pos:line="125" pos:column="14">r<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">-&gt;<pos:position pos:line="125" pos:column="20"/></operator><name pos:line="125" pos:column="17">status<pos:position pos:line="125" pos:column="23"/></name></name> <operator pos:line="125" pos:column="24">=<pos:position pos:line="125" pos:column="25"/></operator> <name><name pos:line="125" pos:column="26">cid<pos:position pos:line="125" pos:column="29"/></name><operator pos:line="125" pos:column="29">-&gt;<pos:position pos:line="125" pos:column="34"/></operator><name pos:line="125" pos:column="31">ecb<pos:position pos:line="125" pos:column="34"/></name><operator pos:line="125" pos:column="34">-&gt;<pos:position pos:line="125" pos:column="39"/></operator><name pos:line="125" pos:column="36">dwHttpStatusCode<pos:position pos:line="125" pos:column="52"/></name></name></expr>;<pos:position pos:line="125" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="126" pos:column="9">cid<pos:position pos:line="126" pos:column="12"/></name><operator pos:line="126" pos:column="12">-&gt;<pos:position pos:line="126" pos:column="17"/></operator><name pos:line="126" pos:column="14">r<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">-&gt;<pos:position pos:line="126" pos:column="20"/></operator><name pos:line="126" pos:column="17">status_line<pos:position pos:line="126" pos:column="28"/></name></name> <operator pos:line="126" pos:column="29">=<pos:position pos:line="126" pos:column="30"/></operator> <call><name pos:line="126" pos:column="31">ap_get_status_line<pos:position pos:line="126" pos:column="49"/></name><argument_list pos:line="126" pos:column="49">(<argument><expr><name><name pos:line="126" pos:column="50">cid<pos:position pos:line="126" pos:column="53"/></name><operator pos:line="126" pos:column="53">-&gt;<pos:position pos:line="126" pos:column="58"/></operator><name pos:line="126" pos:column="55">r<pos:position pos:line="126" pos:column="56"/></name><operator pos:line="126" pos:column="56">-&gt;<pos:position pos:line="126" pos:column="61"/></operator><name pos:line="126" pos:column="58">status<pos:position pos:line="126" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="127" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="128" pos:column="5">else <if pos:line="128" pos:column="10">if <condition pos:line="128" pos:column="13">(<expr><name pos:line="128" pos:column="14">old_status<pos:position pos:line="128" pos:column="24"/></name></expr>)<pos:position pos:line="128" pos:column="25"/></condition><then pos:line="128" pos:column="25"> <block pos:line="128" pos:column="26">{
        <comment type="block" pos:line="129" pos:column="9">/* Well... either there is no dwHttpStatusCode or it's HTTP_OK.
         * In any case, we don't have a good status to return yet...
         * Perhaps the one we came in with will be better. Let's use it,
         * if we were given one (note this is a pendantic case, it would
         * normally be covered above unless the scan script code unset
         * the r-&gt;status). Should there be a check here as to whether
         * we are setting a valid response code?
         */</comment>
        <expr_stmt><expr><name><name pos:line="137" pos:column="9">cid<pos:position pos:line="137" pos:column="12"/></name><operator pos:line="137" pos:column="12">-&gt;<pos:position pos:line="137" pos:column="17"/></operator><name pos:line="137" pos:column="14">r<pos:position pos:line="137" pos:column="15"/></name><operator pos:line="137" pos:column="15">-&gt;<pos:position pos:line="137" pos:column="20"/></operator><name pos:line="137" pos:column="17">status<pos:position pos:line="137" pos:column="23"/></name></name> <operator pos:line="137" pos:column="24">=<pos:position pos:line="137" pos:column="25"/></operator> <name pos:line="137" pos:column="26">old_status<pos:position pos:line="137" pos:column="36"/></name></expr>;<pos:position pos:line="137" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="138" pos:column="9">cid<pos:position pos:line="138" pos:column="12"/></name><operator pos:line="138" pos:column="12">-&gt;<pos:position pos:line="138" pos:column="17"/></operator><name pos:line="138" pos:column="14">r<pos:position pos:line="138" pos:column="15"/></name><operator pos:line="138" pos:column="15">-&gt;<pos:position pos:line="138" pos:column="20"/></operator><name pos:line="138" pos:column="17">status_line<pos:position pos:line="138" pos:column="28"/></name></name> <operator pos:line="138" pos:column="29">=<pos:position pos:line="138" pos:column="30"/></operator> <call><name pos:line="138" pos:column="31">ap_get_status_line<pos:position pos:line="138" pos:column="49"/></name><argument_list pos:line="138" pos:column="49">(<argument><expr><name><name pos:line="138" pos:column="50">cid<pos:position pos:line="138" pos:column="53"/></name><operator pos:line="138" pos:column="53">-&gt;<pos:position pos:line="138" pos:column="58"/></operator><name pos:line="138" pos:column="55">r<pos:position pos:line="138" pos:column="56"/></name><operator pos:line="138" pos:column="56">-&gt;<pos:position pos:line="138" pos:column="61"/></operator><name pos:line="138" pos:column="58">status<pos:position pos:line="138" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="138" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="139" pos:column="9">cid<pos:position pos:line="139" pos:column="12"/></name><operator pos:line="139" pos:column="12">-&gt;<pos:position pos:line="139" pos:column="17"/></operator><name pos:line="139" pos:column="14">ecb<pos:position pos:line="139" pos:column="17"/></name><operator pos:line="139" pos:column="17">-&gt;<pos:position pos:line="139" pos:column="22"/></operator><name pos:line="139" pos:column="19">dwHttpStatusCode<pos:position pos:line="139" pos:column="35"/></name></name> <operator pos:line="139" pos:column="36">=<pos:position pos:line="139" pos:column="37"/></operator> <name><name pos:line="139" pos:column="38">cid<pos:position pos:line="139" pos:column="41"/></name><operator pos:line="139" pos:column="41">-&gt;<pos:position pos:line="139" pos:column="46"/></operator><name pos:line="139" pos:column="43">r<pos:position pos:line="139" pos:column="44"/></name><operator pos:line="139" pos:column="44">-&gt;<pos:position pos:line="139" pos:column="49"/></operator><name pos:line="139" pos:column="46">status<pos:position pos:line="139" pos:column="52"/></name></name></expr>;<pos:position pos:line="139" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="140" pos:column="6"/></block></then></if></elseif>
    <else pos:line="141" pos:column="5">else <block pos:line="141" pos:column="10">{
        <comment type="block" pos:line="142" pos:column="9">/* None of dwHttpStatusCode, the parser's r-&gt;status nor the
         * old value of r-&gt;status were helpful, and nothing was decoded
         * from Status: string passed to us.  Let's just say HTTP_OK
         * and get the data out, this was the isapi dev's oversight.
         */</comment>
        <expr_stmt><expr><name><name pos:line="147" pos:column="9">cid<pos:position pos:line="147" pos:column="12"/></name><operator pos:line="147" pos:column="12">-&gt;<pos:position pos:line="147" pos:column="17"/></operator><name pos:line="147" pos:column="14">r<pos:position pos:line="147" pos:column="15"/></name><operator pos:line="147" pos:column="15">-&gt;<pos:position pos:line="147" pos:column="20"/></operator><name pos:line="147" pos:column="17">status<pos:position pos:line="147" pos:column="23"/></name></name> <operator pos:line="147" pos:column="24">=<pos:position pos:line="147" pos:column="25"/></operator> <name pos:line="147" pos:column="26">HTTP_OK<pos:position pos:line="147" pos:column="33"/></name></expr>;<pos:position pos:line="147" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="148" pos:column="9">cid<pos:position pos:line="148" pos:column="12"/></name><operator pos:line="148" pos:column="12">-&gt;<pos:position pos:line="148" pos:column="17"/></operator><name pos:line="148" pos:column="14">r<pos:position pos:line="148" pos:column="15"/></name><operator pos:line="148" pos:column="15">-&gt;<pos:position pos:line="148" pos:column="20"/></operator><name pos:line="148" pos:column="17">status_line<pos:position pos:line="148" pos:column="28"/></name></name> <operator pos:line="148" pos:column="29">=<pos:position pos:line="148" pos:column="30"/></operator> <call><name pos:line="148" pos:column="31">ap_get_status_line<pos:position pos:line="148" pos:column="49"/></name><argument_list pos:line="148" pos:column="49">(<argument><expr><name><name pos:line="148" pos:column="50">cid<pos:position pos:line="148" pos:column="53"/></name><operator pos:line="148" pos:column="53">-&gt;<pos:position pos:line="148" pos:column="58"/></operator><name pos:line="148" pos:column="55">r<pos:position pos:line="148" pos:column="56"/></name><operator pos:line="148" pos:column="56">-&gt;<pos:position pos:line="148" pos:column="61"/></operator><name pos:line="148" pos:column="58">status<pos:position pos:line="148" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="149" pos:column="9">cid<pos:position pos:line="149" pos:column="12"/></name><operator pos:line="149" pos:column="12">-&gt;<pos:position pos:line="149" pos:column="17"/></operator><name pos:line="149" pos:column="14">ecb<pos:position pos:line="149" pos:column="17"/></name><operator pos:line="149" pos:column="17">-&gt;<pos:position pos:line="149" pos:column="22"/></operator><name pos:line="149" pos:column="19">dwHttpStatusCode<pos:position pos:line="149" pos:column="35"/></name></name> <operator pos:line="149" pos:column="36">=<pos:position pos:line="149" pos:column="37"/></operator> <name><name pos:line="149" pos:column="38">cid<pos:position pos:line="149" pos:column="41"/></name><operator pos:line="149" pos:column="41">-&gt;<pos:position pos:line="149" pos:column="46"/></operator><name pos:line="149" pos:column="43">r<pos:position pos:line="149" pos:column="44"/></name><operator pos:line="149" pos:column="44">-&gt;<pos:position pos:line="149" pos:column="49"/></operator><name pos:line="149" pos:column="46">status<pos:position pos:line="149" pos:column="52"/></name></name></expr>;<pos:position pos:line="149" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="150" pos:column="9">ap_log_rerror<pos:position pos:line="150" pos:column="22"/></name><argument_list pos:line="150" pos:column="22">(<argument><expr><name pos:line="150" pos:column="23">APLOG_MARK<pos:position pos:line="150" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="35">APLOG_DEBUG<pos:position pos:line="150" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="48">0<pos:position pos:line="150" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="51">cid<pos:position pos:line="150" pos:column="54"/></name><operator pos:line="150" pos:column="54">-&gt;<pos:position pos:line="150" pos:column="59"/></operator><name pos:line="150" pos:column="56">r<pos:position pos:line="150" pos:column="57"/></name></name></expr></argument>, <argument><expr><call><name pos:line="150" pos:column="59">APLOGNO<pos:position pos:line="150" pos:column="66"/></name><argument_list pos:line="150" pos:column="66">(<argument><expr><literal type="number" pos:line="150" pos:column="67">02111<pos:position pos:line="150" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="73"/></argument_list></call>
                <literal type="string" pos:line="151" pos:column="17">"Could not determine HTTP response code; using %d"<pos:position pos:line="151" pos:column="67"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="152" pos:column="17">cid<pos:position pos:line="152" pos:column="20"/></name><operator pos:line="152" pos:column="20">-&gt;<pos:position pos:line="152" pos:column="25"/></operator><name pos:line="152" pos:column="22">r<pos:position pos:line="152" pos:column="23"/></name><operator pos:line="152" pos:column="23">-&gt;<pos:position pos:line="152" pos:column="28"/></operator><name pos:line="152" pos:column="25">status<pos:position pos:line="152" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="152" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="153" pos:column="6"/></block></else></if>

    <if pos:line="155" pos:column="5">if <condition pos:line="155" pos:column="8">(<expr><name><name pos:line="155" pos:column="9">cid<pos:position pos:line="155" pos:column="12"/></name><operator pos:line="155" pos:column="12">-&gt;<pos:position pos:line="155" pos:column="17"/></operator><name pos:line="155" pos:column="14">r<pos:position pos:line="155" pos:column="15"/></name><operator pos:line="155" pos:column="15">-&gt;<pos:position pos:line="155" pos:column="20"/></operator><name pos:line="155" pos:column="17">status<pos:position pos:line="155" pos:column="23"/></name></name> <operator pos:line="155" pos:column="24">==<pos:position pos:line="155" pos:column="26"/></operator> <name pos:line="155" pos:column="27">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="155" pos:column="53"/></name></expr>)<pos:position pos:line="155" pos:column="54"/></condition><then pos:line="155" pos:column="54"> <block pos:line="155" pos:column="55">{
        <return pos:line="156" pos:column="9">return <expr><operator pos:line="156" pos:column="16">-<pos:position pos:line="156" pos:column="17"/></operator><literal type="number" pos:line="156" pos:column="17">1<pos:position pos:line="156" pos:column="18"/></literal></expr>;<pos:position pos:line="156" pos:column="19"/></return>
    }<pos:position pos:line="157" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="159" pos:column="5">/* If only Status was passed, we consumed nothing
     */</comment>
    <if pos:line="161" pos:column="5">if <condition pos:line="161" pos:column="8">(<expr><operator pos:line="161" pos:column="9">!<pos:position pos:line="161" pos:column="10"/></operator><name pos:line="161" pos:column="10">head_present<pos:position pos:line="161" pos:column="22"/></name></expr>)<pos:position pos:line="161" pos:column="23"/></condition><then pos:line="161" pos:column="23">
        <block type="pseudo"><return pos:line="162" pos:column="9">return <expr><literal type="number" pos:line="162" pos:column="16">0<pos:position pos:line="162" pos:column="17"/></literal></expr>;<pos:position pos:line="162" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="164" pos:column="5">cid<pos:position pos:line="164" pos:column="8"/></name><operator pos:line="164" pos:column="8">-&gt;<pos:position pos:line="164" pos:column="13"/></operator><name pos:line="164" pos:column="10">headers_set<pos:position pos:line="164" pos:column="21"/></name></name> <operator pos:line="164" pos:column="22">=<pos:position pos:line="164" pos:column="23"/></operator> <literal type="number" pos:line="164" pos:column="24">1<pos:position pos:line="164" pos:column="25"/></literal></expr>;<pos:position pos:line="164" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="166" pos:column="5">/* If all went well, tell the caller we consumed the headers complete
     */</comment>
    <if pos:line="168" pos:column="5">if <condition pos:line="168" pos:column="8">(<expr><operator pos:line="168" pos:column="9">!<pos:position pos:line="168" pos:column="10"/></operator><name pos:line="168" pos:column="10">termch<pos:position pos:line="168" pos:column="16"/></name></expr>)<pos:position pos:line="168" pos:column="17"/></condition><then pos:line="168" pos:column="17">
        <block type="pseudo"><return pos:line="169" pos:column="9">return<expr><operator pos:line="169" pos:column="15">(<pos:position pos:line="169" pos:column="16"/></operator><name pos:line="169" pos:column="16">ate<pos:position pos:line="169" pos:column="19"/></name> <operator pos:line="169" pos:column="20">+<pos:position pos:line="169" pos:column="21"/></operator> <name pos:line="169" pos:column="22">headlen<pos:position pos:line="169" pos:column="29"/></name><operator pos:line="169" pos:column="29">)<pos:position pos:line="169" pos:column="30"/></operator></expr>;<pos:position pos:line="169" pos:column="31"/></return></block></then></if>

    <comment type="block" pos:line="171" pos:column="5">/* Any data left must be sent directly by the caller, all we
     * give back is the size of the headers we consumed (which only
     * happens if the parser got to the head arg, which varies based
     * on whether we passed stat+head to scan, or only head.
     */</comment>
    <if pos:line="176" pos:column="5">if <condition pos:line="176" pos:column="8">(<expr><name pos:line="176" pos:column="9">termch<pos:position pos:line="176" pos:column="15"/></name> <operator pos:line="176" pos:column="16">&amp;&amp;<pos:position pos:line="176" pos:column="26"/></operator> <operator pos:line="176" pos:column="19">(<pos:position pos:line="176" pos:column="20"/></operator><name pos:line="176" pos:column="20">termarg<pos:position pos:line="176" pos:column="27"/></name> <operator pos:line="176" pos:column="28">==<pos:position pos:line="176" pos:column="30"/></operator> <operator pos:line="176" pos:column="31">(<pos:position pos:line="176" pos:column="32"/></operator><ternary><condition><expr><name pos:line="176" pos:column="32">stat<pos:position pos:line="176" pos:column="36"/></name></expr> ?<pos:position pos:line="176" pos:column="38"/></condition><then pos:line="176" pos:column="38"> <expr><literal type="number" pos:line="176" pos:column="39">1<pos:position pos:line="176" pos:column="40"/></literal></expr> <pos:position pos:line="176" pos:column="41"/></then><else pos:line="176" pos:column="41">: <expr><literal type="number" pos:line="176" pos:column="43">0<pos:position pos:line="176" pos:column="44"/></literal></expr></else></ternary><operator pos:line="176" pos:column="44">)<pos:position pos:line="176" pos:column="45"/></operator><operator pos:line="176" pos:column="45">)<pos:position pos:line="176" pos:column="46"/></operator>
               <operator pos:line="177" pos:column="16">&amp;&amp;<pos:position pos:line="177" pos:column="26"/></operator> <name pos:line="177" pos:column="19">head_present<pos:position pos:line="177" pos:column="31"/></name> <operator pos:line="177" pos:column="32">&amp;&amp;<pos:position pos:line="177" pos:column="42"/></operator> <name pos:line="177" pos:column="35">head<pos:position pos:line="177" pos:column="39"/></name> <operator pos:line="177" pos:column="40">+<pos:position pos:line="177" pos:column="41"/></operator> <name pos:line="177" pos:column="42">headlen<pos:position pos:line="177" pos:column="49"/></name> <operator pos:line="177" pos:column="50">&gt;<pos:position pos:line="177" pos:column="54"/></operator> <name pos:line="177" pos:column="52">termch<pos:position pos:line="177" pos:column="58"/></name></expr>)<pos:position pos:line="177" pos:column="59"/></condition><then pos:line="177" pos:column="59"> <block pos:line="177" pos:column="60">{
        <return pos:line="178" pos:column="9">return <expr><name pos:line="178" pos:column="16">ate<pos:position pos:line="178" pos:column="19"/></name> <operator pos:line="178" pos:column="20">+<pos:position pos:line="178" pos:column="21"/></operator> <name pos:line="178" pos:column="22">termch<pos:position pos:line="178" pos:column="28"/></name> <operator pos:line="178" pos:column="29">-<pos:position pos:line="178" pos:column="30"/></operator> <name pos:line="178" pos:column="31">head<pos:position pos:line="178" pos:column="35"/></name></expr>;<pos:position pos:line="178" pos:column="36"/></return>
    }<pos:position pos:line="179" pos:column="6"/></block></then></if>
    <return pos:line="180" pos:column="5">return <expr><name pos:line="180" pos:column="12">ate<pos:position pos:line="180" pos:column="15"/></name></expr>;<pos:position pos:line="180" pos:column="16"/></return>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

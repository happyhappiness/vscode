<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1582_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">util_ldap_cache_checkuserid<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">r<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">util_ldap_connection_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">ldc<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">url<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">basedn<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">int<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">scope<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="79">char<pos:position pos:line="2" pos:column="83"/></name> <modifier pos:line="2" pos:column="84">*<pos:position pos:line="2" pos:column="85"/></modifier><modifier pos:line="2" pos:column="85">*<pos:position pos:line="2" pos:column="86"/></modifier></type><name pos:line="2" pos:column="86">attrs<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">filter<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="51">const<pos:position pos:line="3" pos:column="56"/></specifier> <name pos:line="3" pos:column="57">char<pos:position pos:line="3" pos:column="61"/></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">bindpw<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="71">const<pos:position pos:line="3" pos:column="76"/></specifier> <name pos:line="3" pos:column="77">char<pos:position pos:line="3" pos:column="81"/></name> <modifier pos:line="3" pos:column="82">*<pos:position pos:line="3" pos:column="83"/></modifier><modifier pos:line="3" pos:column="83">*<pos:position pos:line="3" pos:column="84"/></modifier></type><name pos:line="3" pos:column="84">binddn<pos:position pos:line="3" pos:column="90"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="4" pos:column="31">const<pos:position pos:line="4" pos:column="36"/></specifier> <name pos:line="4" pos:column="37">char<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier><modifier pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></modifier><modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier></type><name pos:line="4" pos:column="45">retvals<pos:position pos:line="4" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="53"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">vals<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">NULL<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">LDAPMessage<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">res<pos:position pos:line="8" pos:column="21"/></name></decl>, <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="24">entry<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">dn<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">count<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">failures<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">util_url_node_t<pos:position pos:line="12" pos:column="20"/></name> <modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">curl<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>		<comment type="block" pos:line="12" pos:column="41">/* Cached URL node */</comment>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">util_url_node_t<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">curnode<pos:position pos:line="13" pos:column="28"/></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">util_search_node_t<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">search_nodep<pos:position pos:line="14" pos:column="37"/></name></decl>;<pos:position pos:line="14" pos:column="38"/></decl_stmt>	<comment type="block" pos:line="14" pos:column="41">/* Cached search node */</comment>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">util_search_node_t<pos:position pos:line="15" pos:column="23"/></name></type> <name pos:line="15" pos:column="24">the_search_node<pos:position pos:line="15" pos:column="39"/></name></decl>;<pos:position pos:line="15" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_time_t<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">curtime<pos:position pos:line="16" pos:column="23"/></name></decl>;<pos:position pos:line="16" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">util_ldap_state_t<pos:position pos:line="18" pos:column="22"/></name> <modifier pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></modifier></type><name pos:line="18" pos:column="24">st<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= 
        <expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">util_ldap_state_t<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></operator><operator pos:line="19" pos:column="29">)<pos:position pos:line="19" pos:column="30"/></operator><call><name pos:line="19" pos:column="30">ap_get_module_config<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name><name pos:line="19" pos:column="51">r<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">server<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">-&gt;<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="62">module_config<pos:position pos:line="19" pos:column="75"/></name></name></expr></argument>,
        <argument><expr><operator pos:line="20" pos:column="9">&amp;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="10">ldap_module<pos:position pos:line="20" pos:column="21"/></name></expr></argument>)<pos:position pos:line="20" pos:column="22"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* read lock this function */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">LDAP_CACHE_LOCK_CREATE<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name><name pos:line="23" pos:column="28">st<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">pool<pos:position pos:line="23" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* Get the cache node for this url */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">LDAP_CACHE_WRLOCK<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">()<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">curnode<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">url<pos:position pos:line="27" pos:column="16"/></name></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">url<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">curl<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">util_url_node_t<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></operator><operator pos:line="28" pos:column="30">)<pos:position pos:line="28" pos:column="31"/></operator><call><name pos:line="28" pos:column="31">util_ald_cache_fetch<pos:position pos:line="28" pos:column="51"/></name><argument_list pos:line="28" pos:column="51">(<argument><expr><name pos:line="28" pos:column="52">util_ldap_cache<pos:position pos:line="28" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="69">&amp;<pos:position pos:line="28" pos:column="74"/></operator><name pos:line="28" pos:column="70">curnode<pos:position pos:line="28" pos:column="77"/></name></expr></argument>)<pos:position pos:line="28" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="79"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">curl<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">==<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">NULL<pos:position pos:line="29" pos:column="21"/></name></expr>)<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22"> <block pos:line="29" pos:column="23">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">curl<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">util_ald_create_caches<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">st<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">url<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">LDAP_CACHE_UNLOCK<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">()<pos:position pos:line="32" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">LDAP_CACHE_RDLOCK<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">()<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">the_search_node<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">.<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">username<pos:position pos:line="35" pos:column="29"/></name></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="32">filter<pos:position pos:line="35" pos:column="38"/></name></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">search_nodep<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <call><name pos:line="36" pos:column="20">util_ald_cache_fetch<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><name><name pos:line="36" pos:column="41">curl<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">search_cache<pos:position pos:line="36" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="61">&amp;<pos:position pos:line="36" pos:column="66"/></operator><name pos:line="36" pos:column="62">the_search_node<pos:position pos:line="36" pos:column="77"/></name></expr></argument>)<pos:position pos:line="36" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="79"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">search_nodep<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">!=<pos:position pos:line="37" pos:column="24"/></operator> <name pos:line="37" pos:column="25">NULL<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">&amp;&amp;<pos:position pos:line="37" pos:column="40"/></operator> <name><name pos:line="37" pos:column="33">search_nodep<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">bindpw<pos:position pos:line="37" pos:column="53"/></name></name></expr>)<pos:position pos:line="37" pos:column="54"/></condition><then pos:line="37" pos:column="54"> <block pos:line="37" pos:column="55">{

        <comment type="block" pos:line="39" pos:column="9">/* found entry in search cache... */</comment>
        <expr_stmt><expr><name pos:line="40" pos:column="9">curtime<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <call><name pos:line="40" pos:column="19">apr_time_now<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">()<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="42" pos:column="9">/*
         * Remove this item from the cache if its expired, or if the 
         * sent password doesn't match the storepassword.
         */</comment>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">(<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">curtime<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">-<pos:position pos:line="46" pos:column="23"/></operator> <name><name pos:line="46" pos:column="24">search_nodep<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">-&gt;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="38">lastbind<pos:position pos:line="46" pos:column="46"/></name></name><operator pos:line="46" pos:column="46">)<pos:position pos:line="46" pos:column="47"/></operator> <operator pos:line="46" pos:column="48">&gt;<pos:position pos:line="46" pos:column="52"/></operator> <name><name pos:line="46" pos:column="50">st<pos:position pos:line="46" pos:column="52"/></name><operator pos:line="46" pos:column="52">-&gt;<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="54">search_cache_ttl<pos:position pos:line="46" pos:column="70"/></name></name></expr>)<pos:position pos:line="46" pos:column="71"/></condition><then pos:line="46" pos:column="71"> <block pos:line="46" pos:column="72">{
            <comment type="block" pos:line="47" pos:column="13">/* ...but entry is too old */</comment>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">util_ald_cache_remove<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name><name pos:line="48" pos:column="35">curl<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">-&gt;<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="41">search_cache<pos:position pos:line="48" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="55">search_nodep<pos:position pos:line="48" pos:column="67"/></name></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then>
        <elseif pos:line="50" pos:column="9">else <if pos:line="50" pos:column="14">if <condition pos:line="50" pos:column="17">(<expr><call><name pos:line="50" pos:column="18">strcmp<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name><name pos:line="50" pos:column="25">search_nodep<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">bindpw<pos:position pos:line="50" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">bindpw<pos:position pos:line="50" pos:column="53"/></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call> <operator pos:line="50" pos:column="55">!=<pos:position pos:line="50" pos:column="57"/></operator> <literal type="number" pos:line="50" pos:column="58">0<pos:position pos:line="50" pos:column="59"/></literal></expr>)<pos:position pos:line="50" pos:column="60"/></condition><then pos:line="50" pos:column="60"> <block pos:line="50" pos:column="61">{
	    <comment type="block" pos:line="51" pos:column="13">/* ...but cached password doesn't match sent password */</comment>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">util_ald_cache_remove<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name><name pos:line="52" pos:column="35">curl<pos:position pos:line="52" pos:column="39"/></name><operator pos:line="52" pos:column="39">-&gt;<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="41">search_cache<pos:position pos:line="52" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="55">search_nodep<pos:position pos:line="52" pos:column="67"/></name></expr></argument>)<pos:position pos:line="52" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if></elseif>
        <else pos:line="54" pos:column="9">else <block pos:line="54" pos:column="14">{
            <comment type="block" pos:line="55" pos:column="13">/* ...and entry is valid */</comment>
            <expr_stmt><expr><operator pos:line="56" pos:column="13">*<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">binddn<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <name><name pos:line="56" pos:column="23">search_nodep<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">-&gt;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="37">dn<pos:position pos:line="56" pos:column="39"/></name></name></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="57" pos:column="13">*<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">retvals<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">=<pos:position pos:line="57" pos:column="23"/></operator> <name><name pos:line="57" pos:column="24">search_nodep<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">-&gt;<pos:position pos:line="57" pos:column="41"/></operator><name pos:line="57" pos:column="38">vals<pos:position pos:line="57" pos:column="42"/></name></name></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">LDAP_CACHE_UNLOCK<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">()<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">ldc<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">reason<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <literal type="string" pos:line="59" pos:column="27">"Authentication successful (cached)"<pos:position pos:line="59" pos:column="63"/></literal></expr>;<pos:position pos:line="59" pos:column="64"/></expr_stmt>
            <return pos:line="60" pos:column="13">return <expr><name pos:line="60" pos:column="20">LDAP_SUCCESS<pos:position pos:line="60" pos:column="32"/></name></expr>;<pos:position pos:line="60" pos:column="33"/></return>
        }<pos:position pos:line="61" pos:column="10"/></block></else></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="63" pos:column="5">/* unlock this read lock */</comment>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">LDAP_CACHE_UNLOCK<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">()<pos:position pos:line="64" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="66" pos:column="5">/*	
     * At this point, there is no valid cached search, so lets do the search.
     */</comment>

    <comment type="block" pos:line="70" pos:column="5">/*
     * If any LDAP operation fails due to LDAP_SERVER_DOWN, control returns here.
     */</comment>
<label><name pos:line="73" pos:column="1">start_over<pos:position pos:line="73" pos:column="11"/></name>:<pos:position pos:line="73" pos:column="12"/></label>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">failures<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">++<pos:position pos:line="74" pos:column="19"/></operator> <operator pos:line="74" pos:column="20">&gt;<pos:position pos:line="74" pos:column="24"/></operator> <literal type="number" pos:line="74" pos:column="22">10<pos:position pos:line="74" pos:column="24"/></literal></expr>)<pos:position pos:line="74" pos:column="25"/></condition><then pos:line="74" pos:column="25"> <block pos:line="74" pos:column="26">{
        <return pos:line="75" pos:column="9">return <expr><name pos:line="75" pos:column="16">result<pos:position pos:line="75" pos:column="22"/></name></expr>;<pos:position pos:line="75" pos:column="23"/></return>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name pos:line="77" pos:column="9">LDAP_SUCCESS<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">!=<pos:position pos:line="77" pos:column="24"/></operator> <operator pos:line="77" pos:column="25">(<pos:position pos:line="77" pos:column="26"/></operator><name pos:line="77" pos:column="26">result<pos:position pos:line="77" pos:column="32"/></name> <operator pos:line="77" pos:column="33">=<pos:position pos:line="77" pos:column="34"/></operator> <call><name pos:line="77" pos:column="35">util_ldap_connection_open<pos:position pos:line="77" pos:column="60"/></name><argument_list pos:line="77" pos:column="60">(<argument><expr><name pos:line="77" pos:column="61">ldc<pos:position pos:line="77" pos:column="64"/></name></expr></argument>)<pos:position pos:line="77" pos:column="65"/></argument_list></call><operator pos:line="77" pos:column="65">)<pos:position pos:line="77" pos:column="66"/></operator></expr>)<pos:position pos:line="77" pos:column="67"/></condition><then pos:line="77" pos:column="67"> <block pos:line="77" pos:column="68">{
        <return pos:line="78" pos:column="9">return <expr><name pos:line="78" pos:column="16">result<pos:position pos:line="78" pos:column="22"/></name></expr>;<pos:position pos:line="78" pos:column="23"/></return>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="81" pos:column="5">/* try do the search */</comment>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><operator pos:line="82" pos:column="9">(<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">result<pos:position pos:line="82" pos:column="16"/></name> <operator pos:line="82" pos:column="17">=<pos:position pos:line="82" pos:column="18"/></operator> <call><name pos:line="82" pos:column="19">ldap_search_ext_s<pos:position pos:line="82" pos:column="36"/></name><argument_list pos:line="82" pos:column="36">(<argument><expr><name><name pos:line="82" pos:column="37">ldc<pos:position pos:line="82" pos:column="40"/></name><operator pos:line="82" pos:column="40">-&gt;<pos:position pos:line="82" pos:column="45"/></operator><name pos:line="82" pos:column="42">ldap<pos:position pos:line="82" pos:column="46"/></name></name></expr></argument>,
				    <argument><expr><name pos:line="83" pos:column="37">basedn<pos:position pos:line="83" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="45">scope<pos:position pos:line="83" pos:column="50"/></name></expr></argument>, 
				    <argument><expr><name pos:line="84" pos:column="37">filter<pos:position pos:line="84" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="45">attrs<pos:position pos:line="84" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="52">0<pos:position pos:line="84" pos:column="53"/></literal></expr></argument>, 
				    <argument><expr><name pos:line="85" pos:column="37">NULL<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="43">NULL<pos:position pos:line="85" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="49">NULL<pos:position pos:line="85" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="55">-<pos:position pos:line="85" pos:column="56"/></operator><literal type="number" pos:line="85" pos:column="56">1<pos:position pos:line="85" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="85" pos:column="59">&amp;<pos:position pos:line="85" pos:column="64"/></operator><name pos:line="85" pos:column="60">res<pos:position pos:line="85" pos:column="63"/></name></expr></argument>)<pos:position pos:line="85" pos:column="64"/></argument_list></call><operator pos:line="85" pos:column="64">)<pos:position pos:line="85" pos:column="65"/></operator> <operator pos:line="85" pos:column="66">==<pos:position pos:line="85" pos:column="68"/></operator> <name pos:line="85" pos:column="69">LDAP_SERVER_DOWN<pos:position pos:line="85" pos:column="85"/></name></expr>)<pos:position pos:line="85" pos:column="86"/></condition><then pos:line="85" pos:column="86"> <block pos:line="85" pos:column="87">{
        <expr_stmt><expr><name><name pos:line="86" pos:column="9">ldc<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">-&gt;<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="14">reason<pos:position pos:line="86" pos:column="20"/></name></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <literal type="string" pos:line="86" pos:column="23">"ldap_search_ext_s() for user failed with server down"<pos:position pos:line="86" pos:column="77"/></literal></expr>;<pos:position pos:line="86" pos:column="78"/></expr_stmt>
        <goto pos:line="87" pos:column="9">goto <name pos:line="87" pos:column="14">start_over<pos:position pos:line="87" pos:column="24"/></name>;<pos:position pos:line="87" pos:column="25"/></goto>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="90" pos:column="5">/* if there is an error (including LDAP_NO_SUCH_OBJECT) return now */</comment>
    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name pos:line="91" pos:column="9">result<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">!=<pos:position pos:line="91" pos:column="18"/></operator> <name pos:line="91" pos:column="19">LDAP_SUCCESS<pos:position pos:line="91" pos:column="31"/></name></expr>)<pos:position pos:line="91" pos:column="32"/></condition><then pos:line="91" pos:column="32"> <block pos:line="91" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">ldc<pos:position pos:line="92" pos:column="12"/></name><operator pos:line="92" pos:column="12">-&gt;<pos:position pos:line="92" pos:column="17"/></operator><name pos:line="92" pos:column="14">reason<pos:position pos:line="92" pos:column="20"/></name></name> <operator pos:line="92" pos:column="21">=<pos:position pos:line="92" pos:column="22"/></operator> <literal type="string" pos:line="92" pos:column="23">"ldap_search_ext_s() for user failed"<pos:position pos:line="92" pos:column="60"/></literal></expr>;<pos:position pos:line="92" pos:column="61"/></expr_stmt>
        <return pos:line="93" pos:column="9">return <expr><name pos:line="93" pos:column="16">result<pos:position pos:line="93" pos:column="22"/></name></expr>;<pos:position pos:line="93" pos:column="23"/></return>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="96" pos:column="5">/* 
     * We should have found exactly one entry; to find a different
     * number is an error.
     */</comment>
    <expr_stmt><expr><name pos:line="100" pos:column="5">count<pos:position pos:line="100" pos:column="10"/></name> <operator pos:line="100" pos:column="11">=<pos:position pos:line="100" pos:column="12"/></operator> <call><name pos:line="100" pos:column="13">ldap_count_entries<pos:position pos:line="100" pos:column="31"/></name><argument_list pos:line="100" pos:column="31">(<argument><expr><name><name pos:line="100" pos:column="32">ldc<pos:position pos:line="100" pos:column="35"/></name><operator pos:line="100" pos:column="35">-&gt;<pos:position pos:line="100" pos:column="40"/></operator><name pos:line="100" pos:column="37">ldap<pos:position pos:line="100" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="43">res<pos:position pos:line="100" pos:column="46"/></name></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="48"/></expr_stmt>
    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><name pos:line="101" pos:column="9">count<pos:position pos:line="101" pos:column="14"/></name> <operator pos:line="101" pos:column="15">!=<pos:position pos:line="101" pos:column="17"/></operator> <literal type="number" pos:line="101" pos:column="18">1<pos:position pos:line="101" pos:column="19"/></literal></expr>)<pos:position pos:line="101" pos:column="20"/></condition><then pos:line="101" pos:column="20"> <block pos:line="101" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="102" pos:column="9">ldap_msgfree<pos:position pos:line="102" pos:column="21"/></name><argument_list pos:line="102" pos:column="21">(<argument><expr><name pos:line="102" pos:column="22">res<pos:position pos:line="102" pos:column="25"/></name></expr></argument>)<pos:position pos:line="102" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="103" pos:column="9">ldc<pos:position pos:line="103" pos:column="12"/></name><operator pos:line="103" pos:column="12">-&gt;<pos:position pos:line="103" pos:column="17"/></operator><name pos:line="103" pos:column="14">reason<pos:position pos:line="103" pos:column="20"/></name></name> <operator pos:line="103" pos:column="21">=<pos:position pos:line="103" pos:column="22"/></operator> <literal type="string" pos:line="103" pos:column="23">"User is not unique (search found two or more matches)"<pos:position pos:line="103" pos:column="78"/></literal></expr>;<pos:position pos:line="103" pos:column="79"/></expr_stmt>
        <return pos:line="104" pos:column="9">return <expr><name pos:line="104" pos:column="16">LDAP_NO_SUCH_OBJECT<pos:position pos:line="104" pos:column="35"/></name></expr>;<pos:position pos:line="104" pos:column="36"/></return>
    }<pos:position pos:line="105" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="107" pos:column="5">entry<pos:position pos:line="107" pos:column="10"/></name> <operator pos:line="107" pos:column="11">=<pos:position pos:line="107" pos:column="12"/></operator> <call><name pos:line="107" pos:column="13">ldap_first_entry<pos:position pos:line="107" pos:column="29"/></name><argument_list pos:line="107" pos:column="29">(<argument><expr><name><name pos:line="107" pos:column="30">ldc<pos:position pos:line="107" pos:column="33"/></name><operator pos:line="107" pos:column="33">-&gt;<pos:position pos:line="107" pos:column="38"/></operator><name pos:line="107" pos:column="35">ldap<pos:position pos:line="107" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="41">res<pos:position pos:line="107" pos:column="44"/></name></expr></argument>)<pos:position pos:line="107" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="109" pos:column="5">/* Grab the dn, copy it into the pool, and free it again */</comment>
    <expr_stmt><expr><name pos:line="110" pos:column="5">dn<pos:position pos:line="110" pos:column="7"/></name> <operator pos:line="110" pos:column="8">=<pos:position pos:line="110" pos:column="9"/></operator> <call><name pos:line="110" pos:column="10">ldap_get_dn<pos:position pos:line="110" pos:column="21"/></name><argument_list pos:line="110" pos:column="21">(<argument><expr><name><name pos:line="110" pos:column="22">ldc<pos:position pos:line="110" pos:column="25"/></name><operator pos:line="110" pos:column="25">-&gt;<pos:position pos:line="110" pos:column="30"/></operator><name pos:line="110" pos:column="27">ldap<pos:position pos:line="110" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="33">entry<pos:position pos:line="110" pos:column="38"/></name></expr></argument>)<pos:position pos:line="110" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="111" pos:column="5">*<pos:position pos:line="111" pos:column="6"/></operator><name pos:line="111" pos:column="6">binddn<pos:position pos:line="111" pos:column="12"/></name> <operator pos:line="111" pos:column="13">=<pos:position pos:line="111" pos:column="14"/></operator> <call><name pos:line="111" pos:column="15">apr_pstrdup<pos:position pos:line="111" pos:column="26"/></name><argument_list pos:line="111" pos:column="26">(<argument><expr><name><name pos:line="111" pos:column="27">st<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">-&gt;<pos:position pos:line="111" pos:column="34"/></operator><name pos:line="111" pos:column="31">pool<pos:position pos:line="111" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="37">dn<pos:position pos:line="111" pos:column="39"/></name></expr></argument>)<pos:position pos:line="111" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="112" pos:column="5">ldap_memfree<pos:position pos:line="112" pos:column="17"/></name><argument_list pos:line="112" pos:column="17">(<argument><expr><name pos:line="112" pos:column="18">dn<pos:position pos:line="112" pos:column="20"/></name></expr></argument>)<pos:position pos:line="112" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="114" pos:column="5">/* 
     * A bind to the server with an empty password always succeeds, so
     * we check to ensure that the password is not empty. This implies
     * that users who actually do have empty passwords will never be
     * able to authenticate with this module. I don't see this as a big
     * problem.
     */</comment>
    <if pos:line="121" pos:column="5">if <condition pos:line="121" pos:column="8">(<expr><call><name pos:line="121" pos:column="9">strlen<pos:position pos:line="121" pos:column="15"/></name><argument_list pos:line="121" pos:column="15">(<argument><expr><name pos:line="121" pos:column="16">bindpw<pos:position pos:line="121" pos:column="22"/></name></expr></argument>)<pos:position pos:line="121" pos:column="23"/></argument_list></call> <operator pos:line="121" pos:column="24">&lt;=<pos:position pos:line="121" pos:column="29"/></operator> <literal type="number" pos:line="121" pos:column="27">0<pos:position pos:line="121" pos:column="28"/></literal></expr>)<pos:position pos:line="121" pos:column="29"/></condition><then pos:line="121" pos:column="29"> <block pos:line="121" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">ldap_msgfree<pos:position pos:line="122" pos:column="21"/></name><argument_list pos:line="122" pos:column="21">(<argument><expr><name pos:line="122" pos:column="22">res<pos:position pos:line="122" pos:column="25"/></name></expr></argument>)<pos:position pos:line="122" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="123" pos:column="9">ldc<pos:position pos:line="123" pos:column="12"/></name><operator pos:line="123" pos:column="12">-&gt;<pos:position pos:line="123" pos:column="17"/></operator><name pos:line="123" pos:column="14">reason<pos:position pos:line="123" pos:column="20"/></name></name> <operator pos:line="123" pos:column="21">=<pos:position pos:line="123" pos:column="22"/></operator> <literal type="string" pos:line="123" pos:column="23">"Empty password not allowed"<pos:position pos:line="123" pos:column="51"/></literal></expr>;<pos:position pos:line="123" pos:column="52"/></expr_stmt>
        <return pos:line="124" pos:column="9">return <expr><name pos:line="124" pos:column="16">LDAP_INVALID_CREDENTIALS<pos:position pos:line="124" pos:column="40"/></name></expr>;<pos:position pos:line="124" pos:column="41"/></return>
    }<pos:position pos:line="125" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="127" pos:column="5">/* 
     * Attempt to bind with the retrieved dn and the password. If the bind
     * fails, it means that the password is wrong (the dn obviously
     * exists, since we just retrieved it)
     */</comment>
    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><operator pos:line="132" pos:column="9">(<pos:position pos:line="132" pos:column="10"/></operator><name pos:line="132" pos:column="10">result<pos:position pos:line="132" pos:column="16"/></name> <operator pos:line="132" pos:column="17">=<pos:position pos:line="132" pos:column="18"/></operator> 
         <call><name pos:line="133" pos:column="10">ldap_simple_bind_s<pos:position pos:line="133" pos:column="28"/></name><argument_list pos:line="133" pos:column="28">(<argument><expr><name><name pos:line="133" pos:column="29">ldc<pos:position pos:line="133" pos:column="32"/></name><operator pos:line="133" pos:column="32">-&gt;<pos:position pos:line="133" pos:column="37"/></operator><name pos:line="133" pos:column="34">ldap<pos:position pos:line="133" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="40">*<pos:position pos:line="133" pos:column="41"/></operator><name pos:line="133" pos:column="41">binddn<pos:position pos:line="133" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="49">bindpw<pos:position pos:line="133" pos:column="55"/></name></expr></argument>)<pos:position pos:line="133" pos:column="56"/></argument_list></call><operator pos:line="133" pos:column="56">)<pos:position pos:line="133" pos:column="57"/></operator> <operator pos:line="133" pos:column="58">==<pos:position pos:line="133" pos:column="60"/></operator> 
         <name pos:line="134" pos:column="10">LDAP_SERVER_DOWN<pos:position pos:line="134" pos:column="26"/></name></expr>)<pos:position pos:line="134" pos:column="27"/></condition><then pos:line="134" pos:column="27"> <block pos:line="134" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="135" pos:column="9">ldc<pos:position pos:line="135" pos:column="12"/></name><operator pos:line="135" pos:column="12">-&gt;<pos:position pos:line="135" pos:column="17"/></operator><name pos:line="135" pos:column="14">reason<pos:position pos:line="135" pos:column="20"/></name></name> <operator pos:line="135" pos:column="21">=<pos:position pos:line="135" pos:column="22"/></operator> <literal type="string" pos:line="135" pos:column="23">"ldap_simple_bind_s() to check user credentials failed with server down"<pos:position pos:line="135" pos:column="95"/></literal></expr>;<pos:position pos:line="135" pos:column="96"/></expr_stmt>
        <goto pos:line="136" pos:column="9">goto <name pos:line="136" pos:column="14">start_over<pos:position pos:line="136" pos:column="24"/></name>;<pos:position pos:line="136" pos:column="25"/></goto>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="139" pos:column="5">/* failure? if so - return */</comment>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><name pos:line="140" pos:column="9">result<pos:position pos:line="140" pos:column="15"/></name> <operator pos:line="140" pos:column="16">!=<pos:position pos:line="140" pos:column="18"/></operator> <name pos:line="140" pos:column="19">LDAP_SUCCESS<pos:position pos:line="140" pos:column="31"/></name></expr>)<pos:position pos:line="140" pos:column="32"/></condition><then pos:line="140" pos:column="32"> <block pos:line="140" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="141" pos:column="9">ldc<pos:position pos:line="141" pos:column="12"/></name><operator pos:line="141" pos:column="12">-&gt;<pos:position pos:line="141" pos:column="17"/></operator><name pos:line="141" pos:column="14">reason<pos:position pos:line="141" pos:column="20"/></name></name> <operator pos:line="141" pos:column="21">=<pos:position pos:line="141" pos:column="22"/></operator> <literal type="string" pos:line="141" pos:column="23">"ldap_simple_bind_s() to check user credentials failed"<pos:position pos:line="141" pos:column="78"/></literal></expr>;<pos:position pos:line="141" pos:column="79"/></expr_stmt>
        <return pos:line="142" pos:column="9">return <expr><name pos:line="142" pos:column="16">result<pos:position pos:line="142" pos:column="22"/></name></expr>;<pos:position pos:line="142" pos:column="23"/></return>
    }<pos:position pos:line="143" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="145" pos:column="5">/*
     * Get values for the provided attributes.
     */</comment>
    <if pos:line="148" pos:column="5">if <condition pos:line="148" pos:column="8">(<expr><name pos:line="148" pos:column="9">attrs<pos:position pos:line="148" pos:column="14"/></name></expr>)<pos:position pos:line="148" pos:column="15"/></condition><then pos:line="148" pos:column="15"> <block pos:line="148" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="149" pos:column="9">int<pos:position pos:line="149" pos:column="12"/></name></type> <name pos:line="149" pos:column="13">k<pos:position pos:line="149" pos:column="14"/></name> <init pos:line="149" pos:column="15">= <expr><literal type="number" pos:line="149" pos:column="17">0<pos:position pos:line="149" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="149" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="150" pos:column="9">int<pos:position pos:line="150" pos:column="12"/></name></type> <name pos:line="150" pos:column="13">i<pos:position pos:line="150" pos:column="14"/></name> <init pos:line="150" pos:column="15">= <expr><literal type="number" pos:line="150" pos:column="17">0<pos:position pos:line="150" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="150" pos:column="19"/></decl_stmt>
        <while pos:line="151" pos:column="9">while <condition pos:line="151" pos:column="15">(<expr><name><name pos:line="151" pos:column="16">attrs<pos:position pos:line="151" pos:column="21"/></name><index pos:line="151" pos:column="21">[<expr><name pos:line="151" pos:column="22">k<pos:position pos:line="151" pos:column="23"/></name><operator pos:line="151" pos:column="23">++<pos:position pos:line="151" pos:column="25"/></operator></expr>]<pos:position pos:line="151" pos:column="26"/></index></name></expr>)<pos:position pos:line="151" pos:column="27"/></condition><block type="pseudo"><empty_stmt pos:line="151" pos:column="27">;<pos:position pos:line="151" pos:column="28"/></empty_stmt></block></while>
        <expr_stmt><expr><name pos:line="152" pos:column="9">vals<pos:position pos:line="152" pos:column="13"/></name> <operator pos:line="152" pos:column="14">=<pos:position pos:line="152" pos:column="15"/></operator> <call><name pos:line="152" pos:column="16">apr_pcalloc<pos:position pos:line="152" pos:column="27"/></name><argument_list pos:line="152" pos:column="27">(<argument><expr><name><name pos:line="152" pos:column="28">r<pos:position pos:line="152" pos:column="29"/></name><operator pos:line="152" pos:column="29">-&gt;<pos:position pos:line="152" pos:column="34"/></operator><name pos:line="152" pos:column="31">pool<pos:position pos:line="152" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="152" pos:column="37">sizeof<argument_list pos:line="152" pos:column="43">(<argument><expr><name pos:line="152" pos:column="44">char<pos:position pos:line="152" pos:column="48"/></name> <operator pos:line="152" pos:column="49">*<pos:position pos:line="152" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="152" pos:column="51"/></argument_list></sizeof> <operator pos:line="152" pos:column="52">*<pos:position pos:line="152" pos:column="53"/></operator> <operator pos:line="152" pos:column="54">(<pos:position pos:line="152" pos:column="55"/></operator><name pos:line="152" pos:column="55">k<pos:position pos:line="152" pos:column="56"/></name><operator pos:line="152" pos:column="56">+<pos:position pos:line="152" pos:column="57"/></operator><literal type="number" pos:line="152" pos:column="57">1<pos:position pos:line="152" pos:column="58"/></literal><operator pos:line="152" pos:column="58">)<pos:position pos:line="152" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="152" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="61"/></expr_stmt>
        <while pos:line="153" pos:column="9">while <condition pos:line="153" pos:column="15">(<expr><name><name pos:line="153" pos:column="16">attrs<pos:position pos:line="153" pos:column="21"/></name><index pos:line="153" pos:column="21">[<expr><name pos:line="153" pos:column="22">i<pos:position pos:line="153" pos:column="23"/></name></expr>]<pos:position pos:line="153" pos:column="24"/></index></name></expr>)<pos:position pos:line="153" pos:column="25"/></condition> <block pos:line="153" pos:column="26">{
            <decl_stmt><decl><type><name pos:line="154" pos:column="13">char<pos:position pos:line="154" pos:column="17"/></name> <modifier pos:line="154" pos:column="18">*<pos:position pos:line="154" pos:column="19"/></modifier><modifier pos:line="154" pos:column="19">*<pos:position pos:line="154" pos:column="20"/></modifier></type><name pos:line="154" pos:column="20">values<pos:position pos:line="154" pos:column="26"/></name></decl>;<pos:position pos:line="154" pos:column="27"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="155" pos:column="13">int<pos:position pos:line="155" pos:column="16"/></name></type> <name pos:line="155" pos:column="17">j<pos:position pos:line="155" pos:column="18"/></name> <init pos:line="155" pos:column="19">= <expr><literal type="number" pos:line="155" pos:column="21">0<pos:position pos:line="155" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="155" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="156" pos:column="13">char<pos:position pos:line="156" pos:column="17"/></name> <modifier pos:line="156" pos:column="18">*<pos:position pos:line="156" pos:column="19"/></modifier></type><name pos:line="156" pos:column="19">str<pos:position pos:line="156" pos:column="22"/></name> <init pos:line="156" pos:column="23">= <expr><name pos:line="156" pos:column="25">NULL<pos:position pos:line="156" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="156" pos:column="30"/></decl_stmt>
            <comment type="block" pos:line="157" pos:column="13">/* get values */</comment>
            <expr_stmt><expr><name pos:line="158" pos:column="13">values<pos:position pos:line="158" pos:column="19"/></name> <operator pos:line="158" pos:column="20">=<pos:position pos:line="158" pos:column="21"/></operator> <call><name pos:line="158" pos:column="22">ldap_get_values<pos:position pos:line="158" pos:column="37"/></name><argument_list pos:line="158" pos:column="37">(<argument><expr><name><name pos:line="158" pos:column="38">ldc<pos:position pos:line="158" pos:column="41"/></name><operator pos:line="158" pos:column="41">-&gt;<pos:position pos:line="158" pos:column="46"/></operator><name pos:line="158" pos:column="43">ldap<pos:position pos:line="158" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="49">entry<pos:position pos:line="158" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="158" pos:column="56">attrs<pos:position pos:line="158" pos:column="61"/></name><index pos:line="158" pos:column="61">[<expr><name pos:line="158" pos:column="62">i<pos:position pos:line="158" pos:column="63"/></name></expr>]<pos:position pos:line="158" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="158" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="66"/></expr_stmt>
            <while pos:line="159" pos:column="13">while <condition pos:line="159" pos:column="19">(<expr><name pos:line="159" pos:column="20">values<pos:position pos:line="159" pos:column="26"/></name> <operator pos:line="159" pos:column="27">&amp;&amp;<pos:position pos:line="159" pos:column="37"/></operator> <name><name pos:line="159" pos:column="30">values<pos:position pos:line="159" pos:column="36"/></name><index pos:line="159" pos:column="36">[<expr><name pos:line="159" pos:column="37">j<pos:position pos:line="159" pos:column="38"/></name></expr>]<pos:position pos:line="159" pos:column="39"/></index></name></expr>)<pos:position pos:line="159" pos:column="40"/></condition> <block pos:line="159" pos:column="41">{
                <expr_stmt><expr><name pos:line="160" pos:column="17">str<pos:position pos:line="160" pos:column="20"/></name> <operator pos:line="160" pos:column="21">=<pos:position pos:line="160" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="160" pos:column="23">str<pos:position pos:line="160" pos:column="26"/></name></expr> ?<pos:position pos:line="160" pos:column="28"/></condition><then pos:line="160" pos:column="28"> <expr><call><name pos:line="160" pos:column="29">apr_pstrcat<pos:position pos:line="160" pos:column="40"/></name><argument_list pos:line="160" pos:column="40">(<argument><expr><name><name pos:line="160" pos:column="41">r<pos:position pos:line="160" pos:column="42"/></name><operator pos:line="160" pos:column="42">-&gt;<pos:position pos:line="160" pos:column="47"/></operator><name pos:line="160" pos:column="44">pool<pos:position pos:line="160" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="50">str<pos:position pos:line="160" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="55">"; "<pos:position pos:line="160" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="61">values<pos:position pos:line="160" pos:column="67"/></name><index pos:line="160" pos:column="67">[<expr><name pos:line="160" pos:column="68">j<pos:position pos:line="160" pos:column="69"/></name></expr>]<pos:position pos:line="160" pos:column="70"/></index></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="72">NULL<pos:position pos:line="160" pos:column="76"/></name></expr></argument>)<pos:position pos:line="160" pos:column="77"/></argument_list></call></expr> <pos:position pos:line="160" pos:column="78"/></then><else pos:line="160" pos:column="78">: <expr><call><name pos:line="160" pos:column="80">apr_pstrdup<pos:position pos:line="160" pos:column="91"/></name><argument_list pos:line="160" pos:column="91">(<argument><expr><name><name pos:line="160" pos:column="92">r<pos:position pos:line="160" pos:column="93"/></name><operator pos:line="160" pos:column="93">-&gt;<pos:position pos:line="160" pos:column="98"/></operator><name pos:line="160" pos:column="95">pool<pos:position pos:line="160" pos:column="99"/></name></name></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="101">values<pos:position pos:line="160" pos:column="107"/></name><index pos:line="160" pos:column="107">[<expr><name pos:line="160" pos:column="108">j<pos:position pos:line="160" pos:column="109"/></name></expr>]<pos:position pos:line="160" pos:column="110"/></index></name></expr></argument>)<pos:position pos:line="160" pos:column="111"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="160" pos:column="112"/></expr_stmt>
                <expr_stmt><expr><name pos:line="161" pos:column="17">j<pos:position pos:line="161" pos:column="18"/></name><operator pos:line="161" pos:column="18">++<pos:position pos:line="161" pos:column="20"/></operator></expr>;<pos:position pos:line="161" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="162" pos:column="14"/></block></while>
            <expr_stmt><expr><name><name pos:line="163" pos:column="13">vals<pos:position pos:line="163" pos:column="17"/></name><index pos:line="163" pos:column="17">[<expr><name pos:line="163" pos:column="18">i<pos:position pos:line="163" pos:column="19"/></name></expr>]<pos:position pos:line="163" pos:column="20"/></index></name> <operator pos:line="163" pos:column="21">=<pos:position pos:line="163" pos:column="22"/></operator> <name pos:line="163" pos:column="23">str<pos:position pos:line="163" pos:column="26"/></name></expr>;<pos:position pos:line="163" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="164" pos:column="13">i<pos:position pos:line="164" pos:column="14"/></name><operator pos:line="164" pos:column="14">++<pos:position pos:line="164" pos:column="16"/></operator></expr>;<pos:position pos:line="164" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="165" pos:column="10"/></block></while>
        <expr_stmt><expr><operator pos:line="166" pos:column="9">*<pos:position pos:line="166" pos:column="10"/></operator><name pos:line="166" pos:column="10">retvals<pos:position pos:line="166" pos:column="17"/></name> <operator pos:line="166" pos:column="18">=<pos:position pos:line="166" pos:column="19"/></operator> <name pos:line="166" pos:column="20">vals<pos:position pos:line="166" pos:column="24"/></name></expr>;<pos:position pos:line="166" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="167" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="169" pos:column="5">/* 		
     * Add the new username to the search cache.
     */</comment>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">LDAP_CACHE_WRLOCK<pos:position pos:line="172" pos:column="22"/></name><argument_list pos:line="172" pos:column="22">()<pos:position pos:line="172" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="173" pos:column="5">the_search_node<pos:position pos:line="173" pos:column="20"/></name><operator pos:line="173" pos:column="20">.<pos:position pos:line="173" pos:column="21"/></operator><name pos:line="173" pos:column="21">username<pos:position pos:line="173" pos:column="29"/></name></name> <operator pos:line="173" pos:column="30">=<pos:position pos:line="173" pos:column="31"/></operator> <name pos:line="173" pos:column="32">filter<pos:position pos:line="173" pos:column="38"/></name></expr>;<pos:position pos:line="173" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="174" pos:column="5">the_search_node<pos:position pos:line="174" pos:column="20"/></name><operator pos:line="174" pos:column="20">.<pos:position pos:line="174" pos:column="21"/></operator><name pos:line="174" pos:column="21">dn<pos:position pos:line="174" pos:column="23"/></name></name> <operator pos:line="174" pos:column="24">=<pos:position pos:line="174" pos:column="25"/></operator> <operator pos:line="174" pos:column="26">*<pos:position pos:line="174" pos:column="27"/></operator><name pos:line="174" pos:column="27">binddn<pos:position pos:line="174" pos:column="33"/></name></expr>;<pos:position pos:line="174" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="175" pos:column="5">the_search_node<pos:position pos:line="175" pos:column="20"/></name><operator pos:line="175" pos:column="20">.<pos:position pos:line="175" pos:column="21"/></operator><name pos:line="175" pos:column="21">bindpw<pos:position pos:line="175" pos:column="27"/></name></name> <operator pos:line="175" pos:column="28">=<pos:position pos:line="175" pos:column="29"/></operator> <name pos:line="175" pos:column="30">bindpw<pos:position pos:line="175" pos:column="36"/></name></expr>;<pos:position pos:line="175" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="176" pos:column="5">the_search_node<pos:position pos:line="176" pos:column="20"/></name><operator pos:line="176" pos:column="20">.<pos:position pos:line="176" pos:column="21"/></operator><name pos:line="176" pos:column="21">lastbind<pos:position pos:line="176" pos:column="29"/></name></name> <operator pos:line="176" pos:column="30">=<pos:position pos:line="176" pos:column="31"/></operator> <call><name pos:line="176" pos:column="32">apr_time_now<pos:position pos:line="176" pos:column="44"/></name><argument_list pos:line="176" pos:column="44">()<pos:position pos:line="176" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="177" pos:column="5">the_search_node<pos:position pos:line="177" pos:column="20"/></name><operator pos:line="177" pos:column="20">.<pos:position pos:line="177" pos:column="21"/></operator><name pos:line="177" pos:column="21">vals<pos:position pos:line="177" pos:column="25"/></name></name> <operator pos:line="177" pos:column="26">=<pos:position pos:line="177" pos:column="27"/></operator> <name pos:line="177" pos:column="28">vals<pos:position pos:line="177" pos:column="32"/></name></expr>;<pos:position pos:line="177" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="178" pos:column="5">util_ald_cache_insert<pos:position pos:line="178" pos:column="26"/></name><argument_list pos:line="178" pos:column="26">(<argument><expr><name><name pos:line="178" pos:column="27">curl<pos:position pos:line="178" pos:column="31"/></name><operator pos:line="178" pos:column="31">-&gt;<pos:position pos:line="178" pos:column="36"/></operator><name pos:line="178" pos:column="33">search_cache<pos:position pos:line="178" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="178" pos:column="47">&amp;<pos:position pos:line="178" pos:column="52"/></operator><name pos:line="178" pos:column="48">the_search_node<pos:position pos:line="178" pos:column="63"/></name></expr></argument>)<pos:position pos:line="178" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="179" pos:column="5">ldap_msgfree<pos:position pos:line="179" pos:column="17"/></name><argument_list pos:line="179" pos:column="17">(<argument><expr><name pos:line="179" pos:column="18">res<pos:position pos:line="179" pos:column="21"/></name></expr></argument>)<pos:position pos:line="179" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="180" pos:column="5">LDAP_CACHE_UNLOCK<pos:position pos:line="180" pos:column="22"/></name><argument_list pos:line="180" pos:column="22">()<pos:position pos:line="180" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="182" pos:column="5">ldc<pos:position pos:line="182" pos:column="8"/></name><operator pos:line="182" pos:column="8">-&gt;<pos:position pos:line="182" pos:column="13"/></operator><name pos:line="182" pos:column="10">reason<pos:position pos:line="182" pos:column="16"/></name></name> <operator pos:line="182" pos:column="17">=<pos:position pos:line="182" pos:column="18"/></operator> <literal type="string" pos:line="182" pos:column="19">"Authentication successful"<pos:position pos:line="182" pos:column="46"/></literal></expr>;<pos:position pos:line="182" pos:column="47"/></expr_stmt>
    <return pos:line="183" pos:column="5">return <expr><name pos:line="183" pos:column="12">LDAP_SUCCESS<pos:position pos:line="183" pos:column="24"/></name></expr>;<pos:position pos:line="183" pos:column="25"/></return>
}<pos:position pos:line="184" pos:column="2"/></block></function></unit>

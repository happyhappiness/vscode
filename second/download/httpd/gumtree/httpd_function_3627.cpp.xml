<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3627.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_label<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">request_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">r<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">dav_hooks_vsn<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">vsn_hooks<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><call><name pos:line="4" pos:column="38">DAV_GET_HOOKS_VSN<pos:position pos:line="4" pos:column="55"/></name><argument_list pos:line="4" pos:column="55">(<argument><expr><name pos:line="4" pos:column="56">r<pos:position pos:line="4" pos:column="57"/></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_xml_doc<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">doc<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_xml_elem<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">child<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">depth<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">result<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">tsize<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">dav_error<pos:position pos:line="10" pos:column="14"/></name> <modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier></type><name pos:line="10" pos:column="16">err<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">dav_label_walker_ctx<pos:position pos:line="11" pos:column="25"/></name></type> <name pos:line="11" pos:column="26">ctx<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><block pos:line="11" pos:column="32">{ <expr><block pos:line="11" pos:column="34">{ <expr><literal type="number" pos:line="11" pos:column="36">0<pos:position pos:line="11" pos:column="37"/></literal></expr> }<pos:position pos:line="11" pos:column="39"/></block></expr> }<pos:position pos:line="11" pos:column="41"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">dav_response<pos:position pos:line="12" pos:column="17"/></name> <modifier pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></modifier></type><name pos:line="12" pos:column="19">multi_status<pos:position pos:line="12" pos:column="31"/></name></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* If no versioning provider, or the provider doesn't support
     * labels, decline the request */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">vsn_hooks<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">NULL<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">||<pos:position pos:line="16" pos:column="29"/></operator> <name><name pos:line="16" pos:column="30">vsn_hooks<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">add_label<pos:position pos:line="16" pos:column="50"/></name></name> <operator pos:line="16" pos:column="51">==<pos:position pos:line="16" pos:column="53"/></operator> <name pos:line="16" pos:column="54">NULL<pos:position pos:line="16" pos:column="58"/></name></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">DECLINED<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></return></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">err<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">dav_get_resource<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">r<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="31">1<pos:position pos:line="20" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="20" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="20" pos:column="54">0<pos:position pos:line="20" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="20" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="29">resource<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">err<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">!=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">NULL<pos:position pos:line="22" pos:column="20"/></name></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21">
        <block type="pseudo"><return pos:line="23" pos:column="9">return <expr><call><name pos:line="23" pos:column="16">dav_handle_err<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">r<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">err<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">NULL<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></return></block></then></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name><name pos:line="24" pos:column="10">resource<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">exists<pos:position pos:line="24" pos:column="26"/></name></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27"> <block pos:line="24" pos:column="28">{
        <comment type="block" pos:line="25" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">depth<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">dav_get_depth<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">r<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="35">0<pos:position pos:line="29" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call><operator pos:line="29" pos:column="37">)<pos:position pos:line="29" pos:column="38"/></operator> <operator pos:line="29" pos:column="39">&lt;<pos:position pos:line="29" pos:column="43"/></operator> <literal type="number" pos:line="29" pos:column="41">0<pos:position pos:line="29" pos:column="42"/></literal></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43"> <block pos:line="29" pos:column="44">{
        <comment type="block" pos:line="30" pos:column="9">/* dav_get_depth() supplies additional information for the
         * default message. */</comment>
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="32" pos:column="32"/></name></expr>;<pos:position pos:line="32" pos:column="33"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* parse the request body */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">(<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">result<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <call><name pos:line="36" pos:column="19">ap_xml_parse_input<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">r<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="41">&amp;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="42">doc<pos:position pos:line="36" pos:column="45"/></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call><operator pos:line="36" pos:column="46">)<pos:position pos:line="36" pos:column="47"/></operator> <operator pos:line="36" pos:column="48">!=<pos:position pos:line="36" pos:column="50"/></operator> <name pos:line="36" pos:column="51">OK<pos:position pos:line="36" pos:column="53"/></name></expr>)<pos:position pos:line="36" pos:column="54"/></condition><then pos:line="36" pos:column="54"> <block pos:line="36" pos:column="55">{
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">result<pos:position pos:line="37" pos:column="22"/></name></expr>;<pos:position pos:line="37" pos:column="23"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">doc<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">==<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">NULL<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">||<pos:position pos:line="40" pos:column="23"/></operator> <operator pos:line="40" pos:column="24">!<pos:position pos:line="40" pos:column="25"/></operator><call><name pos:line="40" pos:column="25">dav_validate_root<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><name pos:line="40" pos:column="43">doc<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="48">"label"<pos:position pos:line="40" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="57"/></condition><then pos:line="40" pos:column="57"> <block pos:line="40" pos:column="58">{
        <comment type="block" pos:line="41" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">ap_log_rerror<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">APLOG_MARK<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">APLOG_ERR<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="46">0<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="49">r<pos:position pos:line="42" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="43" pos:column="23">"The request body does not contain "<pos:position pos:line="43" pos:column="59"/></literal>
                      <literal type="string" pos:line="44" pos:column="23">"a \"label\" element."<pos:position pos:line="44" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="45" pos:column="32"/></name></expr>;<pos:position pos:line="45" pos:column="33"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="48" pos:column="5">/* check for add, set, or remove element */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">(<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">child<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <call><name pos:line="49" pos:column="18">dav_find_child<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name><name pos:line="49" pos:column="33">doc<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">-&gt;<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="38">root<pos:position pos:line="49" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="44">"add"<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call><operator pos:line="49" pos:column="50">)<pos:position pos:line="49" pos:column="51"/></operator> <operator pos:line="49" pos:column="52">!=<pos:position pos:line="49" pos:column="54"/></operator> <name pos:line="49" pos:column="55">NULL<pos:position pos:line="49" pos:column="59"/></name></expr>)<pos:position pos:line="49" pos:column="60"/></condition><then pos:line="49" pos:column="60"> <block pos:line="49" pos:column="61">{
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">ctx<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">.<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="13">label_op<pos:position pos:line="50" pos:column="21"/></name></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">DAV_LABEL_ADD<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then>
    <elseif pos:line="52" pos:column="5">else <if pos:line="52" pos:column="10">if <condition pos:line="52" pos:column="13">(<expr><operator pos:line="52" pos:column="14">(<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">child<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">=<pos:position pos:line="52" pos:column="22"/></operator> <call><name pos:line="52" pos:column="23">dav_find_child<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name><name pos:line="52" pos:column="38">doc<pos:position pos:line="52" pos:column="41"/></name><operator pos:line="52" pos:column="41">-&gt;<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="43">root<pos:position pos:line="52" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="49">"set"<pos:position pos:line="52" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="55"/></argument_list></call><operator pos:line="52" pos:column="55">)<pos:position pos:line="52" pos:column="56"/></operator> <operator pos:line="52" pos:column="57">!=<pos:position pos:line="52" pos:column="59"/></operator> <name pos:line="52" pos:column="60">NULL<pos:position pos:line="52" pos:column="64"/></name></expr>)<pos:position pos:line="52" pos:column="65"/></condition><then pos:line="52" pos:column="65"> <block pos:line="52" pos:column="66">{
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">ctx<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">.<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">label_op<pos:position pos:line="53" pos:column="21"/></name></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="24">DAV_LABEL_SET<pos:position pos:line="53" pos:column="37"/></name></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><operator pos:line="55" pos:column="14">(<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">child<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <call><name pos:line="55" pos:column="23">dav_find_child<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name><name pos:line="55" pos:column="38">doc<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">-&gt;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="43">root<pos:position pos:line="55" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="49">"remove"<pos:position pos:line="55" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></call><operator pos:line="55" pos:column="58">)<pos:position pos:line="55" pos:column="59"/></operator> <operator pos:line="55" pos:column="60">!=<pos:position pos:line="55" pos:column="62"/></operator> <name pos:line="55" pos:column="63">NULL<pos:position pos:line="55" pos:column="67"/></name></expr>)<pos:position pos:line="55" pos:column="68"/></condition><then pos:line="55" pos:column="68"> <block pos:line="55" pos:column="69">{
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">ctx<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">.<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="13">label_op<pos:position pos:line="56" pos:column="21"/></name></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <name pos:line="56" pos:column="24">DAV_LABEL_REMOVE<pos:position pos:line="56" pos:column="40"/></name></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif>
    <else pos:line="58" pos:column="5">else <block pos:line="58" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_rerror<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">APLOG_MARK<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">APLOG_ERR<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="46">0<pos:position pos:line="59" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="49">r<pos:position pos:line="59" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="60" pos:column="23">"The \"label\" element does not contain "<pos:position pos:line="60" pos:column="64"/></literal>
                      <literal type="string" pos:line="61" pos:column="23">"an \"add\", \"set\", or \"remove\" element."<pos:position pos:line="61" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="70"/></expr_stmt>
        <return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="62" pos:column="32"/></name></expr>;<pos:position pos:line="62" pos:column="33"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="65" pos:column="5">/* get the label string */</comment>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">(<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">child<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <call><name pos:line="66" pos:column="18">dav_find_child<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">child<pos:position pos:line="66" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="40">"label-name"<pos:position pos:line="66" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call><operator pos:line="66" pos:column="53">)<pos:position pos:line="66" pos:column="54"/></operator> <operator pos:line="66" pos:column="55">==<pos:position pos:line="66" pos:column="57"/></operator> <name pos:line="66" pos:column="58">NULL<pos:position pos:line="66" pos:column="62"/></name></expr>)<pos:position pos:line="66" pos:column="63"/></condition><then pos:line="66" pos:column="63"> <block pos:line="66" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">ap_log_rerror<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">APLOG_MARK<pos:position pos:line="67" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="35">APLOG_ERR<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="46">0<pos:position pos:line="67" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="49">r<pos:position pos:line="67" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="68" pos:column="23">"The label command element does not contain "<pos:position pos:line="68" pos:column="68"/></literal>
                      <literal type="string" pos:line="69" pos:column="23">"a \"label-name\" element."<pos:position pos:line="69" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt>
        <return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="70" pos:column="32"/></name></expr>;<pos:position pos:line="70" pos:column="33"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">apr_xml_to_text<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name><name pos:line="73" pos:column="21">r<pos:position pos:line="73" pos:column="22"/></name><operator pos:line="73" pos:column="22">-&gt;<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="24">pool<pos:position pos:line="73" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="30">child<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="37">APR_XML_X2T_INNER<pos:position pos:line="73" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="56">NULL<pos:position pos:line="73" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="62">NULL<pos:position pos:line="73" pos:column="66"/></name></expr></argument>,
                    <argument><expr><operator pos:line="74" pos:column="21">&amp;<pos:position pos:line="74" pos:column="26"/></operator><name><name pos:line="74" pos:column="22">ctx<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">.<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="26">label<pos:position pos:line="74" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="33">&amp;<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="34">tsize<pos:position pos:line="74" pos:column="39"/></name></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">tsize<pos:position pos:line="75" pos:column="14"/></name> <operator pos:line="75" pos:column="15">==<pos:position pos:line="75" pos:column="17"/></operator> <literal type="number" pos:line="75" pos:column="18">0<pos:position pos:line="75" pos:column="19"/></literal></expr>)<pos:position pos:line="75" pos:column="20"/></condition><then pos:line="75" pos:column="20"> <block pos:line="75" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">ap_log_rerror<pos:position pos:line="76" pos:column="22"/></name><argument_list pos:line="76" pos:column="22">(<argument><expr><name pos:line="76" pos:column="23">APLOG_MARK<pos:position pos:line="76" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="35">APLOG_ERR<pos:position pos:line="76" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="46">0<pos:position pos:line="76" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="49">r<pos:position pos:line="76" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="77" pos:column="23">"A \"label-name\" element does not contain "<pos:position pos:line="77" pos:column="67"/></literal>
                      <literal type="string" pos:line="78" pos:column="23">"a label name."<pos:position pos:line="78" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="40"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="79" pos:column="32"/></name></expr>;<pos:position pos:line="79" pos:column="33"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="82" pos:column="5">/* do the label operation walk */</comment>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">ctx<pos:position pos:line="83" pos:column="8"/></name><operator pos:line="83" pos:column="8">.<pos:position pos:line="83" pos:column="9"/></operator><name pos:line="83" pos:column="9">w<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">.<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="11">walk_type<pos:position pos:line="83" pos:column="20"/></name></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <name pos:line="83" pos:column="23">DAV_WALKTYPE_NORMAL<pos:position pos:line="83" pos:column="42"/></name></expr>;<pos:position pos:line="83" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="84" pos:column="5">ctx<pos:position pos:line="84" pos:column="8"/></name><operator pos:line="84" pos:column="8">.<pos:position pos:line="84" pos:column="9"/></operator><name pos:line="84" pos:column="9">w<pos:position pos:line="84" pos:column="10"/></name><operator pos:line="84" pos:column="10">.<pos:position pos:line="84" pos:column="11"/></operator><name pos:line="84" pos:column="11">func<pos:position pos:line="84" pos:column="15"/></name></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <name pos:line="84" pos:column="18">dav_label_walker<pos:position pos:line="84" pos:column="34"/></name></expr>;<pos:position pos:line="84" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="85" pos:column="5">ctx<pos:position pos:line="85" pos:column="8"/></name><operator pos:line="85" pos:column="8">.<pos:position pos:line="85" pos:column="9"/></operator><name pos:line="85" pos:column="9">w<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">.<pos:position pos:line="85" pos:column="11"/></operator><name pos:line="85" pos:column="11">walk_ctx<pos:position pos:line="85" pos:column="19"/></name></name> <operator pos:line="85" pos:column="20">=<pos:position pos:line="85" pos:column="21"/></operator> <operator pos:line="85" pos:column="22">&amp;<pos:position pos:line="85" pos:column="27"/></operator><name pos:line="85" pos:column="23">ctx<pos:position pos:line="85" pos:column="26"/></name></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="86" pos:column="5">ctx<pos:position pos:line="86" pos:column="8"/></name><operator pos:line="86" pos:column="8">.<pos:position pos:line="86" pos:column="9"/></operator><name pos:line="86" pos:column="9">w<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">.<pos:position pos:line="86" pos:column="11"/></operator><name pos:line="86" pos:column="11">pool<pos:position pos:line="86" pos:column="15"/></name></name> <operator pos:line="86" pos:column="16">=<pos:position pos:line="86" pos:column="17"/></operator> <name><name pos:line="86" pos:column="18">r<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">-&gt;<pos:position pos:line="86" pos:column="24"/></operator><name pos:line="86" pos:column="21">pool<pos:position pos:line="86" pos:column="25"/></name></name></expr>;<pos:position pos:line="86" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="87" pos:column="5">ctx<pos:position pos:line="87" pos:column="8"/></name><operator pos:line="87" pos:column="8">.<pos:position pos:line="87" pos:column="9"/></operator><name pos:line="87" pos:column="9">w<pos:position pos:line="87" pos:column="10"/></name><operator pos:line="87" pos:column="10">.<pos:position pos:line="87" pos:column="11"/></operator><name pos:line="87" pos:column="11">root<pos:position pos:line="87" pos:column="15"/></name></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <name pos:line="87" pos:column="18">resource<pos:position pos:line="87" pos:column="26"/></name></expr>;<pos:position pos:line="87" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">ctx<pos:position pos:line="88" pos:column="8"/></name><operator pos:line="88" pos:column="8">.<pos:position pos:line="88" pos:column="9"/></operator><name pos:line="88" pos:column="9">vsn_hooks<pos:position pos:line="88" pos:column="18"/></name></name> <operator pos:line="88" pos:column="19">=<pos:position pos:line="88" pos:column="20"/></operator> <name pos:line="88" pos:column="21">vsn_hooks<pos:position pos:line="88" pos:column="30"/></name></expr>;<pos:position pos:line="88" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="90" pos:column="5">err<pos:position pos:line="90" pos:column="8"/></name> <operator pos:line="90" pos:column="9">=<pos:position pos:line="90" pos:column="10"/></operator> <call pos:line="90" pos:column="11">(<modifier pos:line="90" pos:column="12">*<pos:position pos:line="90" pos:column="13"/></modifier><name><name pos:line="90" pos:column="13">resource<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">hooks<pos:position pos:line="90" pos:column="28"/></name><operator pos:line="90" pos:column="28">-&gt;<pos:position pos:line="90" pos:column="33"/></operator><name pos:line="90" pos:column="30">walk<pos:position pos:line="90" pos:column="34"/></name></name>)<argument_list pos:line="90" pos:column="35">(<argument><expr><operator pos:line="90" pos:column="36">&amp;<pos:position pos:line="90" pos:column="41"/></operator><name><name pos:line="90" pos:column="37">ctx<pos:position pos:line="90" pos:column="40"/></name><operator pos:line="90" pos:column="40">.<pos:position pos:line="90" pos:column="41"/></operator><name pos:line="90" pos:column="41">w<pos:position pos:line="90" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="44">depth<pos:position pos:line="90" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="51">&amp;<pos:position pos:line="90" pos:column="56"/></operator><name pos:line="90" pos:column="52">multi_status<pos:position pos:line="90" pos:column="64"/></name></expr></argument>)<pos:position pos:line="90" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="66"/></expr_stmt>

    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name pos:line="92" pos:column="9">err<pos:position pos:line="92" pos:column="12"/></name> <operator pos:line="92" pos:column="13">!=<pos:position pos:line="92" pos:column="15"/></operator> <name pos:line="92" pos:column="16">NULL<pos:position pos:line="92" pos:column="20"/></name></expr>)<pos:position pos:line="92" pos:column="21"/></condition><then pos:line="92" pos:column="21"> <block pos:line="92" pos:column="22">{
        <comment type="block" pos:line="93" pos:column="9">/* some sort of error occurred which terminated the walk */</comment>
        <expr_stmt><expr><name pos:line="94" pos:column="9">err<pos:position pos:line="94" pos:column="12"/></name> <operator pos:line="94" pos:column="13">=<pos:position pos:line="94" pos:column="14"/></operator> <call><name pos:line="94" pos:column="15">dav_push_error<pos:position pos:line="94" pos:column="29"/></name><argument_list pos:line="94" pos:column="29">(<argument><expr><name><name pos:line="94" pos:column="30">r<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">-&gt;<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="33">pool<pos:position pos:line="94" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="39">err<pos:position pos:line="94" pos:column="42"/></name><operator pos:line="94" pos:column="42">-&gt;<pos:position pos:line="94" pos:column="47"/></operator><name pos:line="94" pos:column="44">status<pos:position pos:line="94" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="52">0<pos:position pos:line="94" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="95" pos:column="30">"The LABEL operation was terminated prematurely."<pos:position pos:line="95" pos:column="79"/></literal></expr></argument>,
                             <argument><expr><name pos:line="96" pos:column="30">err<pos:position pos:line="96" pos:column="33"/></name></expr></argument>)<pos:position pos:line="96" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="35"/></expr_stmt>
        <return pos:line="97" pos:column="9">return <expr><call><name pos:line="97" pos:column="16">dav_handle_err<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">(<argument><expr><name pos:line="97" pos:column="31">r<pos:position pos:line="97" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="34">err<pos:position pos:line="97" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="39">multi_status<pos:position pos:line="97" pos:column="51"/></name></expr></argument>)<pos:position pos:line="97" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="53"/></return>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name pos:line="100" pos:column="9">multi_status<pos:position pos:line="100" pos:column="21"/></name> <operator pos:line="100" pos:column="22">!=<pos:position pos:line="100" pos:column="24"/></operator> <name pos:line="100" pos:column="25">NULL<pos:position pos:line="100" pos:column="29"/></name></expr>)<pos:position pos:line="100" pos:column="30"/></condition><then pos:line="100" pos:column="30"> <block pos:line="100" pos:column="31">{
        <comment type="block" pos:line="101" pos:column="9">/* One or more resources had errors. If depth was zero, convert
         * response to simple error, else make sure there is an
         * overall error to pass to dav_handle_err()
         */</comment>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">depth<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">==<pos:position pos:line="105" pos:column="21"/></operator> <literal type="number" pos:line="105" pos:column="22">0<pos:position pos:line="105" pos:column="23"/></literal></expr>)<pos:position pos:line="105" pos:column="24"/></condition><then pos:line="105" pos:column="24"> <block pos:line="105" pos:column="25">{
            <expr_stmt><expr><name pos:line="106" pos:column="13">err<pos:position pos:line="106" pos:column="16"/></name> <operator pos:line="106" pos:column="17">=<pos:position pos:line="106" pos:column="18"/></operator> <call><name pos:line="106" pos:column="19">dav_new_error<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><name><name pos:line="106" pos:column="33">r<pos:position pos:line="106" pos:column="34"/></name><operator pos:line="106" pos:column="34">-&gt;<pos:position pos:line="106" pos:column="39"/></operator><name pos:line="106" pos:column="36">pool<pos:position pos:line="106" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="42">multi_status<pos:position pos:line="106" pos:column="54"/></name><operator pos:line="106" pos:column="54">-&gt;<pos:position pos:line="106" pos:column="59"/></operator><name pos:line="106" pos:column="56">status<pos:position pos:line="106" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="64">0<pos:position pos:line="106" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="67">0<pos:position pos:line="106" pos:column="68"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="107" pos:column="33">multi_status<pos:position pos:line="107" pos:column="45"/></name><operator pos:line="107" pos:column="45">-&gt;<pos:position pos:line="107" pos:column="50"/></operator><name pos:line="107" pos:column="47">desc<pos:position pos:line="107" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name pos:line="108" pos:column="13">multi_status<pos:position pos:line="108" pos:column="25"/></name> <operator pos:line="108" pos:column="26">=<pos:position pos:line="108" pos:column="27"/></operator> <name pos:line="108" pos:column="28">NULL<pos:position pos:line="108" pos:column="32"/></name></expr>;<pos:position pos:line="108" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="109" pos:column="10"/></block></then>
        <else pos:line="110" pos:column="9">else <block pos:line="110" pos:column="14">{
            <expr_stmt><expr><name pos:line="111" pos:column="13">err<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <call><name pos:line="111" pos:column="19">dav_new_error<pos:position pos:line="111" pos:column="32"/></name><argument_list pos:line="111" pos:column="32">(<argument><expr><name><name pos:line="111" pos:column="33">r<pos:position pos:line="111" pos:column="34"/></name><operator pos:line="111" pos:column="34">-&gt;<pos:position pos:line="111" pos:column="39"/></operator><name pos:line="111" pos:column="36">pool<pos:position pos:line="111" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="42">HTTP_MULTI_STATUS<pos:position pos:line="111" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="61">0<pos:position pos:line="111" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="64">0<pos:position pos:line="111" pos:column="65"/></literal></expr></argument>,
                                <argument><expr><literal type="string" pos:line="112" pos:column="33">"Errors occurred during the LABEL operation."<pos:position pos:line="112" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="113" pos:column="10"/></block></else></if>

        <return pos:line="115" pos:column="9">return <expr><call><name pos:line="115" pos:column="16">dav_handle_err<pos:position pos:line="115" pos:column="30"/></name><argument_list pos:line="115" pos:column="30">(<argument><expr><name pos:line="115" pos:column="31">r<pos:position pos:line="115" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="34">err<pos:position pos:line="115" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="39">multi_status<pos:position pos:line="115" pos:column="51"/></name></expr></argument>)<pos:position pos:line="115" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="53"/></return>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="118" pos:column="5">/* set the Cache-Control header, per the spec */</comment>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">apr_table_setn<pos:position pos:line="119" pos:column="19"/></name><argument_list pos:line="119" pos:column="19">(<argument><expr><name><name pos:line="119" pos:column="20">r<pos:position pos:line="119" pos:column="21"/></name><operator pos:line="119" pos:column="21">-&gt;<pos:position pos:line="119" pos:column="26"/></operator><name pos:line="119" pos:column="23">headers_out<pos:position pos:line="119" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="36">"Cache-Control"<pos:position pos:line="119" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="53">"no-cache"<pos:position pos:line="119" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="121" pos:column="5">/* no body */</comment>
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">ap_set_content_length<pos:position pos:line="122" pos:column="26"/></name><argument_list pos:line="122" pos:column="26">(<argument><expr><name pos:line="122" pos:column="27">r<pos:position pos:line="122" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="30">0<pos:position pos:line="122" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="33"/></expr_stmt>

    <return pos:line="124" pos:column="5">return <expr><name pos:line="124" pos:column="12">DONE<pos:position pos:line="124" pos:column="16"/></name></expr>;<pos:position pos:line="124" pos:column="17"/></return>
}<pos:position pos:line="125" pos:column="2"/></block></function></unit>

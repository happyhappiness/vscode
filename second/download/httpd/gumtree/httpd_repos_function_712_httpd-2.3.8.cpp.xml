<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_712_httpd-2.3.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">SSL_X509_isSGC<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">X509<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">cert<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_SSL_X509V3_EXT_d2i<pos:position pos:line="3" pos:column="31"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">ext_nid<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">EXTENDED_KEY_USAGE<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">sk<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">BOOL<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">is_sgc<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">is_sgc<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">FALSE<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">sk<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">X509_get_ext_d2i<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">cert<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">NID_ext_key_usage<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">NULL<pos:position pos:line="10" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="58">NULL<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">sk<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12"> <block pos:line="11" pos:column="13">{
        <for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="25">sk_ASN1_OBJECT_num<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">sk<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></condition> <incr><expr><name pos:line="12" pos:column="49">i<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">++<pos:position pos:line="12" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="53"/></control> <block pos:line="12" pos:column="54">{
            <expr_stmt><expr><name pos:line="13" pos:column="13">ext_nid<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">OBJ_obj2nid<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><call><name pos:line="13" pos:column="35">sk_ASN1_OBJECT_value<pos:position pos:line="13" pos:column="55"/></name><argument_list pos:line="13" pos:column="55">(<argument><expr><name pos:line="13" pos:column="56">sk<pos:position pos:line="13" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="60">i<pos:position pos:line="13" pos:column="61"/></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">ext_nid<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">NID_ms_sgc<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">||<pos:position pos:line="14" pos:column="41"/></operator> <name pos:line="14" pos:column="42">ext_nid<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">==<pos:position pos:line="14" pos:column="52"/></operator> <name pos:line="14" pos:column="53">NID_ns_sgc<pos:position pos:line="14" pos:column="63"/></name></expr>)<pos:position pos:line="14" pos:column="64"/></condition><then pos:line="14" pos:column="64"> <block pos:line="14" pos:column="65">{
                <expr_stmt><expr><name pos:line="15" pos:column="17">is_sgc<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">TRUE<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
                <break pos:line="16" pos:column="17">break;<pos:position pos:line="16" pos:column="23"/></break>
            }<pos:position pos:line="17" pos:column="14"/></block></then></if>
        }<pos:position pos:line="18" pos:column="10"/></block></for>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">EXTENDED_KEY_USAGE_free<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">sk<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">is_sgc<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></return>
<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">FALSE<pos:position pos:line="23" pos:column="17"/></name></expr>;<pos:position pos:line="23" pos:column="18"/></return>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

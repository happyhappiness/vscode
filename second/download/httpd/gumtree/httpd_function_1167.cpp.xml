<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1167.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">directory_type<pos:position pos:line="1" pos:column="15"/></name> <modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier></type>
<name pos:line="2" pos:column="1">opendirectory<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">filename<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><name pos:line="4" pos:column="1">size_t<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">len<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">char<pos:position pos:line="5" pos:column="5"/></name> <modifier pos:line="5" pos:column="6">*<pos:position pos:line="5" pos:column="7"/></modifier></type><name pos:line="5" pos:column="7">pattern<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">directory_type<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">dir<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">DWORD<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">err<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
<expr_stmt><expr><name pos:line="8" pos:column="1">len<pos:position pos:line="8" pos:column="4"/></name> <operator pos:line="8" pos:column="5">=<pos:position pos:line="8" pos:column="6"/></operator> <call><name pos:line="8" pos:column="7">strlen<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">filename<pos:position pos:line="8" pos:column="22"/></name></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
<expr_stmt><expr><name pos:line="9" pos:column="1">pattern<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">char<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><operator pos:line="9" pos:column="18">)<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">malloc<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">len<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">+<pos:position pos:line="9" pos:column="32"/></operator> <literal type="number" pos:line="9" pos:column="33">3<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
<expr_stmt><expr><name pos:line="10" pos:column="1">dir<pos:position pos:line="10" pos:column="4"/></name> <operator pos:line="10" pos:column="5">=<pos:position pos:line="10" pos:column="6"/></operator> <operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">directory_type<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></operator><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator> <call><name pos:line="10" pos:column="26">malloc<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><sizeof pos:line="10" pos:column="33">sizeof<argument_list pos:line="10" pos:column="39">(<argument><expr><operator pos:line="10" pos:column="40">*<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">dir<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
<if pos:line="11" pos:column="1">if <condition pos:line="11" pos:column="4">(<expr><operator pos:line="11" pos:column="5">(<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">pattern<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">)<pos:position pos:line="11" pos:column="22"/></operator> <operator pos:line="11" pos:column="23">||<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="26">(<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">dir<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">==<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">NULL<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
  <block pos:line="12" pos:column="3">{
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">fprintf<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">stderr<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"pcregrep: malloc failed\n"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">exit<pos:position pos:line="14" pos:column="7"/></name><argument_list pos:line="14" pos:column="7">(<argument><expr><literal type="number" pos:line="14" pos:column="8">2<pos:position pos:line="14" pos:column="9"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
<expr_stmt><expr><call><name pos:line="16" pos:column="1">memcpy<pos:position pos:line="16" pos:column="7"/></name><argument_list pos:line="16" pos:column="7">(<argument><expr><name pos:line="16" pos:column="8">pattern<pos:position pos:line="16" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="17">filename<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="27">len<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
<expr_stmt><expr><call><name pos:line="17" pos:column="1">memcpy<pos:position pos:line="17" pos:column="7"/></name><argument_list pos:line="17" pos:column="7">(<argument><expr><operator pos:line="17" pos:column="8">&amp;<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="10">pattern<pos:position pos:line="17" pos:column="17"/></name><index pos:line="17" pos:column="17">[<expr><name pos:line="17" pos:column="18">len<pos:position pos:line="17" pos:column="21"/></name></expr>]<pos:position pos:line="17" pos:column="22"/></index></name><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="25">"\\*"<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="32">3<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
<expr_stmt><expr><name><name pos:line="18" pos:column="1">dir<pos:position pos:line="18" pos:column="4"/></name><operator pos:line="18" pos:column="4">-&gt;<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="6">handle<pos:position pos:line="18" pos:column="12"/></name></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">FindFirstFile<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">pattern<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="38">&amp;<pos:position pos:line="18" pos:column="43"/></operator><operator pos:line="18" pos:column="39">(<pos:position pos:line="18" pos:column="40"/></operator><name><name pos:line="18" pos:column="40">dir<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">data<pos:position pos:line="18" pos:column="49"/></name></name><operator pos:line="18" pos:column="49">)<pos:position pos:line="18" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
<if pos:line="19" pos:column="1">if <condition pos:line="19" pos:column="4">(<expr><name><name pos:line="19" pos:column="5">dir<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">handle<pos:position pos:line="19" pos:column="16"/></name></name> <operator pos:line="19" pos:column="17">!=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">INVALID_HANDLE_VALUE<pos:position pos:line="19" pos:column="40"/></name></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41">
  <block pos:line="20" pos:column="3">{
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">free<pos:position pos:line="21" pos:column="7"/></name><argument_list pos:line="21" pos:column="7">(<argument><expr><name pos:line="21" pos:column="8">pattern<pos:position pos:line="21" pos:column="15"/></name></expr></argument>)<pos:position pos:line="21" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">dir<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">first<pos:position pos:line="22" pos:column="13"/></name></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">TRUE<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
  <return pos:line="23" pos:column="3">return <expr><name pos:line="23" pos:column="10">dir<pos:position pos:line="23" pos:column="13"/></name></expr>;<pos:position pos:line="23" pos:column="14"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
<expr_stmt><expr><name pos:line="25" pos:column="1">err<pos:position pos:line="25" pos:column="4"/></name> <operator pos:line="25" pos:column="5">=<pos:position pos:line="25" pos:column="6"/></operator> <call><name pos:line="25" pos:column="7">GetLastError<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">()<pos:position pos:line="25" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
<expr_stmt><expr><call><name pos:line="26" pos:column="1">free<pos:position pos:line="26" pos:column="5"/></name><argument_list pos:line="26" pos:column="5">(<argument><expr><name pos:line="26" pos:column="6">pattern<pos:position pos:line="26" pos:column="13"/></name></expr></argument>)<pos:position pos:line="26" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt>
<expr_stmt><expr><call><name pos:line="27" pos:column="1">free<pos:position pos:line="27" pos:column="5"/></name><argument_list pos:line="27" pos:column="5">(<argument><expr><name pos:line="27" pos:column="6">dir<pos:position pos:line="27" pos:column="9"/></name></expr></argument>)<pos:position pos:line="27" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="11"/></expr_stmt>
<expr_stmt><expr><name pos:line="28" pos:column="1">errno<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <ternary><condition><expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">err<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">==<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">ERROR_ACCESS_DENIED<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">)<pos:position pos:line="28" pos:column="37"/></operator></expr> ?<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <expr><name pos:line="28" pos:column="40">EACCES<pos:position pos:line="28" pos:column="46"/></name></expr> <pos:position pos:line="28" pos:column="47"/></then><else pos:line="28" pos:column="47">: <expr><name pos:line="28" pos:column="49">ENOENT<pos:position pos:line="28" pos:column="55"/></name></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>
<return pos:line="29" pos:column="1">return <expr><name pos:line="29" pos:column="8">NULL<pos:position pos:line="29" pos:column="12"/></name></expr>;<pos:position pos:line="29" pos:column="13"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

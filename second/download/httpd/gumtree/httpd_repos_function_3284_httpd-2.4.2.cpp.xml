<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3284_httpd-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">CommandLineInterpreter<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">scr_t<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">screenID<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">commandLine<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">szCommand<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="string" pos:line="3" pos:column="23">"APACHE2 "<pos:position pos:line="3" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">iCommandLen<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">8<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">szcommandLine<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><literal type="number" pos:line="5" pos:column="24">256<pos:position pos:line="5" pos:column="27"/></literal></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">pID<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">screenID<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <name pos:line="7" pos:column="16">screenID<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>


    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">commandLine<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">NOTMYCOMMAND<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">strlen<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">commandLine<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call> <operator pos:line="12" pos:column="29">&lt;=<pos:position pos:line="12" pos:column="34"/></operator> <call><name pos:line="12" pos:column="32">strlen<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">szCommand<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NOTMYCOMMAND<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">apr_cpystrn<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">szcommandLine<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">commandLine<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="45">sizeof<argument_list pos:line="15" pos:column="51">(<argument><expr><name pos:line="15" pos:column="52">szcommandLine<pos:position pos:line="15" pos:column="65"/></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="68"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/*  All added commands begin with "APACHE2 " */</comment>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><call><name pos:line="19" pos:column="10">strnicmp<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">szCommand<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">szcommandLine<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">iCommandLen<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58"> <block pos:line="19" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ActivateScreen<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><call><name pos:line="20" pos:column="25">getscreenhandle<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">()<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>

        <comment type="block" pos:line="22" pos:column="9">/* If an instance id was not given but the nlm is loaded in
            protected space, then the the command belongs to the
            OS address space instance to pass it on. */</comment>
        <expr_stmt><expr><name pos:line="25" pos:column="9">pID<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">strstr<pos:position pos:line="25" pos:column="21"/></name> <argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">szcommandLine<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="38">"-p"<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">pID<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">==<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">NULL<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">)<pos:position pos:line="26" pos:column="26"/></operator> <operator pos:line="26" pos:column="27">&amp;&amp;<pos:position pos:line="26" pos:column="37"/></operator> <call><name pos:line="26" pos:column="30">nlmisloadedprotected<pos:position pos:line="26" pos:column="50"/></name><argument_list pos:line="26" pos:column="50">()<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
            <block type="pseudo"><return pos:line="27" pos:column="13">return <expr><name pos:line="27" pos:column="20">NOTMYCOMMAND<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></return></block></then></if>

        <comment type="block" pos:line="29" pos:column="9">/* If we got an instance id but it doesn't match this
            instance of the nlm, pass it on. */</comment>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">pID<pos:position pos:line="31" pos:column="16"/></name></expr>)<pos:position pos:line="31" pos:column="17"/></condition><then pos:line="31" pos:column="17"> <block pos:line="31" pos:column="18">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">pID<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <operator pos:line="32" pos:column="19">&amp;<pos:position pos:line="32" pos:column="24"/></operator><name><name pos:line="32" pos:column="20">pID<pos:position pos:line="32" pos:column="23"/></name><index pos:line="32" pos:column="23">[<expr><literal type="number" pos:line="32" pos:column="24">2<pos:position pos:line="32" pos:column="25"/></literal></expr>]<pos:position pos:line="32" pos:column="26"/></index></name></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
            <while pos:line="33" pos:column="13">while <condition pos:line="33" pos:column="19">(<expr><operator pos:line="33" pos:column="20">*<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">pID<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">&amp;&amp;<pos:position pos:line="33" pos:column="35"/></operator> <operator pos:line="33" pos:column="28">(<pos:position pos:line="33" pos:column="29"/></operator><operator pos:line="33" pos:column="29">*<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">pID<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">==<pos:position pos:line="33" pos:column="36"/></operator> <literal type="char" pos:line="33" pos:column="37">' '<pos:position pos:line="33" pos:column="40"/></literal><operator pos:line="33" pos:column="40">)<pos:position pos:line="33" pos:column="41"/></operator></expr>)<pos:position pos:line="33" pos:column="42"/></condition>
                <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">pID<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">++<pos:position pos:line="34" pos:column="22"/></operator></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt></block></while>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">pID<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">&amp;&amp;<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="20">ap_my_addrspace<pos:position pos:line="36" pos:column="35"/></name> <operator pos:line="36" pos:column="36">&amp;&amp;<pos:position pos:line="36" pos:column="46"/></operator> <call><name pos:line="36" pos:column="39">strnicmp<pos:position pos:line="36" pos:column="47"/></name><argument_list pos:line="36" pos:column="47">(<argument><expr><name pos:line="36" pos:column="48">pID<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">ap_my_addrspace<pos:position pos:line="36" pos:column="68"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="70">strlen<pos:position pos:line="36" pos:column="76"/></name><argument_list pos:line="36" pos:column="76">(<argument><expr><name pos:line="36" pos:column="77">ap_my_addrspace<pos:position pos:line="36" pos:column="92"/></name></expr></argument>)<pos:position pos:line="36" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="94"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="95"/></condition><then pos:line="36" pos:column="95">
            <block type="pseudo"><return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">NOTMYCOMMAND<pos:position pos:line="37" pos:column="32"/></name></expr>;<pos:position pos:line="37" pos:column="33"/></return></block></then></if>

        <comment type="block" pos:line="39" pos:column="9">/* If we have determined that this command belongs to this
            instance of the nlm, then handle it. */</comment>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><call><name pos:line="41" pos:column="14">strnicmp<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><literal type="string" pos:line="41" pos:column="23">"RESTART"<pos:position pos:line="41" pos:column="32"/></literal></expr></argument>,<argument><expr><operator pos:line="41" pos:column="33">&amp;<pos:position pos:line="41" pos:column="38"/></operator><name><name pos:line="41" pos:column="34">szcommandLine<pos:position pos:line="41" pos:column="47"/></name><index pos:line="41" pos:column="47">[<expr><name pos:line="41" pos:column="48">iCommandLen<pos:position pos:line="41" pos:column="59"/></name></expr>]<pos:position pos:line="41" pos:column="60"/></index></name></expr></argument>,<argument><expr><literal type="number" pos:line="41" pos:column="61">3<pos:position pos:line="41" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="64"/></condition><then pos:line="41" pos:column="64"> <block pos:line="41" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">printf<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><literal type="string" pos:line="42" pos:column="20">"Restart Requested...\n"<pos:position pos:line="42" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">restart<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">()<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then>
        <elseif pos:line="45" pos:column="9">else <if pos:line="45" pos:column="14">if <condition pos:line="45" pos:column="17">(<expr><operator pos:line="45" pos:column="18">!<pos:position pos:line="45" pos:column="19"/></operator><call><name pos:line="45" pos:column="19">strnicmp<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><literal type="string" pos:line="45" pos:column="28">"VERSION"<pos:position pos:line="45" pos:column="37"/></literal></expr></argument>,<argument><expr><operator pos:line="45" pos:column="38">&amp;<pos:position pos:line="45" pos:column="43"/></operator><name><name pos:line="45" pos:column="39">szcommandLine<pos:position pos:line="45" pos:column="52"/></name><index pos:line="45" pos:column="52">[<expr><name pos:line="45" pos:column="53">iCommandLen<pos:position pos:line="45" pos:column="64"/></name></expr>]<pos:position pos:line="45" pos:column="65"/></index></name></expr></argument>,<argument><expr><literal type="number" pos:line="45" pos:column="66">3<pos:position pos:line="45" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="69"/></condition><then pos:line="45" pos:column="69"> <block pos:line="45" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">printf<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><literal type="string" pos:line="46" pos:column="20">"Server version: %s\n"<pos:position pos:line="46" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="44">ap_get_server_description<pos:position pos:line="46" pos:column="69"/></name><argument_list pos:line="46" pos:column="69">()<pos:position pos:line="46" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">printf<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><literal type="string" pos:line="47" pos:column="20">"Server built:   %s\n"<pos:position pos:line="47" pos:column="42"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="44">ap_get_server_built<pos:position pos:line="47" pos:column="63"/></name><argument_list pos:line="47" pos:column="63">()<pos:position pos:line="47" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="49" pos:column="9">else <if pos:line="49" pos:column="14">if <condition pos:line="49" pos:column="17">(<expr><operator pos:line="49" pos:column="18">!<pos:position pos:line="49" pos:column="19"/></operator><call><name pos:line="49" pos:column="19">strnicmp<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><literal type="string" pos:line="49" pos:column="28">"MODULES"<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>,<argument><expr><operator pos:line="49" pos:column="38">&amp;<pos:position pos:line="49" pos:column="43"/></operator><name><name pos:line="49" pos:column="39">szcommandLine<pos:position pos:line="49" pos:column="52"/></name><index pos:line="49" pos:column="52">[<expr><name pos:line="49" pos:column="53">iCommandLen<pos:position pos:line="49" pos:column="64"/></name></expr>]<pos:position pos:line="49" pos:column="65"/></index></name></expr></argument>,<argument><expr><literal type="number" pos:line="49" pos:column="66">3<pos:position pos:line="49" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="69"/></condition><then pos:line="49" pos:column="69"> <block pos:line="49" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">ap_show_modules<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">()<pos:position pos:line="50" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><operator pos:line="52" pos:column="18">!<pos:position pos:line="52" pos:column="19"/></operator><call><name pos:line="52" pos:column="19">strnicmp<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><literal type="string" pos:line="52" pos:column="28">"DIRECTIVES"<pos:position pos:line="52" pos:column="40"/></literal></expr></argument>,<argument><expr><operator pos:line="52" pos:column="41">&amp;<pos:position pos:line="52" pos:column="46"/></operator><name><name pos:line="52" pos:column="42">szcommandLine<pos:position pos:line="52" pos:column="55"/></name><index pos:line="52" pos:column="55">[<expr><name pos:line="52" pos:column="56">iCommandLen<pos:position pos:line="52" pos:column="67"/></name></expr>]<pos:position pos:line="52" pos:column="68"/></index></name></expr></argument>,<argument><expr><literal type="number" pos:line="52" pos:column="69">3<pos:position pos:line="52" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="72"/></condition><then pos:line="52" pos:column="72"> <block pos:line="52" pos:column="73">{
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">ap_show_directives<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">()<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="55" pos:column="9">else <if pos:line="55" pos:column="14">if <condition pos:line="55" pos:column="17">(<expr><operator pos:line="55" pos:column="18">!<pos:position pos:line="55" pos:column="19"/></operator><call><name pos:line="55" pos:column="19">strnicmp<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><literal type="string" pos:line="55" pos:column="28">"SHUTDOWN"<pos:position pos:line="55" pos:column="38"/></literal></expr></argument>,<argument><expr><operator pos:line="55" pos:column="39">&amp;<pos:position pos:line="55" pos:column="44"/></operator><name><name pos:line="55" pos:column="40">szcommandLine<pos:position pos:line="55" pos:column="53"/></name><index pos:line="55" pos:column="53">[<expr><name pos:line="55" pos:column="54">iCommandLen<pos:position pos:line="55" pos:column="65"/></name></expr>]<pos:position pos:line="55" pos:column="66"/></index></name></expr></argument>,<argument><expr><literal type="number" pos:line="55" pos:column="67">3<pos:position pos:line="55" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="70"/></condition><then pos:line="55" pos:column="70"> <block pos:line="55" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">printf<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><literal type="string" pos:line="56" pos:column="20">"Shutdown Requested...\n"<pos:position pos:line="56" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">shutdown_pending<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <literal type="number" pos:line="57" pos:column="32">1<pos:position pos:line="57" pos:column="33"/></literal></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="59" pos:column="9">else <if pos:line="59" pos:column="14">if <condition pos:line="59" pos:column="17">(<expr><operator pos:line="59" pos:column="18">!<pos:position pos:line="59" pos:column="19"/></operator><call><name pos:line="59" pos:column="19">strnicmp<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><literal type="string" pos:line="59" pos:column="28">"SETTINGS"<pos:position pos:line="59" pos:column="38"/></literal></expr></argument>,<argument><expr><operator pos:line="59" pos:column="39">&amp;<pos:position pos:line="59" pos:column="44"/></operator><name><name pos:line="59" pos:column="40">szcommandLine<pos:position pos:line="59" pos:column="53"/></name><index pos:line="59" pos:column="53">[<expr><name pos:line="59" pos:column="54">iCommandLen<pos:position pos:line="59" pos:column="65"/></name></expr>]<pos:position pos:line="59" pos:column="66"/></index></name></expr></argument>,<argument><expr><literal type="number" pos:line="59" pos:column="67">3<pos:position pos:line="59" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="70"/></condition><then pos:line="59" pos:column="70"> <block pos:line="59" pos:column="71">{
            <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><name pos:line="60" pos:column="17">show_settings<pos:position pos:line="60" pos:column="30"/></name></expr>)<pos:position pos:line="60" pos:column="31"/></condition><then pos:line="60" pos:column="31"> <block pos:line="60" pos:column="32">{
                <expr_stmt><expr><name pos:line="61" pos:column="17">show_settings<pos:position pos:line="61" pos:column="30"/></name> <operator pos:line="61" pos:column="31">=<pos:position pos:line="61" pos:column="32"/></operator> <literal type="number" pos:line="61" pos:column="33">0<pos:position pos:line="61" pos:column="34"/></literal></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">ClearScreen<pos:position pos:line="62" pos:column="28"/></name> <argument_list pos:line="62" pos:column="29">(<argument><expr><call><name pos:line="62" pos:column="30">getscreenhandle<pos:position pos:line="62" pos:column="45"/></name><argument_list pos:line="62" pos:column="45">()<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">show_server_data<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">()<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="64" pos:column="14"/></block></then>
            <else pos:line="65" pos:column="13">else <block pos:line="65" pos:column="18">{
                <expr_stmt><expr><name pos:line="66" pos:column="17">show_settings<pos:position pos:line="66" pos:column="30"/></name> <operator pos:line="66" pos:column="31">=<pos:position pos:line="66" pos:column="32"/></operator> <literal type="number" pos:line="66" pos:column="33">1<pos:position pos:line="66" pos:column="34"/></literal></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">display_settings<pos:position pos:line="67" pos:column="33"/></name><argument_list pos:line="67" pos:column="33">()<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="68" pos:column="14"/></block></else></if>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if></elseif>
        <else pos:line="70" pos:column="9">else <block pos:line="70" pos:column="14">{
            <expr_stmt><expr><name pos:line="71" pos:column="13">show_settings<pos:position pos:line="71" pos:column="26"/></name> <operator pos:line="71" pos:column="27">=<pos:position pos:line="71" pos:column="28"/></operator> <literal type="number" pos:line="71" pos:column="29">0<pos:position pos:line="71" pos:column="30"/></literal></expr>;<pos:position pos:line="71" pos:column="31"/></expr_stmt>
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><call><name pos:line="72" pos:column="17">strnicmp<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><literal type="string" pos:line="72" pos:column="26">"HELP"<pos:position pos:line="72" pos:column="32"/></literal></expr></argument>,<argument><expr><operator pos:line="72" pos:column="33">&amp;<pos:position pos:line="72" pos:column="38"/></operator><name><name pos:line="72" pos:column="34">szcommandLine<pos:position pos:line="72" pos:column="47"/></name><index pos:line="72" pos:column="47">[<expr><name pos:line="72" pos:column="48">iCommandLen<pos:position pos:line="72" pos:column="59"/></name></expr>]<pos:position pos:line="72" pos:column="60"/></index></name></expr></argument>,<argument><expr><literal type="number" pos:line="72" pos:column="61">3<pos:position pos:line="72" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="64"/></condition><then pos:line="72" pos:column="64">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="17">printf<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><literal type="string" pos:line="73" pos:column="24">"Unknown APACHE2 command %s\n"<pos:position pos:line="73" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="73" pos:column="56">&amp;<pos:position pos:line="73" pos:column="61"/></operator><name><name pos:line="73" pos:column="57">szcommandLine<pos:position pos:line="73" pos:column="70"/></name><index pos:line="73" pos:column="70">[<expr><name pos:line="73" pos:column="71">iCommandLen<pos:position pos:line="73" pos:column="82"/></name></expr>]<pos:position pos:line="73" pos:column="83"/></index></name></expr></argument>)<pos:position pos:line="73" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="85"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">printf<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><literal type="string" pos:line="74" pos:column="20">"Usage: APACHE2 [command] [-p &lt;instance ID&gt;]\n"<pos:position pos:line="74" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">printf<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><literal type="string" pos:line="75" pos:column="20">"Commands:\n"<pos:position pos:line="75" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">printf<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><literal type="string" pos:line="76" pos:column="20">"\tDIRECTIVES - Show directives\n"<pos:position pos:line="76" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">printf<pos:position pos:line="77" pos:column="19"/></name><argument_list pos:line="77" pos:column="19">(<argument><expr><literal type="string" pos:line="77" pos:column="20">"\tHELP       - Display this help information\n"<pos:position pos:line="77" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">printf<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><literal type="string" pos:line="78" pos:column="20">"\tMODULES    - Show a list of the loaded modules\n"<pos:position pos:line="78" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">printf<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><literal type="string" pos:line="79" pos:column="20">"\tRESTART    - Reread the configuration file and restart Apache\n"<pos:position pos:line="79" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="89"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">printf<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><literal type="string" pos:line="80" pos:column="20">"\tSETTINGS   - Show current thread status\n"<pos:position pos:line="80" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">printf<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><literal type="string" pos:line="81" pos:column="20">"\tSHUTDOWN   - Shutdown Apache\n"<pos:position pos:line="81" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">printf<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><literal type="string" pos:line="82" pos:column="20">"\tVERSION    - Display the server version information\n"<pos:position pos:line="82" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="85" pos:column="9">/*  Tell NetWare we handled the command */</comment>
        <return pos:line="86" pos:column="9">return <expr><name pos:line="86" pos:column="16">HANDLEDCOMMAND<pos:position pos:line="86" pos:column="30"/></name></expr>;<pos:position pos:line="86" pos:column="31"/></return>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="89" pos:column="5">/*  Tell NetWare that the command isn't mine */</comment>
    <return pos:line="90" pos:column="5">return <expr><name pos:line="90" pos:column="12">NOTMYCOMMAND<pos:position pos:line="90" pos:column="24"/></name></expr>;<pos:position pos:line="90" pos:column="25"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3597.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_delete<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_auto_version_info<pos:position pos:line="4" pos:column="26"/></name></type> <name pos:line="4" pos:column="27">av_info<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_error<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">err<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dav_error<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">err2<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">dav_response<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">multi_response<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">result<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">depth<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* We don't use the request body right now, so torch it. */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">result<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">ap_discard_request_body<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">r<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call><operator pos:line="12" pos:column="45">)<pos:position pos:line="12" pos:column="46"/></operator> <operator pos:line="12" pos:column="47">!=<pos:position pos:line="12" pos:column="49"/></operator> <name pos:line="12" pos:column="50">OK<pos:position pos:line="12" pos:column="52"/></name></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53"> <block pos:line="12" pos:column="54">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">result<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* Ask repository module to resolve the resource */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">err<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">dav_get_resource<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">r<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="31">0<pos:position pos:line="17" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="17" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="17" pos:column="54">0<pos:position pos:line="17" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="17" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="29">resource<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">err<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">!=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21">
        <block type="pseudo"><return pos:line="20" pos:column="9">return <expr><call><name pos:line="20" pos:column="16">dav_handle_err<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">r<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">err<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">NULL<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></return></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name><name pos:line="21" pos:column="10">resource<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">exists<pos:position pos:line="21" pos:column="26"/></name></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
        <comment type="block" pos:line="22" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* 2518 says that depth must be infinity only for collections.
     * For non-collections, depth is ignored, unless it is an illegal value (1).
     */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">depth<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <call><name pos:line="29" pos:column="13">dav_get_depth<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">r<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">DAV_INFINITY<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">resource<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">collection<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">&amp;&amp;<pos:position pos:line="31" pos:column="40"/></operator> <name pos:line="31" pos:column="33">depth<pos:position pos:line="31" pos:column="38"/></name> <operator pos:line="31" pos:column="39">!=<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="42">DAV_INFINITY<pos:position pos:line="31" pos:column="54"/></name></expr>)<pos:position pos:line="31" pos:column="55"/></condition><then pos:line="31" pos:column="55"> <block pos:line="31" pos:column="56">{
        <comment type="block" pos:line="32" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_rerror<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">APLOG_MARK<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">APLOG_ERR<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="46">0<pos:position pos:line="33" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">r<pos:position pos:line="33" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="34" pos:column="23">"Depth must be \"infinity\" for DELETE of a collection."<pos:position pos:line="34" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="81"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="35" pos:column="32"/></name></expr>;<pos:position pos:line="35" pos:column="33"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><name><name pos:line="38" pos:column="10">resource<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">collection<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">&amp;&amp;<pos:position pos:line="38" pos:column="41"/></operator> <name pos:line="38" pos:column="34">depth<pos:position pos:line="38" pos:column="39"/></name> <operator pos:line="38" pos:column="40">==<pos:position pos:line="38" pos:column="42"/></operator> <literal type="number" pos:line="38" pos:column="43">1<pos:position pos:line="38" pos:column="44"/></literal></expr>)<pos:position pos:line="38" pos:column="45"/></condition><then pos:line="38" pos:column="45"> <block pos:line="38" pos:column="46">{
        <comment type="block" pos:line="39" pos:column="9">/* This supplies additional information for the default message. */</comment>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_log_rerror<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">APLOG_MARK<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="35">APLOG_ERR<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="46">0<pos:position pos:line="40" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="49">r<pos:position pos:line="40" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="41" pos:column="23">"Depth of \"1\" is not allowed for DELETE."<pos:position pos:line="41" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="68"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">HTTP_BAD_REQUEST<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/*
    ** If any resources fail the lock/If: conditions, then we must fail
    ** the delete. Each of the failing resources will be listed within
    ** a DAV:multistatus body, wrapped into a 424 response.
    **
    ** Note that a failure on the resource itself does not generate a
    ** multistatus response -- only internal members/collections.
    */</comment>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><operator pos:line="53" pos:column="9">(<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">err<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <call><name pos:line="53" pos:column="16">dav_validate_request<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><name pos:line="53" pos:column="37">r<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="40">resource<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="50">depth<pos:position pos:line="53" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="57">NULL<pos:position pos:line="53" pos:column="61"/></name></expr></argument>,
                                    <argument><expr><operator pos:line="54" pos:column="37">&amp;<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="38">multi_response<pos:position pos:line="54" pos:column="52"/></name></expr></argument>,
                                    <argument><expr><name pos:line="55" pos:column="37">DAV_VALIDATE_PARENT<pos:position pos:line="55" pos:column="56"/></name>
                                    <operator pos:line="56" pos:column="37">|<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="39">DAV_VALIDATE_USE_424<pos:position pos:line="56" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="61">NULL<pos:position pos:line="56" pos:column="65"/></name></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call><operator pos:line="56" pos:column="66">)<pos:position pos:line="56" pos:column="67"/></operator> <operator pos:line="56" pos:column="68">!=<pos:position pos:line="56" pos:column="70"/></operator> <name pos:line="56" pos:column="71">NULL<pos:position pos:line="56" pos:column="75"/></name></expr>)<pos:position pos:line="56" pos:column="76"/></condition><then pos:line="56" pos:column="76"> <block pos:line="56" pos:column="77">{
        <expr_stmt><expr><name pos:line="57" pos:column="9">err<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <call><name pos:line="57" pos:column="15">dav_push_error<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name><name pos:line="57" pos:column="30">r<pos:position pos:line="57" pos:column="31"/></name><operator pos:line="57" pos:column="31">-&gt;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="33">pool<pos:position pos:line="57" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="39">err<pos:position pos:line="57" pos:column="42"/></name><operator pos:line="57" pos:column="42">-&gt;<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="44">status<pos:position pos:line="57" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="52">0<pos:position pos:line="57" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="58" pos:column="30">apr_psprintf<pos:position pos:line="58" pos:column="42"/></name><argument_list pos:line="58" pos:column="42">(<argument><expr><name><name pos:line="58" pos:column="43">r<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">-&gt;<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="46">pool<pos:position pos:line="58" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="59" pos:column="43">"Could not DELETE %s due to a failed "<pos:position pos:line="59" pos:column="81"/></literal>
                                          <literal type="string" pos:line="60" pos:column="43">"precondition (e.g. locks)."<pos:position pos:line="60" pos:column="71"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="61" pos:column="43">ap_escape_html<pos:position pos:line="61" pos:column="57"/></name><argument_list pos:line="61" pos:column="57">(<argument><expr><name><name pos:line="61" pos:column="58">r<pos:position pos:line="61" pos:column="59"/></name><operator pos:line="61" pos:column="59">-&gt;<pos:position pos:line="61" pos:column="64"/></operator><name pos:line="61" pos:column="61">pool<pos:position pos:line="61" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="67">r<pos:position pos:line="61" pos:column="68"/></name><operator pos:line="61" pos:column="68">-&gt;<pos:position pos:line="61" pos:column="73"/></operator><name pos:line="61" pos:column="70">uri<pos:position pos:line="61" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="62" pos:column="30">err<pos:position pos:line="62" pos:column="33"/></name></expr></argument>)<pos:position pos:line="62" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="35"/></expr_stmt>
        <return pos:line="63" pos:column="9">return <expr><call><name pos:line="63" pos:column="16">dav_handle_err<pos:position pos:line="63" pos:column="30"/></name><argument_list pos:line="63" pos:column="30">(<argument><expr><name pos:line="63" pos:column="31">r<pos:position pos:line="63" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="34">err<pos:position pos:line="63" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="39">multi_response<pos:position pos:line="63" pos:column="53"/></name></expr></argument>)<pos:position pos:line="63" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="55"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="66" pos:column="5">/* ### RFC 2518 s. 8.10.5 says to remove _all_ locks, not just those
     *     locked by the token(s) in the if_header.
     */</comment>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><operator pos:line="69" pos:column="9">(<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">result<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <call><name pos:line="69" pos:column="19">dav_unlock<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">r<pos:position pos:line="69" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="33">resource<pos:position pos:line="69" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="43">NULL<pos:position pos:line="69" pos:column="47"/></name></expr></argument>)<pos:position pos:line="69" pos:column="48"/></argument_list></call><operator pos:line="69" pos:column="48">)<pos:position pos:line="69" pos:column="49"/></operator> <operator pos:line="69" pos:column="50">!=<pos:position pos:line="69" pos:column="52"/></operator> <name pos:line="69" pos:column="53">OK<pos:position pos:line="69" pos:column="55"/></name></expr>)<pos:position pos:line="69" pos:column="56"/></condition><then pos:line="69" pos:column="56"> <block pos:line="69" pos:column="57">{
        <return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">result<pos:position pos:line="70" pos:column="22"/></name></expr>;<pos:position pos:line="70" pos:column="23"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="73" pos:column="5">/* if versioned resource, make sure parent is checked out */</comment>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><operator pos:line="74" pos:column="9">(<pos:position pos:line="74" pos:column="10"/></operator><name pos:line="74" pos:column="10">err<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <call><name pos:line="74" pos:column="16">dav_auto_checkout<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">r<pos:position pos:line="74" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="37">resource<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="47">1<pos:position pos:line="74" pos:column="48"/></literal></expr></argument> <comment type="block" pos:line="74" pos:column="49">/* parent_only */</comment>,
                                 <argument><expr><operator pos:line="75" pos:column="34">&amp;<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="35">av_info<pos:position pos:line="75" pos:column="42"/></name></expr></argument>)<pos:position pos:line="75" pos:column="43"/></argument_list></call><operator pos:line="75" pos:column="43">)<pos:position pos:line="75" pos:column="44"/></operator> <operator pos:line="75" pos:column="45">!=<pos:position pos:line="75" pos:column="47"/></operator> <name pos:line="75" pos:column="48">NULL<pos:position pos:line="75" pos:column="52"/></name></expr>)<pos:position pos:line="75" pos:column="53"/></condition><then pos:line="75" pos:column="53"> <block pos:line="75" pos:column="54">{
        <comment type="block" pos:line="76" pos:column="9">/* ### add a higher-level description? */</comment>
        <return pos:line="77" pos:column="9">return <expr><call><name pos:line="77" pos:column="16">dav_handle_err<pos:position pos:line="77" pos:column="30"/></name><argument_list pos:line="77" pos:column="30">(<argument><expr><name pos:line="77" pos:column="31">r<pos:position pos:line="77" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="34">err<pos:position pos:line="77" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="39">NULL<pos:position pos:line="77" pos:column="43"/></name></expr></argument>)<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="45"/></return>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="80" pos:column="5">/* try to remove the resource */</comment>
    <expr_stmt><expr><name pos:line="81" pos:column="5">err<pos:position pos:line="81" pos:column="8"/></name> <operator pos:line="81" pos:column="9">=<pos:position pos:line="81" pos:column="10"/></operator> <call pos:line="81" pos:column="11">(<modifier pos:line="81" pos:column="12">*<pos:position pos:line="81" pos:column="13"/></modifier><name><name pos:line="81" pos:column="13">resource<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">-&gt;<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="23">hooks<pos:position pos:line="81" pos:column="28"/></name><operator pos:line="81" pos:column="28">-&gt;<pos:position pos:line="81" pos:column="33"/></operator><name pos:line="81" pos:column="30">remove_resource<pos:position pos:line="81" pos:column="45"/></name></name>)<argument_list pos:line="81" pos:column="46">(<argument><expr><name pos:line="81" pos:column="47">resource<pos:position pos:line="81" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="57">&amp;<pos:position pos:line="81" pos:column="62"/></operator><name pos:line="81" pos:column="58">multi_response<pos:position pos:line="81" pos:column="72"/></name></expr></argument>)<pos:position pos:line="81" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="74"/></expr_stmt>

    <comment type="block" pos:line="83" pos:column="5">/* restore writability of parent back to what it was */</comment>
    <expr_stmt><expr><name pos:line="84" pos:column="5">err2<pos:position pos:line="84" pos:column="9"/></name> <operator pos:line="84" pos:column="10">=<pos:position pos:line="84" pos:column="11"/></operator> <call><name pos:line="84" pos:column="12">dav_auto_checkin<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><name pos:line="84" pos:column="29">r<pos:position pos:line="84" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="32">NULL<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="38">err<pos:position pos:line="84" pos:column="41"/></name> <operator pos:line="84" pos:column="42">!=<pos:position pos:line="84" pos:column="44"/></operator> <name pos:line="84" pos:column="45">NULL<pos:position pos:line="84" pos:column="49"/></name></expr></argument> <comment type="block" pos:line="84" pos:column="50">/* undo if error */</comment>,
                            <argument><expr><literal type="number" pos:line="85" pos:column="29">0<pos:position pos:line="85" pos:column="30"/></literal></expr></argument> <comment type="block" pos:line="85" pos:column="31">/*unlock*/</comment>, <argument><expr><operator pos:line="85" pos:column="43">&amp;<pos:position pos:line="85" pos:column="48"/></operator><name pos:line="85" pos:column="44">av_info<pos:position pos:line="85" pos:column="51"/></name></expr></argument>)<pos:position pos:line="85" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="87" pos:column="5">/* check for errors now */</comment>
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">err<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">!=<pos:position pos:line="88" pos:column="15"/></operator> <name pos:line="88" pos:column="16">NULL<pos:position pos:line="88" pos:column="20"/></name></expr>)<pos:position pos:line="88" pos:column="21"/></condition><then pos:line="88" pos:column="21"> <block pos:line="88" pos:column="22">{
        <expr_stmt><expr><name pos:line="89" pos:column="9">err<pos:position pos:line="89" pos:column="12"/></name> <operator pos:line="89" pos:column="13">=<pos:position pos:line="89" pos:column="14"/></operator> <call><name pos:line="89" pos:column="15">dav_push_error<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><name><name pos:line="89" pos:column="30">r<pos:position pos:line="89" pos:column="31"/></name><operator pos:line="89" pos:column="31">-&gt;<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="33">pool<pos:position pos:line="89" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="39">err<pos:position pos:line="89" pos:column="42"/></name><operator pos:line="89" pos:column="42">-&gt;<pos:position pos:line="89" pos:column="47"/></operator><name pos:line="89" pos:column="44">status<pos:position pos:line="89" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="52">0<pos:position pos:line="89" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="90" pos:column="30">apr_psprintf<pos:position pos:line="90" pos:column="42"/></name><argument_list pos:line="90" pos:column="42">(<argument><expr><name><name pos:line="90" pos:column="43">r<pos:position pos:line="90" pos:column="44"/></name><operator pos:line="90" pos:column="44">-&gt;<pos:position pos:line="90" pos:column="49"/></operator><name pos:line="90" pos:column="46">pool<pos:position pos:line="90" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="91" pos:column="43">"Could not DELETE %s."<pos:position pos:line="91" pos:column="65"/></literal></expr></argument>,
                                          <argument><expr><call><name pos:line="92" pos:column="43">ap_escape_html<pos:position pos:line="92" pos:column="57"/></name><argument_list pos:line="92" pos:column="57">(<argument><expr><name><name pos:line="92" pos:column="58">r<pos:position pos:line="92" pos:column="59"/></name><operator pos:line="92" pos:column="59">-&gt;<pos:position pos:line="92" pos:column="64"/></operator><name pos:line="92" pos:column="61">pool<pos:position pos:line="92" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="67">r<pos:position pos:line="92" pos:column="68"/></name><operator pos:line="92" pos:column="68">-&gt;<pos:position pos:line="92" pos:column="73"/></operator><name pos:line="92" pos:column="70">uri<pos:position pos:line="92" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="92" pos:column="75"/></argument_list></call></expr></argument>,
                             <argument><expr><name pos:line="93" pos:column="30">err<pos:position pos:line="93" pos:column="33"/></name></expr></argument>)<pos:position pos:line="93" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
        <return pos:line="94" pos:column="9">return <expr><call><name pos:line="94" pos:column="16">dav_handle_err<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">r<pos:position pos:line="94" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="34">err<pos:position pos:line="94" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="39">multi_response<pos:position pos:line="94" pos:column="53"/></name></expr></argument>)<pos:position pos:line="94" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="55"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">err2<pos:position pos:line="96" pos:column="13"/></name> <operator pos:line="96" pos:column="14">!=<pos:position pos:line="96" pos:column="16"/></operator> <name pos:line="96" pos:column="17">NULL<pos:position pos:line="96" pos:column="21"/></name></expr>)<pos:position pos:line="96" pos:column="22"/></condition><then pos:line="96" pos:column="22"> <block pos:line="96" pos:column="23">{
        <comment type="block" pos:line="97" pos:column="9">/* just log a warning */</comment>
        <expr_stmt><expr><name pos:line="98" pos:column="9">err<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">=<pos:position pos:line="98" pos:column="14"/></operator> <call><name pos:line="98" pos:column="15">dav_push_error<pos:position pos:line="98" pos:column="29"/></name><argument_list pos:line="98" pos:column="29">(<argument><expr><name><name pos:line="98" pos:column="30">r<pos:position pos:line="98" pos:column="31"/></name><operator pos:line="98" pos:column="31">-&gt;<pos:position pos:line="98" pos:column="36"/></operator><name pos:line="98" pos:column="33">pool<pos:position pos:line="98" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="39">err2<pos:position pos:line="98" pos:column="43"/></name><operator pos:line="98" pos:column="43">-&gt;<pos:position pos:line="98" pos:column="48"/></operator><name pos:line="98" pos:column="45">status<pos:position pos:line="98" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="53">0<pos:position pos:line="98" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="99" pos:column="30">"The DELETE was successful, but there "<pos:position pos:line="99" pos:column="69"/></literal>
                             <literal type="string" pos:line="100" pos:column="30">"was a problem automatically checking in "<pos:position pos:line="100" pos:column="72"/></literal>
                             <literal type="string" pos:line="101" pos:column="30">"the parent collection."<pos:position pos:line="101" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><name pos:line="102" pos:column="30">err2<pos:position pos:line="102" pos:column="34"/></name></expr></argument>)<pos:position pos:line="102" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">dav_log_err<pos:position pos:line="103" pos:column="20"/></name><argument_list pos:line="103" pos:column="20">(<argument><expr><name pos:line="103" pos:column="21">r<pos:position pos:line="103" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="24">err<pos:position pos:line="103" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="29">APLOG_WARNING<pos:position pos:line="103" pos:column="42"/></name></expr></argument>)<pos:position pos:line="103" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="104" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="106" pos:column="5">/* ### HTTP_NO_CONTENT if no body, HTTP_OK if there is a body (some day) */</comment>

    <comment type="block" pos:line="108" pos:column="5">/* Apache will supply a default error for this. */</comment>
    <return pos:line="109" pos:column="5">return <expr><name pos:line="109" pos:column="12">HTTP_NO_CONTENT<pos:position pos:line="109" pos:column="27"/></name></expr>;<pos:position pos:line="109" pos:column="28"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

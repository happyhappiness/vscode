<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3294_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">glassToWall<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_int16_t<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">port<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_pool_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">parent<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_sockaddr_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">sockAddr<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_socket_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">listener<pos:position pos:line="4" pos:column="27"/></name></decl>, <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="30">accepted<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">rv<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">apr_socket_create<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">&amp;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="29">listener<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">APR_INET<pos:position pos:line="7" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="49">SOCK_STREAM<pos:position pos:line="7" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="62">APR_PROTO_TCP<pos:position pos:line="7" pos:column="75"/></name></expr></argument>,
                           <argument><expr><name pos:line="8" pos:column="28">parent<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">rv<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">!=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">APR_SUCCESS<pos:position pos:line="9" pos:column="26"/></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27"> <block pos:line="9" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">reportError<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"Unable to create socket"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">rv<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">parent<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">rv<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">rv<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">apr_sockaddr_info_get<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">&amp;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="33">sockAddr<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="43">"127.0.0.1"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">APR_UNSPEC<pos:position pos:line="14" pos:column="66"/></name></expr></argument>,
                               <argument><expr><name pos:line="15" pos:column="32">port<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="38">0<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">parent<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">rv<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">!=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">APR_SUCCESS<pos:position pos:line="16" pos:column="26"/></name></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27"> <block pos:line="16" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">reportError<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><literal type="string" pos:line="17" pos:column="21">"Unable to get socket info"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">rv<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">parent<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">apr_socket_close<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">listener<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">rv<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">rv<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">apr_socket_bind<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">listener<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">sockAddr<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call><operator pos:line="22" pos:column="50">)<pos:position pos:line="22" pos:column="51"/></operator> <operator pos:line="22" pos:column="52">!=<pos:position pos:line="22" pos:column="54"/></operator> <name pos:line="22" pos:column="55">APR_SUCCESS<pos:position pos:line="22" pos:column="66"/></name> <operator pos:line="22" pos:column="67">||<pos:position pos:line="22" pos:column="69"/></operator>
        <operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">rv<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">apr_socket_listen<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">listener<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="43">5<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call><operator pos:line="23" pos:column="45">)<pos:position pos:line="23" pos:column="46"/></operator> <operator pos:line="23" pos:column="47">!=<pos:position pos:line="23" pos:column="49"/></operator> <name pos:line="23" pos:column="50">APR_SUCCESS<pos:position pos:line="23" pos:column="61"/></name></expr>)<pos:position pos:line="23" pos:column="62"/></condition><then pos:line="23" pos:column="62"> <block pos:line="23" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">reportError<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><literal type="string" pos:line="24" pos:column="21">"Unable to bind or listen to socket"<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="59">rv<pos:position pos:line="24" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="63">parent<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">apr_socket_close<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">listener<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">rv<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init pos:line="29" pos:column="10">;<pos:position pos:line="29" pos:column="11"/></init><condition pos:line="29" pos:column="11">;<pos:position pos:line="29" pos:column="12"/></condition><incr/>)<pos:position pos:line="29" pos:column="13"/></control> <block pos:line="29" pos:column="14">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">rv<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">apr_socket_accept<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><operator pos:line="30" pos:column="32">&amp;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="33">accepted<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">listener<pos:position pos:line="30" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">parent<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">rv<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">!=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">APR_SUCCESS<pos:position pos:line="31" pos:column="30"/></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31"> <block pos:line="31" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">reportError<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><literal type="string" pos:line="32" pos:column="25">"Error accepting on socket"<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">rv<pos:position pos:line="32" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="58">parent<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
            <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">printf<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="string" pos:line="35" pos:column="16">"\tAnswering connection\n"<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">rv<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">talkTalk<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">accepted<pos:position pos:line="36" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="33">parent<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">apr_socket_close<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">accepted<pos:position pos:line="37" pos:column="34"/></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">printf<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><literal type="string" pos:line="38" pos:column="16">"\tConnection closed\n"<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">rv<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">APR_SUCCESS<pos:position pos:line="39" pos:column="30"/></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31">
            <block type="pseudo"><break pos:line="40" pos:column="13">break;<pos:position pos:line="40" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">apr_socket_close<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">listener<pos:position pos:line="43" pos:column="30"/></name></expr></argument>)<pos:position pos:line="43" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">APR_SUCCESS<pos:position pos:line="44" pos:column="23"/></name></expr>;<pos:position pos:line="44" pos:column="24"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

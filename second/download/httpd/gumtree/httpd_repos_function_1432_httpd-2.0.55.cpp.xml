<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1432_httpd-2.0.55.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">APR_THREAD_FUNC<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">GetServerVariable<pos:position pos:line="1" pos:column="38"/></name> <parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">isapi_cid<pos:position pos:line="1" pos:column="49"/></name>    <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">cid<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, 
                                       <parameter><decl><type><name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name>         <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">variable_name<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="3" pos:column="40">void<pos:position pos:line="3" pos:column="44"/></name>         <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">buf_data<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>, 
                                       <parameter><decl><type><name pos:line="4" pos:column="40">apr_uint32_t<pos:position pos:line="4" pos:column="52"/></name> <modifier pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></modifier></type><name pos:line="4" pos:column="54">buf_size<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="63"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">request_rec<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">r<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">cid<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">r<pos:position pos:line="6" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">result<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_uint32_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">len<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name pos:line="10" pos:column="10">strcmp<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">variable_name<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="32">"ALL_HTTP"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44"> 
    <block pos:line="11" pos:column="5">{
        <comment type="block" pos:line="12" pos:column="9">/* crlf delimited, colon split, comma separated and 
         * null terminated list of HTTP_ vars 
         */</comment>
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">apr_array_header_t<pos:position pos:line="15" pos:column="33"/></name> <modifier pos:line="15" pos:column="34">*<pos:position pos:line="15" pos:column="35"/></modifier></type><name pos:line="15" pos:column="35">arr<pos:position pos:line="15" pos:column="38"/></name> <init pos:line="15" pos:column="39">= <expr><call><name pos:line="15" pos:column="41">apr_table_elts<pos:position pos:line="15" pos:column="55"/></name><argument_list pos:line="15" pos:column="55">(<argument><expr><name><name pos:line="15" pos:column="56">r<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">subprocess_env<pos:position pos:line="15" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="75"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">apr_table_entry_t<pos:position pos:line="16" pos:column="32"/></name> <modifier pos:line="16" pos:column="33">*<pos:position pos:line="16" pos:column="34"/></modifier></type><name pos:line="16" pos:column="34">elts<pos:position pos:line="16" pos:column="38"/></name> <init pos:line="16" pos:column="39">= <expr><operator pos:line="16" pos:column="41">(<pos:position pos:line="16" pos:column="42"/></operator><specifier pos:line="16" pos:column="42">const<pos:position pos:line="16" pos:column="47"/></specifier> <name pos:line="16" pos:column="48">apr_table_entry_t<pos:position pos:line="16" pos:column="65"/></name> <operator pos:line="16" pos:column="66">*<pos:position pos:line="16" pos:column="67"/></operator><operator pos:line="16" pos:column="67">)<pos:position pos:line="16" pos:column="68"/></operator><name><name pos:line="16" pos:column="68">arr<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">-&gt;<pos:position pos:line="16" pos:column="76"/></operator><name pos:line="16" pos:column="73">elts<pos:position pos:line="16" pos:column="77"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="78"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">i<pos:position pos:line="17" pos:column="14"/></name></decl>;<pos:position pos:line="17" pos:column="15"/></decl_stmt>

        <for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">len<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr><operator pos:line="19" pos:column="21">,<pos:position pos:line="19" pos:column="22"/></operator> <expr><name pos:line="19" pos:column="23">i<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <literal type="number" pos:line="19" pos:column="27">0<pos:position pos:line="19" pos:column="28"/></literal></expr>;<pos:position pos:line="19" pos:column="29"/></init> <condition><expr><name pos:line="19" pos:column="30">i<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">&lt;<pos:position pos:line="19" pos:column="36"/></operator> <name><name pos:line="19" pos:column="34">arr<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">nelts<pos:position pos:line="19" pos:column="44"/></name></name></expr>;<pos:position pos:line="19" pos:column="45"/></condition> <incr><expr><name pos:line="19" pos:column="46">i<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">++<pos:position pos:line="19" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="50"/></control> <block pos:line="19" pos:column="51">{
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><operator pos:line="20" pos:column="17">!<pos:position pos:line="20" pos:column="18"/></operator><call><name pos:line="20" pos:column="18">strncmp<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name><name pos:line="20" pos:column="26">elts<pos:position pos:line="20" pos:column="30"/></name><index pos:line="20" pos:column="30">[<expr><name pos:line="20" pos:column="31">i<pos:position pos:line="20" pos:column="32"/></name></expr>]<pos:position pos:line="20" pos:column="33"/></index></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">key<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="39">"HTTP_"<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="48">5<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="51"/></condition><then pos:line="20" pos:column="51"> <block pos:line="20" pos:column="52">{
                <expr_stmt><expr><name pos:line="21" pos:column="17">len<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">+=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">strlen<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name><name pos:line="21" pos:column="31">elts<pos:position pos:line="21" pos:column="35"/></name><index pos:line="21" pos:column="35">[<expr><name pos:line="21" pos:column="36">i<pos:position pos:line="21" pos:column="37"/></name></expr>]<pos:position pos:line="21" pos:column="38"/></index></name><operator pos:line="21" pos:column="38">.<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">key<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call> <operator pos:line="21" pos:column="44">+<pos:position pos:line="21" pos:column="45"/></operator> <call><name pos:line="21" pos:column="46">strlen<pos:position pos:line="21" pos:column="52"/></name><argument_list pos:line="21" pos:column="52">(<argument><expr><name><name pos:line="21" pos:column="53">elts<pos:position pos:line="21" pos:column="57"/></name><index pos:line="21" pos:column="57">[<expr><name pos:line="21" pos:column="58">i<pos:position pos:line="21" pos:column="59"/></name></expr>]<pos:position pos:line="21" pos:column="60"/></index></name><operator pos:line="21" pos:column="60">.<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="61">val<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call> <operator pos:line="21" pos:column="66">+<pos:position pos:line="21" pos:column="67"/></operator> <literal type="number" pos:line="21" pos:column="68">3<pos:position pos:line="21" pos:column="69"/></literal></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
        }<pos:position pos:line="23" pos:column="10"/></block></for>
  
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">*<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">buf_size<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&lt;<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="25">len<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">+<pos:position pos:line="25" pos:column="30"/></operator> <literal type="number" pos:line="25" pos:column="31">1<pos:position pos:line="25" pos:column="32"/></literal></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33"> <block pos:line="25" pos:column="34">{
            <expr_stmt><expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">buf_size<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">len<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">+<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="31">1<pos:position pos:line="26" pos:column="32"/></literal></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">SetLastError<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">ERROR_INSUFFICIENT_BUFFER<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
            <return pos:line="28" pos:column="13">return <expr><literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    
        <for pos:line="31" pos:column="9">for <control pos:line="31" pos:column="13">(<init><expr><name pos:line="31" pos:column="14">i<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <literal type="number" pos:line="31" pos:column="18">0<pos:position pos:line="31" pos:column="19"/></literal></expr>;<pos:position pos:line="31" pos:column="20"/></init> <condition><expr><name pos:line="31" pos:column="21">i<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">&lt;<pos:position pos:line="31" pos:column="27"/></operator> <name><name pos:line="31" pos:column="25">arr<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">nelts<pos:position pos:line="31" pos:column="35"/></name></name></expr>;<pos:position pos:line="31" pos:column="36"/></condition> <incr><expr><name pos:line="31" pos:column="37">i<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">++<pos:position pos:line="31" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="41"/></control> <block pos:line="31" pos:column="42">{
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><operator pos:line="32" pos:column="17">!<pos:position pos:line="32" pos:column="18"/></operator><call><name pos:line="32" pos:column="18">strncmp<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name><name pos:line="32" pos:column="26">elts<pos:position pos:line="32" pos:column="30"/></name><index pos:line="32" pos:column="30">[<expr><name pos:line="32" pos:column="31">i<pos:position pos:line="32" pos:column="32"/></name></expr>]<pos:position pos:line="32" pos:column="33"/></index></name><operator pos:line="32" pos:column="33">.<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">key<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="39">"HTTP_"<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="48">5<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51"> <block pos:line="32" pos:column="52">{
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">strcpy<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">buf_data<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="34">elts<pos:position pos:line="33" pos:column="38"/></name><index pos:line="33" pos:column="38">[<expr><name pos:line="33" pos:column="39">i<pos:position pos:line="33" pos:column="40"/></name></expr>]<pos:position pos:line="33" pos:column="41"/></index></name><operator pos:line="33" pos:column="41">.<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="42">key<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="34" pos:column="17">(<pos:position pos:line="34" pos:column="18"/></operator><operator pos:line="34" pos:column="18">(<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">char<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">*<pos:position pos:line="34" pos:column="24"/></operator><operator pos:line="34" pos:column="24">)<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">buf_data<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">)<pos:position pos:line="34" pos:column="34"/></operator> <operator pos:line="34" pos:column="35">+=<pos:position pos:line="34" pos:column="37"/></operator> <call><name pos:line="34" pos:column="38">strlen<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name><name pos:line="34" pos:column="45">elts<pos:position pos:line="34" pos:column="49"/></name><index pos:line="34" pos:column="49">[<expr><name pos:line="34" pos:column="50">i<pos:position pos:line="34" pos:column="51"/></name></expr>]<pos:position pos:line="34" pos:column="52"/></index></name><operator pos:line="34" pos:column="52">.<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="53">key<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><operator pos:line="35" pos:column="18">(<pos:position pos:line="35" pos:column="19"/></operator><operator pos:line="35" pos:column="19">(<pos:position pos:line="35" pos:column="20"/></operator><operator pos:line="35" pos:column="20">(<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">char<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">*<pos:position pos:line="35" pos:column="26"/></operator><operator pos:line="35" pos:column="26">)<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">buf_data<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">)<pos:position pos:line="35" pos:column="36"/></operator><operator pos:line="35" pos:column="36">++<pos:position pos:line="35" pos:column="38"/></operator><operator pos:line="35" pos:column="38">)<pos:position pos:line="35" pos:column="39"/></operator> <operator pos:line="35" pos:column="40">=<pos:position pos:line="35" pos:column="41"/></operator> <literal type="char" pos:line="35" pos:column="42">':'<pos:position pos:line="35" pos:column="45"/></literal></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">strcpy<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">buf_data<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="34">elts<pos:position pos:line="36" pos:column="38"/></name><index pos:line="36" pos:column="38">[<expr><name pos:line="36" pos:column="39">i<pos:position pos:line="36" pos:column="40"/></name></expr>]<pos:position pos:line="36" pos:column="41"/></index></name><operator pos:line="36" pos:column="41">.<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="42">val<pos:position pos:line="36" pos:column="45"/></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="37" pos:column="17">(<pos:position pos:line="37" pos:column="18"/></operator><operator pos:line="37" pos:column="18">(<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">char<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">*<pos:position pos:line="37" pos:column="24"/></operator><operator pos:line="37" pos:column="24">)<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">buf_data<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">)<pos:position pos:line="37" pos:column="34"/></operator> <operator pos:line="37" pos:column="35">+=<pos:position pos:line="37" pos:column="37"/></operator> <call><name pos:line="37" pos:column="38">strlen<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name><name pos:line="37" pos:column="45">elts<pos:position pos:line="37" pos:column="49"/></name><index pos:line="37" pos:column="49">[<expr><name pos:line="37" pos:column="50">i<pos:position pos:line="37" pos:column="51"/></name></expr>]<pos:position pos:line="37" pos:column="52"/></index></name><operator pos:line="37" pos:column="52">.<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="53">val<pos:position pos:line="37" pos:column="56"/></name></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></operator><operator pos:line="38" pos:column="18">(<pos:position pos:line="38" pos:column="19"/></operator><operator pos:line="38" pos:column="19">(<pos:position pos:line="38" pos:column="20"/></operator><operator pos:line="38" pos:column="20">(<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">char<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">*<pos:position pos:line="38" pos:column="26"/></operator><operator pos:line="38" pos:column="26">)<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">buf_data<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">)<pos:position pos:line="38" pos:column="36"/></operator><operator pos:line="38" pos:column="36">++<pos:position pos:line="38" pos:column="38"/></operator><operator pos:line="38" pos:column="38">)<pos:position pos:line="38" pos:column="39"/></operator> <operator pos:line="38" pos:column="40">=<pos:position pos:line="38" pos:column="41"/></operator> <literal type="char" pos:line="38" pos:column="42">'\r'<pos:position pos:line="38" pos:column="46"/></literal></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><operator pos:line="39" pos:column="18">(<pos:position pos:line="39" pos:column="19"/></operator><operator pos:line="39" pos:column="19">(<pos:position pos:line="39" pos:column="20"/></operator><operator pos:line="39" pos:column="20">(<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="21">char<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">*<pos:position pos:line="39" pos:column="26"/></operator><operator pos:line="39" pos:column="26">)<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">buf_data<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">)<pos:position pos:line="39" pos:column="36"/></operator><operator pos:line="39" pos:column="36">++<pos:position pos:line="39" pos:column="38"/></operator><operator pos:line="39" pos:column="38">)<pos:position pos:line="39" pos:column="39"/></operator> <operator pos:line="39" pos:column="40">=<pos:position pos:line="39" pos:column="41"/></operator> <literal type="char" pos:line="39" pos:column="42">'\n'<pos:position pos:line="39" pos:column="46"/></literal></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if>
        }<pos:position pos:line="41" pos:column="10"/></block></for>

        <expr_stmt><expr><operator pos:line="43" pos:column="9">*<pos:position pos:line="43" pos:column="10"/></operator><operator pos:line="43" pos:column="10">(<pos:position pos:line="43" pos:column="11"/></operator><operator pos:line="43" pos:column="11">(<pos:position pos:line="43" pos:column="12"/></operator><operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">char<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">buf_data<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">)<pos:position pos:line="43" pos:column="28"/></operator><operator pos:line="43" pos:column="28">++<pos:position pos:line="43" pos:column="30"/></operator><operator pos:line="43" pos:column="30">)<pos:position pos:line="43" pos:column="31"/></operator> <operator pos:line="43" pos:column="32">=<pos:position pos:line="43" pos:column="33"/></operator> <literal type="char" pos:line="43" pos:column="34">'\0'<pos:position pos:line="43" pos:column="38"/></literal></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">buf_size<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="21">len<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">+<pos:position pos:line="44" pos:column="26"/></operator> <literal type="number" pos:line="44" pos:column="27">1<pos:position pos:line="44" pos:column="28"/></literal></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><literal type="number" pos:line="45" pos:column="16">1<pos:position pos:line="45" pos:column="17"/></literal></expr>;<pos:position pos:line="45" pos:column="18"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">!<pos:position pos:line="48" pos:column="10"/></operator><call><name pos:line="48" pos:column="10">strcmp<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">variable_name<pos:position pos:line="48" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="32">"ALL_RAW"<pos:position pos:line="48" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="43"/></condition><then pos:line="48" pos:column="43"> 
    <block pos:line="49" pos:column="5">{
        <comment type="block" pos:line="50" pos:column="9">/* crlf delimited, colon split, comma separated and 
         * null terminated list of the raw request header
         */</comment>
        <decl_stmt><decl><type><specifier pos:line="53" pos:column="9">const<pos:position pos:line="53" pos:column="14"/></specifier> <name pos:line="53" pos:column="15">apr_array_header_t<pos:position pos:line="53" pos:column="33"/></name> <modifier pos:line="53" pos:column="34">*<pos:position pos:line="53" pos:column="35"/></modifier></type><name pos:line="53" pos:column="35">arr<pos:position pos:line="53" pos:column="38"/></name> <init pos:line="53" pos:column="39">= <expr><call><name pos:line="53" pos:column="41">apr_table_elts<pos:position pos:line="53" pos:column="55"/></name><argument_list pos:line="53" pos:column="55">(<argument><expr><name><name pos:line="53" pos:column="56">r<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">-&gt;<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="59">headers_in<pos:position pos:line="53" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="54" pos:column="9">const<pos:position pos:line="54" pos:column="14"/></specifier> <name pos:line="54" pos:column="15">apr_table_entry_t<pos:position pos:line="54" pos:column="32"/></name> <modifier pos:line="54" pos:column="33">*<pos:position pos:line="54" pos:column="34"/></modifier></type><name pos:line="54" pos:column="34">elts<pos:position pos:line="54" pos:column="38"/></name> <init pos:line="54" pos:column="39">= <expr><operator pos:line="54" pos:column="41">(<pos:position pos:line="54" pos:column="42"/></operator><specifier pos:line="54" pos:column="42">const<pos:position pos:line="54" pos:column="47"/></specifier> <name pos:line="54" pos:column="48">apr_table_entry_t<pos:position pos:line="54" pos:column="65"/></name> <operator pos:line="54" pos:column="66">*<pos:position pos:line="54" pos:column="67"/></operator><operator pos:line="54" pos:column="67">)<pos:position pos:line="54" pos:column="68"/></operator><name><name pos:line="54" pos:column="68">arr<pos:position pos:line="54" pos:column="71"/></name><operator pos:line="54" pos:column="71">-&gt;<pos:position pos:line="54" pos:column="76"/></operator><name pos:line="54" pos:column="73">elts<pos:position pos:line="54" pos:column="77"/></name></name></expr></init></decl>;<pos:position pos:line="54" pos:column="78"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">int<pos:position pos:line="55" pos:column="12"/></name></type> <name pos:line="55" pos:column="13">i<pos:position pos:line="55" pos:column="14"/></name></decl>;<pos:position pos:line="55" pos:column="15"/></decl_stmt>

        <for pos:line="57" pos:column="9">for <control pos:line="57" pos:column="13">(<init><expr><name pos:line="57" pos:column="14">len<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <literal type="number" pos:line="57" pos:column="20">0<pos:position pos:line="57" pos:column="21"/></literal></expr><operator pos:line="57" pos:column="21">,<pos:position pos:line="57" pos:column="22"/></operator> <expr><name pos:line="57" pos:column="23">i<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">=<pos:position pos:line="57" pos:column="26"/></operator> <literal type="number" pos:line="57" pos:column="27">0<pos:position pos:line="57" pos:column="28"/></literal></expr>;<pos:position pos:line="57" pos:column="29"/></init> <condition><expr><name pos:line="57" pos:column="30">i<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">&lt;<pos:position pos:line="57" pos:column="36"/></operator> <name><name pos:line="57" pos:column="34">arr<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">-&gt;<pos:position pos:line="57" pos:column="42"/></operator><name pos:line="57" pos:column="39">nelts<pos:position pos:line="57" pos:column="44"/></name></name></expr>;<pos:position pos:line="57" pos:column="45"/></condition> <incr><expr><name pos:line="57" pos:column="46">i<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">++<pos:position pos:line="57" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="50"/></control> <block pos:line="57" pos:column="51">{
            <expr_stmt><expr><name pos:line="58" pos:column="13">len<pos:position pos:line="58" pos:column="16"/></name> <operator pos:line="58" pos:column="17">+=<pos:position pos:line="58" pos:column="19"/></operator> <call><name pos:line="58" pos:column="20">strlen<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><name><name pos:line="58" pos:column="27">elts<pos:position pos:line="58" pos:column="31"/></name><index pos:line="58" pos:column="31">[<expr><name pos:line="58" pos:column="32">i<pos:position pos:line="58" pos:column="33"/></name></expr>]<pos:position pos:line="58" pos:column="34"/></index></name><operator pos:line="58" pos:column="34">.<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="35">key<pos:position pos:line="58" pos:column="38"/></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call> <operator pos:line="58" pos:column="40">+<pos:position pos:line="58" pos:column="41"/></operator> <call><name pos:line="58" pos:column="42">strlen<pos:position pos:line="58" pos:column="48"/></name><argument_list pos:line="58" pos:column="48">(<argument><expr><name><name pos:line="58" pos:column="49">elts<pos:position pos:line="58" pos:column="53"/></name><index pos:line="58" pos:column="53">[<expr><name pos:line="58" pos:column="54">i<pos:position pos:line="58" pos:column="55"/></name></expr>]<pos:position pos:line="58" pos:column="56"/></index></name><operator pos:line="58" pos:column="56">.<pos:position pos:line="58" pos:column="57"/></operator><name pos:line="58" pos:column="57">val<pos:position pos:line="58" pos:column="60"/></name></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call> <operator pos:line="58" pos:column="62">+<pos:position pos:line="58" pos:column="63"/></operator> <literal type="number" pos:line="58" pos:column="64">4<pos:position pos:line="58" pos:column="65"/></literal></expr>;<pos:position pos:line="58" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></for>
  
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">*<pos:position pos:line="61" pos:column="14"/></operator><name pos:line="61" pos:column="14">buf_size<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">&lt;<pos:position pos:line="61" pos:column="27"/></operator> <name pos:line="61" pos:column="25">len<pos:position pos:line="61" pos:column="28"/></name> <operator pos:line="61" pos:column="29">+<pos:position pos:line="61" pos:column="30"/></operator> <literal type="number" pos:line="61" pos:column="31">1<pos:position pos:line="61" pos:column="32"/></literal></expr>)<pos:position pos:line="61" pos:column="33"/></condition><then pos:line="61" pos:column="33"> <block pos:line="61" pos:column="34">{
            <expr_stmt><expr><operator pos:line="62" pos:column="13">*<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">buf_size<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">=<pos:position pos:line="62" pos:column="24"/></operator> <name pos:line="62" pos:column="25">len<pos:position pos:line="62" pos:column="28"/></name> <operator pos:line="62" pos:column="29">+<pos:position pos:line="62" pos:column="30"/></operator> <literal type="number" pos:line="62" pos:column="31">1<pos:position pos:line="62" pos:column="32"/></literal></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">SetLastError<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">ERROR_INSUFFICIENT_BUFFER<pos:position pos:line="63" pos:column="51"/></name></expr></argument>)<pos:position pos:line="63" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="53"/></expr_stmt>
            <return pos:line="64" pos:column="13">return <expr><literal type="number" pos:line="64" pos:column="20">0<pos:position pos:line="64" pos:column="21"/></literal></expr>;<pos:position pos:line="64" pos:column="22"/></return>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
    
        <for pos:line="67" pos:column="9">for <control pos:line="67" pos:column="13">(<init><expr><name pos:line="67" pos:column="14">i<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <literal type="number" pos:line="67" pos:column="18">0<pos:position pos:line="67" pos:column="19"/></literal></expr>;<pos:position pos:line="67" pos:column="20"/></init> <condition><expr><name pos:line="67" pos:column="21">i<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">&lt;<pos:position pos:line="67" pos:column="27"/></operator> <name><name pos:line="67" pos:column="25">arr<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">nelts<pos:position pos:line="67" pos:column="35"/></name></name></expr>;<pos:position pos:line="67" pos:column="36"/></condition> <incr><expr><name pos:line="67" pos:column="37">i<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">++<pos:position pos:line="67" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="41"/></control> <block pos:line="67" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">strcpy<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<argument><expr><name pos:line="68" pos:column="20">buf_data<pos:position pos:line="68" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="30">elts<pos:position pos:line="68" pos:column="34"/></name><index pos:line="68" pos:column="34">[<expr><name pos:line="68" pos:column="35">i<pos:position pos:line="68" pos:column="36"/></name></expr>]<pos:position pos:line="68" pos:column="37"/></index></name><operator pos:line="68" pos:column="37">.<pos:position pos:line="68" pos:column="38"/></operator><name pos:line="68" pos:column="38">key<pos:position pos:line="68" pos:column="41"/></name></expr></argument>)<pos:position pos:line="68" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="69" pos:column="13">(<pos:position pos:line="69" pos:column="14"/></operator><operator pos:line="69" pos:column="14">(<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="15">char<pos:position pos:line="69" pos:column="19"/></name><operator pos:line="69" pos:column="19">*<pos:position pos:line="69" pos:column="20"/></operator><operator pos:line="69" pos:column="20">)<pos:position pos:line="69" pos:column="21"/></operator><name pos:line="69" pos:column="21">buf_data<pos:position pos:line="69" pos:column="29"/></name><operator pos:line="69" pos:column="29">)<pos:position pos:line="69" pos:column="30"/></operator> <operator pos:line="69" pos:column="31">+=<pos:position pos:line="69" pos:column="33"/></operator> <call><name pos:line="69" pos:column="34">strlen<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><name><name pos:line="69" pos:column="41">elts<pos:position pos:line="69" pos:column="45"/></name><index pos:line="69" pos:column="45">[<expr><name pos:line="69" pos:column="46">i<pos:position pos:line="69" pos:column="47"/></name></expr>]<pos:position pos:line="69" pos:column="48"/></index></name><operator pos:line="69" pos:column="48">.<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="49">key<pos:position pos:line="69" pos:column="52"/></name></expr></argument>)<pos:position pos:line="69" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="70" pos:column="13">*<pos:position pos:line="70" pos:column="14"/></operator><operator pos:line="70" pos:column="14">(<pos:position pos:line="70" pos:column="15"/></operator><operator pos:line="70" pos:column="15">(<pos:position pos:line="70" pos:column="16"/></operator><operator pos:line="70" pos:column="16">(<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="17">char<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">*<pos:position pos:line="70" pos:column="22"/></operator><operator pos:line="70" pos:column="22">)<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="23">buf_data<pos:position pos:line="70" pos:column="31"/></name><operator pos:line="70" pos:column="31">)<pos:position pos:line="70" pos:column="32"/></operator><operator pos:line="70" pos:column="32">++<pos:position pos:line="70" pos:column="34"/></operator><operator pos:line="70" pos:column="34">)<pos:position pos:line="70" pos:column="35"/></operator> <operator pos:line="70" pos:column="36">=<pos:position pos:line="70" pos:column="37"/></operator> <literal type="char" pos:line="70" pos:column="38">':'<pos:position pos:line="70" pos:column="41"/></literal></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="71" pos:column="13">*<pos:position pos:line="71" pos:column="14"/></operator><operator pos:line="71" pos:column="14">(<pos:position pos:line="71" pos:column="15"/></operator><operator pos:line="71" pos:column="15">(<pos:position pos:line="71" pos:column="16"/></operator><operator pos:line="71" pos:column="16">(<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">char<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">*<pos:position pos:line="71" pos:column="22"/></operator><operator pos:line="71" pos:column="22">)<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="23">buf_data<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">)<pos:position pos:line="71" pos:column="32"/></operator><operator pos:line="71" pos:column="32">++<pos:position pos:line="71" pos:column="34"/></operator><operator pos:line="71" pos:column="34">)<pos:position pos:line="71" pos:column="35"/></operator> <operator pos:line="71" pos:column="36">=<pos:position pos:line="71" pos:column="37"/></operator> <literal type="char" pos:line="71" pos:column="38">' '<pos:position pos:line="71" pos:column="41"/></literal></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">strcpy<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">buf_data<pos:position pos:line="72" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="30">elts<pos:position pos:line="72" pos:column="34"/></name><index pos:line="72" pos:column="34">[<expr><name pos:line="72" pos:column="35">i<pos:position pos:line="72" pos:column="36"/></name></expr>]<pos:position pos:line="72" pos:column="37"/></index></name><operator pos:line="72" pos:column="37">.<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="38">val<pos:position pos:line="72" pos:column="41"/></name></expr></argument>)<pos:position pos:line="72" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="73" pos:column="13">(<pos:position pos:line="73" pos:column="14"/></operator><operator pos:line="73" pos:column="14">(<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="15">char<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">*<pos:position pos:line="73" pos:column="20"/></operator><operator pos:line="73" pos:column="20">)<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="21">buf_data<pos:position pos:line="73" pos:column="29"/></name><operator pos:line="73" pos:column="29">)<pos:position pos:line="73" pos:column="30"/></operator> <operator pos:line="73" pos:column="31">+=<pos:position pos:line="73" pos:column="33"/></operator> <call><name pos:line="73" pos:column="34">strlen<pos:position pos:line="73" pos:column="40"/></name><argument_list pos:line="73" pos:column="40">(<argument><expr><name><name pos:line="73" pos:column="41">elts<pos:position pos:line="73" pos:column="45"/></name><index pos:line="73" pos:column="45">[<expr><name pos:line="73" pos:column="46">i<pos:position pos:line="73" pos:column="47"/></name></expr>]<pos:position pos:line="73" pos:column="48"/></index></name><operator pos:line="73" pos:column="48">.<pos:position pos:line="73" pos:column="49"/></operator><name pos:line="73" pos:column="49">val<pos:position pos:line="73" pos:column="52"/></name></expr></argument>)<pos:position pos:line="73" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="74" pos:column="13">*<pos:position pos:line="74" pos:column="14"/></operator><operator pos:line="74" pos:column="14">(<pos:position pos:line="74" pos:column="15"/></operator><operator pos:line="74" pos:column="15">(<pos:position pos:line="74" pos:column="16"/></operator><operator pos:line="74" pos:column="16">(<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="17">char<pos:position pos:line="74" pos:column="21"/></name><operator pos:line="74" pos:column="21">*<pos:position pos:line="74" pos:column="22"/></operator><operator pos:line="74" pos:column="22">)<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="23">buf_data<pos:position pos:line="74" pos:column="31"/></name><operator pos:line="74" pos:column="31">)<pos:position pos:line="74" pos:column="32"/></operator><operator pos:line="74" pos:column="32">++<pos:position pos:line="74" pos:column="34"/></operator><operator pos:line="74" pos:column="34">)<pos:position pos:line="74" pos:column="35"/></operator> <operator pos:line="74" pos:column="36">=<pos:position pos:line="74" pos:column="37"/></operator> <literal type="char" pos:line="74" pos:column="38">'\r'<pos:position pos:line="74" pos:column="42"/></literal></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="75" pos:column="13">*<pos:position pos:line="75" pos:column="14"/></operator><operator pos:line="75" pos:column="14">(<pos:position pos:line="75" pos:column="15"/></operator><operator pos:line="75" pos:column="15">(<pos:position pos:line="75" pos:column="16"/></operator><operator pos:line="75" pos:column="16">(<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="17">char<pos:position pos:line="75" pos:column="21"/></name><operator pos:line="75" pos:column="21">*<pos:position pos:line="75" pos:column="22"/></operator><operator pos:line="75" pos:column="22">)<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="23">buf_data<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">)<pos:position pos:line="75" pos:column="32"/></operator><operator pos:line="75" pos:column="32">++<pos:position pos:line="75" pos:column="34"/></operator><operator pos:line="75" pos:column="34">)<pos:position pos:line="75" pos:column="35"/></operator> <operator pos:line="75" pos:column="36">=<pos:position pos:line="75" pos:column="37"/></operator> <literal type="char" pos:line="75" pos:column="38">'\n'<pos:position pos:line="75" pos:column="42"/></literal></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></for>
        <expr_stmt><expr><operator pos:line="77" pos:column="9">*<pos:position pos:line="77" pos:column="10"/></operator><operator pos:line="77" pos:column="10">(<pos:position pos:line="77" pos:column="11"/></operator><operator pos:line="77" pos:column="11">(<pos:position pos:line="77" pos:column="12"/></operator><operator pos:line="77" pos:column="12">(<pos:position pos:line="77" pos:column="13"/></operator><name pos:line="77" pos:column="13">char<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">*<pos:position pos:line="77" pos:column="18"/></operator><operator pos:line="77" pos:column="18">)<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="19">buf_data<pos:position pos:line="77" pos:column="27"/></name><operator pos:line="77" pos:column="27">)<pos:position pos:line="77" pos:column="28"/></operator><operator pos:line="77" pos:column="28">++<pos:position pos:line="77" pos:column="30"/></operator><operator pos:line="77" pos:column="30">)<pos:position pos:line="77" pos:column="31"/></operator> <operator pos:line="77" pos:column="32">=<pos:position pos:line="77" pos:column="33"/></operator> <literal type="char" pos:line="77" pos:column="34">'\0'<pos:position pos:line="77" pos:column="38"/></literal></expr>;<pos:position pos:line="77" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="78" pos:column="9">*<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">buf_size<pos:position pos:line="78" pos:column="18"/></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <name pos:line="78" pos:column="21">len<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">+<pos:position pos:line="78" pos:column="26"/></operator> <literal type="number" pos:line="78" pos:column="27">1<pos:position pos:line="78" pos:column="28"/></literal></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><literal type="number" pos:line="79" pos:column="16">1<pos:position pos:line="79" pos:column="17"/></literal></expr>;<pos:position pos:line="79" pos:column="18"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="82" pos:column="5">/* Not a special case */</comment>
    <expr_stmt><expr><name pos:line="83" pos:column="5">result<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">=<pos:position pos:line="83" pos:column="13"/></operator> <call><name pos:line="83" pos:column="14">apr_table_get<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument><expr><name><name pos:line="83" pos:column="28">r<pos:position pos:line="83" pos:column="29"/></name><operator pos:line="83" pos:column="29">-&gt;<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="31">subprocess_env<pos:position pos:line="83" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="47">variable_name<pos:position pos:line="83" pos:column="60"/></name></expr></argument>)<pos:position pos:line="83" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="62"/></expr_stmt>

    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">result<pos:position pos:line="85" pos:column="15"/></name></expr>)<pos:position pos:line="85" pos:column="16"/></condition><then pos:line="85" pos:column="16"> <block pos:line="85" pos:column="17">{
        <expr_stmt><expr><name pos:line="86" pos:column="9">len<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <call><name pos:line="86" pos:column="15">strlen<pos:position pos:line="86" pos:column="21"/></name><argument_list pos:line="86" pos:column="21">(<argument><expr><name pos:line="86" pos:column="22">result<pos:position pos:line="86" pos:column="28"/></name></expr></argument>)<pos:position pos:line="86" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><operator pos:line="87" pos:column="13">*<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">buf_size<pos:position pos:line="87" pos:column="22"/></name> <operator pos:line="87" pos:column="23">&lt;<pos:position pos:line="87" pos:column="27"/></operator> <name pos:line="87" pos:column="25">len<pos:position pos:line="87" pos:column="28"/></name> <operator pos:line="87" pos:column="29">+<pos:position pos:line="87" pos:column="30"/></operator> <literal type="number" pos:line="87" pos:column="31">1<pos:position pos:line="87" pos:column="32"/></literal></expr>)<pos:position pos:line="87" pos:column="33"/></condition><then pos:line="87" pos:column="33"> <block pos:line="87" pos:column="34">{
            <expr_stmt><expr><operator pos:line="88" pos:column="13">*<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="14">buf_size<pos:position pos:line="88" pos:column="22"/></name> <operator pos:line="88" pos:column="23">=<pos:position pos:line="88" pos:column="24"/></operator> <name pos:line="88" pos:column="25">len<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">+<pos:position pos:line="88" pos:column="30"/></operator> <literal type="number" pos:line="88" pos:column="31">1<pos:position pos:line="88" pos:column="32"/></literal></expr>;<pos:position pos:line="88" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">SetLastError<pos:position pos:line="89" pos:column="25"/></name><argument_list pos:line="89" pos:column="25">(<argument><expr><name pos:line="89" pos:column="26">ERROR_INSUFFICIENT_BUFFER<pos:position pos:line="89" pos:column="51"/></name></expr></argument>)<pos:position pos:line="89" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="53"/></expr_stmt>
            <return pos:line="90" pos:column="13">return <expr><literal type="number" pos:line="90" pos:column="20">0<pos:position pos:line="90" pos:column="21"/></literal></expr>;<pos:position pos:line="90" pos:column="22"/></return>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">strcpy<pos:position pos:line="92" pos:column="15"/></name><argument_list pos:line="92" pos:column="15">(<argument><expr><name pos:line="92" pos:column="16">buf_data<pos:position pos:line="92" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="26">result<pos:position pos:line="92" pos:column="32"/></name></expr></argument>)<pos:position pos:line="92" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="93" pos:column="9">*<pos:position pos:line="93" pos:column="10"/></operator><name pos:line="93" pos:column="10">buf_size<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">=<pos:position pos:line="93" pos:column="20"/></operator> <name pos:line="93" pos:column="21">len<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">+<pos:position pos:line="93" pos:column="26"/></operator> <literal type="number" pos:line="93" pos:column="27">1<pos:position pos:line="93" pos:column="28"/></literal></expr>;<pos:position pos:line="93" pos:column="29"/></expr_stmt>
        <return pos:line="94" pos:column="9">return <expr><literal type="number" pos:line="94" pos:column="16">1<pos:position pos:line="94" pos:column="17"/></literal></expr>;<pos:position pos:line="94" pos:column="18"/></return>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="97" pos:column="5">/* Not Found */</comment>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">SetLastError<pos:position pos:line="98" pos:column="17"/></name><argument_list pos:line="98" pos:column="17">(<argument><expr><name pos:line="98" pos:column="18">ERROR_INVALID_INDEX<pos:position pos:line="98" pos:column="37"/></name></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
    <return pos:line="99" pos:column="5">return <expr><literal type="number" pos:line="99" pos:column="12">0<pos:position pos:line="99" pos:column="13"/></literal></expr>;<pos:position pos:line="99" pos:column="14"/></return>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

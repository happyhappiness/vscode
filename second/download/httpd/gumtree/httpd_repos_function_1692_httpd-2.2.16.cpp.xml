<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1692_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">handle_printenv<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">include_ctx_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ctx<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">ap_filter_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">f<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">apr_bucket_brigade<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">bb<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_array_header_t<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">arr<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">apr_table_entry_t<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">elts<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">ctx<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">argc<pos:position pos:line="9" pos:column="18"/></name></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_log_rerror<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">APLOG_MARK<pos:position pos:line="10" pos:column="33"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name><name pos:line="11" pos:column="24">ctx<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">flags<pos:position pos:line="11" pos:column="34"/></name></name> <operator pos:line="11" pos:column="35">&amp;<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="37">SSI_FLAG_PRINTING<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">)<pos:position pos:line="11" pos:column="55"/></operator></expr>
                          ?<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <expr><name pos:line="12" pos:column="29">APLOG_ERR<pos:position pos:line="12" pos:column="38"/></name></expr> <pos:position pos:line="12" pos:column="39"/></then><else pos:line="12" pos:column="39">: <expr><name pos:line="12" pos:column="41">APLOG_WARNING<pos:position pos:line="12" pos:column="54"/></name></expr></else></ternary></expr></argument>,
                      <argument><expr><literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">r<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="29">"printenv directive does not take tags in %s"<pos:position pos:line="13" pos:column="74"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="14" pos:column="23">r<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">filename<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><name><name pos:line="17" pos:column="11">ctx<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">flags<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">&amp;<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="24">SSI_FLAG_PRINTING<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43"> <block pos:line="17" pos:column="44">{
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">APR_SUCCESS<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">ctx<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">argc<pos:position pos:line="21" pos:column="18"/></name></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19"> <block pos:line="21" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">ctx<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">f<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">bb<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">APR_SUCCESS<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">arr<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">apr_table_elts<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name><name pos:line="26" pos:column="26">r<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">subprocess_env<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">elts<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">apr_table_entry_t<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">*<pos:position pos:line="27" pos:column="32"/></operator><operator pos:line="27" pos:column="32">)<pos:position pos:line="27" pos:column="33"/></operator><name><name pos:line="27" pos:column="33">arr<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">elts<pos:position pos:line="27" pos:column="42"/></name></name></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>

    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><expr><name pos:line="29" pos:column="10">i<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <literal type="number" pos:line="29" pos:column="14">0<pos:position pos:line="29" pos:column="15"/></literal></expr>;<pos:position pos:line="29" pos:column="16"/></init> <condition><expr><name pos:line="29" pos:column="17">i<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">&lt;<pos:position pos:line="29" pos:column="23"/></operator> <name><name pos:line="29" pos:column="21">arr<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">nelts<pos:position pos:line="29" pos:column="31"/></name></name></expr>;<pos:position pos:line="29" pos:column="32"/></condition> <incr><expr><operator pos:line="29" pos:column="33">++<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="35">i<pos:position pos:line="29" pos:column="36"/></name></expr></incr>)<pos:position pos:line="29" pos:column="37"/></control> <block pos:line="29" pos:column="38">{
        <decl_stmt><decl><type><specifier pos:line="30" pos:column="9">const<pos:position pos:line="30" pos:column="14"/></specifier> <name pos:line="30" pos:column="15">char<pos:position pos:line="30" pos:column="19"/></name> <modifier pos:line="30" pos:column="20">*<pos:position pos:line="30" pos:column="21"/></modifier></type><name pos:line="30" pos:column="21">key_text<pos:position pos:line="30" pos:column="29"/></name></decl>, <modifier pos:line="30" pos:column="31">*<pos:position pos:line="30" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="30" pos:column="32">val_text<pos:position pos:line="30" pos:column="40"/></name></decl>;<pos:position pos:line="30" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">char<pos:position pos:line="31" pos:column="13"/></name> <modifier pos:line="31" pos:column="14">*<pos:position pos:line="31" pos:column="15"/></modifier></type><name pos:line="31" pos:column="15">key_val<pos:position pos:line="31" pos:column="22"/></name></decl>, <modifier pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="31" pos:column="25">next<pos:position pos:line="31" pos:column="29"/></name></decl>;<pos:position pos:line="31" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">apr_size_t<pos:position pos:line="32" pos:column="19"/></name></type> <name pos:line="32" pos:column="20">k_len<pos:position pos:line="32" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="32" pos:column="27">v_len<pos:position pos:line="32" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="32" pos:column="34">kv_length<pos:position pos:line="32" pos:column="43"/></name></decl>;<pos:position pos:line="32" pos:column="44"/></decl_stmt>

        <comment type="block" pos:line="34" pos:column="9">/* get key */</comment>
        <expr_stmt><expr><name pos:line="35" pos:column="9">key_text<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">ap_escape_html<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name><name pos:line="35" pos:column="35">ctx<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">dpool<pos:position pos:line="35" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="47">elts<pos:position pos:line="35" pos:column="51"/></name><index pos:line="35" pos:column="51">[<expr><name pos:line="35" pos:column="52">i<pos:position pos:line="35" pos:column="53"/></name></expr>]<pos:position pos:line="35" pos:column="54"/></index></name><operator pos:line="35" pos:column="54">.<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="55">key<pos:position pos:line="35" pos:column="58"/></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">k_len<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">strlen<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">key_text<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="38" pos:column="9">/* get value */</comment>
        <expr_stmt><expr><name pos:line="39" pos:column="9">val_text<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <name><name pos:line="39" pos:column="20">elts<pos:position pos:line="39" pos:column="24"/></name><index pos:line="39" pos:column="24">[<expr><name pos:line="39" pos:column="25">i<pos:position pos:line="39" pos:column="26"/></name></expr>]<pos:position pos:line="39" pos:column="27"/></index></name><operator pos:line="39" pos:column="27">.<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">val<pos:position pos:line="39" pos:column="31"/></name></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">val_text<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">==<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">LAZY_VALUE<pos:position pos:line="40" pos:column="35"/></name></expr>)<pos:position pos:line="40" pos:column="36"/></condition><then pos:line="40" pos:column="36"> <block pos:line="40" pos:column="37">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">val_text<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">add_include_vars_lazy<pos:position pos:line="41" pos:column="45"/></name><argument_list pos:line="41" pos:column="45">(<argument><expr><name pos:line="41" pos:column="46">r<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="49">elts<pos:position pos:line="41" pos:column="53"/></name><index pos:line="41" pos:column="53">[<expr><name pos:line="41" pos:column="54">i<pos:position pos:line="41" pos:column="55"/></name></expr>]<pos:position pos:line="41" pos:column="56"/></index></name><operator pos:line="41" pos:column="56">.<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="57">key<pos:position pos:line="41" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="62">ctx<pos:position pos:line="41" pos:column="65"/></name><operator pos:line="41" pos:column="65">-&gt;<pos:position pos:line="41" pos:column="70"/></operator><name pos:line="41" pos:column="67">time_str<pos:position pos:line="41" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="43" pos:column="9">val_text<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <call><name pos:line="43" pos:column="20">ap_escape_html<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><name><name pos:line="43" pos:column="35">ctx<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">dpool<pos:position pos:line="43" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="47">elts<pos:position pos:line="43" pos:column="51"/></name><index pos:line="43" pos:column="51">[<expr><name pos:line="43" pos:column="52">i<pos:position pos:line="43" pos:column="53"/></name></expr>]<pos:position pos:line="43" pos:column="54"/></index></name><operator pos:line="43" pos:column="54">.<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="55">val<pos:position pos:line="43" pos:column="58"/></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="44" pos:column="9">v_len<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <call><name pos:line="44" pos:column="17">strlen<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">val_text<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>

        <comment type="block" pos:line="46" pos:column="9">/* assemble result */</comment>
        <expr_stmt><expr><name pos:line="47" pos:column="9">kv_length<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <name pos:line="47" pos:column="21">k_len<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">+<pos:position pos:line="47" pos:column="28"/></operator> <name pos:line="47" pos:column="29">v_len<pos:position pos:line="47" pos:column="34"/></name> <operator pos:line="47" pos:column="35">+<pos:position pos:line="47" pos:column="36"/></operator> <sizeof pos:line="47" pos:column="37">sizeof<argument_list pos:line="47" pos:column="43">(<argument><expr><literal type="string" pos:line="47" pos:column="44">"=\n"<pos:position pos:line="47" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></sizeof></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="48" pos:column="9">key_val<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">apr_palloc<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name><name pos:line="48" pos:column="30">ctx<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">pool<pos:position pos:line="48" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="41">kv_length<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">next<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <name pos:line="49" pos:column="16">key_val<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="51" pos:column="9">memcpy<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><name pos:line="51" pos:column="16">next<pos:position pos:line="51" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="22">key_text<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="32">k_len<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">next<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">+=<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">k_len<pos:position pos:line="52" pos:column="22"/></name></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="53" pos:column="9">*<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">next<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">++<pos:position pos:line="53" pos:column="16"/></operator> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <literal type="char" pos:line="53" pos:column="19">'='<pos:position pos:line="53" pos:column="22"/></literal></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">memcpy<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">next<pos:position pos:line="54" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="22">val_text<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="32">v_len<pos:position pos:line="54" pos:column="37"/></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">next<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">+=<pos:position pos:line="55" pos:column="16"/></operator> <name pos:line="55" pos:column="17">v_len<pos:position pos:line="55" pos:column="22"/></name></expr>;<pos:position pos:line="55" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="56" pos:column="9">*<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">next<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">++<pos:position pos:line="56" pos:column="16"/></operator> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <literal type="char" pos:line="56" pos:column="19">'\n'<pos:position pos:line="56" pos:column="23"/></literal></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="57" pos:column="9">*<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">next<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <literal type="number" pos:line="57" pos:column="17">0<pos:position pos:line="57" pos:column="18"/></literal></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="59" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">bb<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="37">apr_bucket_pool_create<pos:position pos:line="59" pos:column="59"/></name><argument_list pos:line="59" pos:column="59">(<argument><expr><name pos:line="59" pos:column="60">key_val<pos:position pos:line="59" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="69">kv_length<pos:position pos:line="59" pos:column="78"/></name><operator pos:line="59" pos:column="78">-<pos:position pos:line="59" pos:column="79"/></operator><literal type="number" pos:line="59" pos:column="79">1<pos:position pos:line="59" pos:column="80"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="60" pos:column="33">ctx<pos:position pos:line="60" pos:column="36"/></name><operator pos:line="60" pos:column="36">-&gt;<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="38">pool<pos:position pos:line="60" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="44">f<pos:position pos:line="60" pos:column="45"/></name><operator pos:line="60" pos:column="45">-&gt;<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="47">c<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">-&gt;<pos:position pos:line="60" pos:column="53"/></operator><name pos:line="60" pos:column="50">bucket_alloc<pos:position pos:line="60" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="63" pos:column="5">ctx<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">-&gt;<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="10">flush_now<pos:position pos:line="63" pos:column="19"/></name></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <literal type="number" pos:line="63" pos:column="22">1<pos:position pos:line="63" pos:column="23"/></literal></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
    <return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">APR_SUCCESS<pos:position pos:line="64" pos:column="23"/></name></expr>;<pos:position pos:line="64" pos:column="24"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

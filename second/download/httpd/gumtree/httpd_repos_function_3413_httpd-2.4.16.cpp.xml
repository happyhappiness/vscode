<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3413_httpd-2.4.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_array_header_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">parse_errorlog_string<pos:position pos:line="1" pos:column="49"/></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name pos:line="1" pos:column="50">apr_pool_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">p<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                                 <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">s<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                                 <parameter><decl><type><specifier pos:line="3" pos:column="50">const<pos:position pos:line="3" pos:column="55"/></specifier> <name pos:line="3" pos:column="56">char<pos:position pos:line="3" pos:column="60"/></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier><modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">err<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
                                                 <parameter><decl><type><name pos:line="4" pos:column="50">int<pos:position pos:line="4" pos:column="53"/></name></type> <name pos:line="4" pos:column="54">is_main_fmt<pos:position pos:line="4" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="66"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_array_header_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">a<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">apr_array_make<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name pos:line="6" pos:column="44">p<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="47">30<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>,
                                           <argument><expr><sizeof pos:line="7" pos:column="44">sizeof<argument_list pos:line="7" pos:column="50">(<argument><expr><name pos:line="7" pos:column="51">ap_errorlog_format_item<pos:position pos:line="7" pos:column="74"/></name></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">res<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">seen_msg_fmt<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">s<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&amp;&amp;<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">s<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition> <block pos:line="11" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">ap_errorlog_format_item<pos:position pos:line="12" pos:column="32"/></name> <modifier pos:line="12" pos:column="33">*<pos:position pos:line="12" pos:column="34"/></modifier></type><name pos:line="12" pos:column="34">item<pos:position pos:line="12" pos:column="38"/></name> <init pos:line="12" pos:column="39">=
            <expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">ap_errorlog_format_item<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></operator><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator><call><name pos:line="13" pos:column="40">apr_array_push<pos:position pos:line="13" pos:column="54"/></name><argument_list pos:line="13" pos:column="54">(<argument><expr><name pos:line="13" pos:column="55">a<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="58"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">item<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="25">sizeof<argument_list pos:line="14" pos:column="31">(<argument><expr><operator pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">item<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">res<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">parse_errorlog_item<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">p<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">item<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="44">&amp;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="45">s<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">res<pos:position pos:line="16" pos:column="16"/></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17"> <block pos:line="16" pos:column="18">{
            <expr_stmt><expr><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">err<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">res<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">NULL<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">item<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">flags<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="27">AP_ERRORLOG_FLAG_MESSAGE<pos:position pos:line="20" pos:column="51"/></name></expr>)<pos:position pos:line="20" pos:column="52"/></condition><then pos:line="20" pos:column="52"> <block pos:line="20" pos:column="53">{
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><operator pos:line="21" pos:column="17">!<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">is_main_fmt<pos:position pos:line="21" pos:column="29"/></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30"> <block pos:line="21" pos:column="31">{
                <expr_stmt><expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">err<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="string" pos:line="22" pos:column="24">"%M cannot be used in once-per-request or "<pos:position pos:line="22" pos:column="67"/></literal>
                       <literal type="string" pos:line="23" pos:column="24">"once-per-connection formats"<pos:position pos:line="23" pos:column="53"/></literal></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
                <return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></return>
            }<pos:position pos:line="25" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="26" pos:column="13">seen_msg_fmt<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <literal type="number" pos:line="26" pos:column="28">1<pos:position pos:line="26" pos:column="29"/></literal></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">is_main_fmt<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">&amp;&amp;<pos:position pos:line="28" pos:column="35"/></operator> <name><name pos:line="28" pos:column="28">item<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">flags<pos:position pos:line="28" pos:column="39"/></name></name> <operator pos:line="28" pos:column="40">&amp;<pos:position pos:line="28" pos:column="45"/></operator> <name pos:line="28" pos:column="42">AP_ERRORLOG_FLAG_REQUIRED<pos:position pos:line="28" pos:column="67"/></name></expr>)<pos:position pos:line="28" pos:column="68"/></condition><then pos:line="28" pos:column="68"> <block pos:line="28" pos:column="69">{
            <expr_stmt><expr><operator pos:line="29" pos:column="13">*<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">err<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <literal type="string" pos:line="29" pos:column="20">"The '+' flag cannot be used in the main error log format"<pos:position pos:line="29" pos:column="78"/></literal></expr>;<pos:position pos:line="29" pos:column="79"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">NULL<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">is_main_fmt<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">&amp;&amp;<pos:position pos:line="32" pos:column="36"/></operator> <name><name pos:line="32" pos:column="29">item<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">min_loglevel<pos:position pos:line="32" pos:column="47"/></name></name></expr>)<pos:position pos:line="32" pos:column="48"/></condition><then pos:line="32" pos:column="48"> <block pos:line="32" pos:column="49">{
            <expr_stmt><expr><operator pos:line="33" pos:column="13">*<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">err<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <literal type="string" pos:line="33" pos:column="20">"The loglevel cannot be used as a condition in "<pos:position pos:line="33" pos:column="68"/></literal>
                   <literal type="string" pos:line="34" pos:column="20">"once-per-request or once-per-connection formats"<pos:position pos:line="34" pos:column="69"/></literal></expr>;<pos:position pos:line="34" pos:column="70"/></expr_stmt>
            <return pos:line="35" pos:column="13">return <expr><name pos:line="35" pos:column="20">NULL<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">item<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">min_loglevel<pos:position pos:line="37" pos:column="31"/></name></name> <operator pos:line="37" pos:column="32">&gt;<pos:position pos:line="37" pos:column="36"/></operator> <name pos:line="37" pos:column="34">APLOG_TRACE8<pos:position pos:line="37" pos:column="46"/></name></expr>)<pos:position pos:line="37" pos:column="47"/></condition><then pos:line="37" pos:column="47"> <block pos:line="37" pos:column="48">{
            <expr_stmt><expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">err<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <literal type="string" pos:line="38" pos:column="20">"The specified loglevel modifier is out of range"<pos:position pos:line="38" pos:column="69"/></literal></expr>;<pos:position pos:line="38" pos:column="70"/></expr_stmt>
            <return pos:line="39" pos:column="13">return <expr><name pos:line="39" pos:column="20">NULL<pos:position pos:line="39" pos:column="24"/></name></expr>;<pos:position pos:line="39" pos:column="25"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></while>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">is_main_fmt<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">&amp;&amp;<pos:position pos:line="43" pos:column="31"/></operator> <operator pos:line="43" pos:column="24">!<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">seen_msg_fmt<pos:position pos:line="43" pos:column="37"/></name></expr>)<pos:position pos:line="43" pos:column="38"/></condition><then pos:line="43" pos:column="38"> <block pos:line="43" pos:column="39">{
        <expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">err<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="string" pos:line="44" pos:column="16">"main ErrorLogFormat must contain message format string '%M'"<pos:position pos:line="44" pos:column="77"/></literal></expr>;<pos:position pos:line="44" pos:column="78"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">NULL<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">a<pos:position pos:line="48" pos:column="13"/></name></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

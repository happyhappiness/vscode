<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1245_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_save_store<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">ap_filter_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">f<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_bucket_brigade<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">in<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">cache_server_conf<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">conf<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">cache_request_rec<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">cache<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name pos:line="4" pos:column="14">APR_SUCCESS<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* pass the brigade in into the cache provider, which is then
     * expected to move cached buckets to the out brigade, for us
     * to pass up the filter stack. repeat until in is empty, or
     * we fail.
     */</comment>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name pos:line="12" pos:column="12">APR_SUCCESS<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">==<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="27">rv<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">&amp;&amp;<pos:position pos:line="12" pos:column="40"/></operator> <operator pos:line="12" pos:column="33">!<pos:position pos:line="12" pos:column="34"/></operator><call><name pos:line="12" pos:column="34">APR_BRIGADE_EMPTY<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><name pos:line="12" pos:column="52">in<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="56"/></condition> <block pos:line="12" pos:column="57">{

        <expr_stmt><expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name><name pos:line="14" pos:column="14">cache<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">provider<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">store_body<pos:position pos:line="14" pos:column="41"/></name></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name><name pos:line="14" pos:column="42">cache<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">handle<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="57">f<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">-&gt;<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="60">r<pos:position pos:line="14" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="63">in<pos:position pos:line="14" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="67">cache<pos:position pos:line="14" pos:column="72"/></name><operator pos:line="14" pos:column="72">-&gt;<pos:position pos:line="14" pos:column="77"/></operator><name pos:line="14" pos:column="74">out<pos:position pos:line="14" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="79"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">rv<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">!=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">APR_SUCCESS<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">ap_log_rerror<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">APLOG_MARK<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="39">APLOG_DEBUG<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">rv<pos:position pos:line="16" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="56">f<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">-&gt;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="59">r<pos:position pos:line="16" pos:column="60"/></name></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="62">APLOGNO<pos:position pos:line="16" pos:column="69"/></name><argument_list pos:line="16" pos:column="69">(<argument><expr><literal type="number" pos:line="16" pos:column="70">00765<pos:position pos:line="16" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call>
                    <literal type="string" pos:line="17" pos:column="21">"cache: Cache provider's store_body failed for URI %s"<pos:position pos:line="17" pos:column="75"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="77">f<pos:position pos:line="17" pos:column="78"/></name><operator pos:line="17" pos:column="78">-&gt;<pos:position pos:line="17" pos:column="83"/></operator><name pos:line="17" pos:column="80">r<pos:position pos:line="17" pos:column="81"/></name><operator pos:line="17" pos:column="81">-&gt;<pos:position pos:line="17" pos:column="86"/></operator><name pos:line="17" pos:column="83">uri<pos:position pos:line="17" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">ap_remove_output_filter<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">f<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>

            <comment type="block" pos:line="20" pos:column="13">/* give someone else the chance to cache the file */</comment>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">cache_remove_lock<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">conf<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">cache<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="44">f<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">r<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">NULL<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>

            <comment type="block" pos:line="23" pos:column="13">/* give up trying to cache, just step out the way */</comment>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">APR_BRIGADE_PREPEND<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">in<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="37">cache<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">out<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
            <return pos:line="25" pos:column="13">return <expr><call><name pos:line="25" pos:column="20">ap_pass_brigade<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name><name pos:line="25" pos:column="36">f<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">next<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">in<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></return>

        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="29" pos:column="9">/* does the out brigade contain eos? if so, we're done, commit! */</comment>
        <for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">e<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <call><name pos:line="30" pos:column="18">APR_BRIGADE_FIRST<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name><name pos:line="30" pos:column="36">cache<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">-&gt;<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="43">out<pos:position pos:line="30" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></init>
             <condition><expr><name pos:line="31" pos:column="14">e<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">!=<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">APR_BRIGADE_SENTINEL<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><name><name pos:line="31" pos:column="40">cache<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">out<pos:position pos:line="31" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></condition>
             <incr><expr><name pos:line="32" pos:column="14">e<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">APR_BUCKET_NEXT<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">e<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr></incr>)<pos:position pos:line="32" pos:column="37"/></control>
        <block pos:line="33" pos:column="9">{
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><call><name pos:line="34" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">e<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38"> <block pos:line="34" pos:column="39">{
                <expr_stmt><expr><name pos:line="35" pos:column="17">rv<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <call><name><name pos:line="35" pos:column="22">cache<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">provider<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">commit_entity<pos:position pos:line="35" pos:column="52"/></name></name><argument_list pos:line="35" pos:column="52">(<argument><expr><name><name pos:line="35" pos:column="53">cache<pos:position pos:line="35" pos:column="58"/></name><operator pos:line="35" pos:column="58">-&gt;<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="60">handle<pos:position pos:line="35" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="68">f<pos:position pos:line="35" pos:column="69"/></name><operator pos:line="35" pos:column="69">-&gt;<pos:position pos:line="35" pos:column="74"/></operator><name pos:line="35" pos:column="71">r<pos:position pos:line="35" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>
                <break pos:line="36" pos:column="17">break;<pos:position pos:line="36" pos:column="23"/></break>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></for>

        <comment type="block" pos:line="40" pos:column="9">/* conditionally remove the lock as soon as we see the eos bucket */</comment>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">cache_remove_lock<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">conf<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="33">cache<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="40">f<pos:position pos:line="41" pos:column="41"/></name><operator pos:line="41" pos:column="41">-&gt;<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="43">r<pos:position pos:line="41" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="46">cache<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">-&gt;<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="53">out<pos:position pos:line="41" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">APR_BRIGADE_EMPTY<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name><name pos:line="43" pos:column="31">cache<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">-&gt;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="38">out<pos:position pos:line="43" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43"> <block pos:line="43" pos:column="44">{
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><call><name pos:line="44" pos:column="17">APR_BRIGADE_EMPTY<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">in<pos:position pos:line="44" pos:column="37"/></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="39"/></condition><then pos:line="44" pos:column="39"> <block pos:line="44" pos:column="40">{
                <comment type="block" pos:line="45" pos:column="17">/* cache provider wants more data before passing the brigade
                 * upstream, oblige the provider by leaving to fetch more.
                 */</comment>
                <break pos:line="48" pos:column="17">break;<pos:position pos:line="48" pos:column="23"/></break>
            }<pos:position pos:line="49" pos:column="14"/></block></then>
            <else pos:line="50" pos:column="13">else <block pos:line="50" pos:column="18">{
                <comment type="block" pos:line="51" pos:column="17">/* oops, no data out, but not all data read in either, be
                 * safe and stand down to prevent a spin.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">ap_log_rerror<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name pos:line="54" pos:column="31">APLOG_MARK<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">APLOG_WARNING<pos:position pos:line="54" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="58">rv<pos:position pos:line="54" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="62">f<pos:position pos:line="54" pos:column="63"/></name><operator pos:line="54" pos:column="63">-&gt;<pos:position pos:line="54" pos:column="68"/></operator><name pos:line="54" pos:column="65">r<pos:position pos:line="54" pos:column="66"/></name></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="68">APLOGNO<pos:position pos:line="54" pos:column="75"/></name><argument_list pos:line="54" pos:column="75">(<argument><expr><literal type="number" pos:line="54" pos:column="76">00766<pos:position pos:line="54" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="82"/></argument_list></call>
                        <literal type="string" pos:line="55" pos:column="25">"cache: Cache provider's store_body returned an "<pos:position pos:line="55" pos:column="74"/></literal>
                        <literal type="string" pos:line="56" pos:column="25">"empty brigade, but didn't consume all of the "<pos:position pos:line="56" pos:column="72"/></literal>
                        <literal type="string" pos:line="57" pos:column="25">"input brigade, standing down to prevent a spin"<pos:position pos:line="57" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">ap_remove_output_filter<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><name pos:line="58" pos:column="41">f<pos:position pos:line="58" pos:column="42"/></name></expr></argument>)<pos:position pos:line="58" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="44"/></expr_stmt>

                <comment type="block" pos:line="60" pos:column="17">/* give someone else the chance to cache the file */</comment>
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">cache_remove_lock<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><name pos:line="61" pos:column="35">conf<pos:position pos:line="61" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="41">cache<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="48">f<pos:position pos:line="61" pos:column="49"/></name><operator pos:line="61" pos:column="49">-&gt;<pos:position pos:line="61" pos:column="54"/></operator><name pos:line="61" pos:column="51">r<pos:position pos:line="61" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">NULL<pos:position pos:line="61" pos:column="58"/></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="60"/></expr_stmt>

                <return pos:line="63" pos:column="17">return <expr><call><name pos:line="63" pos:column="24">ap_pass_brigade<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><name><name pos:line="63" pos:column="40">f<pos:position pos:line="63" pos:column="41"/></name><operator pos:line="63" pos:column="41">-&gt;<pos:position pos:line="63" pos:column="46"/></operator><name pos:line="63" pos:column="43">next<pos:position pos:line="63" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="49">in<pos:position pos:line="63" pos:column="51"/></name></expr></argument>)<pos:position pos:line="63" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="53"/></return>
            }<pos:position pos:line="64" pos:column="14"/></block></else></if>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="67" pos:column="9">rv<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <call><name pos:line="67" pos:column="14">ap_pass_brigade<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><name><name pos:line="67" pos:column="30">f<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">next<pos:position pos:line="67" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="39">cache<pos:position pos:line="67" pos:column="44"/></name><operator pos:line="67" pos:column="44">-&gt;<pos:position pos:line="67" pos:column="49"/></operator><name pos:line="67" pos:column="46">out<pos:position pos:line="67" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></while>

    <return pos:line="70" pos:column="5">return <expr><name pos:line="70" pos:column="12">rv<pos:position pos:line="70" pos:column="14"/></name></expr>;<pos:position pos:line="70" pos:column="15"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

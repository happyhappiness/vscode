<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5805.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_release_and_join<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">h2_mplx<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">m<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_thread_cond_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">wait<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">workers_unregister<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">m<pos:position pos:line="4" pos:column="25"/></name></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">status<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">apr_thread_mutex_lock<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><name><name pos:line="6" pos:column="36">m<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">lock<pos:position pos:line="6" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="45"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">APR_SUCCESS<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">status<pos:position pos:line="7" pos:column="30"/></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31"> <block pos:line="7" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">attempts<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
        
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">release<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">m<pos:position pos:line="10" pos:column="18"/></name></expr></argument>)<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
        <while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><call><name pos:line="11" pos:column="16">apr_atomic_read32<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><operator pos:line="11" pos:column="34">&amp;<pos:position pos:line="11" pos:column="39"/></operator><name><name pos:line="11" pos:column="35">m<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">refs<pos:position pos:line="11" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call> <operator pos:line="11" pos:column="44">&gt;<pos:position pos:line="11" pos:column="48"/></operator> <literal type="number" pos:line="11" pos:column="46">0<pos:position pos:line="11" pos:column="47"/></literal></expr>)<pos:position pos:line="11" pos:column="48"/></condition> <block pos:line="11" pos:column="49">{
            <expr_stmt><expr><name><name pos:line="12" pos:column="13">m<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">join_wait<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">wait<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">ap_log_cerror<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">APLOG_MARK<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="39">(<pos:position pos:line="13" pos:column="40"/></operator><ternary><condition><expr><name pos:line="13" pos:column="40">attempts<pos:position pos:line="13" pos:column="48"/></name></expr>?<pos:position pos:line="13" pos:column="49"/></condition><then pos:line="13" pos:column="49"> <expr><name pos:line="13" pos:column="50">APLOG_INFO<pos:position pos:line="13" pos:column="60"/></name></expr> <pos:position pos:line="13" pos:column="61"/></then><else pos:line="13" pos:column="61">: <expr><name pos:line="13" pos:column="63">APLOG_DEBUG<pos:position pos:line="13" pos:column="74"/></name></expr></else></ternary><operator pos:line="13" pos:column="74">)<pos:position pos:line="13" pos:column="75"/></operator></expr></argument>, 
                          <argument><expr><literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="30">m<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">c<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="15" pos:column="27">"h2_mplx(%ld): release_join, refs=%d, waiting..."<pos:position pos:line="15" pos:column="76"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="16" pos:column="27">m<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">id<pos:position pos:line="16" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="34">m<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">refs<pos:position pos:line="16" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">apr_thread_cond_timedwait<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">wait<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="45">m<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">lock<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="54">apr_time_from_sec<pos:position pos:line="17" pos:column="71"/></name><argument_list pos:line="17" pos:column="71">(<argument><expr><literal type="number" pos:line="17" pos:column="72">10<pos:position pos:line="17" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><operator pos:line="18" pos:column="17">++<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">attempts<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&gt;=<pos:position pos:line="18" pos:column="33"/></operator> <literal type="number" pos:line="18" pos:column="31">6<pos:position pos:line="18" pos:column="32"/></literal></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <block pos:line="18" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="19" pos:column="17">ap_log_cerror<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">APLOG_MARK<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">APLOG_WARNING<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="58">0<pos:position pos:line="19" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="61">m<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">-&gt;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="64">c<pos:position pos:line="19" pos:column="65"/></name></name></expr></argument>,
                              <argument><expr><call><name pos:line="20" pos:column="31">APLOGNO<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><literal type="number" pos:line="20" pos:column="39">02952<pos:position pos:line="20" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call> 
                              <literal type="string" pos:line="21" pos:column="31">"h2_mplx(%ld): join attempts exhausted, refs=%d"<pos:position pos:line="21" pos:column="79"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="22" pos:column="31">m<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">id<pos:position pos:line="22" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="38">m<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">refs<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
                <break pos:line="23" pos:column="17">break;<pos:position pos:line="23" pos:column="23"/></break>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
        }<pos:position pos:line="25" pos:column="10"/></block></while>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">m<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">join_wait<pos:position pos:line="26" pos:column="25"/></name></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26"> <block pos:line="26" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">ap_log_cerror<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">APLOG_MARK<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">APLOG_DEBUG<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="52">0<pos:position pos:line="27" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="55">m<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">-&gt;<pos:position pos:line="27" pos:column="61"/></operator><name pos:line="27" pos:column="58">c<pos:position pos:line="27" pos:column="59"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="28" pos:column="27">"h2_mplx(%ld): release_join -&gt; destroy"<pos:position pos:line="28" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="68">m<pos:position pos:line="28" pos:column="69"/></name><operator pos:line="28" pos:column="69">-&gt;<pos:position pos:line="28" pos:column="74"/></operator><name pos:line="28" pos:column="71">id<pos:position pos:line="28" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">m<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">join_wait<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">m<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">lock<pos:position pos:line="31" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">h2_mplx_destroy<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">m<pos:position pos:line="32" pos:column="26"/></name></expr></argument>)<pos:position pos:line="32" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">status<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

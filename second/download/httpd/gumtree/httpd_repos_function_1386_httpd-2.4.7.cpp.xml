<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1386_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">read_array<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">apr_array_header_t<pos:position pos:line="1" pos:column="66"/></name><modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type> <name pos:line="1" pos:column="68">arr<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">apr_file_t<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">file<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">w<pos:position pos:line="4" pos:column="11"/></name><index pos:line="4" pos:column="11">[<expr><name pos:line="4" pos:column="12">MAX_STRING_LEN<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><literal type="number" pos:line="8" pos:column="12">1<pos:position pos:line="8" pos:column="13"/></literal></expr>)<pos:position pos:line="8" pos:column="14"/></condition> <block pos:line="8" pos:column="15">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">rv<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">apr_file_gets<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">w<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">MAX_STRING_LEN<pos:position pos:line="9" pos:column="45"/></name> <operator pos:line="9" pos:column="46">-<pos:position pos:line="9" pos:column="47"/></operator> <literal type="number" pos:line="9" pos:column="48">1<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">file<pos:position pos:line="9" pos:column="55"/></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">rv<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">!=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">APR_SUCCESS<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">ap_log_rerror<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">APLOG_MARK<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">APLOG_ERR<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="50">0<pos:position pos:line="11" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">r<pos:position pos:line="11" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="56">APLOGNO<pos:position pos:line="11" pos:column="63"/></name><argument_list pos:line="11" pos:column="63">(<argument><expr><literal type="number" pos:line="11" pos:column="64">00716<pos:position pos:line="11" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call>
                          <literal type="string" pos:line="12" pos:column="27">"Premature end of vary array."<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
            <return pos:line="13" pos:column="13">return <expr><name pos:line="13" pos:column="20">rv<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="16" pos:column="9">p<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">strlen<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">w<pos:position pos:line="16" pos:column="21"/></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">p<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">&gt;<pos:position pos:line="17" pos:column="19"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal> <operator pos:line="17" pos:column="19">&amp;&amp;<pos:position pos:line="17" pos:column="29"/></operator> <name><name pos:line="17" pos:column="22">w<pos:position pos:line="17" pos:column="23"/></name><index pos:line="17" pos:column="23">[<expr><name pos:line="17" pos:column="24">p<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">-<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="28">1<pos:position pos:line="17" pos:column="29"/></literal></expr>]<pos:position pos:line="17" pos:column="30"/></index></name> <operator pos:line="17" pos:column="31">==<pos:position pos:line="17" pos:column="33"/></operator> <literal type="char" pos:line="17" pos:column="34">'\n'<pos:position pos:line="17" pos:column="38"/></literal></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">p<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&gt;<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="21">1<pos:position pos:line="18" pos:column="22"/></literal> <operator pos:line="18" pos:column="23">&amp;&amp;<pos:position pos:line="18" pos:column="33"/></operator> <name><name pos:line="18" pos:column="26">w<pos:position pos:line="18" pos:column="27"/></name><index pos:line="18" pos:column="27">[<expr><name pos:line="18" pos:column="28">p<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">-<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">2<pos:position pos:line="18" pos:column="33"/></literal></expr>]<pos:position pos:line="18" pos:column="34"/></index></name> <operator pos:line="18" pos:column="35">==<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">CR<pos:position pos:line="18" pos:column="40"/></name></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <block pos:line="18" pos:column="42">{
                <expr_stmt><expr><name><name pos:line="19" pos:column="17">w<pos:position pos:line="19" pos:column="18"/></name><index pos:line="19" pos:column="18">[<expr><name pos:line="19" pos:column="19">p<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">-<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">2<pos:position pos:line="19" pos:column="24"/></literal></expr>]<pos:position pos:line="19" pos:column="25"/></index></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <literal type="char" pos:line="19" pos:column="28">'\0'<pos:position pos:line="19" pos:column="32"/></literal></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="20" pos:column="14"/></block></then>
            <else pos:line="21" pos:column="13">else <block pos:line="21" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="22" pos:column="17">w<pos:position pos:line="22" pos:column="18"/></name><index pos:line="22" pos:column="18">[<expr><name pos:line="22" pos:column="19">p<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">-<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="23">1<pos:position pos:line="22" pos:column="24"/></literal></expr>]<pos:position pos:line="22" pos:column="25"/></index></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="char" pos:line="22" pos:column="28">'\0'<pos:position pos:line="22" pos:column="32"/></literal></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></else></if>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="26" pos:column="9">/* If we've finished reading the array, break out of the loop. */</comment>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">w<pos:position pos:line="27" pos:column="14"/></name><index pos:line="27" pos:column="14">[<expr><literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal></expr>]<pos:position pos:line="27" pos:column="17"/></index></name> <operator pos:line="27" pos:column="18">==<pos:position pos:line="27" pos:column="20"/></operator> <literal type="char" pos:line="27" pos:column="21">'\0'<pos:position pos:line="27" pos:column="25"/></literal></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26"> <block pos:line="27" pos:column="27">{
            <break pos:line="28" pos:column="13">break;<pos:position pos:line="28" pos:column="19"/></break>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

       <expr_stmt><expr><operator pos:line="31" pos:column="8">*<pos:position pos:line="31" pos:column="9"/></operator><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><specifier pos:line="31" pos:column="11">const<pos:position pos:line="31" pos:column="16"/></specifier> <name pos:line="31" pos:column="17">char<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></operator><operator pos:line="31" pos:column="23">*<pos:position pos:line="31" pos:column="24"/></operator><operator pos:line="31" pos:column="24">)<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">apr_array_push<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name pos:line="31" pos:column="41">arr<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call><operator pos:line="31" pos:column="45">)<pos:position pos:line="31" pos:column="46"/></operator> <operator pos:line="31" pos:column="47">=<pos:position pos:line="31" pos:column="48"/></operator> <call><name pos:line="31" pos:column="49">apr_pstrdup<pos:position pos:line="31" pos:column="60"/></name><argument_list pos:line="31" pos:column="60">(<argument><expr><name><name pos:line="31" pos:column="61">r<pos:position pos:line="31" pos:column="62"/></name><operator pos:line="31" pos:column="62">-&gt;<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="64">pool<pos:position pos:line="31" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="70">w<pos:position pos:line="31" pos:column="71"/></name></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></while>

    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">APR_SUCCESS<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

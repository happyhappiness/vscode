<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4062.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fsmagic<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">request_rec<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">r<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">fn<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <switch pos:line="3" pos:column="5">switch <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">r<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">-&gt;<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="16">finfo<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">.<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="22">filetype<pos:position pos:line="3" pos:column="30"/></name></name></expr>)<pos:position pos:line="3" pos:column="31"/></condition> <block pos:line="3" pos:column="32">{
    <case pos:line="4" pos:column="5">case <expr><name pos:line="4" pos:column="10">APR_DIR<pos:position pos:line="4" pos:column="17"/></name></expr>:<pos:position pos:line="4" pos:column="18"/></case>
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">magic_rsl_puts<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">r<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">DIR_MAGIC_TYPE<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="43"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">DONE<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return>
    <case pos:line="7" pos:column="5">case <expr><name pos:line="7" pos:column="10">APR_CHR<pos:position pos:line="7" pos:column="17"/></name></expr>:<pos:position pos:line="7" pos:column="18"/></case>
        <comment type="block" pos:line="8" pos:column="9">/*
         * (void) magic_rsl_printf(r,"character special (%d/%d)",
         * major(sb-&gt;st_rdev), minor(sb-&gt;st_rdev));
         */</comment>
        <expr_stmt><expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">void<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">magic_rsl_puts<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">r<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">MIME_BINARY_UNKNOWN<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">DONE<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
    <case pos:line="14" pos:column="5">case <expr><name pos:line="14" pos:column="10">APR_BLK<pos:position pos:line="14" pos:column="17"/></name></expr>:<pos:position pos:line="14" pos:column="18"/></case>
        <comment type="block" pos:line="15" pos:column="9">/*
         * (void) magic_rsl_printf(r,"block special (%d/%d)",
         * major(sb-&gt;st_rdev), minor(sb-&gt;st_rdev));
         */</comment>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">void<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">)<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">magic_rsl_puts<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">r<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">MIME_BINARY_UNKNOWN<pos:position pos:line="19" pos:column="53"/></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">DONE<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></return>
        <comment type="block" pos:line="21" pos:column="9">/* TODO add code to handle V7 MUX and Blit MUX files */</comment>
    <case pos:line="22" pos:column="5">case <expr><name pos:line="22" pos:column="10">APR_PIPE<pos:position pos:line="22" pos:column="18"/></name></expr>:<pos:position pos:line="22" pos:column="19"/></case>
        <comment type="block" pos:line="23" pos:column="9">/*
         * magic_rsl_puts(r,"fifo (named pipe)");
         */</comment>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">void<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">)<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">magic_rsl_puts<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">r<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">MIME_BINARY_UNKNOWN<pos:position pos:line="26" pos:column="53"/></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">DONE<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    <case pos:line="28" pos:column="5">case <expr><name pos:line="28" pos:column="10">APR_LNK<pos:position pos:line="28" pos:column="17"/></name></expr>:<pos:position pos:line="28" pos:column="18"/></case>
        <comment type="block" pos:line="29" pos:column="9">/* We used stat(), the only possible reason for this is that the
         * symlink is broken.
         */</comment>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">ap_log_rerror<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">APLOG_MARK<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">APLOG_ERR<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="46">0<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">r<pos:position pos:line="32" pos:column="50"/></name></expr></argument>,
                    <argument><expr><name pos:line="33" pos:column="21">MODNAME<pos:position pos:line="33" pos:column="28"/></name> <literal type="string" pos:line="33" pos:column="29">": broken symlink (%s)"<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">fn<pos:position pos:line="33" pos:column="56"/></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="34" pos:column="42"/></name></expr>;<pos:position pos:line="34" pos:column="43"/></return>
    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">APR_SOCK<pos:position pos:line="35" pos:column="18"/></name></expr>:<pos:position pos:line="35" pos:column="19"/></case>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">magic_rsl_puts<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">r<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="27">MIME_BINARY_UNKNOWN<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">DONE<pos:position pos:line="37" pos:column="20"/></name></expr>;<pos:position pos:line="37" pos:column="21"/></return>
    <case pos:line="38" pos:column="5">case <expr><name pos:line="38" pos:column="10">APR_REG<pos:position pos:line="38" pos:column="17"/></name></expr>:<pos:position pos:line="38" pos:column="18"/></case>
        <break pos:line="39" pos:column="9">break;<pos:position pos:line="39" pos:column="15"/></break>
    <default pos:line="40" pos:column="5">default:<pos:position pos:line="40" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ap_log_rerror<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">APLOG_MARK<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">APLOG_ERR<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="46">0<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">r<pos:position pos:line="41" pos:column="50"/></name></expr></argument>,
                      <argument><expr><name pos:line="42" pos:column="23">MODNAME<pos:position pos:line="42" pos:column="30"/></name> <literal type="string" pos:line="42" pos:column="31">": invalid file type %d."<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="58">r<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">-&gt;<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="61">finfo<pos:position pos:line="42" pos:column="66"/></name><operator pos:line="42" pos:column="66">.<pos:position pos:line="42" pos:column="67"/></operator><name pos:line="42" pos:column="67">filetype<pos:position pos:line="42" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="77"/></expr_stmt>
        <return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="43" pos:column="42"/></name></expr>;<pos:position pos:line="43" pos:column="43"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></switch>

    <comment type="block" pos:line="46" pos:column="5">/*
     * regular file, check next possibility
     */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name><name pos:line="49" pos:column="9">r<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">finfo<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">.<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">size<pos:position pos:line="49" pos:column="22"/></name></name> <operator pos:line="49" pos:column="23">==<pos:position pos:line="49" pos:column="25"/></operator> <literal type="number" pos:line="49" pos:column="26">0<pos:position pos:line="49" pos:column="27"/></literal></expr>)<pos:position pos:line="49" pos:column="28"/></condition><then pos:line="49" pos:column="28"> <block pos:line="49" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">magic_rsl_puts<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">r<pos:position pos:line="50" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="27">MIME_TEXT_UNKNOWN<pos:position pos:line="50" pos:column="44"/></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>
        <return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">DONE<pos:position pos:line="51" pos:column="20"/></name></expr>;<pos:position pos:line="51" pos:column="21"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">OK<pos:position pos:line="53" pos:column="14"/></name></expr>;<pos:position pos:line="53" pos:column="15"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

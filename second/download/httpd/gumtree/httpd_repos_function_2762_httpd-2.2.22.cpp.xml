<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2762_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dbd_freetds_get_row<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">pool<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">apr_dbd_results_t<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">res<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">apr_dbd_row_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier><modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">rowp<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">rownum<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">RETCODE<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">rv<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_dbd_row_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">row<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">rowp<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">sequential<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><ternary><condition><expr><operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator><operator pos:line="6" pos:column="23">(<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">rownum<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">&gt;=<pos:position pos:line="6" pos:column="36"/></operator> <literal type="number" pos:line="6" pos:column="34">0<pos:position pos:line="6" pos:column="35"/></literal><operator pos:line="6" pos:column="35">)<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="37">&amp;&amp;<pos:position pos:line="6" pos:column="47"/></operator> <name><name pos:line="6" pos:column="40">res<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">-&gt;<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="45">random<pos:position pos:line="6" pos:column="51"/></name></name><operator pos:line="6" pos:column="51">)<pos:position pos:line="6" pos:column="52"/></operator></expr> ?<pos:position pos:line="6" pos:column="54"/></condition><then pos:line="6" pos:column="54"> <expr><literal type="number" pos:line="6" pos:column="55">0<pos:position pos:line="6" pos:column="56"/></literal></expr> <pos:position pos:line="6" pos:column="57"/></then><else pos:line="6" pos:column="57">: <expr><literal type="number" pos:line="6" pos:column="59">1<pos:position pos:line="6" pos:column="60"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">row<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">==<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">NULL<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">row<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">apr_palloc<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">pool<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="32">sizeof<argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">apr_dbd_row_t<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">rowp<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">row<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">row<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">res<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">res<pos:position pos:line="11" pos:column="23"/></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="13" pos:column="5">/*
    else {
        if ( sequential ) {
            ++row-&gt;n;
        }
        else {
            row-&gt;n = rownum;
        }
    }
    */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">sequential<pos:position pos:line="23" pos:column="19"/></name></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">rv<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">dbnextrow<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name><name pos:line="24" pos:column="24">res<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">proc<pos:position pos:line="24" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">rv<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">rownum<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">&gt;=<pos:position pos:line="27" pos:column="27"/></operator> <literal type="number" pos:line="27" pos:column="25">0<pos:position pos:line="27" pos:column="26"/></literal><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator></expr> ?<pos:position pos:line="27" pos:column="29"/></condition><then pos:line="27" pos:column="29"> <expr><call><name pos:line="27" pos:column="30">dbgetrow<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name><name pos:line="27" pos:column="39">res<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">proc<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">rownum<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="27" pos:column="58"/></then><else pos:line="27" pos:column="58">: <expr><name pos:line="27" pos:column="60">NO_MORE_ROWS<pos:position pos:line="27" pos:column="72"/></name></expr></else></ternary></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>
    <switch pos:line="29" pos:column="5">switch <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">rv<pos:position pos:line="29" pos:column="15"/></name></expr>)<pos:position pos:line="29" pos:column="16"/></condition> <block pos:line="29" pos:column="17">{
    <case pos:line="30" pos:column="5">case <expr><name pos:line="30" pos:column="10">SUCCEED<pos:position pos:line="30" pos:column="17"/></name></expr>:<pos:position pos:line="30" pos:column="18"/></case> <return pos:line="30" pos:column="19">return <expr><literal type="number" pos:line="30" pos:column="26">0<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></return>
    <case pos:line="31" pos:column="5">case <expr><name pos:line="31" pos:column="10">REG_ROW<pos:position pos:line="31" pos:column="17"/></name></expr>:<pos:position pos:line="31" pos:column="18"/></case> <return pos:line="31" pos:column="19">return <expr><literal type="number" pos:line="31" pos:column="26">0<pos:position pos:line="31" pos:column="27"/></literal></expr>;<pos:position pos:line="31" pos:column="28"/></return>
    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">NO_MORE_ROWS<pos:position pos:line="32" pos:column="22"/></name></expr>:<pos:position pos:line="32" pos:column="23"/></case>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">apr_pool_cleanup_run<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">pool<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="36">res<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">proc<pos:position pos:line="33" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">clear_result<pos:position pos:line="33" pos:column="59"/></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">rowp<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">NULL<pos:position pos:line="34" pos:column="21"/></name></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">-<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">1<pos:position pos:line="35" pos:column="18"/></literal></expr>;<pos:position pos:line="35" pos:column="19"/></return>
    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">FAIL<pos:position pos:line="36" pos:column="14"/></name></expr>:<pos:position pos:line="36" pos:column="15"/></case> <return pos:line="36" pos:column="16">return <expr><literal type="number" pos:line="36" pos:column="23">1<pos:position pos:line="36" pos:column="24"/></literal></expr>;<pos:position pos:line="36" pos:column="25"/></return>
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">BUF_FULL<pos:position pos:line="37" pos:column="18"/></name></expr>:<pos:position pos:line="37" pos:column="19"/></case> <return pos:line="37" pos:column="20">return <expr><literal type="number" pos:line="37" pos:column="27">2<pos:position pos:line="37" pos:column="28"/></literal></expr>;<pos:position pos:line="37" pos:column="29"/></return> <comment type="block" pos:line="37" pos:column="30">/* FIXME */</comment>
    <default pos:line="38" pos:column="5">default:<pos:position pos:line="38" pos:column="13"/></default> <return pos:line="38" pos:column="14">return <expr><literal type="number" pos:line="38" pos:column="21">3<pos:position pos:line="38" pos:column="22"/></literal></expr>;<pos:position pos:line="38" pos:column="23"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></switch>

    <return pos:line="41" pos:column="5">return <expr><literal type="number" pos:line="41" pos:column="12">0<pos:position pos:line="41" pos:column="13"/></literal></expr>;<pos:position pos:line="41" pos:column="14"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

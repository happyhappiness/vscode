<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3425_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">DWORD<pos:position pos:line="1" pos:column="13"/></name> <name pos:line="1" pos:column="14">WINAPI<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">service_stderr_thread<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">LPVOID<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">hPipe<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">HANDLE<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">hPipeRead<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">HANDLE<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">)<pos:position pos:line="3" pos:column="32"/></operator> <name pos:line="3" pos:column="33">hPipe<pos:position pos:line="3" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HANDLE<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">hEventSource<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">errbuf<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><literal type="number" pos:line="5" pos:column="17">256<pos:position pos:line="5" pos:column="20"/></literal></expr>]<pos:position pos:line="5" pos:column="21"/></index></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">errmsg<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">errbuf<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name><name pos:line="7" pos:column="17">errarg<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><literal type="number" pos:line="7" pos:column="24">9<pos:position pos:line="7" pos:column="25"/></literal></expr>]<pos:position pos:line="7" pos:column="26"/></index></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">DWORD<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">errres<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_regkey_t<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">regkey<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_pool_t<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">p<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">apr_pool_create_ex<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">p<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">NULL<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">NULL<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">errarg<pos:position pos:line="15" pos:column="11"/></name><index pos:line="15" pos:column="11">[<expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal></expr>]<pos:position pos:line="15" pos:column="14"/></index></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <literal type="string" pos:line="15" pos:column="17">"The Apache service named"<pos:position pos:line="15" pos:column="43"/></literal></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">errarg<pos:position pos:line="16" pos:column="11"/></name><index pos:line="16" pos:column="11">[<expr><literal type="number" pos:line="16" pos:column="12">1<pos:position pos:line="16" pos:column="13"/></literal></expr>]<pos:position pos:line="16" pos:column="14"/></index></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">display_name<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">errarg<pos:position pos:line="17" pos:column="11"/></name><index pos:line="17" pos:column="11">[<expr><literal type="number" pos:line="17" pos:column="12">2<pos:position pos:line="17" pos:column="13"/></literal></expr>]<pos:position pos:line="17" pos:column="14"/></index></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="string" pos:line="17" pos:column="17">"reported the following error:\r\n&gt;&gt;&gt;"<pos:position pos:line="17" pos:column="64"/></literal></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">errarg<pos:position pos:line="18" pos:column="11"/></name><index pos:line="18" pos:column="11">[<expr><literal type="number" pos:line="18" pos:column="12">3<pos:position pos:line="18" pos:column="13"/></literal></expr>]<pos:position pos:line="18" pos:column="14"/></index></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">errbuf<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">errarg<pos:position pos:line="19" pos:column="11"/></name><index pos:line="19" pos:column="11">[<expr><literal type="number" pos:line="19" pos:column="12">4<pos:position pos:line="19" pos:column="13"/></literal></expr>]<pos:position pos:line="19" pos:column="14"/></index></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">NULL<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">errarg<pos:position pos:line="20" pos:column="11"/></name><index pos:line="20" pos:column="11">[<expr><literal type="number" pos:line="20" pos:column="12">5<pos:position pos:line="20" pos:column="13"/></literal></expr>]<pos:position pos:line="20" pos:column="14"/></index></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">NULL<pos:position pos:line="20" pos:column="21"/></name></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">errarg<pos:position pos:line="21" pos:column="11"/></name><index pos:line="21" pos:column="11">[<expr><literal type="number" pos:line="21" pos:column="12">6<pos:position pos:line="21" pos:column="13"/></literal></expr>]<pos:position pos:line="21" pos:column="14"/></index></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">NULL<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">errarg<pos:position pos:line="22" pos:column="11"/></name><index pos:line="22" pos:column="11">[<expr><literal type="number" pos:line="22" pos:column="12">7<pos:position pos:line="22" pos:column="13"/></literal></expr>]<pos:position pos:line="22" pos:column="14"/></index></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">NULL<pos:position pos:line="22" pos:column="21"/></name></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">errarg<pos:position pos:line="23" pos:column="11"/></name><index pos:line="23" pos:column="11">[<expr><literal type="number" pos:line="23" pos:column="12">8<pos:position pos:line="23" pos:column="13"/></literal></expr>]<pos:position pos:line="23" pos:column="14"/></index></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* What are we going to do in here, bail on the user?  not. */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">rv<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">ap_regkey_open<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><operator pos:line="26" pos:column="30">&amp;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="31">regkey<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">AP_REGKEY_LOCAL_MACHINE<pos:position pos:line="26" pos:column="62"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="27" pos:column="30">"SYSTEM\\CurrentControlSet\\Services\\"<pos:position pos:line="27" pos:column="69"/></literal>
                             <literal type="string" pos:line="28" pos:column="30">"EventLog\\Application\\Apache Service"<pos:position pos:line="28" pos:column="69"/></literal></expr></argument>,
                             <argument><expr><name pos:line="29" pos:column="30">APR_READ<pos:position pos:line="29" pos:column="38"/></name> <operator pos:line="29" pos:column="39">|<pos:position pos:line="29" pos:column="40"/></operator> <name pos:line="29" pos:column="41">APR_WRITE<pos:position pos:line="29" pos:column="50"/></name> <operator pos:line="29" pos:column="51">|<pos:position pos:line="29" pos:column="52"/></operator> <name pos:line="29" pos:column="53">APR_CREATE<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="65">p<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call><operator pos:line="29" pos:column="67">)<pos:position pos:line="29" pos:column="68"/></operator>
            <operator pos:line="30" pos:column="13">==<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">APR_SUCCESS<pos:position pos:line="30" pos:column="27"/></name></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28">
    <block pos:line="31" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">DWORD<pos:position pos:line="32" pos:column="14"/></name></type> <name pos:line="32" pos:column="15">dwData<pos:position pos:line="32" pos:column="21"/></name> <init pos:line="32" pos:column="22">= <expr><name pos:line="32" pos:column="24">EVENTLOG_ERROR_TYPE<pos:position pos:line="32" pos:column="43"/></name> <operator pos:line="32" pos:column="44">|<pos:position pos:line="32" pos:column="45"/></operator> <name pos:line="32" pos:column="46">EVENTLOG_WARNING_TYPE<pos:position pos:line="32" pos:column="67"/></name> <operator pos:line="32" pos:column="68">|<pos:position pos:line="32" pos:column="69"/></operator>
                       <name pos:line="33" pos:column="24">EVENTLOG_INFORMATION_TYPE<pos:position pos:line="33" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="50"/></decl_stmt>

        <comment type="block" pos:line="35" pos:column="9">/* The stock message file */</comment>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_regkey_value_set<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">regkey<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="37">"EventMessageFile"<pos:position pos:line="36" pos:column="55"/></literal></expr></argument>,
                            <argument><expr><literal type="string" pos:line="37" pos:column="29">"%SystemRoot%\\System32\\netmsg.dll"<pos:position pos:line="37" pos:column="65"/></literal></expr></argument>,
                            <argument><expr><name pos:line="38" pos:column="29">AP_REGKEY_EXPAND<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">p<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ap_regkey_value_raw_set<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">regkey<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="41">"TypesSupported"<pos:position pos:line="40" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="59">&amp;<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="60">dwData<pos:position pos:line="40" pos:column="66"/></name></expr></argument>,
                                <argument><expr><sizeof pos:line="41" pos:column="33">sizeof<argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">dwData<pos:position pos:line="41" pos:column="46"/></name></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">REG_DWORD<pos:position pos:line="41" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="60">p<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">ap_regkey_close<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">regkey<pos:position pos:line="42" pos:column="31"/></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">hEventSource<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <call><name pos:line="45" pos:column="20">RegisterEventSourceW<pos:position pos:line="45" pos:column="40"/></name><argument_list pos:line="45" pos:column="40">(<argument><expr><name pos:line="45" pos:column="41">NULL<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="47">L"Apache Service"<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">SetEvent<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">stderr_ready<pos:position pos:line="47" pos:column="26"/></name></expr></argument>)<pos:position pos:line="47" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>

    <while pos:line="49" pos:column="5">while <condition pos:line="49" pos:column="11">(<expr><call><name pos:line="49" pos:column="12">ReadFile<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">hPipeRead<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="32">errmsg<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="40">1<pos:position pos:line="49" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="49" pos:column="43">&amp;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="44">errres<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="52">NULL<pos:position pos:line="49" pos:column="56"/></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call> <operator pos:line="49" pos:column="58">&amp;&amp;<pos:position pos:line="49" pos:column="68"/></operator> <operator pos:line="49" pos:column="61">(<pos:position pos:line="49" pos:column="62"/></operator><name pos:line="49" pos:column="62">errres<pos:position pos:line="49" pos:column="68"/></name> <operator pos:line="49" pos:column="69">==<pos:position pos:line="49" pos:column="71"/></operator> <literal type="number" pos:line="49" pos:column="72">1<pos:position pos:line="49" pos:column="73"/></literal><operator pos:line="49" pos:column="73">)<pos:position pos:line="49" pos:column="74"/></operator></expr>)<pos:position pos:line="49" pos:column="75"/></condition>
    <block pos:line="50" pos:column="5">{
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">errmsg<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">&gt;<pos:position pos:line="51" pos:column="25"/></operator> <name pos:line="51" pos:column="23">errbuf<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">)<pos:position pos:line="51" pos:column="30"/></operator> <operator pos:line="51" pos:column="31">||<pos:position pos:line="51" pos:column="33"/></operator> <operator pos:line="51" pos:column="34">!<pos:position pos:line="51" pos:column="35"/></operator><call><name pos:line="51" pos:column="35">apr_isspace<pos:position pos:line="51" pos:column="46"/></name><argument_list pos:line="51" pos:column="46">(<argument><expr><operator pos:line="51" pos:column="47">*<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="48">errmsg<pos:position pos:line="51" pos:column="54"/></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="56"/></condition><then pos:line="51" pos:column="56">
        <block pos:line="52" pos:column="9">{
            <expr_stmt><expr><operator pos:line="53" pos:column="13">++<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">errmsg<pos:position pos:line="53" pos:column="21"/></name></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><operator pos:line="54" pos:column="17">(<pos:position pos:line="54" pos:column="18"/></operator><operator pos:line="54" pos:column="18">*<pos:position pos:line="54" pos:column="19"/></operator><operator pos:line="54" pos:column="19">(<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">errmsg<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">-<pos:position pos:line="54" pos:column="28"/></operator> <literal type="number" pos:line="54" pos:column="29">1<pos:position pos:line="54" pos:column="30"/></literal><operator pos:line="54" pos:column="30">)<pos:position pos:line="54" pos:column="31"/></operator> <operator pos:line="54" pos:column="32">==<pos:position pos:line="54" pos:column="34"/></operator> <literal type="char" pos:line="54" pos:column="35">'\n'<pos:position pos:line="54" pos:column="39"/></literal><operator pos:line="54" pos:column="39">)<pos:position pos:line="54" pos:column="40"/></operator>
                    <operator pos:line="55" pos:column="21">||<pos:position pos:line="55" pos:column="23"/></operator> <operator pos:line="55" pos:column="24">(<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">errmsg<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">&gt;=<pos:position pos:line="55" pos:column="37"/></operator> <name pos:line="55" pos:column="35">errbuf<pos:position pos:line="55" pos:column="41"/></name> <operator pos:line="55" pos:column="42">+<pos:position pos:line="55" pos:column="43"/></operator> <sizeof pos:line="55" pos:column="44">sizeof<argument_list pos:line="55" pos:column="50">(<argument><expr><name pos:line="55" pos:column="51">errbuf<pos:position pos:line="55" pos:column="57"/></name></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></sizeof> <operator pos:line="55" pos:column="59">-<pos:position pos:line="55" pos:column="60"/></operator> <literal type="number" pos:line="55" pos:column="61">1<pos:position pos:line="55" pos:column="62"/></literal><operator pos:line="55" pos:column="62">)<pos:position pos:line="55" pos:column="63"/></operator></expr>)<pos:position pos:line="55" pos:column="64"/></condition><then pos:line="55" pos:column="64">
            <block pos:line="56" pos:column="13">{
                <while pos:line="57" pos:column="17">while <condition pos:line="57" pos:column="23">(<expr><operator pos:line="57" pos:column="24">(<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="25">errmsg<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">&gt;<pos:position pos:line="57" pos:column="36"/></operator> <name pos:line="57" pos:column="34">errbuf<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">)<pos:position pos:line="57" pos:column="41"/></operator> <operator pos:line="57" pos:column="42">&amp;&amp;<pos:position pos:line="57" pos:column="52"/></operator> <call><name pos:line="57" pos:column="45">apr_isspace<pos:position pos:line="57" pos:column="56"/></name><argument_list pos:line="57" pos:column="56">(<argument><expr><operator pos:line="57" pos:column="57">*<pos:position pos:line="57" pos:column="58"/></operator><operator pos:line="57" pos:column="58">(<pos:position pos:line="57" pos:column="59"/></operator><name pos:line="57" pos:column="59">errmsg<pos:position pos:line="57" pos:column="65"/></name> <operator pos:line="57" pos:column="66">-<pos:position pos:line="57" pos:column="67"/></operator> <literal type="number" pos:line="57" pos:column="68">1<pos:position pos:line="57" pos:column="69"/></literal><operator pos:line="57" pos:column="69">)<pos:position pos:line="57" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="72"/></condition> <block pos:line="57" pos:column="73">{
                    <expr_stmt><expr><operator pos:line="58" pos:column="21">--<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">errmsg<pos:position pos:line="58" pos:column="29"/></name></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
                }<pos:position pos:line="59" pos:column="18"/></block></while>
                <expr_stmt><expr><operator pos:line="60" pos:column="17">*<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="18">errmsg<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">=<pos:position pos:line="60" pos:column="26"/></operator> <literal type="char" pos:line="60" pos:column="27">'\0'<pos:position pos:line="60" pos:column="31"/></literal></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>

                <comment type="block" pos:line="62" pos:column="17">/* Generic message: '%1 %2 %3 %4 %5 %6 %7 %8 %9'
                 * The event code in netmsg.dll is 3299
                 */</comment>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">ReportEvent<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name pos:line="65" pos:column="29">hEventSource<pos:position pos:line="65" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="43">EVENTLOG_ERROR_TYPE<pos:position pos:line="65" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="64">0<pos:position pos:line="65" pos:column="65"/></literal></expr></argument>,
                            <argument><expr><literal type="number" pos:line="66" pos:column="29">3299<pos:position pos:line="66" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="35">NULL<pos:position pos:line="66" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="41">9<pos:position pos:line="66" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="44">0<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="47">errarg<pos:position pos:line="66" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="55">NULL<pos:position pos:line="66" pos:column="59"/></name></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name pos:line="67" pos:column="17">errmsg<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <name pos:line="67" pos:column="26">errbuf<pos:position pos:line="67" pos:column="32"/></name></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
    }<pos:position pos:line="70" pos:column="6"/></block></while>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><operator pos:line="72" pos:column="9">(<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">errres<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">=<pos:position pos:line="72" pos:column="18"/></operator> <call><name pos:line="72" pos:column="19">GetLastError<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">()<pos:position pos:line="72" pos:column="33"/></argument_list></call><operator pos:line="72" pos:column="33">)<pos:position pos:line="72" pos:column="34"/></operator> <operator pos:line="72" pos:column="35">!=<pos:position pos:line="72" pos:column="37"/></operator> <name pos:line="72" pos:column="38">ERROR_BROKEN_PIPE<pos:position pos:line="72" pos:column="55"/></name></expr>)<pos:position pos:line="72" pos:column="56"/></condition><then pos:line="72" pos:column="56"> <block pos:line="72" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">apr_snprintf<pos:position pos:line="73" pos:column="21"/></name><argument_list pos:line="73" pos:column="21">(<argument><expr><name pos:line="73" pos:column="22">errbuf<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="30">sizeof<argument_list pos:line="73" pos:column="36">(<argument><expr><name pos:line="73" pos:column="37">errbuf<pos:position pos:line="73" pos:column="43"/></name></expr></argument>)<pos:position pos:line="73" pos:column="44"/></argument_list></sizeof></expr></argument>,
                     <argument><expr><literal type="string" pos:line="74" pos:column="22">"Win32 error %lu reading stderr pipe stream\r\n"<pos:position pos:line="74" pos:column="70"/></literal></expr></argument>,
                     <argument><expr><call><name pos:line="75" pos:column="22">GetLastError<pos:position pos:line="75" pos:column="34"/></name><argument_list pos:line="75" pos:column="34">()<pos:position pos:line="75" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="77" pos:column="9">ReportEvent<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name pos:line="77" pos:column="21">hEventSource<pos:position pos:line="77" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="35">EVENTLOG_ERROR_TYPE<pos:position pos:line="77" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="56">0<pos:position pos:line="77" pos:column="57"/></literal></expr></argument>,
                    <argument><expr><literal type="number" pos:line="78" pos:column="21">3299<pos:position pos:line="78" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="27">NULL<pos:position pos:line="78" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="33">9<pos:position pos:line="78" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="36">0<pos:position pos:line="78" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="39">errarg<pos:position pos:line="78" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="47">NULL<pos:position pos:line="78" pos:column="51"/></name></expr></argument>)<pos:position pos:line="78" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="81" pos:column="5">CloseHandle<pos:position pos:line="81" pos:column="16"/></name><argument_list pos:line="81" pos:column="16">(<argument><expr><name pos:line="81" pos:column="17">hPipeRead<pos:position pos:line="81" pos:column="26"/></name></expr></argument>)<pos:position pos:line="81" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">DeregisterEventSource<pos:position pos:line="82" pos:column="26"/></name><argument_list pos:line="82" pos:column="26">(<argument><expr><name pos:line="82" pos:column="27">hEventSource<pos:position pos:line="82" pos:column="39"/></name></expr></argument>)<pos:position pos:line="82" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">CloseHandle<pos:position pos:line="83" pos:column="16"/></name><argument_list pos:line="83" pos:column="16">(<argument><expr><name pos:line="83" pos:column="17">stderr_thread<pos:position pos:line="83" pos:column="30"/></name></expr></argument>)<pos:position pos:line="83" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="84" pos:column="5">stderr_thread<pos:position pos:line="84" pos:column="18"/></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <name pos:line="84" pos:column="21">NULL<pos:position pos:line="84" pos:column="25"/></name></expr>;<pos:position pos:line="84" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">apr_pool_destroy<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><name pos:line="85" pos:column="22">p<pos:position pos:line="85" pos:column="23"/></name></expr></argument>)<pos:position pos:line="85" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="25"/></expr_stmt>
    <return pos:line="86" pos:column="5">return <expr><literal type="number" pos:line="86" pos:column="12">0<pos:position pos:line="86" pos:column="13"/></literal></expr>;<pos:position pos:line="86" pos:column="14"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

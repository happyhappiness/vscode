<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3127_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">setElementTypePrefix<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">XML_Parser<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">parser<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">ELEMENT_TYPE<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">elementType<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">XML_Char<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">name<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init><expr><name pos:line="4" pos:column="8">name<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">=<pos:position pos:line="4" pos:column="14"/></operator> <name><name pos:line="4" pos:column="15">elementType<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">name<pos:position pos:line="4" pos:column="32"/></name></name></expr>;<pos:position pos:line="4" pos:column="33"/></init> <condition><expr><operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">name<pos:position pos:line="4" pos:column="39"/></name></expr>;<pos:position pos:line="4" pos:column="40"/></condition> <incr><expr><name pos:line="4" pos:column="41">name<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">++<pos:position pos:line="4" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="48"/></control> <block pos:line="4" pos:column="49">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">name<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">==<pos:position pos:line="5" pos:column="17"/></operator> <call><name pos:line="5" pos:column="18">XML_T<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><literal type="char" pos:line="5" pos:column="24">':'<pos:position pos:line="5" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29"> <block pos:line="5" pos:column="30">{
      <decl_stmt><decl><type><name pos:line="6" pos:column="7">PREFIX<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">prefix<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="7" pos:column="7">const<pos:position pos:line="7" pos:column="12"/></specifier> <name pos:line="7" pos:column="13">XML_Char<pos:position pos:line="7" pos:column="21"/></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier></type><name pos:line="7" pos:column="23">s<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
      <for pos:line="8" pos:column="7">for <control pos:line="8" pos:column="11">(<init><expr><name pos:line="8" pos:column="12">s<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name><name pos:line="8" pos:column="16">elementType<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">name<pos:position pos:line="8" pos:column="33"/></name></name></expr>;<pos:position pos:line="8" pos:column="34"/></init> <condition><expr><name pos:line="8" pos:column="35">s<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">!=<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="40">name<pos:position pos:line="8" pos:column="44"/></name></expr>;<pos:position pos:line="8" pos:column="45"/></condition> <incr><expr><name pos:line="8" pos:column="46">s<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">++<pos:position pos:line="8" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="50"/></control> <block pos:line="8" pos:column="51">{
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">poolAppendChar<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator><name><name pos:line="9" pos:column="30">dtd<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">.<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">pool<pos:position pos:line="9" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="40">*<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">s<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44">
	  <block type="pseudo"><return pos:line="10" pos:column="11">return <expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></return></block></then></if>
      }<pos:position pos:line="11" pos:column="8"/></block></for>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><operator pos:line="12" pos:column="11">!<pos:position pos:line="12" pos:column="12"/></operator><call><name pos:line="12" pos:column="12">poolAppendChar<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name><name pos:line="12" pos:column="28">dtd<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">.<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">pool<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="38">XML_T<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><literal type="char" pos:line="12" pos:column="44">'\0'<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51">
	<block type="pseudo"><return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="14" pos:column="7">prefix<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">PREFIX<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">)<pos:position pos:line="14" pos:column="26"/></operator><call><name pos:line="14" pos:column="26">lookup<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><operator pos:line="14" pos:column="33">&amp;<pos:position pos:line="14" pos:column="38"/></operator><name><name pos:line="14" pos:column="34">dtd<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">.<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">prefixes<pos:position pos:line="14" pos:column="46"/></name></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="48">poolStart<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><operator pos:line="14" pos:column="58">&amp;<pos:position pos:line="14" pos:column="63"/></operator><name><name pos:line="14" pos:column="59">dtd<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">.<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="63">pool<pos:position pos:line="14" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="70">sizeof<argument_list pos:line="14" pos:column="76">(<argument><expr><name pos:line="14" pos:column="77">PREFIX<pos:position pos:line="14" pos:column="83"/></name></expr></argument>)<pos:position pos:line="14" pos:column="84"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="86"/></expr_stmt>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">!<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">prefix<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
	<block type="pseudo"><return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return></block></then></if>
      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name><name pos:line="17" pos:column="11">prefix<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">name<pos:position pos:line="17" pos:column="23"/></name></name> <operator pos:line="17" pos:column="24">==<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">poolStart<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><operator pos:line="17" pos:column="37">&amp;<pos:position pos:line="17" pos:column="42"/></operator><name><name pos:line="17" pos:column="38">dtd<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">.<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">pool<pos:position pos:line="17" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">poolFinish<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><operator pos:line="18" pos:column="20">&amp;<pos:position pos:line="18" pos:column="25"/></operator><name><name pos:line="18" pos:column="21">dtd<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">.<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">pool<pos:position pos:line="18" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt></block></then>
      <else pos:line="19" pos:column="7">else
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="9">poolDiscard<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><operator pos:line="20" pos:column="21">&amp;<pos:position pos:line="20" pos:column="26"/></operator><name><name pos:line="20" pos:column="22">dtd<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">.<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">pool<pos:position pos:line="20" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt></block></else></if>
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">elementType<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">prefix<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">prefix<pos:position pos:line="21" pos:column="35"/></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>

    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
  }<pos:position pos:line="24" pos:column="4"/></block></for>
  <return pos:line="25" pos:column="3">return <expr><literal type="number" pos:line="25" pos:column="10">1<pos:position pos:line="25" pos:column="11"/></literal></expr>;<pos:position pos:line="25" pos:column="12"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

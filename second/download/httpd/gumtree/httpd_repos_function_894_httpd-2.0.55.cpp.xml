<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_894_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_speling<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">spconfig<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">cfg<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">good<pos:position pos:line="4" pos:column="15"/></name></decl>, <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="18">bad<pos:position pos:line="4" pos:column="21"/></name></decl>, <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="24">postgood<pos:position pos:line="4" pos:column="32"/></name></decl>, <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="35">url<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_finfo_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">dirent<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">filoc<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">dotloc<pos:position pos:line="6" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="24">urlen<pos:position pos:line="6" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="31">pglen<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_array_header_t<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">candidates<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><name pos:line="7" pos:column="38">NULL<pos:position pos:line="7" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_dir_t<pos:position pos:line="8" pos:column="14"/></name>          <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">dir<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">cfg<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">ap_get_module_config<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name><name pos:line="10" pos:column="32">r<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">per_dir_config<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="51">&amp;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="52">speling_module<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="10">cfg<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">enabled<pos:position pos:line="11" pos:column="22"/></name></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">DECLINED<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* We only want to worry about GETs */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">r<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">method_number<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">!=<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">M_GET<pos:position pos:line="16" pos:column="34"/></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <block pos:line="16" pos:column="36">{
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">DECLINED<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* We've already got a file of some kind or another */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">r<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">proxyreq<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">||<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name><name pos:line="21" pos:column="25">r<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">finfo<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">.<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">filetype<pos:position pos:line="21" pos:column="42"/></name></name> <operator pos:line="21" pos:column="43">!=<pos:position pos:line="21" pos:column="45"/></operator> <literal type="number" pos:line="21" pos:column="46">0<pos:position pos:line="21" pos:column="47"/></literal><operator pos:line="21" pos:column="47">)<pos:position pos:line="21" pos:column="48"/></operator></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49"> <block pos:line="21" pos:column="50">{
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">DECLINED<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* This is a sub request - don't mess with it */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">r<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">main<pos:position pos:line="26" pos:column="16"/></name></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17"> <block pos:line="26" pos:column="18">{
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">DECLINED<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/*
     * The request should end up looking like this:
     * r-&gt;uri: /correct-url/mispelling/more
     * r-&gt;filename: /correct-file/mispelling r-&gt;path_info: /more
     *
     * So we do this in steps. First break r-&gt;filename into two pieces
     */</comment>

    <expr_stmt><expr><name pos:line="38" pos:column="5">filoc<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <call><name pos:line="38" pos:column="13">ap_rind<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name><name pos:line="38" pos:column="21">r<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">filename<pos:position pos:line="38" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="34">'/'<pos:position pos:line="38" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
    <comment type="block" pos:line="39" pos:column="5">/*
     * Don't do anything if the request doesn't contain a slash, or
     * requests "/" 
     */</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">filoc<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">==<pos:position pos:line="43" pos:column="17"/></operator> <operator pos:line="43" pos:column="18">-<pos:position pos:line="43" pos:column="19"/></operator><literal type="number" pos:line="43" pos:column="19">1<pos:position pos:line="43" pos:column="20"/></literal> <operator pos:line="43" pos:column="21">||<pos:position pos:line="43" pos:column="23"/></operator> <call><name pos:line="43" pos:column="24">strcmp<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name><name pos:line="43" pos:column="31">r<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">uri<pos:position pos:line="43" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="39">"/"<pos:position pos:line="43" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="43"/></argument_list></call> <operator pos:line="43" pos:column="44">==<pos:position pos:line="43" pos:column="46"/></operator> <literal type="number" pos:line="43" pos:column="47">0<pos:position pos:line="43" pos:column="48"/></literal></expr>)<pos:position pos:line="43" pos:column="49"/></condition><then pos:line="43" pos:column="49"> <block pos:line="43" pos:column="50">{
        <return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">DECLINED<pos:position pos:line="44" pos:column="24"/></name></expr>;<pos:position pos:line="44" pos:column="25"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="47" pos:column="5">/* good = /correct-file */</comment>
    <expr_stmt><expr><name pos:line="48" pos:column="5">good<pos:position pos:line="48" pos:column="9"/></name> <operator pos:line="48" pos:column="10">=<pos:position pos:line="48" pos:column="11"/></operator> <call><name pos:line="48" pos:column="12">apr_pstrndup<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name><name pos:line="48" pos:column="25">r<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">-&gt;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="28">pool<pos:position pos:line="48" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="34">r<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">filename<pos:position pos:line="48" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="47">filoc<pos:position pos:line="48" pos:column="52"/></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
    <comment type="block" pos:line="49" pos:column="5">/* bad = mispelling */</comment>
    <expr_stmt><expr><name pos:line="50" pos:column="5">bad<pos:position pos:line="50" pos:column="8"/></name> <operator pos:line="50" pos:column="9">=<pos:position pos:line="50" pos:column="10"/></operator> <call><name pos:line="50" pos:column="11">apr_pstrdup<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name><name pos:line="50" pos:column="23">r<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">pool<pos:position pos:line="50" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="32">r<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">filename<pos:position pos:line="50" pos:column="43"/></name></name> <operator pos:line="50" pos:column="44">+<pos:position pos:line="50" pos:column="45"/></operator> <name pos:line="50" pos:column="46">filoc<pos:position pos:line="50" pos:column="51"/></name> <operator pos:line="50" pos:column="52">+<pos:position pos:line="50" pos:column="53"/></operator> <literal type="number" pos:line="50" pos:column="54">1<pos:position pos:line="50" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt>
    <comment type="block" pos:line="51" pos:column="5">/* postgood = mispelling/more */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">postgood<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">apr_pstrcat<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name><name pos:line="52" pos:column="28">r<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">pool<pos:position pos:line="52" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">bad<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="42">r<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">path_info<pos:position pos:line="52" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="56">NULL<pos:position pos:line="52" pos:column="60"/></name></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><name pos:line="54" pos:column="5">urlen<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <call><name pos:line="54" pos:column="13">strlen<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name><name pos:line="54" pos:column="20">r<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">-&gt;<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="23">uri<pos:position pos:line="54" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">pglen<pos:position pos:line="55" pos:column="10"/></name> <operator pos:line="55" pos:column="11">=<pos:position pos:line="55" pos:column="12"/></operator> <call><name pos:line="55" pos:column="13">strlen<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">postgood<pos:position pos:line="55" pos:column="28"/></name></expr></argument>)<pos:position pos:line="55" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="57" pos:column="5">/* Check to see if the URL pieces add up */</comment>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><call><name pos:line="58" pos:column="9">strcmp<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><name pos:line="58" pos:column="16">postgood<pos:position pos:line="58" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="26">r<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">uri<pos:position pos:line="58" pos:column="32"/></name></name> <operator pos:line="58" pos:column="33">+<pos:position pos:line="58" pos:column="34"/></operator> <operator pos:line="58" pos:column="35">(<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="36">urlen<pos:position pos:line="58" pos:column="41"/></name> <operator pos:line="58" pos:column="42">-<pos:position pos:line="58" pos:column="43"/></operator> <name pos:line="58" pos:column="44">pglen<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">)<pos:position pos:line="58" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="58" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="52"/></condition><then pos:line="58" pos:column="52"> <block pos:line="58" pos:column="53">{
        <return pos:line="59" pos:column="9">return <expr><name pos:line="59" pos:column="16">DECLINED<pos:position pos:line="59" pos:column="24"/></name></expr>;<pos:position pos:line="59" pos:column="25"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* url = /correct-url */</comment>
    <expr_stmt><expr><name pos:line="63" pos:column="5">url<pos:position pos:line="63" pos:column="8"/></name> <operator pos:line="63" pos:column="9">=<pos:position pos:line="63" pos:column="10"/></operator> <call><name pos:line="63" pos:column="11">apr_pstrndup<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name><name pos:line="63" pos:column="24">r<pos:position pos:line="63" pos:column="25"/></name><operator pos:line="63" pos:column="25">-&gt;<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="27">pool<pos:position pos:line="63" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="33">r<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">uri<pos:position pos:line="63" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="41">(<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">urlen<pos:position pos:line="63" pos:column="47"/></name> <operator pos:line="63" pos:column="48">-<pos:position pos:line="63" pos:column="49"/></operator> <name pos:line="63" pos:column="50">pglen<pos:position pos:line="63" pos:column="55"/></name><operator pos:line="63" pos:column="55">)<pos:position pos:line="63" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="63" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="65" pos:column="5">/* Now open the directory and do ourselves a check... */</comment>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><call><name pos:line="66" pos:column="9">apr_dir_open<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><operator pos:line="66" pos:column="22">&amp;<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="23">dir<pos:position pos:line="66" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="28">good<pos:position pos:line="66" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="34">r<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">pool<pos:position pos:line="66" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call> <operator pos:line="66" pos:column="43">!=<pos:position pos:line="66" pos:column="45"/></operator> <name pos:line="66" pos:column="46">APR_SUCCESS<pos:position pos:line="66" pos:column="57"/></name></expr>)<pos:position pos:line="66" pos:column="58"/></condition><then pos:line="66" pos:column="58"> <block pos:line="66" pos:column="59">{
        <comment type="block" pos:line="67" pos:column="9">/* Oops, not a directory... */</comment>
        <return pos:line="68" pos:column="9">return <expr><name pos:line="68" pos:column="16">DECLINED<pos:position pos:line="68" pos:column="24"/></name></expr>;<pos:position pos:line="68" pos:column="25"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="71" pos:column="5">candidates<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <call><name pos:line="71" pos:column="18">apr_array_make<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name><name pos:line="71" pos:column="33">r<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">pool<pos:position pos:line="71" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="42">2<pos:position pos:line="71" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="45">sizeof<argument_list pos:line="71" pos:column="51">(<argument><expr><name pos:line="71" pos:column="52">misspelled_file<pos:position pos:line="71" pos:column="67"/></name></expr></argument>)<pos:position pos:line="71" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><name pos:line="73" pos:column="5">dotloc<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <call><name pos:line="73" pos:column="14">ap_ind<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name pos:line="73" pos:column="21">bad<pos:position pos:line="73" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="73" pos:column="26">'.'<pos:position pos:line="73" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">dotloc<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">==<pos:position pos:line="74" pos:column="18"/></operator> <operator pos:line="74" pos:column="19">-<pos:position pos:line="74" pos:column="20"/></operator><literal type="number" pos:line="74" pos:column="20">1<pos:position pos:line="74" pos:column="21"/></literal></expr>)<pos:position pos:line="74" pos:column="22"/></condition><then pos:line="74" pos:column="22"> <block pos:line="74" pos:column="23">{
        <expr_stmt><expr><name pos:line="75" pos:column="9">dotloc<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <call><name pos:line="75" pos:column="18">strlen<pos:position pos:line="75" pos:column="24"/></name><argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">bad<pos:position pos:line="75" pos:column="28"/></name></expr></argument>)<pos:position pos:line="75" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <while pos:line="78" pos:column="5">while <condition pos:line="78" pos:column="11">(<expr><call><name pos:line="78" pos:column="12">apr_dir_read<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><operator pos:line="78" pos:column="25">&amp;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="26">dirent<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">APR_FINFO_DIRENT<pos:position pos:line="78" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="52">dir<pos:position pos:line="78" pos:column="55"/></name></expr></argument>)<pos:position pos:line="78" pos:column="56"/></argument_list></call> <operator pos:line="78" pos:column="57">==<pos:position pos:line="78" pos:column="59"/></operator> <name pos:line="78" pos:column="60">APR_SUCCESS<pos:position pos:line="78" pos:column="71"/></name></expr>)<pos:position pos:line="78" pos:column="72"/></condition> <block pos:line="78" pos:column="73">{
        <decl_stmt><decl><type><name pos:line="79" pos:column="9">sp_reason<pos:position pos:line="79" pos:column="18"/></name></type> <name pos:line="79" pos:column="19">q<pos:position pos:line="79" pos:column="20"/></name></decl>;<pos:position pos:line="79" pos:column="21"/></decl_stmt>

        <comment type="block" pos:line="81" pos:column="9">/*
         * If we end up with a "fixed" URL which is identical to the
         * requested one, we must have found a broken symlink or some such.
         * Do _not_ try to redirect this, it causes a loop!
         */</comment>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><call><name pos:line="86" pos:column="13">strcmp<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><name pos:line="86" pos:column="20">bad<pos:position pos:line="86" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="25">dirent<pos:position pos:line="86" pos:column="31"/></name><operator pos:line="86" pos:column="31">.<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="32">name<pos:position pos:line="86" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call> <operator pos:line="86" pos:column="38">==<pos:position pos:line="86" pos:column="40"/></operator> <literal type="number" pos:line="86" pos:column="41">0<pos:position pos:line="86" pos:column="42"/></literal></expr>)<pos:position pos:line="86" pos:column="43"/></condition><then pos:line="86" pos:column="43"> <block pos:line="86" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">apr_dir_close<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><name pos:line="87" pos:column="27">dir<pos:position pos:line="87" pos:column="30"/></name></expr></argument>)<pos:position pos:line="87" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="32"/></expr_stmt>
            <return pos:line="88" pos:column="13">return <expr><name pos:line="88" pos:column="20">OK<pos:position pos:line="88" pos:column="22"/></name></expr>;<pos:position pos:line="88" pos:column="23"/></return>
        }<pos:position pos:line="89" pos:column="10"/></block></then>

        <comment type="block" pos:line="91" pos:column="9">/*
         * miscapitalization errors are checked first (like, e.g., lower case
         * file, upper case request)
         */</comment>
        <elseif pos:line="95" pos:column="9">else <if pos:line="95" pos:column="14">if <condition pos:line="95" pos:column="17">(<expr><call><name pos:line="95" pos:column="18">strcasecmp<pos:position pos:line="95" pos:column="28"/></name><argument_list pos:line="95" pos:column="28">(<argument><expr><name pos:line="95" pos:column="29">bad<pos:position pos:line="95" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="34">dirent<pos:position pos:line="95" pos:column="40"/></name><operator pos:line="95" pos:column="40">.<pos:position pos:line="95" pos:column="41"/></operator><name pos:line="95" pos:column="41">name<pos:position pos:line="95" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="46"/></argument_list></call> <operator pos:line="95" pos:column="47">==<pos:position pos:line="95" pos:column="49"/></operator> <literal type="number" pos:line="95" pos:column="50">0<pos:position pos:line="95" pos:column="51"/></literal></expr>)<pos:position pos:line="95" pos:column="52"/></condition><then pos:line="95" pos:column="52"> <block pos:line="95" pos:column="53">{
            <decl_stmt><decl><type><name pos:line="96" pos:column="13">misspelled_file<pos:position pos:line="96" pos:column="28"/></name> <modifier pos:line="96" pos:column="29">*<pos:position pos:line="96" pos:column="30"/></modifier></type><name pos:line="96" pos:column="30">sp_new<pos:position pos:line="96" pos:column="36"/></name></decl>;<pos:position pos:line="96" pos:column="37"/></decl_stmt>

	    <expr_stmt><expr><name pos:line="98" pos:column="13">sp_new<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">=<pos:position pos:line="98" pos:column="21"/></operator> <operator pos:line="98" pos:column="22">(<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="23">misspelled_file<pos:position pos:line="98" pos:column="38"/></name> <operator pos:line="98" pos:column="39">*<pos:position pos:line="98" pos:column="40"/></operator><operator pos:line="98" pos:column="40">)<pos:position pos:line="98" pos:column="41"/></operator> <call><name pos:line="98" pos:column="42">apr_array_push<pos:position pos:line="98" pos:column="56"/></name><argument_list pos:line="98" pos:column="56">(<argument><expr><name pos:line="98" pos:column="57">candidates<pos:position pos:line="98" pos:column="67"/></name></expr></argument>)<pos:position pos:line="98" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">sp_new<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">-&gt;<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="21">name<pos:position pos:line="99" pos:column="25"/></name></name> <operator pos:line="99" pos:column="26">=<pos:position pos:line="99" pos:column="27"/></operator> <call><name pos:line="99" pos:column="28">apr_pstrdup<pos:position pos:line="99" pos:column="39"/></name><argument_list pos:line="99" pos:column="39">(<argument><expr><name><name pos:line="99" pos:column="40">r<pos:position pos:line="99" pos:column="41"/></name><operator pos:line="99" pos:column="41">-&gt;<pos:position pos:line="99" pos:column="46"/></operator><name pos:line="99" pos:column="43">pool<pos:position pos:line="99" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="49">dirent<pos:position pos:line="99" pos:column="55"/></name><operator pos:line="99" pos:column="55">.<pos:position pos:line="99" pos:column="56"/></operator><name pos:line="99" pos:column="56">name<pos:position pos:line="99" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="100" pos:column="13">sp_new<pos:position pos:line="100" pos:column="19"/></name><operator pos:line="100" pos:column="19">-&gt;<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="21">quality<pos:position pos:line="100" pos:column="28"/></name></name> <operator pos:line="100" pos:column="29">=<pos:position pos:line="100" pos:column="30"/></operator> <name pos:line="100" pos:column="31">SP_MISCAPITALIZED<pos:position pos:line="100" pos:column="48"/></name></expr>;<pos:position pos:line="100" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="101" pos:column="10"/></block></then></if></elseif>

        <comment type="block" pos:line="103" pos:column="9">/*
         * simple typing errors are checked next (like, e.g.,
         * missing/extra/transposed char)
         */</comment>
        <elseif pos:line="107" pos:column="9">else <if pos:line="107" pos:column="14">if <condition pos:line="107" pos:column="17">(<expr><operator pos:line="107" pos:column="18">(<pos:position pos:line="107" pos:column="19"/></operator><name pos:line="107" pos:column="19">q<pos:position pos:line="107" pos:column="20"/></name> <operator pos:line="107" pos:column="21">=<pos:position pos:line="107" pos:column="22"/></operator> <call><name pos:line="107" pos:column="23">spdist<pos:position pos:line="107" pos:column="29"/></name><argument_list pos:line="107" pos:column="29">(<argument><expr><name pos:line="107" pos:column="30">bad<pos:position pos:line="107" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="35">dirent<pos:position pos:line="107" pos:column="41"/></name><operator pos:line="107" pos:column="41">.<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="42">name<pos:position pos:line="107" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="47"/></argument_list></call><operator pos:line="107" pos:column="47">)<pos:position pos:line="107" pos:column="48"/></operator> <operator pos:line="107" pos:column="49">!=<pos:position pos:line="107" pos:column="51"/></operator> <name pos:line="107" pos:column="52">SP_VERYDIFFERENT<pos:position pos:line="107" pos:column="68"/></name></expr>)<pos:position pos:line="107" pos:column="69"/></condition><then pos:line="107" pos:column="69"> <block pos:line="107" pos:column="70">{
            <decl_stmt><decl><type><name pos:line="108" pos:column="13">misspelled_file<pos:position pos:line="108" pos:column="28"/></name> <modifier pos:line="108" pos:column="29">*<pos:position pos:line="108" pos:column="30"/></modifier></type><name pos:line="108" pos:column="30">sp_new<pos:position pos:line="108" pos:column="36"/></name></decl>;<pos:position pos:line="108" pos:column="37"/></decl_stmt>

	    <expr_stmt><expr><name pos:line="110" pos:column="13">sp_new<pos:position pos:line="110" pos:column="19"/></name> <operator pos:line="110" pos:column="20">=<pos:position pos:line="110" pos:column="21"/></operator> <operator pos:line="110" pos:column="22">(<pos:position pos:line="110" pos:column="23"/></operator><name pos:line="110" pos:column="23">misspelled_file<pos:position pos:line="110" pos:column="38"/></name> <operator pos:line="110" pos:column="39">*<pos:position pos:line="110" pos:column="40"/></operator><operator pos:line="110" pos:column="40">)<pos:position pos:line="110" pos:column="41"/></operator> <call><name pos:line="110" pos:column="42">apr_array_push<pos:position pos:line="110" pos:column="56"/></name><argument_list pos:line="110" pos:column="56">(<argument><expr><name pos:line="110" pos:column="57">candidates<pos:position pos:line="110" pos:column="67"/></name></expr></argument>)<pos:position pos:line="110" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="111" pos:column="13">sp_new<pos:position pos:line="111" pos:column="19"/></name><operator pos:line="111" pos:column="19">-&gt;<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="21">name<pos:position pos:line="111" pos:column="25"/></name></name> <operator pos:line="111" pos:column="26">=<pos:position pos:line="111" pos:column="27"/></operator> <call><name pos:line="111" pos:column="28">apr_pstrdup<pos:position pos:line="111" pos:column="39"/></name><argument_list pos:line="111" pos:column="39">(<argument><expr><name><name pos:line="111" pos:column="40">r<pos:position pos:line="111" pos:column="41"/></name><operator pos:line="111" pos:column="41">-&gt;<pos:position pos:line="111" pos:column="46"/></operator><name pos:line="111" pos:column="43">pool<pos:position pos:line="111" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="49">dirent<pos:position pos:line="111" pos:column="55"/></name><operator pos:line="111" pos:column="55">.<pos:position pos:line="111" pos:column="56"/></operator><name pos:line="111" pos:column="56">name<pos:position pos:line="111" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="112" pos:column="13">sp_new<pos:position pos:line="112" pos:column="19"/></name><operator pos:line="112" pos:column="19">-&gt;<pos:position pos:line="112" pos:column="24"/></operator><name pos:line="112" pos:column="21">quality<pos:position pos:line="112" pos:column="28"/></name></name> <operator pos:line="112" pos:column="29">=<pos:position pos:line="112" pos:column="30"/></operator> <name pos:line="112" pos:column="31">q<pos:position pos:line="112" pos:column="32"/></name></expr>;<pos:position pos:line="112" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="113" pos:column="10"/></block></then></if></elseif>

        <comment type="block" pos:line="115" pos:column="9">/*
	 * The spdist() should have found the majority of the misspelled
	 * requests.  It is of questionable use to continue looking for
	 * files with the same base name, but potentially of totally wrong
	 * type (index.html &lt;-&gt; index.db).
	 * I would propose to not set the WANT_BASENAME_MATCH define.
         *      08-Aug-1997 &lt;Martin.Kraemer@Mch.SNI.De&gt;
         *
         * However, Alexei replied giving some reasons to add it anyway:
         * &gt; Oh, by the way, I remembered why having the
         * &gt; extension-stripping-and-matching stuff is a good idea:
         * &gt;
         * &gt; If you're using MultiViews, and have a file named foobar.html,
	 * &gt; which you refer to as "foobar", and someone tried to access
	 * &gt; "Foobar", mod_speling won't find it, because it won't find
	 * &gt; anything matching that spelling. With the extension-munging,
	 * &gt; it would locate "foobar.html". Not perfect, but I ran into
	 * &gt; that problem when I first wrote the module.
	 */</comment>
        <else pos:line="134" pos:column="9">else <block pos:line="134" pos:column="14">{
<cpp:ifdef pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">ifdef<pos:position pos:line="135" pos:column="7"/></cpp:directive> <name pos:line="135" pos:column="8">WANT_BASENAME_MATCH<pos:position pos:line="135" pos:column="27"/></name></cpp:ifdef>
            <comment type="block" pos:line="136" pos:column="13">/*
             * Okay... we didn't find anything. Now we take out the hard-core
             * power tools. There are several cases here. Someone might have
             * entered a wrong extension (.htm instead of .html or vice
             * versa) or the document could be negotiated. At any rate, now
             * we just compare stuff before the first dot. If it matches, we
             * figure we got us a match. This can result in wrong things if
             * there are files of different content types but the same prefix
             * (e.g. foo.gif and foo.html) This code will pick the first one
             * it finds. Better than a Not Found, though.
             */</comment>
            <decl_stmt><decl><type><name pos:line="147" pos:column="13">int<pos:position pos:line="147" pos:column="16"/></name></type> <name pos:line="147" pos:column="17">entloc<pos:position pos:line="147" pos:column="23"/></name> <init pos:line="147" pos:column="24">= <expr><call><name pos:line="147" pos:column="26">ap_ind<pos:position pos:line="147" pos:column="32"/></name><argument_list pos:line="147" pos:column="32">(<argument><expr><name><name pos:line="147" pos:column="33">dirent<pos:position pos:line="147" pos:column="39"/></name><operator pos:line="147" pos:column="39">.<pos:position pos:line="147" pos:column="40"/></operator><name pos:line="147" pos:column="40">name<pos:position pos:line="147" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="147" pos:column="46">'.'<pos:position pos:line="147" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="147" pos:column="51"/></decl_stmt>
            <if pos:line="148" pos:column="13">if <condition pos:line="148" pos:column="16">(<expr><name pos:line="148" pos:column="17">entloc<pos:position pos:line="148" pos:column="23"/></name> <operator pos:line="148" pos:column="24">==<pos:position pos:line="148" pos:column="26"/></operator> <operator pos:line="148" pos:column="27">-<pos:position pos:line="148" pos:column="28"/></operator><literal type="number" pos:line="148" pos:column="28">1<pos:position pos:line="148" pos:column="29"/></literal></expr>)<pos:position pos:line="148" pos:column="30"/></condition><then pos:line="148" pos:column="30"> <block pos:line="148" pos:column="31">{
                <expr_stmt><expr><name pos:line="149" pos:column="17">entloc<pos:position pos:line="149" pos:column="23"/></name> <operator pos:line="149" pos:column="24">=<pos:position pos:line="149" pos:column="25"/></operator> <call><name pos:line="149" pos:column="26">strlen<pos:position pos:line="149" pos:column="32"/></name><argument_list pos:line="149" pos:column="32">(<argument><expr><name><name pos:line="149" pos:column="33">dirent<pos:position pos:line="149" pos:column="39"/></name><operator pos:line="149" pos:column="39">.<pos:position pos:line="149" pos:column="40"/></operator><name pos:line="149" pos:column="40">name<pos:position pos:line="149" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="46"/></expr_stmt>
	    }<pos:position pos:line="150" pos:column="14"/></block></then></if>

            <if pos:line="152" pos:column="13">if <condition pos:line="152" pos:column="16">(<expr><operator pos:line="152" pos:column="17">(<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="18">dotloc<pos:position pos:line="152" pos:column="24"/></name> <operator pos:line="152" pos:column="25">==<pos:position pos:line="152" pos:column="27"/></operator> <name pos:line="152" pos:column="28">entloc<pos:position pos:line="152" pos:column="34"/></name><operator pos:line="152" pos:column="34">)<pos:position pos:line="152" pos:column="35"/></operator>
                <operator pos:line="153" pos:column="17">&amp;&amp;<pos:position pos:line="153" pos:column="27"/></operator> <operator pos:line="153" pos:column="20">!<pos:position pos:line="153" pos:column="21"/></operator><call><name pos:line="153" pos:column="21">strncasecmp<pos:position pos:line="153" pos:column="32"/></name><argument_list pos:line="153" pos:column="32">(<argument><expr><name pos:line="153" pos:column="33">bad<pos:position pos:line="153" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="38">dirent<pos:position pos:line="153" pos:column="44"/></name><operator pos:line="153" pos:column="44">.<pos:position pos:line="153" pos:column="45"/></operator><name pos:line="153" pos:column="45">name<pos:position pos:line="153" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="51">dotloc<pos:position pos:line="153" pos:column="57"/></name></expr></argument>)<pos:position pos:line="153" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="153" pos:column="59"/></condition><then pos:line="153" pos:column="59"> <block pos:line="153" pos:column="60">{
                <decl_stmt><decl><type><name pos:line="154" pos:column="17">misspelled_file<pos:position pos:line="154" pos:column="32"/></name> <modifier pos:line="154" pos:column="33">*<pos:position pos:line="154" pos:column="34"/></modifier></type><name pos:line="154" pos:column="34">sp_new<pos:position pos:line="154" pos:column="40"/></name></decl>;<pos:position pos:line="154" pos:column="41"/></decl_stmt>

		<expr_stmt><expr><name pos:line="156" pos:column="17">sp_new<pos:position pos:line="156" pos:column="23"/></name> <operator pos:line="156" pos:column="24">=<pos:position pos:line="156" pos:column="25"/></operator> <operator pos:line="156" pos:column="26">(<pos:position pos:line="156" pos:column="27"/></operator><name pos:line="156" pos:column="27">misspelled_file<pos:position pos:line="156" pos:column="42"/></name> <operator pos:line="156" pos:column="43">*<pos:position pos:line="156" pos:column="44"/></operator><operator pos:line="156" pos:column="44">)<pos:position pos:line="156" pos:column="45"/></operator> <call><name pos:line="156" pos:column="46">apr_array_push<pos:position pos:line="156" pos:column="60"/></name><argument_list pos:line="156" pos:column="60">(<argument><expr><name pos:line="156" pos:column="61">candidates<pos:position pos:line="156" pos:column="71"/></name></expr></argument>)<pos:position pos:line="156" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="157" pos:column="17">sp_new<pos:position pos:line="157" pos:column="23"/></name><operator pos:line="157" pos:column="23">-&gt;<pos:position pos:line="157" pos:column="28"/></operator><name pos:line="157" pos:column="25">name<pos:position pos:line="157" pos:column="29"/></name></name> <operator pos:line="157" pos:column="30">=<pos:position pos:line="157" pos:column="31"/></operator> <call><name pos:line="157" pos:column="32">apr_pstrdup<pos:position pos:line="157" pos:column="43"/></name><argument_list pos:line="157" pos:column="43">(<argument><expr><name><name pos:line="157" pos:column="44">r<pos:position pos:line="157" pos:column="45"/></name><operator pos:line="157" pos:column="45">-&gt;<pos:position pos:line="157" pos:column="50"/></operator><name pos:line="157" pos:column="47">pool<pos:position pos:line="157" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="53">dirent<pos:position pos:line="157" pos:column="59"/></name><operator pos:line="157" pos:column="59">.<pos:position pos:line="157" pos:column="60"/></operator><name pos:line="157" pos:column="60">name<pos:position pos:line="157" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="158" pos:column="17">sp_new<pos:position pos:line="158" pos:column="23"/></name><operator pos:line="158" pos:column="23">-&gt;<pos:position pos:line="158" pos:column="28"/></operator><name pos:line="158" pos:column="25">quality<pos:position pos:line="158" pos:column="32"/></name></name> <operator pos:line="158" pos:column="33">=<pos:position pos:line="158" pos:column="34"/></operator> <name pos:line="158" pos:column="35">SP_VERYDIFFERENT<pos:position pos:line="158" pos:column="51"/></name></expr>;<pos:position pos:line="158" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="159" pos:column="14"/></block></then></if>
<cpp:endif pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">endif<pos:position pos:line="160" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="161" pos:column="10"/></block></else></if>
    }<pos:position pos:line="162" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="163" pos:column="5">apr_dir_close<pos:position pos:line="163" pos:column="18"/></name><argument_list pos:line="163" pos:column="18">(<argument><expr><name pos:line="163" pos:column="19">dir<pos:position pos:line="163" pos:column="22"/></name></expr></argument>)<pos:position pos:line="163" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="24"/></expr_stmt>

    <if pos:line="165" pos:column="5">if <condition pos:line="165" pos:column="8">(<expr><name><name pos:line="165" pos:column="9">candidates<pos:position pos:line="165" pos:column="19"/></name><operator pos:line="165" pos:column="19">-&gt;<pos:position pos:line="165" pos:column="24"/></operator><name pos:line="165" pos:column="21">nelts<pos:position pos:line="165" pos:column="26"/></name></name> <operator pos:line="165" pos:column="27">!=<pos:position pos:line="165" pos:column="29"/></operator> <literal type="number" pos:line="165" pos:column="30">0<pos:position pos:line="165" pos:column="31"/></literal></expr>)<pos:position pos:line="165" pos:column="32"/></condition><then pos:line="165" pos:column="32"> <block pos:line="165" pos:column="33">{
        <comment type="block" pos:line="166" pos:column="9">/* Wow... we found us a mispelling. Construct a fixed url */</comment>
        <decl_stmt><decl><type><name pos:line="167" pos:column="9">char<pos:position pos:line="167" pos:column="13"/></name> <modifier pos:line="167" pos:column="14">*<pos:position pos:line="167" pos:column="15"/></modifier></type><name pos:line="167" pos:column="15">nuri<pos:position pos:line="167" pos:column="19"/></name></decl>;<pos:position pos:line="167" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="168" pos:column="9">const<pos:position pos:line="168" pos:column="14"/></specifier> <name pos:line="168" pos:column="15">char<pos:position pos:line="168" pos:column="19"/></name> <modifier pos:line="168" pos:column="20">*<pos:position pos:line="168" pos:column="21"/></modifier></type><name pos:line="168" pos:column="21">ref<pos:position pos:line="168" pos:column="24"/></name></decl>;<pos:position pos:line="168" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="169" pos:column="9">misspelled_file<pos:position pos:line="169" pos:column="24"/></name> <modifier pos:line="169" pos:column="25">*<pos:position pos:line="169" pos:column="26"/></modifier></type><name pos:line="169" pos:column="26">variant<pos:position pos:line="169" pos:column="33"/></name> <init pos:line="169" pos:column="34">= <expr><operator pos:line="169" pos:column="36">(<pos:position pos:line="169" pos:column="37"/></operator><name pos:line="169" pos:column="37">misspelled_file<pos:position pos:line="169" pos:column="52"/></name> <operator pos:line="169" pos:column="53">*<pos:position pos:line="169" pos:column="54"/></operator><operator pos:line="169" pos:column="54">)<pos:position pos:line="169" pos:column="55"/></operator> <name><name pos:line="169" pos:column="56">candidates<pos:position pos:line="169" pos:column="66"/></name><operator pos:line="169" pos:column="66">-&gt;<pos:position pos:line="169" pos:column="71"/></operator><name pos:line="169" pos:column="68">elts<pos:position pos:line="169" pos:column="72"/></name></name></expr></init></decl>;<pos:position pos:line="169" pos:column="73"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="170" pos:column="9">int<pos:position pos:line="170" pos:column="12"/></name></type> <name pos:line="170" pos:column="13">i<pos:position pos:line="170" pos:column="14"/></name></decl>;<pos:position pos:line="170" pos:column="15"/></decl_stmt>

        <expr_stmt><expr><name pos:line="172" pos:column="9">ref<pos:position pos:line="172" pos:column="12"/></name> <operator pos:line="172" pos:column="13">=<pos:position pos:line="172" pos:column="14"/></operator> <call><name pos:line="172" pos:column="15">apr_table_get<pos:position pos:line="172" pos:column="28"/></name><argument_list pos:line="172" pos:column="28">(<argument><expr><name><name pos:line="172" pos:column="29">r<pos:position pos:line="172" pos:column="30"/></name><operator pos:line="172" pos:column="30">-&gt;<pos:position pos:line="172" pos:column="35"/></operator><name pos:line="172" pos:column="32">headers_in<pos:position pos:line="172" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="44">"Referer"<pos:position pos:line="172" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="55"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="174" pos:column="9">qsort<pos:position pos:line="174" pos:column="14"/></name><argument_list pos:line="174" pos:column="14">(<argument><expr><operator pos:line="174" pos:column="15">(<pos:position pos:line="174" pos:column="16"/></operator><name pos:line="174" pos:column="16">void<pos:position pos:line="174" pos:column="20"/></name> <operator pos:line="174" pos:column="21">*<pos:position pos:line="174" pos:column="22"/></operator><operator pos:line="174" pos:column="22">)<pos:position pos:line="174" pos:column="23"/></operator> <name><name pos:line="174" pos:column="24">candidates<pos:position pos:line="174" pos:column="34"/></name><operator pos:line="174" pos:column="34">-&gt;<pos:position pos:line="174" pos:column="39"/></operator><name pos:line="174" pos:column="36">elts<pos:position pos:line="174" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="42">candidates<pos:position pos:line="174" pos:column="52"/></name><operator pos:line="174" pos:column="52">-&gt;<pos:position pos:line="174" pos:column="57"/></operator><name pos:line="174" pos:column="54">nelts<pos:position pos:line="174" pos:column="59"/></name></name></expr></argument>,
              <argument><expr><sizeof pos:line="175" pos:column="15">sizeof<argument_list pos:line="175" pos:column="21">(<argument><expr><name pos:line="175" pos:column="22">misspelled_file<pos:position pos:line="175" pos:column="37"/></name></expr></argument>)<pos:position pos:line="175" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="175" pos:column="40">sort_by_quality<pos:position pos:line="175" pos:column="55"/></name></expr></argument>)<pos:position pos:line="175" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="57"/></expr_stmt>

        <comment type="block" pos:line="177" pos:column="9">/*
         * Conditions for immediate redirection: 
         *     a) the first candidate was not found by stripping the suffix 
         * AND b) there exists only one candidate OR the best match is not
	 *        ambiguous
         * then return a redirection right away.
         */</comment>
        <if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><name><name pos:line="184" pos:column="13">variant<pos:position pos:line="184" pos:column="20"/></name><index pos:line="184" pos:column="20">[<expr><literal type="number" pos:line="184" pos:column="21">0<pos:position pos:line="184" pos:column="22"/></literal></expr>]<pos:position pos:line="184" pos:column="23"/></index></name><operator pos:line="184" pos:column="23">.<pos:position pos:line="184" pos:column="24"/></operator><name pos:line="184" pos:column="24">quality<pos:position pos:line="184" pos:column="31"/></name> <operator pos:line="184" pos:column="32">!=<pos:position pos:line="184" pos:column="34"/></operator> <name pos:line="184" pos:column="35">SP_VERYDIFFERENT<pos:position pos:line="184" pos:column="51"/></name>
	    <operator pos:line="185" pos:column="13">&amp;&amp;<pos:position pos:line="185" pos:column="23"/></operator> <operator pos:line="185" pos:column="16">(<pos:position pos:line="185" pos:column="17"/></operator><name><name pos:line="185" pos:column="17">candidates<pos:position pos:line="185" pos:column="27"/></name><operator pos:line="185" pos:column="27">-&gt;<pos:position pos:line="185" pos:column="32"/></operator><name pos:line="185" pos:column="29">nelts<pos:position pos:line="185" pos:column="34"/></name></name> <operator pos:line="185" pos:column="35">==<pos:position pos:line="185" pos:column="37"/></operator> <literal type="number" pos:line="185" pos:column="38">1<pos:position pos:line="185" pos:column="39"/></literal>
		<operator pos:line="186" pos:column="17">||<pos:position pos:line="186" pos:column="19"/></operator> <name><name pos:line="186" pos:column="20">variant<pos:position pos:line="186" pos:column="27"/></name><index pos:line="186" pos:column="27">[<expr><literal type="number" pos:line="186" pos:column="28">0<pos:position pos:line="186" pos:column="29"/></literal></expr>]<pos:position pos:line="186" pos:column="30"/></index></name><operator pos:line="186" pos:column="30">.<pos:position pos:line="186" pos:column="31"/></operator><name pos:line="186" pos:column="31">quality<pos:position pos:line="186" pos:column="38"/></name> <operator pos:line="186" pos:column="39">!=<pos:position pos:line="186" pos:column="41"/></operator> <name><name pos:line="186" pos:column="42">variant<pos:position pos:line="186" pos:column="49"/></name><index pos:line="186" pos:column="49">[<expr><literal type="number" pos:line="186" pos:column="50">1<pos:position pos:line="186" pos:column="51"/></literal></expr>]<pos:position pos:line="186" pos:column="52"/></index></name><operator pos:line="186" pos:column="52">.<pos:position pos:line="186" pos:column="53"/></operator><name pos:line="186" pos:column="53">quality<pos:position pos:line="186" pos:column="60"/></name><operator pos:line="186" pos:column="60">)<pos:position pos:line="186" pos:column="61"/></operator></expr>)<pos:position pos:line="186" pos:column="62"/></condition><then pos:line="186" pos:column="62"> <block pos:line="186" pos:column="63">{

            <expr_stmt><expr><name pos:line="188" pos:column="13">nuri<pos:position pos:line="188" pos:column="17"/></name> <operator pos:line="188" pos:column="18">=<pos:position pos:line="188" pos:column="19"/></operator> <call><name pos:line="188" pos:column="20">ap_escape_uri<pos:position pos:line="188" pos:column="33"/></name><argument_list pos:line="188" pos:column="33">(<argument><expr><name><name pos:line="188" pos:column="34">r<pos:position pos:line="188" pos:column="35"/></name><operator pos:line="188" pos:column="35">-&gt;<pos:position pos:line="188" pos:column="40"/></operator><name pos:line="188" pos:column="37">pool<pos:position pos:line="188" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="188" pos:column="43">apr_pstrcat<pos:position pos:line="188" pos:column="54"/></name><argument_list pos:line="188" pos:column="54">(<argument><expr><name><name pos:line="188" pos:column="55">r<pos:position pos:line="188" pos:column="56"/></name><operator pos:line="188" pos:column="56">-&gt;<pos:position pos:line="188" pos:column="61"/></operator><name pos:line="188" pos:column="58">pool<pos:position pos:line="188" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="64">url<pos:position pos:line="188" pos:column="67"/></name></expr></argument>,
						     <argument><expr><name><name pos:line="189" pos:column="54">variant<pos:position pos:line="189" pos:column="61"/></name><index pos:line="189" pos:column="61">[<expr><literal type="number" pos:line="189" pos:column="62">0<pos:position pos:line="189" pos:column="63"/></literal></expr>]<pos:position pos:line="189" pos:column="64"/></index></name><operator pos:line="189" pos:column="64">.<pos:position pos:line="189" pos:column="65"/></operator><name pos:line="189" pos:column="65">name<pos:position pos:line="189" pos:column="69"/></name></expr></argument>,
						     <argument><expr><name><name pos:line="190" pos:column="54">r<pos:position pos:line="190" pos:column="55"/></name><operator pos:line="190" pos:column="55">-&gt;<pos:position pos:line="190" pos:column="60"/></operator><name pos:line="190" pos:column="57">path_info<pos:position pos:line="190" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="68">NULL<pos:position pos:line="190" pos:column="72"/></name></expr></argument>)<pos:position pos:line="190" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="190" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="75"/></expr_stmt>
	    <if pos:line="191" pos:column="13">if <condition pos:line="191" pos:column="16">(<expr><name><name pos:line="191" pos:column="17">r<pos:position pos:line="191" pos:column="18"/></name><operator pos:line="191" pos:column="18">-&gt;<pos:position pos:line="191" pos:column="23"/></operator><name pos:line="191" pos:column="20">parsed_uri<pos:position pos:line="191" pos:column="30"/></name><operator pos:line="191" pos:column="30">.<pos:position pos:line="191" pos:column="31"/></operator><name pos:line="191" pos:column="31">query<pos:position pos:line="191" pos:column="36"/></name></name></expr>)<pos:position pos:line="191" pos:column="37"/></condition><then pos:line="191" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="192" pos:column="17">nuri<pos:position pos:line="192" pos:column="21"/></name> <operator pos:line="192" pos:column="22">=<pos:position pos:line="192" pos:column="23"/></operator> <call><name pos:line="192" pos:column="24">apr_pstrcat<pos:position pos:line="192" pos:column="35"/></name><argument_list pos:line="192" pos:column="35">(<argument><expr><name><name pos:line="192" pos:column="36">r<pos:position pos:line="192" pos:column="37"/></name><operator pos:line="192" pos:column="37">-&gt;<pos:position pos:line="192" pos:column="42"/></operator><name pos:line="192" pos:column="39">pool<pos:position pos:line="192" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="45">nuri<pos:position pos:line="192" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="51">"?"<pos:position pos:line="192" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="192" pos:column="56">r<pos:position pos:line="192" pos:column="57"/></name><operator pos:line="192" pos:column="57">-&gt;<pos:position pos:line="192" pos:column="62"/></operator><name pos:line="192" pos:column="59">parsed_uri<pos:position pos:line="192" pos:column="69"/></name><operator pos:line="192" pos:column="69">.<pos:position pos:line="192" pos:column="70"/></operator><name pos:line="192" pos:column="70">query<pos:position pos:line="192" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="77">NULL<pos:position pos:line="192" pos:column="81"/></name></expr></argument>)<pos:position pos:line="192" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="83"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="194" pos:column="13">apr_table_setn<pos:position pos:line="194" pos:column="27"/></name><argument_list pos:line="194" pos:column="27">(<argument><expr><name><name pos:line="194" pos:column="28">r<pos:position pos:line="194" pos:column="29"/></name><operator pos:line="194" pos:column="29">-&gt;<pos:position pos:line="194" pos:column="34"/></operator><name pos:line="194" pos:column="31">headers_out<pos:position pos:line="194" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="44">"Location"<pos:position pos:line="194" pos:column="54"/></literal></expr></argument>,
			  <argument><expr><call><name pos:line="195" pos:column="27">ap_construct_url<pos:position pos:line="195" pos:column="43"/></name><argument_list pos:line="195" pos:column="43">(<argument><expr><name><name pos:line="195" pos:column="44">r<pos:position pos:line="195" pos:column="45"/></name><operator pos:line="195" pos:column="45">-&gt;<pos:position pos:line="195" pos:column="50"/></operator><name pos:line="195" pos:column="47">pool<pos:position pos:line="195" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="53">nuri<pos:position pos:line="195" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="59">r<pos:position pos:line="195" pos:column="60"/></name></expr></argument>)<pos:position pos:line="195" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="195" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="63"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="197" pos:column="13">ap_log_rerror<pos:position pos:line="197" pos:column="26"/></name><argument_list pos:line="197" pos:column="26">(<argument><expr><name pos:line="197" pos:column="27">APLOG_MARK<pos:position pos:line="197" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="39">APLOG_INFO<pos:position pos:line="197" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="51">APR_SUCCESS<pos:position pos:line="197" pos:column="62"/></name></expr></argument>,
			  <argument><expr><name pos:line="198" pos:column="27">r<pos:position pos:line="198" pos:column="28"/></name></expr></argument>, 
			  <argument><expr><ternary><condition><expr><name pos:line="199" pos:column="27">ref<pos:position pos:line="199" pos:column="30"/></name></expr> ?<pos:position pos:line="199" pos:column="32"/></condition><then pos:line="199" pos:column="32"> <expr><literal type="string" pos:line="199" pos:column="33">"Fixed spelling: %s to %s from %s"<pos:position pos:line="199" pos:column="67"/></literal></expr>
			      <pos:position pos:line="200" pos:column="10"/></then><else pos:line="200" pos:column="31">: <expr><literal type="string" pos:line="200" pos:column="33">"Fixed spelling: %s to %s"<pos:position pos:line="200" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
			  <argument><expr><name><name pos:line="201" pos:column="27">r<pos:position pos:line="201" pos:column="28"/></name><operator pos:line="201" pos:column="28">-&gt;<pos:position pos:line="201" pos:column="33"/></operator><name pos:line="201" pos:column="30">uri<pos:position pos:line="201" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="35">nuri<pos:position pos:line="201" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="41">ref<pos:position pos:line="201" pos:column="44"/></name></expr></argument>)<pos:position pos:line="201" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="46"/></expr_stmt>

            <return pos:line="203" pos:column="13">return <expr><name pos:line="203" pos:column="20">HTTP_MOVED_PERMANENTLY<pos:position pos:line="203" pos:column="42"/></name></expr>;<pos:position pos:line="203" pos:column="43"/></return>
        }<pos:position pos:line="204" pos:column="10"/></block></then>
        <comment type="block" pos:line="205" pos:column="9">/*
         * Otherwise, a "[300] Multiple Choices" list with the variants is
         * returned.
         */</comment>
        <else pos:line="209" pos:column="9">else <block pos:line="209" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="210" pos:column="13">apr_pool_t<pos:position pos:line="210" pos:column="23"/></name> <modifier pos:line="210" pos:column="24">*<pos:position pos:line="210" pos:column="25"/></modifier></type><name pos:line="210" pos:column="25">p<pos:position pos:line="210" pos:column="26"/></name></decl>;<pos:position pos:line="210" pos:column="27"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="211" pos:column="13">apr_table_t<pos:position pos:line="211" pos:column="24"/></name> <modifier pos:line="211" pos:column="25">*<pos:position pos:line="211" pos:column="26"/></modifier></type><name pos:line="211" pos:column="26">notes<pos:position pos:line="211" pos:column="31"/></name></decl>;<pos:position pos:line="211" pos:column="32"/></decl_stmt>
	    <decl_stmt><decl><type><name pos:line="212" pos:column="13">apr_pool_t<pos:position pos:line="212" pos:column="23"/></name> <modifier pos:line="212" pos:column="24">*<pos:position pos:line="212" pos:column="25"/></modifier></type><name pos:line="212" pos:column="25">sub_pool<pos:position pos:line="212" pos:column="33"/></name></decl>;<pos:position pos:line="212" pos:column="34"/></decl_stmt>
	    <decl_stmt><decl><type><name pos:line="213" pos:column="13">apr_array_header_t<pos:position pos:line="213" pos:column="31"/></name> <modifier pos:line="213" pos:column="32">*<pos:position pos:line="213" pos:column="33"/></modifier></type><name pos:line="213" pos:column="33">t<pos:position pos:line="213" pos:column="34"/></name></decl>;<pos:position pos:line="213" pos:column="35"/></decl_stmt>
	    <decl_stmt><decl><type><name pos:line="214" pos:column="13">apr_array_header_t<pos:position pos:line="214" pos:column="31"/></name> <modifier pos:line="214" pos:column="32">*<pos:position pos:line="214" pos:column="33"/></modifier></type><name pos:line="214" pos:column="33">v<pos:position pos:line="214" pos:column="34"/></name></decl>;<pos:position pos:line="214" pos:column="35"/></decl_stmt>


            <if pos:line="217" pos:column="13">if <condition pos:line="217" pos:column="16">(<expr><name><name pos:line="217" pos:column="17">r<pos:position pos:line="217" pos:column="18"/></name><operator pos:line="217" pos:column="18">-&gt;<pos:position pos:line="217" pos:column="23"/></operator><name pos:line="217" pos:column="20">main<pos:position pos:line="217" pos:column="24"/></name></name> <operator pos:line="217" pos:column="25">==<pos:position pos:line="217" pos:column="27"/></operator> <name pos:line="217" pos:column="28">NULL<pos:position pos:line="217" pos:column="32"/></name></expr>)<pos:position pos:line="217" pos:column="33"/></condition><then pos:line="217" pos:column="33"> <block pos:line="217" pos:column="34">{
                <expr_stmt><expr><name pos:line="218" pos:column="17">p<pos:position pos:line="218" pos:column="18"/></name> <operator pos:line="218" pos:column="19">=<pos:position pos:line="218" pos:column="20"/></operator> <name><name pos:line="218" pos:column="21">r<pos:position pos:line="218" pos:column="22"/></name><operator pos:line="218" pos:column="22">-&gt;<pos:position pos:line="218" pos:column="27"/></operator><name pos:line="218" pos:column="24">pool<pos:position pos:line="218" pos:column="28"/></name></name></expr>;<pos:position pos:line="218" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="219" pos:column="17">notes<pos:position pos:line="219" pos:column="22"/></name> <operator pos:line="219" pos:column="23">=<pos:position pos:line="219" pos:column="24"/></operator> <name><name pos:line="219" pos:column="25">r<pos:position pos:line="219" pos:column="26"/></name><operator pos:line="219" pos:column="26">-&gt;<pos:position pos:line="219" pos:column="31"/></operator><name pos:line="219" pos:column="28">notes<pos:position pos:line="219" pos:column="33"/></name></name></expr>;<pos:position pos:line="219" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="220" pos:column="14"/></block></then>
            <else pos:line="221" pos:column="13">else <block pos:line="221" pos:column="18">{
                <expr_stmt><expr><name pos:line="222" pos:column="17">p<pos:position pos:line="222" pos:column="18"/></name> <operator pos:line="222" pos:column="19">=<pos:position pos:line="222" pos:column="20"/></operator> <name><name pos:line="222" pos:column="21">r<pos:position pos:line="222" pos:column="22"/></name><operator pos:line="222" pos:column="22">-&gt;<pos:position pos:line="222" pos:column="27"/></operator><name pos:line="222" pos:column="24">main<pos:position pos:line="222" pos:column="28"/></name><operator pos:line="222" pos:column="28">-&gt;<pos:position pos:line="222" pos:column="33"/></operator><name pos:line="222" pos:column="30">pool<pos:position pos:line="222" pos:column="34"/></name></name></expr>;<pos:position pos:line="222" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name pos:line="223" pos:column="17">notes<pos:position pos:line="223" pos:column="22"/></name> <operator pos:line="223" pos:column="23">=<pos:position pos:line="223" pos:column="24"/></operator> <name><name pos:line="223" pos:column="25">r<pos:position pos:line="223" pos:column="26"/></name><operator pos:line="223" pos:column="26">-&gt;<pos:position pos:line="223" pos:column="31"/></operator><name pos:line="223" pos:column="28">main<pos:position pos:line="223" pos:column="32"/></name><operator pos:line="223" pos:column="32">-&gt;<pos:position pos:line="223" pos:column="37"/></operator><name pos:line="223" pos:column="34">notes<pos:position pos:line="223" pos:column="39"/></name></name></expr>;<pos:position pos:line="223" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="224" pos:column="14"/></block></else></if>

	    <if pos:line="226" pos:column="13">if <condition pos:line="226" pos:column="16">(<expr><call><name pos:line="226" pos:column="17">apr_pool_create<pos:position pos:line="226" pos:column="32"/></name><argument_list pos:line="226" pos:column="32">(<argument><expr><operator pos:line="226" pos:column="33">&amp;<pos:position pos:line="226" pos:column="38"/></operator><name pos:line="226" pos:column="34">sub_pool<pos:position pos:line="226" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="44">p<pos:position pos:line="226" pos:column="45"/></name></expr></argument>)<pos:position pos:line="226" pos:column="46"/></argument_list></call> <operator pos:line="226" pos:column="47">!=<pos:position pos:line="226" pos:column="49"/></operator> <name pos:line="226" pos:column="50">APR_SUCCESS<pos:position pos:line="226" pos:column="61"/></name></expr>)<pos:position pos:line="226" pos:column="62"/></condition><then pos:line="226" pos:column="62">
		<block type="pseudo"><return pos:line="227" pos:column="17">return <expr><name pos:line="227" pos:column="24">DECLINED<pos:position pos:line="227" pos:column="32"/></name></expr>;<pos:position pos:line="227" pos:column="33"/></return></block></then></if>

	    <expr_stmt><expr><name pos:line="229" pos:column="13">t<pos:position pos:line="229" pos:column="14"/></name> <operator pos:line="229" pos:column="15">=<pos:position pos:line="229" pos:column="16"/></operator> <call><name pos:line="229" pos:column="17">apr_array_make<pos:position pos:line="229" pos:column="31"/></name><argument_list pos:line="229" pos:column="31">(<argument><expr><name pos:line="229" pos:column="32">sub_pool<pos:position pos:line="229" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="229" pos:column="42">candidates<pos:position pos:line="229" pos:column="52"/></name><operator pos:line="229" pos:column="52">-&gt;<pos:position pos:line="229" pos:column="57"/></operator><name pos:line="229" pos:column="54">nelts<pos:position pos:line="229" pos:column="59"/></name></name> <operator pos:line="229" pos:column="60">*<pos:position pos:line="229" pos:column="61"/></operator> <literal type="number" pos:line="229" pos:column="62">8<pos:position pos:line="229" pos:column="63"/></literal> <operator pos:line="229" pos:column="64">+<pos:position pos:line="229" pos:column="65"/></operator> <literal type="number" pos:line="229" pos:column="66">8<pos:position pos:line="229" pos:column="67"/></literal></expr></argument>,
			      <argument><expr><sizeof pos:line="230" pos:column="31">sizeof<argument_list pos:line="230" pos:column="37">(<argument><expr><name pos:line="230" pos:column="38">char<pos:position pos:line="230" pos:column="42"/></name> <operator pos:line="230" pos:column="43">*<pos:position pos:line="230" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="230" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="230" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="47"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="231" pos:column="13">v<pos:position pos:line="231" pos:column="14"/></name> <operator pos:line="231" pos:column="15">=<pos:position pos:line="231" pos:column="16"/></operator> <call><name pos:line="231" pos:column="17">apr_array_make<pos:position pos:line="231" pos:column="31"/></name><argument_list pos:line="231" pos:column="31">(<argument><expr><name pos:line="231" pos:column="32">sub_pool<pos:position pos:line="231" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="231" pos:column="42">candidates<pos:position pos:line="231" pos:column="52"/></name><operator pos:line="231" pos:column="52">-&gt;<pos:position pos:line="231" pos:column="57"/></operator><name pos:line="231" pos:column="54">nelts<pos:position pos:line="231" pos:column="59"/></name></name> <operator pos:line="231" pos:column="60">*<pos:position pos:line="231" pos:column="61"/></operator> <literal type="number" pos:line="231" pos:column="62">5<pos:position pos:line="231" pos:column="63"/></literal></expr></argument>,
			      <argument><expr><sizeof pos:line="232" pos:column="31">sizeof<argument_list pos:line="232" pos:column="37">(<argument><expr><name pos:line="232" pos:column="38">char<pos:position pos:line="232" pos:column="42"/></name> <operator pos:line="232" pos:column="43">*<pos:position pos:line="232" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="232" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="232" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="47"/></expr_stmt>

            <comment type="block" pos:line="234" pos:column="13">/* Generate the response text. */</comment>

	    <expr_stmt><expr><operator pos:line="236" pos:column="13">*<pos:position pos:line="236" pos:column="14"/></operator><operator pos:line="236" pos:column="14">(<pos:position pos:line="236" pos:column="15"/></operator><specifier pos:line="236" pos:column="15">const<pos:position pos:line="236" pos:column="20"/></specifier> <name pos:line="236" pos:column="21">char<pos:position pos:line="236" pos:column="25"/></name> <operator pos:line="236" pos:column="26">*<pos:position pos:line="236" pos:column="27"/></operator><operator pos:line="236" pos:column="27">*<pos:position pos:line="236" pos:column="28"/></operator><operator pos:line="236" pos:column="28">)<pos:position pos:line="236" pos:column="29"/></operator><call><name pos:line="236" pos:column="29">apr_array_push<pos:position pos:line="236" pos:column="43"/></name><argument_list pos:line="236" pos:column="43">(<argument><expr><name pos:line="236" pos:column="44">t<pos:position pos:line="236" pos:column="45"/></name></expr></argument>)<pos:position pos:line="236" pos:column="46"/></argument_list></call> <operator pos:line="236" pos:column="47">=<pos:position pos:line="236" pos:column="48"/></operator>
			  <literal type="string" pos:line="237" pos:column="27">"The document name you requested (&lt;code&gt;"<pos:position pos:line="237" pos:column="74"/></literal></expr>;<pos:position pos:line="237" pos:column="69"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="238" pos:column="13">*<pos:position pos:line="238" pos:column="14"/></operator><operator pos:line="238" pos:column="14">(<pos:position pos:line="238" pos:column="15"/></operator><specifier pos:line="238" pos:column="15">const<pos:position pos:line="238" pos:column="20"/></specifier> <name pos:line="238" pos:column="21">char<pos:position pos:line="238" pos:column="25"/></name> <operator pos:line="238" pos:column="26">*<pos:position pos:line="238" pos:column="27"/></operator><operator pos:line="238" pos:column="27">*<pos:position pos:line="238" pos:column="28"/></operator><operator pos:line="238" pos:column="28">)<pos:position pos:line="238" pos:column="29"/></operator><call><name pos:line="238" pos:column="29">apr_array_push<pos:position pos:line="238" pos:column="43"/></name><argument_list pos:line="238" pos:column="43">(<argument><expr><name pos:line="238" pos:column="44">t<pos:position pos:line="238" pos:column="45"/></name></expr></argument>)<pos:position pos:line="238" pos:column="46"/></argument_list></call> <operator pos:line="238" pos:column="47">=<pos:position pos:line="238" pos:column="48"/></operator> <call><name pos:line="238" pos:column="49">ap_escape_html<pos:position pos:line="238" pos:column="63"/></name><argument_list pos:line="238" pos:column="63">(<argument><expr><name pos:line="238" pos:column="64">sub_pool<pos:position pos:line="238" pos:column="72"/></name></expr></argument>, <argument><expr><name><name pos:line="238" pos:column="74">r<pos:position pos:line="238" pos:column="75"/></name><operator pos:line="238" pos:column="75">-&gt;<pos:position pos:line="238" pos:column="80"/></operator><name pos:line="238" pos:column="77">uri<pos:position pos:line="238" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="238" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="82"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="239" pos:column="13">*<pos:position pos:line="239" pos:column="14"/></operator><operator pos:line="239" pos:column="14">(<pos:position pos:line="239" pos:column="15"/></operator><specifier pos:line="239" pos:column="15">const<pos:position pos:line="239" pos:column="20"/></specifier> <name pos:line="239" pos:column="21">char<pos:position pos:line="239" pos:column="25"/></name> <operator pos:line="239" pos:column="26">*<pos:position pos:line="239" pos:column="27"/></operator><operator pos:line="239" pos:column="27">*<pos:position pos:line="239" pos:column="28"/></operator><operator pos:line="239" pos:column="28">)<pos:position pos:line="239" pos:column="29"/></operator><call><name pos:line="239" pos:column="29">apr_array_push<pos:position pos:line="239" pos:column="43"/></name><argument_list pos:line="239" pos:column="43">(<argument><expr><name pos:line="239" pos:column="44">t<pos:position pos:line="239" pos:column="45"/></name></expr></argument>)<pos:position pos:line="239" pos:column="46"/></argument_list></call> <operator pos:line="239" pos:column="47">=<pos:position pos:line="239" pos:column="48"/></operator>
			   <literal type="string" pos:line="240" pos:column="28">"&lt;/code&gt;) could not be found on this server.\n"<pos:position pos:line="240" pos:column="81"/></literal>
			   <literal type="string" pos:line="241" pos:column="28">"However, we found documents with names similar "<pos:position pos:line="241" pos:column="77"/></literal>
			   <literal type="string" pos:line="242" pos:column="28">"to the one you requested.&lt;p&gt;"<pos:position pos:line="242" pos:column="64"/></literal>
			   <literal type="string" pos:line="243" pos:column="28">"Available documents:\n&lt;ul&gt;\n"<pos:position pos:line="243" pos:column="64"/></literal></expr>;<pos:position pos:line="243" pos:column="59"/></expr_stmt>

            <for pos:line="245" pos:column="13">for <control pos:line="245" pos:column="17">(<init><expr><macro><name pos:line="245" pos:column="18">i<pos:position pos:line="245" pos:column="19"/></name></macro></expr></init></control></for></block></else></if></block></then></if></block></function> </unit>

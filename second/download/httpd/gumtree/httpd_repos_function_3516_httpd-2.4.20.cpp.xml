<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3516_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">connect_to_peer<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">apr_socket_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">newsock<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">request_rec<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">r<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">apr_sockaddr_t<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">backend_addrs<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="4" pos:column="37">const<pos:position pos:line="4" pos:column="42"/></specifier> <name pos:line="4" pos:column="43">char<pos:position pos:line="4" pos:column="47"/></name> <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier></type><name pos:line="4" pos:column="49">backend_name<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="5" pos:column="37">apr_interval_time_t<pos:position pos:line="5" pos:column="56"/></name></type> <name pos:line="5" pos:column="57">timeout<pos:position pos:line="5" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="65"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">APR_EINVAL<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt> <comment type="block" pos:line="7" pos:column="35">/* returned if no backend addr was provided
                                   */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">connected<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_sockaddr_t<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">addr<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name pos:line="10" pos:column="28">backend_addrs<pos:position pos:line="10" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name pos:line="12" pos:column="12">addr<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&amp;&amp;<pos:position pos:line="12" pos:column="27"/></operator> <operator pos:line="12" pos:column="20">!<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">connected<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition> <block pos:line="12" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">loglevel<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><ternary><condition><expr><name><name pos:line="13" pos:column="24">addr<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">next<pos:position pos:line="13" pos:column="34"/></name></name></expr> ?<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36"> <expr><name pos:line="13" pos:column="37">APLOG_DEBUG<pos:position pos:line="13" pos:column="48"/></name></expr> <pos:position pos:line="13" pos:column="49"/></then><else pos:line="13" pos:column="49">: <expr><name pos:line="13" pos:column="51">APLOG_ERR<pos:position pos:line="13" pos:column="60"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="13" pos:column="61"/></decl_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">apr_socket_create<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">newsock<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="41">addr<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">family<pos:position pos:line="14" pos:column="53"/></name></name></expr></argument>,
                               <argument><expr><name pos:line="15" pos:column="32">SOCK_STREAM<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="45">0<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="48">r<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">-&gt;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="51">pool<pos:position pos:line="15" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">rv<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">!=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">APR_SUCCESS<pos:position pos:line="16" pos:column="30"/></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31"> <block pos:line="16" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">ap_log_rerror<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">APLOG_MARK<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">loglevel<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">rv<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">r<pos:position pos:line="17" pos:column="54"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="18" pos:column="27">APLOGNO<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><literal type="number" pos:line="18" pos:column="35">02494<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call> <literal type="string" pos:line="18" pos:column="42">"error creating family %d socket "<pos:position pos:line="18" pos:column="76"/></literal>
                          <literal type="string" pos:line="19" pos:column="27">"for target %s"<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="20" pos:column="27">addr<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">family<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">backend_name<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">addr<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name><name pos:line="21" pos:column="20">addr<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">next<pos:position pos:line="21" pos:column="30"/></name></name></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
            <continue pos:line="22" pos:column="13">continue;<pos:position pos:line="22" pos:column="22"/></continue>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="25" pos:column="9">apr_socket_opt_set<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><operator pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="29">newsock<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">APR_TCP_NODELAY<pos:position pos:line="25" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="55">1<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">apr_socket_timeout_set<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><operator pos:line="26" pos:column="32">*<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">newsock<pos:position pos:line="26" pos:column="40"/></name></expr></argument>,
                               <argument><expr><ternary><condition><expr><name pos:line="27" pos:column="32">timeout<pos:position pos:line="27" pos:column="39"/></name></expr> ?<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41"> <expr><name pos:line="27" pos:column="42">timeout<pos:position pos:line="27" pos:column="49"/></name></expr> <pos:position pos:line="27" pos:column="50"/></then><else pos:line="27" pos:column="50">: <expr><name><name pos:line="27" pos:column="52">r<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">-&gt;<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="55">server<pos:position pos:line="27" pos:column="61"/></name><operator pos:line="27" pos:column="61">-&gt;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="63">timeout<pos:position pos:line="27" pos:column="70"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="72"/></expr_stmt>

        <expr_stmt><expr><name pos:line="29" pos:column="9">rv<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">apr_socket_connect<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><operator pos:line="29" pos:column="33">*<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">newsock<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">addr<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">rv<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">!=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">APR_SUCCESS<pos:position pos:line="30" pos:column="30"/></name></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31"> <block pos:line="30" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">apr_socket_close<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><operator pos:line="31" pos:column="30">*<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">newsock<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">ap_log_rerror<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">APLOG_MARK<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">loglevel<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">rv<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="53">r<pos:position pos:line="32" pos:column="54"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="33" pos:column="27">APLOGNO<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><literal type="number" pos:line="33" pos:column="35">02495<pos:position pos:line="33" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call> <literal type="string" pos:line="33" pos:column="42">"attempt to connect to %pI (%s) "<pos:position pos:line="33" pos:column="75"/></literal>
                          <literal type="string" pos:line="34" pos:column="27">"failed"<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="37">addr<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">backend_name<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">addr<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name><name pos:line="35" pos:column="20">addr<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">next<pos:position pos:line="35" pos:column="30"/></name></name></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
            <continue pos:line="36" pos:column="13">continue;<pos:position pos:line="36" pos:column="22"/></continue>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="39" pos:column="9">connected<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="21">1<pos:position pos:line="39" pos:column="22"/></literal></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></while>

    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">rv<pos:position pos:line="42" pos:column="14"/></name></expr>;<pos:position pos:line="42" pos:column="15"/></return>
<cpp:undef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">undef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">FN_LOG_MARK<pos:position pos:line="43" pos:column="19"/></name></cpp:undef>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

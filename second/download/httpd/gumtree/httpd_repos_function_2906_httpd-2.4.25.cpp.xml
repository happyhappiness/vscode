<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2906_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">meta<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">metafix<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">request_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">r<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">buf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">meta<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">ret<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">NULL<pos:position pos:line="3" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">offs<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">q<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">header<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">content<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_regmatch_t<pos:position pos:line="9" pos:column="18"/></name></type> <name><name pos:line="9" pos:column="19">pmatch<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><literal type="number" pos:line="9" pos:column="26">2<pos:position pos:line="9" pos:column="27"/></literal></expr>]<pos:position pos:line="9" pos:column="28"/></index></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">delim<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">!<pos:position pos:line="12" pos:column="13"/></operator><call><name pos:line="12" pos:column="13">ap_regexec<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">seek_meta<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">buf<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">+<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">offs<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="45">2<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">pmatch<pos:position pos:line="12" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="56">0<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="59"/></condition> <block pos:line="12" pos:column="60">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">header<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">content<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">NULL<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">buf<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">+<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">offs<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">+<pos:position pos:line="15" pos:column="22"/></operator><name><name pos:line="15" pos:column="22">pmatch<pos:position pos:line="15" pos:column="28"/></name><index pos:line="15" pos:column="28">[<expr><literal type="number" pos:line="15" pos:column="29">1<pos:position pos:line="15" pos:column="30"/></literal></expr>]<pos:position pos:line="15" pos:column="31"/></index></name><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">rm_eo<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
        <while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">!<pos:position pos:line="16" pos:column="17"/></operator><call><name pos:line="16" pos:column="17">apr_isalpha<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><operator pos:line="16" pos:column="29">*<pos:position pos:line="16" pos:column="30"/></operator><operator pos:line="16" pos:column="30">++<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">p<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="35"/></condition><block type="pseudo"><empty_stmt pos:line="16" pos:column="35">;<pos:position pos:line="16" pos:column="36"/></empty_stmt></block></while>
        <for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">q<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">p<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></init> <condition><expr><call><name pos:line="17" pos:column="21">apr_isalnum<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><operator pos:line="17" pos:column="33">*<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">q<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call> <operator pos:line="17" pos:column="37">||<pos:position pos:line="17" pos:column="39"/></operator> <operator pos:line="17" pos:column="40">(<pos:position pos:line="17" pos:column="41"/></operator><operator pos:line="17" pos:column="41">*<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">q<pos:position pos:line="17" pos:column="43"/></name> <operator pos:line="17" pos:column="44">==<pos:position pos:line="17" pos:column="46"/></operator> <literal type="char" pos:line="17" pos:column="47">'-'<pos:position pos:line="17" pos:column="50"/></literal><operator pos:line="17" pos:column="50">)<pos:position pos:line="17" pos:column="51"/></operator></expr>;<pos:position pos:line="17" pos:column="52"/></condition> <incr><expr><operator pos:line="17" pos:column="53">++<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="55">q<pos:position pos:line="17" pos:column="56"/></name></expr></incr>)<pos:position pos:line="17" pos:column="57"/></control><block type="pseudo"><empty_stmt pos:line="17" pos:column="57">;<pos:position pos:line="17" pos:column="58"/></empty_stmt></block></for>
        <expr_stmt><expr><name pos:line="18" pos:column="9">header<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">apr_pstrndup<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name><name pos:line="18" pos:column="31">r<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">pool<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">p<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">q<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">p<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">strncasecmp<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">header<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"Content-"<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="45">8<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
            <comment type="block" pos:line="20" pos:column="13">/* find content=... string */</comment>
            <expr_stmt><expr><name pos:line="21" pos:column="13">p<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">apr_strmatch<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">seek_content<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">buf<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">+<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="48">offs<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">+<pos:position pos:line="21" pos:column="53"/></operator><name><name pos:line="21" pos:column="53">pmatch<pos:position pos:line="21" pos:column="59"/></name><index pos:line="21" pos:column="59">[<expr><literal type="number" pos:line="21" pos:column="60">0<pos:position pos:line="21" pos:column="61"/></literal></expr>]<pos:position pos:line="21" pos:column="62"/></index></name><operator pos:line="21" pos:column="62">.<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="63">rm_so<pos:position pos:line="21" pos:column="68"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="22" pos:column="31">pmatch<pos:position pos:line="22" pos:column="37"/></name><index pos:line="22" pos:column="37">[<expr><literal type="number" pos:line="22" pos:column="38">0<pos:position pos:line="22" pos:column="39"/></literal></expr>]<pos:position pos:line="22" pos:column="40"/></index></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">rm_eo<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">-<pos:position pos:line="22" pos:column="48"/></operator> <name><name pos:line="22" pos:column="49">pmatch<pos:position pos:line="22" pos:column="55"/></name><index pos:line="22" pos:column="55">[<expr><literal type="number" pos:line="22" pos:column="56">0<pos:position pos:line="22" pos:column="57"/></literal></expr>]<pos:position pos:line="22" pos:column="58"/></index></name><operator pos:line="22" pos:column="58">.<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">rm_so<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt>
            <comment type="block" pos:line="23" pos:column="13">/* if it doesn't contain "content", ignore, don't crash! */</comment>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">p<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">!=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">NULL<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27"> <block pos:line="24" pos:column="28">{
                <while pos:line="25" pos:column="17">while <condition pos:line="25" pos:column="23">(<expr><operator pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">p<pos:position pos:line="25" pos:column="26"/></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition> <block pos:line="25" pos:column="28">{
                    <expr_stmt><expr><name pos:line="26" pos:column="21">p<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">+=<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="26">7<pos:position pos:line="26" pos:column="27"/></literal></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
                    <while pos:line="27" pos:column="21">while <condition pos:line="27" pos:column="27">(<expr><call><name pos:line="27" pos:column="28">apr_isspace<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><operator pos:line="27" pos:column="40">*<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">p<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="44"/></condition>
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="28" pos:column="25">++<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="27">p<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt></block></while>
                    <comment type="block" pos:line="29" pos:column="21">/* XXX Should we search for another content= pattern? */</comment>
                    <if pos:line="30" pos:column="21">if <condition pos:line="30" pos:column="24">(<expr><operator pos:line="30" pos:column="25">*<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">p<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">!=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="char" pos:line="30" pos:column="31">'='<pos:position pos:line="30" pos:column="34"/></literal></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35">
                        <block type="pseudo"><break pos:line="31" pos:column="25">break;<pos:position pos:line="31" pos:column="31"/></break></block></then></if>
                    <while pos:line="32" pos:column="21">while <condition pos:line="32" pos:column="27">(<expr><operator pos:line="32" pos:column="28">*<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">p<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">&amp;&amp;<pos:position pos:line="32" pos:column="41"/></operator> <call><name pos:line="32" pos:column="34">apr_isspace<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><operator pos:line="32" pos:column="46">*<pos:position pos:line="32" pos:column="47"/></operator><operator pos:line="32" pos:column="47">++<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="49">p<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="52"/></condition><block type="pseudo"><empty_stmt pos:line="32" pos:column="52">;<pos:position pos:line="32" pos:column="53"/></empty_stmt></block></while>
                    <if pos:line="33" pos:column="21">if <condition pos:line="33" pos:column="24">(<expr><operator pos:line="33" pos:column="25">(<pos:position pos:line="33" pos:column="26"/></operator><operator pos:line="33" pos:column="26">*<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">p<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">==<pos:position pos:line="33" pos:column="31"/></operator> <literal type="char" pos:line="33" pos:column="32">'\''<pos:position pos:line="33" pos:column="36"/></literal><operator pos:line="33" pos:column="36">)<pos:position pos:line="33" pos:column="37"/></operator> <operator pos:line="33" pos:column="38">||<pos:position pos:line="33" pos:column="40"/></operator> <operator pos:line="33" pos:column="41">(<pos:position pos:line="33" pos:column="42"/></operator><operator pos:line="33" pos:column="42">*<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="43">p<pos:position pos:line="33" pos:column="44"/></name> <operator pos:line="33" pos:column="45">==<pos:position pos:line="33" pos:column="47"/></operator> <literal type="char" pos:line="33" pos:column="48">'"'<pos:position pos:line="33" pos:column="51"/></literal><operator pos:line="33" pos:column="51">)<pos:position pos:line="33" pos:column="52"/></operator></expr>)<pos:position pos:line="33" pos:column="53"/></condition><then pos:line="33" pos:column="53"> <block pos:line="33" pos:column="54">{
                        <expr_stmt><expr><name pos:line="34" pos:column="25">delim<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <operator pos:line="34" pos:column="33">*<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">p<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">++<pos:position pos:line="34" pos:column="37"/></operator></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
                        <for pos:line="35" pos:column="25">for <control pos:line="35" pos:column="29">(<init><expr><name pos:line="35" pos:column="30">q<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <name pos:line="35" pos:column="34">p<pos:position pos:line="35" pos:column="35"/></name></expr>;<pos:position pos:line="35" pos:column="36"/></init> <condition><expr><operator pos:line="35" pos:column="37">*<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">q<pos:position pos:line="35" pos:column="39"/></name> <operator pos:line="35" pos:column="40">&amp;&amp;<pos:position pos:line="35" pos:column="50"/></operator> <operator pos:line="35" pos:column="43">*<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="44">q<pos:position pos:line="35" pos:column="45"/></name> <operator pos:line="35" pos:column="46">!=<pos:position pos:line="35" pos:column="48"/></operator> <name pos:line="35" pos:column="49">delim<pos:position pos:line="35" pos:column="54"/></name></expr>;<pos:position pos:line="35" pos:column="55"/></condition> <incr><expr><operator pos:line="35" pos:column="56">++<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="58">q<pos:position pos:line="35" pos:column="59"/></name></expr></incr>)<pos:position pos:line="35" pos:column="60"/></control><block type="pseudo"><empty_stmt pos:line="35" pos:column="60">;<pos:position pos:line="35" pos:column="61"/></empty_stmt></block></for>
                        <comment type="block" pos:line="36" pos:column="25">/* No terminating delimiter found? Skip the boggus directive */</comment>
                        <if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><operator pos:line="37" pos:column="29">*<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="30">q<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">!=<pos:position pos:line="37" pos:column="34"/></operator> <name pos:line="37" pos:column="35">delim<pos:position pos:line="37" pos:column="40"/></name></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41">
                           <block type="pseudo"><break pos:line="38" pos:column="28">break;<pos:position pos:line="38" pos:column="34"/></break></block></then></if>
                    }<pos:position pos:line="39" pos:column="22"/></block></then> <else pos:line="39" pos:column="23">else <block pos:line="39" pos:column="28">{
                        <for pos:line="40" pos:column="25">for <control pos:line="40" pos:column="29">(<init><expr><name pos:line="40" pos:column="30">q<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">p<pos:position pos:line="40" pos:column="35"/></name></expr>;<pos:position pos:line="40" pos:column="36"/></init> <condition><expr><operator pos:line="40" pos:column="37">*<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">q<pos:position pos:line="40" pos:column="39"/></name> <operator pos:line="40" pos:column="40">&amp;&amp;<pos:position pos:line="40" pos:column="50"/></operator> <operator pos:line="40" pos:column="43">!<pos:position pos:line="40" pos:column="44"/></operator><call><name pos:line="40" pos:column="44">apr_isspace<pos:position pos:line="40" pos:column="55"/></name><argument_list pos:line="40" pos:column="55">(<argument><expr><operator pos:line="40" pos:column="56">*<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="57">q<pos:position pos:line="40" pos:column="58"/></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call> <operator pos:line="40" pos:column="60">&amp;&amp;<pos:position pos:line="40" pos:column="70"/></operator> <operator pos:line="40" pos:column="63">(<pos:position pos:line="40" pos:column="64"/></operator><operator pos:line="40" pos:column="64">*<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="65">q<pos:position pos:line="40" pos:column="66"/></name> <operator pos:line="40" pos:column="67">!=<pos:position pos:line="40" pos:column="69"/></operator> <literal type="char" pos:line="40" pos:column="70">'&gt;'<pos:position pos:line="40" pos:column="76"/></literal><operator pos:line="40" pos:column="73">)<pos:position pos:line="40" pos:column="74"/></operator></expr>;<pos:position pos:line="40" pos:column="75"/></condition> <incr><expr><operator pos:line="40" pos:column="76">++<pos:position pos:line="40" pos:column="78"/></operator><name pos:line="40" pos:column="78">q<pos:position pos:line="40" pos:column="79"/></name></expr></incr>)<pos:position pos:line="40" pos:column="80"/></control><block type="pseudo"><empty_stmt pos:line="40" pos:column="80">;<pos:position pos:line="40" pos:column="81"/></empty_stmt></block></for>
                    }<pos:position pos:line="41" pos:column="22"/></block></else></if>
                    <expr_stmt><expr><name pos:line="42" pos:column="21">content<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <call><name pos:line="42" pos:column="31">apr_pstrndup<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><name><name pos:line="42" pos:column="44">r<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">-&gt;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="47">pool<pos:position pos:line="42" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">p<pos:position pos:line="42" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="56">q<pos:position pos:line="42" pos:column="57"/></name><operator pos:line="42" pos:column="57">-<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="58">p<pos:position pos:line="42" pos:column="59"/></name></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
                    <break pos:line="43" pos:column="21">break;<pos:position pos:line="43" pos:column="27"/></break>
                }<pos:position pos:line="44" pos:column="18"/></block></while>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if>
        }<pos:position pos:line="46" pos:column="10"/></block></then>
        <elseif pos:line="47" pos:column="9">else <if pos:line="47" pos:column="14">if <condition pos:line="47" pos:column="17">(<expr><operator pos:line="47" pos:column="18">!<pos:position pos:line="47" pos:column="19"/></operator><call><name pos:line="47" pos:column="19">strncasecmp<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">header<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="39">"Content-Type"<pos:position pos:line="47" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="55">12<pos:position pos:line="47" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="59"/></condition><then pos:line="47" pos:column="59"> <block pos:line="47" pos:column="60">{
            <expr_stmt><expr><name pos:line="48" pos:column="13">ret<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">apr_palloc<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name><name pos:line="48" pos:column="30">r<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">-&gt;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="33">pool<pos:position pos:line="48" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="39">sizeof<argument_list pos:line="48" pos:column="45">(<argument><expr><name pos:line="48" pos:column="46">meta<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">ret<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">start<pos:position pos:line="49" pos:column="23"/></name></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">offs<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">+<pos:position pos:line="49" pos:column="31"/></operator><name><name pos:line="49" pos:column="31">pmatch<pos:position pos:line="49" pos:column="37"/></name><index pos:line="49" pos:column="37">[<expr><literal type="number" pos:line="49" pos:column="38">0<pos:position pos:line="49" pos:column="39"/></literal></expr>]<pos:position pos:line="49" pos:column="40"/></index></name><operator pos:line="49" pos:column="40">.<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="41">rm_so<pos:position pos:line="49" pos:column="46"/></name></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="50" pos:column="13">ret<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">end<pos:position pos:line="50" pos:column="21"/></name></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">offs<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">+<pos:position pos:line="50" pos:column="29"/></operator><name><name pos:line="50" pos:column="29">pmatch<pos:position pos:line="50" pos:column="35"/></name><index pos:line="50" pos:column="35">[<expr><literal type="number" pos:line="50" pos:column="36">0<pos:position pos:line="50" pos:column="37"/></literal></expr>]<pos:position pos:line="50" pos:column="38"/></index></name><operator pos:line="50" pos:column="38">.<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="39">rm_eo<pos:position pos:line="50" pos:column="44"/></name></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif></if>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">header<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">&amp;&amp;<pos:position pos:line="52" pos:column="30"/></operator> <name pos:line="52" pos:column="23">content<pos:position pos:line="52" pos:column="30"/></name></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31"> <block pos:line="52" pos:column="32">{
<cpp:ifndef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifndef<pos:position pos:line="53" pos:column="8"/></cpp:directive> <name pos:line="53" pos:column="9">GO_FASTER<pos:position pos:line="53" pos:column="18"/></name></cpp:ifndef>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_log_rerror<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><name pos:line="54" pos:column="27">APLOG_MARK<pos:position pos:line="54" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="39">APLOG_TRACE2<pos:position pos:line="54" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="53">0<pos:position pos:line="54" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="56">r<pos:position pos:line="54" pos:column="57"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="55" pos:column="27">"Adding header [%s: %s] from HTML META"<pos:position pos:line="55" pos:column="66"/></literal></expr></argument>,
                          <argument><expr><name pos:line="56" pos:column="27">header<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="35">content<pos:position pos:line="56" pos:column="42"/></name></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt> 
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">apr_table_setn<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name><name pos:line="58" pos:column="28">r<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">-&gt;<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="31">headers_out<pos:position pos:line="58" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="44">header<pos:position pos:line="58" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="52">content<pos:position pos:line="58" pos:column="59"/></name></expr></argument>)<pos:position pos:line="58" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="60" pos:column="9">offs<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">+=<pos:position pos:line="60" pos:column="16"/></operator> <name><name pos:line="60" pos:column="17">pmatch<pos:position pos:line="60" pos:column="23"/></name><index pos:line="60" pos:column="23">[<expr><literal type="number" pos:line="60" pos:column="24">0<pos:position pos:line="60" pos:column="25"/></literal></expr>]<pos:position pos:line="60" pos:column="26"/></index></name><operator pos:line="60" pos:column="26">.<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="27">rm_eo<pos:position pos:line="60" pos:column="32"/></name></expr>;<pos:position pos:line="60" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></while>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">ret<pos:position pos:line="62" pos:column="15"/></name></expr>;<pos:position pos:line="62" pos:column="16"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

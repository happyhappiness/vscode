<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_187_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_generic_parse_locktoken<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">apr_pool_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">p<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">char_token<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="3" pos:column="48">dav_locktoken<pos:position pos:line="3" pos:column="61"/></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier><modifier pos:line="3" pos:column="63">*<pos:position pos:line="3" pos:column="64"/></modifier></type><name pos:line="3" pos:column="64">locktoken_p<pos:position pos:line="3" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="76"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_locktoken<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">locktoken<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">ap_strstr_c<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">char_token<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">"opaquelocktoken:"<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call> <operator pos:line="7" pos:column="53">!=<pos:position pos:line="7" pos:column="55"/></operator> <name pos:line="7" pos:column="56">char_token<pos:position pos:line="7" pos:column="66"/></name></expr>)<pos:position pos:line="7" pos:column="67"/></condition><then pos:line="7" pos:column="67"> <block pos:line="7" pos:column="68">{
        <return pos:line="8" pos:column="9">return <expr><call><name pos:line="8" pos:column="16">dav_new_error<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">p<pos:position pos:line="8" pos:column="31"/></name></expr></argument>,
                             <argument><expr><name pos:line="9" pos:column="30">HTTP_BAD_REQUEST<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="48">DAV_ERR_LOCK_UNK_STATE_TOKEN<pos:position pos:line="9" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="78">0<pos:position pos:line="9" pos:column="79"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="10" pos:column="30">"The lock token uses an unknown State-token "<pos:position pos:line="10" pos:column="75"/></literal>
                             <literal type="string" pos:line="11" pos:column="30">"format and could not be parsed."<pos:position pos:line="11" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="13" pos:column="5">char_token<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">+=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="19">16<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">locktoken<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">apr_pcalloc<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">p<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="32">sizeof<argument_list pos:line="15" pos:column="38">(<argument><expr><operator pos:line="15" pos:column="39">*<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">locktoken<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">apr_uuid_parse<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">&amp;<pos:position pos:line="16" pos:column="29"/></operator><name><name pos:line="16" pos:column="25">locktoken<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">uuid<pos:position pos:line="16" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">char_token<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="54"/></condition><then pos:line="16" pos:column="54"> <block pos:line="16" pos:column="55">{
        <return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">dav_new_error<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">p<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">HTTP_BAD_REQUEST<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">DAV_ERR_LOCK_PARSE_TOKEN<pos:position pos:line="17" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="77">0<pos:position pos:line="17" pos:column="78"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="18" pos:column="30">"The opaquelocktoken has an incorrect format "<pos:position pos:line="18" pos:column="76"/></literal>
                             <literal type="string" pos:line="19" pos:column="30">"and could not be parsed."<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">locktoken_p<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">locktoken<pos:position pos:line="22" pos:column="29"/></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">NULL<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

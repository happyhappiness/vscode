<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2565_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">test_pquery<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type> <name pos:line="1" pos:column="36">pool<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">apr_dbd_t<pos:position pos:line="1" pos:column="51"/></name><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="53">handle<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">apr_dbd_driver_t<pos:position pos:line="2" pos:column="46"/></name><modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">driver<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">query<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="string" pos:line="5" pos:column="25">"INSERT INTO apr_dbd_test VALUES (%s, %s, %d)"<pos:position pos:line="5" pos:column="71"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="72"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_dbd_prepared_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">statement<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><name pos:line="6" pos:column="37">NULL<pos:position pos:line="6" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">label<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><literal type="string" pos:line="7" pos:column="25">"testpquery"<pos:position pos:line="7" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">nrows<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_dbd_transaction_t<pos:position pos:line="9" pos:column="26"/></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">trans<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">=<expr><literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">apr_dbd_prepare<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">driver<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">pool<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">handle<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">query<pos:position pos:line="11" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="55">label<pos:position pos:line="11" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="62">&amp;<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="63">statement<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt>
    <comment type="block" pos:line="12" pos:column="5">/* rv = apr_dbd_prepare(driver, pool, handle, query, NULL, &amp;statement); */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">rv<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then pos:line="13" pos:column="12"> <block pos:line="13" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">printf<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="string" pos:line="14" pos:column="16">"Prepare statement failed!\n%s\n"<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="15" pos:column="16">apr_dbd_error<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">driver<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">handle<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">rv<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">rv<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">apr_dbd_transaction_start<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">driver<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">pool<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">handle<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="53">&amp;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="54">trans<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">rv<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <call><name pos:line="19" pos:column="10">apr_dbd_pvquery<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">driver<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">pool<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">handle<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="48">&amp;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="49">nrows<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">statement<pos:position pos:line="19" pos:column="65"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="20" pos:column="26">"prepared"<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="38">"insert"<pos:position pos:line="20" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="48">"2"<pos:position pos:line="20" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">NULL<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">apr_dbd_transaction_end<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">driver<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">pool<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">trans<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">rv<pos:position pos:line="22" pos:column="11"/></name></expr>)<pos:position pos:line="22" pos:column="12"/></condition><then pos:line="22" pos:column="12"> <block pos:line="22" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">printf<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="string" pos:line="23" pos:column="16">"Exec of prepared statement failed!\n%s\n"<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="24" pos:column="16">apr_dbd_error<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">driver<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">handle<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">rv<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">rv<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">printf<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"Showing table (should now contain row \"prepared insert 2\")\n"<pos:position pos:line="27" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">select_sequential<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">pool<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="29">handle<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="37">driver<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">rv<pos:position pos:line="29" pos:column="14"/></name></expr>;<pos:position pos:line="29" pos:column="15"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3223_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">grep_or_recurse<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">filename<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">BOOL<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">recurse<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">BOOL<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">show_filenames<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">BOOL<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">only_one_at_top<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="24"/></parameter_list>
<block pos:line="4" pos:column="1">{
<decl_stmt><decl><type><name pos:line="5" pos:column="1">int<pos:position pos:line="5" pos:column="4"/></name></type> <name pos:line="5" pos:column="5">rc<pos:position pos:line="5" pos:column="7"/></name> <init pos:line="5" pos:column="8">= <expr><literal type="number" pos:line="5" pos:column="10">1<pos:position pos:line="5" pos:column="11"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">sep<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">FILE<pos:position pos:line="7" pos:column="5"/></name> <modifier pos:line="7" pos:column="6">*<pos:position pos:line="7" pos:column="7"/></modifier></type><name pos:line="7" pos:column="7">in<pos:position pos:line="7" pos:column="9"/></name></decl>;<pos:position pos:line="7" pos:column="10"/></decl_stmt>

<comment type="block" pos:line="9" pos:column="1">/* If the file is a directory and we are recursing, scan each file within it.
The scanning code is localized so it can be made system-specific. */</comment>

<if pos:line="12" pos:column="1">if <condition pos:line="12" pos:column="4">(<expr><operator pos:line="12" pos:column="5">(<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">sep<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">isdirectory<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">filename<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call><operator pos:line="12" pos:column="33">)<pos:position pos:line="12" pos:column="34"/></operator> <operator pos:line="12" pos:column="35">!=<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="38">0<pos:position pos:line="12" pos:column="39"/></literal> <operator pos:line="12" pos:column="40">&amp;&amp;<pos:position pos:line="12" pos:column="50"/></operator> <name pos:line="12" pos:column="43">recurse<pos:position pos:line="12" pos:column="50"/></name></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51">
  <block pos:line="13" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">buffer<pos:position pos:line="14" pos:column="14"/></name><index pos:line="14" pos:column="14">[<expr><literal type="number" pos:line="14" pos:column="15">1024<pos:position pos:line="14" pos:column="19"/></literal></expr>]<pos:position pos:line="14" pos:column="20"/></index></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">char<pos:position pos:line="15" pos:column="7"/></name> <modifier pos:line="15" pos:column="8">*<pos:position pos:line="15" pos:column="9"/></modifier></type><name pos:line="15" pos:column="9">nextfile<pos:position pos:line="15" pos:column="17"/></name></decl>;<pos:position pos:line="15" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">directory_type<pos:position pos:line="16" pos:column="17"/></name> <modifier pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></modifier></type><name pos:line="16" pos:column="19">dir<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><call><name pos:line="16" pos:column="25">opendirectory<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">filename<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="49"/></decl_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">dir<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">==<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">NULL<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
    <block pos:line="19" pos:column="5">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">fprintf<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">stderr<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="21">"pcregrep: Failed to open directory %s: %s\n"<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="68">filename<pos:position pos:line="20" pos:column="76"/></name></expr></argument>,
      <argument><expr><call><name pos:line="21" pos:column="7">strerror<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">errno<pos:position pos:line="21" pos:column="21"/></name></expr></argument>)<pos:position pos:line="21" pos:column="22"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><literal type="number" pos:line="22" pos:column="12">2<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

  <while pos:line="25" pos:column="3">while <condition pos:line="25" pos:column="9">(<expr><operator pos:line="25" pos:column="10">(<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">nextfile<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">readdirectory<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">dir<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call><operator pos:line="25" pos:column="40">)<pos:position pos:line="25" pos:column="41"/></operator> <operator pos:line="25" pos:column="42">!=<pos:position pos:line="25" pos:column="44"/></operator> <name pos:line="25" pos:column="45">NULL<pos:position pos:line="25" pos:column="49"/></name></expr>)<pos:position pos:line="25" pos:column="50"/></condition>
    <block pos:line="26" pos:column="5">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">frc<pos:position pos:line="27" pos:column="12"/></name></decl>;<pos:position pos:line="27" pos:column="13"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">sprintf<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">buffer<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="21">"%.512s%c%.128s"<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">filename<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">sep<pos:position pos:line="28" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">nextfile<pos:position pos:line="28" pos:column="62"/></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">frc<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <call><name pos:line="29" pos:column="11">grep_or_recurse<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">buffer<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">recurse<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">TRUE<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">FALSE<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">frc<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">==<pos:position pos:line="30" pos:column="15"/></operator> <literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal> <operator pos:line="30" pos:column="18">&amp;&amp;<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="21">rc<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">==<pos:position pos:line="30" pos:column="26"/></operator> <literal type="number" pos:line="30" pos:column="27">1<pos:position pos:line="30" pos:column="28"/></literal></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="30">rc<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">=<pos:position pos:line="30" pos:column="34"/></operator> <literal type="number" pos:line="30" pos:column="35">0<pos:position pos:line="30" pos:column="36"/></literal></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></while>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">closedirectory<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">dir<pos:position pos:line="33" pos:column="21"/></name></expr></argument>)<pos:position pos:line="33" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">rc<pos:position pos:line="34" pos:column="12"/></name></expr>;<pos:position pos:line="34" pos:column="13"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

<comment type="block" pos:line="37" pos:column="1">/* If the file is not a directory, or we are not recursing, scan it. If this is
the first and only argument at top level, we don't show the file name.
Otherwise, control is via the show_filenames variable. */</comment>

<expr_stmt><expr><name pos:line="41" pos:column="1">in<pos:position pos:line="41" pos:column="3"/></name> <operator pos:line="41" pos:column="4">=<pos:position pos:line="41" pos:column="5"/></operator> <call><name pos:line="41" pos:column="6">fopen<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">filename<pos:position pos:line="41" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="22">"r"<pos:position pos:line="41" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
<if pos:line="42" pos:column="1">if <condition pos:line="42" pos:column="4">(<expr><name pos:line="42" pos:column="5">in<pos:position pos:line="42" pos:column="7"/></name> <operator pos:line="42" pos:column="8">==<pos:position pos:line="42" pos:column="10"/></operator> <name pos:line="42" pos:column="11">NULL<pos:position pos:line="42" pos:column="15"/></name></expr>)<pos:position pos:line="42" pos:column="16"/></condition><then pos:line="42" pos:column="16">
  <block pos:line="43" pos:column="3">{
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">fprintf<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><name pos:line="44" pos:column="11">stderr<pos:position pos:line="44" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="19">"pcregrep: Failed to open %s: %s\n"<pos:position pos:line="44" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="56">filename<pos:position pos:line="44" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="66">strerror<pos:position pos:line="44" pos:column="74"/></name><argument_list pos:line="44" pos:column="74">(<argument><expr><name pos:line="44" pos:column="75">errno<pos:position pos:line="44" pos:column="80"/></name></expr></argument>)<pos:position pos:line="44" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="83"/></expr_stmt>
  <return pos:line="45" pos:column="3">return <expr><literal type="number" pos:line="45" pos:column="10">2<pos:position pos:line="45" pos:column="11"/></literal></expr>;<pos:position pos:line="45" pos:column="12"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

<expr_stmt><expr><name pos:line="48" pos:column="1">rc<pos:position pos:line="48" pos:column="3"/></name> <operator pos:line="48" pos:column="4">=<pos:position pos:line="48" pos:column="5"/></operator> <call><name pos:line="48" pos:column="6">pcregrep<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><name pos:line="48" pos:column="15">in<pos:position pos:line="48" pos:column="17"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="48" pos:column="19">(<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">show_filenames<pos:position pos:line="48" pos:column="34"/></name> <operator pos:line="48" pos:column="35">&amp;&amp;<pos:position pos:line="48" pos:column="45"/></operator> <operator pos:line="48" pos:column="38">!<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="39">only_one_at_top<pos:position pos:line="48" pos:column="54"/></name><operator pos:line="48" pos:column="54">)<pos:position pos:line="48" pos:column="55"/></operator></expr>?<pos:position pos:line="48" pos:column="56"/></condition><then pos:line="48" pos:column="56"> <expr><name pos:line="48" pos:column="57">filename<pos:position pos:line="48" pos:column="65"/></name></expr> <pos:position pos:line="48" pos:column="66"/></then><else pos:line="48" pos:column="66">: <expr><name pos:line="48" pos:column="68">NULL<pos:position pos:line="48" pos:column="72"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="48" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="74"/></expr_stmt>
<expr_stmt><expr><call><name pos:line="49" pos:column="1">fclose<pos:position pos:line="49" pos:column="7"/></name><argument_list pos:line="49" pos:column="7">(<argument><expr><name pos:line="49" pos:column="8">in<pos:position pos:line="49" pos:column="10"/></name></expr></argument>)<pos:position pos:line="49" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="12"/></expr_stmt>
<return pos:line="50" pos:column="1">return <expr><name pos:line="50" pos:column="8">rc<pos:position pos:line="50" pos:column="10"/></name></expr>;<pos:position pos:line="50" pos:column="11"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2799_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">apr_os_strerror<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">buf<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">apr_size_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">bufsize<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">apr_status_t<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">errcode<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="82"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">len<pos:position pos:line="3" pos:column="19"/></name><init pos:line="3" pos:column="19">=<expr><literal type="number" pos:line="3" pos:column="20">0<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="23">i<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

<cpp:ifndef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifndef<pos:position pos:line="5" pos:column="8"/></cpp:directive> <name pos:line="5" pos:column="9">NETWARE<pos:position pos:line="5" pos:column="16"/></name></cpp:ifndef>
    <expr_stmt><expr><name pos:line="6" pos:column="5">len<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <call><name pos:line="6" pos:column="11">FormatMessage<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">FORMAT_MESSAGE_FROM_SYSTEM<pos:position pos:line="6" pos:column="51"/></name> 
                      <operator pos:line="7" pos:column="23">|<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">FORMAT_MESSAGE_IGNORE_INSERTS<pos:position pos:line="7" pos:column="54"/></name></expr></argument>,
                        <argument><expr><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr></argument>,
                        <argument><expr><name pos:line="9" pos:column="25">errcode<pos:position pos:line="9" pos:column="32"/></name></expr></argument>,
                        <argument><expr><call><name pos:line="10" pos:column="25">MAKELANGID<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">LANG_NEUTRAL<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">SUBLANG_DEFAULT<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr></argument>, <comment type="block" pos:line="10" pos:column="68">/* Default language */</comment>
                        <argument><expr><operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">LPTSTR<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">)<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">buf<pos:position pos:line="11" pos:column="37"/></name></expr></argument>,
                        <argument><expr><operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">DWORD<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">bufsize<pos:position pos:line="12" pos:column="39"/></name></expr></argument>,
                        <argument><expr><name pos:line="13" pos:column="25">NULL<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">len<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14"> <block pos:line="16" pos:column="15">{
        <for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></init> <condition><expr><name><name pos:line="17" pos:column="21">gaErrorList<pos:position pos:line="17" pos:column="32"/></name><index pos:line="17" pos:column="32">[<expr><name pos:line="17" pos:column="33">i<pos:position pos:line="17" pos:column="34"/></name></expr>]<pos:position pos:line="17" pos:column="35"/></index></name><operator pos:line="17" pos:column="35">.<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">msg<pos:position pos:line="17" pos:column="39"/></name></expr>;<pos:position pos:line="17" pos:column="40"/></condition> <incr><expr><operator pos:line="17" pos:column="41">++<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">i<pos:position pos:line="17" pos:column="44"/></name></expr></incr>)<pos:position pos:line="17" pos:column="45"/></control> <block pos:line="17" pos:column="46">{
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name><name pos:line="18" pos:column="17">gaErrorList<pos:position pos:line="18" pos:column="28"/></name><index pos:line="18" pos:column="28">[<expr><name pos:line="18" pos:column="29">i<pos:position pos:line="18" pos:column="30"/></name></expr>]<pos:position pos:line="18" pos:column="31"/></index></name><operator pos:line="18" pos:column="31">.<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">code<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">==<pos:position pos:line="18" pos:column="39"/></operator> <name pos:line="18" pos:column="40">errcode<pos:position pos:line="18" pos:column="47"/></name></expr>)<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48"> <block pos:line="18" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="19" pos:column="17">apr_cpystrn<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">buf<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">gaErrorList<pos:position pos:line="19" pos:column="45"/></name><index pos:line="19" pos:column="45">[<expr><name pos:line="19" pos:column="46">i<pos:position pos:line="19" pos:column="47"/></name></expr>]<pos:position pos:line="19" pos:column="48"/></index></name><operator pos:line="19" pos:column="48">.<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="49">msg<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">bufsize<pos:position pos:line="19" pos:column="61"/></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><name pos:line="20" pos:column="17">len<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">strlen<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">buf<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
                <break pos:line="21" pos:column="17">break;<pos:position pos:line="21" pos:column="23"/></break>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
        }<pos:position pos:line="23" pos:column="10"/></block></for>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">len<pos:position pos:line="26" pos:column="12"/></name></expr>)<pos:position pos:line="26" pos:column="13"/></condition><then pos:line="26" pos:column="13"> <block pos:line="26" pos:column="14">{
        <comment type="block" pos:line="27" pos:column="9">/* FormatMessage put the message in the buffer, but it may
         * have embedded a newline (\r\n), and possible more than one.
         * Remove the newlines replacing them with a space. This is not
         * as visually perfect as moving all the remaining message over,
         * but more efficient.
         */</comment>
        <expr_stmt><expr><name pos:line="33" pos:column="9">i<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <name pos:line="33" pos:column="13">len<pos:position pos:line="33" pos:column="16"/></name></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
        <while pos:line="34" pos:column="9">while <condition pos:line="34" pos:column="15">(<expr><name pos:line="34" pos:column="16">i<pos:position pos:line="34" pos:column="17"/></name></expr>)<pos:position pos:line="34" pos:column="18"/></condition> <block pos:line="34" pos:column="19">{
            <expr_stmt><expr><name pos:line="35" pos:column="13">i<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">--<pos:position pos:line="35" pos:column="16"/></operator></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><operator pos:line="36" pos:column="17">(<pos:position pos:line="36" pos:column="18"/></operator><name><name pos:line="36" pos:column="18">buf<pos:position pos:line="36" pos:column="21"/></name><index pos:line="36" pos:column="21">[<expr><name pos:line="36" pos:column="22">i<pos:position pos:line="36" pos:column="23"/></name></expr>]<pos:position pos:line="36" pos:column="24"/></index></name> <operator pos:line="36" pos:column="25">==<pos:position pos:line="36" pos:column="27"/></operator> <literal type="char" pos:line="36" pos:column="28">'\r'<pos:position pos:line="36" pos:column="32"/></literal><operator pos:line="36" pos:column="32">)<pos:position pos:line="36" pos:column="33"/></operator> <operator pos:line="36" pos:column="34">||<pos:position pos:line="36" pos:column="36"/></operator> <operator pos:line="36" pos:column="37">(<pos:position pos:line="36" pos:column="38"/></operator><name><name pos:line="36" pos:column="38">buf<pos:position pos:line="36" pos:column="41"/></name><index pos:line="36" pos:column="41">[<expr><name pos:line="36" pos:column="42">i<pos:position pos:line="36" pos:column="43"/></name></expr>]<pos:position pos:line="36" pos:column="44"/></index></name> <operator pos:line="36" pos:column="45">==<pos:position pos:line="36" pos:column="47"/></operator> <literal type="char" pos:line="36" pos:column="48">'\n'<pos:position pos:line="36" pos:column="52"/></literal><operator pos:line="36" pos:column="52">)<pos:position pos:line="36" pos:column="53"/></operator></expr>)<pos:position pos:line="36" pos:column="54"/></condition><then pos:line="36" pos:column="54">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="17">buf<pos:position pos:line="37" pos:column="20"/></name><index pos:line="37" pos:column="20">[<expr><name pos:line="37" pos:column="21">i<pos:position pos:line="37" pos:column="22"/></name></expr>]<pos:position pos:line="37" pos:column="23"/></index></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="char" pos:line="37" pos:column="26">' '<pos:position pos:line="37" pos:column="29"/></literal></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></while>
    }<pos:position pos:line="39" pos:column="6"/></block></then>
    <else pos:line="40" pos:column="5">else <block pos:line="40" pos:column="10">{
        <comment type="block" pos:line="41" pos:column="9">/* Windows didn't provide us with a message.  Even stuff like                    * WSAECONNREFUSED won't get a message.
         */</comment>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">apr_snprintf<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">buf<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="27">bufsize<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="36">"Unrecognized Win32 error code %d"<pos:position pos:line="43" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="72">errcode<pos:position pos:line="43" pos:column="79"/></name></expr></argument>)<pos:position pos:line="43" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></else></if>

    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">buf<pos:position pos:line="46" pos:column="15"/></name></expr>;<pos:position pos:line="46" pos:column="16"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1570.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ap_die_r<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">type<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">recursive_error<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">custom_response<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r_1st_err<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">r<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">type<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">OK<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">||<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">type<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">==<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="31">DONE<pos:position pos:line="6" pos:column="35"/></name></expr>)<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36"> <block pos:line="6" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">ap_finalize_request_protocol<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">r<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">ap_is_HTTP_VALID_RESPONSE<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">type<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42"> <block pos:line="11" pos:column="43">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">ap_filter_t<pos:position pos:line="12" pos:column="20"/></name> <modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">next<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>

        <comment type="block" pos:line="14" pos:column="9">/*
         * Check if we still have the ap_http_header_filter in place. If
         * this is the case we should not ignore the error here because
         * it means that we have not sent any response at all and never
         * will. This is bad. Sent an internal server error instead.
         */</comment>
        <expr_stmt><expr><name pos:line="20" pos:column="9">next<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <name><name pos:line="20" pos:column="16">r<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">output_filters<pos:position pos:line="20" pos:column="33"/></name></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
        <while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><name pos:line="21" pos:column="16">next<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&amp;&amp;<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name><name pos:line="21" pos:column="25">next<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">frec<pos:position pos:line="21" pos:column="35"/></name></name> <operator pos:line="21" pos:column="36">!=<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">ap_http_header_filter_handle<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">)<pos:position pos:line="21" pos:column="68"/></operator></expr>)<pos:position pos:line="21" pos:column="69"/></condition> <block pos:line="21" pos:column="70">{
               <expr_stmt><expr><name pos:line="22" pos:column="16">next<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name><name pos:line="22" pos:column="23">next<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">next<pos:position pos:line="22" pos:column="33"/></name></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></while>

        <comment type="block" pos:line="25" pos:column="9">/*
         * If next != NULL then we left the while above because of
         * next-&gt;frec == ap_http_header_filter
         */</comment>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">next<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18"> <block pos:line="29" pos:column="19">{
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">type<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">!=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">AP_FILTER_ERROR<pos:position pos:line="30" pos:column="40"/></name></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41"> <block pos:line="30" pos:column="42">{
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">ap_log_rerror<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">APLOG_MARK<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="43">APLOG_ERR<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="54">0<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">r<pos:position pos:line="31" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="32" pos:column="31">"Invalid response status %i"<pos:position pos:line="32" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">type<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="33" pos:column="14"/></block></then>
            <else pos:line="34" pos:column="13">else <block pos:line="34" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="35" pos:column="17">ap_log_rerror<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">APLOG_MARK<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">APLOG_DEBUG<pos:position pos:line="35" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="56">0<pos:position pos:line="35" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="59">r<pos:position pos:line="35" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="36" pos:column="31">"Response from AP_FILTER_ERROR"<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="38" pos:column="13">type<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="38" pos:column="46"/></name></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then>
        <else pos:line="40" pos:column="9">else <block pos:line="40" pos:column="14">{
            <return pos:line="41" pos:column="13">return;<pos:position pos:line="41" pos:column="20"/></return>
        }<pos:position pos:line="42" pos:column="10"/></block></else></if>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/*
     * The following takes care of Apache redirects to custom response URLs
     * Note that if we are already dealing with the response to some other
     * error condition, we just report on the original error, and give up on
     * any attempt to handle the other thing "intelligently"...
     */</comment>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">recursive_error<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">!=<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="28">HTTP_OK<pos:position pos:line="51" pos:column="35"/></name></expr>)<pos:position pos:line="51" pos:column="36"/></condition><then pos:line="51" pos:column="36"> <block pos:line="51" pos:column="37">{
        <while pos:line="52" pos:column="9">while <condition pos:line="52" pos:column="15">(<expr><name><name pos:line="52" pos:column="16">r_1st_err<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">prev<pos:position pos:line="52" pos:column="31"/></name></name> <operator pos:line="52" pos:column="32">&amp;&amp;<pos:position pos:line="52" pos:column="42"/></operator> <operator pos:line="52" pos:column="35">(<pos:position pos:line="52" pos:column="36"/></operator><name><name pos:line="52" pos:column="36">r_1st_err<pos:position pos:line="52" pos:column="45"/></name><operator pos:line="52" pos:column="45">-&gt;<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="47">prev<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">-&gt;<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="53">status<pos:position pos:line="52" pos:column="59"/></name></name> <operator pos:line="52" pos:column="60">!=<pos:position pos:line="52" pos:column="62"/></operator> <name pos:line="52" pos:column="63">HTTP_OK<pos:position pos:line="52" pos:column="70"/></name><operator pos:line="52" pos:column="70">)<pos:position pos:line="52" pos:column="71"/></operator></expr>)<pos:position pos:line="52" pos:column="72"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="13">r_1st_err<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">=<pos:position pos:line="53" pos:column="24"/></operator> <name><name pos:line="53" pos:column="25">r_1st_err<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">-&gt;<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="36">prev<pos:position pos:line="53" pos:column="40"/></name></name></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt></block></while>  <comment type="block" pos:line="53" pos:column="43">/* Get back to original error */</comment>

        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">r_1st_err<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">!=<pos:position pos:line="55" pos:column="25"/></operator> <name pos:line="55" pos:column="26">r<pos:position pos:line="55" pos:column="27"/></name></expr>)<pos:position pos:line="55" pos:column="28"/></condition><then pos:line="55" pos:column="28"> <block pos:line="55" pos:column="29">{
            <comment type="block" pos:line="56" pos:column="13">/* The recursive error was caused by an ErrorDocument specifying
             * an internal redirect to a bad URI.  ap_internal_redirect has
             * changed the filter chains to point to the ErrorDocument's
             * request_rec.  Back out those changes so we can safely use the
             * original failing request_rec to send the canned error message.
             *
             * ap_send_error_response gets rid of existing resource filters
             * on the output side, so we can skip those.
             */</comment>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">update_r_in_filters<pos:position pos:line="65" pos:column="32"/></name><argument_list pos:line="65" pos:column="32">(<argument><expr><name><name pos:line="65" pos:column="33">r_1st_err<pos:position pos:line="65" pos:column="42"/></name><operator pos:line="65" pos:column="42">-&gt;<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="44">proto_output_filters<pos:position pos:line="65" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="66">r<pos:position pos:line="65" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="69">r_1st_err<pos:position pos:line="65" pos:column="78"/></name></expr></argument>)<pos:position pos:line="65" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">update_r_in_filters<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name><name pos:line="66" pos:column="33">r_1st_err<pos:position pos:line="66" pos:column="42"/></name><operator pos:line="66" pos:column="42">-&gt;<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="44">input_filters<pos:position pos:line="66" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="59">r<pos:position pos:line="66" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="62">r_1st_err<pos:position pos:line="66" pos:column="71"/></name></expr></argument>)<pos:position pos:line="66" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="69" pos:column="9">custom_response<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">=<pos:position pos:line="69" pos:column="26"/></operator> <name pos:line="69" pos:column="27">NULL<pos:position pos:line="69" pos:column="31"/></name></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt> <comment type="block" pos:line="69" pos:column="33">/* Do NOT retry the custom thing! */</comment>
    }<pos:position pos:line="70" pos:column="6"/></block></then>
    <else pos:line="71" pos:column="5">else <block pos:line="71" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="72" pos:column="9">int<pos:position pos:line="72" pos:column="12"/></name></type> <name pos:line="72" pos:column="13">error_index<pos:position pos:line="72" pos:column="24"/></name> <init pos:line="72" pos:column="25">= <expr><call><name pos:line="72" pos:column="27">ap_index_of_response<pos:position pos:line="72" pos:column="47"/></name><argument_list pos:line="72" pos:column="47">(<argument><expr><name pos:line="72" pos:column="48">type<pos:position pos:line="72" pos:column="52"/></name></expr></argument>)<pos:position pos:line="72" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="54"/></decl_stmt>
        <expr_stmt><expr><name pos:line="73" pos:column="9">custom_response<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">=<pos:position pos:line="73" pos:column="26"/></operator> <call><name pos:line="73" pos:column="27">ap_response_code_string<pos:position pos:line="73" pos:column="50"/></name><argument_list pos:line="73" pos:column="50">(<argument><expr><name pos:line="73" pos:column="51">r<pos:position pos:line="73" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="54">error_index<pos:position pos:line="73" pos:column="65"/></name></expr></argument>)<pos:position pos:line="73" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="74" pos:column="9">recursive_error<pos:position pos:line="74" pos:column="24"/></name> <operator pos:line="74" pos:column="25">=<pos:position pos:line="74" pos:column="26"/></operator> <literal type="number" pos:line="74" pos:column="27">0<pos:position pos:line="74" pos:column="28"/></literal></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="77" pos:column="5">r<pos:position pos:line="77" pos:column="6"/></name><operator pos:line="77" pos:column="6">-&gt;<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="8">status<pos:position pos:line="77" pos:column="14"/></name></name> <operator pos:line="77" pos:column="15">=<pos:position pos:line="77" pos:column="16"/></operator> <name pos:line="77" pos:column="17">type<pos:position pos:line="77" pos:column="21"/></name></expr>;<pos:position pos:line="77" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="79" pos:column="5">/*
     * This test is done here so that none of the auth modules needs to know
     * about proxy authentication.  They treat it like normal auth, and then
     * we tweak the status.
     */</comment>
    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><name pos:line="84" pos:column="9">HTTP_UNAUTHORIZED<pos:position pos:line="84" pos:column="26"/></name> <operator pos:line="84" pos:column="27">==<pos:position pos:line="84" pos:column="29"/></operator> <name><name pos:line="84" pos:column="30">r<pos:position pos:line="84" pos:column="31"/></name><operator pos:line="84" pos:column="31">-&gt;<pos:position pos:line="84" pos:column="36"/></operator><name pos:line="84" pos:column="33">status<pos:position pos:line="84" pos:column="39"/></name></name> <operator pos:line="84" pos:column="40">&amp;&amp;<pos:position pos:line="84" pos:column="50"/></operator> <name pos:line="84" pos:column="43">PROXYREQ_PROXY<pos:position pos:line="84" pos:column="57"/></name> <operator pos:line="84" pos:column="58">==<pos:position pos:line="84" pos:column="60"/></operator> <name><name pos:line="84" pos:column="61">r<pos:position pos:line="84" pos:column="62"/></name><operator pos:line="84" pos:column="62">-&gt;<pos:position pos:line="84" pos:column="67"/></operator><name pos:line="84" pos:column="64">proxyreq<pos:position pos:line="84" pos:column="72"/></name></name></expr>)<pos:position pos:line="84" pos:column="73"/></condition><then pos:line="84" pos:column="73"> <block pos:line="84" pos:column="74">{
        <expr_stmt><expr><name><name pos:line="85" pos:column="9">r<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">-&gt;<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="12">status<pos:position pos:line="85" pos:column="18"/></name></name> <operator pos:line="85" pos:column="19">=<pos:position pos:line="85" pos:column="20"/></operator> <name pos:line="85" pos:column="21">HTTP_PROXY_AUTHENTICATION_REQUIRED<pos:position pos:line="85" pos:column="55"/></name></expr>;<pos:position pos:line="85" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="88" pos:column="5">/* If we don't want to keep the connection, make sure we mark that the
     * connection is not eligible for keepalive.  If we want to keep the
     * connection, be sure that the request body (if any) has been read.
     */</comment>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><call><name pos:line="92" pos:column="9">ap_status_drops_connection<pos:position pos:line="92" pos:column="35"/></name><argument_list pos:line="92" pos:column="35">(<argument><expr><name><name pos:line="92" pos:column="36">r<pos:position pos:line="92" pos:column="37"/></name><operator pos:line="92" pos:column="37">-&gt;<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="39">status<pos:position pos:line="92" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="47"/></condition><then pos:line="92" pos:column="47"> <block pos:line="92" pos:column="48">{
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">r<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">-&gt;<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="12">connection<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">-&gt;<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="24">keepalive<pos:position pos:line="93" pos:column="33"/></name></name> <operator pos:line="93" pos:column="34">=<pos:position pos:line="93" pos:column="35"/></operator> <name pos:line="93" pos:column="36">AP_CONN_CLOSE<pos:position pos:line="93" pos:column="49"/></name></expr>;<pos:position pos:line="93" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="96" pos:column="5">/*
     * Two types of custom redirects --- plain text, and URLs. Plain text has
     * a leading '"', so the URL code, here, is triggered on its absence
     */</comment>

    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><name pos:line="101" pos:column="9">custom_response<pos:position pos:line="101" pos:column="24"/></name> <operator pos:line="101" pos:column="25">&amp;&amp;<pos:position pos:line="101" pos:column="35"/></operator> <name><name pos:line="101" pos:column="28">custom_response<pos:position pos:line="101" pos:column="43"/></name><index pos:line="101" pos:column="43">[<expr><literal type="number" pos:line="101" pos:column="44">0<pos:position pos:line="101" pos:column="45"/></literal></expr>]<pos:position pos:line="101" pos:column="46"/></index></name> <operator pos:line="101" pos:column="47">!=<pos:position pos:line="101" pos:column="49"/></operator> <literal type="char" pos:line="101" pos:column="50">'"'<pos:position pos:line="101" pos:column="53"/></literal></expr>)<pos:position pos:line="101" pos:column="54"/></condition><then pos:line="101" pos:column="54"> <block pos:line="101" pos:column="55">{

        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><call><name pos:line="103" pos:column="13">ap_is_url<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">(<argument><expr><name pos:line="103" pos:column="23">custom_response<pos:position pos:line="103" pos:column="38"/></name></expr></argument>)<pos:position pos:line="103" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="40"/></condition><then pos:line="103" pos:column="40"> <block pos:line="103" pos:column="41">{
            <comment type="block" pos:line="104" pos:column="13">/*
             * The URL isn't local, so lets drop through the rest of this
             * apache code, and continue with the usual REDIRECT handler.
             * But note that the client will ultimately see the wrong
             * status...
             */</comment>
            <expr_stmt><expr><name><name pos:line="110" pos:column="13">r<pos:position pos:line="110" pos:column="14"/></name><operator pos:line="110" pos:column="14">-&gt;<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="16">status<pos:position pos:line="110" pos:column="22"/></name></name> <operator pos:line="110" pos:column="23">=<pos:position pos:line="110" pos:column="24"/></operator> <name pos:line="110" pos:column="25">HTTP_MOVED_TEMPORARILY<pos:position pos:line="110" pos:column="47"/></name></expr>;<pos:position pos:line="110" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">apr_table_setn<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><name><name pos:line="111" pos:column="28">r<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">-&gt;<pos:position pos:line="111" pos:column="34"/></operator><name pos:line="111" pos:column="31">headers_out<pos:position pos:line="111" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="44">"Location"<pos:position pos:line="111" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="56">custom_response<pos:position pos:line="111" pos:column="71"/></name></expr></argument>)<pos:position pos:line="111" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="112" pos:column="10"/></block></then>
        <elseif pos:line="113" pos:column="9">else <if pos:line="113" pos:column="14">if <condition pos:line="113" pos:column="17">(<expr><name><name pos:line="113" pos:column="18">custom_response<pos:position pos:line="113" pos:column="33"/></name><index pos:line="113" pos:column="33">[<expr><literal type="number" pos:line="113" pos:column="34">0<pos:position pos:line="113" pos:column="35"/></literal></expr>]<pos:position pos:line="113" pos:column="36"/></index></name> <operator pos:line="113" pos:column="37">==<pos:position pos:line="113" pos:column="39"/></operator> <literal type="char" pos:line="113" pos:column="40">'/'<pos:position pos:line="113" pos:column="43"/></literal></expr>)<pos:position pos:line="113" pos:column="44"/></condition><then pos:line="113" pos:column="44"> <block pos:line="113" pos:column="45">{
            <decl_stmt><decl><type><specifier pos:line="114" pos:column="13">const<pos:position pos:line="114" pos:column="18"/></specifier> <name pos:line="114" pos:column="19">char<pos:position pos:line="114" pos:column="23"/></name> <modifier pos:line="114" pos:column="24">*<pos:position pos:line="114" pos:column="25"/></modifier></type><name pos:line="114" pos:column="25">error_notes<pos:position pos:line="114" pos:column="36"/></name></decl>;<pos:position pos:line="114" pos:column="37"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="115" pos:column="13">r<pos:position pos:line="115" pos:column="14"/></name><operator pos:line="115" pos:column="14">-&gt;<pos:position pos:line="115" pos:column="19"/></operator><name pos:line="115" pos:column="16">no_local_copy<pos:position pos:line="115" pos:column="29"/></name></name> <operator pos:line="115" pos:column="30">=<pos:position pos:line="115" pos:column="31"/></operator> <literal type="number" pos:line="115" pos:column="32">1<pos:position pos:line="115" pos:column="33"/></literal></expr>;<pos:position pos:line="115" pos:column="34"/></expr_stmt>       <comment type="block" pos:line="115" pos:column="41">/* Do NOT send HTTP_NOT_MODIFIED for
                                         * error documents! */</comment>
            <comment type="block" pos:line="117" pos:column="13">/*
             * This redirect needs to be a GET no matter what the original
             * method was.
             */</comment>
            <expr_stmt><expr><call><name pos:line="121" pos:column="13">apr_table_setn<pos:position pos:line="121" pos:column="27"/></name><argument_list pos:line="121" pos:column="27">(<argument><expr><name><name pos:line="121" pos:column="28">r<pos:position pos:line="121" pos:column="29"/></name><operator pos:line="121" pos:column="29">-&gt;<pos:position pos:line="121" pos:column="34"/></operator><name pos:line="121" pos:column="31">subprocess_env<pos:position pos:line="121" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="47">"REQUEST_METHOD"<pos:position pos:line="121" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="65">r<pos:position pos:line="121" pos:column="66"/></name><operator pos:line="121" pos:column="66">-&gt;<pos:position pos:line="121" pos:column="71"/></operator><name pos:line="121" pos:column="68">method<pos:position pos:line="121" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="76"/></expr_stmt>

            <comment type="block" pos:line="123" pos:column="13">/*
             * Provide a special method for modules to communicate
             * more informative (than the plain canned) messages to us.
             * Propagate them to ErrorDocuments via the ERROR_NOTES variable:
             */</comment>
            <if pos:line="128" pos:column="13">if <condition pos:line="128" pos:column="16">(<expr><operator pos:line="128" pos:column="17">(<pos:position pos:line="128" pos:column="18"/></operator><name pos:line="128" pos:column="18">error_notes<pos:position pos:line="128" pos:column="29"/></name> <operator pos:line="128" pos:column="30">=<pos:position pos:line="128" pos:column="31"/></operator> <call><name pos:line="128" pos:column="32">apr_table_get<pos:position pos:line="128" pos:column="45"/></name><argument_list pos:line="128" pos:column="45">(<argument><expr><name><name pos:line="128" pos:column="46">r<pos:position pos:line="128" pos:column="47"/></name><operator pos:line="128" pos:column="47">-&gt;<pos:position pos:line="128" pos:column="52"/></operator><name pos:line="128" pos:column="49">notes<pos:position pos:line="128" pos:column="54"/></name></name></expr></argument>,
                                             <argument><expr><literal type="string" pos:line="129" pos:column="46">"error-notes"<pos:position pos:line="129" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="60"/></argument_list></call><operator pos:line="129" pos:column="60">)<pos:position pos:line="129" pos:column="61"/></operator> <operator pos:line="129" pos:column="62">!=<pos:position pos:line="129" pos:column="64"/></operator> <name pos:line="129" pos:column="65">NULL<pos:position pos:line="129" pos:column="69"/></name></expr>)<pos:position pos:line="129" pos:column="70"/></condition><then pos:line="129" pos:column="70"> <block pos:line="129" pos:column="71">{
                <expr_stmt><expr><call><name pos:line="130" pos:column="17">apr_table_setn<pos:position pos:line="130" pos:column="31"/></name><argument_list pos:line="130" pos:column="31">(<argument><expr><name><name pos:line="130" pos:column="32">r<pos:position pos:line="130" pos:column="33"/></name><operator pos:line="130" pos:column="33">-&gt;<pos:position pos:line="130" pos:column="38"/></operator><name pos:line="130" pos:column="35">subprocess_env<pos:position pos:line="130" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="51">"ERROR_NOTES"<pos:position pos:line="130" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="66">error_notes<pos:position pos:line="130" pos:column="77"/></name></expr></argument>)<pos:position pos:line="130" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="131" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="132" pos:column="13">r<pos:position pos:line="132" pos:column="14"/></name><operator pos:line="132" pos:column="14">-&gt;<pos:position pos:line="132" pos:column="19"/></operator><name pos:line="132" pos:column="16">method<pos:position pos:line="132" pos:column="22"/></name></name> <operator pos:line="132" pos:column="23">=<pos:position pos:line="132" pos:column="24"/></operator> <call><name pos:line="132" pos:column="25">apr_pstrdup<pos:position pos:line="132" pos:column="36"/></name><argument_list pos:line="132" pos:column="36">(<argument><expr><name><name pos:line="132" pos:column="37">r<pos:position pos:line="132" pos:column="38"/></name><operator pos:line="132" pos:column="38">-&gt;<pos:position pos:line="132" pos:column="43"/></operator><name pos:line="132" pos:column="40">pool<pos:position pos:line="132" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="46">"GET"<pos:position pos:line="132" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="133" pos:column="13">r<pos:position pos:line="133" pos:column="14"/></name><operator pos:line="133" pos:column="14">-&gt;<pos:position pos:line="133" pos:column="19"/></operator><name pos:line="133" pos:column="16">method_number<pos:position pos:line="133" pos:column="29"/></name></name> <operator pos:line="133" pos:column="30">=<pos:position pos:line="133" pos:column="31"/></operator> <name pos:line="133" pos:column="32">M_GET<pos:position pos:line="133" pos:column="37"/></name></expr>;<pos:position pos:line="133" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="134" pos:column="13">ap_internal_redirect<pos:position pos:line="134" pos:column="33"/></name><argument_list pos:line="134" pos:column="33">(<argument><expr><name pos:line="134" pos:column="34">custom_response<pos:position pos:line="134" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="51">r<pos:position pos:line="134" pos:column="52"/></name></expr></argument>)<pos:position pos:line="134" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="54"/></expr_stmt>
            <return pos:line="135" pos:column="13">return;<pos:position pos:line="135" pos:column="20"/></return>
        }<pos:position pos:line="136" pos:column="10"/></block></then></if></elseif>
        <else pos:line="137" pos:column="9">else <block pos:line="137" pos:column="14">{
            <comment type="block" pos:line="138" pos:column="13">/*
             * Dumb user has given us a bad url to redirect to --- fake up
             * dying with a recursive server error...
             */</comment>
            <expr_stmt><expr><name pos:line="142" pos:column="13">recursive_error<pos:position pos:line="142" pos:column="28"/></name> <operator pos:line="142" pos:column="29">=<pos:position pos:line="142" pos:column="30"/></operator> <name pos:line="142" pos:column="31">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="142" pos:column="57"/></name></expr>;<pos:position pos:line="142" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="143" pos:column="13">ap_log_rerror<pos:position pos:line="143" pos:column="26"/></name><argument_list pos:line="143" pos:column="26">(<argument><expr><name pos:line="143" pos:column="27">APLOG_MARK<pos:position pos:line="143" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="39">APLOG_ERR<pos:position pos:line="143" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="50">0<pos:position pos:line="143" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="53">r<pos:position pos:line="143" pos:column="54"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="144" pos:column="25">"Invalid error redirection directive: %s"<pos:position pos:line="144" pos:column="66"/></literal></expr></argument>,
                        <argument><expr><name pos:line="145" pos:column="25">custom_response<pos:position pos:line="145" pos:column="40"/></name></expr></argument>)<pos:position pos:line="145" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="146" pos:column="10"/></block></else></if>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="148" pos:column="5">ap_send_error_response<pos:position pos:line="148" pos:column="27"/></name><argument_list pos:line="148" pos:column="27">(<argument><expr><name pos:line="148" pos:column="28">r_1st_err<pos:position pos:line="148" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="39">recursive_error<pos:position pos:line="148" pos:column="54"/></name></expr></argument>)<pos:position pos:line="148" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="56"/></expr_stmt>
}<pos:position pos:line="149" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7523.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ssl_load_encrypted_pkey<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">server_rec<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">s<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">apr_pool_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">p<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">idx<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">pkey_file<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_array_header_t<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier><modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">pphrases<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="68"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLModConfigRec<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">mc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">myModConfig<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">s<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSLSrvConfigRec<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">sc<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><call><name pos:line="6" pos:column="27">mySrvConfig<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">s<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">key_id<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><call><name pos:line="7" pos:column="26">asn1_table_vhost_key<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><name pos:line="7" pos:column="47">mc<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="51">p<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="54">sc<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">vhost_id<pos:position pos:line="7" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="68">idx<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="73"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">EVP_PKEY<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">pPrivateKey<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ssl_asn1_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">asn1<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">char<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">ucp<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">long<pos:position pos:line="11" pos:column="9"/></name> <name pos:line="11" pos:column="10">int<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">length<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">BOOL<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">bReadable<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">nPassPhrase<pos:position pos:line="13" pos:column="20"/></name> <init pos:line="13" pos:column="21">= <expr><name><operator pos:line="13" pos:column="23">(<pos:position pos:line="13" pos:column="24"/></operator><operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">pphrases<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">)<pos:position pos:line="13" pos:column="34"/></operator><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">nelts<pos:position pos:line="13" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">nPassPhraseRetry<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_time_t<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">pkey_mtime<pos:position pos:line="15" pos:column="26"/></name> <init pos:line="15" pos:column="27">= <expr><literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_status_t<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">rv<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">pphrase_cb_arg_t<pos:position pos:line="17" pos:column="21"/></name></type> <name pos:line="17" pos:column="22">ppcb_arg<pos:position pos:line="17" pos:column="30"/></name></decl>;<pos:position pos:line="17" pos:column="31"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">pkey_file<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block pos:line="19" pos:column="21">{
         <expr_stmt><expr><call><name pos:line="20" pos:column="10">ap_log_error<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_EMERG<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="48">0<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">s<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="54">APLOGNO<pos:position pos:line="20" pos:column="61"/></name><argument_list pos:line="20" pos:column="61">(<argument><expr><literal type="number" pos:line="20" pos:column="62">02573<pos:position pos:line="20" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="21" pos:column="23">"Init: No private key specified for %s"<pos:position pos:line="21" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="64">key_id<pos:position pos:line="21" pos:column="70"/></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
         <return pos:line="22" pos:column="10">return <expr><call><name pos:line="22" pos:column="17">ssl_die<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">s<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then>
    <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><operator pos:line="24" pos:column="14">(<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">rv<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">exists_and_readable<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">pkey_file<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">p<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="54">&amp;<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="55">pkey_mtime<pos:position pos:line="24" pos:column="65"/></name></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call><operator pos:line="24" pos:column="66">)<pos:position pos:line="24" pos:column="67"/></operator>
             <operator pos:line="25" pos:column="14">!=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">APR_SUCCESS<pos:position pos:line="25" pos:column="28"/></name></expr> )<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30"> <block pos:line="25" pos:column="31">{
         <expr_stmt><expr><call><name pos:line="26" pos:column="10">ap_log_error<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">APLOG_MARK<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">APLOG_EMERG<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">rv<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">s<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="55">APLOGNO<pos:position pos:line="26" pos:column="62"/></name><argument_list pos:line="26" pos:column="62">(<argument><expr><literal type="number" pos:line="26" pos:column="63">02574<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call>
                      <literal type="string" pos:line="27" pos:column="23">"Init: Can't open server private key file %s"<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="70">pkey_file<pos:position pos:line="27" pos:column="79"/></name></expr></argument>)<pos:position pos:line="27" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="81"/></expr_stmt>
         <return pos:line="28" pos:column="10">return <expr><call><name pos:line="28" pos:column="17">ssl_die<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">s<pos:position pos:line="28" pos:column="26"/></name></expr></argument>)<pos:position pos:line="28" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="28"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name><name pos:line="31" pos:column="5">ppcb_arg<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">s<pos:position pos:line="31" pos:column="15"/></name></name>                     <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <name pos:line="31" pos:column="38">s<pos:position pos:line="31" pos:column="39"/></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">ppcb_arg<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">.<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">p<pos:position pos:line="32" pos:column="15"/></name></name>                     <operator pos:line="32" pos:column="36">=<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">p<pos:position pos:line="32" pos:column="39"/></name></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">ppcb_arg<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">.<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">aPassPhrase<pos:position pos:line="33" pos:column="25"/></name></name>           <operator pos:line="33" pos:column="36">=<pos:position pos:line="33" pos:column="37"/></operator> <operator pos:line="33" pos:column="38">*<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">pphrases<pos:position pos:line="33" pos:column="47"/></name></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">ppcb_arg<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">.<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">nPassPhraseCur<pos:position pos:line="34" pos:column="28"/></name></name>        <operator pos:line="34" pos:column="36">=<pos:position pos:line="34" pos:column="37"/></operator> <literal type="number" pos:line="34" pos:column="38">0<pos:position pos:line="34" pos:column="39"/></literal></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">ppcb_arg<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">.<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">cpPassPhraseCur<pos:position pos:line="35" pos:column="29"/></name></name>       <operator pos:line="35" pos:column="36">=<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="38">NULL<pos:position pos:line="35" pos:column="42"/></name></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">ppcb_arg<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">.<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">nPassPhraseDialog<pos:position pos:line="36" pos:column="31"/></name></name>     <operator pos:line="36" pos:column="36">=<pos:position pos:line="36" pos:column="37"/></operator> <literal type="number" pos:line="36" pos:column="38">0<pos:position pos:line="36" pos:column="39"/></literal></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">ppcb_arg<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">.<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">nPassPhraseDialogCur<pos:position pos:line="37" pos:column="34"/></name></name>  <operator pos:line="37" pos:column="36">=<pos:position pos:line="37" pos:column="37"/></operator> <literal type="number" pos:line="37" pos:column="38">0<pos:position pos:line="37" pos:column="39"/></literal></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">ppcb_arg<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">.<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">bPassPhraseDialogOnce<pos:position pos:line="38" pos:column="35"/></name></name> <operator pos:line="38" pos:column="36">=<pos:position pos:line="38" pos:column="37"/></operator> <name pos:line="38" pos:column="38">TRUE<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">ppcb_arg<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">.<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">key_id<pos:position pos:line="39" pos:column="20"/></name></name>                <operator pos:line="39" pos:column="36">=<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">key_id<pos:position pos:line="39" pos:column="44"/></name></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">ppcb_arg<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">.<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">pkey_file<pos:position pos:line="40" pos:column="23"/></name></name>             <operator pos:line="40" pos:column="36">=<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="38">pkey_file<pos:position pos:line="40" pos:column="47"/></name></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/*
     * if the private key is encrypted and SSLPassPhraseDialog
     * is configured to "builtin" it isn't possible to prompt for
     * a password after httpd has detached from the tty.
     * in this case if we already have a private key and the
     * file name/mtime hasn't changed, then reuse the existing key.
     * we also reuse existing private keys that were encrypted for
     * exec: and pipe: dialogs to minimize chances to snoop the
     * password.  that and pipe: dialogs might prompt the user
     * for password, which on win32 for example could happen 4
     * times at startup.  twice for each child and twice within
     * each since apache "restarts itself" on startup.
     * of course this will not work for the builtin dialog if
     * the server was started without LoadModule ssl_module
     * configured, then restarted with it configured.
     * but we fall through with a chance of success if the key
     * is not encrypted or can be handled via exec or pipe dialog.
     * and in the case of fallthrough, pkey_mtime and isatty()
     * are used to give a better idea as to what failed.
     */</comment>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">pkey_mtime<pos:position pos:line="62" pos:column="19"/></name></expr>)<pos:position pos:line="62" pos:column="20"/></condition><then pos:line="62" pos:column="20"> <block pos:line="62" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">ssl_asn1_t<pos:position pos:line="63" pos:column="19"/></name> <modifier pos:line="63" pos:column="20">*<pos:position pos:line="63" pos:column="21"/></modifier></type><name pos:line="63" pos:column="21">asn1<pos:position pos:line="63" pos:column="25"/></name> <init pos:line="63" pos:column="26">= <expr><call><name pos:line="63" pos:column="28">ssl_asn1_table_get<pos:position pos:line="63" pos:column="46"/></name><argument_list pos:line="63" pos:column="46">(<argument><expr><name><name pos:line="63" pos:column="47">mc<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">-&gt;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="51">tPrivateKey<pos:position pos:line="63" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="64">key_id<pos:position pos:line="63" pos:column="70"/></name></expr></argument>)<pos:position pos:line="63" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="72"/></decl_stmt>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">asn1<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">&amp;&amp;<pos:position pos:line="64" pos:column="28"/></operator> <operator pos:line="64" pos:column="21">(<pos:position pos:line="64" pos:column="22"/></operator><name><name pos:line="64" pos:column="22">asn1<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">-&gt;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="28">source_mtime<pos:position pos:line="64" pos:column="40"/></name></name> <operator pos:line="64" pos:column="41">==<pos:position pos:line="64" pos:column="43"/></operator> <name pos:line="64" pos:column="44">pkey_mtime<pos:position pos:line="64" pos:column="54"/></name><operator pos:line="64" pos:column="54">)<pos:position pos:line="64" pos:column="55"/></operator></expr>)<pos:position pos:line="64" pos:column="56"/></condition><then pos:line="64" pos:column="56"> <block pos:line="64" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">ap_log_error<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><name pos:line="65" pos:column="26">APLOG_MARK<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">APLOG_INFO<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="50">0<pos:position pos:line="65" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="53">s<pos:position pos:line="65" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="56">APLOGNO<pos:position pos:line="65" pos:column="63"/></name><argument_list pos:line="65" pos:column="63">(<argument><expr><literal type="number" pos:line="65" pos:column="64">02575<pos:position pos:line="65" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call>
                         <literal type="string" pos:line="66" pos:column="26">"Reusing existing private key from %s on restart"<pos:position pos:line="66" pos:column="75"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="67" pos:column="26">ppcb_arg<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">.<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="35">pkey_file<pos:position pos:line="67" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
            <return pos:line="68" pos:column="13">return <expr><name pos:line="68" pos:column="20">APR_SUCCESS<pos:position pos:line="68" pos:column="31"/></name></expr>;<pos:position pos:line="68" pos:column="32"/></return>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="72" pos:column="5">ap_log_error<pos:position pos:line="72" pos:column="17"/></name><argument_list pos:line="72" pos:column="17">(<argument><expr><name pos:line="72" pos:column="18">APLOG_MARK<pos:position pos:line="72" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="30">APLOG_INFO<pos:position pos:line="72" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="42">0<pos:position pos:line="72" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="45">s<pos:position pos:line="72" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="72" pos:column="48">APLOGNO<pos:position pos:line="72" pos:column="55"/></name><argument_list pos:line="72" pos:column="55">(<argument><expr><literal type="number" pos:line="72" pos:column="56">02576<pos:position pos:line="72" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call>
                 <literal type="string" pos:line="73" pos:column="18">"Attempting to load encrypted (?) private key %s"<pos:position pos:line="73" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="69">key_id<pos:position pos:line="73" pos:column="75"/></name></expr></argument>)<pos:position pos:line="73" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="77"/></expr_stmt>

    <for pos:line="75" pos:column="5">for <control pos:line="75" pos:column="9">(<init pos:line="75" pos:column="10">;<pos:position pos:line="75" pos:column="11"/></init><condition pos:line="75" pos:column="11">;<pos:position pos:line="75" pos:column="12"/></condition><incr/>)<pos:position pos:line="75" pos:column="13"/></control> <block pos:line="75" pos:column="14">{
        <comment type="block" pos:line="76" pos:column="9">/*
         * Try to read the private key file with the help of
         * the callback function which serves the pass
         * phrases to OpenSSL
         */</comment>

        <expr_stmt><expr><name><name pos:line="82" pos:column="9">ppcb_arg<pos:position pos:line="82" pos:column="17"/></name><operator pos:line="82" pos:column="17">.<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">cpPassPhraseCur<pos:position pos:line="82" pos:column="33"/></name></name> <operator pos:line="82" pos:column="34">=<pos:position pos:line="82" pos:column="35"/></operator> <name pos:line="82" pos:column="36">NULL<pos:position pos:line="82" pos:column="40"/></name></expr>;<pos:position pos:line="82" pos:column="41"/></expr_stmt>

        <comment type="block" pos:line="84" pos:column="9">/* Ensure that the error stack is empty; some SSL
         * functions will fail spuriously if the error stack
         * is not empty. */</comment>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">ERR_clear_error<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">()<pos:position pos:line="87" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><name pos:line="89" pos:column="9">bReadable<pos:position pos:line="89" pos:column="18"/></name> <operator pos:line="89" pos:column="19">=<pos:position pos:line="89" pos:column="20"/></operator> <operator pos:line="89" pos:column="21">(<pos:position pos:line="89" pos:column="22"/></operator><ternary><condition><expr><operator pos:line="89" pos:column="22">(<pos:position pos:line="89" pos:column="23"/></operator><name pos:line="89" pos:column="23">pPrivateKey<pos:position pos:line="89" pos:column="34"/></name> <operator pos:line="89" pos:column="35">=<pos:position pos:line="89" pos:column="36"/></operator> <call><name pos:line="89" pos:column="37">SSL_read_PrivateKey<pos:position pos:line="89" pos:column="56"/></name><argument_list pos:line="89" pos:column="56">(<argument><expr><name><name pos:line="89" pos:column="57">ppcb_arg<pos:position pos:line="89" pos:column="65"/></name><operator pos:line="89" pos:column="65">.<pos:position pos:line="89" pos:column="66"/></operator><name pos:line="89" pos:column="66">pkey_file<pos:position pos:line="89" pos:column="75"/></name></name></expr></argument>,
                     <argument><expr><name pos:line="90" pos:column="22">NULL<pos:position pos:line="90" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="28">ssl_pphrase_Handle_CB<pos:position pos:line="90" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="51">&amp;<pos:position pos:line="90" pos:column="56"/></operator><name pos:line="90" pos:column="52">ppcb_arg<pos:position pos:line="90" pos:column="60"/></name></expr></argument>)<pos:position pos:line="90" pos:column="61"/></argument_list></call><operator pos:line="90" pos:column="61">)<pos:position pos:line="90" pos:column="62"/></operator> <operator pos:line="90" pos:column="63">!=<pos:position pos:line="90" pos:column="65"/></operator> <name pos:line="90" pos:column="66">NULL<pos:position pos:line="90" pos:column="70"/></name></expr> ?<pos:position pos:line="90" pos:column="72"/></condition><then pos:line="90" pos:column="72">
                     <expr><name pos:line="91" pos:column="22">TRUE<pos:position pos:line="91" pos:column="26"/></name></expr> <pos:position pos:line="91" pos:column="27"/></then><else pos:line="91" pos:column="27">: <expr><name pos:line="91" pos:column="29">FALSE<pos:position pos:line="91" pos:column="34"/></name></expr></else></ternary><operator pos:line="91" pos:column="34">)<pos:position pos:line="91" pos:column="35"/></operator></expr>;<pos:position pos:line="91" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="93" pos:column="9">/*
         * when the private key file now was readable,
         * it's fine and we go out of the loop
         */</comment>
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">bReadable<pos:position pos:line="97" pos:column="22"/></name></expr>)<pos:position pos:line="97" pos:column="23"/></condition><then pos:line="97" pos:column="23">
           <block type="pseudo"><break pos:line="98" pos:column="12">break;<pos:position pos:line="98" pos:column="18"/></break></block></then></if>

        <comment type="block" pos:line="100" pos:column="9">/*
         * when we have more remembered pass phrases
         * try to reuse these first.
         */</comment>
        <if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name><name pos:line="104" pos:column="13">ppcb_arg<pos:position pos:line="104" pos:column="21"/></name><operator pos:line="104" pos:column="21">.<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="22">nPassPhraseCur<pos:position pos:line="104" pos:column="36"/></name></name> <operator pos:line="104" pos:column="37">&lt;<pos:position pos:line="104" pos:column="41"/></operator> <name pos:line="104" pos:column="39">nPassPhrase<pos:position pos:line="104" pos:column="50"/></name></expr>)<pos:position pos:line="104" pos:column="51"/></condition><then pos:line="104" pos:column="51"> <block pos:line="104" pos:column="52">{
            <expr_stmt><expr><name><name pos:line="105" pos:column="13">ppcb_arg<pos:position pos:line="105" pos:column="21"/></name><operator pos:line="105" pos:column="21">.<pos:position pos:line="105" pos:column="22"/></operator><name pos:line="105" pos:column="22">nPassPhraseCur<pos:position pos:line="105" pos:column="36"/></name></name><operator pos:line="105" pos:column="36">++<pos:position pos:line="105" pos:column="38"/></operator></expr>;<pos:position pos:line="105" pos:column="39"/></expr_stmt>
            <continue pos:line="106" pos:column="13">continue;<pos:position pos:line="106" pos:column="22"/></continue>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="109" pos:column="9">/*
         * else it's not readable and we have no more
         * remembered pass phrases. Then this has to mean
         * that the callback function popped up the dialog
         * but a wrong pass phrase was entered.  We give the
         * user (but not the dialog program) a few more
         * chances...
         */</comment>
<cpp:ifndef pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">ifndef<pos:position pos:line="117" pos:column="8"/></cpp:directive> <name pos:line="117" pos:column="9">WIN32<pos:position pos:line="117" pos:column="14"/></name></cpp:ifndef>
        <if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><operator pos:line="118" pos:column="13">(<pos:position pos:line="118" pos:column="14"/></operator><name><name pos:line="118" pos:column="14">sc<pos:position pos:line="118" pos:column="16"/></name><operator pos:line="118" pos:column="16">-&gt;<pos:position pos:line="118" pos:column="21"/></operator><name pos:line="118" pos:column="18">server<pos:position pos:line="118" pos:column="24"/></name><operator pos:line="118" pos:column="24">-&gt;<pos:position pos:line="118" pos:column="29"/></operator><name pos:line="118" pos:column="26">pphrase_dialog_type<pos:position pos:line="118" pos:column="45"/></name></name> <operator pos:line="118" pos:column="46">==<pos:position pos:line="118" pos:column="48"/></operator> <name pos:line="118" pos:column="49">SSL_PPTYPE_BUILTIN<pos:position pos:line="118" pos:column="67"/></name>
             <operator pos:line="119" pos:column="14">||<pos:position pos:line="119" pos:column="16"/></operator> <name><name pos:line="119" pos:column="17">sc<pos:position pos:line="119" pos:column="19"/></name><operator pos:line="119" pos:column="19">-&gt;<pos:position pos:line="119" pos:column="24"/></operator><name pos:line="119" pos:column="21">server<pos:position pos:line="119" pos:column="27"/></name><operator pos:line="119" pos:column="27">-&gt;<pos:position pos:line="119" pos:column="32"/></operator><name pos:line="119" pos:column="29">pphrase_dialog_type<pos:position pos:line="119" pos:column="48"/></name></name> <operator pos:line="119" pos:column="49">==<pos:position pos:line="119" pos:column="51"/></operator> <name pos:line="119" pos:column="52">SSL_PPTYPE_PIPE<pos:position pos:line="119" pos:column="67"/></name><operator pos:line="119" pos:column="67">)<pos:position pos:line="119" pos:column="68"/></operator></expr></condition></if>
<cpp:else pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">else<pos:position pos:line="120" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><name><name pos:line="121" pos:column="13">sc<pos:position pos:line="121" pos:column="15"/></name><operator pos:line="121" pos:column="15">-&gt;<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="17">server<pos:position pos:line="121" pos:column="23"/></name><operator pos:line="121" pos:column="23">-&gt;<pos:position pos:line="121" pos:column="28"/></operator><name pos:line="121" pos:column="25">pphrase_dialog_type<pos:position pos:line="121" pos:column="44"/></name></name> <operator pos:line="121" pos:column="45">==<pos:position pos:line="121" pos:column="47"/></operator> <name pos:line="121" pos:column="48">SSL_PPTYPE_PIPE<pos:position pos:line="121" pos:column="63"/></name>
<cpp:endif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">endif<pos:position pos:line="122" pos:column="7"/></cpp:directive></cpp:endif>
            <operator pos:line="123" pos:column="13">&amp;&amp;<pos:position pos:line="123" pos:column="23"/></operator> <name><name pos:line="123" pos:column="16">ppcb_arg<pos:position pos:line="123" pos:column="24"/></name><operator pos:line="123" pos:column="24">.<pos:position pos:line="123" pos:column="25"/></operator><name pos:line="123" pos:column="25">cpPassPhraseCur<pos:position pos:line="123" pos:column="40"/></name></name> <operator pos:line="123" pos:column="41">!=<pos:position pos:line="123" pos:column="43"/></operator> <name pos:line="123" pos:column="44">NULL<pos:position pos:line="123" pos:column="48"/></name>
            <operator pos:line="124" pos:column="13">&amp;&amp;<pos:position pos:line="124" pos:column="23"/></operator> <name pos:line="124" pos:column="16">nPassPhraseRetry<pos:position pos:line="124" pos:column="32"/></name> <operator pos:line="124" pos:column="33">&lt;<pos:position pos:line="124" pos:column="37"/></operator> <name pos:line="124" pos:column="35">BUILTIN_DIALOG_RETRIES<pos:position pos:line="124" pos:column="57"/></name></expr> )<pos:position pos:line="124" pos:column="59"/></condition><then pos:line="124" pos:column="59"> <block pos:line="124" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="125" pos:column="13">apr_file_printf<pos:position pos:line="125" pos:column="28"/></name><argument_list pos:line="125" pos:column="28">(<argument><expr><name pos:line="125" pos:column="29">writetty<pos:position pos:line="125" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="39">"Apache:mod_ssl:Error: Pass phrase incorrect "<pos:position pos:line="125" pos:column="85"/></literal>
                    <literal type="string" pos:line="126" pos:column="21">"(%d more retr%s permitted).\n"<pos:position pos:line="126" pos:column="52"/></literal></expr></argument>,
                    <argument><expr><operator pos:line="127" pos:column="21">(<pos:position pos:line="127" pos:column="22"/></operator><name pos:line="127" pos:column="22">BUILTIN_DIALOG_RETRIES<pos:position pos:line="127" pos:column="44"/></name><operator pos:line="127" pos:column="44">-<pos:position pos:line="127" pos:column="45"/></operator><name pos:line="127" pos:column="45">nPassPhraseRetry<pos:position pos:line="127" pos:column="61"/></name><operator pos:line="127" pos:column="61">)<pos:position pos:line="127" pos:column="62"/></operator></expr></argument>,
                    <argument><expr><ternary><condition><expr><operator pos:line="128" pos:column="21">(<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="22">BUILTIN_DIALOG_RETRIES<pos:position pos:line="128" pos:column="44"/></name><operator pos:line="128" pos:column="44">-<pos:position pos:line="128" pos:column="45"/></operator><name pos:line="128" pos:column="45">nPassPhraseRetry<pos:position pos:line="128" pos:column="61"/></name><operator pos:line="128" pos:column="61">)<pos:position pos:line="128" pos:column="62"/></operator> <operator pos:line="128" pos:column="63">==<pos:position pos:line="128" pos:column="65"/></operator> <literal type="number" pos:line="128" pos:column="66">1<pos:position pos:line="128" pos:column="67"/></literal></expr> ?<pos:position pos:line="128" pos:column="69"/></condition><then pos:line="128" pos:column="69"> <expr><literal type="string" pos:line="128" pos:column="70">"y"<pos:position pos:line="128" pos:column="73"/></literal></expr> <pos:position pos:line="128" pos:column="74"/></then><else pos:line="128" pos:column="74">: <expr><literal type="string" pos:line="128" pos:column="76">"ies"<pos:position pos:line="128" pos:column="81"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="128" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name pos:line="129" pos:column="13">nPassPhraseRetry<pos:position pos:line="129" pos:column="29"/></name><operator pos:line="129" pos:column="29">++<pos:position pos:line="129" pos:column="31"/></operator></expr>;<pos:position pos:line="129" pos:column="32"/></expr_stmt>
            <if pos:line="130" pos:column="13">if <condition pos:line="130" pos:column="16">(<expr><name pos:line="130" pos:column="17">nPassPhraseRetry<pos:position pos:line="130" pos:column="33"/></name> <operator pos:line="130" pos:column="34">&gt;<pos:position pos:line="130" pos:column="38"/></operator> <name pos:line="130" pos:column="36">BUILTIN_DIALOG_BACKOFF<pos:position pos:line="130" pos:column="58"/></name></expr>)<pos:position pos:line="130" pos:column="59"/></condition><then pos:line="130" pos:column="59">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="17">apr_sleep<pos:position pos:line="131" pos:column="26"/></name><argument_list pos:line="131" pos:column="26">(<argument><expr><operator pos:line="131" pos:column="27">(<pos:position pos:line="131" pos:column="28"/></operator><name pos:line="131" pos:column="28">nPassPhraseRetry<pos:position pos:line="131" pos:column="44"/></name><operator pos:line="131" pos:column="44">-<pos:position pos:line="131" pos:column="45"/></operator><name pos:line="131" pos:column="45">BUILTIN_DIALOG_BACKOFF<pos:position pos:line="131" pos:column="67"/></name><operator pos:line="131" pos:column="67">)<pos:position pos:line="131" pos:column="68"/></operator>
                            <operator pos:line="132" pos:column="29">*<pos:position pos:line="132" pos:column="30"/></operator> <literal type="number" pos:line="132" pos:column="31">5<pos:position pos:line="132" pos:column="32"/></literal> <operator pos:line="132" pos:column="33">*<pos:position pos:line="132" pos:column="34"/></operator> <name pos:line="132" pos:column="35">APR_USEC_PER_SEC<pos:position pos:line="132" pos:column="51"/></name></expr></argument>)<pos:position pos:line="132" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="53"/></expr_stmt></block></then></if>
            <continue pos:line="133" pos:column="13">continue;<pos:position pos:line="133" pos:column="22"/></continue>
        }<pos:position pos:line="134" pos:column="10"/></block></then></if>
<cpp:ifdef pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">ifdef<pos:position pos:line="135" pos:column="7"/></cpp:directive> <name pos:line="135" pos:column="8">WIN32<pos:position pos:line="135" pos:column="13"/></name></cpp:ifdef>
        <if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><name><name pos:line="136" pos:column="13">sc<pos:position pos:line="136" pos:column="15"/></name><operator pos:line="136" pos:column="15">-&gt;<pos:position pos:line="136" pos:column="20"/></operator><name pos:line="136" pos:column="17">server<pos:position pos:line="136" pos:column="23"/></name><operator pos:line="136" pos:column="23">-&gt;<pos:position pos:line="136" pos:column="28"/></operator><name pos:line="136" pos:column="25">pphrase_dialog_type<pos:position pos:line="136" pos:column="44"/></name></name> <operator pos:line="136" pos:column="45">==<pos:position pos:line="136" pos:column="47"/></operator> <name pos:line="136" pos:column="48">SSL_PPTYPE_BUILTIN<pos:position pos:line="136" pos:column="66"/></name></expr>)<pos:position pos:line="136" pos:column="67"/></condition><then pos:line="136" pos:column="67"> <block pos:line="136" pos:column="68">{
            <expr_stmt><expr><call><name pos:line="137" pos:column="13">ap_log_error<pos:position pos:line="137" pos:column="25"/></name><argument_list pos:line="137" pos:column="25">(<argument><expr><name pos:line="137" pos:column="26">APLOG_MARK<pos:position pos:line="137" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="38">APLOG_EMERG<pos:position pos:line="137" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="51">0<pos:position pos:line="137" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="137" pos:column="54">s<pos:position pos:line="137" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="57">APLOGNO<pos:position pos:line="137" pos:column="64"/></name><argument_list pos:line="137" pos:column="64">(<argument><expr><literal type="number" pos:line="137" pos:column="65">02577<pos:position pos:line="137" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="138" pos:column="26">"Init: SSLPassPhraseDialog builtin is not "<pos:position pos:line="138" pos:column="69"/></literal>
                         <literal type="string" pos:line="139" pos:column="26">"supported on Win32 (key file "<pos:position pos:line="139" pos:column="57"/></literal>
                         <literal type="string" pos:line="140" pos:column="26">"%s)"<pos:position pos:line="140" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="33">ppcb_arg<pos:position pos:line="140" pos:column="41"/></name><operator pos:line="140" pos:column="41">.<pos:position pos:line="140" pos:column="42"/></operator><name pos:line="140" pos:column="42">pkey_file<pos:position pos:line="140" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="53"/></expr_stmt>
            <return pos:line="141" pos:column="13">return <expr><call><name pos:line="141" pos:column="20">ssl_die<pos:position pos:line="141" pos:column="27"/></name><argument_list pos:line="141" pos:column="27">(<argument><expr><name pos:line="141" pos:column="28">s<pos:position pos:line="141" pos:column="29"/></name></expr></argument>)<pos:position pos:line="141" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="31"/></return>
        }<pos:position pos:line="142" pos:column="10"/></block></then></if>
<cpp:endif pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">endif<pos:position pos:line="143" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="143" pos:column="8">/* WIN32 */</comment>

        <comment type="block" pos:line="145" pos:column="9">/*
         * Ok, anything else now means a fatal error.
         */</comment>
        <if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><name><name pos:line="148" pos:column="13">ppcb_arg<pos:position pos:line="148" pos:column="21"/></name><operator pos:line="148" pos:column="21">.<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="22">cpPassPhraseCur<pos:position pos:line="148" pos:column="37"/></name></name> <operator pos:line="148" pos:column="38">==<pos:position pos:line="148" pos:column="40"/></operator> <name pos:line="148" pos:column="41">NULL<pos:position pos:line="148" pos:column="45"/></name></expr>)<pos:position pos:line="148" pos:column="46"/></condition><then pos:line="148" pos:column="46"> <block pos:line="148" pos:column="47">{
            <if pos:line="149" pos:column="13">if <condition pos:line="149" pos:column="16">(<expr><name><name pos:line="149" pos:column="17">ppcb_arg<pos:position pos:line="149" pos:column="25"/></name><operator pos:line="149" pos:column="25">.<pos:position pos:line="149" pos:column="26"/></operator><name pos:line="149" pos:column="26">nPassPhraseDialogCur<pos:position pos:line="149" pos:column="46"/></name></name> <operator pos:line="149" pos:column="47">&amp;&amp;<pos:position pos:line="149" pos:column="57"/></operator> <name pos:line="149" pos:column="50">pkey_mtime<pos:position pos:line="149" pos:column="60"/></name> <operator pos:line="149" pos:column="61">&amp;&amp;<pos:position pos:line="149" pos:column="71"/></operator>
                <operator pos:line="150" pos:column="17">!<pos:position pos:line="150" pos:column="18"/></operator><call><name pos:line="150" pos:column="18">isatty<pos:position pos:line="150" pos:column="24"/></name><argument_list pos:line="150" pos:column="24">(<argument><expr><call><name pos:line="150" pos:column="25">fileno<pos:position pos:line="150" pos:column="31"/></name><argument_list pos:line="150" pos:column="31">(<argument><expr><name pos:line="150" pos:column="32">stdout<pos:position pos:line="150" pos:column="38"/></name></expr></argument>)<pos:position pos:line="150" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="150" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="41"/></condition><then pos:line="150" pos:column="41"> <comment type="block" pos:line="150" pos:column="42">/* XXX: apr_isatty() */</comment>
            <block pos:line="151" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="152" pos:column="17">ap_log_error<pos:position pos:line="152" pos:column="29"/></name><argument_list pos:line="152" pos:column="29">(<argument><expr><name pos:line="152" pos:column="30">APLOG_MARK<pos:position pos:line="152" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="42">APLOG_ERR<pos:position pos:line="152" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="53">0<pos:position pos:line="152" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><name pos:line="153" pos:column="30">s<pos:position pos:line="153" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="153" pos:column="33">APLOGNO<pos:position pos:line="153" pos:column="40"/></name><argument_list pos:line="153" pos:column="40">(<argument><expr><literal type="number" pos:line="153" pos:column="41">02578<pos:position pos:line="153" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="47"/></argument_list></call>
                             <literal type="string" pos:line="154" pos:column="30">"Init: Unable to read pass phrase "<pos:position pos:line="154" pos:column="65"/></literal>
                             <literal type="string" pos:line="155" pos:column="30">"[Hint: key introduced or changed "<pos:position pos:line="155" pos:column="65"/></literal>
                             <literal type="string" pos:line="156" pos:column="30">"before restart?]"<pos:position pos:line="156" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="157" pos:column="17">ssl_log_ssl_error<pos:position pos:line="157" pos:column="34"/></name><argument_list pos:line="157" pos:column="34">(<argument><expr><name pos:line="157" pos:column="35">SSLLOG_MARK<pos:position pos:line="157" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="48">APLOG_ERR<pos:position pos:line="157" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="59">s<pos:position pos:line="157" pos:column="60"/></name></expr></argument>)<pos:position pos:line="157" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="158" pos:column="14"/></block></then>
            <else pos:line="159" pos:column="13">else <block pos:line="159" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="160" pos:column="17">ap_log_error<pos:position pos:line="160" pos:column="29"/></name><argument_list pos:line="160" pos:column="29">(<argument><expr><name pos:line="160" pos:column="30">APLOG_MARK<pos:position pos:line="160" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="42">APLOG_ERR<pos:position pos:line="160" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="53">0<pos:position pos:line="160" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><name pos:line="161" pos:column="30">s<pos:position pos:line="161" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="161" pos:column="33">APLOGNO<pos:position pos:line="161" pos:column="40"/></name><argument_list pos:line="161" pos:column="40">(<argument><expr><literal type="number" pos:line="161" pos:column="41">02579<pos:position pos:line="161" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="47"/></argument_list></call> <literal type="string" pos:line="161" pos:column="48">"Init: Private key not found"<pos:position pos:line="161" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="79"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="162" pos:column="17">ssl_log_ssl_error<pos:position pos:line="162" pos:column="34"/></name><argument_list pos:line="162" pos:column="34">(<argument><expr><name pos:line="162" pos:column="35">SSLLOG_MARK<pos:position pos:line="162" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="48">APLOG_ERR<pos:position pos:line="162" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="59">s<pos:position pos:line="162" pos:column="60"/></name></expr></argument>)<pos:position pos:line="162" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="163" pos:column="14"/></block></else></if>
            <if pos:line="164" pos:column="13">if <condition pos:line="164" pos:column="16">(<expr><name pos:line="164" pos:column="17">writetty<pos:position pos:line="164" pos:column="25"/></name></expr>)<pos:position pos:line="164" pos:column="26"/></condition><then pos:line="164" pos:column="26"> <block pos:line="164" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="165" pos:column="17">apr_file_printf<pos:position pos:line="165" pos:column="32"/></name><argument_list pos:line="165" pos:column="32">(<argument><expr><name pos:line="165" pos:column="33">writetty<pos:position pos:line="165" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="43">"Apache:mod_ssl:Error: Private key not found.\n"<pos:position pos:line="165" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="93"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="166" pos:column="17">apr_file_printf<pos:position pos:line="166" pos:column="32"/></name><argument_list pos:line="166" pos:column="32">(<argument><expr><name pos:line="166" pos:column="33">writetty<pos:position pos:line="166" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="43">"**Stopped\n"<pos:position pos:line="166" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="167" pos:column="14"/></block></then></if>
        }<pos:position pos:line="168" pos:column="10"/></block></then>
        <else pos:line="169" pos:column="9">else <block pos:line="169" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="170" pos:column="13">ap_log_error<pos:position pos:line="170" pos:column="25"/></name><argument_list pos:line="170" pos:column="25">(<argument><expr><name pos:line="170" pos:column="26">APLOG_MARK<pos:position pos:line="170" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="38">APLOG_EMERG<pos:position pos:line="170" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="170" pos:column="51">0<pos:position pos:line="170" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="54">s<pos:position pos:line="170" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="170" pos:column="57">APLOGNO<pos:position pos:line="170" pos:column="64"/></name><argument_list pos:line="170" pos:column="64">(<argument><expr><literal type="number" pos:line="170" pos:column="65">02580<pos:position pos:line="170" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="171" pos:column="26">"Init: Pass phrase incorrect for key %s"<pos:position pos:line="171" pos:column="66"/></literal></expr></argument>,
                         <argument><expr><name pos:line="172" pos:column="26">key_id<pos:position pos:line="172" pos:column="32"/></name></expr></argument>)<pos:position pos:line="172" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="173" pos:column="13">ssl_log_ssl_error<pos:position pos:line="173" pos:column="30"/></name><argument_list pos:line="173" pos:column="30">(<argument><expr><name pos:line="173" pos:column="31">SSLLOG_MARK<pos:position pos:line="173" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="44">APLOG_EMERG<pos:position pos:line="173" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="57">s<pos:position pos:line="173" pos:column="58"/></name></expr></argument>)<pos:position pos:line="173" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="60"/></expr_stmt>

            <if pos:line="175" pos:column="13">if <condition pos:line="175" pos:column="16">(<expr><name pos:line="175" pos:column="17">writetty<pos:position pos:line="175" pos:column="25"/></name></expr>)<pos:position pos:line="175" pos:column="26"/></condition><then pos:line="175" pos:column="26"> <block pos:line="175" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="176" pos:column="17">apr_file_printf<pos:position pos:line="176" pos:column="32"/></name><argument_list pos:line="176" pos:column="32">(<argument><expr><name pos:line="176" pos:column="33">writetty<pos:position pos:line="176" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="43">"Apache:mod_ssl:Error: Pass phrase incorrect.\n"<pos:position pos:line="176" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="93"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="177" pos:column="17">apr_file_printf<pos:position pos:line="177" pos:column="32"/></name><argument_list pos:line="177" pos:column="32">(<argument><expr><name pos:line="177" pos:column="33">writetty<pos:position pos:line="177" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="43">"**Stopped\n"<pos:position pos:line="177" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="178" pos:column="14"/></block></then></if>
        }<pos:position pos:line="179" pos:column="10"/></block></else></if>
        <return pos:line="180" pos:column="9">return <expr><call><name pos:line="180" pos:column="16">ssl_die<pos:position pos:line="180" pos:column="23"/></name><argument_list pos:line="180" pos:column="23">(<argument><expr><name pos:line="180" pos:column="24">s<pos:position pos:line="180" pos:column="25"/></name></expr></argument>)<pos:position pos:line="180" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="27"/></return>
    }<pos:position pos:line="181" pos:column="6"/></block></for>

    <if pos:line="183" pos:column="5">if <condition pos:line="183" pos:column="8">(<expr><name pos:line="183" pos:column="9">pPrivateKey<pos:position pos:line="183" pos:column="20"/></name> <operator pos:line="183" pos:column="21">==<pos:position pos:line="183" pos:column="23"/></operator> <name pos:line="183" pos:column="24">NULL<pos:position pos:line="183" pos:column="28"/></name></expr>)<pos:position pos:line="183" pos:column="29"/></condition><then pos:line="183" pos:column="29"> <block pos:line="183" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="184" pos:column="9">ap_log_error<pos:position pos:line="184" pos:column="21"/></name><argument_list pos:line="184" pos:column="21">(<argument><expr><name pos:line="184" pos:column="22">APLOG_MARK<pos:position pos:line="184" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="34">APLOG_EMERG<pos:position pos:line="184" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="184" pos:column="47">0<pos:position pos:line="184" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="184" pos:column="50">s<pos:position pos:line="184" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="184" pos:column="53">APLOGNO<pos:position pos:line="184" pos:column="60"/></name><argument_list pos:line="184" pos:column="60">(<argument><expr><literal type="number" pos:line="184" pos:column="61">02581<pos:position pos:line="184" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="67"/></argument_list></call>
                     <literal type="string" pos:line="185" pos:column="22">"Init: Unable to read server private key from file %s"<pos:position pos:line="185" pos:column="76"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="186" pos:column="22">ppcb_arg<pos:position pos:line="186" pos:column="30"/></name><operator pos:line="186" pos:column="30">.<pos:position pos:line="186" pos:column="31"/></operator><name pos:line="186" pos:column="31">pkey_file<pos:position pos:line="186" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="186" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="187" pos:column="9">ssl_log_ssl_error<pos:position pos:line="187" pos:column="26"/></name><argument_list pos:line="187" pos:column="26">(<argument><expr><name pos:line="187" pos:column="27">SSLLOG_MARK<pos:position pos:line="187" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="40">APLOG_EMERG<pos:position pos:line="187" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="53">s<pos:position pos:line="187" pos:column="54"/></name></expr></argument>)<pos:position pos:line="187" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="56"/></expr_stmt>
        <return pos:line="188" pos:column="9">return <expr><call><name pos:line="188" pos:column="16">ssl_die<pos:position pos:line="188" pos:column="23"/></name><argument_list pos:line="188" pos:column="23">(<argument><expr><name pos:line="188" pos:column="24">s<pos:position pos:line="188" pos:column="25"/></name></expr></argument>)<pos:position pos:line="188" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="27"/></return>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="191" pos:column="5">/*
     * Log the type of reading
     */</comment>
    <if pos:line="194" pos:column="5">if <condition pos:line="194" pos:column="8">(<expr><name><name pos:line="194" pos:column="9">ppcb_arg<pos:position pos:line="194" pos:column="17"/></name><operator pos:line="194" pos:column="17">.<pos:position pos:line="194" pos:column="18"/></operator><name pos:line="194" pos:column="18">nPassPhraseDialogCur<pos:position pos:line="194" pos:column="38"/></name></name> <operator pos:line="194" pos:column="39">==<pos:position pos:line="194" pos:column="41"/></operator> <literal type="number" pos:line="194" pos:column="42">0<pos:position pos:line="194" pos:column="43"/></literal></expr>)<pos:position pos:line="194" pos:column="44"/></condition><then pos:line="194" pos:column="44"> <block pos:line="194" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="195" pos:column="9">ap_log_error<pos:position pos:line="195" pos:column="21"/></name><argument_list pos:line="195" pos:column="21">(<argument><expr><name pos:line="195" pos:column="22">APLOG_MARK<pos:position pos:line="195" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="34">APLOG_DEBUG<pos:position pos:line="195" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="195" pos:column="47">0<pos:position pos:line="195" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="195" pos:column="50">s<pos:position pos:line="195" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="195" pos:column="53">APLOGNO<pos:position pos:line="195" pos:column="60"/></name><argument_list pos:line="195" pos:column="60">(<argument><expr><literal type="number" pos:line="195" pos:column="61">02582<pos:position pos:line="195" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="67"/></argument_list></call>
                     <literal type="string" pos:line="196" pos:column="22">"unencrypted %s private key - pass phrase not "<pos:position pos:line="196" pos:column="69"/></literal>
                     <literal type="string" pos:line="197" pos:column="22">"required"<pos:position pos:line="197" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="197" pos:column="34">key_id<pos:position pos:line="197" pos:column="40"/></name></expr></argument>)<pos:position pos:line="197" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="198" pos:column="6"/></block></then>
    <else pos:line="199" pos:column="5">else <block pos:line="199" pos:column="10">{
        <if pos:line="200" pos:column="9">if <condition pos:line="200" pos:column="12">(<expr><name><name pos:line="200" pos:column="13">ppcb_arg<pos:position pos:line="200" pos:column="21"/></name><operator pos:line="200" pos:column="21">.<pos:position pos:line="200" pos:column="22"/></operator><name pos:line="200" pos:column="22">cpPassPhraseCur<pos:position pos:line="200" pos:column="37"/></name></name> <operator pos:line="200" pos:column="38">!=<pos:position pos:line="200" pos:column="40"/></operator> <name pos:line="200" pos:column="41">NULL<pos:position pos:line="200" pos:column="45"/></name></expr>)<pos:position pos:line="200" pos:column="46"/></condition><then pos:line="200" pos:column="46"> <block pos:line="200" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="201" pos:column="13">ap_log_error<pos:position pos:line="201" pos:column="25"/></name><argument_list pos:line="201" pos:column="25">(<argument><expr><name pos:line="201" pos:column="26">APLOG_MARK<pos:position pos:line="201" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="38">APLOG_DEBUG<pos:position pos:line="201" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="51">0<pos:position pos:line="201" pos:column="52"/></literal></expr></argument>,
                         <argument><expr><name pos:line="202" pos:column="26">s<pos:position pos:line="202" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="202" pos:column="29">APLOGNO<pos:position pos:line="202" pos:column="36"/></name><argument_list pos:line="202" pos:column="36">(<argument><expr><literal type="number" pos:line="202" pos:column="37">02583<pos:position pos:line="202" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="43"/></argument_list></call>
                         <literal type="string" pos:line="203" pos:column="26">"encrypted %s private key - pass phrase "<pos:position pos:line="203" pos:column="67"/></literal>
                         <literal type="string" pos:line="204" pos:column="26">"requested"<pos:position pos:line="204" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="204" pos:column="39">key_id<pos:position pos:line="204" pos:column="45"/></name></expr></argument>)<pos:position pos:line="204" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="205" pos:column="10"/></block></then>
        <else pos:line="206" pos:column="9">else <block pos:line="206" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="207" pos:column="13">ap_log_error<pos:position pos:line="207" pos:column="25"/></name><argument_list pos:line="207" pos:column="25">(<argument><expr><name pos:line="207" pos:column="26">APLOG_MARK<pos:position pos:line="207" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="38">APLOG_DEBUG<pos:position pos:line="207" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="207" pos:column="51">0<pos:position pos:line="207" pos:column="52"/></literal></expr></argument>,
                         <argument><expr><name pos:line="208" pos:column="26">s<pos:position pos:line="208" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="208" pos:column="29">APLOGNO<pos:position pos:line="208" pos:column="36"/></name><argument_list pos:line="208" pos:column="36">(<argument><expr><literal type="number" pos:line="208" pos:column="37">02584<pos:position pos:line="208" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="43"/></argument_list></call>
                         <literal type="string" pos:line="209" pos:column="26">"encrypted %s private key - pass phrase"<pos:position pos:line="209" pos:column="66"/></literal>
                         <literal type="string" pos:line="210" pos:column="26">" reused"<pos:position pos:line="210" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="210" pos:column="37">key_id<pos:position pos:line="210" pos:column="43"/></name></expr></argument>)<pos:position pos:line="210" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="211" pos:column="10"/></block></else></if>
    }<pos:position pos:line="212" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="214" pos:column="5">/*
     * Ok, when we have one more pass phrase store it
     */</comment>
    <if pos:line="217" pos:column="5">if <condition pos:line="217" pos:column="8">(<expr><name><name pos:line="217" pos:column="9">ppcb_arg<pos:position pos:line="217" pos:column="17"/></name><operator pos:line="217" pos:column="17">.<pos:position pos:line="217" pos:column="18"/></operator><name pos:line="217" pos:column="18">cpPassPhraseCur<pos:position pos:line="217" pos:column="33"/></name></name> <operator pos:line="217" pos:column="34">!=<pos:position pos:line="217" pos:column="36"/></operator> <name pos:line="217" pos:column="37">NULL<pos:position pos:line="217" pos:column="41"/></name></expr>)<pos:position pos:line="217" pos:column="42"/></condition><then pos:line="217" pos:column="42"> <block pos:line="217" pos:column="43">{
        <expr_stmt><expr><operator pos:line="218" pos:column="9">*<pos:position pos:line="218" pos:column="10"/></operator><operator pos:line="218" pos:column="10">(<pos:position pos:line="218" pos:column="11"/></operator><specifier pos:line="218" pos:column="11">const<pos:position pos:line="218" pos:column="16"/></specifier> <name pos:line="218" pos:column="17">char<pos:position pos:line="218" pos:column="21"/></name> <operator pos:line="218" pos:column="22">*<pos:position pos:line="218" pos:column="23"/></operator><operator pos:line="218" pos:column="23">*<pos:position pos:line="218" pos:column="24"/></operator><operator pos:line="218" pos:column="24">)<pos:position pos:line="218" pos:column="25"/></operator><call><name pos:line="218" pos:column="25">apr_array_push<pos:position pos:line="218" pos:column="39"/></name><argument_list pos:line="218" pos:column="39">(<argument><expr><name><name pos:line="218" pos:column="40">ppcb_arg<pos:position pos:line="218" pos:column="48"/></name><operator pos:line="218" pos:column="48">.<pos:position pos:line="218" pos:column="49"/></operator><name pos:line="218" pos:column="49">aPassPhrase<pos:position pos:line="218" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="61"/></argument_list></call> <operator pos:line="218" pos:column="62">=<pos:position pos:line="218" pos:column="63"/></operator>
            <name><name pos:line="219" pos:column="13">ppcb_arg<pos:position pos:line="219" pos:column="21"/></name><operator pos:line="219" pos:column="21">.<pos:position pos:line="219" pos:column="22"/></operator><name pos:line="219" pos:column="22">cpPassPhraseCur<pos:position pos:line="219" pos:column="37"/></name></name></expr>;<pos:position pos:line="219" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="220" pos:column="9">nPassPhrase<pos:position pos:line="220" pos:column="20"/></name><operator pos:line="220" pos:column="20">++<pos:position pos:line="220" pos:column="22"/></operator></expr>;<pos:position pos:line="220" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="221" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="223" pos:column="5">/*
     * Insert private key into the global module configuration
     * (we convert it to a stand-alone DER byte sequence
     * because the SSL library uses static variables inside a
     * RSA structure which do not survive DSO reloads!)
     */</comment>
    <expr_stmt><expr><name pos:line="229" pos:column="5">length<pos:position pos:line="229" pos:column="11"/></name> <operator pos:line="229" pos:column="12">=<pos:position pos:line="229" pos:column="13"/></operator> <call><name pos:line="229" pos:column="14">i2d_PrivateKey<pos:position pos:line="229" pos:column="28"/></name><argument_list pos:line="229" pos:column="28">(<argument><expr><name pos:line="229" pos:column="29">pPrivateKey<pos:position pos:line="229" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="42">NULL<pos:position pos:line="229" pos:column="46"/></name></expr></argument>)<pos:position pos:line="229" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="230" pos:column="5">ucp<pos:position pos:line="230" pos:column="8"/></name> <operator pos:line="230" pos:column="9">=<pos:position pos:line="230" pos:column="10"/></operator> <call><name pos:line="230" pos:column="11">ssl_asn1_table_set<pos:position pos:line="230" pos:column="29"/></name><argument_list pos:line="230" pos:column="29">(<argument><expr><name><name pos:line="230" pos:column="30">mc<pos:position pos:line="230" pos:column="32"/></name><operator pos:line="230" pos:column="32">-&gt;<pos:position pos:line="230" pos:column="37"/></operator><name pos:line="230" pos:column="34">tPrivateKey<pos:position pos:line="230" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="47">key_id<pos:position pos:line="230" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="55">length<pos:position pos:line="230" pos:column="61"/></name></expr></argument>)<pos:position pos:line="230" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="231" pos:column="5">(<pos:position pos:line="231" pos:column="6"/></operator><name pos:line="231" pos:column="6">void<pos:position pos:line="231" pos:column="10"/></name><operator pos:line="231" pos:column="10">)<pos:position pos:line="231" pos:column="11"/></operator><call><name pos:line="231" pos:column="11">i2d_PrivateKey<pos:position pos:line="231" pos:column="25"/></name><argument_list pos:line="231" pos:column="25">(<argument><expr><name pos:line="231" pos:column="26">pPrivateKey<pos:position pos:line="231" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="231" pos:column="39">&amp;<pos:position pos:line="231" pos:column="44"/></operator><name pos:line="231" pos:column="40">ucp<pos:position pos:line="231" pos:column="43"/></name></expr></argument>)<pos:position pos:line="231" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="45"/></expr_stmt> <comment type="block" pos:line="231" pos:column="46">/* 2nd arg increments */</comment>

    <if pos:line="233" pos:column="5">if <condition pos:line="233" pos:column="8">(<expr><name><name pos:line="233" pos:column="9">ppcb_arg<pos:position pos:line="233" pos:column="17"/></name><operator pos:line="233" pos:column="17">.<pos:position pos:line="233" pos:column="18"/></operator><name pos:line="233" pos:column="18">nPassPhraseDialogCur<pos:position pos:line="233" pos:column="38"/></name></name> <operator pos:line="233" pos:column="39">!=<pos:position pos:line="233" pos:column="41"/></operator> <literal type="number" pos:line="233" pos:column="42">0<pos:position pos:line="233" pos:column="43"/></literal></expr>)<pos:position pos:line="233" pos:column="44"/></condition><then pos:line="233" pos:column="44"> <block pos:line="233" pos:column="45">{
        <comment type="block" pos:line="234" pos:column="9">/* remember mtime of encrypted keys */</comment>
        <expr_stmt><expr><name pos:line="235" pos:column="9">asn1<pos:position pos:line="235" pos:column="13"/></name> <operator pos:line="235" pos:column="14">=<pos:position pos:line="235" pos:column="15"/></operator> <call><name pos:line="235" pos:column="16">ssl_asn1_table_get<pos:position pos:line="235" pos:column="34"/></name><argument_list pos:line="235" pos:column="34">(<argument><expr><name><name pos:line="235" pos:column="35">mc<pos:position pos:line="235" pos:column="37"/></name><operator pos:line="235" pos:column="37">-&gt;<pos:position pos:line="235" pos:column="42"/></operator><name pos:line="235" pos:column="39">tPrivateKey<pos:position pos:line="235" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="52">key_id<pos:position pos:line="235" pos:column="58"/></name></expr></argument>)<pos:position pos:line="235" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="236" pos:column="9">asn1<pos:position pos:line="236" pos:column="13"/></name><operator pos:line="236" pos:column="13">-&gt;<pos:position pos:line="236" pos:column="18"/></operator><name pos:line="236" pos:column="15">source_mtime<pos:position pos:line="236" pos:column="27"/></name></name> <operator pos:line="236" pos:column="28">=<pos:position pos:line="236" pos:column="29"/></operator> <name pos:line="236" pos:column="30">pkey_mtime<pos:position pos:line="236" pos:column="40"/></name></expr>;<pos:position pos:line="236" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="237" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="239" pos:column="5">/*
     * Free the private key structure
     */</comment>
    <expr_stmt><expr><call><name pos:line="242" pos:column="5">EVP_PKEY_free<pos:position pos:line="242" pos:column="18"/></name><argument_list pos:line="242" pos:column="18">(<argument><expr><name pos:line="242" pos:column="19">pPrivateKey<pos:position pos:line="242" pos:column="30"/></name></expr></argument>)<pos:position pos:line="242" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="244" pos:column="5">/*
     * Let the user know when we're successful.
     */</comment>
    <if pos:line="247" pos:column="5">if <condition pos:line="247" pos:column="8">(<expr><operator pos:line="247" pos:column="9">(<pos:position pos:line="247" pos:column="10"/></operator><name><name pos:line="247" pos:column="10">ppcb_arg<pos:position pos:line="247" pos:column="18"/></name><operator pos:line="247" pos:column="18">.<pos:position pos:line="247" pos:column="19"/></operator><name pos:line="247" pos:column="19">nPassPhraseDialog<pos:position pos:line="247" pos:column="36"/></name></name> <operator pos:line="247" pos:column="37">&gt;<pos:position pos:line="247" pos:column="41"/></operator> <literal type="number" pos:line="247" pos:column="39">0<pos:position pos:line="247" pos:column="40"/></literal><operator pos:line="247" pos:column="40">)<pos:position pos:line="247" pos:column="41"/></operator> <operator pos:line="247" pos:column="42">&amp;&amp;<pos:position pos:line="247" pos:column="52"/></operator>
        <operator pos:line="248" pos:column="9">(<pos:position pos:line="248" pos:column="10"/></operator><name><name pos:line="248" pos:column="10">ppcb_arg<pos:position pos:line="248" pos:column="18"/></name><operator pos:line="248" pos:column="18">.<pos:position pos:line="248" pos:column="19"/></operator><name pos:line="248" pos:column="19">cpPassPhraseCur<pos:position pos:line="248" pos:column="34"/></name></name> <operator pos:line="248" pos:column="35">!=<pos:position pos:line="248" pos:column="37"/></operator> <name pos:line="248" pos:column="38">NULL<pos:position pos:line="248" pos:column="42"/></name><operator pos:line="248" pos:column="42">)<pos:position pos:line="248" pos:column="43"/></operator></expr>)<pos:position pos:line="248" pos:column="44"/></condition><then pos:line="248" pos:column="44"> <block pos:line="248" pos:column="45">{
        <if pos:line="249" pos:column="9">if <condition pos:line="249" pos:column="12">(<expr><name pos:line="249" pos:column="13">writetty<pos:position pos:line="249" pos:column="21"/></name></expr>)<pos:position pos:line="249" pos:column="22"/></condition><then pos:line="249" pos:column="22"> <block pos:line="249" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="250" pos:column="13">apr_file_printf<pos:position pos:line="250" pos:column="28"/></name><argument_list pos:line="250" pos:column="28">(<argument><expr><name pos:line="250" pos:column="29">writetty<pos:position pos:line="250" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="39">"\n"<pos:position pos:line="250" pos:column="43"/></literal>
                            <literal type="string" pos:line="251" pos:column="29">"OK: Pass Phrase Dialog successful.\n"<pos:position pos:line="251" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="252" pos:column="10"/></block></then></if>
    }<pos:position pos:line="253" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="255" pos:column="5">/* Close the pipes if they were opened
     */</comment>
    <if pos:line="257" pos:column="5">if <condition pos:line="257" pos:column="8">(<expr><name pos:line="257" pos:column="9">readtty<pos:position pos:line="257" pos:column="16"/></name></expr>)<pos:position pos:line="257" pos:column="17"/></condition><then pos:line="257" pos:column="17"> <block pos:line="257" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="258" pos:column="9">apr_file_close<pos:position pos:line="258" pos:column="23"/></name><argument_list pos:line="258" pos:column="23">(<argument><expr><name pos:line="258" pos:column="24">readtty<pos:position pos:line="258" pos:column="31"/></name></expr></argument>)<pos:position pos:line="258" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="259" pos:column="9">apr_file_close<pos:position pos:line="259" pos:column="23"/></name><argument_list pos:line="259" pos:column="23">(<argument><expr><name pos:line="259" pos:column="24">writetty<pos:position pos:line="259" pos:column="32"/></name></expr></argument>)<pos:position pos:line="259" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="260" pos:column="9">readtty<pos:position pos:line="260" pos:column="16"/></name> <operator pos:line="260" pos:column="17">=<pos:position pos:line="260" pos:column="18"/></operator> <name pos:line="260" pos:column="19">writetty<pos:position pos:line="260" pos:column="27"/></name> <operator pos:line="260" pos:column="28">=<pos:position pos:line="260" pos:column="29"/></operator> <name pos:line="260" pos:column="30">NULL<pos:position pos:line="260" pos:column="34"/></name></expr>;<pos:position pos:line="260" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="261" pos:column="6"/></block></then></if>

    <return pos:line="263" pos:column="5">return <expr><name pos:line="263" pos:column="12">APR_SUCCESS<pos:position pos:line="263" pos:column="23"/></name></expr>;<pos:position pos:line="263" pos:column="24"/></return>
}<pos:position pos:line="264" pos:column="2"/></block></function></unit>

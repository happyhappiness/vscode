<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1610_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">make_variant_list<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">negotiation_state<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">neg<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_array_header_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">arr<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">max_vlist_array<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><name><name pos:line="5" pos:column="28">neg<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">avail_vars<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">-&gt;<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="45">nelts<pos:position pos:line="5" pos:column="50"/></name></name> <operator pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></operator> <literal type="number" pos:line="5" pos:column="53">15<pos:position pos:line="5" pos:column="55"/></literal><operator pos:line="5" pos:column="55">)<pos:position pos:line="5" pos:column="56"/></operator> <operator pos:line="5" pos:column="57">+<pos:position pos:line="5" pos:column="58"/></operator> <literal type="number" pos:line="5" pos:column="59">2<pos:position pos:line="5" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="61"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* In order to avoid O(n^2) memory copies in building the list,
     * we preallocate a apr_table_t with the maximum substrings possible,
     * fill it with the variant list, and then concatenate the entire array.
     */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">arr<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">apr_array_make<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name><name pos:line="11" pos:column="26">r<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">pool<pos:position pos:line="11" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">max_vlist_array<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="52">sizeof<argument_list pos:line="11" pos:column="58">(<argument><expr><name pos:line="11" pos:column="59">char<pos:position pos:line="11" pos:column="63"/></name> <operator pos:line="11" pos:column="64">*<pos:position pos:line="11" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><operator pos:line="13" pos:column="6">(<pos:position pos:line="13" pos:column="7"/></operator><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><specifier pos:line="13" pos:column="8">const<pos:position pos:line="13" pos:column="13"/></specifier> <name pos:line="13" pos:column="14">char<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></operator><operator pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></operator><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">apr_array_push<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">arr<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call><operator pos:line="13" pos:column="42">)<pos:position pos:line="13" pos:column="43"/></operator> <operator pos:line="13" pos:column="44">=<pos:position pos:line="13" pos:column="45"/></operator> <literal type="string" pos:line="13" pos:column="46">"Available variants:\n&lt;ul&gt;\n"<pos:position pos:line="13" pos:column="81"/></literal></expr>;<pos:position pos:line="13" pos:column="76"/></expr_stmt>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">i<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></init> <condition><expr><name pos:line="15" pos:column="17">i<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&lt;<pos:position pos:line="15" pos:column="23"/></operator> <name><name pos:line="15" pos:column="21">neg<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">avail_vars<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">nelts<pos:position pos:line="15" pos:column="43"/></name></name></expr>;<pos:position pos:line="15" pos:column="44"/></condition> <incr><expr><operator pos:line="15" pos:column="45">++<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">i<pos:position pos:line="15" pos:column="48"/></name></expr></incr>)<pos:position pos:line="15" pos:column="49"/></control> <block pos:line="15" pos:column="50">{
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">var_rec<pos:position pos:line="16" pos:column="16"/></name> <modifier pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></modifier></type><name pos:line="16" pos:column="18">variant<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><operator pos:line="16" pos:column="29">(<pos:position pos:line="16" pos:column="30"/></operator><operator pos:line="16" pos:column="30">(<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">var_rec<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">*<pos:position pos:line="16" pos:column="40"/></operator><operator pos:line="16" pos:column="40">)<pos:position pos:line="16" pos:column="41"/></operator> <name><name pos:line="16" pos:column="42">neg<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">avail_vars<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">-&gt;<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="59">elts<pos:position pos:line="16" pos:column="63"/></name></name><operator pos:line="16" pos:column="63">)<pos:position pos:line="16" pos:column="64"/></operator><index pos:line="16" pos:column="64">[<expr><name pos:line="16" pos:column="65">i<pos:position pos:line="16" pos:column="66"/></name></expr>]<pos:position pos:line="16" pos:column="67"/></index></expr></init></decl>;<pos:position pos:line="16" pos:column="68"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">filename<pos:position pos:line="17" pos:column="29"/></name> <init pos:line="17" pos:column="30">= <expr><ternary><condition><expr><name><name pos:line="17" pos:column="32">variant<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">file_name<pos:position pos:line="17" pos:column="50"/></name></name></expr> ?<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52"> <expr><name><name pos:line="17" pos:column="53">variant<pos:position pos:line="17" pos:column="60"/></name><operator pos:line="17" pos:column="60">-&gt;<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="62">file_name<pos:position pos:line="17" pos:column="71"/></name></name></expr> <pos:position pos:line="17" pos:column="72"/></then><else pos:line="17" pos:column="72">: <expr><literal type="string" pos:line="17" pos:column="74">""<pos:position pos:line="17" pos:column="76"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="17" pos:column="77"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">apr_array_header_t<pos:position pos:line="18" pos:column="27"/></name> <modifier pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></modifier></type><name pos:line="18" pos:column="29">languages<pos:position pos:line="18" pos:column="38"/></name> <init pos:line="18" pos:column="39">= <expr><name><name pos:line="18" pos:column="41">variant<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">-&gt;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="50">content_languages<pos:position pos:line="18" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="68"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">description<pos:position pos:line="19" pos:column="32"/></name> <init pos:line="19" pos:column="33">= <expr><ternary><condition><expr><name><name pos:line="19" pos:column="35">variant<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">description<pos:position pos:line="19" pos:column="55"/></name></name></expr>
                                    ?<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38"> <expr><name><name pos:line="20" pos:column="39">variant<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">description<pos:position pos:line="20" pos:column="59"/></name></name></expr>
                                    <pos:position pos:line="21" pos:column="37"/></then><else pos:line="21" pos:column="37">: <expr><literal type="string" pos:line="21" pos:column="39">""<pos:position pos:line="21" pos:column="41"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="21" pos:column="42"/></decl_stmt>

        <comment type="block" pos:line="23" pos:column="9">/* The format isn't very neat, and it would be nice to make
         * the tags human readable (eg replace 'language en' with 'English').
         * Note that if you change the number of substrings pushed, you also
         * need to change the calculation of max_vlist_array above.
         */</comment>
        <expr_stmt><expr><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><operator pos:line="28" pos:column="11">(<pos:position pos:line="28" pos:column="12"/></operator><specifier pos:line="28" pos:column="12">const<pos:position pos:line="28" pos:column="17"/></specifier> <name pos:line="28" pos:column="18">char<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">*<pos:position pos:line="28" pos:column="24"/></operator><operator pos:line="28" pos:column="24">*<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator> <call><name pos:line="28" pos:column="27">apr_array_push<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">arr<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call><operator pos:line="28" pos:column="46">)<pos:position pos:line="28" pos:column="47"/></operator> <operator pos:line="28" pos:column="48">=<pos:position pos:line="28" pos:column="49"/></operator> <literal type="string" pos:line="28" pos:column="50">"&lt;li&gt;&lt;a href=\""<pos:position pos:line="28" pos:column="75"/></literal></expr>;<pos:position pos:line="28" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><operator pos:line="29" pos:column="11">(<pos:position pos:line="29" pos:column="12"/></operator><specifier pos:line="29" pos:column="12">const<pos:position pos:line="29" pos:column="17"/></specifier> <name pos:line="29" pos:column="18">char<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">*<pos:position pos:line="29" pos:column="24"/></operator><operator pos:line="29" pos:column="24">*<pos:position pos:line="29" pos:column="25"/></operator><operator pos:line="29" pos:column="25">)<pos:position pos:line="29" pos:column="26"/></operator> <call><name pos:line="29" pos:column="27">apr_array_push<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">arr<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call><operator pos:line="29" pos:column="46">)<pos:position pos:line="29" pos:column="47"/></operator> <operator pos:line="29" pos:column="48">=<pos:position pos:line="29" pos:column="49"/></operator> <call><name pos:line="29" pos:column="50">ap_escape_path_segment<pos:position pos:line="29" pos:column="72"/></name><argument_list pos:line="29" pos:column="72">(<argument><expr><name><name pos:line="29" pos:column="73">r<pos:position pos:line="29" pos:column="74"/></name><operator pos:line="29" pos:column="74">-&gt;<pos:position pos:line="29" pos:column="79"/></operator><name pos:line="29" pos:column="76">pool<pos:position pos:line="29" pos:column="80"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="82">filename<pos:position pos:line="29" pos:column="90"/></name></expr></argument>)<pos:position pos:line="29" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><operator pos:line="30" pos:column="11">(<pos:position pos:line="30" pos:column="12"/></operator><specifier pos:line="30" pos:column="12">const<pos:position pos:line="30" pos:column="17"/></specifier> <name pos:line="30" pos:column="18">char<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">*<pos:position pos:line="30" pos:column="24"/></operator><operator pos:line="30" pos:column="24">*<pos:position pos:line="30" pos:column="25"/></operator><operator pos:line="30" pos:column="25">)<pos:position pos:line="30" pos:column="26"/></operator> <call><name pos:line="30" pos:column="27">apr_array_push<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><name pos:line="30" pos:column="42">arr<pos:position pos:line="30" pos:column="45"/></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call><operator pos:line="30" pos:column="46">)<pos:position pos:line="30" pos:column="47"/></operator> <operator pos:line="30" pos:column="48">=<pos:position pos:line="30" pos:column="49"/></operator> <literal type="string" pos:line="30" pos:column="50">"\"&gt;"<pos:position pos:line="30" pos:column="58"/></literal></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><operator pos:line="31" pos:column="11">(<pos:position pos:line="31" pos:column="12"/></operator><specifier pos:line="31" pos:column="12">const<pos:position pos:line="31" pos:column="17"/></specifier> <name pos:line="31" pos:column="18">char<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">*<pos:position pos:line="31" pos:column="24"/></operator><operator pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></operator><operator pos:line="31" pos:column="25">)<pos:position pos:line="31" pos:column="26"/></operator> <call><name pos:line="31" pos:column="27">apr_array_push<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">arr<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call><operator pos:line="31" pos:column="46">)<pos:position pos:line="31" pos:column="47"/></operator> <operator pos:line="31" pos:column="48">=<pos:position pos:line="31" pos:column="49"/></operator> <call><name pos:line="31" pos:column="50">ap_escape_html<pos:position pos:line="31" pos:column="64"/></name><argument_list pos:line="31" pos:column="64">(<argument><expr><name><name pos:line="31" pos:column="65">r<pos:position pos:line="31" pos:column="66"/></name><operator pos:line="31" pos:column="66">-&gt;<pos:position pos:line="31" pos:column="71"/></operator><name pos:line="31" pos:column="68">pool<pos:position pos:line="31" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="74">filename<pos:position pos:line="31" pos:column="82"/></name></expr></argument>)<pos:position pos:line="31" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><specifier pos:line="32" pos:column="12">const<pos:position pos:line="32" pos:column="17"/></specifier> <name pos:line="32" pos:column="18">char<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">*<pos:position pos:line="32" pos:column="24"/></operator><operator pos:line="32" pos:column="24">*<pos:position pos:line="32" pos:column="25"/></operator><operator pos:line="32" pos:column="25">)<pos:position pos:line="32" pos:column="26"/></operator> <call><name pos:line="32" pos:column="27">apr_array_push<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">arr<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call><operator pos:line="32" pos:column="46">)<pos:position pos:line="32" pos:column="47"/></operator> <operator pos:line="32" pos:column="48">=<pos:position pos:line="32" pos:column="49"/></operator> <literal type="string" pos:line="32" pos:column="50">"&lt;/a&gt; "<pos:position pos:line="32" pos:column="63"/></literal></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><operator pos:line="33" pos:column="10">(<pos:position pos:line="33" pos:column="11"/></operator><operator pos:line="33" pos:column="11">(<pos:position pos:line="33" pos:column="12"/></operator><specifier pos:line="33" pos:column="12">const<pos:position pos:line="33" pos:column="17"/></specifier> <name pos:line="33" pos:column="18">char<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">*<pos:position pos:line="33" pos:column="24"/></operator><operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">)<pos:position pos:line="33" pos:column="26"/></operator> <call><name pos:line="33" pos:column="27">apr_array_push<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">arr<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call><operator pos:line="33" pos:column="46">)<pos:position pos:line="33" pos:column="47"/></operator> <operator pos:line="33" pos:column="48">=<pos:position pos:line="33" pos:column="49"/></operator> <name pos:line="33" pos:column="50">description<pos:position pos:line="33" pos:column="61"/></name></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">variant<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">mime_type<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">&amp;&amp;<pos:position pos:line="35" pos:column="42"/></operator> <operator pos:line="35" pos:column="35">*<pos:position pos:line="35" pos:column="36"/></operator><name><name pos:line="35" pos:column="36">variant<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">-&gt;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="45">mime_type<pos:position pos:line="35" pos:column="54"/></name></name></expr>)<pos:position pos:line="35" pos:column="55"/></condition><then pos:line="35" pos:column="55"> <block pos:line="35" pos:column="56">{
            <expr_stmt><expr><operator pos:line="36" pos:column="13">*<pos:position pos:line="36" pos:column="14"/></operator><operator pos:line="36" pos:column="14">(<pos:position pos:line="36" pos:column="15"/></operator><operator pos:line="36" pos:column="15">(<pos:position pos:line="36" pos:column="16"/></operator><specifier pos:line="36" pos:column="16">const<pos:position pos:line="36" pos:column="21"/></specifier> <name pos:line="36" pos:column="22">char<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">*<pos:position pos:line="36" pos:column="28"/></operator><operator pos:line="36" pos:column="28">*<pos:position pos:line="36" pos:column="29"/></operator><operator pos:line="36" pos:column="29">)<pos:position pos:line="36" pos:column="30"/></operator> <call><name pos:line="36" pos:column="31">apr_array_push<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><name pos:line="36" pos:column="46">arr<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call><operator pos:line="36" pos:column="50">)<pos:position pos:line="36" pos:column="51"/></operator> <operator pos:line="36" pos:column="52">=<pos:position pos:line="36" pos:column="53"/></operator> <literal type="string" pos:line="36" pos:column="54">", type "<pos:position pos:line="36" pos:column="63"/></literal></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="37" pos:column="13">*<pos:position pos:line="37" pos:column="14"/></operator><operator pos:line="37" pos:column="14">(<pos:position pos:line="37" pos:column="15"/></operator><operator pos:line="37" pos:column="15">(<pos:position pos:line="37" pos:column="16"/></operator><specifier pos:line="37" pos:column="16">const<pos:position pos:line="37" pos:column="21"/></specifier> <name pos:line="37" pos:column="22">char<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">*<pos:position pos:line="37" pos:column="28"/></operator><operator pos:line="37" pos:column="28">*<pos:position pos:line="37" pos:column="29"/></operator><operator pos:line="37" pos:column="29">)<pos:position pos:line="37" pos:column="30"/></operator> <call><name pos:line="37" pos:column="31">apr_array_push<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">arr<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call><operator pos:line="37" pos:column="50">)<pos:position pos:line="37" pos:column="51"/></operator> <operator pos:line="37" pos:column="52">=<pos:position pos:line="37" pos:column="53"/></operator> <name><name pos:line="37" pos:column="54">variant<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">-&gt;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="63">mime_type<pos:position pos:line="37" pos:column="72"/></name></name></expr>;<pos:position pos:line="37" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">languages<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">&amp;&amp;<pos:position pos:line="39" pos:column="33"/></operator> <name><name pos:line="39" pos:column="26">languages<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">nelts<pos:position pos:line="39" pos:column="42"/></name></name></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
            <expr_stmt><expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><operator pos:line="40" pos:column="14">(<pos:position pos:line="40" pos:column="15"/></operator><operator pos:line="40" pos:column="15">(<pos:position pos:line="40" pos:column="16"/></operator><specifier pos:line="40" pos:column="16">const<pos:position pos:line="40" pos:column="21"/></specifier> <name pos:line="40" pos:column="22">char<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">*<pos:position pos:line="40" pos:column="28"/></operator><operator pos:line="40" pos:column="28">*<pos:position pos:line="40" pos:column="29"/></operator><operator pos:line="40" pos:column="29">)<pos:position pos:line="40" pos:column="30"/></operator> <call><name pos:line="40" pos:column="31">apr_array_push<pos:position pos:line="40" pos:column="45"/></name><argument_list pos:line="40" pos:column="45">(<argument><expr><name pos:line="40" pos:column="46">arr<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call><operator pos:line="40" pos:column="50">)<pos:position pos:line="40" pos:column="51"/></operator> <operator pos:line="40" pos:column="52">=<pos:position pos:line="40" pos:column="53"/></operator> <literal type="string" pos:line="40" pos:column="54">", language "<pos:position pos:line="40" pos:column="67"/></literal></expr>;<pos:position pos:line="40" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="41" pos:column="13">*<pos:position pos:line="41" pos:column="14"/></operator><operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><operator pos:line="41" pos:column="15">(<pos:position pos:line="41" pos:column="16"/></operator><specifier pos:line="41" pos:column="16">const<pos:position pos:line="41" pos:column="21"/></specifier> <name pos:line="41" pos:column="22">char<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">*<pos:position pos:line="41" pos:column="28"/></operator><operator pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></operator><operator pos:line="41" pos:column="29">)<pos:position pos:line="41" pos:column="30"/></operator> <call><name pos:line="41" pos:column="31">apr_array_push<pos:position pos:line="41" pos:column="45"/></name><argument_list pos:line="41" pos:column="45">(<argument><expr><name pos:line="41" pos:column="46">arr<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call><operator pos:line="41" pos:column="50">)<pos:position pos:line="41" pos:column="51"/></operator> <operator pos:line="41" pos:column="52">=<pos:position pos:line="41" pos:column="53"/></operator> <call><name pos:line="41" pos:column="54">apr_array_pstrcat<pos:position pos:line="41" pos:column="71"/></name><argument_list pos:line="41" pos:column="71">(<argument><expr><name><name pos:line="41" pos:column="72">r<pos:position pos:line="41" pos:column="73"/></name><operator pos:line="41" pos:column="73">-&gt;<pos:position pos:line="41" pos:column="78"/></operator><name pos:line="41" pos:column="75">pool<pos:position pos:line="41" pos:column="79"/></name></name></expr></argument>,
                                                       <argument><expr><name pos:line="42" pos:column="56">languages<pos:position pos:line="42" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="67">','<pos:position pos:line="42" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">variant<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">content_charset<pos:position pos:line="44" pos:column="37"/></name></name> <operator pos:line="44" pos:column="38">&amp;&amp;<pos:position pos:line="44" pos:column="48"/></operator> <operator pos:line="44" pos:column="41">*<pos:position pos:line="44" pos:column="42"/></operator><name><name pos:line="44" pos:column="42">variant<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">-&gt;<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="51">content_charset<pos:position pos:line="44" pos:column="66"/></name></name></expr>)<pos:position pos:line="44" pos:column="67"/></condition><then pos:line="44" pos:column="67"> <block pos:line="44" pos:column="68">{
            <expr_stmt><expr><operator pos:line="45" pos:column="13">*<pos:position pos:line="45" pos:column="14"/></operator><operator pos:line="45" pos:column="14">(<pos:position pos:line="45" pos:column="15"/></operator><operator pos:line="45" pos:column="15">(<pos:position pos:line="45" pos:column="16"/></operator><specifier pos:line="45" pos:column="16">const<pos:position pos:line="45" pos:column="21"/></specifier> <name pos:line="45" pos:column="22">char<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">*<pos:position pos:line="45" pos:column="28"/></operator><operator pos:line="45" pos:column="28">*<pos:position pos:line="45" pos:column="29"/></operator><operator pos:line="45" pos:column="29">)<pos:position pos:line="45" pos:column="30"/></operator> <call><name pos:line="45" pos:column="31">apr_array_push<pos:position pos:line="45" pos:column="45"/></name><argument_list pos:line="45" pos:column="45">(<argument><expr><name pos:line="45" pos:column="46">arr<pos:position pos:line="45" pos:column="49"/></name></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call><operator pos:line="45" pos:column="50">)<pos:position pos:line="45" pos:column="51"/></operator> <operator pos:line="45" pos:column="52">=<pos:position pos:line="45" pos:column="53"/></operator> <literal type="string" pos:line="45" pos:column="54">", charset "<pos:position pos:line="45" pos:column="66"/></literal></expr>;<pos:position pos:line="45" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="46" pos:column="13">*<pos:position pos:line="46" pos:column="14"/></operator><operator pos:line="46" pos:column="14">(<pos:position pos:line="46" pos:column="15"/></operator><operator pos:line="46" pos:column="15">(<pos:position pos:line="46" pos:column="16"/></operator><specifier pos:line="46" pos:column="16">const<pos:position pos:line="46" pos:column="21"/></specifier> <name pos:line="46" pos:column="22">char<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">*<pos:position pos:line="46" pos:column="28"/></operator><operator pos:line="46" pos:column="28">*<pos:position pos:line="46" pos:column="29"/></operator><operator pos:line="46" pos:column="29">)<pos:position pos:line="46" pos:column="30"/></operator> <call><name pos:line="46" pos:column="31">apr_array_push<pos:position pos:line="46" pos:column="45"/></name><argument_list pos:line="46" pos:column="45">(<argument><expr><name pos:line="46" pos:column="46">arr<pos:position pos:line="46" pos:column="49"/></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call><operator pos:line="46" pos:column="50">)<pos:position pos:line="46" pos:column="51"/></operator> <operator pos:line="46" pos:column="52">=<pos:position pos:line="46" pos:column="53"/></operator> <name><name pos:line="46" pos:column="54">variant<pos:position pos:line="46" pos:column="61"/></name><operator pos:line="46" pos:column="61">-&gt;<pos:position pos:line="46" pos:column="66"/></operator><name pos:line="46" pos:column="63">content_charset<pos:position pos:line="46" pos:column="78"/></name></name></expr>;<pos:position pos:line="46" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">variant<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">content_encoding<pos:position pos:line="48" pos:column="38"/></name></name></expr>)<pos:position pos:line="48" pos:column="39"/></condition><then pos:line="48" pos:column="39"> <block pos:line="48" pos:column="40">{
            <expr_stmt><expr><operator pos:line="49" pos:column="13">*<pos:position pos:line="49" pos:column="14"/></operator><operator pos:line="49" pos:column="14">(<pos:position pos:line="49" pos:column="15"/></operator><operator pos:line="49" pos:column="15">(<pos:position pos:line="49" pos:column="16"/></operator><specifier pos:line="49" pos:column="16">const<pos:position pos:line="49" pos:column="21"/></specifier> <name pos:line="49" pos:column="22">char<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">*<pos:position pos:line="49" pos:column="28"/></operator><operator pos:line="49" pos:column="28">*<pos:position pos:line="49" pos:column="29"/></operator><operator pos:line="49" pos:column="29">)<pos:position pos:line="49" pos:column="30"/></operator> <call><name pos:line="49" pos:column="31">apr_array_push<pos:position pos:line="49" pos:column="45"/></name><argument_list pos:line="49" pos:column="45">(<argument><expr><name pos:line="49" pos:column="46">arr<pos:position pos:line="49" pos:column="49"/></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call><operator pos:line="49" pos:column="50">)<pos:position pos:line="49" pos:column="51"/></operator> <operator pos:line="49" pos:column="52">=<pos:position pos:line="49" pos:column="53"/></operator> <literal type="string" pos:line="49" pos:column="54">", encoding "<pos:position pos:line="49" pos:column="67"/></literal></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="50" pos:column="13">*<pos:position pos:line="50" pos:column="14"/></operator><operator pos:line="50" pos:column="14">(<pos:position pos:line="50" pos:column="15"/></operator><operator pos:line="50" pos:column="15">(<pos:position pos:line="50" pos:column="16"/></operator><specifier pos:line="50" pos:column="16">const<pos:position pos:line="50" pos:column="21"/></specifier> <name pos:line="50" pos:column="22">char<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">*<pos:position pos:line="50" pos:column="28"/></operator><operator pos:line="50" pos:column="28">*<pos:position pos:line="50" pos:column="29"/></operator><operator pos:line="50" pos:column="29">)<pos:position pos:line="50" pos:column="30"/></operator> <call><name pos:line="50" pos:column="31">apr_array_push<pos:position pos:line="50" pos:column="45"/></name><argument_list pos:line="50" pos:column="45">(<argument><expr><name pos:line="50" pos:column="46">arr<pos:position pos:line="50" pos:column="49"/></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call><operator pos:line="50" pos:column="50">)<pos:position pos:line="50" pos:column="51"/></operator> <operator pos:line="50" pos:column="52">=<pos:position pos:line="50" pos:column="53"/></operator> <name><name pos:line="50" pos:column="54">variant<pos:position pos:line="50" pos:column="61"/></name><operator pos:line="50" pos:column="61">-&gt;<pos:position pos:line="50" pos:column="66"/></operator><name pos:line="50" pos:column="63">content_encoding<pos:position pos:line="50" pos:column="79"/></name></name></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="52" pos:column="9">*<pos:position pos:line="52" pos:column="10"/></operator><operator pos:line="52" pos:column="10">(<pos:position pos:line="52" pos:column="11"/></operator><operator pos:line="52" pos:column="11">(<pos:position pos:line="52" pos:column="12"/></operator><specifier pos:line="52" pos:column="12">const<pos:position pos:line="52" pos:column="17"/></specifier> <name pos:line="52" pos:column="18">char<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">*<pos:position pos:line="52" pos:column="24"/></operator><operator pos:line="52" pos:column="24">*<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">)<pos:position pos:line="52" pos:column="26"/></operator> <call><name pos:line="52" pos:column="27">apr_array_push<pos:position pos:line="52" pos:column="41"/></name><argument_list pos:line="52" pos:column="41">(<argument><expr><name pos:line="52" pos:column="42">arr<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call><operator pos:line="52" pos:column="46">)<pos:position pos:line="52" pos:column="47"/></operator> <operator pos:line="52" pos:column="48">=<pos:position pos:line="52" pos:column="49"/></operator> <literal type="string" pos:line="52" pos:column="50">"&lt;/li&gt;\n"<pos:position pos:line="52" pos:column="65"/></literal></expr>;<pos:position pos:line="52" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="54" pos:column="5">*<pos:position pos:line="54" pos:column="6"/></operator><operator pos:line="54" pos:column="6">(<pos:position pos:line="54" pos:column="7"/></operator><operator pos:line="54" pos:column="7">(<pos:position pos:line="54" pos:column="8"/></operator><specifier pos:line="54" pos:column="8">const<pos:position pos:line="54" pos:column="13"/></specifier> <name pos:line="54" pos:column="14">char<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">*<pos:position pos:line="54" pos:column="20"/></operator><operator pos:line="54" pos:column="20">*<pos:position pos:line="54" pos:column="21"/></operator><operator pos:line="54" pos:column="21">)<pos:position pos:line="54" pos:column="22"/></operator> <call><name pos:line="54" pos:column="23">apr_array_push<pos:position pos:line="54" pos:column="37"/></name><argument_list pos:line="54" pos:column="37">(<argument><expr><name pos:line="54" pos:column="38">arr<pos:position pos:line="54" pos:column="41"/></name></expr></argument>)<pos:position pos:line="54" pos:column="42"/></argument_list></call><operator pos:line="54" pos:column="42">)<pos:position pos:line="54" pos:column="43"/></operator> <operator pos:line="54" pos:column="44">=<pos:position pos:line="54" pos:column="45"/></operator> <literal type="string" pos:line="54" pos:column="46">"&lt;/ul&gt;\n"<pos:position pos:line="54" pos:column="61"/></literal></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt>

    <return pos:line="56" pos:column="5">return <expr><call><name pos:line="56" pos:column="12">apr_array_pstrcat<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name><name pos:line="56" pos:column="30">r<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">-&gt;<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="33">pool<pos:position pos:line="56" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="39">arr<pos:position pos:line="56" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="56" pos:column="44">'\0'<pos:position pos:line="56" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3252_httpd-2.0.59.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">compile_regex<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">options<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">optchanged<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">brackets<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">uschar<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier><modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">codeptr<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
  <parameter><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">uschar<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier><modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">ptrptr<pos:position pos:line="3" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier><modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type><name pos:line="3" pos:column="39">errorptr<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="49">BOOL<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">lookbehind<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="66">int<pos:position pos:line="3" pos:column="69"/></name></type> <name pos:line="3" pos:column="70">skipbytes<pos:position pos:line="3" pos:column="79"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name> <modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier></type><name pos:line="4" pos:column="8">reqchar<pos:position pos:line="4" pos:column="15"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="17">int<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">countlits<pos:position pos:line="4" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="33">compile_data<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">cd<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="50"/></parameter_list>
<block pos:line="5" pos:column="1">{
<decl_stmt><decl><type><specifier pos:line="6" pos:column="1">const<pos:position pos:line="6" pos:column="6"/></specifier> <name pos:line="6" pos:column="7">uschar<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ptr<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><operator pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">ptrptr<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">uschar<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">code<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><operator pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">codeptr<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="8" pos:column="1">uschar<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">last_branch<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name pos:line="8" pos:column="23">code<pos:position pos:line="8" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="9" pos:column="1">uschar<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">start_bracket<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><name pos:line="9" pos:column="25">code<pos:position pos:line="9" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="10" pos:column="1">uschar<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">reverse_count<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="11" pos:column="1">int<pos:position pos:line="11" pos:column="4"/></name></type> <name pos:line="11" pos:column="5">oldoptions<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><name pos:line="11" pos:column="18">options<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">&amp;<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="28">PCRE_IMS<pos:position pos:line="11" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="12" pos:column="1">int<pos:position pos:line="12" pos:column="4"/></name></type> <name pos:line="12" pos:column="5">branchreqchar<pos:position pos:line="12" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="20">branchcountlits<pos:position pos:line="12" pos:column="35"/></name></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>

<expr_stmt><expr><operator pos:line="14" pos:column="1">*<pos:position pos:line="14" pos:column="2"/></operator><name pos:line="14" pos:column="2">reqchar<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
<expr_stmt><expr><operator pos:line="15" pos:column="1">*<pos:position pos:line="15" pos:column="2"/></operator><name pos:line="15" pos:column="2">countlits<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">INT_MAX<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
<expr_stmt><expr><name pos:line="16" pos:column="1">code<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">+=<pos:position pos:line="16" pos:column="8"/></operator> <literal type="number" pos:line="16" pos:column="9">3<pos:position pos:line="16" pos:column="10"/></literal> <operator pos:line="16" pos:column="11">+<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">skipbytes<pos:position pos:line="16" pos:column="22"/></name></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>

<comment type="block" pos:line="18" pos:column="1">/* Loop for each alternative branch */</comment>

<for pos:line="20" pos:column="1">for <control pos:line="20" pos:column="5">(<init pos:line="20" pos:column="6">;<pos:position pos:line="20" pos:column="7"/></init><condition pos:line="20" pos:column="7">;<pos:position pos:line="20" pos:column="8"/></condition><incr/>)<pos:position pos:line="20" pos:column="9"/></control>
  <block pos:line="21" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">int<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">length<pos:position pos:line="22" pos:column="13"/></name></decl>;<pos:position pos:line="22" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="24" pos:column="3">/* Handle change of options */</comment>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">optchanged<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">&gt;=<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="21">0<pos:position pos:line="26" pos:column="22"/></literal></expr>)<pos:position pos:line="26" pos:column="23"/></condition><then pos:line="26" pos:column="23">
    <block pos:line="27" pos:column="5">{
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">code<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">++<pos:position pos:line="28" pos:column="12"/></operator> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">OP_OPT<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="29" pos:column="5">*<pos:position pos:line="29" pos:column="6"/></operator><name pos:line="29" pos:column="6">code<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">++<pos:position pos:line="29" pos:column="12"/></operator> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">optchanged<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">options<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <operator pos:line="30" pos:column="15">(<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">options<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator> <operator pos:line="30" pos:column="26">~<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="27">PCRE_IMS<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">)<pos:position pos:line="30" pos:column="36"/></operator> <operator pos:line="30" pos:column="37">|<pos:position pos:line="30" pos:column="38"/></operator> <name pos:line="30" pos:column="39">optchanged<pos:position pos:line="30" pos:column="49"/></name></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="33" pos:column="3">/* Set up dummy OP_REVERSE if lookbehind assertion */</comment>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">lookbehind<pos:position pos:line="35" pos:column="17"/></name></expr>)<pos:position pos:line="35" pos:column="18"/></condition><then pos:line="35" pos:column="18">
    <block pos:line="36" pos:column="5">{
    <expr_stmt><expr><operator pos:line="37" pos:column="5">*<pos:position pos:line="37" pos:column="6"/></operator><name pos:line="37" pos:column="6">code<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">++<pos:position pos:line="37" pos:column="12"/></operator> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="15">OP_REVERSE<pos:position pos:line="37" pos:column="25"/></name></expr>;<pos:position pos:line="37" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">reverse_count<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">code<pos:position pos:line="38" pos:column="25"/></name></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="39" pos:column="5">*<pos:position pos:line="39" pos:column="6"/></operator><name pos:line="39" pos:column="6">code<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">++<pos:position pos:line="39" pos:column="12"/></operator> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <literal type="number" pos:line="39" pos:column="15">0<pos:position pos:line="39" pos:column="16"/></literal></expr>;<pos:position pos:line="39" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="40" pos:column="5">*<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">code<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">++<pos:position pos:line="40" pos:column="12"/></operator> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <literal type="number" pos:line="40" pos:column="15">0<pos:position pos:line="40" pos:column="16"/></literal></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* Now compile the branch */</comment>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><operator pos:line="45" pos:column="7">!<pos:position pos:line="45" pos:column="8"/></operator><call><name pos:line="45" pos:column="8">compile_branch<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">options<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">brackets<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="42">&amp;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="43">code<pos:position pos:line="45" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="49">&amp;<pos:position pos:line="45" pos:column="54"/></operator><name pos:line="45" pos:column="50">ptr<pos:position pos:line="45" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="55">errorptr<pos:position pos:line="45" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="65">&amp;<pos:position pos:line="45" pos:column="70"/></operator><name pos:line="45" pos:column="66">optchanged<pos:position pos:line="45" pos:column="76"/></name></expr></argument>,
      <argument><expr><operator pos:line="46" pos:column="7">&amp;<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="8">branchreqchar<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="23">&amp;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="24">branchcountlits<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">cd<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="45"/></condition><then pos:line="46" pos:column="45">
    <block pos:line="47" pos:column="5">{
    <expr_stmt><expr><operator pos:line="48" pos:column="5">*<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">ptrptr<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <name pos:line="48" pos:column="15">ptr<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">FALSE<pos:position pos:line="49" pos:column="17"/></name></expr>;<pos:position pos:line="49" pos:column="18"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="52" pos:column="3">/* Fill in the length of the last branch */</comment>

  <expr_stmt><expr><name pos:line="54" pos:column="3">length<pos:position pos:line="54" pos:column="9"/></name> <operator pos:line="54" pos:column="10">=<pos:position pos:line="54" pos:column="11"/></operator> <name pos:line="54" pos:column="12">code<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">-<pos:position pos:line="54" pos:column="18"/></operator> <name pos:line="54" pos:column="19">last_branch<pos:position pos:line="54" pos:column="30"/></name></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="55" pos:column="3">last_branch<pos:position pos:line="55" pos:column="14"/></name><index pos:line="55" pos:column="14">[<expr><literal type="number" pos:line="55" pos:column="15">1<pos:position pos:line="55" pos:column="16"/></literal></expr>]<pos:position pos:line="55" pos:column="17"/></index></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="20">length<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">&gt;&gt;<pos:position pos:line="55" pos:column="32"/></operator> <literal type="number" pos:line="55" pos:column="30">8<pos:position pos:line="55" pos:column="31"/></literal></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="56" pos:column="3">last_branch<pos:position pos:line="56" pos:column="14"/></name><index pos:line="56" pos:column="14">[<expr><literal type="number" pos:line="56" pos:column="15">2<pos:position pos:line="56" pos:column="16"/></literal></expr>]<pos:position pos:line="56" pos:column="17"/></index></name> <operator pos:line="56" pos:column="18">=<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">length<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">&amp;<pos:position pos:line="56" pos:column="32"/></operator> <literal type="number" pos:line="56" pos:column="29">255<pos:position pos:line="56" pos:column="32"/></literal></expr>;<pos:position pos:line="56" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="58" pos:column="3">/* Save the last required character if all branches have the same; a current
  value of -1 means unset, while -2 means "previous branch had no last required
  char".  */</comment>

  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><operator pos:line="62" pos:column="7">*<pos:position pos:line="62" pos:column="8"/></operator><name pos:line="62" pos:column="8">reqchar<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">!=<pos:position pos:line="62" pos:column="18"/></operator> <operator pos:line="62" pos:column="19">-<pos:position pos:line="62" pos:column="20"/></operator><literal type="number" pos:line="62" pos:column="20">2<pos:position pos:line="62" pos:column="21"/></literal></expr>)<pos:position pos:line="62" pos:column="22"/></condition><then pos:line="62" pos:column="22">
    <block pos:line="63" pos:column="5">{
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">branchreqchar<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">&gt;=<pos:position pos:line="64" pos:column="28"/></operator> <literal type="number" pos:line="64" pos:column="26">0<pos:position pos:line="64" pos:column="27"/></literal></expr>)<pos:position pos:line="64" pos:column="28"/></condition><then pos:line="64" pos:column="28">
      <block pos:line="65" pos:column="7">{
      <if pos:line="66" pos:column="7">if <condition pos:line="66" pos:column="10">(<expr><operator pos:line="66" pos:column="11">*<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">reqchar<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">==<pos:position pos:line="66" pos:column="22"/></operator> <operator pos:line="66" pos:column="23">-<pos:position pos:line="66" pos:column="24"/></operator><literal type="number" pos:line="66" pos:column="24">1<pos:position pos:line="66" pos:column="25"/></literal></expr>)<pos:position pos:line="66" pos:column="26"/></condition><then pos:line="66" pos:column="26"> <block type="pseudo"><expr_stmt><expr><operator pos:line="66" pos:column="27">*<pos:position pos:line="66" pos:column="28"/></operator><name pos:line="66" pos:column="28">reqchar<pos:position pos:line="66" pos:column="35"/></name> <operator pos:line="66" pos:column="36">=<pos:position pos:line="66" pos:column="37"/></operator> <name pos:line="66" pos:column="38">branchreqchar<pos:position pos:line="66" pos:column="51"/></name></expr>;<pos:position pos:line="66" pos:column="52"/></expr_stmt></block></then>
      <elseif pos:line="67" pos:column="7">else <if pos:line="67" pos:column="12">if <condition pos:line="67" pos:column="15">(<expr><operator pos:line="67" pos:column="16">*<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">reqchar<pos:position pos:line="67" pos:column="24"/></name> <operator pos:line="67" pos:column="25">!=<pos:position pos:line="67" pos:column="27"/></operator> <name pos:line="67" pos:column="28">branchreqchar<pos:position pos:line="67" pos:column="41"/></name></expr>)<pos:position pos:line="67" pos:column="42"/></condition><then pos:line="67" pos:column="42"> <block type="pseudo"><expr_stmt><expr><operator pos:line="67" pos:column="43">*<pos:position pos:line="67" pos:column="44"/></operator><name pos:line="67" pos:column="44">reqchar<pos:position pos:line="67" pos:column="51"/></name> <operator pos:line="67" pos:column="52">=<pos:position pos:line="67" pos:column="53"/></operator> <operator pos:line="67" pos:column="54">-<pos:position pos:line="67" pos:column="55"/></operator><literal type="number" pos:line="67" pos:column="55">2<pos:position pos:line="67" pos:column="56"/></literal></expr>;<pos:position pos:line="67" pos:column="57"/></expr_stmt></block></then></if></elseif></if>
      }<pos:position pos:line="68" pos:column="8"/></block></then>
    <else pos:line="69" pos:column="5">else <block type="pseudo"><expr_stmt><expr><operator pos:line="69" pos:column="10">*<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="11">reqchar<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <operator pos:line="69" pos:column="21">-<pos:position pos:line="69" pos:column="22"/></operator><literal type="number" pos:line="69" pos:column="22">2<pos:position pos:line="69" pos:column="23"/></literal></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt></block></else></if>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="72" pos:column="3">/* Keep the shortest literal count */</comment>

  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">branchcountlits<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">&lt;<pos:position pos:line="74" pos:column="27"/></operator> <operator pos:line="74" pos:column="25">*<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="26">countlits<pos:position pos:line="74" pos:column="35"/></name></expr>)<pos:position pos:line="74" pos:column="36"/></condition><then pos:line="74" pos:column="36"> <block type="pseudo"><expr_stmt><expr><operator pos:line="74" pos:column="37">*<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="38">countlits<pos:position pos:line="74" pos:column="47"/></name> <operator pos:line="74" pos:column="48">=<pos:position pos:line="74" pos:column="49"/></operator> <name pos:line="74" pos:column="50">branchcountlits<pos:position pos:line="74" pos:column="65"/></name></expr>;<pos:position pos:line="74" pos:column="66"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">DPRINTF<pos:position pos:line="75" pos:column="10"/></name><argument_list pos:line="75" pos:column="10">(<argument><expr><operator pos:line="75" pos:column="11">(<pos:position pos:line="75" pos:column="12"/></operator><literal type="string" pos:line="75" pos:column="12">"literal count = %d min=%d\n"<pos:position pos:line="75" pos:column="41"/></literal><operator pos:line="75" pos:column="41">,<pos:position pos:line="75" pos:column="42"/></operator> <name pos:line="75" pos:column="43">branchcountlits<pos:position pos:line="75" pos:column="58"/></name><operator pos:line="75" pos:column="58">,<pos:position pos:line="75" pos:column="59"/></operator> <operator pos:line="75" pos:column="60">*<pos:position pos:line="75" pos:column="61"/></operator><name pos:line="75" pos:column="61">countlits<pos:position pos:line="75" pos:column="70"/></name><operator pos:line="75" pos:column="70">)<pos:position pos:line="75" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="75" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="77" pos:column="3">/* If lookbehind, check that this branch matches a fixed-length string,
  and put the length into the OP_REVERSE item. Temporarily mark the end of
  the branch with OP_END. */</comment>

  <if pos:line="81" pos:column="3">if <condition pos:line="81" pos:column="6">(<expr><name pos:line="81" pos:column="7">lookbehind<pos:position pos:line="81" pos:column="17"/></name></expr>)<pos:position pos:line="81" pos:column="18"/></condition><then pos:line="81" pos:column="18">
    <block pos:line="82" pos:column="5">{
    <expr_stmt><expr><operator pos:line="83" pos:column="5">*<pos:position pos:line="83" pos:column="6"/></operator><name pos:line="83" pos:column="6">code<pos:position pos:line="83" pos:column="10"/></name> <operator pos:line="83" pos:column="11">=<pos:position pos:line="83" pos:column="12"/></operator> <name pos:line="83" pos:column="13">OP_END<pos:position pos:line="83" pos:column="19"/></name></expr>;<pos:position pos:line="83" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="84" pos:column="5">length<pos:position pos:line="84" pos:column="11"/></name> <operator pos:line="84" pos:column="12">=<pos:position pos:line="84" pos:column="13"/></operator> <call><name pos:line="84" pos:column="14">find_fixedlength<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><name pos:line="84" pos:column="31">last_branch<pos:position pos:line="84" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="44">options<pos:position pos:line="84" pos:column="51"/></name></expr></argument>)<pos:position pos:line="84" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">DPRINTF<pos:position pos:line="85" pos:column="12"/></name><argument_list pos:line="85" pos:column="12">(<argument><expr><operator pos:line="85" pos:column="13">(<pos:position pos:line="85" pos:column="14"/></operator><literal type="string" pos:line="85" pos:column="14">"fixed length = %d\n"<pos:position pos:line="85" pos:column="35"/></literal><operator pos:line="85" pos:column="35">,<pos:position pos:line="85" pos:column="36"/></operator> <name pos:line="85" pos:column="37">length<pos:position pos:line="85" pos:column="43"/></name><operator pos:line="85" pos:column="43">)<pos:position pos:line="85" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="46"/></expr_stmt>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><name pos:line="86" pos:column="9">length<pos:position pos:line="86" pos:column="15"/></name> <operator pos:line="86" pos:column="16">&lt;<pos:position pos:line="86" pos:column="20"/></operator> <literal type="number" pos:line="86" pos:column="18">0<pos:position pos:line="86" pos:column="19"/></literal></expr>)<pos:position pos:line="86" pos:column="20"/></condition><then pos:line="86" pos:column="20">
      <block pos:line="87" pos:column="7">{
      <expr_stmt><expr><operator pos:line="88" pos:column="7">*<pos:position pos:line="88" pos:column="8"/></operator><name pos:line="88" pos:column="8">errorptr<pos:position pos:line="88" pos:column="16"/></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">ERR25<pos:position pos:line="88" pos:column="24"/></name></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="89" pos:column="7">*<pos:position pos:line="89" pos:column="8"/></operator><name pos:line="89" pos:column="8">ptrptr<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">=<pos:position pos:line="89" pos:column="16"/></operator> <name pos:line="89" pos:column="17">ptr<pos:position pos:line="89" pos:column="20"/></name></expr>;<pos:position pos:line="89" pos:column="21"/></expr_stmt>
      <return pos:line="90" pos:column="7">return <expr><name pos:line="90" pos:column="14">FALSE<pos:position pos:line="90" pos:column="19"/></name></expr>;<pos:position pos:line="90" pos:column="20"/></return>
      }<pos:position pos:line="91" pos:column="8"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="92" pos:column="5">reverse_count<pos:position pos:line="92" pos:column="18"/></name><index pos:line="92" pos:column="18">[<expr><literal type="number" pos:line="92" pos:column="19">0<pos:position pos:line="92" pos:column="20"/></literal></expr>]<pos:position pos:line="92" pos:column="21"/></index></name> <operator pos:line="92" pos:column="22">=<pos:position pos:line="92" pos:column="23"/></operator> <operator pos:line="92" pos:column="24">(<pos:position pos:line="92" pos:column="25"/></operator><name pos:line="92" pos:column="25">length<pos:position pos:line="92" pos:column="31"/></name> <operator pos:line="92" pos:column="32">&gt;&gt;<pos:position pos:line="92" pos:column="37"/></operator> <literal type="number" pos:line="92" pos:column="35">8<pos:position pos:line="92" pos:column="36"/></literal><operator pos:line="92" pos:column="36">)<pos:position pos:line="92" pos:column="37"/></operator></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="93" pos:column="5">reverse_count<pos:position pos:line="93" pos:column="18"/></name><index pos:line="93" pos:column="18">[<expr><literal type="number" pos:line="93" pos:column="19">1<pos:position pos:line="93" pos:column="20"/></literal></expr>]<pos:position pos:line="93" pos:column="21"/></index></name> <operator pos:line="93" pos:column="22">=<pos:position pos:line="93" pos:column="23"/></operator> <name pos:line="93" pos:column="24">length<pos:position pos:line="93" pos:column="30"/></name> <operator pos:line="93" pos:column="31">&amp;<pos:position pos:line="93" pos:column="36"/></operator> <literal type="number" pos:line="93" pos:column="33">255<pos:position pos:line="93" pos:column="36"/></literal></expr>;<pos:position pos:line="93" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="96" pos:column="3">/* Reached end of expression, either ')' or end of pattern. Insert a
  terminating ket and the length of the whole bracketed item, and return,
  leaving the pointer at the terminating char. If any of the ims options
  were changed inside the group, compile a resetting op-code following. */</comment>

  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><operator pos:line="101" pos:column="7">*<pos:position pos:line="101" pos:column="8"/></operator><name pos:line="101" pos:column="8">ptr<pos:position pos:line="101" pos:column="11"/></name> <operator pos:line="101" pos:column="12">!=<pos:position pos:line="101" pos:column="14"/></operator> <literal type="char" pos:line="101" pos:column="15">'|'<pos:position pos:line="101" pos:column="18"/></literal></expr>)<pos:position pos:line="101" pos:column="19"/></condition><then pos:line="101" pos:column="19">
    <block pos:line="102" pos:column="5">{
    <expr_stmt><expr><name pos:line="103" pos:column="5">length<pos:position pos:line="103" pos:column="11"/></name> <operator pos:line="103" pos:column="12">=<pos:position pos:line="103" pos:column="13"/></operator> <name pos:line="103" pos:column="14">code<pos:position pos:line="103" pos:column="18"/></name> <operator pos:line="103" pos:column="19">-<pos:position pos:line="103" pos:column="20"/></operator> <name pos:line="103" pos:column="21">start_bracket<pos:position pos:line="103" pos:column="34"/></name></expr>;<pos:position pos:line="103" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="104" pos:column="5">*<pos:position pos:line="104" pos:column="6"/></operator><name pos:line="104" pos:column="6">code<pos:position pos:line="104" pos:column="10"/></name><operator pos:line="104" pos:column="10">++<pos:position pos:line="104" pos:column="12"/></operator> <operator pos:line="104" pos:column="13">=<pos:position pos:line="104" pos:column="14"/></operator> <name pos:line="104" pos:column="15">OP_KET<pos:position pos:line="104" pos:column="21"/></name></expr>;<pos:position pos:line="104" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="105" pos:column="5">*<pos:position pos:line="105" pos:column="6"/></operator><name pos:line="105" pos:column="6">code<pos:position pos:line="105" pos:column="10"/></name><operator pos:line="105" pos:column="10">++<pos:position pos:line="105" pos:column="12"/></operator> <operator pos:line="105" pos:column="13">=<pos:position pos:line="105" pos:column="14"/></operator> <name pos:line="105" pos:column="15">length<pos:position pos:line="105" pos:column="21"/></name> <operator pos:line="105" pos:column="22">&gt;&gt;<pos:position pos:line="105" pos:column="27"/></operator> <literal type="number" pos:line="105" pos:column="25">8<pos:position pos:line="105" pos:column="26"/></literal></expr>;<pos:position pos:line="105" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="106" pos:column="5">*<pos:position pos:line="106" pos:column="6"/></operator><name pos:line="106" pos:column="6">code<pos:position pos:line="106" pos:column="10"/></name><operator pos:line="106" pos:column="10">++<pos:position pos:line="106" pos:column="12"/></operator> <operator pos:line="106" pos:column="13">=<pos:position pos:line="106" pos:column="14"/></operator> <name pos:line="106" pos:column="15">length<pos:position pos:line="106" pos:column="21"/></name> <operator pos:line="106" pos:column="22">&amp;<pos:position pos:line="106" pos:column="27"/></operator> <literal type="number" pos:line="106" pos:column="24">255<pos:position pos:line="106" pos:column="27"/></literal></expr>;<pos:position pos:line="106" pos:column="28"/></expr_stmt>
    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><name pos:line="107" pos:column="9">optchanged<pos:position pos:line="107" pos:column="19"/></name> <operator pos:line="107" pos:column="20">&gt;=<pos:position pos:line="107" pos:column="25"/></operator> <literal type="number" pos:line="107" pos:column="23">0<pos:position pos:line="107" pos:column="24"/></literal></expr>)<pos:position pos:line="107" pos:column="25"/></condition><then pos:line="107" pos:column="25">
      <block pos:line="108" pos:column="7">{
      <expr_stmt><expr><operator pos:line="109" pos:column="7">*<pos:position pos:line="109" pos:column="8"/></operator><name pos:line="109" pos:column="8">code<pos:position pos:line="109" pos:column="12"/></name><operator pos:line="109" pos:column="12">++<pos:position pos:line="109" pos:column="14"/></operator> <operator pos:line="109" pos:column="15">=<pos:position pos:line="109" pos:column="16"/></operator> <name pos:line="109" pos:column="17">OP_OPT<pos:position pos:line="109" pos:column="23"/></name></expr>;<pos:position pos:line="109" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="110" pos:column="7">*<pos:position pos:line="110" pos:column="8"/></operator><name pos:line="110" pos:column="8">code<pos:position pos:line="110" pos:column="12"/></name><operator pos:line="110" pos:column="12">++<pos:position pos:line="110" pos:column="14"/></operator> <operator pos:line="110" pos:column="15">=<pos:position pos:line="110" pos:column="16"/></operator> <name pos:line="110" pos:column="17">oldoptions<pos:position pos:line="110" pos:column="27"/></name></expr>;<pos:position pos:line="110" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="111" pos:column="8"/></block></then></if>
    <expr_stmt><expr><operator pos:line="112" pos:column="5">*<pos:position pos:line="112" pos:column="6"/></operator><name pos:line="112" pos:column="6">codeptr<pos:position pos:line="112" pos:column="13"/></name> <operator pos:line="112" pos:column="14">=<pos:position pos:line="112" pos:column="15"/></operator> <name pos:line="112" pos:column="16">code<pos:position pos:line="112" pos:column="20"/></name></expr>;<pos:position pos:line="112" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="113" pos:column="5">*<pos:position pos:line="113" pos:column="6"/></operator><name pos:line="113" pos:column="6">ptrptr<pos:position pos:line="113" pos:column="12"/></name> <operator pos:line="113" pos:column="13">=<pos:position pos:line="113" pos:column="14"/></operator> <name pos:line="113" pos:column="15">ptr<pos:position pos:line="113" pos:column="18"/></name></expr>;<pos:position pos:line="113" pos:column="19"/></expr_stmt>
    <return pos:line="114" pos:column="5">return <expr><name pos:line="114" pos:column="12">TRUE<pos:position pos:line="114" pos:column="16"/></name></expr>;<pos:position pos:line="114" pos:column="17"/></return>
    }<pos:position pos:line="115" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="117" pos:column="3">/* Another branch follows; insert an "or" node and advance the pointer. */</comment>

  <expr_stmt><expr><operator pos:line="119" pos:column="3">*<pos:position pos:line="119" pos:column="4"/></operator><name pos:line="119" pos:column="4">code<pos:position pos:line="119" pos:column="8"/></name> <operator pos:line="119" pos:column="9">=<pos:position pos:line="119" pos:column="10"/></operator> <name pos:line="119" pos:column="11">OP_ALT<pos:position pos:line="119" pos:column="17"/></name></expr>;<pos:position pos:line="119" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="120" pos:column="3">last_branch<pos:position pos:line="120" pos:column="14"/></name> <operator pos:line="120" pos:column="15">=<pos:position pos:line="120" pos:column="16"/></operator> <name pos:line="120" pos:column="17">code<pos:position pos:line="120" pos:column="21"/></name></expr>;<pos:position pos:line="120" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="121" pos:column="3">code<pos:position pos:line="121" pos:column="7"/></name> <operator pos:line="121" pos:column="8">+=<pos:position pos:line="121" pos:column="10"/></operator> <literal type="number" pos:line="121" pos:column="11">3<pos:position pos:line="121" pos:column="12"/></literal></expr>;<pos:position pos:line="121" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="122" pos:column="3">ptr<pos:position pos:line="122" pos:column="6"/></name><operator pos:line="122" pos:column="6">++<pos:position pos:line="122" pos:column="8"/></operator></expr>;<pos:position pos:line="122" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="123" pos:column="4"/></block></for>
<comment type="block" pos:line="124" pos:column="1">/* Control never reaches here */</comment>
}<pos:position pos:line="125" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2615_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">streqci<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">s1<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">s2<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init pos:line="4" pos:column="8">;<pos:position pos:line="4" pos:column="9"/></init><condition pos:line="4" pos:column="9">;<pos:position pos:line="4" pos:column="10"/></condition><incr/>)<pos:position pos:line="4" pos:column="11"/></control> <block pos:line="4" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">c1<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><operator pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">s1<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">++<pos:position pos:line="5" pos:column="20"/></operator></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">c2<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><operator pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">s2<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">++<pos:position pos:line="6" pos:column="20"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">ASCII_a<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&lt;=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="20">c1<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&amp;&amp;<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="26">c1<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">&lt;=<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="32">ASCII_z<pos:position pos:line="7" pos:column="39"/></name></expr>)<pos:position pos:line="7" pos:column="40"/></condition><then pos:line="7" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="7">c1<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">+=<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">ASCII_A<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">-<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">ASCII_a<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">ASCII_a<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;=<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="20">c2<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&amp;&amp;<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="26">c2<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">&lt;=<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="32">ASCII_z<pos:position pos:line="9" pos:column="39"/></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="7">c2<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">+=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">ASCII_A<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">-<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">ASCII_a<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">c1<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">!=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">c2<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">c1<pos:position pos:line="13" pos:column="12"/></name></expr>)<pos:position pos:line="13" pos:column="13"/></condition><then pos:line="13" pos:column="13">
      <block type="pseudo"><break pos:line="14" pos:column="7">break;<pos:position pos:line="14" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></for>
  <return pos:line="16" pos:column="3">return <expr><literal type="number" pos:line="16" pos:column="10">1<pos:position pos:line="16" pos:column="11"/></literal></expr>;<pos:position pos:line="16" pos:column="12"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3071_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">caterr<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">s<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">register<pos:position pos:line="3" pos:column="13"/></specifier> <name pos:line="3" pos:column="14">char<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">p<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name pos:line="3" pos:column="24">s<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><operator pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">p<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&gt;=<pos:position pos:line="5" pos:column="20"/></operator> <literal type="char" pos:line="5" pos:column="18">'0'<pos:position pos:line="5" pos:column="21"/></literal> <operator pos:line="5" pos:column="22">&amp;&amp;<pos:position pos:line="5" pos:column="32"/></operator> <operator pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">p<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&lt;=<pos:position pos:line="5" pos:column="33"/></operator> <literal type="char" pos:line="5" pos:column="31">'9'<pos:position pos:line="5" pos:column="34"/></literal></expr>)<pos:position pos:line="5" pos:column="35"/></condition>
	<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">++<pos:position pos:line="6" pos:column="12"/></operator></expr>;<pos:position pos:line="6" pos:column="13"/></expr_stmt></block></while>
    <switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">atoi<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">s<pos:position pos:line="7" pos:column="19"/></name></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="21"/></condition> <block pos:line="7" pos:column="22">{
    <case pos:line="8" pos:column="5">case <expr><name pos:line="8" pos:column="10">L_ERROR_TOOMANY<pos:position pos:line="8" pos:column="25"/></name></expr>:<pos:position pos:line="8" pos:column="26"/></case>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">strcat<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">errbuf<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="24">"to many errors"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
	<break pos:line="10" pos:column="9">break;<pos:position pos:line="10" pos:column="15"/></break>
    <case pos:line="11" pos:column="5">case <expr><name pos:line="11" pos:column="10">L_ERROR_NOLIB<pos:position pos:line="11" pos:column="23"/></name></expr>:<pos:position pos:line="11" pos:column="24"/></case>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strcat<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">errbuf<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="24">"can't load library"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">strcat<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">errbuf<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">p<pos:position pos:line="13" pos:column="25"/></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
	<break pos:line="14" pos:column="9">break;<pos:position pos:line="14" pos:column="15"/></break>
    <case pos:line="15" pos:column="5">case <expr><name pos:line="15" pos:column="10">L_ERROR_UNDEF<pos:position pos:line="15" pos:column="23"/></name></expr>:<pos:position pos:line="15" pos:column="24"/></case>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">strcat<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">errbuf<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="24">"can't find symbol"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strcat<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">errbuf<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">p<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
	<break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break>
    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">L_ERROR_RLDBAD<pos:position pos:line="19" pos:column="24"/></name></expr>:<pos:position pos:line="19" pos:column="25"/></case>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">strcat<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">errbuf<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="24">"bad RLD"<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">strcat<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">errbuf<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="24">p<pos:position pos:line="21" pos:column="25"/></name></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
	<break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">L_ERROR_FORMAT<pos:position pos:line="23" pos:column="24"/></name></expr>:<pos:position pos:line="23" pos:column="25"/></case>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strcat<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">errbuf<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="24">"bad exec format in"<pos:position pos:line="24" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">strcat<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">errbuf<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="24">p<pos:position pos:line="25" pos:column="25"/></name></expr></argument>)<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
	<break pos:line="26" pos:column="9">break;<pos:position pos:line="26" pos:column="15"/></break>
    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">L_ERROR_ERRNO<pos:position pos:line="27" pos:column="23"/></name></expr>:<pos:position pos:line="27" pos:column="24"/></case>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">strcat<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">errbuf<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="24">strerror<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><call><name pos:line="28" pos:column="33">atoi<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><operator pos:line="28" pos:column="38">++<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">p<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
	<break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break>
    <default pos:line="30" pos:column="5">default:<pos:position pos:line="30" pos:column="13"/></default>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">strcat<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">errbuf<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">s<pos:position pos:line="31" pos:column="25"/></name></expr></argument>)<pos:position pos:line="31" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
	<break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break>
    }<pos:position pos:line="33" pos:column="6"/></block></switch>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

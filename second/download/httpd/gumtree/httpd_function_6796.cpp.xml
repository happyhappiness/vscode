<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6796.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">h2_task<pos:position pos:line="1" pos:column="15"/></name> <modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier></type><name pos:line="1" pos:column="17">next_stream_task<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">h2_mplx<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">m<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">h2_stream<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">stream<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">sid<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><name><name pos:line="5" pos:column="13">m<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">aborted<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">&amp;&amp;<pos:position pos:line="5" pos:column="34"/></operator> <operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><name><name pos:line="5" pos:column="28">m<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">tasks_active<pos:position pos:line="5" pos:column="43"/></name></name> <operator pos:line="5" pos:column="44">&lt;<pos:position pos:line="5" pos:column="48"/></operator> <name><name pos:line="5" pos:column="46">m<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">limit_active<pos:position pos:line="5" pos:column="61"/></name></name><operator pos:line="5" pos:column="61">)<pos:position pos:line="5" pos:column="62"/></operator>
           <operator pos:line="6" pos:column="12">&amp;&amp;<pos:position pos:line="6" pos:column="22"/></operator> <operator pos:line="6" pos:column="15">(<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">sid<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <call><name pos:line="6" pos:column="22">h2_iq_shift<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name><name pos:line="6" pos:column="34">m<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">q<pos:position pos:line="6" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call><operator pos:line="6" pos:column="39">)<pos:position pos:line="6" pos:column="40"/></operator> <operator pos:line="6" pos:column="41">&gt;<pos:position pos:line="6" pos:column="45"/></operator> <literal type="number" pos:line="6" pos:column="43">0<pos:position pos:line="6" pos:column="44"/></literal></expr>)<pos:position pos:line="6" pos:column="45"/></condition> <block pos:line="6" pos:column="46">{
        
        <expr_stmt><expr><name pos:line="8" pos:column="9">stream<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">h2_ihash_get<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name><name pos:line="8" pos:column="31">m<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">streams<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="43">sid<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">stream<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20"> <block pos:line="9" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">conn_rec<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">slave<pos:position pos:line="10" pos:column="28"/></name></decl>, <modifier pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></modifier><modifier pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="32">pslave<pos:position pos:line="10" pos:column="38"/></name></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>

            <expr_stmt><expr><name pos:line="12" pos:column="13">pslave<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">(<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">conn_rec<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></operator><operator pos:line="12" pos:column="33">*<pos:position pos:line="12" pos:column="34"/></operator><operator pos:line="12" pos:column="34">)<pos:position pos:line="12" pos:column="35"/></operator><call><name pos:line="12" pos:column="35">apr_array_pop<pos:position pos:line="12" pos:column="48"/></name><argument_list pos:line="12" pos:column="48">(<argument><expr><name><name pos:line="12" pos:column="49">m<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">spare_slaves<pos:position pos:line="12" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">pslave<pos:position pos:line="13" pos:column="23"/></name></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24"> <block pos:line="13" pos:column="25">{
                <expr_stmt><expr><name pos:line="14" pos:column="17">slave<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">pslave<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="15" pos:column="17">slave<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">aborted<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <literal type="number" pos:line="15" pos:column="34">0<pos:position pos:line="15" pos:column="35"/></literal></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="16" pos:column="14"/></block></then>
            <else pos:line="17" pos:column="13">else <block pos:line="17" pos:column="18">{
                <expr_stmt><expr><name pos:line="18" pos:column="17">slave<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <call><name pos:line="18" pos:column="25">h2_slave_create<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name><name pos:line="18" pos:column="41">m<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">c<pos:position pos:line="18" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="47">stream<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">-&gt;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="55">id<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="59">m<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">-&gt;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="62">pool<pos:position pos:line="18" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></else></if>
            
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><operator pos:line="21" pos:column="17">!<pos:position pos:line="21" pos:column="18"/></operator><name><name pos:line="21" pos:column="18">stream<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">task<pos:position pos:line="21" pos:column="30"/></name></name></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{

                <if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">sid<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">&gt;<pos:position pos:line="23" pos:column="29"/></operator> <name><name pos:line="23" pos:column="27">m<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">max_stream_started<pos:position pos:line="23" pos:column="48"/></name></name></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49"> <block pos:line="23" pos:column="50">{
                    <expr_stmt><expr><name><name pos:line="24" pos:column="21">m<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">max_stream_started<pos:position pos:line="24" pos:column="42"/></name></name> <operator pos:line="24" pos:column="43">=<pos:position pos:line="24" pos:column="44"/></operator> <name pos:line="24" pos:column="45">sid<pos:position pos:line="24" pos:column="48"/></name></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="25" pos:column="18"/></block></then></if>
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name><name pos:line="26" pos:column="21">stream<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">input<pos:position pos:line="26" pos:column="34"/></name></name></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <block pos:line="26" pos:column="36">{
                    <expr_stmt><expr><call><name pos:line="27" pos:column="21">h2_beam_on_consumed<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name><name pos:line="27" pos:column="41">stream<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">input<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">stream_input_ev<pos:position pos:line="27" pos:column="71"/></name></expr></argument>, 
                                        <argument><expr><name pos:line="28" pos:column="41">stream_input_consumed<pos:position pos:line="28" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="64">stream<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>
                }<pos:position pos:line="29" pos:column="18"/></block></then></if>
                
                <expr_stmt><expr><name><name pos:line="31" pos:column="17">stream<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">task<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <call><name pos:line="31" pos:column="32">h2_task_create<pos:position pos:line="31" pos:column="46"/></name><argument_list pos:line="31" pos:column="46">(<argument><expr><name pos:line="31" pos:column="47">slave<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="54">stream<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">-&gt;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="62">id<pos:position pos:line="31" pos:column="64"/></name></name></expr></argument>, 
                                              <argument><expr><name><name pos:line="32" pos:column="47">stream<pos:position pos:line="32" pos:column="53"/></name><operator pos:line="32" pos:column="53">-&gt;<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="55">request<pos:position pos:line="32" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="64">m<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="67">stream<pos:position pos:line="32" pos:column="73"/></name><operator pos:line="32" pos:column="73">-&gt;<pos:position pos:line="32" pos:column="78"/></operator><name pos:line="32" pos:column="75">input<pos:position pos:line="32" pos:column="80"/></name></name></expr></argument>, 
                                              <argument><expr><name><name pos:line="33" pos:column="47">stream<pos:position pos:line="33" pos:column="53"/></name><operator pos:line="33" pos:column="53">-&gt;<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="55">session<pos:position pos:line="33" pos:column="62"/></name><operator pos:line="33" pos:column="62">-&gt;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="64">s<pos:position pos:line="33" pos:column="65"/></name><operator pos:line="33" pos:column="65">-&gt;<pos:position pos:line="33" pos:column="70"/></operator><name pos:line="33" pos:column="67">timeout<pos:position pos:line="33" pos:column="74"/></name></name></expr></argument>,
                                              <argument><expr><name><name pos:line="34" pos:column="47">m<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">stream_max_mem<pos:position pos:line="34" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">!<pos:position pos:line="35" pos:column="22"/></operator><name><name pos:line="35" pos:column="22">stream<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">task<pos:position pos:line="35" pos:column="34"/></name></name></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35"> <block pos:line="35" pos:column="36">{
                    <expr_stmt><expr><call><name pos:line="36" pos:column="21">ap_log_cerror<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">APLOG_MARK<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">APLOG_ERR<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">APR_ENOMEM<pos:position pos:line="36" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="70">slave<pos:position pos:line="36" pos:column="75"/></name></expr></argument>,
                                  <argument><expr><call><name pos:line="37" pos:column="35">H2_STRM_LOG<pos:position pos:line="37" pos:column="46"/></name><argument_list pos:line="37" pos:column="46">(<argument><expr><call><name pos:line="37" pos:column="47">APLOGNO<pos:position pos:line="37" pos:column="54"/></name><argument_list pos:line="37" pos:column="54">(<argument><expr><literal type="number" pos:line="37" pos:column="55">02941<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="63">stream<pos:position pos:line="37" pos:column="69"/></name></expr></argument>, 
                                  <argument><expr><literal type="string" pos:line="38" pos:column="35">"create task"<pos:position pos:line="38" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
                    <return pos:line="39" pos:column="21">return <expr><name pos:line="39" pos:column="28">NULL<pos:position pos:line="39" pos:column="32"/></name></expr>;<pos:position pos:line="39" pos:column="33"/></return>
                }<pos:position pos:line="40" pos:column="18"/></block></then></if>
                
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>
            
            <expr_stmt><expr><operator pos:line="44" pos:column="13">++<pos:position pos:line="44" pos:column="15"/></operator><name><name pos:line="44" pos:column="15">m<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">tasks_active<pos:position pos:line="44" pos:column="30"/></name></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><name><name pos:line="45" pos:column="20">stream<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">-&gt;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="28">task<pos:position pos:line="45" pos:column="32"/></name></name></expr>;<pos:position pos:line="45" pos:column="33"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></while>
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">NULL<pos:position pos:line="48" pos:column="16"/></name></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1835.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cgi_handler<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">nph<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">dbpos<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">argv0<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">command<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier><modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">argv<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">dbuf<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_file_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">script_out<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><name pos:line="9" pos:column="30">NULL<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="37">script_in<pos:position pos:line="9" pos:column="46"/></name> <init pos:line="9" pos:column="47">= <expr><name pos:line="9" pos:column="49">NULL<pos:position pos:line="9" pos:column="53"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="55">*<pos:position pos:line="9" pos:column="56"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="56">script_err<pos:position pos:line="9" pos:column="66"/></name> <init pos:line="9" pos:column="67">= <expr><name pos:line="9" pos:column="69">NULL<pos:position pos:line="9" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_bucket_brigade<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">bb<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">b<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">is_included<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">seen_eos<pos:position pos:line="13" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="19">child_stopped_reading<pos:position pos:line="13" pos:column="40"/></name></decl>;<pos:position pos:line="13" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_pool_t<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">p<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">cgi_server_conf<pos:position pos:line="15" pos:column="20"/></name> <modifier pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></modifier></type><name pos:line="15" pos:column="22">conf<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">apr_status_t<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">rv<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">cgi_exec_info_t<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">e_info<pos:position pos:line="17" pos:column="27"/></name></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">conn_rec<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">c<pos:position pos:line="18" pos:column="16"/></name> <init pos:line="18" pos:column="17">= <expr><name><name pos:line="18" pos:column="19">r<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">connection<pos:position pos:line="18" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="33"/></decl_stmt>

    <if pos:line="20" pos:column="5">if<condition pos:line="20" pos:column="7">(<expr><call><name pos:line="20" pos:column="8">strcmp<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name><name pos:line="20" pos:column="15">r<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">handler<pos:position pos:line="20" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">CGI_MAGIC_TYPE<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call> <operator pos:line="20" pos:column="43">&amp;&amp;<pos:position pos:line="20" pos:column="53"/></operator> <call><name pos:line="20" pos:column="46">strcmp<pos:position pos:line="20" pos:column="52"/></name><argument_list pos:line="20" pos:column="52">(<argument><expr><name><name pos:line="20" pos:column="53">r<pos:position pos:line="20" pos:column="54"/></name><operator pos:line="20" pos:column="54">-&gt;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="56">handler<pos:position pos:line="20" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="65">"cgi-script"<pos:position pos:line="20" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="79"/></condition><then pos:line="20" pos:column="79">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">DECLINED<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">is_included<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <operator pos:line="23" pos:column="19">!<pos:position pos:line="23" pos:column="20"/></operator><call><name pos:line="23" pos:column="20">strcmp<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name><name pos:line="23" pos:column="27">r<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">protocol<pos:position pos:line="23" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="40">"INCLUDED"<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">p<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <ternary><condition><expr><name><name pos:line="25" pos:column="9">r<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">main<pos:position pos:line="25" pos:column="16"/></name></name></expr> ?<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <expr><name><name pos:line="25" pos:column="19">r<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">main<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">pool<pos:position pos:line="25" pos:column="32"/></name></name></expr> <pos:position pos:line="25" pos:column="33"/></then><else pos:line="25" pos:column="33">: <expr><name><name pos:line="25" pos:column="35">r<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">pool<pos:position pos:line="25" pos:column="42"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">argv0<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <call><name pos:line="27" pos:column="13">apr_filepath_name_get<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name><name pos:line="27" pos:column="35">r<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">filename<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">nph<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <operator pos:line="28" pos:column="11">!<pos:position pos:line="28" pos:column="12"/></operator><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><call><name pos:line="28" pos:column="13">strncmp<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">argv0<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="28">"nph-"<pos:position pos:line="28" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="36">4<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">conf<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <call><name pos:line="29" pos:column="12">ap_get_module_config<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name><name pos:line="29" pos:column="33">r<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">-&gt;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="36">server<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">module_config<pos:position pos:line="29" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="59">&amp;<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="60">cgi_module<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="72"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><call><name pos:line="31" pos:column="11">ap_allow_options<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">r<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call> <operator pos:line="31" pos:column="31">&amp;<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="33">OPT_EXECCGI<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">)<pos:position pos:line="31" pos:column="45"/></operator> <operator pos:line="31" pos:column="46">&amp;&amp;<pos:position pos:line="31" pos:column="56"/></operator> <operator pos:line="31" pos:column="49">!<pos:position pos:line="31" pos:column="50"/></operator><call><name pos:line="31" pos:column="50">is_scriptaliased<pos:position pos:line="31" pos:column="66"/></name><argument_list pos:line="31" pos:column="66">(<argument><expr><name pos:line="31" pos:column="67">r<pos:position pos:line="31" pos:column="68"/></name></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="70"/></condition><then pos:line="31" pos:column="70">
        <block type="pseudo"><return pos:line="32" pos:column="9">return <expr><call><name pos:line="32" pos:column="16">log_scripterror<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">r<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">conf<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">HTTP_FORBIDDEN<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="57">0<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>,
                               <argument><expr><literal type="string" pos:line="33" pos:column="32">"Options ExecCGI is off in this directory"<pos:position pos:line="33" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></return></block></then></if>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">nph<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">&amp;&amp;<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="16">is_included<pos:position pos:line="34" pos:column="27"/></name></expr>)<pos:position pos:line="34" pos:column="28"/></condition><then pos:line="34" pos:column="28">
        <block type="pseudo"><return pos:line="35" pos:column="9">return <expr><call><name pos:line="35" pos:column="16">log_scripterror<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">r<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">conf<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="41">HTTP_FORBIDDEN<pos:position pos:line="35" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="57">0<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>,
                               <argument><expr><literal type="string" pos:line="36" pos:column="32">"attempt to include NPH CGI script"<pos:position pos:line="36" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></return></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">r<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">finfo<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">.<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">filetype<pos:position pos:line="38" pos:column="26"/></name></name> <operator pos:line="38" pos:column="27">==<pos:position pos:line="38" pos:column="29"/></operator> <literal type="number" pos:line="38" pos:column="30">0<pos:position pos:line="38" pos:column="31"/></literal></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32">
        <block type="pseudo"><return pos:line="39" pos:column="9">return <expr><call><name pos:line="39" pos:column="16">log_scripterror<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">r<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">conf<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="41">HTTP_NOT_FOUND<pos:position pos:line="39" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="57">0<pos:position pos:line="39" pos:column="58"/></literal></expr></argument>,
                               <argument><expr><literal type="string" pos:line="40" pos:column="32">"script not found or unable to stat"<pos:position pos:line="40" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="70"/></return></block></then></if>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">r<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">finfo<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">.<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">filetype<pos:position pos:line="41" pos:column="26"/></name></name> <operator pos:line="41" pos:column="27">==<pos:position pos:line="41" pos:column="29"/></operator> <name pos:line="41" pos:column="30">APR_DIR<pos:position pos:line="41" pos:column="37"/></name></expr>)<pos:position pos:line="41" pos:column="38"/></condition><then pos:line="41" pos:column="38">
        <block type="pseudo"><return pos:line="42" pos:column="9">return <expr><call><name pos:line="42" pos:column="16">log_scripterror<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">r<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">conf<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="41">HTTP_FORBIDDEN<pos:position pos:line="42" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="57">0<pos:position pos:line="42" pos:column="58"/></literal></expr></argument>,
                               <argument><expr><literal type="string" pos:line="43" pos:column="32">"attempt to invoke directory as script"<pos:position pos:line="43" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="73"/></return></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">(<pos:position pos:line="45" pos:column="10"/></operator><name><name pos:line="45" pos:column="10">r<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">used_path_info<pos:position pos:line="45" pos:column="27"/></name></name> <operator pos:line="45" pos:column="28">==<pos:position pos:line="45" pos:column="30"/></operator> <name pos:line="45" pos:column="31">AP_REQ_REJECT_PATH_INFO<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">)<pos:position pos:line="45" pos:column="55"/></operator> <operator pos:line="45" pos:column="56">&amp;&amp;<pos:position pos:line="45" pos:column="66"/></operator>
        <name><name pos:line="46" pos:column="9">r<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">path_info<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">&amp;&amp;<pos:position pos:line="46" pos:column="32"/></operator> <operator pos:line="46" pos:column="25">*<pos:position pos:line="46" pos:column="26"/></operator><name><name pos:line="46" pos:column="26">r<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">path_info<pos:position pos:line="46" pos:column="38"/></name></name></expr>)<pos:position pos:line="46" pos:column="39"/></condition><then pos:line="46" pos:column="39">
    <block pos:line="47" pos:column="5">{
        <comment type="block" pos:line="48" pos:column="9">/* default to accept */</comment>
        <return pos:line="49" pos:column="9">return <expr><call><name pos:line="49" pos:column="16">log_scripterror<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">r<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="35">conf<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="41">HTTP_NOT_FOUND<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="57">0<pos:position pos:line="49" pos:column="58"/></literal></expr></argument>,
                               <argument><expr><literal type="string" pos:line="50" pos:column="32">"AcceptPathInfo off disallows user's path"<pos:position pos:line="50" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="76"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
<comment type="block" pos:line="52" pos:column="1">/*
    if (!ap_suexec_enabled) {
        if (!ap_can_exec(&amp;r-&gt;finfo))
            return log_scripterror(r, conf, HTTP_FORBIDDEN, 0,
                                   "file permissions deny server execution");
    }

*/</comment>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">ap_add_common_vars<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">r<pos:position pos:line="60" pos:column="25"/></name></expr></argument>)<pos:position pos:line="60" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">ap_add_cgi_vars<pos:position pos:line="61" pos:column="20"/></name><argument_list pos:line="61" pos:column="20">(<argument><expr><name pos:line="61" pos:column="21">r<pos:position pos:line="61" pos:column="22"/></name></expr></argument>)<pos:position pos:line="61" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="63" pos:column="5">e_info<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">.<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="12">process_cgi<pos:position pos:line="63" pos:column="23"/></name></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <literal type="number" pos:line="63" pos:column="26">1<pos:position pos:line="63" pos:column="27"/></literal></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="64" pos:column="5">e_info<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">.<pos:position pos:line="64" pos:column="12"/></operator><name pos:line="64" pos:column="12">cmd_type<pos:position pos:line="64" pos:column="20"/></name></name>    <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <name pos:line="64" pos:column="26">APR_PROGRAM<pos:position pos:line="64" pos:column="37"/></name></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">e_info<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">.<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="12">detached<pos:position pos:line="65" pos:column="20"/></name></name>    <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <literal type="number" pos:line="65" pos:column="26">0<pos:position pos:line="65" pos:column="27"/></literal></expr>;<pos:position pos:line="65" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">e_info<pos:position pos:line="66" pos:column="11"/></name><operator pos:line="66" pos:column="11">.<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">in_pipe<pos:position pos:line="66" pos:column="19"/></name></name>     <operator pos:line="66" pos:column="24">=<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="26">APR_CHILD_BLOCK<pos:position pos:line="66" pos:column="41"/></name></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">e_info<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">.<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="12">out_pipe<pos:position pos:line="67" pos:column="20"/></name></name>    <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <name pos:line="67" pos:column="26">APR_CHILD_BLOCK<pos:position pos:line="67" pos:column="41"/></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">e_info<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">.<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">err_pipe<pos:position pos:line="68" pos:column="20"/></name></name>    <operator pos:line="68" pos:column="24">=<pos:position pos:line="68" pos:column="25"/></operator> <name pos:line="68" pos:column="26">APR_CHILD_BLOCK<pos:position pos:line="68" pos:column="41"/></name></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">e_info<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">.<pos:position pos:line="69" pos:column="12"/></operator><name pos:line="69" pos:column="12">prog_type<pos:position pos:line="69" pos:column="21"/></name></name>   <operator pos:line="69" pos:column="24">=<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">RUN_AS_CGI<pos:position pos:line="69" pos:column="36"/></name></expr>;<pos:position pos:line="69" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="70" pos:column="5">e_info<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">.<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="12">bb<pos:position pos:line="70" pos:column="14"/></name></name>          <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <name pos:line="70" pos:column="26">NULL<pos:position pos:line="70" pos:column="30"/></name></expr>;<pos:position pos:line="70" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="71" pos:column="5">e_info<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">.<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="12">ctx<pos:position pos:line="71" pos:column="15"/></name></name>         <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">NULL<pos:position pos:line="71" pos:column="30"/></name></expr>;<pos:position pos:line="71" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">e_info<pos:position pos:line="72" pos:column="11"/></name><operator pos:line="72" pos:column="11">.<pos:position pos:line="72" pos:column="12"/></operator><name pos:line="72" pos:column="12">next<pos:position pos:line="72" pos:column="16"/></name></name>        <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <name pos:line="72" pos:column="26">NULL<pos:position pos:line="72" pos:column="30"/></name></expr>;<pos:position pos:line="72" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">e_info<pos:position pos:line="73" pos:column="11"/></name><operator pos:line="73" pos:column="11">.<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="12">addrspace<pos:position pos:line="73" pos:column="21"/></name></name>   <operator pos:line="73" pos:column="24">=<pos:position pos:line="73" pos:column="25"/></operator> <literal type="number" pos:line="73" pos:column="26">0<pos:position pos:line="73" pos:column="27"/></literal></expr>;<pos:position pos:line="73" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="75" pos:column="5">/* build the command line */</comment>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><operator pos:line="76" pos:column="9">(<pos:position pos:line="76" pos:column="10"/></operator><name pos:line="76" pos:column="10">rv<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <call><name pos:line="76" pos:column="15">cgi_build_command<pos:position pos:line="76" pos:column="32"/></name><argument_list pos:line="76" pos:column="32">(<argument><expr><operator pos:line="76" pos:column="33">&amp;<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="34">command<pos:position pos:line="76" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="43">&amp;<pos:position pos:line="76" pos:column="48"/></operator><name pos:line="76" pos:column="44">argv<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="50">r<pos:position pos:line="76" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="53">p<pos:position pos:line="76" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="56">&amp;<pos:position pos:line="76" pos:column="61"/></operator><name pos:line="76" pos:column="57">e_info<pos:position pos:line="76" pos:column="63"/></name></expr></argument>)<pos:position pos:line="76" pos:column="64"/></argument_list></call><operator pos:line="76" pos:column="64">)<pos:position pos:line="76" pos:column="65"/></operator> <operator pos:line="76" pos:column="66">!=<pos:position pos:line="76" pos:column="68"/></operator> <name pos:line="76" pos:column="69">APR_SUCCESS<pos:position pos:line="76" pos:column="80"/></name></expr>)<pos:position pos:line="76" pos:column="81"/></condition><then pos:line="76" pos:column="81"> <block pos:line="76" pos:column="82">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">ap_log_rerror<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><name pos:line="77" pos:column="23">APLOG_MARK<pos:position pos:line="77" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="35">APLOG_ERR<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="46">rv<pos:position pos:line="77" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="50">r<pos:position pos:line="77" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="78" pos:column="23">"don't know how to spawn child process: %s"<pos:position pos:line="78" pos:column="66"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="79" pos:column="23">r<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">-&gt;<pos:position pos:line="79" pos:column="29"/></operator><name pos:line="79" pos:column="26">filename<pos:position pos:line="79" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="36"/></expr_stmt>
        <return pos:line="80" pos:column="9">return <expr><name pos:line="80" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="80" pos:column="42"/></name></expr>;<pos:position pos:line="80" pos:column="43"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="83" pos:column="5">/* run the script in its own process */</comment>
    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><operator pos:line="84" pos:column="9">(<pos:position pos:line="84" pos:column="10"/></operator><name pos:line="84" pos:column="10">rv<pos:position pos:line="84" pos:column="12"/></name> <operator pos:line="84" pos:column="13">=<pos:position pos:line="84" pos:column="14"/></operator> <call><name pos:line="84" pos:column="15">run_cgi_child<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><operator pos:line="84" pos:column="29">&amp;<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="30">script_out<pos:position pos:line="84" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="42">&amp;<pos:position pos:line="84" pos:column="47"/></operator><name pos:line="84" pos:column="43">script_in<pos:position pos:line="84" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="54">&amp;<pos:position pos:line="84" pos:column="59"/></operator><name pos:line="84" pos:column="55">script_err<pos:position pos:line="84" pos:column="65"/></name></expr></argument>,
                            <argument><expr><name pos:line="85" pos:column="29">command<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="38">argv<pos:position pos:line="85" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="44">r<pos:position pos:line="85" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="47">p<pos:position pos:line="85" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="50">&amp;<pos:position pos:line="85" pos:column="55"/></operator><name pos:line="85" pos:column="51">e_info<pos:position pos:line="85" pos:column="57"/></name></expr></argument>)<pos:position pos:line="85" pos:column="58"/></argument_list></call><operator pos:line="85" pos:column="58">)<pos:position pos:line="85" pos:column="59"/></operator> <operator pos:line="85" pos:column="60">!=<pos:position pos:line="85" pos:column="62"/></operator> <name pos:line="85" pos:column="63">APR_SUCCESS<pos:position pos:line="85" pos:column="74"/></name></expr>)<pos:position pos:line="85" pos:column="75"/></condition><then pos:line="85" pos:column="75"> <block pos:line="85" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">ap_log_rerror<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">(<argument><expr><name pos:line="86" pos:column="23">APLOG_MARK<pos:position pos:line="86" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="35">APLOG_ERR<pos:position pos:line="86" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="46">rv<pos:position pos:line="86" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="50">r<pos:position pos:line="86" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="87" pos:column="23">"couldn't spawn child process: %s"<pos:position pos:line="87" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="59">r<pos:position pos:line="87" pos:column="60"/></name><operator pos:line="87" pos:column="60">-&gt;<pos:position pos:line="87" pos:column="65"/></operator><name pos:line="87" pos:column="62">filename<pos:position pos:line="87" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="72"/></expr_stmt>
        <return pos:line="88" pos:column="9">return <expr><name pos:line="88" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="88" pos:column="42"/></name></expr>;<pos:position pos:line="88" pos:column="43"/></return>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="91" pos:column="5">/* Transfer any put/post args, CERN style...
     * Note that we already ignore SIGPIPE in the core server.
     */</comment>
    <expr_stmt><expr><name pos:line="94" pos:column="5">bb<pos:position pos:line="94" pos:column="7"/></name> <operator pos:line="94" pos:column="8">=<pos:position pos:line="94" pos:column="9"/></operator> <call><name pos:line="94" pos:column="10">apr_brigade_create<pos:position pos:line="94" pos:column="28"/></name><argument_list pos:line="94" pos:column="28">(<argument><expr><name><name pos:line="94" pos:column="29">r<pos:position pos:line="94" pos:column="30"/></name><operator pos:line="94" pos:column="30">-&gt;<pos:position pos:line="94" pos:column="35"/></operator><name pos:line="94" pos:column="32">pool<pos:position pos:line="94" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="38">c<pos:position pos:line="94" pos:column="39"/></name><operator pos:line="94" pos:column="39">-&gt;<pos:position pos:line="94" pos:column="44"/></operator><name pos:line="94" pos:column="41">bucket_alloc<pos:position pos:line="94" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="95" pos:column="5">seen_eos<pos:position pos:line="95" pos:column="13"/></name> <operator pos:line="95" pos:column="14">=<pos:position pos:line="95" pos:column="15"/></operator> <literal type="number" pos:line="95" pos:column="16">0<pos:position pos:line="95" pos:column="17"/></literal></expr>;<pos:position pos:line="95" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="96" pos:column="5">child_stopped_reading<pos:position pos:line="96" pos:column="26"/></name> <operator pos:line="96" pos:column="27">=<pos:position pos:line="96" pos:column="28"/></operator> <literal type="number" pos:line="96" pos:column="29">0<pos:position pos:line="96" pos:column="30"/></literal></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name><name pos:line="97" pos:column="9">conf<pos:position pos:line="97" pos:column="13"/></name><operator pos:line="97" pos:column="13">-&gt;<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="15">logname<pos:position pos:line="97" pos:column="22"/></name></name></expr>)<pos:position pos:line="97" pos:column="23"/></condition><then pos:line="97" pos:column="23"> <block pos:line="97" pos:column="24">{
        <expr_stmt><expr><name pos:line="98" pos:column="9">dbuf<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">=<pos:position pos:line="98" pos:column="15"/></operator> <call><name pos:line="98" pos:column="16">apr_palloc<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">(<argument><expr><name><name pos:line="98" pos:column="27">r<pos:position pos:line="98" pos:column="28"/></name><operator pos:line="98" pos:column="28">-&gt;<pos:position pos:line="98" pos:column="33"/></operator><name pos:line="98" pos:column="30">pool<pos:position pos:line="98" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="36">conf<pos:position pos:line="98" pos:column="40"/></name><operator pos:line="98" pos:column="40">-&gt;<pos:position pos:line="98" pos:column="45"/></operator><name pos:line="98" pos:column="42">bufbytes<pos:position pos:line="98" pos:column="50"/></name></name> <operator pos:line="98" pos:column="51">+<pos:position pos:line="98" pos:column="52"/></operator> <literal type="number" pos:line="98" pos:column="53">1<pos:position pos:line="98" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="99" pos:column="9">dbpos<pos:position pos:line="99" pos:column="14"/></name> <operator pos:line="99" pos:column="15">=<pos:position pos:line="99" pos:column="16"/></operator> <literal type="number" pos:line="99" pos:column="17">0<pos:position pos:line="99" pos:column="18"/></literal></expr>;<pos:position pos:line="99" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
    <do pos:line="101" pos:column="5">do <block pos:line="101" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="102" pos:column="9">apr_bucket<pos:position pos:line="102" pos:column="19"/></name> <modifier pos:line="102" pos:column="20">*<pos:position pos:line="102" pos:column="21"/></modifier></type><name pos:line="102" pos:column="21">bucket<pos:position pos:line="102" pos:column="27"/></name></decl>;<pos:position pos:line="102" pos:column="28"/></decl_stmt>

        <expr_stmt><expr><name pos:line="104" pos:column="9">rv<pos:position pos:line="104" pos:column="11"/></name> <operator pos:line="104" pos:column="12">=<pos:position pos:line="104" pos:column="13"/></operator> <call><name pos:line="104" pos:column="14">ap_get_brigade<pos:position pos:line="104" pos:column="28"/></name><argument_list pos:line="104" pos:column="28">(<argument><expr><name><name pos:line="104" pos:column="29">r<pos:position pos:line="104" pos:column="30"/></name><operator pos:line="104" pos:column="30">-&gt;<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="32">input_filters<pos:position pos:line="104" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="47">bb<pos:position pos:line="104" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="51">AP_MODE_READBYTES<pos:position pos:line="104" pos:column="68"/></name></expr></argument>,
                            <argument><expr><name pos:line="105" pos:column="29">APR_BLOCK_READ<pos:position pos:line="105" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="45">HUGE_STRING_LEN<pos:position pos:line="105" pos:column="60"/></name></expr></argument>)<pos:position pos:line="105" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="62"/></expr_stmt>

        <if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">rv<pos:position pos:line="107" pos:column="15"/></name> <operator pos:line="107" pos:column="16">!=<pos:position pos:line="107" pos:column="18"/></operator> <name pos:line="107" pos:column="19">APR_SUCCESS<pos:position pos:line="107" pos:column="30"/></name></expr>)<pos:position pos:line="107" pos:column="31"/></condition><then pos:line="107" pos:column="31"> <block pos:line="107" pos:column="32">{
            <if pos:line="108" pos:column="13">if <condition pos:line="108" pos:column="16">(<expr><call><name pos:line="108" pos:column="17">APR_STATUS_IS_TIMEUP<pos:position pos:line="108" pos:column="37"/></name><argument_list pos:line="108" pos:column="37">(<argument><expr><name pos:line="108" pos:column="38">rv<pos:position pos:line="108" pos:column="40"/></name></expr></argument>)<pos:position pos:line="108" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="42"/></condition><then pos:line="108" pos:column="42"> <block pos:line="108" pos:column="43">{
                <expr_stmt><expr><call><name pos:line="109" pos:column="17">ap_log_rerror<pos:position pos:line="109" pos:column="30"/></name><argument_list pos:line="109" pos:column="30">(<argument><expr><name pos:line="109" pos:column="31">APLOG_MARK<pos:position pos:line="109" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="43">APLOG_ERR<pos:position pos:line="109" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="54">rv<pos:position pos:line="109" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="58">r<pos:position pos:line="109" pos:column="59"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="110" pos:column="31">"Timeout during reading request entity data"<pos:position pos:line="110" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="77"/></expr_stmt>
                <return pos:line="111" pos:column="17">return <expr><name pos:line="111" pos:column="24">HTTP_REQUEST_TIME_OUT<pos:position pos:line="111" pos:column="45"/></name></expr>;<pos:position pos:line="111" pos:column="46"/></return>
            }<pos:position pos:line="112" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="113" pos:column="13">ap_log_rerror<pos:position pos:line="113" pos:column="26"/></name><argument_list pos:line="113" pos:column="26">(<argument><expr><name pos:line="113" pos:column="27">APLOG_MARK<pos:position pos:line="113" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="39">APLOG_ERR<pos:position pos:line="113" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="50">rv<pos:position pos:line="113" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="54">r<pos:position pos:line="113" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="114" pos:column="27">"Error reading request entity data"<pos:position pos:line="114" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="64"/></expr_stmt>
            <return pos:line="115" pos:column="13">return <expr><name pos:line="115" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="115" pos:column="46"/></name></expr>;<pos:position pos:line="115" pos:column="47"/></return>
        }<pos:position pos:line="116" pos:column="10"/></block></then></if>

        <for pos:line="118" pos:column="9">for <control pos:line="118" pos:column="13">(<init><expr><name pos:line="118" pos:column="14">bucket<pos:position pos:line="118" pos:column="20"/></name> <operator pos:line="118" pos:column="21">=<pos:position pos:line="118" pos:column="22"/></operator> <call><name pos:line="118" pos:column="23">APR_BRIGADE_FIRST<pos:position pos:line="118" pos:column="40"/></name><argument_list pos:line="118" pos:column="40">(<argument><expr><name pos:line="118" pos:column="41">bb<pos:position pos:line="118" pos:column="43"/></name></expr></argument>)<pos:position pos:line="118" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="45"/></init>
             <condition><expr><name pos:line="119" pos:column="14">bucket<pos:position pos:line="119" pos:column="20"/></name> <operator pos:line="119" pos:column="21">!=<pos:position pos:line="119" pos:column="23"/></operator> <call><name pos:line="119" pos:column="24">APR_BRIGADE_SENTINEL<pos:position pos:line="119" pos:column="44"/></name><argument_list pos:line="119" pos:column="44">(<argument><expr><name pos:line="119" pos:column="45">bb<pos:position pos:line="119" pos:column="47"/></name></expr></argument>)<pos:position pos:line="119" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="49"/></condition>
             <incr><expr><name pos:line="120" pos:column="14">bucket<pos:position pos:line="120" pos:column="20"/></name> <operator pos:line="120" pos:column="21">=<pos:position pos:line="120" pos:column="22"/></operator> <call><name pos:line="120" pos:column="23">APR_BUCKET_NEXT<pos:position pos:line="120" pos:column="38"/></name><argument_list pos:line="120" pos:column="38">(<argument><expr><name pos:line="120" pos:column="39">bucket<pos:position pos:line="120" pos:column="45"/></name></expr></argument>)<pos:position pos:line="120" pos:column="46"/></argument_list></call></expr></incr>)<pos:position pos:line="120" pos:column="47"/></control>
        <block pos:line="121" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="122" pos:column="13">const<pos:position pos:line="122" pos:column="18"/></specifier> <name pos:line="122" pos:column="19">char<pos:position pos:line="122" pos:column="23"/></name> <modifier pos:line="122" pos:column="24">*<pos:position pos:line="122" pos:column="25"/></modifier></type><name pos:line="122" pos:column="25">data<pos:position pos:line="122" pos:column="29"/></name></decl>;<pos:position pos:line="122" pos:column="30"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">apr_size_t<pos:position pos:line="123" pos:column="23"/></name></type> <name pos:line="123" pos:column="24">len<pos:position pos:line="123" pos:column="27"/></name></decl>;<pos:position pos:line="123" pos:column="28"/></decl_stmt>

            <if pos:line="125" pos:column="13">if <condition pos:line="125" pos:column="16">(<expr><call><name pos:line="125" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="125" pos:column="34"/></name><argument_list pos:line="125" pos:column="34">(<argument><expr><name pos:line="125" pos:column="35">bucket<pos:position pos:line="125" pos:column="41"/></name></expr></argument>)<pos:position pos:line="125" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="125" pos:column="43"/></condition><then pos:line="125" pos:column="43"> <block pos:line="125" pos:column="44">{
                <expr_stmt><expr><name pos:line="126" pos:column="17">seen_eos<pos:position pos:line="126" pos:column="25"/></name> <operator pos:line="126" pos:column="26">=<pos:position pos:line="126" pos:column="27"/></operator> <literal type="number" pos:line="126" pos:column="28">1<pos:position pos:line="126" pos:column="29"/></literal></expr>;<pos:position pos:line="126" pos:column="30"/></expr_stmt>
                <break pos:line="127" pos:column="17">break;<pos:position pos:line="127" pos:column="23"/></break>
            }<pos:position pos:line="128" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="130" pos:column="13">/* We can't do much with this. */</comment>
            <if pos:line="131" pos:column="13">if <condition pos:line="131" pos:column="16">(<expr><call><name pos:line="131" pos:column="17">APR_BUCKET_IS_FLUSH<pos:position pos:line="131" pos:column="36"/></name><argument_list pos:line="131" pos:column="36">(<argument><expr><name pos:line="131" pos:column="37">bucket<pos:position pos:line="131" pos:column="43"/></name></expr></argument>)<pos:position pos:line="131" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="45"/></condition><then pos:line="131" pos:column="45"> <block pos:line="131" pos:column="46">{
                <continue pos:line="132" pos:column="17">continue;<pos:position pos:line="132" pos:column="26"/></continue>
            }<pos:position pos:line="133" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="135" pos:column="13">/* If the child stopped, we still must read to EOS. */</comment>
            <if pos:line="136" pos:column="13">if <condition pos:line="136" pos:column="16">(<expr><name pos:line="136" pos:column="17">child_stopped_reading<pos:position pos:line="136" pos:column="38"/></name></expr>)<pos:position pos:line="136" pos:column="39"/></condition><then pos:line="136" pos:column="39"> <block pos:line="136" pos:column="40">{
                <continue pos:line="137" pos:column="17">continue;<pos:position pos:line="137" pos:column="26"/></continue>
            }<pos:position pos:line="138" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="140" pos:column="13">/* read */</comment>
            <expr_stmt><expr><call><name pos:line="141" pos:column="13">apr_bucket_read<pos:position pos:line="141" pos:column="28"/></name><argument_list pos:line="141" pos:column="28">(<argument><expr><name pos:line="141" pos:column="29">bucket<pos:position pos:line="141" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="37">&amp;<pos:position pos:line="141" pos:column="42"/></operator><name pos:line="141" pos:column="38">data<pos:position pos:line="141" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="44">&amp;<pos:position pos:line="141" pos:column="49"/></operator><name pos:line="141" pos:column="45">len<pos:position pos:line="141" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="50">APR_BLOCK_READ<pos:position pos:line="141" pos:column="64"/></name></expr></argument>)<pos:position pos:line="141" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="66"/></expr_stmt>

            <if pos:line="143" pos:column="13">if <condition pos:line="143" pos:column="16">(<expr><name><name pos:line="143" pos:column="17">conf<pos:position pos:line="143" pos:column="21"/></name><operator pos:line="143" pos:column="21">-&gt;<pos:position pos:line="143" pos:column="26"/></operator><name pos:line="143" pos:column="23">logname<pos:position pos:line="143" pos:column="30"/></name></name> <operator pos:line="143" pos:column="31">&amp;&amp;<pos:position pos:line="143" pos:column="41"/></operator> <name pos:line="143" pos:column="34">dbpos<pos:position pos:line="143" pos:column="39"/></name> <operator pos:line="143" pos:column="40">&lt;<pos:position pos:line="143" pos:column="44"/></operator> <name><name pos:line="143" pos:column="42">conf<pos:position pos:line="143" pos:column="46"/></name><operator pos:line="143" pos:column="46">-&gt;<pos:position pos:line="143" pos:column="51"/></operator><name pos:line="143" pos:column="48">bufbytes<pos:position pos:line="143" pos:column="56"/></name></name></expr>)<pos:position pos:line="143" pos:column="57"/></condition><then pos:line="143" pos:column="57"> <block pos:line="143" pos:column="58">{
                <decl_stmt><decl><type><name pos:line="144" pos:column="17">int<pos:position pos:line="144" pos:column="20"/></name></type> <name pos:line="144" pos:column="21">cursize<pos:position pos:line="144" pos:column="28"/></name></decl>;<pos:position pos:line="144" pos:column="29"/></decl_stmt>

                <if pos:line="146" pos:column="17">if <condition pos:line="146" pos:column="20">(<expr><operator pos:line="146" pos:column="21">(<pos:position pos:line="146" pos:column="22"/></operator><name pos:line="146" pos:column="22">dbpos<pos:position pos:line="146" pos:column="27"/></name> <operator pos:line="146" pos:column="28">+<pos:position pos:line="146" pos:column="29"/></operator> <name pos:line="146" pos:column="30">len<pos:position pos:line="146" pos:column="33"/></name><operator pos:line="146" pos:column="33">)<pos:position pos:line="146" pos:column="34"/></operator> <operator pos:line="146" pos:column="35">&gt;<pos:position pos:line="146" pos:column="39"/></operator> <name><name pos:line="146" pos:column="37">conf<pos:position pos:line="146" pos:column="41"/></name><operator pos:line="146" pos:column="41">-&gt;<pos:position pos:line="146" pos:column="46"/></operator><name pos:line="146" pos:column="43">bufbytes<pos:position pos:line="146" pos:column="51"/></name></name></expr>)<pos:position pos:line="146" pos:column="52"/></condition><then pos:line="146" pos:column="52"> <block pos:line="146" pos:column="53">{
                    <expr_stmt><expr><name pos:line="147" pos:column="21">cursize<pos:position pos:line="147" pos:column="28"/></name> <operator pos:line="147" pos:column="29">=<pos:position pos:line="147" pos:column="30"/></operator> <name><name pos:line="147" pos:column="31">conf<pos:position pos:line="147" pos:column="35"/></name><operator pos:line="147" pos:column="35">-&gt;<pos:position pos:line="147" pos:column="40"/></operator><name pos:line="147" pos:column="37">bufbytes<pos:position pos:line="147" pos:column="45"/></name></name> <operator pos:line="147" pos:column="46">-<pos:position pos:line="147" pos:column="47"/></operator> <name pos:line="147" pos:column="48">dbpos<pos:position pos:line="147" pos:column="53"/></name></expr>;<pos:position pos:line="147" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="148" pos:column="18"/></block></then>
                <else pos:line="149" pos:column="17">else <block pos:line="149" pos:column="22">{
                    <expr_stmt><expr><name pos:line="150" pos:column="21">cursize<pos:position pos:line="150" pos:column="28"/></name> <operator pos:line="150" pos:column="29">=<pos:position pos:line="150" pos:column="30"/></operator> <name pos:line="150" pos:column="31">len<pos:position pos:line="150" pos:column="34"/></name></expr>;<pos:position pos:line="150" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="151" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="152" pos:column="17">memcpy<pos:position pos:line="152" pos:column="23"/></name><argument_list pos:line="152" pos:column="23">(<argument><expr><name pos:line="152" pos:column="24">dbuf<pos:position pos:line="152" pos:column="28"/></name> <operator pos:line="152" pos:column="29">+<pos:position pos:line="152" pos:column="30"/></operator> <name pos:line="152" pos:column="31">dbpos<pos:position pos:line="152" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="38">data<pos:position pos:line="152" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="44">cursize<pos:position pos:line="152" pos:column="51"/></name></expr></argument>)<pos:position pos:line="152" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name pos:line="153" pos:column="17">dbpos<pos:position pos:line="153" pos:column="22"/></name> <operator pos:line="153" pos:column="23">+=<pos:position pos:line="153" pos:column="25"/></operator> <name pos:line="153" pos:column="26">cursize<pos:position pos:line="153" pos:column="33"/></name></expr>;<pos:position pos:line="153" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="154" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="156" pos:column="13">/* Keep writing data to the child until done or too much time
             * elapses with no progress or an error occurs.
             */</comment>
            <expr_stmt><expr><name pos:line="159" pos:column="13">rv<pos:position pos:line="159" pos:column="15"/></name> <operator pos:line="159" pos:column="16">=<pos:position pos:line="159" pos:column="17"/></operator> <call><name pos:line="159" pos:column="18">apr_file_write_full<pos:position pos:line="159" pos:column="37"/></name><argument_list pos:line="159" pos:column="37">(<argument><expr><name pos:line="159" pos:column="38">script_out<pos:position pos:line="159" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="50">data<pos:position pos:line="159" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="56">len<pos:position pos:line="159" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="61">NULL<pos:position pos:line="159" pos:column="65"/></name></expr></argument>)<pos:position pos:line="159" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="67"/></expr_stmt>

            <if pos:line="161" pos:column="13">if <condition pos:line="161" pos:column="16">(<expr><name pos:line="161" pos:column="17">rv<pos:position pos:line="161" pos:column="19"/></name> <operator pos:line="161" pos:column="20">!=<pos:position pos:line="161" pos:column="22"/></operator> <name pos:line="161" pos:column="23">APR_SUCCESS<pos:position pos:line="161" pos:column="34"/></name></expr>)<pos:position pos:line="161" pos:column="35"/></condition><then pos:line="161" pos:column="35"> <block pos:line="161" pos:column="36">{
                <comment type="block" pos:line="162" pos:column="17">/* silly script stopped reading, soak up remaining message */</comment>
                <expr_stmt><expr><name pos:line="163" pos:column="17">child_stopped_reading<pos:position pos:line="163" pos:column="38"/></name> <operator pos:line="163" pos:column="39">=<pos:position pos:line="163" pos:column="40"/></operator> <literal type="number" pos:line="163" pos:column="41">1<pos:position pos:line="163" pos:column="42"/></literal></expr>;<pos:position pos:line="163" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="164" pos:column="14"/></block></then></if>
        }<pos:position pos:line="165" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="166" pos:column="9">apr_brigade_cleanup<pos:position pos:line="166" pos:column="28"/></name><argument_list pos:line="166" pos:column="28">(<argument><expr><name pos:line="166" pos:column="29">bb<pos:position pos:line="166" pos:column="31"/></name></expr></argument>)<pos:position pos:line="166" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="167" pos:column="6"/></block>
    while <condition pos:line="168" pos:column="11">(<expr><operator pos:line="168" pos:column="12">!<pos:position pos:line="168" pos:column="13"/></operator><name pos:line="168" pos:column="13">seen_eos<pos:position pos:line="168" pos:column="21"/></name></expr>)<pos:position pos:line="168" pos:column="22"/></condition>;<pos:position pos:line="168" pos:column="23"/></do>

    <if pos:line="170" pos:column="5">if <condition pos:line="170" pos:column="8">(<expr><name><name pos:line="170" pos:column="9">conf<pos:position pos:line="170" pos:column="13"/></name><operator pos:line="170" pos:column="13">-&gt;<pos:position pos:line="170" pos:column="18"/></operator><name pos:line="170" pos:column="15">logname<pos:position pos:line="170" pos:column="22"/></name></name></expr>)<pos:position pos:line="170" pos:column="23"/></condition><then pos:line="170" pos:column="23"> <block pos:line="170" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="171" pos:column="9">dbuf<pos:position pos:line="171" pos:column="13"/></name><index pos:line="171" pos:column="13">[<expr><name pos:line="171" pos:column="14">dbpos<pos:position pos:line="171" pos:column="19"/></name></expr>]<pos:position pos:line="171" pos:column="20"/></index></name> <operator pos:line="171" pos:column="21">=<pos:position pos:line="171" pos:column="22"/></operator> <literal type="char" pos:line="171" pos:column="23">'\0'<pos:position pos:line="171" pos:column="27"/></literal></expr>;<pos:position pos:line="171" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="172" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="173" pos:column="5">/* Is this flush really needed? */</comment>
    <expr_stmt><expr><call><name pos:line="174" pos:column="5">apr_file_flush<pos:position pos:line="174" pos:column="19"/></name><argument_list pos:line="174" pos:column="19">(<argument><expr><name pos:line="174" pos:column="20">script_out<pos:position pos:line="174" pos:column="30"/></name></expr></argument>)<pos:position pos:line="174" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="175" pos:column="5">apr_file_close<pos:position pos:line="175" pos:column="19"/></name><argument_list pos:line="175" pos:column="19">(<argument><expr><name pos:line="175" pos:column="20">script_out<pos:position pos:line="175" pos:column="30"/></name></expr></argument>)<pos:position pos:line="175" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="177" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="177" pos:column="20"/></name><argument_list pos:line="177" pos:column="20">(<argument><expr><name pos:line="177" pos:column="21">script_in<pos:position pos:line="177" pos:column="30"/></name> <operator pos:line="177" pos:column="31">!=<pos:position pos:line="177" pos:column="33"/></operator> <name pos:line="177" pos:column="34">NULL<pos:position pos:line="177" pos:column="38"/></name></expr></argument>)<pos:position pos:line="177" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="179" pos:column="5">apr_brigade_cleanup<pos:position pos:line="179" pos:column="24"/></name><argument_list pos:line="179" pos:column="24">(<argument><expr><name pos:line="179" pos:column="25">bb<pos:position pos:line="179" pos:column="27"/></name></expr></argument>)<pos:position pos:line="179" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="29"/></expr_stmt>

<cpp:if pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">if<pos:position pos:line="181" pos:column="4"/></cpp:directive> <expr><name pos:line="181" pos:column="5">APR_FILES_AS_SOCKETS<pos:position pos:line="181" pos:column="25"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="182" pos:column="5">apr_file_pipe_timeout_set<pos:position pos:line="182" pos:column="30"/></name><argument_list pos:line="182" pos:column="30">(<argument><expr><name pos:line="182" pos:column="31">script_in<pos:position pos:line="182" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="182" pos:column="42">0<pos:position pos:line="182" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="183" pos:column="5">apr_file_pipe_timeout_set<pos:position pos:line="183" pos:column="30"/></name><argument_list pos:line="183" pos:column="30">(<argument><expr><name pos:line="183" pos:column="31">script_err<pos:position pos:line="183" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="183" pos:column="43">0<pos:position pos:line="183" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name pos:line="185" pos:column="5">b<pos:position pos:line="185" pos:column="6"/></name> <operator pos:line="185" pos:column="7">=<pos:position pos:line="185" pos:column="8"/></operator> <call><name pos:line="185" pos:column="9">cgi_bucket_create<pos:position pos:line="185" pos:column="26"/></name><argument_list pos:line="185" pos:column="26">(<argument><expr><name pos:line="185" pos:column="27">r<pos:position pos:line="185" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="30">script_in<pos:position pos:line="185" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="41">script_err<pos:position pos:line="185" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="53">c<pos:position pos:line="185" pos:column="54"/></name><operator pos:line="185" pos:column="54">-&gt;<pos:position pos:line="185" pos:column="59"/></operator><name pos:line="185" pos:column="56">bucket_alloc<pos:position pos:line="185" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="185" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="70"/></expr_stmt>
    <if pos:line="186" pos:column="5">if <condition pos:line="186" pos:column="8">(<expr><name pos:line="186" pos:column="9">b<pos:position pos:line="186" pos:column="10"/></name> <operator pos:line="186" pos:column="11">==<pos:position pos:line="186" pos:column="13"/></operator> <name pos:line="186" pos:column="14">NULL<pos:position pos:line="186" pos:column="18"/></name></expr>)<pos:position pos:line="186" pos:column="19"/></condition><then pos:line="186" pos:column="19">
	<block type="pseudo"><return pos:line="187" pos:column="9">return <expr><name pos:line="187" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="187" pos:column="42"/></name></expr>;<pos:position pos:line="187" pos:column="43"/></return></block></then></if>
<cpp:else pos:line="188" pos:column="1">#<cpp:directive pos:line="188" pos:column="2">else<pos:position pos:line="188" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="189" pos:column="5">b<pos:position pos:line="189" pos:column="6"/></name> <operator pos:line="189" pos:column="7">=<pos:position pos:line="189" pos:column="8"/></operator> <call><name pos:line="189" pos:column="9">apr_bucket_pipe_create<pos:position pos:line="189" pos:column="31"/></name><argument_list pos:line="189" pos:column="31">(<argument><expr><name pos:line="189" pos:column="32">script_in<pos:position pos:line="189" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="43">c<pos:position pos:line="189" pos:column="44"/></name><operator pos:line="189" pos:column="44">-&gt;<pos:position pos:line="189" pos:column="49"/></operator><name pos:line="189" pos:column="46">bucket_alloc<pos:position pos:line="189" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">endif<pos:position pos:line="190" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="191" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="191" pos:column="28"/></name><argument_list pos:line="191" pos:column="28">(<argument><expr><name pos:line="191" pos:column="29">bb<pos:position pos:line="191" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="33">b<pos:position pos:line="191" pos:column="34"/></name></expr></argument>)<pos:position pos:line="191" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="192" pos:column="5">b<pos:position pos:line="192" pos:column="6"/></name> <operator pos:line="192" pos:column="7">=<pos:position pos:line="192" pos:column="8"/></operator> <call><name pos:line="192" pos:column="9">apr_bucket_eos_create<pos:position pos:line="192" pos:column="30"/></name><argument_list pos:line="192" pos:column="30">(<argument><expr><name><name pos:line="192" pos:column="31">c<pos:position pos:line="192" pos:column="32"/></name><operator pos:line="192" pos:column="32">-&gt;<pos:position pos:line="192" pos:column="37"/></operator><name pos:line="192" pos:column="34">bucket_alloc<pos:position pos:line="192" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="193" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="193" pos:column="28"/></name><argument_list pos:line="193" pos:column="28">(<argument><expr><name pos:line="193" pos:column="29">bb<pos:position pos:line="193" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="33">b<pos:position pos:line="193" pos:column="34"/></name></expr></argument>)<pos:position pos:line="193" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="195" pos:column="5">/* Handle script return... */</comment>
    <if pos:line="196" pos:column="5">if <condition pos:line="196" pos:column="8">(<expr><operator pos:line="196" pos:column="9">!<pos:position pos:line="196" pos:column="10"/></operator><name pos:line="196" pos:column="10">nph<pos:position pos:line="196" pos:column="13"/></name></expr>)<pos:position pos:line="196" pos:column="14"/></condition><then pos:line="196" pos:column="14"> <block pos:line="196" pos:column="15">{
        <decl_stmt><decl><type><specifier pos:line="197" pos:column="9">const<pos:position pos:line="197" pos:column="14"/></specifier> <name pos:line="197" pos:column="15">char<pos:position pos:line="197" pos:column="19"/></name> <modifier pos:line="197" pos:column="20">*<pos:position pos:line="197" pos:column="21"/></modifier></type><name pos:line="197" pos:column="21">location<pos:position pos:line="197" pos:column="29"/></name></decl>;<pos:position pos:line="197" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="198" pos:column="9">char<pos:position pos:line="198" pos:column="13"/></name></type> <name><name pos:line="198" pos:column="14">sbuf<pos:position pos:line="198" pos:column="18"/></name><index pos:line="198" pos:column="18">[<expr><name pos:line="198" pos:column="19">MAX_STRING_LEN<pos:position pos:line="198" pos:column="33"/></name></expr>]<pos:position pos:line="198" pos:column="34"/></index></name></decl>;<pos:position pos:line="198" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="199" pos:column="9">int<pos:position pos:line="199" pos:column="12"/></name></type> <name pos:line="199" pos:column="13">ret<pos:position pos:line="199" pos:column="16"/></name></decl>;<pos:position pos:line="199" pos:column="17"/></decl_stmt>

        <if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><operator pos:line="201" pos:column="13">(<pos:position pos:line="201" pos:column="14"/></operator><name pos:line="201" pos:column="14">ret<pos:position pos:line="201" pos:column="17"/></name> <operator pos:line="201" pos:column="18">=<pos:position pos:line="201" pos:column="19"/></operator> <call><name pos:line="201" pos:column="20">ap_scan_script_header_err_brigade<pos:position pos:line="201" pos:column="53"/></name><argument_list pos:line="201" pos:column="53">(<argument><expr><name pos:line="201" pos:column="54">r<pos:position pos:line="201" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="57">bb<pos:position pos:line="201" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="61">sbuf<pos:position pos:line="201" pos:column="65"/></name></expr></argument>)<pos:position pos:line="201" pos:column="66"/></argument_list></call><operator pos:line="201" pos:column="66">)<pos:position pos:line="201" pos:column="67"/></operator></expr>)<pos:position pos:line="201" pos:column="68"/></condition><then pos:line="201" pos:column="68"> <block pos:line="201" pos:column="69">{
            <expr_stmt><expr><name pos:line="202" pos:column="13">ret<pos:position pos:line="202" pos:column="16"/></name> <operator pos:line="202" pos:column="17">=<pos:position pos:line="202" pos:column="18"/></operator> <call><name pos:line="202" pos:column="19">log_script<pos:position pos:line="202" pos:column="29"/></name><argument_list pos:line="202" pos:column="29">(<argument><expr><name pos:line="202" pos:column="30">r<pos:position pos:line="202" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="33">conf<pos:position pos:line="202" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="39">ret<pos:position pos:line="202" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="44">dbuf<pos:position pos:line="202" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="50">sbuf<pos:position pos:line="202" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="56">bb<pos:position pos:line="202" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="60">script_err<pos:position pos:line="202" pos:column="70"/></name></expr></argument>)<pos:position pos:line="202" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="72"/></expr_stmt>

            <comment type="block" pos:line="204" pos:column="13">/*
             * ret could be HTTP_NOT_MODIFIED in the case that the CGI script
             * does not set an explicit status and ap_meets_conditions, which
             * is called by ap_scan_script_header_err_brigade, detects that
             * the conditions of the requests are met and the response is
             * not modified.
             * In this case set r-&gt;status and return OK in order to prevent
             * running through the error processing stack as this would
             * break with mod_cache, if the conditions had been set by
             * mod_cache itself to validate a stale entity.
             * BTW: We circumvent the error processing stack anyway if the
             * CGI script set an explicit status code (whatever it is) and
             * the only possible values for ret here are:
             *
             * HTTP_NOT_MODIFIED          (set by ap_meets_conditions)
             * HTTP_PRECONDITION_FAILED   (set by ap_meets_conditions)
             * HTTP_INTERNAL_SERVER_ERROR (if something went wrong during the
             * processing of the response of the CGI script, e.g broken headers
             * or a crashed CGI process).
             */</comment>
            <if pos:line="224" pos:column="13">if <condition pos:line="224" pos:column="16">(<expr><name pos:line="224" pos:column="17">ret<pos:position pos:line="224" pos:column="20"/></name> <operator pos:line="224" pos:column="21">==<pos:position pos:line="224" pos:column="23"/></operator> <name pos:line="224" pos:column="24">HTTP_NOT_MODIFIED<pos:position pos:line="224" pos:column="41"/></name></expr>)<pos:position pos:line="224" pos:column="42"/></condition><then pos:line="224" pos:column="42"> <block pos:line="224" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="225" pos:column="17">r<pos:position pos:line="225" pos:column="18"/></name><operator pos:line="225" pos:column="18">-&gt;<pos:position pos:line="225" pos:column="23"/></operator><name pos:line="225" pos:column="20">status<pos:position pos:line="225" pos:column="26"/></name></name> <operator pos:line="225" pos:column="27">=<pos:position pos:line="225" pos:column="28"/></operator> <name pos:line="225" pos:column="29">ret<pos:position pos:line="225" pos:column="32"/></name></expr>;<pos:position pos:line="225" pos:column="33"/></expr_stmt>
                <return pos:line="226" pos:column="17">return <expr><name pos:line="226" pos:column="24">OK<pos:position pos:line="226" pos:column="26"/></name></expr>;<pos:position pos:line="226" pos:column="27"/></return>
            }<pos:position pos:line="227" pos:column="14"/></block></then></if>

            <return pos:line="229" pos:column="13">return <expr><name pos:line="229" pos:column="20">ret<pos:position pos:line="229" pos:column="23"/></name></expr>;<pos:position pos:line="229" pos:column="24"/></return>
        }<pos:position pos:line="230" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="232" pos:column="9">location<pos:position pos:line="232" pos:column="17"/></name> <operator pos:line="232" pos:column="18">=<pos:position pos:line="232" pos:column="19"/></operator> <call><name pos:line="232" pos:column="20">apr_table_get<pos:position pos:line="232" pos:column="33"/></name><argument_list pos:line="232" pos:column="33">(<argument><expr><name><name pos:line="232" pos:column="34">r<pos:position pos:line="232" pos:column="35"/></name><operator pos:line="232" pos:column="35">-&gt;<pos:position pos:line="232" pos:column="40"/></operator><name pos:line="232" pos:column="37">headers_out<pos:position pos:line="232" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="50">"Location"<pos:position pos:line="232" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="62"/></expr_stmt>

        <if pos:line="234" pos:column="9">if <condition pos:line="234" pos:column="12">(<expr><name pos:line="234" pos:column="13">location<pos:position pos:line="234" pos:column="21"/></name> <operator pos:line="234" pos:column="22">&amp;&amp;<pos:position pos:line="234" pos:column="32"/></operator> <name><name pos:line="234" pos:column="25">r<pos:position pos:line="234" pos:column="26"/></name><operator pos:line="234" pos:column="26">-&gt;<pos:position pos:line="234" pos:column="31"/></operator><name pos:line="234" pos:column="28">status<pos:position pos:line="234" pos:column="34"/></name></name> <operator pos:line="234" pos:column="35">==<pos:position pos:line="234" pos:column="37"/></operator> <literal type="number" pos:line="234" pos:column="38">200<pos:position pos:line="234" pos:column="41"/></literal></expr>)<pos:position pos:line="234" pos:column="42"/></condition><then pos:line="234" pos:column="42"> <block pos:line="234" pos:column="43">{
            <comment type="block" pos:line="235" pos:column="13">/* For a redirect whether internal or not, discard any
             * remaining stdout from the script, and log any remaining
             * stderr output, as normal. */</comment>
            <expr_stmt><expr><call><name pos:line="238" pos:column="13">discard_script_output<pos:position pos:line="238" pos:column="34"/></name><argument_list pos:line="238" pos:column="34">(<argument><expr><name pos:line="238" pos:column="35">bb<pos:position pos:line="238" pos:column="37"/></name></expr></argument>)<pos:position pos:line="238" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="239" pos:column="13">apr_brigade_destroy<pos:position pos:line="239" pos:column="32"/></name><argument_list pos:line="239" pos:column="32">(<argument><expr><name pos:line="239" pos:column="33">bb<pos:position pos:line="239" pos:column="35"/></name></expr></argument>)<pos:position pos:line="239" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="240" pos:column="13">apr_file_pipe_timeout_set<pos:position pos:line="240" pos:column="38"/></name><argument_list pos:line="240" pos:column="38">(<argument><expr><name pos:line="240" pos:column="39">script_err<pos:position pos:line="240" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="240" pos:column="51">r<pos:position pos:line="240" pos:column="52"/></name><operator pos:line="240" pos:column="52">-&gt;<pos:position pos:line="240" pos:column="57"/></operator><name pos:line="240" pos:column="54">server<pos:position pos:line="240" pos:column="60"/></name><operator pos:line="240" pos:column="60">-&gt;<pos:position pos:line="240" pos:column="65"/></operator><name pos:line="240" pos:column="62">timeout<pos:position pos:line="240" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="240" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="241" pos:column="13">log_script_err<pos:position pos:line="241" pos:column="27"/></name><argument_list pos:line="241" pos:column="27">(<argument><expr><name pos:line="241" pos:column="28">r<pos:position pos:line="241" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="31">script_err<pos:position pos:line="241" pos:column="41"/></name></expr></argument>)<pos:position pos:line="241" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="242" pos:column="10"/></block></then></if>

        <if pos:line="244" pos:column="9">if <condition pos:line="244" pos:column="12">(<expr><name pos:line="244" pos:column="13">location<pos:position pos:line="244" pos:column="21"/></name> <operator pos:line="244" pos:column="22">&amp;&amp;<pos:position pos:line="244" pos:column="32"/></operator> <name><name pos:line="244" pos:column="25">location<pos:position pos:line="244" pos:column="33"/></name><index pos:line="244" pos:column="33">[<expr><literal type="number" pos:line="244" pos:column="34">0<pos:position pos:line="244" pos:column="35"/></literal></expr>]<pos:position pos:line="244" pos:column="36"/></index></name> <operator pos:line="244" pos:column="37">==<pos:position pos:line="244" pos:column="39"/></operator> <literal type="char" pos:line="244" pos:column="40">'/'<pos:position pos:line="244" pos:column="43"/></literal> <operator pos:line="244" pos:column="44">&amp;&amp;<pos:position pos:line="244" pos:column="54"/></operator> <name><name pos:line="244" pos:column="47">r<pos:position pos:line="244" pos:column="48"/></name><operator pos:line="244" pos:column="48">-&gt;<pos:position pos:line="244" pos:column="53"/></operator><name pos:line="244" pos:column="50">status<pos:position pos:line="244" pos:column="56"/></name></name> <operator pos:line="244" pos:column="57">==<pos:position pos:line="244" pos:column="59"/></operator> <literal type="number" pos:line="244" pos:column="60">200<pos:position pos:line="244" pos:column="63"/></literal></expr>)<pos:position pos:line="244" pos:column="64"/></condition><then pos:line="244" pos:column="64"> <block pos:line="244" pos:column="65">{
            <comment type="block" pos:line="245" pos:column="13">/* This redirect needs to be a GET no matter what the original
             * method was.
             */</comment>
            <expr_stmt><expr><name><name pos:line="248" pos:column="13">r<pos:position pos:line="248" pos:column="14"/></name><operator pos:line="248" pos:column="14">-&gt;<pos:position pos:line="248" pos:column="19"/></operator><name pos:line="248" pos:column="16">method<pos:position pos:line="248" pos:column="22"/></name></name> <operator pos:line="248" pos:column="23">=<pos:position pos:line="248" pos:column="24"/></operator> <call><name pos:line="248" pos:column="25">apr_pstrdup<pos:position pos:line="248" pos:column="36"/></name><argument_list pos:line="248" pos:column="36">(<argument><expr><name><name pos:line="248" pos:column="37">r<pos:position pos:line="248" pos:column="38"/></name><operator pos:line="248" pos:column="38">-&gt;<pos:position pos:line="248" pos:column="43"/></operator><name pos:line="248" pos:column="40">pool<pos:position pos:line="248" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="248" pos:column="46">"GET"<pos:position pos:line="248" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="248" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="249" pos:column="13">r<pos:position pos:line="249" pos:column="14"/></name><operator pos:line="249" pos:column="14">-&gt;<pos:position pos:line="249" pos:column="19"/></operator><name pos:line="249" pos:column="16">method_number<pos:position pos:line="249" pos:column="29"/></name></name> <operator pos:line="249" pos:column="30">=<pos:position pos:line="249" pos:column="31"/></operator> <name pos:line="249" pos:column="32">M_GET<pos:position pos:line="249" pos:column="37"/></name></expr>;<pos:position pos:line="249" pos:column="38"/></expr_stmt>

            <comment type="block" pos:line="251" pos:column="13">/* We already read the message body (if any), so don't allow
             * the redirected request to think it has one.  We can ignore
             * Transfer-Encoding, since we used REQUEST_CHUNKED_ERROR.
             */</comment>
            <expr_stmt><expr><call><name pos:line="255" pos:column="13">apr_table_unset<pos:position pos:line="255" pos:column="28"/></name><argument_list pos:line="255" pos:column="28">(<argument><expr><name><name pos:line="255" pos:column="29">r<pos:position pos:line="255" pos:column="30"/></name><operator pos:line="255" pos:column="30">-&gt;<pos:position pos:line="255" pos:column="35"/></operator><name pos:line="255" pos:column="32">headers_in<pos:position pos:line="255" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="44">"Content-Length"<pos:position pos:line="255" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="62"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="257" pos:column="13">ap_internal_redirect_handler<pos:position pos:line="257" pos:column="41"/></name><argument_list pos:line="257" pos:column="41">(<argument><expr><name pos:line="257" pos:column="42">location<pos:position pos:line="257" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="52">r<pos:position pos:line="257" pos:column="53"/></name></expr></argument>)<pos:position pos:line="257" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="55"/></expr_stmt>
            <return pos:line="258" pos:column="13">return <expr><name pos:line="258" pos:column="20">OK<pos:position pos:line="258" pos:column="22"/></name></expr>;<pos:position pos:line="258" pos:column="23"/></return>
        }<pos:position pos:line="259" pos:column="10"/></block></then>
        <elseif pos:line="260" pos:column="9">else <if pos:line="260" pos:column="14">if <condition pos:line="260" pos:column="17">(<expr><name pos:line="260" pos:column="18">location<pos:position pos:line="260" pos:column="26"/></name> <operator pos:line="260" pos:column="27">&amp;&amp;<pos:position pos:line="260" pos:column="37"/></operator> <name><name pos:line="260" pos:column="30">r<pos:position pos:line="260" pos:column="31"/></name><operator pos:line="260" pos:column="31">-&gt;<pos:position pos:line="260" pos:column="36"/></operator><name pos:line="260" pos:column="33">status<pos:position pos:line="260" pos:column="39"/></name></name> <operator pos:line="260" pos:column="40">==<pos:position pos:line="260" pos:column="42"/></operator> <literal type="number" pos:line="260" pos:column="43">200<pos:position pos:line="260" pos:column="46"/></literal></expr>)<pos:position pos:line="260" pos:column="47"/></condition><then pos:line="260" pos:column="47"> <block pos:line="260" pos:column="48">{
            <comment type="block" pos:line="261" pos:column="13">/* XX Note that if a script wants to produce its own Redirect
             * body, it now has to explicitly *say* "Status: 302"
             */</comment>
            <return pos:line="264" pos:column="13">return <expr><name pos:line="264" pos:column="20">HTTP_MOVED_TEMPORARILY<pos:position pos:line="264" pos:column="42"/></name></expr>;<pos:position pos:line="264" pos:column="43"/></return>
        }<pos:position pos:line="265" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><name pos:line="267" pos:column="9">rv<pos:position pos:line="267" pos:column="11"/></name> <operator pos:line="267" pos:column="12">=<pos:position pos:line="267" pos:column="13"/></operator> <call><name pos:line="267" pos:column="14">ap_pass_brigade<pos:position pos:line="267" pos:column="29"/></name><argument_list pos:line="267" pos:column="29">(<argument><expr><name><name pos:line="267" pos:column="30">r<pos:position pos:line="267" pos:column="31"/></name><operator pos:line="267" pos:column="31">-&gt;<pos:position pos:line="267" pos:column="36"/></operator><name pos:line="267" pos:column="33">output_filters<pos:position pos:line="267" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="49">bb<pos:position pos:line="267" pos:column="51"/></name></expr></argument>)<pos:position pos:line="267" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="268" pos:column="6"/></block></then>
    <else pos:line="269" pos:column="5">else <comment type="block" pos:line="269" pos:column="10">/* nph */</comment> <block pos:line="269" pos:column="20">{
        <decl_stmt><decl><type><name><name pos:line="270" pos:column="9">struct<pos:position pos:line="270" pos:column="15"/></name> <name pos:line="270" pos:column="16">ap_filter_t<pos:position pos:line="270" pos:column="27"/></name></name> <modifier pos:line="270" pos:column="28">*<pos:position pos:line="270" pos:column="29"/></modifier></type><name pos:line="270" pos:column="29">cur<pos:position pos:line="270" pos:column="32"/></name></decl>;<pos:position pos:line="270" pos:column="33"/></decl_stmt>

        <comment type="block" pos:line="272" pos:column="9">/* get rid of all filters up through protocol...  since we
         * haven't parsed off the headers, there is no way they can
         * work
         */</comment>

        <expr_stmt><expr><name pos:line="277" pos:column="9">cur<pos:position pos:line="277" pos:column="12"/></name> <operator pos:line="277" pos:column="13">=<pos:position pos:line="277" pos:column="14"/></operator> <name><name pos:line="277" pos:column="15">r<pos:position pos:line="277" pos:column="16"/></name><operator pos:line="277" pos:column="16">-&gt;<pos:position pos:line="277" pos:column="21"/></operator><name pos:line="277" pos:column="18">proto_output_filters<pos:position pos:line="277" pos:column="38"/></name></name></expr>;<pos:position pos:line="277" pos:column="39"/></expr_stmt>
        <while pos:line="278" pos:column="9">while <condition pos:line="278" pos:column="15">(<expr><name pos:line="278" pos:column="16">cur<pos:position pos:line="278" pos:column="19"/></name> <operator pos:line="278" pos:column="20">&amp;&amp;<pos:position pos:line="278" pos:column="30"/></operator> <name><name pos:line="278" pos:column="23">cur<pos:position pos:line="278" pos:column="26"/></name><operator pos:line="278" pos:column="26">-&gt;<pos:position pos:line="278" pos:column="31"/></operator><name pos:line="278" pos:column="28">frec<pos:position pos:line="278" pos:column="32"/></name><operator pos:line="278" pos:column="32">-&gt;<pos:position pos:line="278" pos:column="37"/></operator><name pos:line="278" pos:column="34">ftype<pos:position pos:line="278" pos:column="39"/></name></name> <operator pos:line="278" pos:column="40">&lt;<pos:position pos:line="278" pos:column="44"/></operator> <name pos:line="278" pos:column="42">AP_FTYPE_CONNECTION<pos:position pos:line="278" pos:column="61"/></name></expr>)<pos:position pos:line="278" pos:column="62"/></condition> <block pos:line="278" pos:column="63">{
            <expr_stmt><expr><name pos:line="279" pos:column="13">cur<pos:position pos:line="279" pos:column="16"/></name> <operator pos:line="279" pos:column="17">=<pos:position pos:line="279" pos:column="18"/></operator> <name><name pos:line="279" pos:column="19">cur<pos:position pos:line="279" pos:column="22"/></name><operator pos:line="279" pos:column="22">-&gt;<pos:position pos:line="279" pos:column="27"/></operator><name pos:line="279" pos:column="24">next<pos:position pos:line="279" pos:column="28"/></name></name></expr>;<pos:position pos:line="279" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="280" pos:column="10"/></block></while>
        <expr_stmt><expr><name><name pos:line="281" pos:column="9">r<pos:position pos:line="281" pos:column="10"/></name><operator pos:line="281" pos:column="10">-&gt;<pos:position pos:line="281" pos:column="15"/></operator><name pos:line="281" pos:column="12">output_filters<pos:position pos:line="281" pos:column="26"/></name></name> <operator pos:line="281" pos:column="27">=<pos:position pos:line="281" pos:column="28"/></operator> <name><name pos:line="281" pos:column="29">r<pos:position pos:line="281" pos:column="30"/></name><operator pos:line="281" pos:column="30">-&gt;<pos:position pos:line="281" pos:column="35"/></operator><name pos:line="281" pos:column="32">proto_output_filters<pos:position pos:line="281" pos:column="52"/></name></name> <operator pos:line="281" pos:column="53">=<pos:position pos:line="281" pos:column="54"/></operator> <name pos:line="281" pos:column="55">cur<pos:position pos:line="281" pos:column="58"/></name></expr>;<pos:position pos:line="281" pos:column="59"/></expr_stmt>

        <expr_stmt><expr><name pos:line="283" pos:column="9">rv<pos:position pos:line="283" pos:column="11"/></name> <operator pos:line="283" pos:column="12">=<pos:position pos:line="283" pos:column="13"/></operator> <call><name pos:line="283" pos:column="14">ap_pass_brigade<pos:position pos:line="283" pos:column="29"/></name><argument_list pos:line="283" pos:column="29">(<argument><expr><name><name pos:line="283" pos:column="30">r<pos:position pos:line="283" pos:column="31"/></name><operator pos:line="283" pos:column="31">-&gt;<pos:position pos:line="283" pos:column="36"/></operator><name pos:line="283" pos:column="33">output_filters<pos:position pos:line="283" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="49">bb<pos:position pos:line="283" pos:column="51"/></name></expr></argument>)<pos:position pos:line="283" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="284" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="286" pos:column="5">/* don't soak up script output if errors occurred writing it
     * out...  otherwise, we prolong the life of the script when the
     * connection drops or we stopped sending output for some other
     * reason */</comment>
    <if pos:line="290" pos:column="5">if <condition pos:line="290" pos:column="8">(<expr><name pos:line="290" pos:column="9">rv<pos:position pos:line="290" pos:column="11"/></name> <operator pos:line="290" pos:column="12">==<pos:position pos:line="290" pos:column="14"/></operator> <name pos:line="290" pos:column="15">APR_SUCCESS<pos:position pos:line="290" pos:column="26"/></name> <operator pos:line="290" pos:column="27">&amp;&amp;<pos:position pos:line="290" pos:column="37"/></operator> <operator pos:line="290" pos:column="30">!<pos:position pos:line="290" pos:column="31"/></operator><name><name pos:line="290" pos:column="31">r<pos:position pos:line="290" pos:column="32"/></name><operator pos:line="290" pos:column="32">-&gt;<pos:position pos:line="290" pos:column="37"/></operator><name pos:line="290" pos:column="34">connection<pos:position pos:line="290" pos:column="44"/></name><operator pos:line="290" pos:column="44">-&gt;<pos:position pos:line="290" pos:column="49"/></operator><name pos:line="290" pos:column="46">aborted<pos:position pos:line="290" pos:column="53"/></name></name></expr>)<pos:position pos:line="290" pos:column="54"/></condition><then pos:line="290" pos:column="54"> <block pos:line="290" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="291" pos:column="9">apr_file_pipe_timeout_set<pos:position pos:line="291" pos:column="34"/></name><argument_list pos:line="291" pos:column="34">(<argument><expr><name pos:line="291" pos:column="35">script_err<pos:position pos:line="291" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="291" pos:column="47">r<pos:position pos:line="291" pos:column="48"/></name><operator pos:line="291" pos:column="48">-&gt;<pos:position pos:line="291" pos:column="53"/></operator><name pos:line="291" pos:column="50">server<pos:position pos:line="291" pos:column="56"/></name><operator pos:line="291" pos:column="56">-&gt;<pos:position pos:line="291" pos:column="61"/></operator><name pos:line="291" pos:column="58">timeout<pos:position pos:line="291" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="291" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="292" pos:column="9">log_script_err<pos:position pos:line="292" pos:column="23"/></name><argument_list pos:line="292" pos:column="23">(<argument><expr><name pos:line="292" pos:column="24">r<pos:position pos:line="292" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="27">script_err<pos:position pos:line="292" pos:column="37"/></name></expr></argument>)<pos:position pos:line="292" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="293" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="295" pos:column="5">apr_file_close<pos:position pos:line="295" pos:column="19"/></name><argument_list pos:line="295" pos:column="19">(<argument><expr><name pos:line="295" pos:column="20">script_err<pos:position pos:line="295" pos:column="30"/></name></expr></argument>)<pos:position pos:line="295" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="32"/></expr_stmt>

    <return pos:line="297" pos:column="5">return <expr><name pos:line="297" pos:column="12">OK<pos:position pos:line="297" pos:column="14"/></name></expr>;<pos:position pos:line="297" pos:column="15"/></return>                      <comment type="block" pos:line="297" pos:column="37">/* NOT r-&gt;status, even if it has changed. */</comment>
}<pos:position pos:line="298" pos:column="2"/></block></function></unit>

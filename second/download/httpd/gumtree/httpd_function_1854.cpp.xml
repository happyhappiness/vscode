<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1854.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ap_http_filter<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">ap_filter_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">f<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_bucket_brigade<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">b<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">ap_input_mode_t<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">mode<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">apr_read_type_e<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">block<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="3" pos:column="29">apr_off_t<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">readbytes<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">core_server_config<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">conf<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">=
        <expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">core_server_config<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></operator><operator pos:line="6" pos:column="30">)<pos:position pos:line="6" pos:column="31"/></operator><call><name pos:line="6" pos:column="31">ap_get_module_config<pos:position pos:line="6" pos:column="51"/></name><argument_list pos:line="6" pos:column="51">(<argument><expr><name><name pos:line="6" pos:column="52">f<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">r<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">-&gt;<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="58">server<pos:position pos:line="6" pos:column="64"/></name><operator pos:line="6" pos:column="64">-&gt;<pos:position pos:line="6" pos:column="69"/></operator><name pos:line="6" pos:column="66">module_config<pos:position pos:line="6" pos:column="79"/></name></name></expr></argument>,
                                                   <argument><expr><operator pos:line="7" pos:column="52">&amp;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="53">core_module<pos:position pos:line="7" pos:column="64"/></name></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">strict<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><name><name pos:line="8" pos:column="19">conf<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">http_conformance<pos:position pos:line="8" pos:column="41"/></name></name> <operator pos:line="8" pos:column="42">!=<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="45">AP_HTTP_CONFORMANCE_UNSAFE<pos:position pos:line="8" pos:column="71"/></name><operator pos:line="8" pos:column="71">)<pos:position pos:line="8" pos:column="72"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="73"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_bucket<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">e<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">http_ctx_t<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">ctx<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><name><name pos:line="10" pos:column="23">f<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">ctx<pos:position pos:line="10" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_status_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">rv<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">http_error<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><name pos:line="12" pos:column="22">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="12" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_bucket_brigade<pos:position pos:line="13" pos:column="23"/></name> <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier></type><name pos:line="13" pos:column="25">bb<pos:position pos:line="13" pos:column="27"/></name></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">again<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* just get out of the way of things we don't want. */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">mode<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">!=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">AP_MODE_READBYTES<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">&amp;&amp;<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="38">mode<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">!=<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="46">AP_MODE_GETLINE<pos:position pos:line="17" pos:column="61"/></name></expr>)<pos:position pos:line="17" pos:column="62"/></condition><then pos:line="17" pos:column="62"> <block pos:line="17" pos:column="63">{
        <return pos:line="18" pos:column="9">return <expr><call><name pos:line="18" pos:column="16">ap_get_brigade<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name><name pos:line="18" pos:column="31">f<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">next<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">b<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">mode<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">block<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">readbytes<pos:position pos:line="18" pos:column="65"/></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="67"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">ctx<pos:position pos:line="21" pos:column="13"/></name></expr>)<pos:position pos:line="21" pos:column="14"/></condition><then pos:line="21" pos:column="14"> <block pos:line="21" pos:column="15">{
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">const<pos:position pos:line="22" pos:column="14"/></specifier> <name pos:line="22" pos:column="15">char<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">tenc<pos:position pos:line="22" pos:column="25"/></name></decl>, <modifier pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="22" pos:column="28">lenp<pos:position pos:line="22" pos:column="32"/></name></decl>;<pos:position pos:line="22" pos:column="33"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">f<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">ctx<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">ctx<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <call><name pos:line="23" pos:column="24">apr_pcalloc<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name><name pos:line="23" pos:column="36">f<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">r<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">-&gt;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="42">pool<pos:position pos:line="23" pos:column="46"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="48">sizeof<argument_list pos:line="23" pos:column="54">(<argument><expr><operator pos:line="23" pos:column="55">*<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="56">ctx<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">ctx<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">state<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">BODY_NONE<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">ctx<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">bb<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="19">apr_brigade_create<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name><name pos:line="25" pos:column="38">f<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">r<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">pool<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="50">f<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">c<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">bucket_alloc<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">bb<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name><name pos:line="26" pos:column="14">ctx<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">bb<pos:position pos:line="26" pos:column="21"/></name></name></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>

        <comment type="block" pos:line="28" pos:column="9">/* LimitRequestBody does not apply to proxied responses.
         * Consider implementing this check in its own filter.
         * Would adding a directive to limit the size of proxied
         * responses be useful?
         */</comment>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><name><name pos:line="33" pos:column="14">f<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">r<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">proxyreq<pos:position pos:line="33" pos:column="28"/></name></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29"> <block pos:line="33" pos:column="30">{
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">ctx<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">limit<pos:position pos:line="34" pos:column="23"/></name></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <call><name pos:line="34" pos:column="26">ap_get_limit_req_body<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">(<argument><expr><name><name pos:line="34" pos:column="48">f<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">-&gt;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="51">r<pos:position pos:line="34" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then>
        <else pos:line="36" pos:column="9">else <block pos:line="36" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">ctx<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">limit<pos:position pos:line="37" pos:column="23"/></name></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="40" pos:column="9">tenc<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">apr_table_get<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name><name pos:line="40" pos:column="30">f<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">r<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">headers_in<pos:position pos:line="40" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="48">"Transfer-Encoding"<pos:position pos:line="40" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">lenp<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">apr_table_get<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name><name pos:line="41" pos:column="30">f<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">r<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">headers_in<pos:position pos:line="41" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="48">"Content-Length"<pos:position pos:line="41" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="66"/></expr_stmt>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">tenc<pos:position pos:line="43" pos:column="17"/></name></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><call><name pos:line="44" pos:column="17">strcasecmp<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">tenc<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="34">"chunked"<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call> <operator pos:line="44" pos:column="45">==<pos:position pos:line="44" pos:column="47"/></operator> <literal type="number" pos:line="44" pos:column="48">0<pos:position pos:line="44" pos:column="49"/></literal> <comment type="block" pos:line="44" pos:column="50">/* fast path */</comment>
                    <operator pos:line="45" pos:column="21">||<pos:position pos:line="45" pos:column="23"/></operator> <call><name pos:line="45" pos:column="24">ap_find_last_token<pos:position pos:line="45" pos:column="42"/></name><argument_list pos:line="45" pos:column="42">(<argument><expr><name><name pos:line="45" pos:column="43">f<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">-&gt;<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="46">r<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">-&gt;<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="49">pool<pos:position pos:line="45" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="55">tenc<pos:position pos:line="45" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="61">"chunked"<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="72"/></condition><then pos:line="45" pos:column="72"> <block pos:line="45" pos:column="73">{
                <expr_stmt><expr><name><name pos:line="46" pos:column="17">ctx<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">state<pos:position pos:line="46" pos:column="27"/></name></name> <operator pos:line="46" pos:column="28">=<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">BODY_CHUNK<pos:position pos:line="46" pos:column="40"/></name></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></then>
            <elseif pos:line="48" pos:column="13">else <if pos:line="48" pos:column="18">if <condition pos:line="48" pos:column="21">(<expr><name><name pos:line="48" pos:column="22">f<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">r<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">-&gt;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="28">proxyreq<pos:position pos:line="48" pos:column="36"/></name></name> <operator pos:line="48" pos:column="37">==<pos:position pos:line="48" pos:column="39"/></operator> <name pos:line="48" pos:column="40">PROXYREQ_RESPONSE<pos:position pos:line="48" pos:column="57"/></name></expr>)<pos:position pos:line="48" pos:column="58"/></condition><then pos:line="48" pos:column="58"> <block pos:line="48" pos:column="59">{
                <comment type="block" pos:line="49" pos:column="17">/* http://tools.ietf.org/html/draft-ietf-httpbis-p1-messaging-23
                 * Section 3.3.3.3: "If a Transfer-Encoding header field is
                 * present in a response and the chunked transfer coding is not
                 * the final encoding, the message body length is determined by
                 * reading the connection until it is closed by the server."
                 */</comment>
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">ap_log_rerror<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">APLOG_MARK<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">APLOG_INFO<pos:position pos:line="55" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="55">0<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="58">f<pos:position pos:line="55" pos:column="59"/></name><operator pos:line="55" pos:column="59">-&gt;<pos:position pos:line="55" pos:column="64"/></operator><name pos:line="55" pos:column="61">r<pos:position pos:line="55" pos:column="62"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="56" pos:column="31">"Unknown Transfer-Encoding: %s; "<pos:position pos:line="56" pos:column="64"/></literal>
                              <literal type="string" pos:line="57" pos:column="31">"using read-until-close"<pos:position pos:line="57" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="57">tenc<pos:position pos:line="57" pos:column="61"/></name></expr></argument>)<pos:position pos:line="57" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">tenc<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">NULL<pos:position pos:line="58" pos:column="28"/></name></expr>;<pos:position pos:line="58" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if></elseif>
            <else pos:line="60" pos:column="13">else <block pos:line="60" pos:column="18">{
                <comment type="block" pos:line="61" pos:column="17">/* Something that isn't a HTTP request, unless some future
                 * edition defines new transfer encodings, is unsupported.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">ap_log_rerror<pos:position pos:line="64" pos:column="30"/></name><argument_list pos:line="64" pos:column="30">(<argument><expr><name pos:line="64" pos:column="31">APLOG_MARK<pos:position pos:line="64" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="43">APLOG_INFO<pos:position pos:line="64" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="55">0<pos:position pos:line="64" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="58">f<pos:position pos:line="64" pos:column="59"/></name><operator pos:line="64" pos:column="59">-&gt;<pos:position pos:line="64" pos:column="64"/></operator><name pos:line="64" pos:column="61">r<pos:position pos:line="64" pos:column="62"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="65" pos:column="31">"Unknown Transfer-Encoding: %s"<pos:position pos:line="65" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">tenc<pos:position pos:line="65" pos:column="68"/></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></expr_stmt>
                <return pos:line="66" pos:column="17">return <expr><call><name pos:line="66" pos:column="24">bail_out_on_error<pos:position pos:line="66" pos:column="41"/></name><argument_list pos:line="66" pos:column="41">(<argument><expr><name pos:line="66" pos:column="42">ctx<pos:position pos:line="66" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="47">f<pos:position pos:line="66" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="50">HTTP_BAD_REQUEST<pos:position pos:line="66" pos:column="66"/></name></expr></argument>)<pos:position pos:line="66" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="68"/></return>
            }<pos:position pos:line="67" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="68" pos:column="13">lenp<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">=<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="20">NULL<pos:position pos:line="68" pos:column="24"/></name></expr>;<pos:position pos:line="68" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">lenp<pos:position pos:line="70" pos:column="17"/></name></expr>)<pos:position pos:line="70" pos:column="18"/></condition><then pos:line="70" pos:column="18"> <block pos:line="70" pos:column="19">{
            <decl_stmt><decl><type><name pos:line="71" pos:column="13">char<pos:position pos:line="71" pos:column="17"/></name> <modifier pos:line="71" pos:column="18">*<pos:position pos:line="71" pos:column="19"/></modifier></type><name pos:line="71" pos:column="19">endstr<pos:position pos:line="71" pos:column="25"/></name></decl>;<pos:position pos:line="71" pos:column="26"/></decl_stmt>

            <expr_stmt><expr><name><name pos:line="73" pos:column="13">ctx<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">-&gt;<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="18">state<pos:position pos:line="73" pos:column="23"/></name></name> <operator pos:line="73" pos:column="24">=<pos:position pos:line="73" pos:column="25"/></operator> <name pos:line="73" pos:column="26">BODY_LENGTH<pos:position pos:line="73" pos:column="37"/></name></expr>;<pos:position pos:line="73" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="74" pos:column="13">errno<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">=<pos:position pos:line="74" pos:column="20"/></operator> <literal type="number" pos:line="74" pos:column="21">0<pos:position pos:line="74" pos:column="22"/></literal></expr>;<pos:position pos:line="74" pos:column="23"/></expr_stmt>

            <comment type="block" pos:line="76" pos:column="13">/* Protects against over/underflow, non-digit chars in the
             * string (excluding leading space) (the endstr checks)
             * and a negative number. */</comment>
            <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><call><name pos:line="79" pos:column="17">apr_strtoff<pos:position pos:line="79" pos:column="28"/></name><argument_list pos:line="79" pos:column="28">(<argument><expr><operator pos:line="79" pos:column="29">&amp;<pos:position pos:line="79" pos:column="34"/></operator><name><name pos:line="79" pos:column="30">ctx<pos:position pos:line="79" pos:column="33"/></name><operator pos:line="79" pos:column="33">-&gt;<pos:position pos:line="79" pos:column="38"/></operator><name pos:line="79" pos:column="35">remaining<pos:position pos:line="79" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="46">lenp<pos:position pos:line="79" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="52">&amp;<pos:position pos:line="79" pos:column="57"/></operator><name pos:line="79" pos:column="53">endstr<pos:position pos:line="79" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="61">10<pos:position pos:line="79" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="64"/></argument_list></call>
                <operator pos:line="80" pos:column="17">||<pos:position pos:line="80" pos:column="19"/></operator> <name pos:line="80" pos:column="20">endstr<pos:position pos:line="80" pos:column="26"/></name> <operator pos:line="80" pos:column="27">==<pos:position pos:line="80" pos:column="29"/></operator> <name pos:line="80" pos:column="30">lenp<pos:position pos:line="80" pos:column="34"/></name> <operator pos:line="80" pos:column="35">||<pos:position pos:line="80" pos:column="37"/></operator> <operator pos:line="80" pos:column="38">*<pos:position pos:line="80" pos:column="39"/></operator><name pos:line="80" pos:column="39">endstr<pos:position pos:line="80" pos:column="45"/></name> <operator pos:line="80" pos:column="46">||<pos:position pos:line="80" pos:column="48"/></operator> <name><name pos:line="80" pos:column="49">ctx<pos:position pos:line="80" pos:column="52"/></name><operator pos:line="80" pos:column="52">-&gt;<pos:position pos:line="80" pos:column="57"/></operator><name pos:line="80" pos:column="54">remaining<pos:position pos:line="80" pos:column="63"/></name></name> <operator pos:line="80" pos:column="64">&lt;<pos:position pos:line="80" pos:column="68"/></operator> <literal type="number" pos:line="80" pos:column="66">0<pos:position pos:line="80" pos:column="67"/></literal></expr>)<pos:position pos:line="80" pos:column="68"/></condition><then pos:line="80" pos:column="68"> <block pos:line="80" pos:column="69">{

                <expr_stmt><expr><name><name pos:line="82" pos:column="17">ctx<pos:position pos:line="82" pos:column="20"/></name><operator pos:line="82" pos:column="20">-&gt;<pos:position pos:line="82" pos:column="25"/></operator><name pos:line="82" pos:column="22">remaining<pos:position pos:line="82" pos:column="31"/></name></name> <operator pos:line="82" pos:column="32">=<pos:position pos:line="82" pos:column="33"/></operator> <literal type="number" pos:line="82" pos:column="34">0<pos:position pos:line="82" pos:column="35"/></literal></expr>;<pos:position pos:line="82" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="83" pos:column="17">ap_log_rerror<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">APLOG_MARK<pos:position pos:line="83" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="43">APLOG_ERR<pos:position pos:line="83" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="54">0<pos:position pos:line="83" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="57">f<pos:position pos:line="83" pos:column="58"/></name><operator pos:line="83" pos:column="58">-&gt;<pos:position pos:line="83" pos:column="63"/></operator><name pos:line="83" pos:column="60">r<pos:position pos:line="83" pos:column="61"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="84" pos:column="31">"Invalid Content-Length"<pos:position pos:line="84" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="57"/></expr_stmt>

                <return pos:line="86" pos:column="17">return <expr><call><name pos:line="86" pos:column="24">bail_out_on_error<pos:position pos:line="86" pos:column="41"/></name><argument_list pos:line="86" pos:column="41">(<argument><expr><name pos:line="86" pos:column="42">ctx<pos:position pos:line="86" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="47">f<pos:position pos:line="86" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="50">HTTP_BAD_REQUEST<pos:position pos:line="86" pos:column="66"/></name></expr></argument>)<pos:position pos:line="86" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="68"/></return>
            }<pos:position pos:line="87" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="89" pos:column="13">/* If we have a limit in effect and we know the C-L ahead of
             * time, stop it here if it is invalid.
             */</comment>
            <if pos:line="92" pos:column="13">if <condition pos:line="92" pos:column="16">(<expr><name><name pos:line="92" pos:column="17">ctx<pos:position pos:line="92" pos:column="20"/></name><operator pos:line="92" pos:column="20">-&gt;<pos:position pos:line="92" pos:column="25"/></operator><name pos:line="92" pos:column="22">limit<pos:position pos:line="92" pos:column="27"/></name></name> <operator pos:line="92" pos:column="28">&amp;&amp;<pos:position pos:line="92" pos:column="38"/></operator> <name><name pos:line="92" pos:column="31">ctx<pos:position pos:line="92" pos:column="34"/></name><operator pos:line="92" pos:column="34">-&gt;<pos:position pos:line="92" pos:column="39"/></operator><name pos:line="92" pos:column="36">limit<pos:position pos:line="92" pos:column="41"/></name></name> <operator pos:line="92" pos:column="42">&lt;<pos:position pos:line="92" pos:column="46"/></operator> <name><name pos:line="92" pos:column="44">ctx<pos:position pos:line="92" pos:column="47"/></name><operator pos:line="92" pos:column="47">-&gt;<pos:position pos:line="92" pos:column="52"/></operator><name pos:line="92" pos:column="49">remaining<pos:position pos:line="92" pos:column="58"/></name></name></expr>)<pos:position pos:line="92" pos:column="59"/></condition><then pos:line="92" pos:column="59"> <block pos:line="92" pos:column="60">{
                <expr_stmt><expr><call><name pos:line="93" pos:column="17">ap_log_rerror<pos:position pos:line="93" pos:column="30"/></name><argument_list pos:line="93" pos:column="30">(<argument><expr><name pos:line="93" pos:column="31">APLOG_MARK<pos:position pos:line="93" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="43">APLOG_ERR<pos:position pos:line="93" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="54">0<pos:position pos:line="93" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="57">f<pos:position pos:line="93" pos:column="58"/></name><operator pos:line="93" pos:column="58">-&gt;<pos:position pos:line="93" pos:column="63"/></operator><name pos:line="93" pos:column="60">r<pos:position pos:line="93" pos:column="61"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="94" pos:column="27">"Requested content-length of %"<pos:position pos:line="94" pos:column="58"/></literal> <name pos:line="94" pos:column="59">APR_OFF_T_FMT<pos:position pos:line="94" pos:column="72"/></name>
                          <literal type="string" pos:line="95" pos:column="27">" is larger than the configured limit"<pos:position pos:line="95" pos:column="65"/></literal>
                          <literal type="string" pos:line="96" pos:column="27">" of %"<pos:position pos:line="96" pos:column="34"/></literal> <name pos:line="96" pos:column="35">APR_OFF_T_FMT<pos:position pos:line="96" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="50">ctx<pos:position pos:line="96" pos:column="53"/></name><operator pos:line="96" pos:column="53">-&gt;<pos:position pos:line="96" pos:column="58"/></operator><name pos:line="96" pos:column="55">remaining<pos:position pos:line="96" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="66">ctx<pos:position pos:line="96" pos:column="69"/></name><operator pos:line="96" pos:column="69">-&gt;<pos:position pos:line="96" pos:column="74"/></operator><name pos:line="96" pos:column="71">limit<pos:position pos:line="96" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="78"/></expr_stmt>
                <return pos:line="97" pos:column="17">return <expr><call><name pos:line="97" pos:column="24">bail_out_on_error<pos:position pos:line="97" pos:column="41"/></name><argument_list pos:line="97" pos:column="41">(<argument><expr><name pos:line="97" pos:column="42">ctx<pos:position pos:line="97" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="47">f<pos:position pos:line="97" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="50">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="97" pos:column="79"/></name></expr></argument>)<pos:position pos:line="97" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="81"/></return>
            }<pos:position pos:line="98" pos:column="14"/></block></then></if>
        }<pos:position pos:line="99" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="101" pos:column="9">/* If we don't have a request entity indicated by the headers, EOS.
         * (BODY_NONE is a valid intermediate state due to trailers,
         *  but it isn't a valid starting state.)
         *
         * RFC 2616 Section 4.4 note 5 states that connection-close
         * is invalid for a request entity - request bodies must be
         * denoted by C-L or T-E: chunked.
         *
         * Note that since the proxy uses this filter to handle the
         * proxied *response*, proxy responses MUST be exempt.
         */</comment>
        <if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><name><name pos:line="112" pos:column="13">ctx<pos:position pos:line="112" pos:column="16"/></name><operator pos:line="112" pos:column="16">-&gt;<pos:position pos:line="112" pos:column="21"/></operator><name pos:line="112" pos:column="18">state<pos:position pos:line="112" pos:column="23"/></name></name> <operator pos:line="112" pos:column="24">==<pos:position pos:line="112" pos:column="26"/></operator> <name pos:line="112" pos:column="27">BODY_NONE<pos:position pos:line="112" pos:column="36"/></name> <operator pos:line="112" pos:column="37">&amp;&amp;<pos:position pos:line="112" pos:column="47"/></operator> <name><name pos:line="112" pos:column="40">f<pos:position pos:line="112" pos:column="41"/></name><operator pos:line="112" pos:column="41">-&gt;<pos:position pos:line="112" pos:column="46"/></operator><name pos:line="112" pos:column="43">r<pos:position pos:line="112" pos:column="44"/></name><operator pos:line="112" pos:column="44">-&gt;<pos:position pos:line="112" pos:column="49"/></operator><name pos:line="112" pos:column="46">proxyreq<pos:position pos:line="112" pos:column="54"/></name></name> <operator pos:line="112" pos:column="55">!=<pos:position pos:line="112" pos:column="57"/></operator> <name pos:line="112" pos:column="58">PROXYREQ_RESPONSE<pos:position pos:line="112" pos:column="75"/></name></expr>)<pos:position pos:line="112" pos:column="76"/></condition><then pos:line="112" pos:column="76"> <block pos:line="112" pos:column="77">{
            <expr_stmt><expr><name pos:line="113" pos:column="13">e<pos:position pos:line="113" pos:column="14"/></name> <operator pos:line="113" pos:column="15">=<pos:position pos:line="113" pos:column="16"/></operator> <call><name pos:line="113" pos:column="17">apr_bucket_eos_create<pos:position pos:line="113" pos:column="38"/></name><argument_list pos:line="113" pos:column="38">(<argument><expr><name><name pos:line="113" pos:column="39">f<pos:position pos:line="113" pos:column="40"/></name><operator pos:line="113" pos:column="40">-&gt;<pos:position pos:line="113" pos:column="45"/></operator><name pos:line="113" pos:column="42">c<pos:position pos:line="113" pos:column="43"/></name><operator pos:line="113" pos:column="43">-&gt;<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="45">bucket_alloc<pos:position pos:line="113" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="114" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="114" pos:column="36"/></name><argument_list pos:line="114" pos:column="36">(<argument><expr><name pos:line="114" pos:column="37">b<pos:position pos:line="114" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="40">e<pos:position pos:line="114" pos:column="41"/></name></expr></argument>)<pos:position pos:line="114" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="115" pos:column="13">ctx<pos:position pos:line="115" pos:column="16"/></name><operator pos:line="115" pos:column="16">-&gt;<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="18">eos_sent<pos:position pos:line="115" pos:column="26"/></name></name> <operator pos:line="115" pos:column="27">=<pos:position pos:line="115" pos:column="28"/></operator> <literal type="number" pos:line="115" pos:column="29">1<pos:position pos:line="115" pos:column="30"/></literal></expr>;<pos:position pos:line="115" pos:column="31"/></expr_stmt>
            <return pos:line="116" pos:column="13">return <expr><name pos:line="116" pos:column="20">APR_SUCCESS<pos:position pos:line="116" pos:column="31"/></name></expr>;<pos:position pos:line="116" pos:column="32"/></return>
        }<pos:position pos:line="117" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="119" pos:column="9">/* Since we're about to read data, send 100-Continue if needed.
         * Only valid on chunked and C-L bodies where the C-L is &gt; 0. */</comment>
        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><operator pos:line="121" pos:column="13">(<pos:position pos:line="121" pos:column="14"/></operator><name><name pos:line="121" pos:column="14">ctx<pos:position pos:line="121" pos:column="17"/></name><operator pos:line="121" pos:column="17">-&gt;<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="19">state<pos:position pos:line="121" pos:column="24"/></name></name> <operator pos:line="121" pos:column="25">==<pos:position pos:line="121" pos:column="27"/></operator> <name pos:line="121" pos:column="28">BODY_CHUNK<pos:position pos:line="121" pos:column="38"/></name> <operator pos:line="121" pos:column="39">||<pos:position pos:line="121" pos:column="41"/></operator>
            <operator pos:line="122" pos:column="13">(<pos:position pos:line="122" pos:column="14"/></operator><name><name pos:line="122" pos:column="14">ctx<pos:position pos:line="122" pos:column="17"/></name><operator pos:line="122" pos:column="17">-&gt;<pos:position pos:line="122" pos:column="22"/></operator><name pos:line="122" pos:column="19">state<pos:position pos:line="122" pos:column="24"/></name></name> <operator pos:line="122" pos:column="25">==<pos:position pos:line="122" pos:column="27"/></operator> <name pos:line="122" pos:column="28">BODY_LENGTH<pos:position pos:line="122" pos:column="39"/></name> <operator pos:line="122" pos:column="40">&amp;&amp;<pos:position pos:line="122" pos:column="50"/></operator> <name><name pos:line="122" pos:column="43">ctx<pos:position pos:line="122" pos:column="46"/></name><operator pos:line="122" pos:column="46">-&gt;<pos:position pos:line="122" pos:column="51"/></operator><name pos:line="122" pos:column="48">remaining<pos:position pos:line="122" pos:column="57"/></name></name> <operator pos:line="122" pos:column="58">&gt;<pos:position pos:line="122" pos:column="62"/></operator> <literal type="number" pos:line="122" pos:column="60">0<pos:position pos:line="122" pos:column="61"/></literal><operator pos:line="122" pos:column="61">)<pos:position pos:line="122" pos:column="62"/></operator><operator pos:line="122" pos:column="62">)<pos:position pos:line="122" pos:column="63"/></operator> <operator pos:line="122" pos:column="64">&amp;&amp;<pos:position pos:line="122" pos:column="74"/></operator>
            <name><name pos:line="123" pos:column="13">f<pos:position pos:line="123" pos:column="14"/></name><operator pos:line="123" pos:column="14">-&gt;<pos:position pos:line="123" pos:column="19"/></operator><name pos:line="123" pos:column="16">r<pos:position pos:line="123" pos:column="17"/></name><operator pos:line="123" pos:column="17">-&gt;<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="19">expecting_100<pos:position pos:line="123" pos:column="32"/></name></name> <operator pos:line="123" pos:column="33">&amp;&amp;<pos:position pos:line="123" pos:column="43"/></operator> <name><name pos:line="123" pos:column="36">f<pos:position pos:line="123" pos:column="37"/></name><operator pos:line="123" pos:column="37">-&gt;<pos:position pos:line="123" pos:column="42"/></operator><name pos:line="123" pos:column="39">r<pos:position pos:line="123" pos:column="40"/></name><operator pos:line="123" pos:column="40">-&gt;<pos:position pos:line="123" pos:column="45"/></operator><name pos:line="123" pos:column="42">proto_num<pos:position pos:line="123" pos:column="51"/></name></name> <operator pos:line="123" pos:column="52">&gt;=<pos:position pos:line="123" pos:column="57"/></operator> <call><name pos:line="123" pos:column="55">HTTP_VERSION<pos:position pos:line="123" pos:column="67"/></name><argument_list pos:line="123" pos:column="67">(<argument><expr><literal type="number" pos:line="123" pos:column="68">1<pos:position pos:line="123" pos:column="69"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="123" pos:column="70">1<pos:position pos:line="123" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="72"/></argument_list></call> <operator pos:line="123" pos:column="73">&amp;&amp;<pos:position pos:line="123" pos:column="83"/></operator>
            <operator pos:line="124" pos:column="13">!<pos:position pos:line="124" pos:column="14"/></operator><operator pos:line="124" pos:column="14">(<pos:position pos:line="124" pos:column="15"/></operator><name><name pos:line="124" pos:column="15">f<pos:position pos:line="124" pos:column="16"/></name><operator pos:line="124" pos:column="16">-&gt;<pos:position pos:line="124" pos:column="21"/></operator><name pos:line="124" pos:column="18">r<pos:position pos:line="124" pos:column="19"/></name><operator pos:line="124" pos:column="19">-&gt;<pos:position pos:line="124" pos:column="24"/></operator><name pos:line="124" pos:column="21">eos_sent<pos:position pos:line="124" pos:column="29"/></name></name> <operator pos:line="124" pos:column="30">||<pos:position pos:line="124" pos:column="32"/></operator> <name><name pos:line="124" pos:column="33">f<pos:position pos:line="124" pos:column="34"/></name><operator pos:line="124" pos:column="34">-&gt;<pos:position pos:line="124" pos:column="39"/></operator><name pos:line="124" pos:column="36">r<pos:position pos:line="124" pos:column="37"/></name><operator pos:line="124" pos:column="37">-&gt;<pos:position pos:line="124" pos:column="42"/></operator><name pos:line="124" pos:column="39">bytes_sent<pos:position pos:line="124" pos:column="49"/></name></name><operator pos:line="124" pos:column="49">)<pos:position pos:line="124" pos:column="50"/></operator></expr>)<pos:position pos:line="124" pos:column="51"/></condition><then pos:line="124" pos:column="51"> <block pos:line="124" pos:column="52">{
            <if pos:line="125" pos:column="13">if <condition pos:line="125" pos:column="16">(<expr><operator pos:line="125" pos:column="17">!<pos:position pos:line="125" pos:column="18"/></operator><call><name pos:line="125" pos:column="18">ap_is_HTTP_SUCCESS<pos:position pos:line="125" pos:column="36"/></name><argument_list pos:line="125" pos:column="36">(<argument><expr><name><name pos:line="125" pos:column="37">f<pos:position pos:line="125" pos:column="38"/></name><operator pos:line="125" pos:column="38">-&gt;<pos:position pos:line="125" pos:column="43"/></operator><name pos:line="125" pos:column="40">r<pos:position pos:line="125" pos:column="41"/></name><operator pos:line="125" pos:column="41">-&gt;<pos:position pos:line="125" pos:column="46"/></operator><name pos:line="125" pos:column="43">status<pos:position pos:line="125" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="125" pos:column="51"/></condition><then pos:line="125" pos:column="51"> <block pos:line="125" pos:column="52">{
                <expr_stmt><expr><name><name pos:line="126" pos:column="17">ctx<pos:position pos:line="126" pos:column="20"/></name><operator pos:line="126" pos:column="20">-&gt;<pos:position pos:line="126" pos:column="25"/></operator><name pos:line="126" pos:column="22">state<pos:position pos:line="126" pos:column="27"/></name></name> <operator pos:line="126" pos:column="28">=<pos:position pos:line="126" pos:column="29"/></operator> <name pos:line="126" pos:column="30">BODY_NONE<pos:position pos:line="126" pos:column="39"/></name></expr>;<pos:position pos:line="126" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="127" pos:column="17">ctx<pos:position pos:line="127" pos:column="20"/></name><operator pos:line="127" pos:column="20">-&gt;<pos:position pos:line="127" pos:column="25"/></operator><name pos:line="127" pos:column="22">eos_sent<pos:position pos:line="127" pos:column="30"/></name></name> <operator pos:line="127" pos:column="31">=<pos:position pos:line="127" pos:column="32"/></operator> <literal type="number" pos:line="127" pos:column="33">1<pos:position pos:line="127" pos:column="34"/></literal></expr>;<pos:position pos:line="127" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="128" pos:column="14"/></block></then>
            <else pos:line="129" pos:column="13">else <block pos:line="129" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="130" pos:column="17">char<pos:position pos:line="130" pos:column="21"/></name> <modifier pos:line="130" pos:column="22">*<pos:position pos:line="130" pos:column="23"/></modifier></type><name pos:line="130" pos:column="23">tmp<pos:position pos:line="130" pos:column="26"/></name></decl>;<pos:position pos:line="130" pos:column="27"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="131" pos:column="17">int<pos:position pos:line="131" pos:column="20"/></name></type> <name pos:line="131" pos:column="21">len<pos:position pos:line="131" pos:column="24"/></name></decl>;<pos:position pos:line="131" pos:column="25"/></decl_stmt>

                <comment type="block" pos:line="133" pos:column="17">/* if we send an interim response, we're no longer
                 * in a state of expecting one.
                 */</comment>
                <expr_stmt><expr><name><name pos:line="136" pos:column="17">f<pos:position pos:line="136" pos:column="18"/></name><operator pos:line="136" pos:column="18">-&gt;<pos:position pos:line="136" pos:column="23"/></operator><name pos:line="136" pos:column="20">r<pos:position pos:line="136" pos:column="21"/></name><operator pos:line="136" pos:column="21">-&gt;<pos:position pos:line="136" pos:column="26"/></operator><name pos:line="136" pos:column="23">expecting_100<pos:position pos:line="136" pos:column="36"/></name></name> <operator pos:line="136" pos:column="37">=<pos:position pos:line="136" pos:column="38"/></operator> <literal type="number" pos:line="136" pos:column="39">0<pos:position pos:line="136" pos:column="40"/></literal></expr>;<pos:position pos:line="136" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="137" pos:column="17">tmp<pos:position pos:line="137" pos:column="20"/></name> <operator pos:line="137" pos:column="21">=<pos:position pos:line="137" pos:column="22"/></operator> <macro><name pos:line="137" pos:column="23">apr_pstrcat<pos:position pos:line="137" pos:column="34"/></name><argument_list pos:line="137" pos:column="34">(<argument pos:line="137" pos:column="35">f-&gt;r-&gt;pool<pos:position pos:line="137" pos:column="45"/></argument>, <argument pos:line="137" pos:column="47">AP_SERVER_PROTOCOL<pos:position pos:line="137" pos:column="65"/></argument>, <argument><literal type="string" pos:line="137" pos:column="67">" "<pos:position pos:line="137" pos:column="70"/></literal></argument>,
                                  <argument pos:line="138" pos:column="35">ap_get_status_line(<literal type="number" pos:line="138" pos:column="54">100<pos:position pos:line="138" pos:column="57"/></literal>)<pos:position pos:line="138" pos:column="58"/></argument>, <argument pos:line="138" pos:column="60">CRLF CRLF<pos:position pos:line="138" pos:column="69"/></argument>, <argument pos:line="138" pos:column="71">NULL<pos:position pos:line="138" pos:column="75"/></argument>)<pos:position pos:line="138" pos:column="76"/></argument_list></macro></expr>;<pos:position pos:line="138" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><name pos:line="139" pos:column="17">len<pos:position pos:line="139" pos:column="20"/></name> <operator pos:line="139" pos:column="21">=<pos:position pos:line="139" pos:column="22"/></operator> <call><name pos:line="139" pos:column="23">strlen<pos:position pos:line="139" pos:column="29"/></name><argument_list pos:line="139" pos:column="29">(<argument><expr><name pos:line="139" pos:column="30">tmp<pos:position pos:line="139" pos:column="33"/></name></expr></argument>)<pos:position pos:line="139" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="140" pos:column="17">ap_xlate_proto_to_ascii<pos:position pos:line="140" pos:column="40"/></name><argument_list pos:line="140" pos:column="40">(<argument><expr><name pos:line="140" pos:column="41">tmp<pos:position pos:line="140" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="46">len<pos:position pos:line="140" pos:column="49"/></name></expr></argument>)<pos:position pos:line="140" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">apr_brigade_cleanup<pos:position pos:line="141" pos:column="36"/></name><argument_list pos:line="141" pos:column="36">(<argument><expr><name pos:line="141" pos:column="37">bb<pos:position pos:line="141" pos:column="39"/></name></expr></argument>)<pos:position pos:line="141" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="142" pos:column="17">e<pos:position pos:line="142" pos:column="18"/></name> <operator pos:line="142" pos:column="19">=<pos:position pos:line="142" pos:column="20"/></operator> <call><name pos:line="142" pos:column="21">apr_bucket_pool_create<pos:position pos:line="142" pos:column="43"/></name><argument_list pos:line="142" pos:column="43">(<argument><expr><name pos:line="142" pos:column="44">tmp<pos:position pos:line="142" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="49">len<pos:position pos:line="142" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="54">f<pos:position pos:line="142" pos:column="55"/></name><operator pos:line="142" pos:column="55">-&gt;<pos:position pos:line="142" pos:column="60"/></operator><name pos:line="142" pos:column="57">r<pos:position pos:line="142" pos:column="58"/></name><operator pos:line="142" pos:column="58">-&gt;<pos:position pos:line="142" pos:column="63"/></operator><name pos:line="142" pos:column="60">pool<pos:position pos:line="142" pos:column="64"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="143" pos:column="44">f<pos:position pos:line="143" pos:column="45"/></name><operator pos:line="143" pos:column="45">-&gt;<pos:position pos:line="143" pos:column="50"/></operator><name pos:line="143" pos:column="47">c<pos:position pos:line="143" pos:column="48"/></name><operator pos:line="143" pos:column="48">-&gt;<pos:position pos:line="143" pos:column="53"/></operator><name pos:line="143" pos:column="50">bucket_alloc<pos:position pos:line="143" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="144" pos:column="17">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="144" pos:column="40"/></name><argument_list pos:line="144" pos:column="40">(<argument><expr><name pos:line="144" pos:column="41">bb<pos:position pos:line="144" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="45">e<pos:position pos:line="144" pos:column="46"/></name></expr></argument>)<pos:position pos:line="144" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name pos:line="145" pos:column="17">e<pos:position pos:line="145" pos:column="18"/></name> <operator pos:line="145" pos:column="19">=<pos:position pos:line="145" pos:column="20"/></operator> <call><name pos:line="145" pos:column="21">apr_bucket_flush_create<pos:position pos:line="145" pos:column="44"/></name><argument_list pos:line="145" pos:column="44">(<argument><expr><name><name pos:line="145" pos:column="45">f<pos:position pos:line="145" pos:column="46"/></name><operator pos:line="145" pos:column="46">-&gt;<pos:position pos:line="145" pos:column="51"/></operator><name pos:line="145" pos:column="48">c<pos:position pos:line="145" pos:column="49"/></name><operator pos:line="145" pos:column="49">-&gt;<pos:position pos:line="145" pos:column="54"/></operator><name pos:line="145" pos:column="51">bucket_alloc<pos:position pos:line="145" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="146" pos:column="40"/></name><argument_list pos:line="146" pos:column="40">(<argument><expr><name pos:line="146" pos:column="41">bb<pos:position pos:line="146" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="45">e<pos:position pos:line="146" pos:column="46"/></name></expr></argument>)<pos:position pos:line="146" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="48"/></expr_stmt>

                <expr_stmt><expr><name pos:line="148" pos:column="17">rv<pos:position pos:line="148" pos:column="19"/></name> <operator pos:line="148" pos:column="20">=<pos:position pos:line="148" pos:column="21"/></operator> <call><name pos:line="148" pos:column="22">ap_pass_brigade<pos:position pos:line="148" pos:column="37"/></name><argument_list pos:line="148" pos:column="37">(<argument><expr><name><name pos:line="148" pos:column="38">f<pos:position pos:line="148" pos:column="39"/></name><operator pos:line="148" pos:column="39">-&gt;<pos:position pos:line="148" pos:column="44"/></operator><name pos:line="148" pos:column="41">c<pos:position pos:line="148" pos:column="42"/></name><operator pos:line="148" pos:column="42">-&gt;<pos:position pos:line="148" pos:column="47"/></operator><name pos:line="148" pos:column="44">output_filters<pos:position pos:line="148" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="60">bb<pos:position pos:line="148" pos:column="62"/></name></expr></argument>)<pos:position pos:line="148" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="64"/></expr_stmt>
                <if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><name pos:line="149" pos:column="21">rv<pos:position pos:line="149" pos:column="23"/></name> <operator pos:line="149" pos:column="24">!=<pos:position pos:line="149" pos:column="26"/></operator> <name pos:line="149" pos:column="27">APR_SUCCESS<pos:position pos:line="149" pos:column="38"/></name></expr>)<pos:position pos:line="149" pos:column="39"/></condition><then pos:line="149" pos:column="39"> <block pos:line="149" pos:column="40">{
                    <return pos:line="150" pos:column="21">return <expr><name pos:line="150" pos:column="28">AP_FILTER_ERROR<pos:position pos:line="150" pos:column="43"/></name></expr>;<pos:position pos:line="150" pos:column="44"/></return>
                }<pos:position pos:line="151" pos:column="18"/></block></then></if>
            }<pos:position pos:line="152" pos:column="14"/></block></else></if>
        }<pos:position pos:line="153" pos:column="10"/></block></then></if>
    }<pos:position pos:line="154" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="156" pos:column="5">/* sanity check in case we're read twice */</comment>
    <if pos:line="157" pos:column="5">if <condition pos:line="157" pos:column="8">(<expr><name><name pos:line="157" pos:column="9">ctx<pos:position pos:line="157" pos:column="12"/></name><operator pos:line="157" pos:column="12">-&gt;<pos:position pos:line="157" pos:column="17"/></operator><name pos:line="157" pos:column="14">eos_sent<pos:position pos:line="157" pos:column="22"/></name></name></expr>)<pos:position pos:line="157" pos:column="23"/></condition><then pos:line="157" pos:column="23"> <block pos:line="157" pos:column="24">{
        <expr_stmt><expr><name pos:line="158" pos:column="9">e<pos:position pos:line="158" pos:column="10"/></name> <operator pos:line="158" pos:column="11">=<pos:position pos:line="158" pos:column="12"/></operator> <call><name pos:line="158" pos:column="13">apr_bucket_eos_create<pos:position pos:line="158" pos:column="34"/></name><argument_list pos:line="158" pos:column="34">(<argument><expr><name><name pos:line="158" pos:column="35">f<pos:position pos:line="158" pos:column="36"/></name><operator pos:line="158" pos:column="36">-&gt;<pos:position pos:line="158" pos:column="41"/></operator><name pos:line="158" pos:column="38">c<pos:position pos:line="158" pos:column="39"/></name><operator pos:line="158" pos:column="39">-&gt;<pos:position pos:line="158" pos:column="44"/></operator><name pos:line="158" pos:column="41">bucket_alloc<pos:position pos:line="158" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="159" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="159" pos:column="32"/></name><argument_list pos:line="159" pos:column="32">(<argument><expr><name pos:line="159" pos:column="33">b<pos:position pos:line="159" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="36">e<pos:position pos:line="159" pos:column="37"/></name></expr></argument>)<pos:position pos:line="159" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="39"/></expr_stmt>
        <return pos:line="160" pos:column="9">return <expr><name pos:line="160" pos:column="16">APR_SUCCESS<pos:position pos:line="160" pos:column="27"/></name></expr>;<pos:position pos:line="160" pos:column="28"/></return>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if>

    <do pos:line="163" pos:column="5">do <block pos:line="163" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="164" pos:column="9">apr_brigade_cleanup<pos:position pos:line="164" pos:column="28"/></name><argument_list pos:line="164" pos:column="28">(<argument><expr><name pos:line="164" pos:column="29">b<pos:position pos:line="164" pos:column="30"/></name></expr></argument>)<pos:position pos:line="164" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="165" pos:column="9">again<pos:position pos:line="165" pos:column="14"/></name> <operator pos:line="165" pos:column="15">=<pos:position pos:line="165" pos:column="16"/></operator> <literal type="number" pos:line="165" pos:column="17">0<pos:position pos:line="165" pos:column="18"/></literal></expr>;<pos:position pos:line="165" pos:column="19"/></expr_stmt> <comment type="block" pos:line="165" pos:column="20">/* until further notice */</comment>

        <comment type="block" pos:line="167" pos:column="9">/* read and handle the brigade */</comment>
        <switch pos:line="168" pos:column="9">switch <condition pos:line="168" pos:column="16">(<expr><name><name pos:line="168" pos:column="17">ctx<pos:position pos:line="168" pos:column="20"/></name><operator pos:line="168" pos:column="20">-&gt;<pos:position pos:line="168" pos:column="25"/></operator><name pos:line="168" pos:column="22">state<pos:position pos:line="168" pos:column="27"/></name></name></expr>)<pos:position pos:line="168" pos:column="28"/></condition> <block pos:line="168" pos:column="29">{
        <case pos:line="169" pos:column="9">case <expr><name pos:line="169" pos:column="14">BODY_CHUNK<pos:position pos:line="169" pos:column="24"/></name></expr>:<pos:position pos:line="169" pos:column="25"/></case>
        <case pos:line="170" pos:column="9">case <expr><name pos:line="170" pos:column="14">BODY_CHUNK_PART<pos:position pos:line="170" pos:column="29"/></name></expr>:<pos:position pos:line="170" pos:column="30"/></case>
        <case pos:line="171" pos:column="9">case <expr><name pos:line="171" pos:column="14">BODY_CHUNK_EXT<pos:position pos:line="171" pos:column="28"/></name></expr>:<pos:position pos:line="171" pos:column="29"/></case>
        <case pos:line="172" pos:column="9">case <expr><name pos:line="172" pos:column="14">BODY_CHUNK_CR<pos:position pos:line="172" pos:column="27"/></name></expr>:<pos:position pos:line="172" pos:column="28"/></case>
        <case pos:line="173" pos:column="9">case <expr><name pos:line="173" pos:column="14">BODY_CHUNK_LF<pos:position pos:line="173" pos:column="27"/></name></expr>:<pos:position pos:line="173" pos:column="28"/></case>
        <case pos:line="174" pos:column="9">case <expr><name pos:line="174" pos:column="14">BODY_CHUNK_END<pos:position pos:line="174" pos:column="28"/></name></expr>:<pos:position pos:line="174" pos:column="29"/></case>
        <case pos:line="175" pos:column="9">case <expr><name pos:line="175" pos:column="14">BODY_CHUNK_END_LF<pos:position pos:line="175" pos:column="31"/></name></expr>:<pos:position pos:line="175" pos:column="32"/></case> <block pos:line="175" pos:column="33">{

            <expr_stmt><expr><name pos:line="177" pos:column="13">rv<pos:position pos:line="177" pos:column="15"/></name> <operator pos:line="177" pos:column="16">=<pos:position pos:line="177" pos:column="17"/></operator> <call><name pos:line="177" pos:column="18">ap_get_brigade<pos:position pos:line="177" pos:column="32"/></name><argument_list pos:line="177" pos:column="32">(<argument><expr><name><name pos:line="177" pos:column="33">f<pos:position pos:line="177" pos:column="34"/></name><operator pos:line="177" pos:column="34">-&gt;<pos:position pos:line="177" pos:column="39"/></operator><name pos:line="177" pos:column="36">next<pos:position pos:line="177" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="42">b<pos:position pos:line="177" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="45">AP_MODE_GETLINE<pos:position pos:line="177" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="62">block<pos:position pos:line="177" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="177" pos:column="69">0<pos:position pos:line="177" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="72"/></expr_stmt>

            <comment type="block" pos:line="179" pos:column="13">/* for timeout */</comment>
            <if pos:line="180" pos:column="13">if <condition pos:line="180" pos:column="16">(<expr><name pos:line="180" pos:column="17">block<pos:position pos:line="180" pos:column="22"/></name> <operator pos:line="180" pos:column="23">==<pos:position pos:line="180" pos:column="25"/></operator> <name pos:line="180" pos:column="26">APR_NONBLOCK_READ<pos:position pos:line="180" pos:column="43"/></name>
                    <operator pos:line="181" pos:column="21">&amp;&amp;<pos:position pos:line="181" pos:column="31"/></operator> <operator pos:line="181" pos:column="24">(<pos:position pos:line="181" pos:column="25"/></operator><operator pos:line="181" pos:column="25">(<pos:position pos:line="181" pos:column="26"/></operator><name pos:line="181" pos:column="26">rv<pos:position pos:line="181" pos:column="28"/></name> <operator pos:line="181" pos:column="29">==<pos:position pos:line="181" pos:column="31"/></operator> <name pos:line="181" pos:column="32">APR_SUCCESS<pos:position pos:line="181" pos:column="43"/></name> <operator pos:line="181" pos:column="44">&amp;&amp;<pos:position pos:line="181" pos:column="54"/></operator> <call><name pos:line="181" pos:column="47">APR_BRIGADE_EMPTY<pos:position pos:line="181" pos:column="64"/></name><argument_list pos:line="181" pos:column="64">(<argument><expr><name pos:line="181" pos:column="65">b<pos:position pos:line="181" pos:column="66"/></name></expr></argument>)<pos:position pos:line="181" pos:column="67"/></argument_list></call><operator pos:line="181" pos:column="67">)<pos:position pos:line="181" pos:column="68"/></operator>
                            <operator pos:line="182" pos:column="29">||<pos:position pos:line="182" pos:column="31"/></operator> <operator pos:line="182" pos:column="32">(<pos:position pos:line="182" pos:column="33"/></operator><call><name pos:line="182" pos:column="33">APR_STATUS_IS_EAGAIN<pos:position pos:line="182" pos:column="53"/></name><argument_list pos:line="182" pos:column="53">(<argument><expr><name pos:line="182" pos:column="54">rv<pos:position pos:line="182" pos:column="56"/></name></expr></argument>)<pos:position pos:line="182" pos:column="57"/></argument_list></call><operator pos:line="182" pos:column="57">)<pos:position pos:line="182" pos:column="58"/></operator><operator pos:line="182" pos:column="58">)<pos:position pos:line="182" pos:column="59"/></operator></expr>)<pos:position pos:line="182" pos:column="60"/></condition><then pos:line="182" pos:column="60"> <block pos:line="182" pos:column="61">{
                <return pos:line="183" pos:column="17">return <expr><name pos:line="183" pos:column="24">APR_EAGAIN<pos:position pos:line="183" pos:column="34"/></name></expr>;<pos:position pos:line="183" pos:column="35"/></return>
            }<pos:position pos:line="184" pos:column="14"/></block></then></if>

            <if pos:line="186" pos:column="13">if <condition pos:line="186" pos:column="16">(<expr><name pos:line="186" pos:column="17">rv<pos:position pos:line="186" pos:column="19"/></name> <operator pos:line="186" pos:column="20">==<pos:position pos:line="186" pos:column="22"/></operator> <name pos:line="186" pos:column="23">APR_EOF<pos:position pos:line="186" pos:column="30"/></name></expr>)<pos:position pos:line="186" pos:column="31"/></condition><then pos:line="186" pos:column="31"> <block pos:line="186" pos:column="32">{
                <return pos:line="187" pos:column="17">return <expr><name pos:line="187" pos:column="24">APR_INCOMPLETE<pos:position pos:line="187" pos:column="38"/></name></expr>;<pos:position pos:line="187" pos:column="39"/></return>
            }<pos:position pos:line="188" pos:column="14"/></block></then></if>

            <if pos:line="190" pos:column="13">if <condition pos:line="190" pos:column="16">(<expr><name pos:line="190" pos:column="17">rv<pos:position pos:line="190" pos:column="19"/></name> <operator pos:line="190" pos:column="20">!=<pos:position pos:line="190" pos:column="22"/></operator> <name pos:line="190" pos:column="23">APR_SUCCESS<pos:position pos:line="190" pos:column="34"/></name></expr>)<pos:position pos:line="190" pos:column="35"/></condition><then pos:line="190" pos:column="35"> <block pos:line="190" pos:column="36">{
                <return pos:line="191" pos:column="17">return <expr><name pos:line="191" pos:column="24">rv<pos:position pos:line="191" pos:column="26"/></name></expr>;<pos:position pos:line="191" pos:column="27"/></return>
            }<pos:position pos:line="192" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="194" pos:column="13">e<pos:position pos:line="194" pos:column="14"/></name> <operator pos:line="194" pos:column="15">=<pos:position pos:line="194" pos:column="16"/></operator> <call><name pos:line="194" pos:column="17">APR_BRIGADE_FIRST<pos:position pos:line="194" pos:column="34"/></name><argument_list pos:line="194" pos:column="34">(<argument><expr><name pos:line="194" pos:column="35">b<pos:position pos:line="194" pos:column="36"/></name></expr></argument>)<pos:position pos:line="194" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="38"/></expr_stmt>
            <while pos:line="195" pos:column="13">while <condition pos:line="195" pos:column="19">(<expr><name pos:line="195" pos:column="20">e<pos:position pos:line="195" pos:column="21"/></name> <operator pos:line="195" pos:column="22">!=<pos:position pos:line="195" pos:column="24"/></operator> <call><name pos:line="195" pos:column="25">APR_BRIGADE_SENTINEL<pos:position pos:line="195" pos:column="45"/></name><argument_list pos:line="195" pos:column="45">(<argument><expr><name pos:line="195" pos:column="46">b<pos:position pos:line="195" pos:column="47"/></name></expr></argument>)<pos:position pos:line="195" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="195" pos:column="49"/></condition> <block pos:line="195" pos:column="50">{
                <decl_stmt><decl><type><specifier pos:line="196" pos:column="17">const<pos:position pos:line="196" pos:column="22"/></specifier> <name pos:line="196" pos:column="23">char<pos:position pos:line="196" pos:column="27"/></name> <modifier pos:line="196" pos:column="28">*<pos:position pos:line="196" pos:column="29"/></modifier></type><name pos:line="196" pos:column="29">buffer<pos:position pos:line="196" pos:column="35"/></name></decl>;<pos:position pos:line="196" pos:column="36"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="197" pos:column="17">apr_size_t<pos:position pos:line="197" pos:column="27"/></name></type> <name pos:line="197" pos:column="28">len<pos:position pos:line="197" pos:column="31"/></name></decl>;<pos:position pos:line="197" pos:column="32"/></decl_stmt>

                <if pos:line="199" pos:column="17">if <condition pos:line="199" pos:column="20">(<expr><operator pos:line="199" pos:column="21">!<pos:position pos:line="199" pos:column="22"/></operator><call><name pos:line="199" pos:column="22">APR_BUCKET_IS_METADATA<pos:position pos:line="199" pos:column="44"/></name><argument_list pos:line="199" pos:column="44">(<argument><expr><name pos:line="199" pos:column="45">e<pos:position pos:line="199" pos:column="46"/></name></expr></argument>)<pos:position pos:line="199" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="199" pos:column="48"/></condition><then pos:line="199" pos:column="48"> <block pos:line="199" pos:column="49">{
                    <decl_stmt><decl><type><name pos:line="200" pos:column="21">int<pos:position pos:line="200" pos:column="24"/></name></type> <name pos:line="200" pos:column="25">parsing<pos:position pos:line="200" pos:column="32"/></name> <init pos:line="200" pos:column="33">= <expr><literal type="number" pos:line="200" pos:column="35">0<pos:position pos:line="200" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="200" pos:column="37"/></decl_stmt>

                    <expr_stmt><expr><name pos:line="202" pos:column="21">rv<pos:position pos:line="202" pos:column="23"/></name> <operator pos:line="202" pos:column="24">=<pos:position pos:line="202" pos:column="25"/></operator> <call><name pos:line="202" pos:column="26">apr_bucket_read<pos:position pos:line="202" pos:column="41"/></name><argument_list pos:line="202" pos:column="41">(<argument><expr><name pos:line="202" pos:column="42">e<pos:position pos:line="202" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="202" pos:column="45">&amp;<pos:position pos:line="202" pos:column="50"/></operator><name pos:line="202" pos:column="46">buffer<pos:position pos:line="202" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="202" pos:column="54">&amp;<pos:position pos:line="202" pos:column="59"/></operator><name pos:line="202" pos:column="55">len<pos:position pos:line="202" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="60">APR_BLOCK_READ<pos:position pos:line="202" pos:column="74"/></name></expr></argument>)<pos:position pos:line="202" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="76"/></expr_stmt>

                    <if pos:line="204" pos:column="21">if <condition pos:line="204" pos:column="24">(<expr><name pos:line="204" pos:column="25">rv<pos:position pos:line="204" pos:column="27"/></name> <operator pos:line="204" pos:column="28">==<pos:position pos:line="204" pos:column="30"/></operator> <name pos:line="204" pos:column="31">APR_SUCCESS<pos:position pos:line="204" pos:column="42"/></name></expr>)<pos:position pos:line="204" pos:column="43"/></condition><then pos:line="204" pos:column="43"> <block pos:line="204" pos:column="44">{
                        <expr_stmt><expr><name pos:line="205" pos:column="25">parsing<pos:position pos:line="205" pos:column="32"/></name> <operator pos:line="205" pos:column="33">=<pos:position pos:line="205" pos:column="34"/></operator> <literal type="number" pos:line="205" pos:column="35">1<pos:position pos:line="205" pos:column="36"/></literal></expr>;<pos:position pos:line="205" pos:column="37"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="206" pos:column="25">rv<pos:position pos:line="206" pos:column="27"/></name> <operator pos:line="206" pos:column="28">=<pos:position pos:line="206" pos:column="29"/></operator> <call><name pos:line="206" pos:column="30">parse_chunk_size<pos:position pos:line="206" pos:column="46"/></name><argument_list pos:line="206" pos:column="46">(<argument><expr><name pos:line="206" pos:column="47">ctx<pos:position pos:line="206" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="52">buffer<pos:position pos:line="206" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="60">len<pos:position pos:line="206" pos:column="63"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="207" pos:column="33">f<pos:position pos:line="207" pos:column="34"/></name><operator pos:line="207" pos:column="34">-&gt;<pos:position pos:line="207" pos:column="39"/></operator><name pos:line="207" pos:column="36">r<pos:position pos:line="207" pos:column="37"/></name><operator pos:line="207" pos:column="37">-&gt;<pos:position pos:line="207" pos:column="42"/></operator><name pos:line="207" pos:column="39">server<pos:position pos:line="207" pos:column="45"/></name><operator pos:line="207" pos:column="45">-&gt;<pos:position pos:line="207" pos:column="50"/></operator><name pos:line="207" pos:column="47">limit_req_fieldsize<pos:position pos:line="207" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="68">strict<pos:position pos:line="207" pos:column="74"/></name></expr></argument>)<pos:position pos:line="207" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="76"/></expr_stmt>
                    }<pos:position pos:line="208" pos:column="22"/></block></then></if>
                    <if pos:line="209" pos:column="21">if <condition pos:line="209" pos:column="24">(<expr><name pos:line="209" pos:column="25">rv<pos:position pos:line="209" pos:column="27"/></name> <operator pos:line="209" pos:column="28">!=<pos:position pos:line="209" pos:column="30"/></operator> <name pos:line="209" pos:column="31">APR_SUCCESS<pos:position pos:line="209" pos:column="42"/></name></expr>)<pos:position pos:line="209" pos:column="43"/></condition><then pos:line="209" pos:column="43"> <block pos:line="209" pos:column="44">{
                        <expr_stmt><expr><call><name pos:line="210" pos:column="25">ap_log_rerror<pos:position pos:line="210" pos:column="38"/></name><argument_list pos:line="210" pos:column="38">(<argument><expr><name pos:line="210" pos:column="39">APLOG_MARK<pos:position pos:line="210" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="51">APLOG_INFO<pos:position pos:line="210" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="63">rv<pos:position pos:line="210" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="210" pos:column="67">f<pos:position pos:line="210" pos:column="68"/></name><operator pos:line="210" pos:column="68">-&gt;<pos:position pos:line="210" pos:column="73"/></operator><name pos:line="210" pos:column="70">r<pos:position pos:line="210" pos:column="71"/></name></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="211" pos:column="39">"Error reading/parsing chunk %s "<pos:position pos:line="211" pos:column="72"/></literal></expr></argument>,
                                      <argument><expr><ternary><condition><expr><operator pos:line="212" pos:column="39">(<pos:position pos:line="212" pos:column="40"/></operator><name pos:line="212" pos:column="40">APR_ENOSPC<pos:position pos:line="212" pos:column="50"/></name> <operator pos:line="212" pos:column="51">==<pos:position pos:line="212" pos:column="53"/></operator> <name pos:line="212" pos:column="54">rv<pos:position pos:line="212" pos:column="56"/></name><operator pos:line="212" pos:column="56">)<pos:position pos:line="212" pos:column="57"/></operator></expr> ?<pos:position pos:line="212" pos:column="59"/></condition><then pos:line="212" pos:column="59"> <expr><literal type="string" pos:line="212" pos:column="60">"(overflow)"<pos:position pos:line="212" pos:column="72"/></literal></expr> <pos:position pos:line="212" pos:column="73"/></then><else pos:line="212" pos:column="73">: <expr><literal type="string" pos:line="212" pos:column="75">""<pos:position pos:line="212" pos:column="77"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="212" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="79"/></expr_stmt>
                        <if pos:line="213" pos:column="25">if <condition pos:line="213" pos:column="28">(<expr><name pos:line="213" pos:column="29">parsing<pos:position pos:line="213" pos:column="36"/></name></expr>)<pos:position pos:line="213" pos:column="37"/></condition><then pos:line="213" pos:column="37"> <block pos:line="213" pos:column="38">{
                            <if pos:line="214" pos:column="29">if <condition pos:line="214" pos:column="32">(<expr><name pos:line="214" pos:column="33">rv<pos:position pos:line="214" pos:column="35"/></name> <operator pos:line="214" pos:column="36">!=<pos:position pos:line="214" pos:column="38"/></operator> <name pos:line="214" pos:column="39">APR_ENOSPC<pos:position pos:line="214" pos:column="49"/></name></expr>)<pos:position pos:line="214" pos:column="50"/></condition><then pos:line="214" pos:column="50"> <block pos:line="214" pos:column="51">{
                                <expr_stmt><expr><name pos:line="215" pos:column="33">http_error<pos:position pos:line="215" pos:column="43"/></name> <operator pos:line="215" pos:column="44">=<pos:position pos:line="215" pos:column="45"/></operator> <name pos:line="215" pos:column="46">HTTP_BAD_REQUEST<pos:position pos:line="215" pos:column="62"/></name></expr>;<pos:position pos:line="215" pos:column="63"/></expr_stmt>
                            }<pos:position pos:line="216" pos:column="30"/></block></then></if>
                            <return pos:line="217" pos:column="29">return <expr><call><name pos:line="217" pos:column="36">bail_out_on_error<pos:position pos:line="217" pos:column="53"/></name><argument_list pos:line="217" pos:column="53">(<argument><expr><name pos:line="217" pos:column="54">ctx<pos:position pos:line="217" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="59">f<pos:position pos:line="217" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="62">http_error<pos:position pos:line="217" pos:column="72"/></name></expr></argument>)<pos:position pos:line="217" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="74"/></return>
                        }<pos:position pos:line="218" pos:column="26"/></block></then></if>
                        <return pos:line="219" pos:column="25">return <expr><name pos:line="219" pos:column="32">rv<pos:position pos:line="219" pos:column="34"/></name></expr>;<pos:position pos:line="219" pos:column="35"/></return>
                    }<pos:position pos:line="220" pos:column="22"/></block></then></if>
                }<pos:position pos:line="221" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="223" pos:column="17">apr_bucket_delete<pos:position pos:line="223" pos:column="34"/></name><argument_list pos:line="223" pos:column="34">(<argument><expr><name pos:line="223" pos:column="35">e<pos:position pos:line="223" pos:column="36"/></name></expr></argument>)<pos:position pos:line="223" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="224" pos:column="17">e<pos:position pos:line="224" pos:column="18"/></name> <operator pos:line="224" pos:column="19">=<pos:position pos:line="224" pos:column="20"/></operator> <call><name pos:line="224" pos:column="21">APR_BRIGADE_FIRST<pos:position pos:line="224" pos:column="38"/></name><argument_list pos:line="224" pos:column="38">(<argument><expr><name pos:line="224" pos:column="39">b<pos:position pos:line="224" pos:column="40"/></name></expr></argument>)<pos:position pos:line="224" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="225" pos:column="14"/></block></while>
            <expr_stmt><expr><name pos:line="226" pos:column="13">again<pos:position pos:line="226" pos:column="18"/></name> <operator pos:line="226" pos:column="19">=<pos:position pos:line="226" pos:column="20"/></operator> <literal type="number" pos:line="226" pos:column="21">1<pos:position pos:line="226" pos:column="22"/></literal></expr>;<pos:position pos:line="226" pos:column="23"/></expr_stmt> <comment type="block" pos:line="226" pos:column="24">/* come around again */</comment>

            <if pos:line="228" pos:column="13">if <condition pos:line="228" pos:column="16">(<expr><name><name pos:line="228" pos:column="17">ctx<pos:position pos:line="228" pos:column="20"/></name><operator pos:line="228" pos:column="20">-&gt;<pos:position pos:line="228" pos:column="25"/></operator><name pos:line="228" pos:column="22">state<pos:position pos:line="228" pos:column="27"/></name></name> <operator pos:line="228" pos:column="28">==<pos:position pos:line="228" pos:column="30"/></operator> <name pos:line="228" pos:column="31">BODY_CHUNK_TRAILER<pos:position pos:line="228" pos:column="49"/></name></expr>)<pos:position pos:line="228" pos:column="50"/></condition><then pos:line="228" pos:column="50"> <block pos:line="228" pos:column="51">{
                <comment type="block" pos:line="229" pos:column="17">/* Treat UNSET as DISABLE - trailers aren't merged by default */</comment>
                <return pos:line="230" pos:column="17">return <expr><call><name pos:line="230" pos:column="24">read_chunked_trailers<pos:position pos:line="230" pos:column="45"/></name><argument_list pos:line="230" pos:column="45">(<argument><expr><name pos:line="230" pos:column="46">ctx<pos:position pos:line="230" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="51">f<pos:position pos:line="230" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="54">b<pos:position pos:line="230" pos:column="55"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="231" pos:column="29">conf<pos:position pos:line="231" pos:column="33"/></name><operator pos:line="231" pos:column="33">-&gt;<pos:position pos:line="231" pos:column="38"/></operator><name pos:line="231" pos:column="35">merge_trailers<pos:position pos:line="231" pos:column="49"/></name></name> <operator pos:line="231" pos:column="50">==<pos:position pos:line="231" pos:column="52"/></operator> <name pos:line="231" pos:column="53">AP_MERGE_TRAILERS_ENABLE<pos:position pos:line="231" pos:column="77"/></name></expr></argument>)<pos:position pos:line="231" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="79"/></return>
            }<pos:position pos:line="232" pos:column="14"/></block></then></if>

            <break pos:line="234" pos:column="13">break;<pos:position pos:line="234" pos:column="19"/></break>
        }<pos:position pos:line="235" pos:column="10"/></block>
        <case pos:line="236" pos:column="9">case <expr><name pos:line="236" pos:column="14">BODY_NONE<pos:position pos:line="236" pos:column="23"/></name></expr>:<pos:position pos:line="236" pos:column="24"/></case>
        <case pos:line="237" pos:column="9">case <expr><name pos:line="237" pos:column="14">BODY_LENGTH<pos:position pos:line="237" pos:column="25"/></name></expr>:<pos:position pos:line="237" pos:column="26"/></case>
        <case pos:line="238" pos:column="9">case <expr><name pos:line="238" pos:column="14">BODY_CHUNK_DATA<pos:position pos:line="238" pos:column="29"/></name></expr>:<pos:position pos:line="238" pos:column="30"/></case> <block pos:line="238" pos:column="31">{

            <comment type="block" pos:line="240" pos:column="13">/* Ensure that the caller can not go over our boundary point. */</comment>
            <if pos:line="241" pos:column="13">if <condition pos:line="241" pos:column="16">(<expr><name><name pos:line="241" pos:column="17">ctx<pos:position pos:line="241" pos:column="20"/></name><operator pos:line="241" pos:column="20">-&gt;<pos:position pos:line="241" pos:column="25"/></operator><name pos:line="241" pos:column="22">state<pos:position pos:line="241" pos:column="27"/></name></name> <operator pos:line="241" pos:column="28">!=<pos:position pos:line="241" pos:column="30"/></operator> <name pos:line="241" pos:column="31">BODY_NONE<pos:position pos:line="241" pos:column="40"/></name> <operator pos:line="241" pos:column="41">&amp;&amp;<pos:position pos:line="241" pos:column="51"/></operator> <name><name pos:line="241" pos:column="44">ctx<pos:position pos:line="241" pos:column="47"/></name><operator pos:line="241" pos:column="47">-&gt;<pos:position pos:line="241" pos:column="52"/></operator><name pos:line="241" pos:column="49">remaining<pos:position pos:line="241" pos:column="58"/></name></name> <operator pos:line="241" pos:column="59">&lt;<pos:position pos:line="241" pos:column="63"/></operator> <name pos:line="241" pos:column="61">readbytes<pos:position pos:line="241" pos:column="70"/></name></expr>)<pos:position pos:line="241" pos:column="71"/></condition><then pos:line="241" pos:column="71"> <block pos:line="241" pos:column="72">{
                <expr_stmt><expr><name pos:line="242" pos:column="17">readbytes<pos:position pos:line="242" pos:column="26"/></name> <operator pos:line="242" pos:column="27">=<pos:position pos:line="242" pos:column="28"/></operator> <name><name pos:line="242" pos:column="29">ctx<pos:position pos:line="242" pos:column="32"/></name><operator pos:line="242" pos:column="32">-&gt;<pos:position pos:line="242" pos:column="37"/></operator><name pos:line="242" pos:column="34">remaining<pos:position pos:line="242" pos:column="43"/></name></name></expr>;<pos:position pos:line="242" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="243" pos:column="14"/></block></then></if>
            <if pos:line="244" pos:column="13">if <condition pos:line="244" pos:column="16">(<expr><name pos:line="244" pos:column="17">readbytes<pos:position pos:line="244" pos:column="26"/></name> <operator pos:line="244" pos:column="27">&gt;<pos:position pos:line="244" pos:column="31"/></operator> <literal type="number" pos:line="244" pos:column="29">0<pos:position pos:line="244" pos:column="30"/></literal></expr>)<pos:position pos:line="244" pos:column="31"/></condition><then pos:line="244" pos:column="31"> <block pos:line="244" pos:column="32">{
                <decl_stmt><decl><type><name pos:line="245" pos:column="17">apr_off_t<pos:position pos:line="245" pos:column="26"/></name></type> <name pos:line="245" pos:column="27">totalread<pos:position pos:line="245" pos:column="36"/></name></decl>;<pos:position pos:line="245" pos:column="37"/></decl_stmt>

                <expr_stmt><expr><name pos:line="247" pos:column="17">rv<pos:position pos:line="247" pos:column="19"/></name> <operator pos:line="247" pos:column="20">=<pos:position pos:line="247" pos:column="21"/></operator> <call><name pos:line="247" pos:column="22">ap_get_brigade<pos:position pos:line="247" pos:column="36"/></name><argument_list pos:line="247" pos:column="36">(<argument><expr><name><name pos:line="247" pos:column="37">f<pos:position pos:line="247" pos:column="38"/></name><operator pos:line="247" pos:column="38">-&gt;<pos:position pos:line="247" pos:column="43"/></operator><name pos:line="247" pos:column="40">next<pos:position pos:line="247" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="46">b<pos:position pos:line="247" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="49">mode<pos:position pos:line="247" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="55">block<pos:position pos:line="247" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="62">readbytes<pos:position pos:line="247" pos:column="71"/></name></expr></argument>)<pos:position pos:line="247" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="73"/></expr_stmt>

                <comment type="block" pos:line="249" pos:column="17">/* for timeout */</comment>
                <if pos:line="250" pos:column="17">if <condition pos:line="250" pos:column="20">(<expr><name pos:line="250" pos:column="21">block<pos:position pos:line="250" pos:column="26"/></name> <operator pos:line="250" pos:column="27">==<pos:position pos:line="250" pos:column="29"/></operator> <name pos:line="250" pos:column="30">APR_NONBLOCK_READ<pos:position pos:line="250" pos:column="47"/></name>
                        <operator pos:line="251" pos:column="25">&amp;&amp;<pos:position pos:line="251" pos:column="35"/></operator> <operator pos:line="251" pos:column="28">(<pos:position pos:line="251" pos:column="29"/></operator><operator pos:line="251" pos:column="29">(<pos:position pos:line="251" pos:column="30"/></operator><name pos:line="251" pos:column="30">rv<pos:position pos:line="251" pos:column="32"/></name> <operator pos:line="251" pos:column="33">==<pos:position pos:line="251" pos:column="35"/></operator> <name pos:line="251" pos:column="36">APR_SUCCESS<pos:position pos:line="251" pos:column="47"/></name> <operator pos:line="251" pos:column="48">&amp;&amp;<pos:position pos:line="251" pos:column="58"/></operator> <call><name pos:line="251" pos:column="51">APR_BRIGADE_EMPTY<pos:position pos:line="251" pos:column="68"/></name><argument_list pos:line="251" pos:column="68">(<argument><expr><name pos:line="251" pos:column="69">b<pos:position pos:line="251" pos:column="70"/></name></expr></argument>)<pos:position pos:line="251" pos:column="71"/></argument_list></call><operator pos:line="251" pos:column="71">)<pos:position pos:line="251" pos:column="72"/></operator>
                                <operator pos:line="252" pos:column="33">||<pos:position pos:line="252" pos:column="35"/></operator> <operator pos:line="252" pos:column="36">(<pos:position pos:line="252" pos:column="37"/></operator><call><name pos:line="252" pos:column="37">APR_STATUS_IS_EAGAIN<pos:position pos:line="252" pos:column="57"/></name><argument_list pos:line="252" pos:column="57">(<argument><expr><name pos:line="252" pos:column="58">rv<pos:position pos:line="252" pos:column="60"/></name></expr></argument>)<pos:position pos:line="252" pos:column="61"/></argument_list></call><operator pos:line="252" pos:column="61">)<pos:position pos:line="252" pos:column="62"/></operator><operator pos:line="252" pos:column="62">)<pos:position pos:line="252" pos:column="63"/></operator></expr>)<pos:position pos:line="252" pos:column="64"/></condition><then pos:line="252" pos:column="64"> <block pos:line="252" pos:column="65">{
                    <return pos:line="253" pos:column="21">return <expr><name pos:line="253" pos:column="28">APR_EAGAIN<pos:position pos:line="253" pos:column="38"/></name></expr>;<pos:position pos:line="253" pos:column="39"/></return>
                }<pos:position pos:line="254" pos:column="18"/></block></then></if>

                <if pos:line="256" pos:column="17">if <condition pos:line="256" pos:column="20">(<expr><name pos:line="256" pos:column="21">rv<pos:position pos:line="256" pos:column="23"/></name> <operator pos:line="256" pos:column="24">==<pos:position pos:line="256" pos:column="26"/></operator> <name pos:line="256" pos:column="27">APR_EOF<pos:position pos:line="256" pos:column="34"/></name> <operator pos:line="256" pos:column="35">&amp;&amp;<pos:position pos:line="256" pos:column="45"/></operator> <name><name pos:line="256" pos:column="38">ctx<pos:position pos:line="256" pos:column="41"/></name><operator pos:line="256" pos:column="41">-&gt;<pos:position pos:line="256" pos:column="46"/></operator><name pos:line="256" pos:column="43">state<pos:position pos:line="256" pos:column="48"/></name></name> <operator pos:line="256" pos:column="49">!=<pos:position pos:line="256" pos:column="51"/></operator> <name pos:line="256" pos:column="52">BODY_NONE<pos:position pos:line="256" pos:column="61"/></name>
                        <operator pos:line="257" pos:column="25">&amp;&amp;<pos:position pos:line="257" pos:column="35"/></operator> <name><name pos:line="257" pos:column="28">ctx<pos:position pos:line="257" pos:column="31"/></name><operator pos:line="257" pos:column="31">-&gt;<pos:position pos:line="257" pos:column="36"/></operator><name pos:line="257" pos:column="33">remaining<pos:position pos:line="257" pos:column="42"/></name></name> <operator pos:line="257" pos:column="43">&gt;<pos:position pos:line="257" pos:column="47"/></operator> <literal type="number" pos:line="257" pos:column="45">0<pos:position pos:line="257" pos:column="46"/></literal></expr>)<pos:position pos:line="257" pos:column="47"/></condition><then pos:line="257" pos:column="47"> <block pos:line="257" pos:column="48">{
                    <return pos:line="258" pos:column="21">return <expr><name pos:line="258" pos:column="28">APR_INCOMPLETE<pos:position pos:line="258" pos:column="42"/></name></expr>;<pos:position pos:line="258" pos:column="43"/></return>
                }<pos:position pos:line="259" pos:column="18"/></block></then></if>

                <if pos:line="261" pos:column="17">if <condition pos:line="261" pos:column="20">(<expr><name pos:line="261" pos:column="21">rv<pos:position pos:line="261" pos:column="23"/></name> <operator pos:line="261" pos:column="24">!=<pos:position pos:line="261" pos:column="26"/></operator> <name pos:line="261" pos:column="27">APR_SUCCESS<pos:position pos:line="261" pos:column="38"/></name></expr>)<pos:position pos:line="261" pos:column="39"/></condition><then pos:line="261" pos:column="39"> <block pos:line="261" pos:column="40">{
                    <return pos:line="262" pos:column="21">return <expr><name pos:line="262" pos:column="28">rv<pos:position pos:line="262" pos:column="30"/></name></expr>;<pos:position pos:line="262" pos:column="31"/></return>
                }<pos:position pos:line="263" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="265" pos:column="17">/* How many bytes did we just read? */</comment>
                <expr_stmt><expr><call><name pos:line="266" pos:column="17">apr_brigade_length<pos:position pos:line="266" pos:column="35"/></name><argument_list pos:line="266" pos:column="35">(<argument><expr><name pos:line="266" pos:column="36">b<pos:position pos:line="266" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="266" pos:column="39">0<pos:position pos:line="266" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="266" pos:column="42">&amp;<pos:position pos:line="266" pos:column="47"/></operator><name pos:line="266" pos:column="43">totalread<pos:position pos:line="266" pos:column="52"/></name></expr></argument>)<pos:position pos:line="266" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="54"/></expr_stmt>

                <comment type="block" pos:line="268" pos:column="17">/* If this happens, we have a bucket of unknown length.  Die because
                 * it means our assumptions have changed. */</comment>
                <expr_stmt><expr><call><name pos:line="270" pos:column="17">AP_DEBUG_ASSERT<pos:position pos:line="270" pos:column="32"/></name><argument_list pos:line="270" pos:column="32">(<argument><expr><name pos:line="270" pos:column="33">totalread<pos:position pos:line="270" pos:column="42"/></name> <operator pos:line="270" pos:column="43">&gt;=<pos:position pos:line="270" pos:column="48"/></operator> <literal type="number" pos:line="270" pos:column="46">0<pos:position pos:line="270" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="270" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="49"/></expr_stmt>

                <if pos:line="272" pos:column="17">if <condition pos:line="272" pos:column="20">(<expr><name><name pos:line="272" pos:column="21">ctx<pos:position pos:line="272" pos:column="24"/></name><operator pos:line="272" pos:column="24">-&gt;<pos:position pos:line="272" pos:column="29"/></operator><name pos:line="272" pos:column="26">state<pos:position pos:line="272" pos:column="31"/></name></name> <operator pos:line="272" pos:column="32">!=<pos:position pos:line="272" pos:column="34"/></operator> <name pos:line="272" pos:column="35">BODY_NONE<pos:position pos:line="272" pos:column="44"/></name></expr>)<pos:position pos:line="272" pos:column="45"/></condition><then pos:line="272" pos:column="45"> <block pos:line="272" pos:column="46">{
                    <expr_stmt><expr><name><name pos:line="273" pos:column="21">ctx<pos:position pos:line="273" pos:column="24"/></name><operator pos:line="273" pos:column="24">-&gt;<pos:position pos:line="273" pos:column="29"/></operator><name pos:line="273" pos:column="26">remaining<pos:position pos:line="273" pos:column="35"/></name></name> <operator pos:line="273" pos:column="36">-=<pos:position pos:line="273" pos:column="38"/></operator> <name pos:line="273" pos:column="39">totalread<pos:position pos:line="273" pos:column="48"/></name></expr>;<pos:position pos:line="273" pos:column="49"/></expr_stmt>
                    <if pos:line="274" pos:column="21">if <condition pos:line="274" pos:column="24">(<expr><name><name pos:line="274" pos:column="25">ctx<pos:position pos:line="274" pos:column="28"/></name><operator pos:line="274" pos:column="28">-&gt;<pos:position pos:line="274" pos:column="33"/></operator><name pos:line="274" pos:column="30">remaining<pos:position pos:line="274" pos:column="39"/></name></name> <operator pos:line="274" pos:column="40">&gt;<pos:position pos:line="274" pos:column="44"/></operator> <literal type="number" pos:line="274" pos:column="42">0<pos:position pos:line="274" pos:column="43"/></literal></expr>)<pos:position pos:line="274" pos:column="44"/></condition><then pos:line="274" pos:column="44"> <block pos:line="274" pos:column="45">{
                        <expr_stmt><expr><name pos:line="275" pos:column="25">e<pos:position pos:line="275" pos:column="26"/></name> <operator pos:line="275" pos:column="27">=<pos:position pos:line="275" pos:column="28"/></operator> <call><name pos:line="275" pos:column="29">APR_BRIGADE_LAST<pos:position pos:line="275" pos:column="45"/></name><argument_list pos:line="275" pos:column="45">(<argument><expr><name pos:line="275" pos:column="46">b<pos:position pos:line="275" pos:column="47"/></name></expr></argument>)<pos:position pos:line="275" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="49"/></expr_stmt>
                        <if pos:line="276" pos:column="25">if <condition pos:line="276" pos:column="28">(<expr><call><name pos:line="276" pos:column="29">APR_BUCKET_IS_EOS<pos:position pos:line="276" pos:column="46"/></name><argument_list pos:line="276" pos:column="46">(<argument><expr><name pos:line="276" pos:column="47">e<pos:position pos:line="276" pos:column="48"/></name></expr></argument>)<pos:position pos:line="276" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="276" pos:column="50"/></condition><then pos:line="276" pos:column="50"> <block pos:line="276" pos:column="51">{
                            <expr_stmt><expr><call><name pos:line="277" pos:column="29">apr_bucket_delete<pos:position pos:line="277" pos:column="46"/></name><argument_list pos:line="277" pos:column="46">(<argument><expr><name pos:line="277" pos:column="47">e<pos:position pos:line="277" pos:column="48"/></name></expr></argument>)<pos:position pos:line="277" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="50"/></expr_stmt>
                            <return pos:line="278" pos:column="29">return <expr><name pos:line="278" pos:column="36">APR_INCOMPLETE<pos:position pos:line="278" pos:column="50"/></name></expr>;<pos:position pos:line="278" pos:column="51"/></return>
                        }<pos:position pos:line="279" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="280" pos:column="22"/></block></then>
                    <elseif pos:line="281" pos:column="21">else <if pos:line="281" pos:column="26">if <condition pos:line="281" pos:column="29">(<expr><name><name pos:line="281" pos:column="30">ctx<pos:position pos:line="281" pos:column="33"/></name><operator pos:line="281" pos:column="33">-&gt;<pos:position pos:line="281" pos:column="38"/></operator><name pos:line="281" pos:column="35">state<pos:position pos:line="281" pos:column="40"/></name></name> <operator pos:line="281" pos:column="41">==<pos:position pos:line="281" pos:column="43"/></operator> <name pos:line="281" pos:column="44">BODY_CHUNK_DATA<pos:position pos:line="281" pos:column="59"/></name></expr>)<pos:position pos:line="281" pos:column="60"/></condition><then pos:line="281" pos:column="60"> <block pos:line="281" pos:column="61">{
                        <comment type="block" pos:line="282" pos:column="25">/* next chunk please */</comment>
                        <expr_stmt><expr><name><name pos:line="283" pos:column="25">ctx<pos:position pos:line="283" pos:column="28"/></name><operator pos:line="283" pos:column="28">-&gt;<pos:position pos:line="283" pos:column="33"/></operator><name pos:line="283" pos:column="30">state<pos:position pos:line="283" pos:column="35"/></name></name> <operator pos:line="283" pos:column="36">=<pos:position pos:line="283" pos:column="37"/></operator> <name pos:line="283" pos:column="38">BODY_CHUNK_END<pos:position pos:line="283" pos:column="52"/></name></expr>;<pos:position pos:line="283" pos:column="53"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="284" pos:column="25">ctx<pos:position pos:line="284" pos:column="28"/></name><operator pos:line="284" pos:column="28">-&gt;<pos:position pos:line="284" pos:column="33"/></operator><name pos:line="284" pos:column="30">chunk_used<pos:position pos:line="284" pos:column="40"/></name></name> <operator pos:line="284" pos:column="41">=<pos:position pos:line="284" pos:column="42"/></operator> <literal type="number" pos:line="284" pos:column="43">0<pos:position pos:line="284" pos:column="44"/></literal></expr>;<pos:position pos:line="284" pos:column="45"/></expr_stmt>
                    }<pos:position pos:line="285" pos:column="22"/></block></then></if></elseif></if>
                }<pos:position pos:line="286" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="288" pos:column="17">/* We have a limit in effect. */</comment>
                <if pos:line="289" pos:column="17">if <condition pos:line="289" pos:column="20">(<expr><name><name pos:line="289" pos:column="21">ctx<pos:position pos:line="289" pos:column="24"/></name><operator pos:line="289" pos:column="24">-&gt;<pos:position pos:line="289" pos:column="29"/></operator><name pos:line="289" pos:column="26">limit<pos:position pos:line="289" pos:column="31"/></name></name></expr>)<pos:position pos:line="289" pos:column="32"/></condition><then pos:line="289" pos:column="32"> <block pos:line="289" pos:column="33">{
                    <comment type="block" pos:line="290" pos:column="21">/* FIXME: Note that we might get slightly confused on
                     * chunked inputs as we'd need to compensate for the chunk
                     * lengths which may not really count.  This seems to be up
                     * for interpretation.
                     */</comment>
                    <expr_stmt><expr><name><name pos:line="295" pos:column="21">ctx<pos:position pos:line="295" pos:column="24"/></name><operator pos:line="295" pos:column="24">-&gt;<pos:position pos:line="295" pos:column="29"/></operator><name pos:line="295" pos:column="26">limit_used<pos:position pos:line="295" pos:column="36"/></name></name> <operator pos:line="295" pos:column="37">+=<pos:position pos:line="295" pos:column="39"/></operator> <name pos:line="295" pos:column="40">totalread<pos:position pos:line="295" pos:column="49"/></name></expr>;<pos:position pos:line="295" pos:column="50"/></expr_stmt>
                    <if pos:line="296" pos:column="21">if <condition pos:line="296" pos:column="24">(<expr><name><name pos:line="296" pos:column="25">ctx<pos:position pos:line="296" pos:column="28"/></name><operator pos:line="296" pos:column="28">-&gt;<pos:position pos:line="296" pos:column="33"/></operator><name pos:line="296" pos:column="30">limit<pos:position pos:line="296" pos:column="35"/></name></name> <operator pos:line="296" pos:column="36">&lt;<pos:position pos:line="296" pos:column="40"/></operator> <name><name pos:line="296" pos:column="38">ctx<pos:position pos:line="296" pos:column="41"/></name><operator pos:line="296" pos:column="41">-&gt;<pos:position pos:line="296" pos:column="46"/></operator><name pos:line="296" pos:column="43">limit_used<pos:position pos:line="296" pos:column="53"/></name></name></expr>)<pos:position pos:line="296" pos:column="54"/></condition><then pos:line="296" pos:column="54"> <block pos:line="296" pos:column="55">{
                        <expr_stmt><expr><call><name pos:line="297" pos:column="25">ap_log_rerror<pos:position pos:line="297" pos:column="38"/></name><argument_list pos:line="297" pos:column="38">(<argument><expr><name pos:line="297" pos:column="39">APLOG_MARK<pos:position pos:line="297" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="51">APLOG_INFO<pos:position pos:line="297" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="297" pos:column="63">0<pos:position pos:line="297" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="297" pos:column="66">f<pos:position pos:line="297" pos:column="67"/></name><operator pos:line="297" pos:column="67">-&gt;<pos:position pos:line="297" pos:column="72"/></operator><name pos:line="297" pos:column="69">r<pos:position pos:line="297" pos:column="70"/></name></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="298" pos:column="39">"Read content length of "<pos:position pos:line="298" pos:column="64"/></literal>
                                      <literal type="string" pos:line="299" pos:column="39">"%"<pos:position pos:line="299" pos:column="42"/></literal> <name pos:line="299" pos:column="43">APR_OFF_T_FMT<pos:position pos:line="299" pos:column="56"/></name> <literal type="string" pos:line="299" pos:column="57">" is larger than the "<pos:position pos:line="299" pos:column="79"/></literal>
                                      <literal type="string" pos:line="300" pos:column="39">"configured limit of %"<pos:position pos:line="300" pos:column="62"/></literal> <name pos:line="300" pos:column="63">APR_OFF_T_FMT<pos:position pos:line="300" pos:column="76"/></name></expr></argument>,
                                      <argument><expr><name><name pos:line="301" pos:column="39">ctx<pos:position pos:line="301" pos:column="42"/></name><operator pos:line="301" pos:column="42">-&gt;<pos:position pos:line="301" pos:column="47"/></operator><name pos:line="301" pos:column="44">limit_used<pos:position pos:line="301" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="301" pos:column="56">ctx<pos:position pos:line="301" pos:column="59"/></name><operator pos:line="301" pos:column="59">-&gt;<pos:position pos:line="301" pos:column="64"/></operator><name pos:line="301" pos:column="61">limit<pos:position pos:line="301" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="301" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="68"/></expr_stmt>
                        <return pos:line="302" pos:column="25">return <expr><call><name pos:line="302" pos:column="32">bail_out_on_error<pos:position pos:line="302" pos:column="49"/></name><argument_list pos:line="302" pos:column="49">(<argument><expr><name pos:line="302" pos:column="50">ctx<pos:position pos:line="302" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="302" pos:column="55">f<pos:position pos:line="302" pos:column="56"/></name></expr></argument>,
                                                 <argument><expr><name pos:line="303" pos:column="50">HTTP_REQUEST_ENTITY_TOO_LARGE<pos:position pos:line="303" pos:column="79"/></name></expr></argument>)<pos:position pos:line="303" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="81"/></return>
                    }<pos:position pos:line="304" pos:column="22"/></block></then></if>
                }<pos:position pos:line="305" pos:column="18"/></block></then></if>
            }<pos:position pos:line="306" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="308" pos:column="13">/* If we have no more bytes remaining on a C-L request,
             * save the caller a round trip to discover EOS.
             */</comment>
            <if pos:line="311" pos:column="13">if <condition pos:line="311" pos:column="16">(<expr><name><name pos:line="311" pos:column="17">ctx<pos:position pos:line="311" pos:column="20"/></name><operator pos:line="311" pos:column="20">-&gt;<pos:position pos:line="311" pos:column="25"/></operator><name pos:line="311" pos:column="22">state<pos:position pos:line="311" pos:column="27"/></name></name> <operator pos:line="311" pos:column="28">==<pos:position pos:line="311" pos:column="30"/></operator> <name pos:line="311" pos:column="31">BODY_LENGTH<pos:position pos:line="311" pos:column="42"/></name> <operator pos:line="311" pos:column="43">&amp;&amp;<pos:position pos:line="311" pos:column="53"/></operator> <name><name pos:line="311" pos:column="46">ctx<pos:position pos:line="311" pos:column="49"/></name><operator pos:line="311" pos:column="49">-&gt;<pos:position pos:line="311" pos:column="54"/></operator><name pos:line="311" pos:column="51">remaining<pos:position pos:line="311" pos:column="60"/></name></name> <operator pos:line="311" pos:column="61">==<pos:position pos:line="311" pos:column="63"/></operator> <literal type="number" pos:line="311" pos:column="64">0<pos:position pos:line="311" pos:column="65"/></literal></expr>)<pos:position pos:line="311" pos:column="66"/></condition><then pos:line="311" pos:column="66"> <block pos:line="311" pos:column="67">{
                <expr_stmt><expr><name pos:line="312" pos:column="17">e<pos:position pos:line="312" pos:column="18"/></name> <operator pos:line="312" pos:column="19">=<pos:position pos:line="312" pos:column="20"/></operator> <call><name pos:line="312" pos:column="21">apr_bucket_eos_create<pos:position pos:line="312" pos:column="42"/></name><argument_list pos:line="312" pos:column="42">(<argument><expr><name><name pos:line="312" pos:column="43">f<pos:position pos:line="312" pos:column="44"/></name><operator pos:line="312" pos:column="44">-&gt;<pos:position pos:line="312" pos:column="49"/></operator><name pos:line="312" pos:column="46">c<pos:position pos:line="312" pos:column="47"/></name><operator pos:line="312" pos:column="47">-&gt;<pos:position pos:line="312" pos:column="52"/></operator><name pos:line="312" pos:column="49">bucket_alloc<pos:position pos:line="312" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="312" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="313" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="313" pos:column="40"/></name><argument_list pos:line="313" pos:column="40">(<argument><expr><name pos:line="313" pos:column="41">b<pos:position pos:line="313" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="44">e<pos:position pos:line="313" pos:column="45"/></name></expr></argument>)<pos:position pos:line="313" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="314" pos:column="17">ctx<pos:position pos:line="314" pos:column="20"/></name><operator pos:line="314" pos:column="20">-&gt;<pos:position pos:line="314" pos:column="25"/></operator><name pos:line="314" pos:column="22">eos_sent<pos:position pos:line="314" pos:column="30"/></name></name> <operator pos:line="314" pos:column="31">=<pos:position pos:line="314" pos:column="32"/></operator> <literal type="number" pos:line="314" pos:column="33">1<pos:position pos:line="314" pos:column="34"/></literal></expr>;<pos:position pos:line="314" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="315" pos:column="14"/></block></then></if>

            <break pos:line="317" pos:column="13">break;<pos:position pos:line="317" pos:column="19"/></break>
        }<pos:position pos:line="318" pos:column="10"/></block>
        <case pos:line="319" pos:column="9">case <expr><name pos:line="319" pos:column="14">BODY_CHUNK_TRAILER<pos:position pos:line="319" pos:column="32"/></name></expr>:<pos:position pos:line="319" pos:column="33"/></case> <block pos:line="319" pos:column="34">{

            <expr_stmt><expr><name pos:line="321" pos:column="13">rv<pos:position pos:line="321" pos:column="15"/></name> <operator pos:line="321" pos:column="16">=<pos:position pos:line="321" pos:column="17"/></operator> <call><name pos:line="321" pos:column="18">ap_get_brigade<pos:position pos:line="321" pos:column="32"/></name><argument_list pos:line="321" pos:column="32">(<argument><expr><name><name pos:line="321" pos:column="33">f<pos:position pos:line="321" pos:column="34"/></name><operator pos:line="321" pos:column="34">-&gt;<pos:position pos:line="321" pos:column="39"/></operator><name pos:line="321" pos:column="36">next<pos:position pos:line="321" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="42">b<pos:position pos:line="321" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="45">mode<pos:position pos:line="321" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="51">block<pos:position pos:line="321" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="58">readbytes<pos:position pos:line="321" pos:column="67"/></name></expr></argument>)<pos:position pos:line="321" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="69"/></expr_stmt>

            <comment type="block" pos:line="323" pos:column="13">/* for timeout */</comment>
            <if pos:line="324" pos:column="13">if <condition pos:line="324" pos:column="16">(<expr><name pos:line="324" pos:column="17">block<pos:position pos:line="324" pos:column="22"/></name> <operator pos:line="324" pos:column="23">==<pos:position pos:line="324" pos:column="25"/></operator> <name pos:line="324" pos:column="26">APR_NONBLOCK_READ<pos:position pos:line="324" pos:column="43"/></name>
                    <operator pos:line="325" pos:column="21">&amp;&amp;<pos:position pos:line="325" pos:column="31"/></operator> <operator pos:line="325" pos:column="24">(<pos:position pos:line="325" pos:column="25"/></operator><operator pos:line="325" pos:column="25">(<pos:position pos:line="325" pos:column="26"/></operator><name pos:line="325" pos:column="26">rv<pos:position pos:line="325" pos:column="28"/></name> <operator pos:line="325" pos:column="29">==<pos:position pos:line="325" pos:column="31"/></operator> <name pos:line="325" pos:column="32">APR_SUCCESS<pos:position pos:line="325" pos:column="43"/></name> <operator pos:line="325" pos:column="44">&amp;&amp;<pos:position pos:line="325" pos:column="54"/></operator> <call><name pos:line="325" pos:column="47">APR_BRIGADE_EMPTY<pos:position pos:line="325" pos:column="64"/></name><argument_list pos:line="325" pos:column="64">(<argument><expr><name pos:line="325" pos:column="65">b<pos:position pos:line="325" pos:column="66"/></name></expr></argument>)<pos:position pos:line="325" pos:column="67"/></argument_list></call><operator pos:line="325" pos:column="67">)<pos:position pos:line="325" pos:column="68"/></operator>
                            <operator pos:line="326" pos:column="29">||<pos:position pos:line="326" pos:column="31"/></operator> <operator pos:line="326" pos:column="32">(<pos:position pos:line="326" pos:column="33"/></operator><call><name pos:line="326" pos:column="33">APR_STATUS_IS_EAGAIN<pos:position pos:line="326" pos:column="53"/></name><argument_list pos:line="326" pos:column="53">(<argument><expr><name pos:line="326" pos:column="54">rv<pos:position pos:line="326" pos:column="56"/></name></expr></argument>)<pos:position pos:line="326" pos:column="57"/></argument_list></call><operator pos:line="326" pos:column="57">)<pos:position pos:line="326" pos:column="58"/></operator><operator pos:line="326" pos:column="58">)<pos:position pos:line="326" pos:column="59"/></operator></expr>)<pos:position pos:line="326" pos:column="60"/></condition><then pos:line="326" pos:column="60"> <block pos:line="326" pos:column="61">{
                <return pos:line="327" pos:column="17">return <expr><name pos:line="327" pos:column="24">APR_EAGAIN<pos:position pos:line="327" pos:column="34"/></name></expr>;<pos:position pos:line="327" pos:column="35"/></return>
            }<pos:position pos:line="328" pos:column="14"/></block></then></if>

            <if pos:line="330" pos:column="13">if <condition pos:line="330" pos:column="16">(<expr><name pos:line="330" pos:column="17">rv<pos:position pos:line="330" pos:column="19"/></name> <operator pos:line="330" pos:column="20">!=<pos:position pos:line="330" pos:column="22"/></operator> <name pos:line="330" pos:column="23">APR_SUCCESS<pos:position pos:line="330" pos:column="34"/></name></expr>)<pos:position pos:line="330" pos:column="35"/></condition><then pos:line="330" pos:column="35"> <block pos:line="330" pos:column="36">{
                <return pos:line="331" pos:column="17">return <expr><name pos:line="331" pos:column="24">rv<pos:position pos:line="331" pos:column="26"/></name></expr>;<pos:position pos:line="331" pos:column="27"/></return>
            }<pos:position pos:line="332" pos:column="14"/></block></then></if>

            <break pos:line="334" pos:column="13">break;<pos:position pos:line="334" pos:column="19"/></break>
        }<pos:position pos:line="335" pos:column="10"/></block>
        <default pos:line="336" pos:column="9">default:<pos:position pos:line="336" pos:column="17"/></default> <block pos:line="336" pos:column="18">{
            <comment type="block" pos:line="337" pos:column="13">/* Should not happen */</comment>
            <expr_stmt><expr><call><name pos:line="338" pos:column="13">ap_log_rerror<pos:position pos:line="338" pos:column="26"/></name><argument_list pos:line="338" pos:column="26">(<argument><expr><name pos:line="338" pos:column="27">APLOG_MARK<pos:position pos:line="338" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="39">APLOG_INFO<pos:position pos:line="338" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="338" pos:column="51">0<pos:position pos:line="338" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="338" pos:column="54">f<pos:position pos:line="338" pos:column="55"/></name><operator pos:line="338" pos:column="55">-&gt;<pos:position pos:line="338" pos:column="60"/></operator><name pos:line="338" pos:column="57">r<pos:position pos:line="338" pos:column="58"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="339" pos:column="27">"Unexpected body state (%i)"<pos:position pos:line="339" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="339" pos:column="57">(<pos:position pos:line="339" pos:column="58"/></operator><name pos:line="339" pos:column="58">int<pos:position pos:line="339" pos:column="61"/></name><operator pos:line="339" pos:column="61">)<pos:position pos:line="339" pos:column="62"/></operator><name><name pos:line="339" pos:column="62">ctx<pos:position pos:line="339" pos:column="65"/></name><operator pos:line="339" pos:column="65">-&gt;<pos:position pos:line="339" pos:column="70"/></operator><name pos:line="339" pos:column="67">state<pos:position pos:line="339" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="339" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="74"/></expr_stmt>
            <return pos:line="340" pos:column="13">return <expr><name pos:line="340" pos:column="20">APR_EGENERAL<pos:position pos:line="340" pos:column="32"/></name></expr>;<pos:position pos:line="340" pos:column="33"/></return>
        }<pos:position pos:line="341" pos:column="10"/></block>
        }<pos:position pos:line="342" pos:column="10"/></block></switch>

    }<pos:position pos:line="344" pos:column="6"/></block> while <condition pos:line="344" pos:column="13">(<expr><name pos:line="344" pos:column="14">again<pos:position pos:line="344" pos:column="19"/></name></expr>)<pos:position pos:line="344" pos:column="20"/></condition>;<pos:position pos:line="344" pos:column="21"/></do>

    <return pos:line="346" pos:column="5">return <expr><name pos:line="346" pos:column="12">APR_SUCCESS<pos:position pos:line="346" pos:column="23"/></name></expr>;<pos:position pos:line="346" pos:column="24"/></return>
}<pos:position pos:line="347" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5315.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">__stdcall<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">service_nt_main_fn<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">DWORD<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">argc<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">LPTSTR<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">argv<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">ignored<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">nt_service_ctx_t<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">ctx<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="30">globdat<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* args and service names live in the same pool */</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">mpm_service_set_name<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><name><name pos:line="7" pos:column="26">mpm_new_argv<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">pool<pos:position pos:line="7" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="46">&amp;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="47">ignored<pos:position pos:line="7" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="56">argv<pos:position pos:line="7" pos:column="60"/></name><index pos:line="7" pos:column="60">[<expr><literal type="number" pos:line="7" pos:column="61">0<pos:position pos:line="7" pos:column="62"/></literal></expr>]<pos:position pos:line="7" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memset<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><operator pos:line="9" pos:column="12">&amp;<pos:position pos:line="9" pos:column="17"/></operator><name><name pos:line="9" pos:column="13">ctx<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">ssStatus<pos:position pos:line="9" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="31">sizeof<argument_list pos:line="9" pos:column="37">(<argument><expr><name><name pos:line="9" pos:column="38">ctx<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">ssStatus<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">ctx<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">ssStatus<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">dwServiceType<pos:position pos:line="10" pos:column="32"/></name></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">SERVICE_WIN32_OWN_PROCESS<pos:position pos:line="10" pos:column="60"/></name></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">ctx<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">ssStatus<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">dwCurrentState<pos:position pos:line="11" pos:column="33"/></name></name> <operator pos:line="11" pos:column="34">=<pos:position pos:line="11" pos:column="35"/></operator> <name pos:line="11" pos:column="36">SERVICE_START_PENDING<pos:position pos:line="11" pos:column="57"/></name></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">ctx<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">-&gt;<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="10">ssStatus<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">dwCheckPoint<pos:position pos:line="12" pos:column="31"/></name></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">1<pos:position pos:line="12" pos:column="35"/></literal></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* ###: utf-ize */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name><name pos:line="15" pos:column="11">ctx<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">hServiceStatus<pos:position pos:line="15" pos:column="30"/></name></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <call><name pos:line="15" pos:column="33">RegisterServiceCtrlHandlerEx<pos:position pos:line="15" pos:column="61"/></name><argument_list pos:line="15" pos:column="61">(<argument><expr><name><name pos:line="15" pos:column="62">argv<pos:position pos:line="15" pos:column="66"/></name><index pos:line="15" pos:column="66">[<expr><literal type="number" pos:line="15" pos:column="67">0<pos:position pos:line="15" pos:column="68"/></literal></expr>]<pos:position pos:line="15" pos:column="69"/></index></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="71">service_nt_ctrl<pos:position pos:line="15" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="88">ctx<pos:position pos:line="15" pos:column="91"/></name></expr></argument>)<pos:position pos:line="15" pos:column="92"/></argument_list></call><operator pos:line="15" pos:column="92">)<pos:position pos:line="15" pos:column="93"/></operator></expr>)<pos:position pos:line="15" pos:column="94"/></condition><then pos:line="15" pos:column="94">
    <block pos:line="16" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ap_log_error<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">APLOG_MARK<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">APLOG_ERR<pos:position pos:line="17" pos:column="43"/></name> <operator pos:line="17" pos:column="44">|<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="46">APLOG_STARTUP<pos:position pos:line="17" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="61">apr_get_os_error<pos:position pos:line="17" pos:column="77"/></name><argument_list pos:line="17" pos:column="77">()<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr></argument>,
                     <argument><expr><name pos:line="18" pos:column="22">NULL<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="28">"Failure registering service handler"<pos:position pos:line="18" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="67"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* Report status, no errors, and buy 3 more seconds */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ReportStatusToSCMgr<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">SERVICE_START_PENDING<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="48">30000<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">ctx<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* We need to append all the command arguments passed via StartService()
     * to our running service... which just got here via the SCM...
     * but we hvae no interest in argv[0] for the mpm_new_argv list.
     */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">argc<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">&gt;<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18">
    <block pos:line="30" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">char<pos:position pos:line="31" pos:column="13"/></name> <modifier pos:line="31" pos:column="14">*<pos:position pos:line="31" pos:column="15"/></modifier><modifier pos:line="31" pos:column="15">*<pos:position pos:line="31" pos:column="16"/></modifier></type><name pos:line="31" pos:column="16">cmb_data<pos:position pos:line="31" pos:column="24"/></name></decl>;<pos:position pos:line="31" pos:column="25"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="33" pos:column="9">mpm_new_argv<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">nalloc<pos:position pos:line="33" pos:column="29"/></name></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="32">mpm_new_argv<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">-&gt;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="46">nelts<pos:position pos:line="33" pos:column="51"/></name></name> <operator pos:line="33" pos:column="52">+<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="54">argc<pos:position pos:line="33" pos:column="58"/></name> <operator pos:line="33" pos:column="59">-<pos:position pos:line="33" pos:column="60"/></operator> <literal type="number" pos:line="33" pos:column="61">1<pos:position pos:line="33" pos:column="62"/></literal></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">cmb_data<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <call><name pos:line="34" pos:column="20">malloc<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name><name pos:line="34" pos:column="27">mpm_new_argv<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">-&gt;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="41">nalloc<pos:position pos:line="34" pos:column="47"/></name></name> <operator pos:line="34" pos:column="48">*<pos:position pos:line="34" pos:column="49"/></operator> <sizeof pos:line="34" pos:column="50">sizeof<argument_list pos:line="34" pos:column="56">(<argument><expr><specifier pos:line="34" pos:column="57">const<pos:position pos:line="34" pos:column="62"/></specifier> <name pos:line="34" pos:column="63">char<pos:position pos:line="34" pos:column="67"/></name> <operator pos:line="34" pos:column="68">*<pos:position pos:line="34" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>

        <comment type="block" pos:line="36" pos:column="9">/* mpm_new_argv remains first (of lower significance) */</comment>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">memcpy<pos:position pos:line="37" pos:column="15"/></name> <argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">cmb_data<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="27">mpm_new_argv<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">elts<pos:position pos:line="37" pos:column="45"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="38" pos:column="17">mpm_new_argv<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">-&gt;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="31">elt_size<pos:position pos:line="38" pos:column="39"/></name></name> <operator pos:line="38" pos:column="40">*<pos:position pos:line="38" pos:column="41"/></operator> <name><name pos:line="38" pos:column="42">mpm_new_argv<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">-&gt;<pos:position pos:line="38" pos:column="59"/></operator><name pos:line="38" pos:column="56">nelts<pos:position pos:line="38" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt>

        <comment type="block" pos:line="40" pos:column="9">/* Service args follow from StartService() invocation */</comment>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">memcpy<pos:position pos:line="41" pos:column="15"/></name> <argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">cmb_data<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">+<pos:position pos:line="41" pos:column="27"/></operator> <name><name pos:line="41" pos:column="28">mpm_new_argv<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">-&gt;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="42">nelts<pos:position pos:line="41" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">argv<pos:position pos:line="41" pos:column="53"/></name> <operator pos:line="41" pos:column="54">+<pos:position pos:line="41" pos:column="55"/></operator> <literal type="number" pos:line="41" pos:column="56">1<pos:position pos:line="41" pos:column="57"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="42" pos:column="17">mpm_new_argv<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">-&gt;<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="31">elt_size<pos:position pos:line="42" pos:column="39"/></name></name> <operator pos:line="42" pos:column="40">*<pos:position pos:line="42" pos:column="41"/></operator> <operator pos:line="42" pos:column="42">(<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">argc<pos:position pos:line="42" pos:column="47"/></name> <operator pos:line="42" pos:column="48">-<pos:position pos:line="42" pos:column="49"/></operator> <literal type="number" pos:line="42" pos:column="50">1<pos:position pos:line="42" pos:column="51"/></literal><operator pos:line="42" pos:column="51">)<pos:position pos:line="42" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>

        <comment type="block" pos:line="44" pos:column="9">/* The replacement arg list is complete */</comment>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">mpm_new_argv<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">elts<pos:position pos:line="45" pos:column="27"/></name></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <operator pos:line="45" pos:column="30">(<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="31">char<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">*<pos:position pos:line="45" pos:column="37"/></operator><operator pos:line="45" pos:column="37">)<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">cmb_data<pos:position pos:line="45" pos:column="46"/></name></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">mpm_new_argv<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">-&gt;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="23">nelts<pos:position pos:line="46" pos:column="28"/></name></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <name><name pos:line="46" pos:column="31">mpm_new_argv<pos:position pos:line="46" pos:column="43"/></name><operator pos:line="46" pos:column="43">-&gt;<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="45">nalloc<pos:position pos:line="46" pos:column="51"/></name></name></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="49" pos:column="5">/* Let the main thread continue now... but hang on to the
     * signal_monitor event so we can take further action
     */</comment>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">SetEvent<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><name><name pos:line="52" pos:column="14">ctx<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">service_init<pos:position pos:line="52" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">WaitForSingleObject<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name><name pos:line="54" pos:column="25">ctx<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">-&gt;<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="30">service_term<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="44">INFINITE<pos:position pos:line="54" pos:column="52"/></name></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

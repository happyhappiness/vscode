<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3061.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
    <name pos:line="2" pos:column="5">add_pass<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">cmd_parms<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">cmd<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">void<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">dummy<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">arg<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">is_regex<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">server_rec<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">s<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">cmd<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">server<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">proxy_server_conf<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">conf<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">=
    <expr><operator pos:line="6" pos:column="5">(<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">proxy_server_conf<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></operator><operator pos:line="6" pos:column="25">)<pos:position pos:line="6" pos:column="26"/></operator> <call><name pos:line="6" pos:column="27">ap_get_module_config<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><name><name pos:line="6" pos:column="48">s<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">module_config<pos:position pos:line="6" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="66">&amp;<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="67">proxy_module<pos:position pos:line="6" pos:column="79"/></name></expr></argument>)<pos:position pos:line="6" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="81"/></decl_stmt>
    struct <expr_stmt><expr><name pos:line="7" pos:column="12">proxy_alias<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">new<pos:position pos:line="7" pos:column="28"/></operator></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">f<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name><name pos:line="8" pos:column="15">cmd<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">path<pos:position pos:line="8" pos:column="24"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">r<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">word<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_table_t<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">params<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><call><name pos:line="11" pos:column="27">apr_table_make<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name><name pos:line="11" pos:column="42">cmd<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">-&gt;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="47">pool<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="53">5<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">apr_array_header_t<pos:position pos:line="12" pos:column="29"/></name> <modifier pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></modifier></type><name pos:line="12" pos:column="31">arr<pos:position pos:line="12" pos:column="34"/></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">apr_table_entry_t<pos:position pos:line="13" pos:column="28"/></name> <modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier></type><name pos:line="13" pos:column="30">elts<pos:position pos:line="13" pos:column="34"/></name></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">use_regex<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><name pos:line="15" pos:column="21">is_regex<pos:position pos:line="15" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">unsigned<pos:position pos:line="16" pos:column="13"/></name> <name pos:line="16" pos:column="14">int<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">flags<pos:position pos:line="16" pos:column="23"/></name> <init pos:line="16" pos:column="24">= <expr><literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>

    <while pos:line="18" pos:column="5">while <condition pos:line="18" pos:column="11">(<expr><operator pos:line="18" pos:column="12">*<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">arg<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition> <block pos:line="18" pos:column="18">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">word<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">ap_getword_conf<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name><name pos:line="19" pos:column="32">cmd<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">pool<pos:position pos:line="19" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="43">&amp;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="44">arg<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">f<pos:position pos:line="20" pos:column="15"/></name></expr>)<pos:position pos:line="20" pos:column="16"/></condition><then pos:line="20" pos:column="16"> <block pos:line="20" pos:column="17">{
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><operator pos:line="21" pos:column="17">!<pos:position pos:line="21" pos:column="18"/></operator><call><name pos:line="21" pos:column="18">strcmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">word<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">"~"<pos:position pos:line="21" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36"> <block pos:line="21" pos:column="37">{
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">is_regex<pos:position pos:line="22" pos:column="29"/></name></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30"> <block pos:line="22" pos:column="31">{
                    <return pos:line="23" pos:column="21">return <expr><literal type="string" pos:line="23" pos:column="28">"ProxyPassMatch invalid syntax ('~' usage)."<pos:position pos:line="23" pos:column="72"/></literal></expr>;<pos:position pos:line="23" pos:column="73"/></return>
                }<pos:position pos:line="24" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="25" pos:column="17">use_regex<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <literal type="number" pos:line="25" pos:column="29">1<pos:position pos:line="25" pos:column="30"/></literal></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
                <continue pos:line="26" pos:column="17">continue;<pos:position pos:line="26" pos:column="26"/></continue>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="28" pos:column="13">f<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">word<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then>
        <elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><operator pos:line="30" pos:column="18">!<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">r<pos:position pos:line="30" pos:column="20"/></name></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21"> <block pos:line="30" pos:column="22">{
            <expr_stmt><expr><name pos:line="31" pos:column="13">r<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">word<pos:position pos:line="31" pos:column="21"/></name></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><operator pos:line="33" pos:column="18">!<pos:position pos:line="33" pos:column="19"/></operator><call><name pos:line="33" pos:column="19">strcasecmp<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">word<pos:position pos:line="33" pos:column="34"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="33" pos:column="35">"nocanon"<pos:position pos:line="33" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="46"/></condition><then pos:line="33" pos:column="46"> <block pos:line="33" pos:column="47">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">flags<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">|=<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="22">PROXYPASS_NOCANON<pos:position pos:line="34" pos:column="39"/></name></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="36" pos:column="9">else <if pos:line="36" pos:column="14">if <condition pos:line="36" pos:column="17">(<expr><operator pos:line="36" pos:column="18">!<pos:position pos:line="36" pos:column="19"/></operator><call><name pos:line="36" pos:column="19">strcasecmp<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">word<pos:position pos:line="36" pos:column="34"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="35">"interpolate"<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50"> <block pos:line="36" pos:column="51">{
            <expr_stmt><expr><name pos:line="37" pos:column="13">flags<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">|=<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="22">PROXYPASS_INTERPOLATE<pos:position pos:line="37" pos:column="43"/></name></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if></elseif>
        <else pos:line="39" pos:column="9">else <block pos:line="39" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">char<pos:position pos:line="40" pos:column="17"/></name> <modifier pos:line="40" pos:column="18">*<pos:position pos:line="40" pos:column="19"/></modifier></type><name pos:line="40" pos:column="19">val<pos:position pos:line="40" pos:column="22"/></name> <init pos:line="40" pos:column="23">= <expr><call><name pos:line="40" pos:column="25">strchr<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">word<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="40" pos:column="38">'='<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="43"/></decl_stmt>
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><operator pos:line="41" pos:column="17">!<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">val<pos:position pos:line="41" pos:column="21"/></name></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22"> <block pos:line="41" pos:column="23">{
                <if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name><name pos:line="42" pos:column="21">cmd<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">-&gt;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="26">path<pos:position pos:line="42" pos:column="30"/></name></name></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
                    <if pos:line="43" pos:column="21">if <condition pos:line="43" pos:column="24">(<expr><operator pos:line="43" pos:column="25">*<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">r<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">==<pos:position pos:line="43" pos:column="30"/></operator> <literal type="char" pos:line="43" pos:column="31">'/'<pos:position pos:line="43" pos:column="34"/></literal></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35"> <block pos:line="43" pos:column="36">{
                        <return pos:line="44" pos:column="25">return <expr><literal type="string" pos:line="44" pos:column="32">"ProxyPass|ProxyPassMatch can not have a path when defined in "<pos:position pos:line="44" pos:column="95"/></literal>
                               <literal type="string" pos:line="45" pos:column="32">"a location."<pos:position pos:line="45" pos:column="45"/></literal></expr>;<pos:position pos:line="45" pos:column="46"/></return>
                    }<pos:position pos:line="46" pos:column="22"/></block></then>
                    <else pos:line="47" pos:column="21">else <block pos:line="47" pos:column="26">{
                        <return pos:line="48" pos:column="25">return <expr><literal type="string" pos:line="48" pos:column="32">"Invalid ProxyPass|ProxyPassMatch parameter. Parameter must "<pos:position pos:line="48" pos:column="93"/></literal>
                               <literal type="string" pos:line="49" pos:column="32">"be in the form 'key=value'."<pos:position pos:line="49" pos:column="61"/></literal></expr>;<pos:position pos:line="49" pos:column="62"/></return>
                    }<pos:position pos:line="50" pos:column="22"/></block></else></if>
                }<pos:position pos:line="51" pos:column="18"/></block></then>
                <else pos:line="52" pos:column="17">else <block pos:line="52" pos:column="22">{
                    <return pos:line="53" pos:column="21">return <expr><literal type="string" pos:line="53" pos:column="28">"Invalid ProxyPass|ProxyPassMatch parameter. Parameter must be "<pos:position pos:line="53" pos:column="92"/></literal>
                           <literal type="string" pos:line="54" pos:column="28">"in the form 'key=value'."<pos:position pos:line="54" pos:column="54"/></literal></expr>;<pos:position pos:line="54" pos:column="55"/></return>
                }<pos:position pos:line="55" pos:column="18"/></block></else></if>
            }<pos:position pos:line="56" pos:column="14"/></block></then>
            <else pos:line="57" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><operator pos:line="58" pos:column="17">*<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">val<pos:position pos:line="58" pos:column="21"/></name><operator pos:line="58" pos:column="21">++<pos:position pos:line="58" pos:column="23"/></operator> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <literal type="char" pos:line="58" pos:column="26">'\0'<pos:position pos:line="58" pos:column="30"/></literal></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt></block></else></if>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">apr_table_setn<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">params<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">word<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="42">val<pos:position pos:line="59" pos:column="45"/></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></else></if>
    }<pos:position pos:line="61" pos:column="6"/></block></while><empty_stmt pos:line="61" pos:column="6">;<pos:position pos:line="61" pos:column="7"/></empty_stmt>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">r<pos:position pos:line="63" pos:column="10"/></name> <operator pos:line="63" pos:column="11">==<pos:position pos:line="63" pos:column="13"/></operator> <name pos:line="63" pos:column="14">NULL<pos:position pos:line="63" pos:column="18"/></name></expr>)<pos:position pos:line="63" pos:column="19"/></condition><then pos:line="63" pos:column="19">
        <block type="pseudo"><return pos:line="64" pos:column="9">return <expr><literal type="string" pos:line="64" pos:column="16">"ProxyPass|ProxyPassMatch needs a path when not defined in a location"<pos:position pos:line="64" pos:column="86"/></literal></expr>;<pos:position pos:line="64" pos:column="87"/></return></block></then></if>

    <expr_stmt><expr><operator pos:line="66" pos:column="5">new<pos:position pos:line="66" pos:column="8"/></operator> <operator pos:line="66" pos:column="9">=<pos:position pos:line="66" pos:column="10"/></operator> <call><name pos:line="66" pos:column="11">apr_array_push<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><name><name pos:line="66" pos:column="26">conf<pos:position pos:line="66" pos:column="30"/></name><operator pos:line="66" pos:column="30">-&gt;<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="32">aliases<pos:position pos:line="66" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="67" pos:column="5">new<pos:position pos:line="67" pos:column="8"/></operator><operator pos:line="67" pos:column="8">-&gt;<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="10">fake<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <call><name pos:line="67" pos:column="17">apr_pstrdup<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><name><name pos:line="67" pos:column="29">cmd<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">-&gt;<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="34">pool<pos:position pos:line="67" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="40">f<pos:position pos:line="67" pos:column="41"/></name></expr></argument>)<pos:position pos:line="67" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="68" pos:column="5">new<pos:position pos:line="68" pos:column="8"/></operator><operator pos:line="68" pos:column="8">-&gt;<pos:position pos:line="68" pos:column="13"/></operator><name pos:line="68" pos:column="10">real<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">=<pos:position pos:line="68" pos:column="16"/></operator> <call><name pos:line="68" pos:column="17">apr_pstrdup<pos:position pos:line="68" pos:column="28"/></name><argument_list pos:line="68" pos:column="28">(<argument><expr><name><name pos:line="68" pos:column="29">cmd<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">pool<pos:position pos:line="68" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="40">r<pos:position pos:line="68" pos:column="41"/></name></expr></argument>)<pos:position pos:line="68" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="69" pos:column="5">new<pos:position pos:line="69" pos:column="8"/></operator><operator pos:line="69" pos:column="8">-&gt;<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="10">flags<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <name pos:line="69" pos:column="18">flags<pos:position pos:line="69" pos:column="23"/></name></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">use_regex<pos:position pos:line="70" pos:column="18"/></name></expr>)<pos:position pos:line="70" pos:column="19"/></condition><then pos:line="70" pos:column="19"> <block pos:line="70" pos:column="20">{
        <expr_stmt><expr><operator pos:line="71" pos:column="9">new<pos:position pos:line="71" pos:column="12"/></operator><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">regex<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <call><name pos:line="71" pos:column="22">ap_pregcomp<pos:position pos:line="71" pos:column="33"/></name><argument_list pos:line="71" pos:column="33">(<argument><expr><name><name pos:line="71" pos:column="34">cmd<pos:position pos:line="71" pos:column="37"/></name><operator pos:line="71" pos:column="37">-&gt;<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="39">pool<pos:position pos:line="71" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="45">f<pos:position pos:line="71" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="48">AP_REG_EXTENDED<pos:position pos:line="71" pos:column="63"/></name></expr></argument>)<pos:position pos:line="71" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="65"/></expr_stmt>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">new<pos:position pos:line="72" pos:column="16"/></operator><operator pos:line="72" pos:column="16">-&gt;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="18">regex<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">==<pos:position pos:line="72" pos:column="26"/></operator> <name pos:line="72" pos:column="27">NULL<pos:position pos:line="72" pos:column="31"/></name></expr>)<pos:position pos:line="72" pos:column="32"/></condition><then pos:line="72" pos:column="32">
            <block type="pseudo"><return pos:line="73" pos:column="13">return <expr><literal type="string" pos:line="73" pos:column="20">"Regular expression could not be compiled."<pos:position pos:line="73" pos:column="63"/></literal></expr>;<pos:position pos:line="73" pos:column="64"/></return></block></then></if>
    }<pos:position pos:line="74" pos:column="6"/></block></then>
    <else pos:line="75" pos:column="5">else <block pos:line="75" pos:column="10">{
        <expr_stmt><expr><operator pos:line="76" pos:column="9">new<pos:position pos:line="76" pos:column="12"/></operator><operator pos:line="76" pos:column="12">-&gt;<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="14">regex<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">NULL<pos:position pos:line="76" pos:column="26"/></name></expr>;<pos:position pos:line="76" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></else></if>

    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name><name pos:line="79" pos:column="9">r<pos:position pos:line="79" pos:column="10"/></name><index pos:line="79" pos:column="10">[<expr><literal type="number" pos:line="79" pos:column="11">0<pos:position pos:line="79" pos:column="12"/></literal></expr>]<pos:position pos:line="79" pos:column="13"/></index></name> <operator pos:line="79" pos:column="14">==<pos:position pos:line="79" pos:column="16"/></operator> <literal type="char" pos:line="79" pos:column="17">'!'<pos:position pos:line="79" pos:column="20"/></literal> <operator pos:line="79" pos:column="21">&amp;&amp;<pos:position pos:line="79" pos:column="31"/></operator> <name><name pos:line="79" pos:column="24">r<pos:position pos:line="79" pos:column="25"/></name><index pos:line="79" pos:column="25">[<expr><literal type="number" pos:line="79" pos:column="26">1<pos:position pos:line="79" pos:column="27"/></literal></expr>]<pos:position pos:line="79" pos:column="28"/></index></name> <operator pos:line="79" pos:column="29">==<pos:position pos:line="79" pos:column="31"/></operator> <literal type="char" pos:line="79" pos:column="32">'\0'<pos:position pos:line="79" pos:column="36"/></literal></expr>)<pos:position pos:line="79" pos:column="37"/></condition><then pos:line="79" pos:column="37">
        <block type="pseudo"><return pos:line="80" pos:column="9">return <expr><name pos:line="80" pos:column="16">NULL<pos:position pos:line="80" pos:column="20"/></name></expr>;<pos:position pos:line="80" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="82" pos:column="5">arr<pos:position pos:line="82" pos:column="8"/></name> <operator pos:line="82" pos:column="9">=<pos:position pos:line="82" pos:column="10"/></operator> <call><name pos:line="82" pos:column="11">apr_table_elts<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">params<pos:position pos:line="82" pos:column="32"/></name></expr></argument>)<pos:position pos:line="82" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="83" pos:column="5">elts<pos:position pos:line="83" pos:column="9"/></name> <operator pos:line="83" pos:column="10">=<pos:position pos:line="83" pos:column="11"/></operator> <operator pos:line="83" pos:column="12">(<pos:position pos:line="83" pos:column="13"/></operator><specifier pos:line="83" pos:column="13">const<pos:position pos:line="83" pos:column="18"/></specifier> <name pos:line="83" pos:column="19">apr_table_entry_t<pos:position pos:line="83" pos:column="36"/></name> <operator pos:line="83" pos:column="37">*<pos:position pos:line="83" pos:column="38"/></operator><operator pos:line="83" pos:column="38">)<pos:position pos:line="83" pos:column="39"/></operator><name><name pos:line="83" pos:column="39">arr<pos:position pos:line="83" pos:column="42"/></name><operator pos:line="83" pos:column="42">-&gt;<pos:position pos:line="83" pos:column="47"/></operator><name pos:line="83" pos:column="44">elts<pos:position pos:line="83" pos:column="48"/></name></name></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt>
    <comment type="block" pos:line="84" pos:column="5">/* Distinguish the balancer from worker */</comment>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><call><name pos:line="85" pos:column="9">strncasecmp<pos:position pos:line="85" pos:column="20"/></name><argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">r<pos:position pos:line="85" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="24">"balancer:"<pos:position pos:line="85" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="37">9<pos:position pos:line="85" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="39"/></argument_list></call> <operator pos:line="85" pos:column="40">==<pos:position pos:line="85" pos:column="42"/></operator> <literal type="number" pos:line="85" pos:column="43">0<pos:position pos:line="85" pos:column="44"/></literal></expr>)<pos:position pos:line="85" pos:column="45"/></condition><then pos:line="85" pos:column="45"> <block pos:line="85" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="86" pos:column="9">proxy_balancer<pos:position pos:line="86" pos:column="23"/></name> <modifier pos:line="86" pos:column="24">*<pos:position pos:line="86" pos:column="25"/></modifier></type><name pos:line="86" pos:column="25">balancer<pos:position pos:line="86" pos:column="33"/></name> <init pos:line="86" pos:column="34">= <expr><call><name pos:line="86" pos:column="36">ap_proxy_get_balancer<pos:position pos:line="86" pos:column="57"/></name><argument_list pos:line="86" pos:column="57">(<argument><expr><name><name pos:line="86" pos:column="58">cmd<pos:position pos:line="86" pos:column="61"/></name><operator pos:line="86" pos:column="61">-&gt;<pos:position pos:line="86" pos:column="66"/></operator><name pos:line="86" pos:column="63">pool<pos:position pos:line="86" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="69">conf<pos:position pos:line="86" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="75">r<pos:position pos:line="86" pos:column="76"/></name></expr></argument>)<pos:position pos:line="86" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="86" pos:column="78"/></decl_stmt>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><operator pos:line="87" pos:column="13">!<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">balancer<pos:position pos:line="87" pos:column="22"/></name></expr>)<pos:position pos:line="87" pos:column="23"/></condition><then pos:line="87" pos:column="23"> <block pos:line="87" pos:column="24">{
            <decl_stmt><decl><type><specifier pos:line="88" pos:column="13">const<pos:position pos:line="88" pos:column="18"/></specifier> <name pos:line="88" pos:column="19">char<pos:position pos:line="88" pos:column="23"/></name> <modifier pos:line="88" pos:column="24">*<pos:position pos:line="88" pos:column="25"/></modifier></type><name pos:line="88" pos:column="25">err<pos:position pos:line="88" pos:column="28"/></name> <init pos:line="88" pos:column="29">= <expr><call><name pos:line="88" pos:column="31">ap_proxy_add_balancer<pos:position pos:line="88" pos:column="52"/></name><argument_list pos:line="88" pos:column="52">(<argument><expr><operator pos:line="88" pos:column="53">&amp;<pos:position pos:line="88" pos:column="58"/></operator><name pos:line="88" pos:column="54">balancer<pos:position pos:line="88" pos:column="62"/></name></expr></argument>,
                                                    <argument><expr><name><name pos:line="89" pos:column="53">cmd<pos:position pos:line="89" pos:column="56"/></name><operator pos:line="89" pos:column="56">-&gt;<pos:position pos:line="89" pos:column="61"/></operator><name pos:line="89" pos:column="58">pool<pos:position pos:line="89" pos:column="62"/></name></name></expr></argument>,
                                                    <argument><expr><name pos:line="90" pos:column="53">conf<pos:position pos:line="90" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="59">r<pos:position pos:line="90" pos:column="60"/></name></expr></argument>)<pos:position pos:line="90" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="90" pos:column="62"/></decl_stmt>
            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">(<expr><name pos:line="91" pos:column="17">err<pos:position pos:line="91" pos:column="20"/></name></expr>)<pos:position pos:line="91" pos:column="21"/></condition><then pos:line="91" pos:column="21">
                <block type="pseudo"><return pos:line="92" pos:column="17">return <expr><call><name pos:line="92" pos:column="24">apr_pstrcat<pos:position pos:line="92" pos:column="35"/></name><argument_list pos:line="92" pos:column="35">(<argument><expr><name><name pos:line="92" pos:column="36">cmd<pos:position pos:line="92" pos:column="39"/></name><operator pos:line="92" pos:column="39">-&gt;<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="41">temp_pool<pos:position pos:line="92" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="52">"ProxyPass "<pos:position pos:line="92" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="66">err<pos:position pos:line="92" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="71">NULL<pos:position pos:line="92" pos:column="75"/></name></expr></argument>)<pos:position pos:line="92" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="77"/></return></block></then></if>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>
        <for pos:line="94" pos:column="9">for <control pos:line="94" pos:column="13">(<init><expr><name pos:line="94" pos:column="14">i<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">=<pos:position pos:line="94" pos:column="17"/></operator> <literal type="number" pos:line="94" pos:column="18">0<pos:position pos:line="94" pos:column="19"/></literal></expr>;<pos:position pos:line="94" pos:column="20"/></init> <condition><expr><name pos:line="94" pos:column="21">i<pos:position pos:line="94" pos:column="22"/></name> <operator pos:line="94" pos:column="23">&lt;<pos:position pos:line="94" pos:column="27"/></operator> <name><name pos:line="94" pos:column="25">arr<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">-&gt;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="30">nelts<pos:position pos:line="94" pos:column="35"/></name></name></expr>;<pos:position pos:line="94" pos:column="36"/></condition> <incr><expr><name pos:line="94" pos:column="37">i<pos:position pos:line="94" pos:column="38"/></name><operator pos:line="94" pos:column="38">++<pos:position pos:line="94" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="94" pos:column="41"/></control> <block pos:line="94" pos:column="42">{
            <decl_stmt><decl><type><specifier pos:line="95" pos:column="13">const<pos:position pos:line="95" pos:column="18"/></specifier> <name pos:line="95" pos:column="19">char<pos:position pos:line="95" pos:column="23"/></name> <modifier pos:line="95" pos:column="24">*<pos:position pos:line="95" pos:column="25"/></modifier></type><name pos:line="95" pos:column="25">err<pos:position pos:line="95" pos:column="28"/></name> <init pos:line="95" pos:column="29">= <expr><call><name pos:line="95" pos:column="31">set_balancer_param<pos:position pos:line="95" pos:column="49"/></name><argument_list pos:line="95" pos:column="49">(<argument><expr><name pos:line="95" pos:column="50">conf<pos:position pos:line="95" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="56">cmd<pos:position pos:line="95" pos:column="59"/></name><operator pos:line="95" pos:column="59">-&gt;<pos:position pos:line="95" pos:column="64"/></operator><name pos:line="95" pos:column="61">pool<pos:position pos:line="95" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="67">balancer<pos:position pos:line="95" pos:column="75"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="77">elts<pos:position pos:line="95" pos:column="81"/></name><index pos:line="95" pos:column="81">[<expr><name pos:line="95" pos:column="82">i<pos:position pos:line="95" pos:column="83"/></name></expr>]<pos:position pos:line="95" pos:column="84"/></index></name><operator pos:line="95" pos:column="84">.<pos:position pos:line="95" pos:column="85"/></operator><name pos:line="95" pos:column="85">key<pos:position pos:line="95" pos:column="88"/></name></expr></argument>,
                                                 <argument><expr><name><name pos:line="96" pos:column="50">elts<pos:position pos:line="96" pos:column="54"/></name><index pos:line="96" pos:column="54">[<expr><name pos:line="96" pos:column="55">i<pos:position pos:line="96" pos:column="56"/></name></expr>]<pos:position pos:line="96" pos:column="57"/></index></name><operator pos:line="96" pos:column="57">.<pos:position pos:line="96" pos:column="58"/></operator><name pos:line="96" pos:column="58">val<pos:position pos:line="96" pos:column="61"/></name></expr></argument>)<pos:position pos:line="96" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="96" pos:column="63"/></decl_stmt>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><name pos:line="97" pos:column="17">err<pos:position pos:line="97" pos:column="20"/></name></expr>)<pos:position pos:line="97" pos:column="21"/></condition><then pos:line="97" pos:column="21">
                <block type="pseudo"><return pos:line="98" pos:column="17">return <expr><call><name pos:line="98" pos:column="24">apr_pstrcat<pos:position pos:line="98" pos:column="35"/></name><argument_list pos:line="98" pos:column="35">(<argument><expr><name><name pos:line="98" pos:column="36">cmd<pos:position pos:line="98" pos:column="39"/></name><operator pos:line="98" pos:column="39">-&gt;<pos:position pos:line="98" pos:column="44"/></operator><name pos:line="98" pos:column="41">temp_pool<pos:position pos:line="98" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="52">"ProxyPass "<pos:position pos:line="98" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="66">err<pos:position pos:line="98" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="71">NULL<pos:position pos:line="98" pos:column="75"/></name></expr></argument>)<pos:position pos:line="98" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="77"/></return></block></then></if>
        }<pos:position pos:line="99" pos:column="10"/></block></for>
    }<pos:position pos:line="100" pos:column="6"/></block></then>
    <else pos:line="101" pos:column="5">else <block pos:line="101" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="102" pos:column="9">proxy_worker<pos:position pos:line="102" pos:column="21"/></name> <modifier pos:line="102" pos:column="22">*<pos:position pos:line="102" pos:column="23"/></modifier></type><name pos:line="102" pos:column="23">worker<pos:position pos:line="102" pos:column="29"/></name> <init pos:line="102" pos:column="30">= <expr><call><name pos:line="102" pos:column="32">ap_proxy_get_worker<pos:position pos:line="102" pos:column="51"/></name><argument_list pos:line="102" pos:column="51">(<argument><expr><name><name pos:line="102" pos:column="52">cmd<pos:position pos:line="102" pos:column="55"/></name><operator pos:line="102" pos:column="55">-&gt;<pos:position pos:line="102" pos:column="60"/></operator><name pos:line="102" pos:column="57">temp_pool<pos:position pos:line="102" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="68">conf<pos:position pos:line="102" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="74">r<pos:position pos:line="102" pos:column="75"/></name></expr></argument>)<pos:position pos:line="102" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="102" pos:column="77"/></decl_stmt>
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><operator pos:line="103" pos:column="13">!<pos:position pos:line="103" pos:column="14"/></operator><name pos:line="103" pos:column="14">worker<pos:position pos:line="103" pos:column="20"/></name></expr>)<pos:position pos:line="103" pos:column="21"/></condition><then pos:line="103" pos:column="21"> <block pos:line="103" pos:column="22">{
            <decl_stmt><decl><type><specifier pos:line="104" pos:column="13">const<pos:position pos:line="104" pos:column="18"/></specifier> <name pos:line="104" pos:column="19">char<pos:position pos:line="104" pos:column="23"/></name> <modifier pos:line="104" pos:column="24">*<pos:position pos:line="104" pos:column="25"/></modifier></type><name pos:line="104" pos:column="25">err<pos:position pos:line="104" pos:column="28"/></name> <init pos:line="104" pos:column="29">= <expr><call><name pos:line="104" pos:column="31">ap_proxy_add_worker<pos:position pos:line="104" pos:column="50"/></name><argument_list pos:line="104" pos:column="50">(<argument><expr><operator pos:line="104" pos:column="51">&amp;<pos:position pos:line="104" pos:column="56"/></operator><name pos:line="104" pos:column="52">worker<pos:position pos:line="104" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="60">cmd<pos:position pos:line="104" pos:column="63"/></name><operator pos:line="104" pos:column="63">-&gt;<pos:position pos:line="104" pos:column="68"/></operator><name pos:line="104" pos:column="65">pool<pos:position pos:line="104" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="71">conf<pos:position pos:line="104" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="77">r<pos:position pos:line="104" pos:column="78"/></name></expr></argument>)<pos:position pos:line="104" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="104" pos:column="80"/></decl_stmt>
            <if pos:line="105" pos:column="13">if <condition pos:line="105" pos:column="16">(<expr><name pos:line="105" pos:column="17">err<pos:position pos:line="105" pos:column="20"/></name></expr>)<pos:position pos:line="105" pos:column="21"/></condition><then pos:line="105" pos:column="21">
                <block type="pseudo"><return pos:line="106" pos:column="17">return <expr><call><name pos:line="106" pos:column="24">apr_pstrcat<pos:position pos:line="106" pos:column="35"/></name><argument_list pos:line="106" pos:column="35">(<argument><expr><name><name pos:line="106" pos:column="36">cmd<pos:position pos:line="106" pos:column="39"/></name><operator pos:line="106" pos:column="39">-&gt;<pos:position pos:line="106" pos:column="44"/></operator><name pos:line="106" pos:column="41">temp_pool<pos:position pos:line="106" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="52">"ProxyPass "<pos:position pos:line="106" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="66">err<pos:position pos:line="106" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="71">NULL<pos:position pos:line="106" pos:column="75"/></name></expr></argument>)<pos:position pos:line="106" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="77"/></return></block></then></if>
        }<pos:position pos:line="107" pos:column="10"/></block></then> <else pos:line="107" pos:column="11">else <block pos:line="107" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">ap_log_error<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">(<argument><expr><name pos:line="108" pos:column="26">APLOG_MARK<pos:position pos:line="108" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="38">APLOG_INFO<pos:position pos:line="108" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="50">0<pos:position pos:line="108" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="53">cmd<pos:position pos:line="108" pos:column="56"/></name><operator pos:line="108" pos:column="56">-&gt;<pos:position pos:line="108" pos:column="61"/></operator><name pos:line="108" pos:column="58">server<pos:position pos:line="108" pos:column="64"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="109" pos:column="26">"worker %s already used by another worker"<pos:position pos:line="109" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="70">worker<pos:position pos:line="109" pos:column="76"/></name><operator pos:line="109" pos:column="76">-&gt;<pos:position pos:line="109" pos:column="81"/></operator><name pos:line="109" pos:column="78">name<pos:position pos:line="109" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="84"/></expr_stmt>
        }<pos:position pos:line="110" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">PROXY_COPY_CONF_PARAMS<pos:position pos:line="111" pos:column="31"/></name><argument_list pos:line="111" pos:column="31">(<argument><expr><name pos:line="111" pos:column="32">worker<pos:position pos:line="111" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="40">conf<pos:position pos:line="111" pos:column="44"/></name></expr></argument>)<pos:position pos:line="111" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="46"/></expr_stmt>

        <for pos:line="113" pos:column="9">for <control pos:line="113" pos:column="13">(<init><expr><name pos:line="113" pos:column="14">i<pos:position pos:line="113" pos:column="15"/></name> <operator pos:line="113" pos:column="16">=<pos:position pos:line="113" pos:column="17"/></operator> <literal type="number" pos:line="113" pos:column="18">0<pos:position pos:line="113" pos:column="19"/></literal></expr>;<pos:position pos:line="113" pos:column="20"/></init> <condition><expr><name pos:line="113" pos:column="21">i<pos:position pos:line="113" pos:column="22"/></name> <operator pos:line="113" pos:column="23">&lt;<pos:position pos:line="113" pos:column="27"/></operator> <name><name pos:line="113" pos:column="25">arr<pos:position pos:line="113" pos:column="28"/></name><operator pos:line="113" pos:column="28">-&gt;<pos:position pos:line="113" pos:column="33"/></operator><name pos:line="113" pos:column="30">nelts<pos:position pos:line="113" pos:column="35"/></name></name></expr>;<pos:position pos:line="113" pos:column="36"/></condition> <incr><expr><name pos:line="113" pos:column="37">i<pos:position pos:line="113" pos:column="38"/></name><operator pos:line="113" pos:column="38">++<pos:position pos:line="113" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="113" pos:column="41"/></control> <block pos:line="113" pos:column="42">{
            <decl_stmt><decl><type><specifier pos:line="114" pos:column="13">const<pos:position pos:line="114" pos:column="18"/></specifier> <name pos:line="114" pos:column="19">char<pos:position pos:line="114" pos:column="23"/></name> <modifier pos:line="114" pos:column="24">*<pos:position pos:line="114" pos:column="25"/></modifier></type><name pos:line="114" pos:column="25">err<pos:position pos:line="114" pos:column="28"/></name> <init pos:line="114" pos:column="29">= <expr><call><name pos:line="114" pos:column="31">set_worker_param<pos:position pos:line="114" pos:column="47"/></name><argument_list pos:line="114" pos:column="47">(<argument><expr><name><name pos:line="114" pos:column="48">cmd<pos:position pos:line="114" pos:column="51"/></name><operator pos:line="114" pos:column="51">-&gt;<pos:position pos:line="114" pos:column="56"/></operator><name pos:line="114" pos:column="53">pool<pos:position pos:line="114" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="59">worker<pos:position pos:line="114" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="67">elts<pos:position pos:line="114" pos:column="71"/></name><index pos:line="114" pos:column="71">[<expr><name pos:line="114" pos:column="72">i<pos:position pos:line="114" pos:column="73"/></name></expr>]<pos:position pos:line="114" pos:column="74"/></index></name><operator pos:line="114" pos:column="74">.<pos:position pos:line="114" pos:column="75"/></operator><name pos:line="114" pos:column="75">key<pos:position pos:line="114" pos:column="78"/></name></expr></argument>,
                                               <argument><expr><name><name pos:line="115" pos:column="48">elts<pos:position pos:line="115" pos:column="52"/></name><index pos:line="115" pos:column="52">[<expr><name pos:line="115" pos:column="53">i<pos:position pos:line="115" pos:column="54"/></name></expr>]<pos:position pos:line="115" pos:column="55"/></index></name><operator pos:line="115" pos:column="55">.<pos:position pos:line="115" pos:column="56"/></operator><name pos:line="115" pos:column="56">val<pos:position pos:line="115" pos:column="59"/></name></expr></argument>)<pos:position pos:line="115" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="115" pos:column="61"/></decl_stmt>
            <if pos:line="116" pos:column="13">if <condition pos:line="116" pos:column="16">(<expr><name pos:line="116" pos:column="17">err<pos:position pos:line="116" pos:column="20"/></name></expr>)<pos:position pos:line="116" pos:column="21"/></condition><then pos:line="116" pos:column="21">
                <block type="pseudo"><return pos:line="117" pos:column="17">return <expr><call><name pos:line="117" pos:column="24">apr_pstrcat<pos:position pos:line="117" pos:column="35"/></name><argument_list pos:line="117" pos:column="35">(<argument><expr><name><name pos:line="117" pos:column="36">cmd<pos:position pos:line="117" pos:column="39"/></name><operator pos:line="117" pos:column="39">-&gt;<pos:position pos:line="117" pos:column="44"/></operator><name pos:line="117" pos:column="41">temp_pool<pos:position pos:line="117" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="52">"ProxyPass "<pos:position pos:line="117" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="66">err<pos:position pos:line="117" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="71">NULL<pos:position pos:line="117" pos:column="75"/></name></expr></argument>)<pos:position pos:line="117" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="77"/></return></block></then></if>
        }<pos:position pos:line="118" pos:column="10"/></block></for>
    }<pos:position pos:line="119" pos:column="6"/></block></else></if>
    <return pos:line="120" pos:column="5">return <expr><name pos:line="120" pos:column="12">NULL<pos:position pos:line="120" pos:column="16"/></name></expr>;<pos:position pos:line="120" pos:column="17"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1949_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">emulate_sendfile<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">core_net_rec<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">c<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">apr_file_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">fd<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">apr_hdtr_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">hdtr<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">apr_off_t<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">offset<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_size_t<pos:position pos:line="3" pos:column="48"/></name></type> <name pos:line="3" pos:column="49">length<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="57">apr_size_t<pos:position pos:line="3" pos:column="67"/></name> <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier></type><name pos:line="3" pos:column="69">nbytes<pos:position pos:line="3" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="76"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">APR_SUCCESS<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_int32_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">togo<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>        <comment type="block" pos:line="6" pos:column="30">/* Remaining number of bytes in the file to send */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">sendlen<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">bytes_sent<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_int32_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_off_t<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">o<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>             <comment type="block" pos:line="10" pos:column="30">/* Track the file offset for partial writes */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">buffer<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><literal type="number" pos:line="11" pos:column="17">8192<pos:position pos:line="11" pos:column="21"/></literal></expr>]<pos:position pos:line="11" pos:column="22"/></index></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">nbytes<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* Send the headers
     * writev_it_all handles partial writes.
     * XXX: optimization... if headers are less than MIN_WRITE_SIZE, copy
     * them into buffer
     */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">hdtr<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">&amp;&amp;<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="17">hdtr<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">numheaders<pos:position pos:line="20" pos:column="33"/></name></name> <operator pos:line="20" pos:column="34">&gt;<pos:position pos:line="20" pos:column="38"/></operator> <literal type="number" pos:line="20" pos:column="36">0<pos:position pos:line="20" pos:column="37"/></literal></expr> )<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39"> <block pos:line="20" pos:column="40">{
        <for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></init> <condition><expr><name pos:line="21" pos:column="21">i<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&lt;<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="25">hdtr<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">numheaders<pos:position pos:line="21" pos:column="41"/></name></name></expr>;<pos:position pos:line="21" pos:column="42"/></condition> <incr><expr><name pos:line="21" pos:column="43">i<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">++<pos:position pos:line="21" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="47"/></control> <block pos:line="21" pos:column="48">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">sendlen<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">+=<pos:position pos:line="22" pos:column="23"/></operator> <name><name pos:line="22" pos:column="24">hdtr<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">headers<pos:position pos:line="22" pos:column="37"/></name><index pos:line="22" pos:column="37">[<expr><name pos:line="22" pos:column="38">i<pos:position pos:line="22" pos:column="39"/></name></expr>]<pos:position pos:line="22" pos:column="40"/></index></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">iov_len<pos:position pos:line="22" pos:column="48"/></name></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></for>

        <expr_stmt><expr><name pos:line="25" pos:column="9">rv<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">writev_it_all<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name><name pos:line="25" pos:column="28">c<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">client_socket<pos:position pos:line="25" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="46">hdtr<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">-&gt;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="52">headers<pos:position pos:line="25" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="61">hdtr<pos:position pos:line="25" pos:column="65"/></name><operator pos:line="25" pos:column="65">-&gt;<pos:position pos:line="25" pos:column="70"/></operator><name pos:line="25" pos:column="67">numheaders<pos:position pos:line="25" pos:column="77"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="26" pos:column="28">sendlen<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="37">&amp;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="38">bytes_sent<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">rv<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">==<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">APR_SUCCESS<pos:position pos:line="27" pos:column="30"/></name></expr>)<pos:position pos:line="27" pos:column="31"/></condition><then pos:line="27" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">nbytes<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">+=<pos:position pos:line="28" pos:column="23"/></operator> <name pos:line="28" pos:column="24">bytes_sent<pos:position pos:line="28" pos:column="34"/></name></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt></block></then></if>     <comment type="block" pos:line="28" pos:column="40">/* track total bytes sent */</comment>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* Seek the file to 'offset' */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">offset<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">&gt;=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="19">0<pos:position pos:line="32" pos:column="20"/></literal> <operator pos:line="32" pos:column="21">&amp;&amp;<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="24">rv<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">==<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">APR_SUCCESS<pos:position pos:line="32" pos:column="41"/></name></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42"> <block pos:line="32" pos:column="43">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">rv<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">apr_file_seek<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">fd<pos:position pos:line="33" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="32">APR_SET<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="41">&amp;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="42">offset<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/* Send the file, making sure to handle partial writes */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">togo<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <name pos:line="37" pos:column="12">length<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    <while pos:line="38" pos:column="5">while <condition pos:line="38" pos:column="11">(<expr><name pos:line="38" pos:column="12">rv<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">==<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">APR_SUCCESS<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">&amp;&amp;<pos:position pos:line="38" pos:column="40"/></operator> <name pos:line="38" pos:column="33">togo<pos:position pos:line="38" pos:column="37"/></name></expr>)<pos:position pos:line="38" pos:column="38"/></condition> <block pos:line="38" pos:column="39">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">sendlen<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">=<pos:position pos:line="39" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="39" pos:column="19">togo<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">&gt;<pos:position pos:line="39" pos:column="28"/></operator> <sizeof pos:line="39" pos:column="26">sizeof<argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">buffer<pos:position pos:line="39" pos:column="39"/></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></sizeof></expr> ?<pos:position pos:line="39" pos:column="42"/></condition><then pos:line="39" pos:column="42"> <expr><sizeof pos:line="39" pos:column="43">sizeof<argument_list pos:line="39" pos:column="49">(<argument><expr><name pos:line="39" pos:column="50">buffer<pos:position pos:line="39" pos:column="56"/></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></sizeof></expr> <pos:position pos:line="39" pos:column="58"/></then><else pos:line="39" pos:column="58">: <expr><name pos:line="39" pos:column="60">togo<pos:position pos:line="39" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">o<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <literal type="number" pos:line="40" pos:column="13">0<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">rv<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">apr_file_read<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">fd<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">buffer<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="40">&amp;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="41">sendlen<pos:position pos:line="41" pos:column="48"/></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
        <while pos:line="42" pos:column="9">while <condition pos:line="42" pos:column="15">(<expr><name pos:line="42" pos:column="16">rv<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">==<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">APR_SUCCESS<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">&amp;&amp;<pos:position pos:line="42" pos:column="44"/></operator> <name pos:line="42" pos:column="37">sendlen<pos:position pos:line="42" pos:column="44"/></name></expr>)<pos:position pos:line="42" pos:column="45"/></condition> <block pos:line="42" pos:column="46">{
            <expr_stmt><expr><name pos:line="43" pos:column="13">bytes_sent<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">sendlen<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="44" pos:column="13">rv<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">apr_send<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name><name pos:line="44" pos:column="27">c<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">client_socket<pos:position pos:line="44" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="45">&amp;<pos:position pos:line="44" pos:column="50"/></operator><name><name pos:line="44" pos:column="46">buffer<pos:position pos:line="44" pos:column="52"/></name><index pos:line="44" pos:column="52">[<expr><name pos:line="44" pos:column="53">o<pos:position pos:line="44" pos:column="54"/></name></expr>]<pos:position pos:line="44" pos:column="55"/></index></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="57">&amp;<pos:position pos:line="44" pos:column="62"/></operator><name pos:line="44" pos:column="58">bytes_sent<pos:position pos:line="44" pos:column="68"/></name></expr></argument>)<pos:position pos:line="44" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="70"/></expr_stmt>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">rv<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">==<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="23">APR_SUCCESS<pos:position pos:line="45" pos:column="34"/></name></expr>)<pos:position pos:line="45" pos:column="35"/></condition><then pos:line="45" pos:column="35"> <block pos:line="45" pos:column="36">{
                <expr_stmt><expr><name pos:line="46" pos:column="17">sendlen<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">-=<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="28">bytes_sent<pos:position pos:line="46" pos:column="38"/></name></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt> <comment type="block" pos:line="46" pos:column="40">/* sendlen != bytes_sent ==&gt; partial write */</comment>
                <expr_stmt><expr><name pos:line="47" pos:column="17">o<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">+=<pos:position pos:line="47" pos:column="21"/></operator> <name pos:line="47" pos:column="22">bytes_sent<pos:position pos:line="47" pos:column="32"/></name></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>       <comment type="block" pos:line="47" pos:column="40">/* o is where we are in the buffer */</comment>
                <expr_stmt><expr><operator pos:line="48" pos:column="17">*<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">nbytes<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">+=<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="28">bytes_sent<pos:position pos:line="48" pos:column="38"/></name></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">togo<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">-=<pos:position pos:line="49" pos:column="24"/></operator> <name pos:line="49" pos:column="25">bytes_sent<pos:position pos:line="49" pos:column="35"/></name></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>    <comment type="block" pos:line="49" pos:column="40">/* track how much of the file we've sent */</comment>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>
        }<pos:position pos:line="51" pos:column="10"/></block></while>
    }<pos:position pos:line="52" pos:column="6"/></block></while>

    <comment type="block" pos:line="54" pos:column="5">/* Send the trailers
     * XXX: optimization... if it will fit, send this on the last send in the
     * loop above
     */</comment>
    <expr_stmt><expr><name pos:line="58" pos:column="5">sendlen<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <literal type="number" pos:line="58" pos:column="15">0<pos:position pos:line="58" pos:column="16"/></literal></expr>;<pos:position pos:line="58" pos:column="17"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">( <expr><name pos:line="59" pos:column="10">rv<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">==<pos:position pos:line="59" pos:column="15"/></operator> <name pos:line="59" pos:column="16">APR_SUCCESS<pos:position pos:line="59" pos:column="27"/></name> <operator pos:line="59" pos:column="28">&amp;&amp;<pos:position pos:line="59" pos:column="38"/></operator> <name pos:line="59" pos:column="31">hdtr<pos:position pos:line="59" pos:column="35"/></name> <operator pos:line="59" pos:column="36">&amp;&amp;<pos:position pos:line="59" pos:column="46"/></operator> <name><name pos:line="59" pos:column="39">hdtr<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">-&gt;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="45">numtrailers<pos:position pos:line="59" pos:column="56"/></name></name> <operator pos:line="59" pos:column="57">&gt;<pos:position pos:line="59" pos:column="61"/></operator> <literal type="number" pos:line="59" pos:column="59">0<pos:position pos:line="59" pos:column="60"/></literal></expr> )<pos:position pos:line="59" pos:column="62"/></condition><then pos:line="59" pos:column="62"> <block pos:line="59" pos:column="63">{
        <for pos:line="60" pos:column="9">for <control pos:line="60" pos:column="13">(<init><expr><name pos:line="60" pos:column="14">i<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <literal type="number" pos:line="60" pos:column="18">0<pos:position pos:line="60" pos:column="19"/></literal></expr>;<pos:position pos:line="60" pos:column="20"/></init> <condition><expr><name pos:line="60" pos:column="21">i<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">&lt;<pos:position pos:line="60" pos:column="27"/></operator> <name><name pos:line="60" pos:column="25">hdtr<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">numtrailers<pos:position pos:line="60" pos:column="42"/></name></name></expr>;<pos:position pos:line="60" pos:column="43"/></condition> <incr><expr><name pos:line="60" pos:column="44">i<pos:position pos:line="60" pos:column="45"/></name><operator pos:line="60" pos:column="45">++<pos:position pos:line="60" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="60" pos:column="48"/></control> <block pos:line="60" pos:column="49">{
            <expr_stmt><expr><name pos:line="61" pos:column="13">sendlen<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">+=<pos:position pos:line="61" pos:column="23"/></operator> <name><name pos:line="61" pos:column="24">hdtr<pos:position pos:line="61" pos:column="28"/></name><operator pos:line="61" pos:column="28">-&gt;<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="30">trailers<pos:position pos:line="61" pos:column="38"/></name><index pos:line="61" pos:column="38">[<expr><name pos:line="61" pos:column="39">i<pos:position pos:line="61" pos:column="40"/></name></expr>]<pos:position pos:line="61" pos:column="41"/></index></name><operator pos:line="61" pos:column="41">.<pos:position pos:line="61" pos:column="42"/></operator><name pos:line="61" pos:column="42">iov_len<pos:position pos:line="61" pos:column="49"/></name></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="63" pos:column="9">rv<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <call><name pos:line="63" pos:column="14">writev_it_all<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><name><name pos:line="63" pos:column="28">c<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">client_socket<pos:position pos:line="63" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="46">hdtr<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">-&gt;<pos:position pos:line="63" pos:column="55"/></operator><name pos:line="63" pos:column="52">trailers<pos:position pos:line="63" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="62">hdtr<pos:position pos:line="63" pos:column="66"/></name><operator pos:line="63" pos:column="66">-&gt;<pos:position pos:line="63" pos:column="71"/></operator><name pos:line="63" pos:column="68">numtrailers<pos:position pos:line="63" pos:column="79"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="64" pos:column="28">sendlen<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="37">&amp;<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="38">bytes_sent<pos:position pos:line="64" pos:column="48"/></name></expr></argument>)<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">rv<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">==<pos:position pos:line="65" pos:column="18"/></operator> <name pos:line="65" pos:column="19">APR_SUCCESS<pos:position pos:line="65" pos:column="30"/></name></expr>)<pos:position pos:line="65" pos:column="31"/></condition><then pos:line="65" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="66" pos:column="13">*<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">nbytes<pos:position pos:line="66" pos:column="20"/></name> <operator pos:line="66" pos:column="21">+=<pos:position pos:line="66" pos:column="23"/></operator> <name pos:line="66" pos:column="24">bytes_sent<pos:position pos:line="66" pos:column="34"/></name></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">rv<pos:position pos:line="69" pos:column="14"/></name></expr>;<pos:position pos:line="69" pos:column="15"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3888_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">asio_pollset_poll<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">apr_pollset_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">pollset<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_interval_time_t<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">timeout<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">apr_int32_t<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">num<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="4" pos:column="39">const<pos:position pos:line="4" pos:column="44"/></specifier> <name pos:line="4" pos:column="45">apr_pollfd_t<pos:position pos:line="4" pos:column="57"/></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier><modifier pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></modifier></type><name pos:line="4" pos:column="60">descriptors<pos:position pos:line="4" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="72"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">DBG_BUFF<pos:position pos:line="6" pos:column="13"/></name>
    <name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="12">ret<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">asio_elem_t<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">elem<pos:position pos:line="8" pos:column="22"/></name></decl>, <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="25">next_elem<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">asio_msgbuf_t<pos:position pos:line="9" pos:column="25"/></name></name></type> <name pos:line="9" pos:column="26">msg_buff<pos:position pos:line="9" pos:column="34"/></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">struct<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">timespec<pos:position pos:line="10" pos:column="20"/></name></name></type> <name pos:line="10" pos:column="21">tv<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_status_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">rv<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><name pos:line="11" pos:column="23">APR_SUCCESS<pos:position pos:line="11" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_pollset_private_t<pos:position pos:line="12" pos:column="26"/></name> <modifier pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></modifier></type><name pos:line="12" pos:column="28">priv<pos:position pos:line="12" pos:column="32"/></name> <init pos:line="12" pos:column="33">= <expr><name><name pos:line="12" pos:column="35">pollset<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">p<pos:position pos:line="12" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">DBG<pos:position pos:line="14" pos:column="8"/></name><argument_list pos:line="14" pos:column="8">(<argument><expr><literal type="number" pos:line="14" pos:column="9">6<pos:position pos:line="14" pos:column="10"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="12">"entered\n"<pos:position pos:line="14" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt> <comment type="block" pos:line="14" pos:column="26">/* chatty - traces every second w/Event */</comment>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name><name pos:line="16" pos:column="10">pollset<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">flags<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">&amp;<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="27">APR_POLLSET_THREADSAFE<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">)<pos:position pos:line="16" pos:column="50"/></operator> <operator pos:line="16" pos:column="51">==<pos:position pos:line="16" pos:column="53"/></operator> <literal type="number" pos:line="16" pos:column="54">0<pos:position pos:line="16" pos:column="55"/></literal></expr> )<pos:position pos:line="16" pos:column="57"/></condition><then pos:line="16" pos:column="57"> <block pos:line="16" pos:column="58">{
        <return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">posix_poll<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">pollset<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">timeout<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">num<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">descriptors<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="63"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">pollset_lock_rings<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">()<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">APR_RING_INIT<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><operator pos:line="21" pos:column="19">&amp;<pos:position pos:line="21" pos:column="24"/></operator><operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><name><name pos:line="21" pos:column="21">priv<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">ready_ring<pos:position pos:line="21" pos:column="37"/></name></name><operator pos:line="21" pos:column="37">)<pos:position pos:line="21" pos:column="38"/></operator></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">asio_elem_t<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">link<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>

    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">!<pos:position pos:line="23" pos:column="13"/></operator><call><name pos:line="23" pos:column="13">APR_RING_EMPTY<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><operator pos:line="23" pos:column="29">(<pos:position pos:line="23" pos:column="30"/></operator><name><name pos:line="23" pos:column="30">priv<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">prior_ready_ring<pos:position pos:line="23" pos:column="52"/></name></name><operator pos:line="23" pos:column="52">)<pos:position pos:line="23" pos:column="53"/></operator></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">asio_elem_t<pos:position pos:line="23" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="68">link<pos:position pos:line="23" pos:column="72"/></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="74"/></condition> <block pos:line="23" pos:column="75">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">elem<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">APR_RING_FIRST<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><operator pos:line="24" pos:column="31">&amp;<pos:position pos:line="24" pos:column="36"/></operator><operator pos:line="24" pos:column="32">(<pos:position pos:line="24" pos:column="33"/></operator><name><name pos:line="24" pos:column="33">priv<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">prior_ready_ring<pos:position pos:line="24" pos:column="55"/></name></name><operator pos:line="24" pos:column="55">)<pos:position pos:line="24" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">DBG3<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><literal type="number" pos:line="25" pos:column="14">5<pos:position pos:line="25" pos:column="15"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="17">"pollset %p elem %p fd %d on prior ready ring\n"<pos:position pos:line="25" pos:column="65"/></literal></expr></argument>,
                <argument><expr><name pos:line="26" pos:column="17">pollset<pos:position pos:line="26" pos:column="24"/></name></expr></argument>,
                <argument><expr><name pos:line="27" pos:column="17">elem<pos:position pos:line="27" pos:column="21"/></name></expr></argument>,
                <argument><expr><name><name pos:line="28" pos:column="17">elem<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">os_pfd<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">.<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">fd<pos:position pos:line="28" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="30" pos:column="9">APR_RING_REMOVE<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">elem<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="31">link<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>

        <comment type="block" pos:line="32" pos:column="9">/*
         * since USS does not remember what's in our pollset, we have
         * to re-add fds which have not been apr_pollset_remove'd
         *
         * there may have been too many ready fd's to return in the
         * result set last time. re-poll inline for both cases
         */</comment>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">elem<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">state<pos:position pos:line="40" pos:column="24"/></name></name> <operator pos:line="40" pos:column="25">==<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="28">ASIO_REMOVED<pos:position pos:line="40" pos:column="40"/></name></expr>)<pos:position pos:line="40" pos:column="41"/></condition><then pos:line="40" pos:column="41"> <block pos:line="40" pos:column="42">{

            <comment type="block" pos:line="42" pos:column="13">/* 
             * async i/o is done since it was found on prior_ready
             * the state says the caller is done with it too 
             * so recycle the elem 
             */</comment>
             
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">APR_RING_INSERT_TAIL<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><operator pos:line="48" pos:column="34">&amp;<pos:position pos:line="48" pos:column="39"/></operator><operator pos:line="48" pos:column="35">(<pos:position pos:line="48" pos:column="36"/></operator><name><name pos:line="48" pos:column="36">priv<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">-&gt;<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="42">free_ring<pos:position pos:line="48" pos:column="51"/></name></name><operator pos:line="48" pos:column="51">)<pos:position pos:line="48" pos:column="52"/></operator></expr></argument>, <argument><expr><name pos:line="48" pos:column="54">elem<pos:position pos:line="48" pos:column="58"/></name></expr></argument>,
                                 <argument><expr><name pos:line="49" pos:column="34">asio_elem_t<pos:position pos:line="49" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="47">link<pos:position pos:line="49" pos:column="51"/></name></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
            <continue pos:line="50" pos:column="13">continue;<pos:position pos:line="50" pos:column="22"/></continue>  <comment type="block" pos:line="50" pos:column="24">/* do not re-add if it has been _removed */</comment>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="53" pos:column="9">elem<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">state<pos:position pos:line="53" pos:column="20"/></name></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <name pos:line="53" pos:column="23">ASIO_INIT<pos:position pos:line="53" pos:column="32"/></name></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">elem<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">a<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">.<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="17">aio_cflags<pos:position pos:line="54" pos:column="27"/></name></name>     <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <name pos:line="54" pos:column="34">AIO_OK2COMPIMD<pos:position pos:line="54" pos:column="48"/></name></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><literal type="number" pos:line="56" pos:column="13">0<pos:position pos:line="56" pos:column="14"/></literal> <operator pos:line="56" pos:column="15">!=<pos:position pos:line="56" pos:column="17"/></operator> <operator pos:line="56" pos:column="18">(<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="19">ret<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <call><name pos:line="56" pos:column="25">asyncio<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><operator pos:line="56" pos:column="33">&amp;<pos:position pos:line="56" pos:column="38"/></operator><name><name pos:line="56" pos:column="34">elem<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">a<pos:position pos:line="56" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call><operator pos:line="56" pos:column="42">)<pos:position pos:line="56" pos:column="43"/></operator></expr>)<pos:position pos:line="56" pos:column="44"/></condition><then pos:line="56" pos:column="44"> <block pos:line="56" pos:column="45">{
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name pos:line="57" pos:column="17">ret<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">==<pos:position pos:line="57" pos:column="23"/></operator> <literal type="number" pos:line="57" pos:column="24">1<pos:position pos:line="57" pos:column="25"/></literal></expr>)<pos:position pos:line="57" pos:column="26"/></condition><then pos:line="57" pos:column="26"> <block pos:line="57" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">DBG<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><literal type="number" pos:line="58" pos:column="21">4<pos:position pos:line="58" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="24">"asyncio() completed inline\n"<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="56"/></expr_stmt>
                <comment type="block" pos:line="59" pos:column="17">/* it's ready now */</comment>
                <expr_stmt><expr><name><name pos:line="60" pos:column="17">elem<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">state<pos:position pos:line="60" pos:column="28"/></name></name> <operator pos:line="60" pos:column="29">=<pos:position pos:line="60" pos:column="30"/></operator> <name pos:line="60" pos:column="31">ASIO_COMPLETE<pos:position pos:line="60" pos:column="44"/></name></expr>;<pos:position pos:line="60" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">APR_RING_INSERT_TAIL<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><operator pos:line="61" pos:column="38">&amp;<pos:position pos:line="61" pos:column="43"/></operator><operator pos:line="61" pos:column="39">(<pos:position pos:line="61" pos:column="40"/></operator><name><name pos:line="61" pos:column="40">priv<pos:position pos:line="61" pos:column="44"/></name><operator pos:line="61" pos:column="44">-&gt;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="46">ready_ring<pos:position pos:line="61" pos:column="56"/></name></name><operator pos:line="61" pos:column="56">)<pos:position pos:line="61" pos:column="57"/></operator></expr></argument>, <argument><expr><name pos:line="61" pos:column="59">elem<pos:position pos:line="61" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="65">asio_elem_t<pos:position pos:line="61" pos:column="76"/></name></expr></argument>,
                                     <argument><expr><name pos:line="62" pos:column="38">link<pos:position pos:line="62" pos:column="42"/></name></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="63" pos:column="14"/></block></then>
            <else pos:line="64" pos:column="13">else <block pos:line="64" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">DBG2<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><literal type="number" pos:line="65" pos:column="22">1<pos:position pos:line="65" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="25">"asyncio() failed, ret: %d, errno: %d\n"<pos:position pos:line="65" pos:column="65"/></literal></expr></argument>,
                        <argument><expr><name pos:line="66" pos:column="25">ret<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="30">errno<pos:position pos:line="66" pos:column="35"/></name></expr></argument>)<pos:position pos:line="66" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">pollset_unlock_rings<pos:position pos:line="67" pos:column="37"/></name><argument_list pos:line="67" pos:column="37">()<pos:position pos:line="67" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="40"/></expr_stmt>
                <return pos:line="68" pos:column="17">return <expr><name pos:line="68" pos:column="24">errno<pos:position pos:line="68" pos:column="29"/></name></expr>;<pos:position pos:line="68" pos:column="30"/></return>
            }<pos:position pos:line="69" pos:column="14"/></block></else></if>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">DBG1<pos:position pos:line="71" pos:column="13"/></name><argument_list pos:line="71" pos:column="13">(<argument><expr><literal type="number" pos:line="71" pos:column="14">4<pos:position pos:line="71" pos:column="15"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="17">"asyncio() completed rc %d\n"<pos:position pos:line="71" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="48">ret<pos:position pos:line="71" pos:column="51"/></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="74" pos:column="5">DBG<pos:position pos:line="74" pos:column="8"/></name><argument_list pos:line="74" pos:column="8">(<argument><expr><literal type="number" pos:line="74" pos:column="9">6<pos:position pos:line="74" pos:column="10"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="12">"after prior ready loop\n"<pos:position pos:line="74" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="40"/></expr_stmt> <comment type="block" pos:line="74" pos:column="41">/* chatty w/timeouts, hence 6 */</comment>

    <comment type="block" pos:line="76" pos:column="5">/* Gather async poll completions that have occurred since the last call */</comment>
    <while pos:line="77" pos:column="5">while <condition pos:line="77" pos:column="11">(<expr><literal type="number" pos:line="77" pos:column="12">0<pos:position pos:line="77" pos:column="13"/></literal> <operator pos:line="77" pos:column="14">&lt;<pos:position pos:line="77" pos:column="18"/></operator> <call><name pos:line="77" pos:column="16">msgrcv<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><name><name pos:line="77" pos:column="23">priv<pos:position pos:line="77" pos:column="27"/></name><operator pos:line="77" pos:column="27">-&gt;<pos:position pos:line="77" pos:column="32"/></operator><name pos:line="77" pos:column="29">msg_q<pos:position pos:line="77" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="36">&amp;<pos:position pos:line="77" pos:column="41"/></operator><name pos:line="77" pos:column="37">msg_buff<pos:position pos:line="77" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="47">sizeof<argument_list pos:line="77" pos:column="53">(<argument><expr><name pos:line="77" pos:column="54">asio_elem_t<pos:position pos:line="77" pos:column="65"/></name> <operator pos:line="77" pos:column="66">*<pos:position pos:line="77" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="77" pos:column="68"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="70">0<pos:position pos:line="77" pos:column="71"/></literal></expr></argument>,
                      <argument><expr><name pos:line="78" pos:column="23">IPC_NOWAIT<pos:position pos:line="78" pos:column="33"/></name></expr></argument>)<pos:position pos:line="78" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="35"/></condition> <block pos:line="78" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">process_msg<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">pollset<pos:position pos:line="79" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="30">&amp;<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="31">msg_buff<pos:position pos:line="79" pos:column="39"/></name></expr></argument>)<pos:position pos:line="79" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></while>

    <comment type="block" pos:line="82" pos:column="5">/* Suspend if nothing is ready yet. */</comment>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><call><name pos:line="83" pos:column="9">APR_RING_EMPTY<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><operator pos:line="83" pos:column="24">&amp;<pos:position pos:line="83" pos:column="29"/></operator><operator pos:line="83" pos:column="25">(<pos:position pos:line="83" pos:column="26"/></operator><name><name pos:line="83" pos:column="26">priv<pos:position pos:line="83" pos:column="30"/></name><operator pos:line="83" pos:column="30">-&gt;<pos:position pos:line="83" pos:column="35"/></operator><name pos:line="83" pos:column="32">ready_ring<pos:position pos:line="83" pos:column="42"/></name></name><operator pos:line="83" pos:column="42">)<pos:position pos:line="83" pos:column="43"/></operator></expr></argument>, <argument><expr><name pos:line="83" pos:column="45">asio_elem_t<pos:position pos:line="83" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="58">link<pos:position pos:line="83" pos:column="62"/></name></expr></argument>)<pos:position pos:line="83" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="64"/></condition><then pos:line="83" pos:column="64"> <block pos:line="83" pos:column="65">{

        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">timeout<pos:position pos:line="85" pos:column="20"/></name> <operator pos:line="85" pos:column="21">&gt;=<pos:position pos:line="85" pos:column="26"/></operator> <literal type="number" pos:line="85" pos:column="24">0<pos:position pos:line="85" pos:column="25"/></literal></expr>)<pos:position pos:line="85" pos:column="26"/></condition><then pos:line="85" pos:column="26"> <block pos:line="85" pos:column="27">{
            <expr_stmt><expr><name><name pos:line="86" pos:column="13">tv<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">.<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">tv_sec<pos:position pos:line="86" pos:column="22"/></name></name>  <operator pos:line="86" pos:column="24">=<pos:position pos:line="86" pos:column="25"/></operator> <call><name pos:line="86" pos:column="26">apr_time_sec<pos:position pos:line="86" pos:column="38"/></name><argument_list pos:line="86" pos:column="38">(<argument><expr><name pos:line="86" pos:column="39">timeout<pos:position pos:line="86" pos:column="46"/></name></expr></argument>)<pos:position pos:line="86" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="87" pos:column="13">tv<pos:position pos:line="87" pos:column="15"/></name><operator pos:line="87" pos:column="15">.<pos:position pos:line="87" pos:column="16"/></operator><name pos:line="87" pos:column="16">tv_nsec<pos:position pos:line="87" pos:column="23"/></name></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <call><name pos:line="87" pos:column="26">apr_time_usec<pos:position pos:line="87" pos:column="39"/></name><argument_list pos:line="87" pos:column="39">(<argument><expr><name pos:line="87" pos:column="40">timeout<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call> <operator pos:line="87" pos:column="49">*<pos:position pos:line="87" pos:column="50"/></operator> <literal type="number" pos:line="87" pos:column="51">1000<pos:position pos:line="87" pos:column="55"/></literal></expr>;<pos:position pos:line="87" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then> <else pos:line="88" pos:column="11">else <block pos:line="88" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">tv<pos:position pos:line="89" pos:column="15"/></name><operator pos:line="89" pos:column="15">.<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="16">tv_sec<pos:position pos:line="89" pos:column="22"/></name></name> <operator pos:line="89" pos:column="23">=<pos:position pos:line="89" pos:column="24"/></operator> <name pos:line="89" pos:column="25">INT_MAX<pos:position pos:line="89" pos:column="32"/></name></expr>;<pos:position pos:line="89" pos:column="33"/></expr_stmt>  <comment type="block" pos:line="89" pos:column="35">/* block until something is ready */</comment>
        }<pos:position pos:line="90" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="92" pos:column="9">DBG2<pos:position pos:line="92" pos:column="13"/></name><argument_list pos:line="92" pos:column="13">(<argument><expr><literal type="number" pos:line="92" pos:column="14">6<pos:position pos:line="92" pos:column="15"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="17">"nothing on the ready ring "<pos:position pos:line="92" pos:column="45"/></literal>
                <literal type="string" pos:line="93" pos:column="17">"- blocking for %d seconds %d ns\n"<pos:position pos:line="93" pos:column="52"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="94" pos:column="17">tv<pos:position pos:line="94" pos:column="19"/></name><operator pos:line="94" pos:column="19">.<pos:position pos:line="94" pos:column="20"/></operator><name pos:line="94" pos:column="20">tv_sec<pos:position pos:line="94" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="28">tv<pos:position pos:line="94" pos:column="30"/></name><operator pos:line="94" pos:column="30">.<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="31">tv_nsec<pos:position pos:line="94" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="96" pos:column="9">pollset_unlock_rings<pos:position pos:line="96" pos:column="29"/></name><argument_list pos:line="96" pos:column="29">()<pos:position pos:line="96" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="32"/></expr_stmt>   <comment type="block" pos:line="96" pos:column="35">/* allow other apr_pollset_* calls while blocked */</comment>

        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><literal type="number" pos:line="98" pos:column="13">0<pos:position pos:line="98" pos:column="14"/></literal> <operator pos:line="98" pos:column="15">&gt;=<pos:position pos:line="98" pos:column="20"/></operator> <operator pos:line="98" pos:column="18">(<pos:position pos:line="98" pos:column="19"/></operator><name pos:line="98" pos:column="19">ret<pos:position pos:line="98" pos:column="22"/></name> <operator pos:line="98" pos:column="23">=<pos:position pos:line="98" pos:column="24"/></operator> <call><name pos:line="98" pos:column="25">__msgrcv_timed<pos:position pos:line="98" pos:column="39"/></name><argument_list pos:line="98" pos:column="39">(<argument><expr><name><name pos:line="98" pos:column="40">priv<pos:position pos:line="98" pos:column="44"/></name><operator pos:line="98" pos:column="44">-&gt;<pos:position pos:line="98" pos:column="49"/></operator><name pos:line="98" pos:column="46">msg_q<pos:position pos:line="98" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="53">&amp;<pos:position pos:line="98" pos:column="58"/></operator><name pos:line="98" pos:column="54">msg_buff<pos:position pos:line="98" pos:column="62"/></name></expr></argument>,
                                       <argument><expr><sizeof pos:line="99" pos:column="40">sizeof<argument_list pos:line="99" pos:column="46">(<argument><expr><name pos:line="99" pos:column="47">asio_elem_t<pos:position pos:line="99" pos:column="58"/></name> <operator pos:line="99" pos:column="59">*<pos:position pos:line="99" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="99" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="63">0<pos:position pos:line="99" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="66">NULL<pos:position pos:line="99" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="72">&amp;<pos:position pos:line="99" pos:column="77"/></operator><name pos:line="99" pos:column="73">tv<pos:position pos:line="99" pos:column="75"/></name></expr></argument>)<pos:position pos:line="99" pos:column="76"/></argument_list></call><operator pos:line="99" pos:column="76">)<pos:position pos:line="99" pos:column="77"/></operator></expr>)<pos:position pos:line="99" pos:column="78"/></condition><then pos:line="99" pos:column="78"> <block pos:line="99" pos:column="79">{
<cpp:if pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">if<pos:position pos:line="100" pos:column="4"/></cpp:directive> <expr><name pos:line="100" pos:column="5">DEBUG<pos:position pos:line="100" pos:column="10"/></name></expr></cpp:if>
            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><name pos:line="101" pos:column="17">errno<pos:position pos:line="101" pos:column="22"/></name> <operator pos:line="101" pos:column="23">==<pos:position pos:line="101" pos:column="25"/></operator> <name pos:line="101" pos:column="26">EAGAIN<pos:position pos:line="101" pos:column="32"/></name></expr>)<pos:position pos:line="101" pos:column="33"/></condition><then pos:line="101" pos:column="33"> <block pos:line="101" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="102" pos:column="17">DBG<pos:position pos:line="102" pos:column="20"/></name><argument_list pos:line="102" pos:column="20">(<argument><expr><literal type="number" pos:line="102" pos:column="21">6<pos:position pos:line="102" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="24">"__msgrcv_timed timed out\n"<pos:position pos:line="102" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="54"/></expr_stmt> <comment type="block" pos:line="102" pos:column="55">/* timeout path, so 6 */</comment>
            }<pos:position pos:line="103" pos:column="14"/></block></then>
            <else pos:line="104" pos:column="13">else <block pos:line="104" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">DBG<pos:position pos:line="105" pos:column="20"/></name><argument_list pos:line="105" pos:column="20">(<argument><expr><literal type="number" pos:line="105" pos:column="21">1<pos:position pos:line="105" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="24">"__msgrcv_timed failed!\n"<pos:position pos:line="105" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="106" pos:column="14"/></block></else></if>
<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif<pos:position pos:line="107" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="108" pos:column="13">return <expr><ternary><condition><expr><operator pos:line="108" pos:column="20">(<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="21">errno<pos:position pos:line="108" pos:column="26"/></name> <operator pos:line="108" pos:column="27">==<pos:position pos:line="108" pos:column="29"/></operator> <name pos:line="108" pos:column="30">EAGAIN<pos:position pos:line="108" pos:column="36"/></name><operator pos:line="108" pos:column="36">)<pos:position pos:line="108" pos:column="37"/></operator></expr> ?<pos:position pos:line="108" pos:column="39"/></condition><then pos:line="108" pos:column="39"> <expr><name pos:line="108" pos:column="40">APR_TIMEUP<pos:position pos:line="108" pos:column="50"/></name></expr> <pos:position pos:line="108" pos:column="51"/></then><else pos:line="108" pos:column="51">: <expr><name pos:line="108" pos:column="53">errno<pos:position pos:line="108" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="108" pos:column="59"/></return>
        }<pos:position pos:line="109" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="111" pos:column="9">pollset_lock_rings<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">()<pos:position pos:line="111" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="113" pos:column="9">process_msg<pos:position pos:line="113" pos:column="20"/></name><argument_list pos:line="113" pos:column="20">(<argument><expr><name pos:line="113" pos:column="21">pollset<pos:position pos:line="113" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="30">&amp;<pos:position pos:line="113" pos:column="35"/></operator><name pos:line="113" pos:column="31">msg_buff<pos:position pos:line="113" pos:column="39"/></name></expr></argument>)<pos:position pos:line="113" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="116" pos:column="5">APR_RING_INIT<pos:position pos:line="116" pos:column="18"/></name><argument_list pos:line="116" pos:column="18">(<argument><expr><operator pos:line="116" pos:column="19">&amp;<pos:position pos:line="116" pos:column="24"/></operator><name><name pos:line="116" pos:column="20">priv<pos:position pos:line="116" pos:column="24"/></name><operator pos:line="116" pos:column="24">-&gt;<pos:position pos:line="116" pos:column="29"/></operator><name pos:line="116" pos:column="26">prior_ready_ring<pos:position pos:line="116" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="44">asio_elem_t<pos:position pos:line="116" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="57">link<pos:position pos:line="116" pos:column="61"/></name></expr></argument>)<pos:position pos:line="116" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="118" pos:column="5">(<pos:position pos:line="118" pos:column="6"/></operator><operator pos:line="118" pos:column="6">*<pos:position pos:line="118" pos:column="7"/></operator><name pos:line="118" pos:column="7">num<pos:position pos:line="118" pos:column="10"/></name><operator pos:line="118" pos:column="10">)<pos:position pos:line="118" pos:column="11"/></operator> <operator pos:line="118" pos:column="12">=<pos:position pos:line="118" pos:column="13"/></operator> <literal type="number" pos:line="118" pos:column="14">0<pos:position pos:line="118" pos:column="15"/></literal></expr>;<pos:position pos:line="118" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="119" pos:column="5">elem<pos:position pos:line="119" pos:column="9"/></name> <operator pos:line="119" pos:column="10">=<pos:position pos:line="119" pos:column="11"/></operator> <call><name pos:line="119" pos:column="12">APR_RING_FIRST<pos:position pos:line="119" pos:column="26"/></name><argument_list pos:line="119" pos:column="26">(<argument><expr><operator pos:line="119" pos:column="27">&amp;<pos:position pos:line="119" pos:column="32"/></operator><operator pos:line="119" pos:column="28">(<pos:position pos:line="119" pos:column="29"/></operator><name><name pos:line="119" pos:column="29">priv<pos:position pos:line="119" pos:column="33"/></name><operator pos:line="119" pos:column="33">-&gt;<pos:position pos:line="119" pos:column="38"/></operator><name pos:line="119" pos:column="35">ready_ring<pos:position pos:line="119" pos:column="45"/></name></name><operator pos:line="119" pos:column="45">)<pos:position pos:line="119" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="119" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="48"/></expr_stmt>

    <for pos:line="121" pos:column="5">for <control pos:line="121" pos:column="9">(<init><expr><name pos:line="121" pos:column="10">i<pos:position pos:line="121" pos:column="11"/></name> <operator pos:line="121" pos:column="12">=<pos:position pos:line="121" pos:column="13"/></operator> <literal type="number" pos:line="121" pos:column="14">0<pos:position pos:line="121" pos:column="15"/></literal></expr>;<pos:position pos:line="121" pos:column="16"/></init>

        <condition><expr><name pos:line="123" pos:column="9">i<pos:position pos:line="123" pos:column="10"/></name> <operator pos:line="123" pos:column="11">&lt;<pos:position pos:line="123" pos:column="15"/></operator> <name><name pos:line="123" pos:column="13">priv<pos:position pos:line="123" pos:column="17"/></name><operator pos:line="123" pos:column="17">-&gt;<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="19">size<pos:position pos:line="123" pos:column="23"/></name></name>
                <operator pos:line="124" pos:column="17">&amp;&amp;<pos:position pos:line="124" pos:column="27"/></operator> <name pos:line="124" pos:column="20">elem<pos:position pos:line="124" pos:column="24"/></name> <operator pos:line="124" pos:column="25">!=<pos:position pos:line="124" pos:column="27"/></operator> <call><name pos:line="124" pos:column="28">APR_RING_SENTINEL<pos:position pos:line="124" pos:column="45"/></name><argument_list pos:line="124" pos:column="45">(<argument><expr><operator pos:line="124" pos:column="46">&amp;<pos:position pos:line="124" pos:column="51"/></operator><operator pos:line="124" pos:column="47">(<pos:position pos:line="124" pos:column="48"/></operator><name><name pos:line="124" pos:column="48">priv<pos:position pos:line="124" pos:column="52"/></name><operator pos:line="124" pos:column="52">-&gt;<pos:position pos:line="124" pos:column="57"/></operator><name pos:line="124" pos:column="54">ready_ring<pos:position pos:line="124" pos:column="64"/></name></name><operator pos:line="124" pos:column="64">)<pos:position pos:line="124" pos:column="65"/></operator></expr></argument>, <argument><expr><name pos:line="124" pos:column="67">asio_elem_t<pos:position pos:line="124" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="80">link<pos:position pos:line="124" pos:column="84"/></name></expr></argument>)<pos:position pos:line="124" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="86"/></condition>
        <incr><expr><name pos:line="125" pos:column="9">i<pos:position pos:line="125" pos:column="10"/></name><operator pos:line="125" pos:column="10">++<pos:position pos:line="125" pos:column="12"/></operator></expr></incr>)<pos:position pos:line="125" pos:column="13"/></control> <block pos:line="125" pos:column="14">{
             <expr_stmt><expr><call><name pos:line="126" pos:column="14">DBG2<pos:position pos:line="126" pos:column="18"/></name><argument_list pos:line="126" pos:column="18">(<argument><expr><literal type="number" pos:line="126" pos:column="19">5<pos:position pos:line="126" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="22">"ready ring: elem %08p, fd %d\n"<pos:position pos:line="126" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="56">elem<pos:position pos:line="126" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="62">elem<pos:position pos:line="126" pos:column="66"/></name><operator pos:line="126" pos:column="66">-&gt;<pos:position pos:line="126" pos:column="71"/></operator><name pos:line="126" pos:column="68">os_pfd<pos:position pos:line="126" pos:column="74"/></name><operator pos:line="126" pos:column="74">.<pos:position pos:line="126" pos:column="75"/></operator><name pos:line="126" pos:column="75">fd<pos:position pos:line="126" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="79"/></expr_stmt>

             <expr_stmt><expr><name><name pos:line="128" pos:column="14">priv<pos:position pos:line="128" pos:column="18"/></name><operator pos:line="128" pos:column="18">-&gt;<pos:position pos:line="128" pos:column="23"/></operator><name pos:line="128" pos:column="20">result_set<pos:position pos:line="128" pos:column="30"/></name><index pos:line="128" pos:column="30">[<expr><name pos:line="128" pos:column="31">i<pos:position pos:line="128" pos:column="32"/></name></expr>]<pos:position pos:line="128" pos:column="33"/></index></name> <operator pos:line="128" pos:column="34">=<pos:position pos:line="128" pos:column="35"/></operator> <name><name pos:line="128" pos:column="36">elem<pos:position pos:line="128" pos:column="40"/></name><operator pos:line="128" pos:column="40">-&gt;<pos:position pos:line="128" pos:column="45"/></operator><name pos:line="128" pos:column="42">pfd<pos:position pos:line="128" pos:column="45"/></name></name></expr>;<pos:position pos:line="128" pos:column="46"/></expr_stmt>
             <expr_stmt><expr><name><name pos:line="129" pos:column="14">priv<pos:position pos:line="129" pos:column="18"/></name><operator pos:line="129" pos:column="18">-&gt;<pos:position pos:line="129" pos:column="23"/></operator><name pos:line="129" pos:column="20">result_set<pos:position pos:line="129" pos:column="30"/></name><index pos:line="129" pos:column="30">[<expr><name pos:line="129" pos:column="31">i<pos:position pos:line="129" pos:column="32"/></name></expr>]<pos:position pos:line="129" pos:column="33"/></index></name><operator pos:line="129" pos:column="33">.<pos:position pos:line="129" pos:column="34"/></operator><name pos:line="129" pos:column="34">rtnevents<pos:position pos:line="129" pos:column="43"/></name>
                                    <operator pos:line="130" pos:column="37">=<pos:position pos:line="130" pos:column="38"/></operator> <call><name pos:line="130" pos:column="39">get_revent<pos:position pos:line="130" pos:column="49"/></name><argument_list pos:line="130" pos:column="49">(<argument><expr><name><name pos:line="130" pos:column="50">elem<pos:position pos:line="130" pos:column="54"/></name><operator pos:line="130" pos:column="54">-&gt;<pos:position pos:line="130" pos:column="59"/></operator><name pos:line="130" pos:column="56">os_pfd<pos:position pos:line="130" pos:column="62"/></name><operator pos:line="130" pos:column="62">.<pos:position pos:line="130" pos:column="63"/></operator><name pos:line="130" pos:column="63">revents<pos:position pos:line="130" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="72"/></expr_stmt>
             <expr_stmt><expr><operator pos:line="131" pos:column="14">(<pos:position pos:line="131" pos:column="15"/></operator><operator pos:line="131" pos:column="15">*<pos:position pos:line="131" pos:column="16"/></operator><name pos:line="131" pos:column="16">num<pos:position pos:line="131" pos:column="19"/></name><operator pos:line="131" pos:column="19">)<pos:position pos:line="131" pos:column="20"/></operator><operator pos:line="131" pos:column="20">++<pos:position pos:line="131" pos:column="22"/></operator></expr>;<pos:position pos:line="131" pos:column="23"/></expr_stmt>

             <expr_stmt><expr><name pos:line="133" pos:column="14">elem<pos:position pos:line="133" pos:column="18"/></name> <operator pos:line="133" pos:column="19">=<pos:position pos:line="133" pos:column="20"/></operator> <call><name pos:line="133" pos:column="21">APR_RING_NEXT<pos:position pos:line="133" pos:column="34"/></name><argument_list pos:line="133" pos:column="34">(<argument><expr><name pos:line="133" pos:column="35">elem<pos:position pos:line="133" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="41">link<pos:position pos:line="133" pos:column="45"/></name></expr></argument>)<pos:position pos:line="133" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="47"/></expr_stmt>

<cpp:if pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">if<pos:position pos:line="135" pos:column="4"/></cpp:directive> <expr><name pos:line="135" pos:column="5">DEBUG<pos:position pos:line="135" pos:column="10"/></name></expr></cpp:if>
             <if pos:line="136" pos:column="14">if <condition pos:line="136" pos:column="17">(<expr><name pos:line="136" pos:column="18">elem<pos:position pos:line="136" pos:column="22"/></name> <operator pos:line="136" pos:column="23">==<pos:position pos:line="136" pos:column="25"/></operator> <call><name pos:line="136" pos:column="26">APR_RING_SENTINEL<pos:position pos:line="136" pos:column="43"/></name><argument_list pos:line="136" pos:column="43">(<argument><expr><operator pos:line="136" pos:column="44">&amp;<pos:position pos:line="136" pos:column="49"/></operator><operator pos:line="136" pos:column="45">(<pos:position pos:line="136" pos:column="46"/></operator><name><name pos:line="136" pos:column="46">priv<pos:position pos:line="136" pos:column="50"/></name><operator pos:line="136" pos:column="50">-&gt;<pos:position pos:line="136" pos:column="55"/></operator><name pos:line="136" pos:column="52">ready_ring<pos:position pos:line="136" pos:column="62"/></name></name><operator pos:line="136" pos:column="62">)<pos:position pos:line="136" pos:column="63"/></operator></expr></argument>, <argument><expr><name pos:line="136" pos:column="65">asio_elem_t<pos:position pos:line="136" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="78">link<pos:position pos:line="136" pos:column="82"/></name></expr></argument>)<pos:position pos:line="136" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="84"/></condition><then pos:line="136" pos:column="84"> <block pos:line="136" pos:column="85">{
                 <expr_stmt><expr><call><name pos:line="137" pos:column="18">DBG<pos:position pos:line="137" pos:column="21"/></name><argument_list pos:line="137" pos:column="21">(<argument><expr><literal type="number" pos:line="137" pos:column="22">5<pos:position pos:line="137" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="25">"end of ready ring reached\n"<pos:position pos:line="137" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="56"/></expr_stmt>
             }<pos:position pos:line="138" pos:column="15"/></block></then></if>
<cpp:endif pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">endif<pos:position pos:line="139" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="140" pos:column="6"/></block></for>

    <if pos:line="142" pos:column="5">if <condition pos:line="142" pos:column="8">(<expr><name pos:line="142" pos:column="9">descriptors<pos:position pos:line="142" pos:column="20"/></name></expr>)<pos:position pos:line="142" pos:column="21"/></condition><then pos:line="142" pos:column="21"> <block pos:line="142" pos:column="22">{
        <expr_stmt><expr><operator pos:line="143" pos:column="9">*<pos:position pos:line="143" pos:column="10"/></operator><name pos:line="143" pos:column="10">descriptors<pos:position pos:line="143" pos:column="21"/></name> <operator pos:line="143" pos:column="22">=<pos:position pos:line="143" pos:column="23"/></operator> <name><name pos:line="143" pos:column="24">priv<pos:position pos:line="143" pos:column="28"/></name><operator pos:line="143" pos:column="28">-&gt;<pos:position pos:line="143" pos:column="33"/></operator><name pos:line="143" pos:column="30">result_set<pos:position pos:line="143" pos:column="40"/></name></name></expr>;<pos:position pos:line="143" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="146" pos:column="5">/* if the result size is too small, remember which descriptors
     * haven't had results reported yet.  we will look
     * at these descriptors on the next apr_pollset_poll call
     */</comment>

    <expr_stmt><expr><call><name pos:line="151" pos:column="5">APR_RING_CONCAT<pos:position pos:line="151" pos:column="20"/></name><argument_list pos:line="151" pos:column="20">(<argument><expr><operator pos:line="151" pos:column="21">&amp;<pos:position pos:line="151" pos:column="26"/></operator><name><name pos:line="151" pos:column="22">priv<pos:position pos:line="151" pos:column="26"/></name><operator pos:line="151" pos:column="26">-&gt;<pos:position pos:line="151" pos:column="31"/></operator><name pos:line="151" pos:column="28">prior_ready_ring<pos:position pos:line="151" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="151" pos:column="46">&amp;<pos:position pos:line="151" pos:column="51"/></operator><operator pos:line="151" pos:column="47">(<pos:position pos:line="151" pos:column="48"/></operator><name><name pos:line="151" pos:column="48">priv<pos:position pos:line="151" pos:column="52"/></name><operator pos:line="151" pos:column="52">-&gt;<pos:position pos:line="151" pos:column="57"/></operator><name pos:line="151" pos:column="54">ready_ring<pos:position pos:line="151" pos:column="64"/></name></name><operator pos:line="151" pos:column="64">)<pos:position pos:line="151" pos:column="65"/></operator></expr></argument>, <argument><expr><name pos:line="151" pos:column="67">asio_elem_t<pos:position pos:line="151" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="80">link<pos:position pos:line="151" pos:column="84"/></name></expr></argument>)<pos:position pos:line="151" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="86"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="153" pos:column="5">DBG1<pos:position pos:line="153" pos:column="9"/></name><argument_list pos:line="153" pos:column="9">(<argument><expr><literal type="number" pos:line="153" pos:column="10">2<pos:position pos:line="153" pos:column="11"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="13">"exiting, rv = %d\n"<pos:position pos:line="153" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="35">rv<pos:position pos:line="153" pos:column="37"/></name></expr></argument>)<pos:position pos:line="153" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="155" pos:column="5">pollset_unlock_rings<pos:position pos:line="155" pos:column="25"/></name><argument_list pos:line="155" pos:column="25">()<pos:position pos:line="155" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="28"/></expr_stmt>

    <return pos:line="157" pos:column="5">return <expr><name pos:line="157" pos:column="12">rv<pos:position pos:line="157" pos:column="14"/></name></expr>;<pos:position pos:line="157" pos:column="15"/></return>
}<pos:position pos:line="158" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2523_httpd-2.2.19.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ap_queue_init<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">fd_queue_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type> <name pos:line="1" pos:column="41">queue<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">queue_capacity<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">apr_pool_t<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">a<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">rv<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">apr_thread_mutex_create<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><operator pos:line="7" pos:column="39">&amp;<pos:position pos:line="7" pos:column="44"/></operator><name><name pos:line="7" pos:column="40">queue<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">one_big_mutex<pos:position pos:line="7" pos:column="60"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="8" pos:column="39">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="8" pos:column="63"/></name></expr></argument>,
                                      <argument><expr><name pos:line="9" pos:column="39">a<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call><operator pos:line="9" pos:column="41">)<pos:position pos:line="9" pos:column="42"/></operator> <operator pos:line="9" pos:column="43">!=<pos:position pos:line="9" pos:column="45"/></operator> <name pos:line="9" pos:column="46">APR_SUCCESS<pos:position pos:line="9" pos:column="57"/></name></expr>)<pos:position pos:line="9" pos:column="58"/></condition><then pos:line="9" pos:column="58"> <block pos:line="9" pos:column="59">{
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">rv<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">rv<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">apr_thread_cond_create<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator><name><name pos:line="12" pos:column="39">queue<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">not_empty<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">a<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call><operator pos:line="12" pos:column="59">)<pos:position pos:line="12" pos:column="60"/></operator> <operator pos:line="12" pos:column="61">!=<pos:position pos:line="12" pos:column="63"/></operator> <name pos:line="12" pos:column="64">APR_SUCCESS<pos:position pos:line="12" pos:column="75"/></name></expr>)<pos:position pos:line="12" pos:column="76"/></condition><then pos:line="12" pos:column="76"> <block pos:line="12" pos:column="77">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">rv<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="16" pos:column="5">queue<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">data<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">apr_palloc<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">a<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">queue_capacity<pos:position pos:line="16" pos:column="47"/></name> <operator pos:line="16" pos:column="48">*<pos:position pos:line="16" pos:column="49"/></operator> <sizeof pos:line="16" pos:column="50">sizeof<argument_list pos:line="16" pos:column="56">(<argument><expr><name pos:line="16" pos:column="57">fd_queue_elem_t<pos:position pos:line="16" pos:column="72"/></name></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">queue<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">bounds<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">queue_capacity<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">queue<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">nelts<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* Set all the sockets in the queue to NULL */</comment>
    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><expr><name pos:line="21" pos:column="10">i<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></init> <condition><expr><name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="21">queue_capacity<pos:position pos:line="21" pos:column="35"/></name></expr>;<pos:position pos:line="21" pos:column="36"/></condition> <incr><expr><operator pos:line="21" pos:column="37">++<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">i<pos:position pos:line="21" pos:column="40"/></name></expr></incr>)<pos:position pos:line="21" pos:column="41"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="9">queue<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">data<pos:position pos:line="22" pos:column="20"/></name><index pos:line="22" pos:column="20">[<expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name></expr>]<pos:position pos:line="22" pos:column="23"/></index></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">sd<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">NULL<pos:position pos:line="22" pos:column="33"/></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">a<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">queue<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="41">ap_queue_destroy<pos:position pos:line="24" pos:column="57"/></name></expr></argument>,
                              <argument><expr><name pos:line="25" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="25" pos:column="52"/></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>

    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">APR_SUCCESS<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

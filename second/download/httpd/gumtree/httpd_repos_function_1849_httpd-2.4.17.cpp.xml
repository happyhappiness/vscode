<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1849_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">basic_http_header<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">request_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">r<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">apr_bucket_brigade<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">bb<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">protocol<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">date<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">proxy_date<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">server<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name pos:line="6" pos:column="26">NULL<pos:position pos:line="6" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">us<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><call><name pos:line="7" pos:column="22">ap_get_server_banner<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">()<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">header_struct<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">h<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">iovec<pos:position pos:line="9" pos:column="17"/></name></name></type> <name><name pos:line="9" pos:column="18">vec<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><literal type="number" pos:line="9" pos:column="22">4<pos:position pos:line="9" pos:column="23"/></literal></expr>]<pos:position pos:line="9" pos:column="24"/></index></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">r<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">assbackwards<pos:position pos:line="11" pos:column="24"/></name></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
        <comment type="block" pos:line="12" pos:column="9">/* there are no headers to send */</comment>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* Output the HTTP/1.x Status-Line and the Date and Server fields */</comment>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">vec<pos:position pos:line="18" pos:column="8"/></name><index pos:line="18" pos:column="8">[<expr><literal type="number" pos:line="18" pos:column="9">0<pos:position pos:line="18" pos:column="10"/></literal></expr>]<pos:position pos:line="18" pos:column="11"/></index></name><operator pos:line="18" pos:column="11">.<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">iov_base<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <operator pos:line="18" pos:column="23">(<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">void<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">*<pos:position pos:line="18" pos:column="30"/></operator><operator pos:line="18" pos:column="30">)<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">protocol<pos:position pos:line="18" pos:column="39"/></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">vec<pos:position pos:line="19" pos:column="8"/></name><index pos:line="19" pos:column="8">[<expr><literal type="number" pos:line="19" pos:column="9">0<pos:position pos:line="19" pos:column="10"/></literal></expr>]<pos:position pos:line="19" pos:column="11"/></index></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">iov_len<pos:position pos:line="19" pos:column="19"/></name>  <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">strlen<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">protocol<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">vec<pos:position pos:line="20" pos:column="8"/></name><index pos:line="20" pos:column="8">[<expr><literal type="number" pos:line="20" pos:column="9">1<pos:position pos:line="20" pos:column="10"/></literal></expr>]<pos:position pos:line="20" pos:column="11"/></index></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">iov_base<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <operator pos:line="20" pos:column="23">(<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">void<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">*<pos:position pos:line="20" pos:column="30"/></operator><operator pos:line="20" pos:column="30">)<pos:position pos:line="20" pos:column="31"/></operator><literal type="string" pos:line="20" pos:column="31">" "<pos:position pos:line="20" pos:column="34"/></literal></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">vec<pos:position pos:line="21" pos:column="8"/></name><index pos:line="21" pos:column="8">[<expr><literal type="number" pos:line="21" pos:column="9">1<pos:position pos:line="21" pos:column="10"/></literal></expr>]<pos:position pos:line="21" pos:column="11"/></index></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">iov_len<pos:position pos:line="21" pos:column="19"/></name>  <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <sizeof pos:line="21" pos:column="23">sizeof<argument_list pos:line="21" pos:column="29">(<argument><expr><literal type="string" pos:line="21" pos:column="30">" "<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></sizeof> <operator pos:line="21" pos:column="35">-<pos:position pos:line="21" pos:column="36"/></operator> <literal type="number" pos:line="21" pos:column="37">1<pos:position pos:line="21" pos:column="38"/></literal></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">vec<pos:position pos:line="22" pos:column="8"/></name><index pos:line="22" pos:column="8">[<expr><literal type="number" pos:line="22" pos:column="9">2<pos:position pos:line="22" pos:column="10"/></literal></expr>]<pos:position pos:line="22" pos:column="11"/></index></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">iov_base<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <operator pos:line="22" pos:column="23">(<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">void<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">*<pos:position pos:line="22" pos:column="30"/></operator><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator><operator pos:line="22" pos:column="31">(<pos:position pos:line="22" pos:column="32"/></operator><name><name pos:line="22" pos:column="32">r<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">status_line<pos:position pos:line="22" pos:column="46"/></name></name><operator pos:line="22" pos:column="46">)<pos:position pos:line="22" pos:column="47"/></operator></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">vec<pos:position pos:line="23" pos:column="8"/></name><index pos:line="23" pos:column="8">[<expr><literal type="number" pos:line="23" pos:column="9">2<pos:position pos:line="23" pos:column="10"/></literal></expr>]<pos:position pos:line="23" pos:column="11"/></index></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">iov_len<pos:position pos:line="23" pos:column="19"/></name>  <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">strlen<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name><name pos:line="23" pos:column="30">r<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">status_line<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">vec<pos:position pos:line="24" pos:column="8"/></name><index pos:line="24" pos:column="8">[<expr><literal type="number" pos:line="24" pos:column="9">3<pos:position pos:line="24" pos:column="10"/></literal></expr>]<pos:position pos:line="24" pos:column="11"/></index></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">iov_base<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <operator pos:line="24" pos:column="23">(<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">void<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">*<pos:position pos:line="24" pos:column="30"/></operator><operator pos:line="24" pos:column="30">)<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">CRLF<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">vec<pos:position pos:line="25" pos:column="8"/></name><index pos:line="25" pos:column="8">[<expr><literal type="number" pos:line="25" pos:column="9">3<pos:position pos:line="25" pos:column="10"/></literal></expr>]<pos:position pos:line="25" pos:column="11"/></index></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">iov_len<pos:position pos:line="25" pos:column="19"/></name>  <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <sizeof pos:line="25" pos:column="23">sizeof<argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">CRLF<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></sizeof> <operator pos:line="25" pos:column="36">-<pos:position pos:line="25" pos:column="37"/></operator> <literal type="number" pos:line="25" pos:column="38">1<pos:position pos:line="25" pos:column="39"/></literal></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="26" pos:column="23"/></name></expr></cpp:if>
    <block pos:line="27" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">char<pos:position pos:line="28" pos:column="13"/></name> <modifier pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></modifier></type><name pos:line="28" pos:column="15">tmp<pos:position pos:line="28" pos:column="18"/></name></decl>;<pos:position pos:line="28" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">apr_size_t<pos:position pos:line="29" pos:column="19"/></name></type> <name pos:line="29" pos:column="20">len<pos:position pos:line="29" pos:column="23"/></name></decl>;<pos:position pos:line="29" pos:column="24"/></decl_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">tmp<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">apr_pstrcatv<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name><name pos:line="30" pos:column="28">r<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">pool<pos:position pos:line="30" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">vec<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="42">4<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="45">&amp;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="46">len<pos:position pos:line="30" pos:column="49"/></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ap_xlate_proto_to_ascii<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">tmp<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">len<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">apr_brigade_write<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">bb<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">NULL<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">NULL<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">tmp<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">len<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block>
<cpp:else pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">else<pos:position pos:line="34" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">apr_brigade_writev<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">bb<pos:position pos:line="35" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">NULL<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">NULL<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">vec<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="45">4<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">h<pos:position pos:line="38" pos:column="6"/></name><operator pos:line="38" pos:column="6">.<pos:position pos:line="38" pos:column="7"/></operator><name pos:line="38" pos:column="7">pool<pos:position pos:line="38" pos:column="11"/></name></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <name><name pos:line="38" pos:column="14">r<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">pool<pos:position pos:line="38" pos:column="21"/></name></name></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">h<pos:position pos:line="39" pos:column="6"/></name><operator pos:line="39" pos:column="6">.<pos:position pos:line="39" pos:column="7"/></operator><name pos:line="39" pos:column="7">bb<pos:position pos:line="39" pos:column="9"/></name></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <name pos:line="39" pos:column="12">bb<pos:position pos:line="39" pos:column="14"/></name></expr>;<pos:position pos:line="39" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/*
     * keep the set-by-proxy server and date headers, otherwise
     * generate a new server header / date header
     */</comment>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">r<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">proxyreq<pos:position pos:line="45" pos:column="20"/></name></name> <operator pos:line="45" pos:column="21">!=<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="24">PROXYREQ_NONE<pos:position pos:line="45" pos:column="37"/></name></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38"> <block pos:line="45" pos:column="39">{
        <expr_stmt><expr><name pos:line="46" pos:column="9">proxy_date<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <call><name pos:line="46" pos:column="22">apr_table_get<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name><name pos:line="46" pos:column="36">r<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">-&gt;<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="39">headers_out<pos:position pos:line="46" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="52">"Date"<pos:position pos:line="46" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="60"/></expr_stmt>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">proxy_date<pos:position pos:line="47" pos:column="24"/></name></expr>)<pos:position pos:line="47" pos:column="25"/></condition><then pos:line="47" pos:column="25"> <block pos:line="47" pos:column="26">{
            <comment type="block" pos:line="48" pos:column="13">/*
             * proxy_date needs to be const. So use date for the creation of
             * our own Date header and pass it over to proxy_date later to
             * avoid a compiler warning.
             */</comment>
            <expr_stmt><expr><name pos:line="53" pos:column="13">date<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <call><name pos:line="53" pos:column="20">apr_palloc<pos:position pos:line="53" pos:column="30"/></name><argument_list pos:line="53" pos:column="30">(<argument><expr><name><name pos:line="53" pos:column="31">r<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">pool<pos:position pos:line="53" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="40">APR_RFC822_DATE_LEN<pos:position pos:line="53" pos:column="59"/></name></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_recent_rfc822_date<pos:position pos:line="54" pos:column="34"/></name><argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">date<pos:position pos:line="54" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="41">r<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">-&gt;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="44">request_time<pos:position pos:line="54" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="56" pos:column="9">server<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <call><name pos:line="56" pos:column="18">apr_table_get<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name><name pos:line="56" pos:column="32">r<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">headers_out<pos:position pos:line="56" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="48">"Server"<pos:position pos:line="56" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then>
    <else pos:line="58" pos:column="5">else <block pos:line="58" pos:column="10">{
        <expr_stmt><expr><name pos:line="59" pos:column="9">date<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <call><name pos:line="59" pos:column="16">apr_palloc<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><name><name pos:line="59" pos:column="27">r<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">-&gt;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="30">pool<pos:position pos:line="59" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">APR_RFC822_DATE_LEN<pos:position pos:line="59" pos:column="55"/></name></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">ap_recent_rfc822_date<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">date<pos:position pos:line="60" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="37">r<pos:position pos:line="60" pos:column="38"/></name><operator pos:line="60" pos:column="38">-&gt;<pos:position pos:line="60" pos:column="43"/></operator><name pos:line="60" pos:column="40">request_time<pos:position pos:line="60" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">form_header_field<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><operator pos:line="63" pos:column="23">&amp;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="24">h<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">"Date"<pos:position pos:line="63" pos:column="33"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="63" pos:column="35">proxy_date<pos:position pos:line="63" pos:column="45"/></name></expr> ?<pos:position pos:line="63" pos:column="47"/></condition><then pos:line="63" pos:column="47"> <expr><name pos:line="63" pos:column="48">proxy_date<pos:position pos:line="63" pos:column="58"/></name></expr> <pos:position pos:line="63" pos:column="59"/></then><else pos:line="63" pos:column="59">: <expr><name pos:line="63" pos:column="61">date<pos:position pos:line="63" pos:column="65"/></name></expr></else></ternary></expr></argument> )<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="68"/></expr_stmt>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><name pos:line="65" pos:column="10">server<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">&amp;&amp;<pos:position pos:line="65" pos:column="27"/></operator> <operator pos:line="65" pos:column="20">*<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">us<pos:position pos:line="65" pos:column="23"/></name></expr>)<pos:position pos:line="65" pos:column="24"/></condition><then pos:line="65" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="9">server<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <name pos:line="66" pos:column="18">us<pos:position pos:line="66" pos:column="20"/></name></expr>;<pos:position pos:line="66" pos:column="21"/></expr_stmt></block></then></if>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">server<pos:position pos:line="67" pos:column="15"/></name></expr>)<pos:position pos:line="67" pos:column="16"/></condition><then pos:line="67" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="9">form_header_field<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><operator pos:line="68" pos:column="27">&amp;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="28">h<pos:position pos:line="68" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="31">"Server"<pos:position pos:line="68" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="41">server<pos:position pos:line="68" pos:column="47"/></name></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="49"/></expr_stmt></block></then></if>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><call><name pos:line="70" pos:column="9">APLOGrtrace3<pos:position pos:line="70" pos:column="21"/></name><argument_list pos:line="70" pos:column="21">(<argument><expr><name pos:line="70" pos:column="22">r<pos:position pos:line="70" pos:column="23"/></name></expr></argument>)<pos:position pos:line="70" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="25"/></condition><then pos:line="70" pos:column="25"> <block pos:line="70" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">ap_log_rerror<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">APLOG_MARK<pos:position pos:line="71" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="35">APLOG_TRACE3<pos:position pos:line="71" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="49">0<pos:position pos:line="71" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="52">r<pos:position pos:line="71" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="72" pos:column="23">"Response sent with status %d%s"<pos:position pos:line="72" pos:column="55"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="73" pos:column="23">r<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">-&gt;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="26">status<pos:position pos:line="73" pos:column="32"/></name></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><call><name pos:line="74" pos:column="23">APLOGrtrace4<pos:position pos:line="74" pos:column="35"/></name><argument_list pos:line="74" pos:column="35">(<argument><expr><name pos:line="74" pos:column="36">r<pos:position pos:line="74" pos:column="37"/></name></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="74" pos:column="40"/></condition><then pos:line="74" pos:column="40"> <expr><literal type="string" pos:line="74" pos:column="41">", headers:"<pos:position pos:line="74" pos:column="53"/></literal></expr> <pos:position pos:line="74" pos:column="54"/></then><else pos:line="74" pos:column="54">: <expr><literal type="string" pos:line="74" pos:column="56">""<pos:position pos:line="74" pos:column="58"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="74" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="60"/></expr_stmt>

        <comment type="block" pos:line="76" pos:column="9">/*
         * Date and Server are less interesting, use TRACE5 for them while
         * using TRACE4 for the other headers.
         */</comment>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">ap_log_rerror<pos:position pos:line="80" pos:column="22"/></name><argument_list pos:line="80" pos:column="22">(<argument><expr><name pos:line="80" pos:column="23">APLOG_MARK<pos:position pos:line="80" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="35">APLOG_TRACE5<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="49">0<pos:position pos:line="80" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="52">r<pos:position pos:line="80" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="55">"  Date: %s"<pos:position pos:line="80" pos:column="67"/></literal></expr></argument>,
                      <argument><expr><ternary><condition><expr><name pos:line="81" pos:column="23">proxy_date<pos:position pos:line="81" pos:column="33"/></name></expr> ?<pos:position pos:line="81" pos:column="35"/></condition><then pos:line="81" pos:column="35"> <expr><name pos:line="81" pos:column="36">proxy_date<pos:position pos:line="81" pos:column="46"/></name></expr> <pos:position pos:line="81" pos:column="47"/></then><else pos:line="81" pos:column="47">: <expr><name pos:line="81" pos:column="49">date<pos:position pos:line="81" pos:column="53"/></name></expr></else></ternary></expr></argument> )<pos:position pos:line="81" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="56"/></expr_stmt>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name pos:line="82" pos:column="13">server<pos:position pos:line="82" pos:column="19"/></name></expr>)<pos:position pos:line="82" pos:column="20"/></condition><then pos:line="82" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="13">ap_log_rerror<pos:position pos:line="83" pos:column="26"/></name><argument_list pos:line="83" pos:column="26">(<argument><expr><name pos:line="83" pos:column="27">APLOG_MARK<pos:position pos:line="83" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="39">APLOG_TRACE5<pos:position pos:line="83" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="53">0<pos:position pos:line="83" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="56">r<pos:position pos:line="83" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="59">"  Server: %s"<pos:position pos:line="83" pos:column="73"/></literal></expr></argument>,
                          <argument><expr><name pos:line="84" pos:column="27">server<pos:position pos:line="84" pos:column="33"/></name></expr></argument>)<pos:position pos:line="84" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>


    <comment type="block" pos:line="88" pos:column="5">/* unset so we don't send them again */</comment>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">apr_table_unset<pos:position pos:line="89" pos:column="20"/></name><argument_list pos:line="89" pos:column="20">(<argument><expr><name><name pos:line="89" pos:column="21">r<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">-&gt;<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="24">headers_out<pos:position pos:line="89" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="37">"Date"<pos:position pos:line="89" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="45"/></expr_stmt>        <comment type="block" pos:line="89" pos:column="53">/* Avoid bogosity */</comment>
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name pos:line="90" pos:column="9">server<pos:position pos:line="90" pos:column="15"/></name></expr>)<pos:position pos:line="90" pos:column="16"/></condition><then pos:line="90" pos:column="16"> <block pos:line="90" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">apr_table_unset<pos:position pos:line="91" pos:column="24"/></name><argument_list pos:line="91" pos:column="24">(<argument><expr><name><name pos:line="91" pos:column="25">r<pos:position pos:line="91" pos:column="26"/></name><operator pos:line="91" pos:column="26">-&gt;<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="28">headers_out<pos:position pos:line="91" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="41">"Server"<pos:position pos:line="91" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7109.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">handle_include<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">include_ctx_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">ctx<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">ap_filter_t<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">f<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">apr_bucket_brigade<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">bb<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">last_error<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">ctx<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">argc<pos:position pos:line="7" pos:column="19"/></name></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_rerror<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">APLOG_MARK<pos:position pos:line="8" pos:column="33"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><name><name pos:line="9" pos:column="24">ctx<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">flags<pos:position pos:line="9" pos:column="34"/></name></name> <operator pos:line="9" pos:column="35">&amp;<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="37">SSI_FLAG_PRINTING<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">)<pos:position pos:line="9" pos:column="55"/></operator></expr>
                          ?<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <expr><name pos:line="10" pos:column="29">APLOG_ERR<pos:position pos:line="10" pos:column="38"/></name></expr> <pos:position pos:line="10" pos:column="39"/></then><else pos:line="10" pos:column="39">: <expr><name pos:line="10" pos:column="41">APLOG_WARNING<pos:position pos:line="10" pos:column="54"/></name></expr></else></ternary></expr></argument>,
                      <argument><expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="26">r<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="29">APLOGNO<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><literal type="number" pos:line="11" pos:column="37">01341<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call>
                      <literal type="string" pos:line="12" pos:column="23">"missing argument for include element in %s"<pos:position pos:line="12" pos:column="67"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="13" pos:column="23">r<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">filename<pos:position pos:line="13" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator><name><name pos:line="16" pos:column="11">ctx<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">flags<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">&amp;<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="24">SSI_FLAG_PRINTING<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">)<pos:position pos:line="16" pos:column="42"/></operator></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">APR_SUCCESS<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name><name pos:line="20" pos:column="10">ctx<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">argc<pos:position pos:line="20" pos:column="19"/></name></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">ctx<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">f<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">bb<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">APR_SUCCESS<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">last_error<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">NULL<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <while pos:line="26" pos:column="5">while <condition pos:line="26" pos:column="11">(<expr><literal type="number" pos:line="26" pos:column="12">1<pos:position pos:line="26" pos:column="13"/></literal></expr>)<pos:position pos:line="26" pos:column="14"/></condition> <block pos:line="26" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name> <modifier pos:line="27" pos:column="14">*<pos:position pos:line="27" pos:column="15"/></modifier></type><name pos:line="27" pos:column="15">tag<pos:position pos:line="27" pos:column="18"/></name>     <init pos:line="27" pos:column="23">= <expr><name pos:line="27" pos:column="25">NULL<pos:position pos:line="27" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">char<pos:position pos:line="28" pos:column="13"/></name> <modifier pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></modifier></type><name pos:line="28" pos:column="15">tag_val<pos:position pos:line="28" pos:column="22"/></name> <init pos:line="28" pos:column="23">= <expr><name pos:line="28" pos:column="25">NULL<pos:position pos:line="28" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">request_rec<pos:position pos:line="29" pos:column="20"/></name> <modifier pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></modifier></type><name pos:line="29" pos:column="22">rr<pos:position pos:line="29" pos:column="24"/></name> <init pos:line="29" pos:column="25">= <expr><name pos:line="29" pos:column="27">NULL<pos:position pos:line="29" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">char<pos:position pos:line="30" pos:column="13"/></name> <modifier pos:line="30" pos:column="14">*<pos:position pos:line="30" pos:column="15"/></modifier></type><name pos:line="30" pos:column="15">error_fmt<pos:position pos:line="30" pos:column="24"/></name> <init pos:line="30" pos:column="25">= <expr><name pos:line="30" pos:column="27">NULL<pos:position pos:line="30" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">char<pos:position pos:line="31" pos:column="13"/></name> <modifier pos:line="31" pos:column="14">*<pos:position pos:line="31" pos:column="15"/></modifier></type><name pos:line="31" pos:column="15">parsed_string<pos:position pos:line="31" pos:column="28"/></name></decl>;<pos:position pos:line="31" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_ssi_get_tag_and_value<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">ctx<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="40">tag<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="45">&amp;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="46">tag_val<pos:position pos:line="33" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="55">SSI_VALUE_DECODED<pos:position pos:line="33" pos:column="72"/></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="74"/></expr_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">tag<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">||<pos:position pos:line="34" pos:column="20"/></operator> <operator pos:line="34" pos:column="21">!<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">tag_val<pos:position pos:line="34" pos:column="29"/></name></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30"> <block pos:line="34" pos:column="31">{
            <break pos:line="35" pos:column="13">break;<pos:position pos:line="35" pos:column="19"/></break>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">strcmp<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">tag<pos:position pos:line="38" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="25">"virtual"<pos:position pos:line="38" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call> <operator pos:line="38" pos:column="36">&amp;&amp;<pos:position pos:line="38" pos:column="46"/></operator> <call><name pos:line="38" pos:column="39">strcmp<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">tag<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="51">"file"<pos:position pos:line="38" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call> <operator pos:line="38" pos:column="59">&amp;&amp;<pos:position pos:line="38" pos:column="69"/></operator> <call><name pos:line="38" pos:column="62">strcmp<pos:position pos:line="38" pos:column="68"/></name><argument_list pos:line="38" pos:column="68">(<argument><expr><name pos:line="38" pos:column="69">tag<pos:position pos:line="38" pos:column="72"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="39" pos:column="17">"onerror"<pos:position pos:line="39" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="28"/></condition><then pos:line="39" pos:column="28"> <block pos:line="39" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">ap_log_rerror<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">APLOG_MARK<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="39">APLOG_ERR<pos:position pos:line="40" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="50">0<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">r<pos:position pos:line="40" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="56">APLOGNO<pos:position pos:line="40" pos:column="63"/></name><argument_list pos:line="40" pos:column="63">(<argument><expr><literal type="number" pos:line="40" pos:column="64">01342<pos:position pos:line="40" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call> <literal type="string" pos:line="40" pos:column="71">"unknown parameter "<pos:position pos:line="40" pos:column="91"/></literal>
                          <literal type="string" pos:line="41" pos:column="27">"\"%s\" to tag include in %s"<pos:position pos:line="41" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="58">tag<pos:position pos:line="41" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="63">r<pos:position pos:line="41" pos:column="64"/></name><operator pos:line="41" pos:column="64">-&gt;<pos:position pos:line="41" pos:column="69"/></operator><name pos:line="41" pos:column="66">filename<pos:position pos:line="41" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">ctx<pos:position pos:line="42" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">f<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="45">bb<pos:position pos:line="42" pos:column="47"/></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>
            <break pos:line="43" pos:column="13">break;<pos:position pos:line="43" pos:column="19"/></break>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="46" pos:column="9">parsed_string<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <call><name pos:line="46" pos:column="25">ap_ssi_parse_string<pos:position pos:line="46" pos:column="44"/></name><argument_list pos:line="46" pos:column="44">(<argument><expr><name pos:line="46" pos:column="45">ctx<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">tag_val<pos:position pos:line="46" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="59">NULL<pos:position pos:line="46" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="65">0<pos:position pos:line="46" pos:column="66"/></literal></expr></argument>,
                                            <argument><expr><name pos:line="47" pos:column="45">SSI_EXPAND_DROP_NAME<pos:position pos:line="47" pos:column="65"/></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">tag<pos:position pos:line="48" pos:column="16"/></name><index pos:line="48" pos:column="16">[<expr><literal type="number" pos:line="48" pos:column="17">0<pos:position pos:line="48" pos:column="18"/></literal></expr>]<pos:position pos:line="48" pos:column="19"/></index></name> <operator pos:line="48" pos:column="20">==<pos:position pos:line="48" pos:column="22"/></operator> <literal type="char" pos:line="48" pos:column="23">'f'<pos:position pos:line="48" pos:column="26"/></literal></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27"> <block pos:line="48" pos:column="28">{
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">char<pos:position pos:line="49" pos:column="17"/></name> <modifier pos:line="49" pos:column="18">*<pos:position pos:line="49" pos:column="19"/></modifier></type><name pos:line="49" pos:column="19">newpath<pos:position pos:line="49" pos:column="26"/></name></decl>;<pos:position pos:line="49" pos:column="27"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="50" pos:column="13">apr_status_t<pos:position pos:line="50" pos:column="25"/></name></type> <name pos:line="50" pos:column="26">rv<pos:position pos:line="50" pos:column="28"/></name></decl>;<pos:position pos:line="50" pos:column="29"/></decl_stmt>

            <comment type="block" pos:line="52" pos:column="13">/* be safe; only files in this directory or below allowed */</comment>
            <expr_stmt><expr><name pos:line="53" pos:column="13">rv<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">apr_filepath_merge<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><operator pos:line="53" pos:column="37">&amp;<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="38">newpath<pos:position pos:line="53" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="47">NULL<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="53">parsed_string<pos:position pos:line="53" pos:column="66"/></name></expr></argument>,
                                    <argument><expr><name pos:line="54" pos:column="37">APR_FILEPATH_SECUREROOTTEST<pos:position pos:line="54" pos:column="64"/></name> <operator pos:line="54" pos:column="65">|<pos:position pos:line="54" pos:column="66"/></operator>
                                    <name pos:line="55" pos:column="37">APR_FILEPATH_NOTABSOLUTE<pos:position pos:line="55" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="63">ctx<pos:position pos:line="55" pos:column="66"/></name><operator pos:line="55" pos:column="66">-&gt;<pos:position pos:line="55" pos:column="71"/></operator><name pos:line="55" pos:column="68">dpool<pos:position pos:line="55" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="75"/></expr_stmt>

            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name pos:line="57" pos:column="17">rv<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">!=<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">APR_SUCCESS<pos:position pos:line="57" pos:column="34"/></name></expr>)<pos:position pos:line="57" pos:column="35"/></condition><then pos:line="57" pos:column="35"> <block pos:line="57" pos:column="36">{
                <expr_stmt><expr><name pos:line="58" pos:column="17">error_fmt<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">=<pos:position pos:line="58" pos:column="28"/></operator> <literal type="string" pos:line="58" pos:column="29">"unable to include file \"%s\" in parsed file %s"<pos:position pos:line="58" pos:column="78"/></literal></expr>;<pos:position pos:line="58" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></then>
            <else pos:line="60" pos:column="13">else <block pos:line="60" pos:column="18">{
                <expr_stmt><expr><name pos:line="61" pos:column="17">rr<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <call><name pos:line="61" pos:column="22">ap_sub_req_lookup_file<pos:position pos:line="61" pos:column="44"/></name><argument_list pos:line="61" pos:column="44">(<argument><expr><name pos:line="61" pos:column="45">newpath<pos:position pos:line="61" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">r<pos:position pos:line="61" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="57">f<pos:position pos:line="61" pos:column="58"/></name><operator pos:line="61" pos:column="58">-&gt;<pos:position pos:line="61" pos:column="63"/></operator><name pos:line="61" pos:column="60">next<pos:position pos:line="61" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="62" pos:column="14"/></block></else></if>
        }<pos:position pos:line="63" pos:column="10"/></block></then>
        <elseif pos:line="64" pos:column="9">else <if pos:line="64" pos:column="14">if <condition pos:line="64" pos:column="17">(<expr><operator pos:line="64" pos:column="18">(<pos:position pos:line="64" pos:column="19"/></operator><name><name pos:line="64" pos:column="19">tag<pos:position pos:line="64" pos:column="22"/></name><index pos:line="64" pos:column="22">[<expr><literal type="number" pos:line="64" pos:column="23">0<pos:position pos:line="64" pos:column="24"/></literal></expr>]<pos:position pos:line="64" pos:column="25"/></index></name> <operator pos:line="64" pos:column="26">==<pos:position pos:line="64" pos:column="28"/></operator> <literal type="char" pos:line="64" pos:column="29">'v'<pos:position pos:line="64" pos:column="32"/></literal> <operator pos:line="64" pos:column="33">&amp;&amp;<pos:position pos:line="64" pos:column="43"/></operator> <operator pos:line="64" pos:column="36">!<pos:position pos:line="64" pos:column="37"/></operator><name pos:line="64" pos:column="37">last_error<pos:position pos:line="64" pos:column="47"/></name><operator pos:line="64" pos:column="47">)<pos:position pos:line="64" pos:column="48"/></operator>
                <operator pos:line="65" pos:column="17">||<pos:position pos:line="65" pos:column="19"/></operator> <operator pos:line="65" pos:column="20">(<pos:position pos:line="65" pos:column="21"/></operator><name><name pos:line="65" pos:column="21">tag<pos:position pos:line="65" pos:column="24"/></name><index pos:line="65" pos:column="24">[<expr><literal type="number" pos:line="65" pos:column="25">0<pos:position pos:line="65" pos:column="26"/></literal></expr>]<pos:position pos:line="65" pos:column="27"/></index></name> <operator pos:line="65" pos:column="28">==<pos:position pos:line="65" pos:column="30"/></operator> <literal type="char" pos:line="65" pos:column="31">'o'<pos:position pos:line="65" pos:column="34"/></literal> <operator pos:line="65" pos:column="35">&amp;&amp;<pos:position pos:line="65" pos:column="45"/></operator> <name pos:line="65" pos:column="38">last_error<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">)<pos:position pos:line="65" pos:column="49"/></operator></expr>)<pos:position pos:line="65" pos:column="50"/></condition><then pos:line="65" pos:column="50"> <block pos:line="65" pos:column="51">{
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name><name pos:line="66" pos:column="17">r<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">-&gt;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="20">kept_body<pos:position pos:line="66" pos:column="29"/></name></name></expr>)<pos:position pos:line="66" pos:column="30"/></condition><then pos:line="66" pos:column="30"> <block pos:line="66" pos:column="31">{
                <expr_stmt><expr><name pos:line="67" pos:column="17">rr<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call><name pos:line="67" pos:column="22">ap_sub_req_method_uri<pos:position pos:line="67" pos:column="43"/></name><argument_list pos:line="67" pos:column="43">(<argument><expr><name><name pos:line="67" pos:column="44">r<pos:position pos:line="67" pos:column="45"/></name><operator pos:line="67" pos:column="45">-&gt;<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="47">method<pos:position pos:line="67" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="55">parsed_string<pos:position pos:line="67" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="70">r<pos:position pos:line="67" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="73">f<pos:position pos:line="67" pos:column="74"/></name><operator pos:line="67" pos:column="74">-&gt;<pos:position pos:line="67" pos:column="79"/></operator><name pos:line="67" pos:column="76">next<pos:position pos:line="67" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="82"/></expr_stmt>
            }<pos:position pos:line="68" pos:column="14"/></block></then>
            <else pos:line="69" pos:column="13">else <block pos:line="69" pos:column="18">{
                <expr_stmt><expr><name pos:line="70" pos:column="17">rr<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">=<pos:position pos:line="70" pos:column="21"/></operator> <call><name pos:line="70" pos:column="22">ap_sub_req_lookup_uri<pos:position pos:line="70" pos:column="43"/></name><argument_list pos:line="70" pos:column="43">(<argument><expr><name pos:line="70" pos:column="44">parsed_string<pos:position pos:line="70" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="59">r<pos:position pos:line="70" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="62">f<pos:position pos:line="70" pos:column="63"/></name><operator pos:line="70" pos:column="63">-&gt;<pos:position pos:line="70" pos:column="68"/></operator><name pos:line="70" pos:column="65">next<pos:position pos:line="70" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="71" pos:column="14"/></block></else></if>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if></elseif>
        <else pos:line="73" pos:column="9">else <block pos:line="73" pos:column="14">{
            <continue pos:line="74" pos:column="13">continue;<pos:position pos:line="74" pos:column="22"/></continue>
        }<pos:position pos:line="75" pos:column="10"/></block></else></if>

        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">!<pos:position pos:line="77" pos:column="14"/></operator><name pos:line="77" pos:column="14">error_fmt<pos:position pos:line="77" pos:column="23"/></name> <operator pos:line="77" pos:column="24">&amp;&amp;<pos:position pos:line="77" pos:column="34"/></operator> <name><name pos:line="77" pos:column="27">rr<pos:position pos:line="77" pos:column="29"/></name><operator pos:line="77" pos:column="29">-&gt;<pos:position pos:line="77" pos:column="34"/></operator><name pos:line="77" pos:column="31">status<pos:position pos:line="77" pos:column="37"/></name></name> <operator pos:line="77" pos:column="38">!=<pos:position pos:line="77" pos:column="40"/></operator> <name pos:line="77" pos:column="41">HTTP_OK<pos:position pos:line="77" pos:column="48"/></name></expr>)<pos:position pos:line="77" pos:column="49"/></condition><then pos:line="77" pos:column="49"> <block pos:line="77" pos:column="50">{
            <expr_stmt><expr><name pos:line="78" pos:column="13">error_fmt<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <literal type="string" pos:line="78" pos:column="25">"unable to include \"%s\" in parsed file %s"<pos:position pos:line="78" pos:column="69"/></literal></expr>;<pos:position pos:line="78" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>

        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">!<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">error_fmt<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">&amp;&amp;<pos:position pos:line="81" pos:column="34"/></operator> <operator pos:line="81" pos:column="27">(<pos:position pos:line="81" pos:column="28"/></operator><name><name pos:line="81" pos:column="28">ctx<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">-&gt;<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="33">flags<pos:position pos:line="81" pos:column="38"/></name></name> <operator pos:line="81" pos:column="39">&amp;<pos:position pos:line="81" pos:column="44"/></operator> <name pos:line="81" pos:column="41">SSI_FLAG_NO_EXEC<pos:position pos:line="81" pos:column="57"/></name><operator pos:line="81" pos:column="57">)<pos:position pos:line="81" pos:column="58"/></operator> <operator pos:line="81" pos:column="59">&amp;&amp;<pos:position pos:line="81" pos:column="69"/></operator>
            <name><name pos:line="82" pos:column="13">rr<pos:position pos:line="82" pos:column="15"/></name><operator pos:line="82" pos:column="15">-&gt;<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="17">content_type<pos:position pos:line="82" pos:column="29"/></name></name> <operator pos:line="82" pos:column="30">&amp;&amp;<pos:position pos:line="82" pos:column="40"/></operator> <call><name pos:line="82" pos:column="33">strncmp<pos:position pos:line="82" pos:column="40"/></name><argument_list pos:line="82" pos:column="40">(<argument><expr><name><name pos:line="82" pos:column="41">rr<pos:position pos:line="82" pos:column="43"/></name><operator pos:line="82" pos:column="43">-&gt;<pos:position pos:line="82" pos:column="48"/></operator><name pos:line="82" pos:column="45">content_type<pos:position pos:line="82" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="59">"text/"<pos:position pos:line="82" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="68">5<pos:position pos:line="82" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="71"/></condition><then pos:line="82" pos:column="71"> <block pos:line="82" pos:column="72">{

            <expr_stmt><expr><name pos:line="84" pos:column="13">error_fmt<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">=<pos:position pos:line="84" pos:column="24"/></operator> <literal type="string" pos:line="84" pos:column="25">"unable to include potential exec \"%s\" in parsed "<pos:position pos:line="84" pos:column="77"/></literal>
                        <literal type="string" pos:line="85" pos:column="25">"file %s"<pos:position pos:line="85" pos:column="34"/></literal></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="88" pos:column="9">/* See the Kludge in includes_filter for why.
         * Basically, it puts a bread crumb in here, then looks
         * for the crumb later to see if its been here.
         */</comment>
        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">rr<pos:position pos:line="92" pos:column="15"/></name></expr>)<pos:position pos:line="92" pos:column="16"/></condition><then pos:line="92" pos:column="16"> <block pos:line="92" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">ap_set_module_config<pos:position pos:line="93" pos:column="33"/></name><argument_list pos:line="93" pos:column="33">(<argument><expr><name><name pos:line="93" pos:column="34">rr<pos:position pos:line="93" pos:column="36"/></name><operator pos:line="93" pos:column="36">-&gt;<pos:position pos:line="93" pos:column="41"/></operator><name pos:line="93" pos:column="38">request_config<pos:position pos:line="93" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="54">&amp;<pos:position pos:line="93" pos:column="59"/></operator><name pos:line="93" pos:column="55">include_module<pos:position pos:line="93" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="71">r<pos:position pos:line="93" pos:column="72"/></name></expr></argument>)<pos:position pos:line="93" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then></if>

        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><operator pos:line="96" pos:column="13">!<pos:position pos:line="96" pos:column="14"/></operator><name pos:line="96" pos:column="14">error_fmt<pos:position pos:line="96" pos:column="23"/></name> <operator pos:line="96" pos:column="24">&amp;&amp;<pos:position pos:line="96" pos:column="34"/></operator> <call><name pos:line="96" pos:column="27">ap_run_sub_req<pos:position pos:line="96" pos:column="41"/></name><argument_list pos:line="96" pos:column="41">(<argument><expr><name pos:line="96" pos:column="42">rr<pos:position pos:line="96" pos:column="44"/></name></expr></argument>)<pos:position pos:line="96" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="46"/></condition><then pos:line="96" pos:column="46"> <block pos:line="96" pos:column="47">{
            <expr_stmt><expr><name pos:line="97" pos:column="13">error_fmt<pos:position pos:line="97" pos:column="22"/></name> <operator pos:line="97" pos:column="23">=<pos:position pos:line="97" pos:column="24"/></operator> <literal type="string" pos:line="97" pos:column="25">"unable to include \"%s\" in parsed file %s"<pos:position pos:line="97" pos:column="69"/></literal></expr>;<pos:position pos:line="97" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>

        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">error_fmt<pos:position pos:line="100" pos:column="22"/></name></expr>)<pos:position pos:line="100" pos:column="23"/></condition><then pos:line="100" pos:column="23"> <block pos:line="100" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">ap_log_rerror<pos:position pos:line="101" pos:column="26"/></name><argument_list pos:line="101" pos:column="26">(<argument><expr><name pos:line="101" pos:column="27">APLOG_MARK<pos:position pos:line="101" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="39">APLOG_ERR<pos:position pos:line="101" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="50">0<pos:position pos:line="101" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="53">r<pos:position pos:line="101" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="56">error_fmt<pos:position pos:line="101" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="67">tag_val<pos:position pos:line="101" pos:column="74"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="102" pos:column="21">r<pos:position pos:line="102" pos:column="22"/></name><operator pos:line="102" pos:column="22">-&gt;<pos:position pos:line="102" pos:column="27"/></operator><name pos:line="102" pos:column="24">filename<pos:position pos:line="102" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="34"/></expr_stmt>
            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name pos:line="103" pos:column="17">last_error<pos:position pos:line="103" pos:column="27"/></name></expr>)<pos:position pos:line="103" pos:column="28"/></condition><then pos:line="103" pos:column="28"> <block pos:line="103" pos:column="29">{
                <comment type="block" pos:line="104" pos:column="17">/* onerror threw an error, give up completely */</comment>
                <break pos:line="105" pos:column="17">break;<pos:position pos:line="105" pos:column="23"/></break>
            }<pos:position pos:line="106" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="107" pos:column="13">last_error<pos:position pos:line="107" pos:column="23"/></name> <operator pos:line="107" pos:column="24">=<pos:position pos:line="107" pos:column="25"/></operator> <name pos:line="107" pos:column="26">error_fmt<pos:position pos:line="107" pos:column="35"/></name></expr>;<pos:position pos:line="107" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="108" pos:column="10"/></block></then>
        <else pos:line="109" pos:column="9">else <block pos:line="109" pos:column="14">{
            <expr_stmt><expr><name pos:line="110" pos:column="13">last_error<pos:position pos:line="110" pos:column="23"/></name> <operator pos:line="110" pos:column="24">=<pos:position pos:line="110" pos:column="25"/></operator> <name pos:line="110" pos:column="26">NULL<pos:position pos:line="110" pos:column="30"/></name></expr>;<pos:position pos:line="110" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="111" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="113" pos:column="9">/* Do *not* destroy the subrequest here; it may have allocated
         * variables in this r-&gt;subprocess_env in the subrequest's
         * r-&gt;pool, so that pool must survive as long as this request.
         * Yes, this is a memory leak. */</comment>

    }<pos:position pos:line="118" pos:column="6"/></block></while>

    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><name pos:line="120" pos:column="9">last_error<pos:position pos:line="120" pos:column="19"/></name></expr>)<pos:position pos:line="120" pos:column="20"/></condition><then pos:line="120" pos:column="20"> <block pos:line="120" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="121" pos:column="32"/></name><argument_list pos:line="121" pos:column="32">(<argument><expr><name pos:line="121" pos:column="33">ctx<pos:position pos:line="121" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="38">f<pos:position pos:line="121" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="41">bb<pos:position pos:line="121" pos:column="43"/></name></expr></argument>)<pos:position pos:line="121" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if>

    <return pos:line="124" pos:column="5">return <expr><name pos:line="124" pos:column="12">APR_SUCCESS<pos:position pos:line="124" pos:column="23"/></name></expr>;<pos:position pos:line="124" pos:column="24"/></return>
}<pos:position pos:line="125" pos:column="2"/></block></function></unit>

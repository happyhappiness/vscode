<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3586_httpd-2.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">adjust_recurse<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">uschar<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">group<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">adjust<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">BOOL<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">utf8<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">compile_data<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">cd<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><name pos:line="4" pos:column="1">uschar<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ptr<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">group<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
<while pos:line="5" pos:column="1">while <condition pos:line="5" pos:column="7">(<expr><operator pos:line="5" pos:column="8">(<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">ptr<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <operator pos:line="5" pos:column="15">(<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">uschar<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator><operator pos:line="5" pos:column="24">)<pos:position pos:line="5" pos:column="25"/></operator><call><name pos:line="5" pos:column="25">find_recurse<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">ptr<pos:position pos:line="5" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">utf8<pos:position pos:line="5" pos:column="47"/></name></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call><operator pos:line="5" pos:column="48">)<pos:position pos:line="5" pos:column="49"/></operator> <operator pos:line="5" pos:column="50">!=<pos:position pos:line="5" pos:column="52"/></operator> <name pos:line="5" pos:column="53">NULL<pos:position pos:line="5" pos:column="57"/></name></expr>)<pos:position pos:line="5" pos:column="58"/></condition>
  <block pos:line="6" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">offset<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><call><name pos:line="7" pos:column="16">GET<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">ptr<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">cd<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">start_code<pos:position pos:line="8" pos:column="21"/></name></name> <operator pos:line="8" pos:column="22">+<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">offset<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">&gt;=<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="34">group<pos:position pos:line="8" pos:column="39"/></name></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="41">PUT<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">ptr<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="50">1<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">offset<pos:position pos:line="8" pos:column="59"/></name> <operator pos:line="8" pos:column="60">+<pos:position pos:line="8" pos:column="61"/></operator> <name pos:line="8" pos:column="62">adjust<pos:position pos:line="8" pos:column="68"/></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="70"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="9" pos:column="3">ptr<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">+=<pos:position pos:line="9" pos:column="9"/></operator> <literal type="number" pos:line="9" pos:column="10">1<pos:position pos:line="9" pos:column="11"/></literal> <operator pos:line="9" pos:column="12">+<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">LINK_SIZE<pos:position pos:line="9" pos:column="23"/></name></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="10" pos:column="4"/></block></while>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

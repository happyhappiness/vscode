<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1912_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">hm_recv<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">hm_ctx_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ctx<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_pool_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">p<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">buf<pos:position pos:line="3" pos:column="13"/></name><index pos:line="3" pos:column="13">[<expr><name pos:line="3" pos:column="14">MAX_MSG_LEN<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">+<pos:position pos:line="3" pos:column="27"/></operator> <literal type="number" pos:line="3" pos:column="28">1<pos:position pos:line="3" pos:column="29"/></literal></expr>]<pos:position pos:line="3" pos:column="30"/></index></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_sockaddr_t<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">from<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">MAX_MSG_LEN<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">from<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">.<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">pool<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">p<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">rv<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">apr_socket_recvfrom<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="31">from<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="37">ctx<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">sock<pos:position pos:line="10" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="48">0<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">buf<pos:position pos:line="10" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="56">&amp;<pos:position pos:line="10" pos:column="61"/></operator><name pos:line="10" pos:column="57">len<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">APR_STATUS_IS_EAGAIN<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">rv<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <block pos:line="12" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_error<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">APLOG_MARK<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">APLOG_CRIT<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">rv<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="50">ctx<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">-&gt;<pos:position pos:line="13" pos:column="58"/></operator><name pos:line="13" pos:column="55">s<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="58">APLOGNO<pos:position pos:line="13" pos:column="65"/></name><argument_list pos:line="13" pos:column="65">(<argument><expr><literal type="number" pos:line="13" pos:column="66">02088<pos:position pos:line="13" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call> <literal type="string" pos:line="13" pos:column="73">"would block"<pos:position pos:line="13" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="88"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">APR_SUCCESS<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <elseif pos:line="16" pos:column="5">else <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><name pos:line="16" pos:column="14">rv<pos:position pos:line="16" pos:column="16"/></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17"> <block pos:line="16" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ap_log_error<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">APLOG_MARK<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">APLOG_CRIT<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">rv<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="50">ctx<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">s<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="58">APLOGNO<pos:position pos:line="17" pos:column="65"/></name><argument_list pos:line="17" pos:column="65">(<argument><expr><literal type="number" pos:line="17" pos:column="66">02089<pos:position pos:line="17" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call> <literal type="string" pos:line="17" pos:column="73">"recvfrom failed"<pos:position pos:line="17" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="92"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">rv<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">hm_processmsg<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">ctx<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="24">p<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="28">from<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">buf<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">len<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>

    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">rv<pos:position pos:line="23" pos:column="14"/></name></expr>;<pos:position pos:line="23" pos:column="15"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

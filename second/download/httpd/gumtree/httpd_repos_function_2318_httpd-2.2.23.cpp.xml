<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2318_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ap_mpm_rewrite_args<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">process_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">process<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_array_header_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">mpm_new_argv<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_getopt_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">opt<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">optbuf<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><literal type="number" pos:line="6" pos:column="17">3<pos:position pos:line="6" pos:column="18"/></literal></expr>]<pos:position pos:line="6" pos:column="19"/></index></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">optarg<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">mpm_new_argv<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">apr_array_make<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name><name pos:line="9" pos:column="35">process<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">pool<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="50">process<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">-&gt;<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="59">argc<pos:position pos:line="9" pos:column="63"/></name></name></expr></argument>,
                                  <argument><expr><sizeof pos:line="10" pos:column="35">sizeof<argument_list pos:line="10" pos:column="41">(<argument><expr><specifier pos:line="10" pos:column="42">const<pos:position pos:line="10" pos:column="47"/></specifier> <name pos:line="10" pos:column="48">char<pos:position pos:line="10" pos:column="52"/></name> <operator pos:line="10" pos:column="53">*<pos:position pos:line="10" pos:column="54"/></operator><operator pos:line="10" pos:column="54">*<pos:position pos:line="10" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><operator pos:line="11" pos:column="6">(<pos:position pos:line="11" pos:column="7"/></operator><specifier pos:line="11" pos:column="7">const<pos:position pos:line="11" pos:column="12"/></specifier> <name pos:line="11" pos:column="13">char<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></operator><operator pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></operator><operator pos:line="11" pos:column="20">)<pos:position pos:line="11" pos:column="21"/></operator><call><name pos:line="11" pos:column="21">apr_array_push<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">mpm_new_argv<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call> <operator pos:line="11" pos:column="50">=<pos:position pos:line="11" pos:column="51"/></operator> <name><name pos:line="11" pos:column="52">process<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">-&gt;<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="61">argv<pos:position pos:line="11" pos:column="65"/></name><index pos:line="11" pos:column="65">[<expr><literal type="number" pos:line="11" pos:column="66">0<pos:position pos:line="11" pos:column="67"/></literal></expr>]<pos:position pos:line="11" pos:column="68"/></index></name></expr>;<pos:position pos:line="11" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">apr_getopt_init<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><operator pos:line="12" pos:column="21">&amp;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="22">opt<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="27">process<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">pool<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="42">process<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">argc<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="57">process<pos:position pos:line="12" pos:column="64"/></name><operator pos:line="12" pos:column="64">-&gt;<pos:position pos:line="12" pos:column="69"/></operator><name pos:line="12" pos:column="66">argv<pos:position pos:line="12" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">opt<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">errfn<pos:position pos:line="13" pos:column="15"/></name></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">optbuf<pos:position pos:line="14" pos:column="11"/></name><index pos:line="14" pos:column="11">[<expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>]<pos:position pos:line="14" pos:column="14"/></index></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="char" pos:line="14" pos:column="17">'-'<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* option char returned by apr_getopt() will be stored in optbuf[1] */</comment>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">optbuf<pos:position pos:line="16" pos:column="11"/></name><index pos:line="16" pos:column="11">[<expr><literal type="number" pos:line="16" pos:column="12">2<pos:position pos:line="16" pos:column="13"/></literal></expr>]<pos:position pos:line="16" pos:column="14"/></index></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="char" pos:line="16" pos:column="17">'\0'<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">rv<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">apr_getopt<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">opt<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="34">"k:"<pos:position pos:line="17" pos:column="38"/></literal> <name pos:line="17" pos:column="39">AP_SERVER_BASEARGS<pos:position pos:line="17" pos:column="57"/></name></expr></argument>,
                            <argument><expr><name pos:line="18" pos:column="29">optbuf<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">+<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="38">1<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="42">optarg<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call><operator pos:line="18" pos:column="49">)<pos:position pos:line="18" pos:column="50"/></operator> <operator pos:line="18" pos:column="51">==<pos:position pos:line="18" pos:column="53"/></operator> <name pos:line="18" pos:column="54">APR_SUCCESS<pos:position pos:line="18" pos:column="65"/></name></expr>)<pos:position pos:line="18" pos:column="66"/></condition> <block pos:line="18" pos:column="67">{
        <switch pos:line="19" pos:column="9">switch<condition pos:line="19" pos:column="15">(<expr><name><name pos:line="19" pos:column="16">optbuf<pos:position pos:line="19" pos:column="22"/></name><index pos:line="19" pos:column="22">[<expr><literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr>]<pos:position pos:line="19" pos:column="25"/></index></name></expr>)<pos:position pos:line="19" pos:column="26"/></condition> <block pos:line="19" pos:column="27">{
        <case pos:line="20" pos:column="9">case <expr><literal type="char" pos:line="20" pos:column="14">'k'<pos:position pos:line="20" pos:column="17"/></literal></expr>:<pos:position pos:line="20" pos:column="18"/></case>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><operator pos:line="21" pos:column="17">!<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">dash_k_arg<pos:position pos:line="21" pos:column="28"/></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29"> <block pos:line="21" pos:column="30">{
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">strcmp<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">optarg<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="37">"start"<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call> <operator pos:line="22" pos:column="46">||<pos:position pos:line="22" pos:column="48"/></operator> <operator pos:line="22" pos:column="49">!<pos:position pos:line="22" pos:column="50"/></operator><call><name pos:line="22" pos:column="50">strcmp<pos:position pos:line="22" pos:column="56"/></name><argument_list pos:line="22" pos:column="56">(<argument><expr><name pos:line="22" pos:column="57">optarg<pos:position pos:line="22" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="65">"stop"<pos:position pos:line="22" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call> <operator pos:line="22" pos:column="73">||<pos:position pos:line="22" pos:column="75"/></operator>
                    <operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><call><name pos:line="23" pos:column="22">strcmp<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">optarg<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="37">"restart"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call> <operator pos:line="23" pos:column="48">||<pos:position pos:line="23" pos:column="50"/></operator> <operator pos:line="23" pos:column="51">!<pos:position pos:line="23" pos:column="52"/></operator><call><name pos:line="23" pos:column="52">strcmp<pos:position pos:line="23" pos:column="58"/></name><argument_list pos:line="23" pos:column="58">(<argument><expr><name pos:line="23" pos:column="59">optarg<pos:position pos:line="23" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="67">"graceful"<pos:position pos:line="23" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call> <operator pos:line="23" pos:column="79">||<pos:position pos:line="23" pos:column="81"/></operator>
                    <operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><call><name pos:line="24" pos:column="22">strcmp<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">optarg<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="37">"graceful-stop"<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="54"/></condition><then pos:line="24" pos:column="54"> <block pos:line="24" pos:column="55">{
                    <expr_stmt><expr><name pos:line="25" pos:column="21">dash_k_arg<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="34">optarg<pos:position pos:line="25" pos:column="40"/></name></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
                    <break pos:line="26" pos:column="21">break;<pos:position pos:line="26" pos:column="27"/></break>
                }<pos:position pos:line="27" pos:column="18"/></block></then></if>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>
        <default pos:line="29" pos:column="9">default:<pos:position pos:line="29" pos:column="17"/></default>
            <expr_stmt><expr><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><specifier pos:line="30" pos:column="15">const<pos:position pos:line="30" pos:column="20"/></specifier> <name pos:line="30" pos:column="21">char<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">*<pos:position pos:line="30" pos:column="27"/></operator><operator pos:line="30" pos:column="27">*<pos:position pos:line="30" pos:column="28"/></operator><operator pos:line="30" pos:column="28">)<pos:position pos:line="30" pos:column="29"/></operator><call><name pos:line="30" pos:column="29">apr_array_push<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">mpm_new_argv<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call> <operator pos:line="30" pos:column="58">=<pos:position pos:line="30" pos:column="59"/></operator>
                <call><name pos:line="31" pos:column="17">apr_pstrdup<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name><name pos:line="31" pos:column="29">process<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">pool<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">optbuf<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">optarg<pos:position pos:line="32" pos:column="23"/></name></expr>)<pos:position pos:line="32" pos:column="24"/></condition><then pos:line="32" pos:column="24"> <block pos:line="32" pos:column="25">{
                <expr_stmt><expr><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><operator pos:line="33" pos:column="18">(<pos:position pos:line="33" pos:column="19"/></operator><specifier pos:line="33" pos:column="19">const<pos:position pos:line="33" pos:column="24"/></specifier> <name pos:line="33" pos:column="25">char<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">*<pos:position pos:line="33" pos:column="31"/></operator><operator pos:line="33" pos:column="31">*<pos:position pos:line="33" pos:column="32"/></operator><operator pos:line="33" pos:column="32">)<pos:position pos:line="33" pos:column="33"/></operator><call><name pos:line="33" pos:column="33">apr_array_push<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><name pos:line="33" pos:column="48">mpm_new_argv<pos:position pos:line="33" pos:column="60"/></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call> <operator pos:line="33" pos:column="62">=<pos:position pos:line="33" pos:column="63"/></operator> <name pos:line="33" pos:column="64">optarg<pos:position pos:line="33" pos:column="70"/></name></expr>;<pos:position pos:line="33" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>
        }<pos:position pos:line="35" pos:column="10"/></block></switch>
    }<pos:position pos:line="36" pos:column="6"/></block></while>

    <comment type="block" pos:line="38" pos:column="5">/* back up to capture the bad argument */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">rv<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">==<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">APR_BADCH<pos:position pos:line="39" pos:column="24"/></name> <operator pos:line="39" pos:column="25">||<pos:position pos:line="39" pos:column="27"/></operator> <name pos:line="39" pos:column="28">rv<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">==<pos:position pos:line="39" pos:column="33"/></operator> <name pos:line="39" pos:column="34">APR_BADARG<pos:position pos:line="39" pos:column="44"/></name></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45"> <block pos:line="39" pos:column="46">{
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">opt<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">-&gt;<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="14">ind<pos:position pos:line="40" pos:column="17"/></name></name><operator pos:line="40" pos:column="17">--<pos:position pos:line="40" pos:column="19"/></operator></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <while pos:line="43" pos:column="5">while <condition pos:line="43" pos:column="11">(<expr><name><name pos:line="43" pos:column="12">opt<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">-&gt;<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="17">ind<pos:position pos:line="43" pos:column="20"/></name></name> <operator pos:line="43" pos:column="21">&lt;<pos:position pos:line="43" pos:column="25"/></operator> <name><name pos:line="43" pos:column="23">opt<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">argc<pos:position pos:line="43" pos:column="32"/></name></name></expr>)<pos:position pos:line="43" pos:column="33"/></condition> <block pos:line="43" pos:column="34">{
        <expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><operator pos:line="44" pos:column="10">(<pos:position pos:line="44" pos:column="11"/></operator><specifier pos:line="44" pos:column="11">const<pos:position pos:line="44" pos:column="16"/></specifier> <name pos:line="44" pos:column="17">char<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">*<pos:position pos:line="44" pos:column="23"/></operator><operator pos:line="44" pos:column="23">*<pos:position pos:line="44" pos:column="24"/></operator><operator pos:line="44" pos:column="24">)<pos:position pos:line="44" pos:column="25"/></operator><call><name pos:line="44" pos:column="25">apr_array_push<pos:position pos:line="44" pos:column="39"/></name><argument_list pos:line="44" pos:column="39">(<argument><expr><name pos:line="44" pos:column="40">mpm_new_argv<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call> <operator pos:line="44" pos:column="54">=<pos:position pos:line="44" pos:column="55"/></operator>
            <call><name pos:line="45" pos:column="13">apr_pstrdup<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name><name pos:line="45" pos:column="25">process<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">-&gt;<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="34">pool<pos:position pos:line="45" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="40">opt<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">-&gt;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="45">argv<pos:position pos:line="45" pos:column="49"/></name><index pos:line="45" pos:column="49">[<expr><name><name pos:line="45" pos:column="50">opt<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">-&gt;<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="55">ind<pos:position pos:line="45" pos:column="58"/></name></name><operator pos:line="45" pos:column="58">++<pos:position pos:line="45" pos:column="60"/></operator></expr>]<pos:position pos:line="45" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></while>

    <expr_stmt><expr><name><name pos:line="48" pos:column="5">process<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">argc<pos:position pos:line="48" pos:column="18"/></name></name> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <name><name pos:line="48" pos:column="21">mpm_new_argv<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">nelts<pos:position pos:line="48" pos:column="40"/></name></name></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">process<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">argv<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><specifier pos:line="49" pos:column="22">const<pos:position pos:line="49" pos:column="27"/></specifier> <name pos:line="49" pos:column="28">char<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">*<pos:position pos:line="49" pos:column="34"/></operator> <specifier pos:line="49" pos:column="35">const<pos:position pos:line="49" pos:column="40"/></specifier> <operator pos:line="49" pos:column="41">*<pos:position pos:line="49" pos:column="42"/></operator><operator pos:line="49" pos:column="42">)<pos:position pos:line="49" pos:column="43"/></operator><name><name pos:line="49" pos:column="43">mpm_new_argv<pos:position pos:line="49" pos:column="55"/></name><operator pos:line="49" pos:column="55">-&gt;<pos:position pos:line="49" pos:column="60"/></operator><name pos:line="49" pos:column="57">elts<pos:position pos:line="49" pos:column="61"/></name></name></expr>;<pos:position pos:line="49" pos:column="62"/></expr_stmt>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">dash_k_arg<pos:position pos:line="51" pos:column="19"/></name></expr>)<pos:position pos:line="51" pos:column="20"/></condition><then pos:line="51" pos:column="20"> <block pos:line="51" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">ap_signal_server<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

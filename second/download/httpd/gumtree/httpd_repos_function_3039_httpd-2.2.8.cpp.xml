<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3039_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">create_testfile<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_pool_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">p<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">fname<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_file_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">f<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">120<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_finfo_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">finfo<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">printf<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="string" pos:line="9" pos:column="12">"Creating a test file...\n"<pos:position pos:line="9" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">rv<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">apr_file_open<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="25">f<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">fname<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, 
                 <argument><expr><name pos:line="11" pos:column="18">APR_CREATE<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">|<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="31">APR_WRITE<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">|<pos:position pos:line="11" pos:column="42"/></operator> <name pos:line="11" pos:column="43">APR_TRUNCATE<pos:position pos:line="11" pos:column="55"/></name> <operator pos:line="11" pos:column="56">|<pos:position pos:line="11" pos:column="57"/></operator> <name pos:line="11" pos:column="58">APR_BUFFERED<pos:position pos:line="11" pos:column="70"/></name></expr></argument>,
                 <argument><expr><name pos:line="12" pos:column="18">APR_UREAD<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">|<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">APR_UWRITE<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">p<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">rv<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then pos:line="13" pos:column="12"> <block pos:line="13" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">fprintf<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">stderr<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="25">"apr_file_open()-&gt;%d/%s\n"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>,
                <argument><expr><name pos:line="15" pos:column="17">rv<pos:position pos:line="15" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="21">apr_strerror<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">rv<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">buf<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="43">sizeof <name pos:line="15" pos:column="50">buf<pos:position pos:line="15" pos:column="53"/></name></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">exit<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">buf<pos:position pos:line="19" pos:column="8"/></name><index pos:line="19" pos:column="8">[<expr><literal type="number" pos:line="19" pos:column="9">0<pos:position pos:line="19" pos:column="10"/></literal></expr>]<pos:position pos:line="19" pos:column="11"/></index></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">FILE_DATA_CHAR<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">buf<pos:position pos:line="20" pos:column="8"/></name><index pos:line="20" pos:column="8">[<expr><literal type="number" pos:line="20" pos:column="9">1<pos:position pos:line="20" pos:column="10"/></literal></expr>]<pos:position pos:line="20" pos:column="11"/></index></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <literal type="char" pos:line="20" pos:column="14">'\0'<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><expr><name pos:line="21" pos:column="10">i<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></init> <condition><expr><name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="21">FILE_LENGTH<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></condition> <incr><expr><name pos:line="21" pos:column="34">i<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">++<pos:position pos:line="21" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="38"/></control> <block pos:line="21" pos:column="39">{
        <comment type="block" pos:line="22" pos:column="9">/* exercise apr_file_putc() and apr_file_puts() on buffered files */</comment>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">%<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">2<pos:position pos:line="23" pos:column="19"/></literal><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator> <operator pos:line="23" pos:column="21">==<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26"> <block pos:line="23" pos:column="27">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">rv<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">apr_file_putc<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name><name pos:line="24" pos:column="32">buf<pos:position pos:line="24" pos:column="35"/></name><index pos:line="24" pos:column="35">[<expr><literal type="number" pos:line="24" pos:column="36">0<pos:position pos:line="24" pos:column="37"/></literal></expr>]<pos:position pos:line="24" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">f<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">rv<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20"> <block pos:line="25" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">fprintf<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">stderr<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="33">"apr_file_putc()-&gt;%d/%s\n"<pos:position pos:line="26" pos:column="62"/></literal></expr></argument>,
                        <argument><expr><name pos:line="27" pos:column="25">rv<pos:position pos:line="27" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="29">apr_strerror<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">rv<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">buf<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="51">sizeof <name pos:line="27" pos:column="58">buf<pos:position pos:line="27" pos:column="61"/></name></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">exit<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><literal type="number" pos:line="28" pos:column="22">1<pos:position pos:line="28" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <else pos:line="31" pos:column="9">else <block pos:line="31" pos:column="14">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">rv<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">apr_file_puts<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">buf<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">f<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name pos:line="33" pos:column="17">rv<pos:position pos:line="33" pos:column="19"/></name></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20"> <block pos:line="33" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">fprintf<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">stderr<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"apr_file_puts()-&gt;%d/%s\n"<pos:position pos:line="34" pos:column="62"/></literal></expr></argument>,
                        <argument><expr><name pos:line="35" pos:column="25">rv<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="29">apr_strerror<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">rv<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">buf<pos:position pos:line="35" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="51">sizeof <name pos:line="35" pos:column="58">buf<pos:position pos:line="35" pos:column="61"/></name></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">exit<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><literal type="number" pos:line="36" pos:column="22">1<pos:position pos:line="36" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></else></if>
    }<pos:position pos:line="39" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="41" pos:column="5">rv<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">apr_file_close<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">f<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">rv<pos:position pos:line="42" pos:column="11"/></name></expr>)<pos:position pos:line="42" pos:column="12"/></condition><then pos:line="42" pos:column="12"> <block pos:line="42" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">fprintf<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">stderr<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="25">"apr_file_close()-&gt;%d/%s\n"<pos:position pos:line="43" pos:column="55"/></literal></expr></argument>,
                <argument><expr><name pos:line="44" pos:column="17">rv<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="21">apr_strerror<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">rv<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">buf<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="43">sizeof <name pos:line="44" pos:column="50">buf<pos:position pos:line="44" pos:column="53"/></name></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">exit<pos:position pos:line="45" pos:column="13"/></name><argument_list pos:line="45" pos:column="13">(<argument><expr><literal type="number" pos:line="45" pos:column="14">1<pos:position pos:line="45" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="48" pos:column="5">rv<pos:position pos:line="48" pos:column="7"/></name> <operator pos:line="48" pos:column="8">=<pos:position pos:line="48" pos:column="9"/></operator> <call><name pos:line="48" pos:column="10">apr_stat<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><operator pos:line="48" pos:column="19">&amp;<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="20">finfo<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">fname<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="34">APR_FINFO_NORM<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">p<pos:position pos:line="48" pos:column="51"/></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="53"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">rv<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">!=<pos:position pos:line="49" pos:column="14"/></operator> <name pos:line="49" pos:column="15">APR_SUCCESS<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">&amp;&amp;<pos:position pos:line="49" pos:column="37"/></operator> <name pos:line="49" pos:column="30">rv<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">!=<pos:position pos:line="49" pos:column="35"/></operator> <name pos:line="49" pos:column="36">APR_INCOMPLETE<pos:position pos:line="49" pos:column="50"/></name></expr>)<pos:position pos:line="49" pos:column="51"/></condition><then pos:line="49" pos:column="51"> <block pos:line="49" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">fprintf<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">stderr<pos:position pos:line="50" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="25">"apr_stat()-&gt;%d/%s\n"<pos:position pos:line="50" pos:column="49"/></literal></expr></argument>,
                <argument><expr><name pos:line="51" pos:column="17">rv<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="21">apr_strerror<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><name pos:line="51" pos:column="34">rv<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="38">buf<pos:position pos:line="51" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="43">sizeof <name pos:line="51" pos:column="50">buf<pos:position pos:line="51" pos:column="53"/></name></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">exit<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><literal type="number" pos:line="52" pos:column="14">1<pos:position pos:line="52" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">finfo<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">.<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">size<pos:position pos:line="55" pos:column="19"/></name></name> <operator pos:line="55" pos:column="20">!=<pos:position pos:line="55" pos:column="22"/></operator> <name pos:line="55" pos:column="23">FILE_LENGTH<pos:position pos:line="55" pos:column="34"/></name></expr>)<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35"> <block pos:line="55" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">fprintf<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">stderr<pos:position pos:line="56" pos:column="23"/></name></expr></argument>, 
                <argument><expr><literal type="string" pos:line="57" pos:column="17">"test file %s should be %ld-bytes long\n"<pos:position pos:line="57" pos:column="58"/></literal>
                <literal type="string" pos:line="58" pos:column="17">"instead it is %ld-bytes long\n"<pos:position pos:line="58" pos:column="49"/></literal></expr></argument>,
                <argument><expr><name pos:line="59" pos:column="17">fname<pos:position pos:line="59" pos:column="22"/></name></expr></argument>,
                <argument><expr><operator pos:line="60" pos:column="17">(<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="18">long<pos:position pos:line="60" pos:column="22"/></name> <name pos:line="60" pos:column="23">int<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">)<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="27">FILE_LENGTH<pos:position pos:line="60" pos:column="38"/></name></expr></argument>,
                <argument><expr><operator pos:line="61" pos:column="17">(<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">long<pos:position pos:line="61" pos:column="22"/></name> <name pos:line="61" pos:column="23">int<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">)<pos:position pos:line="61" pos:column="27"/></operator><name><name pos:line="61" pos:column="27">finfo<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">.<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="33">size<pos:position pos:line="61" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">exit<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><literal type="number" pos:line="62" pos:column="14">1<pos:position pos:line="62" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

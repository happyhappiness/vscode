<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1761.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_handler<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">cache_provider_list<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">providers<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">cache_request_rec<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">cache<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket_brigade<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">out<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_filter_t<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">next<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_filter_rec_t<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">cache_out_handle<pos:position pos:line="8" pos:column="38"/></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_filter_rec_t<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">cache_save_handle<pos:position pos:line="9" pos:column="39"/></name></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">cache_server_conf<pos:position pos:line="10" pos:column="22"/></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">conf<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* Delay initialization until we know we are handling a GET */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">r<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">method_number<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">!=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="29">M_GET<pos:position pos:line="13" pos:column="34"/></name></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35"> <block pos:line="13" pos:column="36">{
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">DECLINED<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">conf<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">cache_server_conf<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">*<pos:position pos:line="17" pos:column="32"/></operator><operator pos:line="17" pos:column="32">)<pos:position pos:line="17" pos:column="33"/></operator> <call><name pos:line="17" pos:column="34">ap_get_module_config<pos:position pos:line="17" pos:column="54"/></name><argument_list pos:line="17" pos:column="54">(<argument><expr><name><name pos:line="17" pos:column="55">r<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">-&gt;<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="58">server<pos:position pos:line="17" pos:column="64"/></name><operator pos:line="17" pos:column="64">-&gt;<pos:position pos:line="17" pos:column="69"/></operator><name pos:line="17" pos:column="66">module_config<pos:position pos:line="17" pos:column="79"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="18" pos:column="55">&amp;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="56">cache_module<pos:position pos:line="18" pos:column="68"/></name></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* only run if the quick handler is disabled */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">conf<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">quick<pos:position pos:line="21" pos:column="20"/></name></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21"> <block pos:line="21" pos:column="22">{
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">DECLINED<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/*
     * Which cache module (if any) should handle this request?
     */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">providers<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">ap_cache_get_providers<pos:position pos:line="28" pos:column="45"/></name><argument_list pos:line="28" pos:column="45">(<argument><expr><name pos:line="28" pos:column="46">r<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">conf<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="55">r<pos:position pos:line="28" pos:column="56"/></name><operator pos:line="28" pos:column="56">-&gt;<pos:position pos:line="28" pos:column="61"/></operator><name pos:line="28" pos:column="58">parsed_uri<pos:position pos:line="28" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call><operator pos:line="28" pos:column="69">)<pos:position pos:line="28" pos:column="70"/></operator></expr>)<pos:position pos:line="28" pos:column="71"/></condition><then pos:line="28" pos:column="71"> <block pos:line="28" pos:column="72">{
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">DECLINED<pos:position pos:line="29" pos:column="24"/></name></expr>;<pos:position pos:line="29" pos:column="25"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* make space for the per request config */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">cache<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">cache_request_rec<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">*<pos:position pos:line="33" pos:column="33"/></operator><operator pos:line="33" pos:column="33">)<pos:position pos:line="33" pos:column="34"/></operator> <call><name pos:line="33" pos:column="35">ap_get_module_config<pos:position pos:line="33" pos:column="55"/></name><argument_list pos:line="33" pos:column="55">(<argument><expr><name><name pos:line="33" pos:column="56">r<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">-&gt;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="59">request_config<pos:position pos:line="33" pos:column="73"/></name></name></expr></argument>,
                                                       <argument><expr><operator pos:line="34" pos:column="56">&amp;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="57">cache_module<pos:position pos:line="34" pos:column="69"/></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">cache<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16"> <block pos:line="35" pos:column="17">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">cache<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">apr_pcalloc<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name><name pos:line="36" pos:column="29">r<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">pool<pos:position pos:line="36" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="38">sizeof<argument_list pos:line="36" pos:column="44">(<argument><expr><name pos:line="36" pos:column="45">cache_request_rec<pos:position pos:line="36" pos:column="62"/></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">ap_set_module_config<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name><name pos:line="37" pos:column="30">r<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">request_config<pos:position pos:line="37" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="49">&amp;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="50">cache_module<pos:position pos:line="37" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="64">cache<pos:position pos:line="37" pos:column="69"/></name></expr></argument>)<pos:position pos:line="37" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="40" pos:column="5">/* save away the possible providers */</comment>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">cache<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">providers<pos:position pos:line="41" pos:column="21"/></name></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">providers<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/*
     * Try to serve this request from the cache.
     *
     * If no existing cache file (DECLINED)
     *   add cache_save filter
     * If cached file (OK)
     *   clear filter stack
     *   add cache_out filter
     *   return OK
     */</comment>
    <expr_stmt><expr><name pos:line="53" pos:column="5">rv<pos:position pos:line="53" pos:column="7"/></name> <operator pos:line="53" pos:column="8">=<pos:position pos:line="53" pos:column="9"/></operator> <call><name pos:line="53" pos:column="10">cache_select<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">r<pos:position pos:line="53" pos:column="24"/></name></expr></argument>)<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">rv<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">!=<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">OK<pos:position pos:line="54" pos:column="17"/></name></expr>)<pos:position pos:line="54" pos:column="18"/></condition><then pos:line="54" pos:column="18"> <block pos:line="54" pos:column="19">{
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">rv<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">==<pos:position pos:line="55" pos:column="18"/></operator> <name pos:line="55" pos:column="19">DECLINED<pos:position pos:line="55" pos:column="27"/></name></expr>)<pos:position pos:line="55" pos:column="28"/></condition><then pos:line="55" pos:column="28"> <block pos:line="55" pos:column="29">{

            <comment type="block" pos:line="57" pos:column="13">/* try to obtain a cache lock at this point. if we succeed,
             * we are the first to try and cache this url. if we fail,
             * it means someone else is already trying to cache this
             * url, and we should just let the request through to the
             * backend without any attempt to cache. this stops
             * duplicated simultaneous attempts to cache an entity.
             */</comment>
            <expr_stmt><expr><name pos:line="64" pos:column="13">rv<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <call><name pos:line="64" pos:column="18">ap_cache_try_lock<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name pos:line="64" pos:column="36">conf<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">r<pos:position pos:line="64" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="45">NULL<pos:position pos:line="64" pos:column="49"/></name></expr></argument>)<pos:position pos:line="64" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="51"/></expr_stmt>
            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name pos:line="65" pos:column="17">APR_SUCCESS<pos:position pos:line="65" pos:column="28"/></name> <operator pos:line="65" pos:column="29">==<pos:position pos:line="65" pos:column="31"/></operator> <name pos:line="65" pos:column="32">rv<pos:position pos:line="65" pos:column="34"/></name></expr>)<pos:position pos:line="65" pos:column="35"/></condition><then pos:line="65" pos:column="35"> <block pos:line="65" pos:column="36">{

                <comment type="block" pos:line="67" pos:column="17">/*
                 * Add cache_save filter to cache this request. Choose
                 * the correct filter by checking if we are a subrequest
                 * or not.
                 */</comment>
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name><name pos:line="72" pos:column="21">r<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">-&gt;<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="24">main<pos:position pos:line="72" pos:column="28"/></name></name></expr>)<pos:position pos:line="72" pos:column="29"/></condition><then pos:line="72" pos:column="29"> <block pos:line="72" pos:column="30">{
                    <expr_stmt><expr><call><name pos:line="73" pos:column="21">ap_log_error<pos:position pos:line="73" pos:column="33"/></name><argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">APLOG_MARK<pos:position pos:line="73" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">APLOG_DEBUG<pos:position pos:line="73" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="59">APR_SUCCESS<pos:position pos:line="73" pos:column="70"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="74" pos:column="29">r<pos:position pos:line="74" pos:column="30"/></name><operator pos:line="74" pos:column="30">-&gt;<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="32">server<pos:position pos:line="74" pos:column="38"/></name></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="75" pos:column="29">"Adding CACHE_SAVE_SUBREQ filter for %s"<pos:position pos:line="75" pos:column="69"/></literal></expr></argument>,
                            <argument><expr><name><name pos:line="76" pos:column="29">r<pos:position pos:line="76" pos:column="30"/></name><operator pos:line="76" pos:column="30">-&gt;<pos:position pos:line="76" pos:column="35"/></operator><name pos:line="76" pos:column="32">uri<pos:position pos:line="76" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="77" pos:column="21">cache_save_handle<pos:position pos:line="77" pos:column="38"/></name> <operator pos:line="77" pos:column="39">=<pos:position pos:line="77" pos:column="40"/></operator> <name pos:line="77" pos:column="41">cache_save_subreq_filter_handle<pos:position pos:line="77" pos:column="72"/></name></expr>;<pos:position pos:line="77" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="78" pos:column="18"/></block></then>
                <else pos:line="79" pos:column="17">else <block pos:line="79" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="80" pos:column="21">ap_log_error<pos:position pos:line="80" pos:column="33"/></name><argument_list pos:line="80" pos:column="33">(<argument><expr><name pos:line="80" pos:column="34">APLOG_MARK<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="46">APLOG_DEBUG<pos:position pos:line="80" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="59">APR_SUCCESS<pos:position pos:line="80" pos:column="70"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="81" pos:column="29">r<pos:position pos:line="81" pos:column="30"/></name><operator pos:line="81" pos:column="30">-&gt;<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="32">server<pos:position pos:line="81" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="40">"Adding CACHE_SAVE filter for %s"<pos:position pos:line="81" pos:column="73"/></literal></expr></argument>,
                            <argument><expr><name><name pos:line="82" pos:column="29">r<pos:position pos:line="82" pos:column="30"/></name><operator pos:line="82" pos:column="30">-&gt;<pos:position pos:line="82" pos:column="35"/></operator><name pos:line="82" pos:column="32">uri<pos:position pos:line="82" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="83" pos:column="21">cache_save_handle<pos:position pos:line="83" pos:column="38"/></name> <operator pos:line="83" pos:column="39">=<pos:position pos:line="83" pos:column="40"/></operator> <name pos:line="83" pos:column="41">cache_save_filter_handle<pos:position pos:line="83" pos:column="65"/></name></expr>;<pos:position pos:line="83" pos:column="66"/></expr_stmt>
                }<pos:position pos:line="84" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="85" pos:column="17">ap_add_output_filter_handle<pos:position pos:line="85" pos:column="44"/></name><argument_list pos:line="85" pos:column="44">(<argument><expr><name pos:line="85" pos:column="45">cache_save_handle<pos:position pos:line="85" pos:column="62"/></name></expr></argument>,
                        <argument><expr><name pos:line="86" pos:column="25">NULL<pos:position pos:line="86" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="31">r<pos:position pos:line="86" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="34">r<pos:position pos:line="86" pos:column="35"/></name><operator pos:line="86" pos:column="35">-&gt;<pos:position pos:line="86" pos:column="40"/></operator><name pos:line="86" pos:column="37">connection<pos:position pos:line="86" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="49"/></expr_stmt>

                <comment type="block" pos:line="88" pos:column="17">/*
                 * Did the user indicate the precise location of the
                 * CACHE_SAVE filter by inserting the CACHE filter as a
                 * marker?
                 *
                 * If so, we get cunning and replace CACHE with the
                 * CACHE_SAVE filter. This has the effect of inserting
                 * the CACHE_SAVE filter at the precise location where
                 * the admin wants to cache the content. All filters that
                 * lie before and after the original location of the CACHE
                 * filter will remain in place.
                 */</comment>
                <if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><call><name pos:line="100" pos:column="21">cache_replace_filter<pos:position pos:line="100" pos:column="41"/></name><argument_list pos:line="100" pos:column="41">(<argument><expr><name><name pos:line="100" pos:column="42">r<pos:position pos:line="100" pos:column="43"/></name><operator pos:line="100" pos:column="43">-&gt;<pos:position pos:line="100" pos:column="48"/></operator><name pos:line="100" pos:column="45">output_filters<pos:position pos:line="100" pos:column="59"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="101" pos:column="25">cache_filter_handle<pos:position pos:line="101" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="46">cache_save_handle<pos:position pos:line="101" pos:column="63"/></name></expr></argument>)<pos:position pos:line="101" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="65"/></condition><then pos:line="101" pos:column="65"> <block pos:line="101" pos:column="66">{
                    <expr_stmt><expr><call><name pos:line="102" pos:column="21">ap_log_error<pos:position pos:line="102" pos:column="33"/></name><argument_list pos:line="102" pos:column="33">(<argument><expr><name pos:line="102" pos:column="34">APLOG_MARK<pos:position pos:line="102" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="46">APLOG_DEBUG<pos:position pos:line="102" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="59">APR_SUCCESS<pos:position pos:line="102" pos:column="70"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="103" pos:column="29">r<pos:position pos:line="103" pos:column="30"/></name><operator pos:line="103" pos:column="30">-&gt;<pos:position pos:line="103" pos:column="35"/></operator><name pos:line="103" pos:column="32">server<pos:position pos:line="103" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="40">"Replacing CACHE with CACHE_SAVE "<pos:position pos:line="103" pos:column="74"/></literal>
                            <literal type="string" pos:line="104" pos:column="29">"filter for %s"<pos:position pos:line="104" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="46">r<pos:position pos:line="104" pos:column="47"/></name><operator pos:line="104" pos:column="47">-&gt;<pos:position pos:line="104" pos:column="52"/></operator><name pos:line="104" pos:column="49">uri<pos:position pos:line="104" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="105" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="107" pos:column="17">ap_log_error<pos:position pos:line="107" pos:column="29"/></name><argument_list pos:line="107" pos:column="29">(<argument><expr><name pos:line="107" pos:column="30">APLOG_MARK<pos:position pos:line="107" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="42">APLOG_DEBUG<pos:position pos:line="107" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="55">APR_SUCCESS<pos:position pos:line="107" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="68">r<pos:position pos:line="107" pos:column="69"/></name><operator pos:line="107" pos:column="69">-&gt;<pos:position pos:line="107" pos:column="74"/></operator><name pos:line="107" pos:column="71">server<pos:position pos:line="107" pos:column="77"/></name></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="108" pos:column="25">"Adding CACHE_REMOVE_URL filter for %s"<pos:position pos:line="108" pos:column="64"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="109" pos:column="25">r<pos:position pos:line="109" pos:column="26"/></name><operator pos:line="109" pos:column="26">-&gt;<pos:position pos:line="109" pos:column="31"/></operator><name pos:line="109" pos:column="28">uri<pos:position pos:line="109" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="33"/></expr_stmt>

                <comment type="block" pos:line="111" pos:column="17">/* Add cache_remove_url filter to this request to remove a
                 * stale cache entry if needed. Also put the current cache
                 * request rec in the filter context, as the request that
                 * is available later during running the filter may be
                 * different due to an internal redirect.
                 */</comment>
                <expr_stmt><expr><name><name pos:line="117" pos:column="17">cache<pos:position pos:line="117" pos:column="22"/></name><operator pos:line="117" pos:column="22">-&gt;<pos:position pos:line="117" pos:column="27"/></operator><name pos:line="117" pos:column="24">remove_url_filter<pos:position pos:line="117" pos:column="41"/></name></name> <operator pos:line="117" pos:column="42">=<pos:position pos:line="117" pos:column="43"/></operator>
                    <call><name pos:line="118" pos:column="21">ap_add_output_filter_handle<pos:position pos:line="118" pos:column="48"/></name><argument_list pos:line="118" pos:column="48">(<argument><expr><name pos:line="118" pos:column="49">cache_remove_url_filter_handle<pos:position pos:line="118" pos:column="79"/></name></expr></argument>,
                            <argument><expr><name pos:line="119" pos:column="29">cache<pos:position pos:line="119" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="36">r<pos:position pos:line="119" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="39">r<pos:position pos:line="119" pos:column="40"/></name><operator pos:line="119" pos:column="40">-&gt;<pos:position pos:line="119" pos:column="45"/></operator><name pos:line="119" pos:column="42">connection<pos:position pos:line="119" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="54"/></expr_stmt>

            }<pos:position pos:line="121" pos:column="14"/></block></then>
            <else pos:line="122" pos:column="13">else <block pos:line="122" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="123" pos:column="17">ap_log_error<pos:position pos:line="123" pos:column="29"/></name><argument_list pos:line="123" pos:column="29">(<argument><expr><name pos:line="123" pos:column="30">APLOG_MARK<pos:position pos:line="123" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="42">APLOG_DEBUG<pos:position pos:line="123" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="55">rv<pos:position pos:line="123" pos:column="57"/></name></expr></argument>,
                             <argument><expr><name><name pos:line="124" pos:column="30">r<pos:position pos:line="124" pos:column="31"/></name><operator pos:line="124" pos:column="31">-&gt;<pos:position pos:line="124" pos:column="36"/></operator><name pos:line="124" pos:column="33">server<pos:position pos:line="124" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="41">"Cache locked for url, not caching "<pos:position pos:line="124" pos:column="77"/></literal>
                             <literal type="string" pos:line="125" pos:column="30">"response: %s"<pos:position pos:line="125" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="46">r<pos:position pos:line="125" pos:column="47"/></name><operator pos:line="125" pos:column="47">-&gt;<pos:position pos:line="125" pos:column="52"/></operator><name pos:line="125" pos:column="49">uri<pos:position pos:line="125" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="126" pos:column="14"/></block></else></if>
        }<pos:position pos:line="127" pos:column="10"/></block></then>
        <else pos:line="128" pos:column="9">else <block pos:line="128" pos:column="14">{
            <comment type="block" pos:line="129" pos:column="13">/* error */</comment>
            <expr_stmt><expr><call><name pos:line="130" pos:column="13">ap_log_error<pos:position pos:line="130" pos:column="25"/></name><argument_list pos:line="130" pos:column="25">(<argument><expr><name pos:line="130" pos:column="26">APLOG_MARK<pos:position pos:line="130" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="38">APLOG_ERR<pos:position pos:line="130" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="49">rv<pos:position pos:line="130" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="53">r<pos:position pos:line="130" pos:column="54"/></name><operator pos:line="130" pos:column="54">-&gt;<pos:position pos:line="130" pos:column="59"/></operator><name pos:line="130" pos:column="56">server<pos:position pos:line="130" pos:column="62"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="131" pos:column="26">"cache: error returned while checking for cached "<pos:position pos:line="131" pos:column="76"/></literal>
                         <literal type="string" pos:line="132" pos:column="26">"file by %s cache"<pos:position pos:line="132" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="46">cache<pos:position pos:line="132" pos:column="51"/></name><operator pos:line="132" pos:column="51">-&gt;<pos:position pos:line="132" pos:column="56"/></operator><name pos:line="132" pos:column="53">provider_name<pos:position pos:line="132" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="133" pos:column="10"/></block></else></if>
        <return pos:line="134" pos:column="9">return <expr><name pos:line="134" pos:column="16">DECLINED<pos:position pos:line="134" pos:column="24"/></name></expr>;<pos:position pos:line="134" pos:column="25"/></return>
    }<pos:position pos:line="135" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="137" pos:column="5">rv<pos:position pos:line="137" pos:column="7"/></name> <operator pos:line="137" pos:column="8">=<pos:position pos:line="137" pos:column="9"/></operator> <call><name pos:line="137" pos:column="10">ap_meets_conditions<pos:position pos:line="137" pos:column="29"/></name><argument_list pos:line="137" pos:column="29">(<argument><expr><name pos:line="137" pos:column="30">r<pos:position pos:line="137" pos:column="31"/></name></expr></argument>)<pos:position pos:line="137" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="33"/></expr_stmt>
    <if pos:line="138" pos:column="5">if <condition pos:line="138" pos:column="8">(<expr><name pos:line="138" pos:column="9">rv<pos:position pos:line="138" pos:column="11"/></name> <operator pos:line="138" pos:column="12">!=<pos:position pos:line="138" pos:column="14"/></operator> <name pos:line="138" pos:column="15">OK<pos:position pos:line="138" pos:column="17"/></name></expr>)<pos:position pos:line="138" pos:column="18"/></condition><then pos:line="138" pos:column="18"> <block pos:line="138" pos:column="19">{
        <return pos:line="139" pos:column="9">return <expr><name pos:line="139" pos:column="16">rv<pos:position pos:line="139" pos:column="18"/></name></expr>;<pos:position pos:line="139" pos:column="19"/></return>
    }<pos:position pos:line="140" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="142" pos:column="5">/* Serve up the content */</comment>

    <comment type="block" pos:line="144" pos:column="5">/*
     * Add cache_out filter to serve this request. Choose
     * the correct filter by checking if we are a subrequest
     * or not.
     */</comment>
    <if pos:line="149" pos:column="5">if <condition pos:line="149" pos:column="8">(<expr><name><name pos:line="149" pos:column="9">r<pos:position pos:line="149" pos:column="10"/></name><operator pos:line="149" pos:column="10">-&gt;<pos:position pos:line="149" pos:column="15"/></operator><name pos:line="149" pos:column="12">main<pos:position pos:line="149" pos:column="16"/></name></name></expr>)<pos:position pos:line="149" pos:column="17"/></condition><then pos:line="149" pos:column="17"> <block pos:line="149" pos:column="18">{
        <expr_stmt><expr><name pos:line="150" pos:column="9">cache_out_handle<pos:position pos:line="150" pos:column="25"/></name> <operator pos:line="150" pos:column="26">=<pos:position pos:line="150" pos:column="27"/></operator> <name pos:line="150" pos:column="28">cache_out_subreq_filter_handle<pos:position pos:line="150" pos:column="58"/></name></expr>;<pos:position pos:line="150" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="151" pos:column="6"/></block></then>
    <else pos:line="152" pos:column="5">else <block pos:line="152" pos:column="10">{
        <expr_stmt><expr><name pos:line="153" pos:column="9">cache_out_handle<pos:position pos:line="153" pos:column="25"/></name> <operator pos:line="153" pos:column="26">=<pos:position pos:line="153" pos:column="27"/></operator> <name pos:line="153" pos:column="28">cache_out_filter_handle<pos:position pos:line="153" pos:column="51"/></name></expr>;<pos:position pos:line="153" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="154" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="155" pos:column="5">ap_add_output_filter_handle<pos:position pos:line="155" pos:column="32"/></name><argument_list pos:line="155" pos:column="32">(<argument><expr><name pos:line="155" pos:column="33">cache_out_handle<pos:position pos:line="155" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="51">NULL<pos:position pos:line="155" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="57">r<pos:position pos:line="155" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="155" pos:column="60">r<pos:position pos:line="155" pos:column="61"/></name><operator pos:line="155" pos:column="61">-&gt;<pos:position pos:line="155" pos:column="66"/></operator><name pos:line="155" pos:column="63">connection<pos:position pos:line="155" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="75"/></expr_stmt>

    <comment type="block" pos:line="157" pos:column="5">/*
     * Did the user indicate the precise location of the CACHE_OUT filter by
     * inserting the CACHE filter as a marker?
     *
     * If so, we get cunning and replace CACHE with the CACHE_OUT filters.
     * This has the effect of inserting the CACHE_OUT filter at the precise
     * location where the admin wants to cache the content. All filters that
     * lie *after* the original location of the CACHE filter will remain in
     * place.
     */</comment>
    <if pos:line="167" pos:column="5">if <condition pos:line="167" pos:column="8">(<expr><call><name pos:line="167" pos:column="9">cache_replace_filter<pos:position pos:line="167" pos:column="29"/></name><argument_list pos:line="167" pos:column="29">(<argument><expr><name><name pos:line="167" pos:column="30">r<pos:position pos:line="167" pos:column="31"/></name><operator pos:line="167" pos:column="31">-&gt;<pos:position pos:line="167" pos:column="36"/></operator><name pos:line="167" pos:column="33">output_filters<pos:position pos:line="167" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="49">cache_filter_handle<pos:position pos:line="167" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="70">cache_out_handle<pos:position pos:line="167" pos:column="86"/></name></expr></argument>)<pos:position pos:line="167" pos:column="87"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="88"/></condition><then pos:line="167" pos:column="88"> <block pos:line="167" pos:column="89">{
        <expr_stmt><expr><call><name pos:line="168" pos:column="9">ap_log_error<pos:position pos:line="168" pos:column="21"/></name><argument_list pos:line="168" pos:column="21">(<argument><expr><name pos:line="168" pos:column="22">APLOG_MARK<pos:position pos:line="168" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="34">APLOG_DEBUG<pos:position pos:line="168" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="47">APR_SUCCESS<pos:position pos:line="168" pos:column="58"/></name></expr></argument>,
                <argument><expr><name><name pos:line="169" pos:column="17">r<pos:position pos:line="169" pos:column="18"/></name><operator pos:line="169" pos:column="18">-&gt;<pos:position pos:line="169" pos:column="23"/></operator><name pos:line="169" pos:column="20">server<pos:position pos:line="169" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="28">"Replacing CACHE with CACHE_OUT filter for %s"<pos:position pos:line="169" pos:column="74"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="170" pos:column="17">r<pos:position pos:line="170" pos:column="18"/></name><operator pos:line="170" pos:column="18">-&gt;<pos:position pos:line="170" pos:column="23"/></operator><name pos:line="170" pos:column="20">uri<pos:position pos:line="170" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="171" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="173" pos:column="5">/*
     * Remove all filters that are before the cache_out filter. This ensures
     * that we kick off the filter stack with our cache_out filter being the
     * first in the chain. This make sense because we want to restore things
     * in the same manner as we saved them.
     * There may be filters before our cache_out filter, because
     *
     * 1. We call ap_set_content_type during cache_select. This causes
     *    Content-Type specific filters to be added.
     * 2. We call the insert_filter hook. This causes filters e.g. like
     *    the ones set with SetOutputFilter to be added.
     */</comment>
    <expr_stmt><expr><name pos:line="185" pos:column="5">next<pos:position pos:line="185" pos:column="9"/></name> <operator pos:line="185" pos:column="10">=<pos:position pos:line="185" pos:column="11"/></operator> <name><name pos:line="185" pos:column="12">r<pos:position pos:line="185" pos:column="13"/></name><operator pos:line="185" pos:column="13">-&gt;<pos:position pos:line="185" pos:column="18"/></operator><name pos:line="185" pos:column="15">output_filters<pos:position pos:line="185" pos:column="29"/></name></name></expr>;<pos:position pos:line="185" pos:column="30"/></expr_stmt>
    <while pos:line="186" pos:column="5">while <condition pos:line="186" pos:column="11">(<expr><name pos:line="186" pos:column="12">next<pos:position pos:line="186" pos:column="16"/></name> <operator pos:line="186" pos:column="17">&amp;&amp;<pos:position pos:line="186" pos:column="27"/></operator> <operator pos:line="186" pos:column="20">(<pos:position pos:line="186" pos:column="21"/></operator><name><name pos:line="186" pos:column="21">next<pos:position pos:line="186" pos:column="25"/></name><operator pos:line="186" pos:column="25">-&gt;<pos:position pos:line="186" pos:column="30"/></operator><name pos:line="186" pos:column="27">frec<pos:position pos:line="186" pos:column="31"/></name></name> <operator pos:line="186" pos:column="32">!=<pos:position pos:line="186" pos:column="34"/></operator> <name pos:line="186" pos:column="35">cache_out_handle<pos:position pos:line="186" pos:column="51"/></name><operator pos:line="186" pos:column="51">)<pos:position pos:line="186" pos:column="52"/></operator></expr>)<pos:position pos:line="186" pos:column="53"/></condition> <block pos:line="186" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="187" pos:column="9">ap_remove_output_filter<pos:position pos:line="187" pos:column="32"/></name><argument_list pos:line="187" pos:column="32">(<argument><expr><name pos:line="187" pos:column="33">next<pos:position pos:line="187" pos:column="37"/></name></expr></argument>)<pos:position pos:line="187" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="188" pos:column="9">next<pos:position pos:line="188" pos:column="13"/></name> <operator pos:line="188" pos:column="14">=<pos:position pos:line="188" pos:column="15"/></operator> <name><name pos:line="188" pos:column="16">next<pos:position pos:line="188" pos:column="20"/></name><operator pos:line="188" pos:column="20">-&gt;<pos:position pos:line="188" pos:column="25"/></operator><name pos:line="188" pos:column="22">next<pos:position pos:line="188" pos:column="26"/></name></name></expr>;<pos:position pos:line="188" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="189" pos:column="6"/></block></while>

    <comment type="block" pos:line="191" pos:column="5">/* kick off the filter stack */</comment>
    <expr_stmt><expr><name pos:line="192" pos:column="5">out<pos:position pos:line="192" pos:column="8"/></name> <operator pos:line="192" pos:column="9">=<pos:position pos:line="192" pos:column="10"/></operator> <call><name pos:line="192" pos:column="11">apr_brigade_create<pos:position pos:line="192" pos:column="29"/></name><argument_list pos:line="192" pos:column="29">(<argument><expr><name><name pos:line="192" pos:column="30">r<pos:position pos:line="192" pos:column="31"/></name><operator pos:line="192" pos:column="31">-&gt;<pos:position pos:line="192" pos:column="36"/></operator><name pos:line="192" pos:column="33">pool<pos:position pos:line="192" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="192" pos:column="39">r<pos:position pos:line="192" pos:column="40"/></name><operator pos:line="192" pos:column="40">-&gt;<pos:position pos:line="192" pos:column="45"/></operator><name pos:line="192" pos:column="42">connection<pos:position pos:line="192" pos:column="52"/></name><operator pos:line="192" pos:column="52">-&gt;<pos:position pos:line="192" pos:column="57"/></operator><name pos:line="192" pos:column="54">bucket_alloc<pos:position pos:line="192" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name pos:line="193" pos:column="5">rv<pos:position pos:line="193" pos:column="7"/></name> <operator pos:line="193" pos:column="8">=<pos:position pos:line="193" pos:column="9"/></operator> <call><name pos:line="193" pos:column="10">ap_pass_brigade<pos:position pos:line="193" pos:column="25"/></name><argument_list pos:line="193" pos:column="25">(<argument><expr><name><name pos:line="193" pos:column="26">r<pos:position pos:line="193" pos:column="27"/></name><operator pos:line="193" pos:column="27">-&gt;<pos:position pos:line="193" pos:column="32"/></operator><name pos:line="193" pos:column="29">output_filters<pos:position pos:line="193" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="45">out<pos:position pos:line="193" pos:column="48"/></name></expr></argument>)<pos:position pos:line="193" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="50"/></expr_stmt>
    <if pos:line="194" pos:column="5">if <condition pos:line="194" pos:column="8">(<expr><name pos:line="194" pos:column="9">rv<pos:position pos:line="194" pos:column="11"/></name> <operator pos:line="194" pos:column="12">!=<pos:position pos:line="194" pos:column="14"/></operator> <name pos:line="194" pos:column="15">APR_SUCCESS<pos:position pos:line="194" pos:column="26"/></name></expr>)<pos:position pos:line="194" pos:column="27"/></condition><then pos:line="194" pos:column="27"> <block pos:line="194" pos:column="28">{
        <if pos:line="195" pos:column="9">if <condition pos:line="195" pos:column="12">(<expr><name pos:line="195" pos:column="13">rv<pos:position pos:line="195" pos:column="15"/></name> <operator pos:line="195" pos:column="16">!=<pos:position pos:line="195" pos:column="18"/></operator> <name pos:line="195" pos:column="19">AP_FILTER_ERROR<pos:position pos:line="195" pos:column="34"/></name></expr>)<pos:position pos:line="195" pos:column="35"/></condition><then pos:line="195" pos:column="35"> <block pos:line="195" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="196" pos:column="13">ap_log_error<pos:position pos:line="196" pos:column="25"/></name><argument_list pos:line="196" pos:column="25">(<argument><expr><name pos:line="196" pos:column="26">APLOG_MARK<pos:position pos:line="196" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="38">APLOG_ERR<pos:position pos:line="196" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="49">rv<pos:position pos:line="196" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="53">r<pos:position pos:line="196" pos:column="54"/></name><operator pos:line="196" pos:column="54">-&gt;<pos:position pos:line="196" pos:column="59"/></operator><name pos:line="196" pos:column="56">server<pos:position pos:line="196" pos:column="62"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="197" pos:column="26">"cache: error returned while trying to return %s "<pos:position pos:line="197" pos:column="76"/></literal>
                         <literal type="string" pos:line="198" pos:column="26">"cached data"<pos:position pos:line="198" pos:column="39"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="199" pos:column="26">cache<pos:position pos:line="199" pos:column="31"/></name><operator pos:line="199" pos:column="31">-&gt;<pos:position pos:line="199" pos:column="36"/></operator><name pos:line="199" pos:column="33">provider_name<pos:position pos:line="199" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="199" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="200" pos:column="10"/></block></then></if>
        <return pos:line="201" pos:column="9">return <expr><name pos:line="201" pos:column="16">rv<pos:position pos:line="201" pos:column="18"/></name></expr>;<pos:position pos:line="201" pos:column="19"/></return>
    }<pos:position pos:line="202" pos:column="6"/></block></then></if>

    <return pos:line="204" pos:column="5">return <expr><name pos:line="204" pos:column="12">OK<pos:position pos:line="204" pos:column="14"/></name></expr>;<pos:position pos:line="204" pos:column="15"/></return>
}<pos:position pos:line="205" pos:column="2"/></block></function></unit>

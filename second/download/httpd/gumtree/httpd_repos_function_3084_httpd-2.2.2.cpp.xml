<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3084_httpd-2.2.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">parse_args<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">argc<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name><name pos:line="1" pos:column="33">argv<pos:position pos:line="1" pos:column="37"/></name><index pos:line="1" pos:column="37">[]<pos:position pos:line="1" pos:column="39"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">cmd_data_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">cmd_data<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">a<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">arg<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">bool<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">argused<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">a<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator><literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></init> <condition><expr><name pos:line="7" pos:column="15">a<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&lt;<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="19">argc<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></condition> <incr><expr><name pos:line="7" pos:column="25">a<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">++<pos:position pos:line="7" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="29"/></control> <block pos:line="7" pos:column="30">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">arg<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <name><name pos:line="8" pos:column="15">argv<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><name pos:line="8" pos:column="20">a<pos:position pos:line="8" pos:column="21"/></name></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">argused<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="boolean" pos:line="9" pos:column="19">false<pos:position pos:line="9" pos:column="24"/></literal></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">arg<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>]<pos:position pos:line="11" pos:column="19"/></index></name> <operator pos:line="11" pos:column="20">==<pos:position pos:line="11" pos:column="22"/></operator> <literal type="char" pos:line="11" pos:column="23">'-'<pos:position pos:line="11" pos:column="26"/></literal></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name><name pos:line="12" pos:column="17">arg<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><literal type="number" pos:line="12" pos:column="21">1<pos:position pos:line="12" pos:column="22"/></literal></expr>]<pos:position pos:line="12" pos:column="23"/></index></name> <operator pos:line="12" pos:column="24">==<pos:position pos:line="12" pos:column="26"/></operator> <literal type="char" pos:line="12" pos:column="27">'-'<pos:position pos:line="12" pos:column="30"/></literal></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
                <expr_stmt><expr><name pos:line="13" pos:column="17">argused<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">parse_long_opt<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">arg<pos:position pos:line="13" pos:column="45"/></name> <operator pos:line="13" pos:column="46">+<pos:position pos:line="13" pos:column="47"/></operator> <literal type="number" pos:line="13" pos:column="48">2<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">cmd_data<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="14" pos:column="14"/></block></then> <elseif pos:line="14" pos:column="15">else <if pos:line="14" pos:column="20">if <condition pos:line="14" pos:column="23">(<expr><name><name pos:line="14" pos:column="24">arg<pos:position pos:line="14" pos:column="27"/></name><index pos:line="14" pos:column="27">[<expr><literal type="number" pos:line="14" pos:column="28">1<pos:position pos:line="14" pos:column="29"/></literal></expr>]<pos:position pos:line="14" pos:column="30"/></index></name> <operator pos:line="14" pos:column="31">==<pos:position pos:line="14" pos:column="33"/></operator> <literal type="char" pos:line="14" pos:column="34">'o'<pos:position pos:line="14" pos:column="37"/></literal> <operator pos:line="14" pos:column="38">&amp;&amp;<pos:position pos:line="14" pos:column="48"/></operator> <name pos:line="14" pos:column="41">a<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">+<pos:position pos:line="14" pos:column="43"/></operator><literal type="number" pos:line="14" pos:column="43">1<pos:position pos:line="14" pos:column="44"/></literal> <operator pos:line="14" pos:column="45">&lt;<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="47">argc<pos:position pos:line="14" pos:column="51"/></name></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52"> <block pos:line="14" pos:column="53">{
                <expr_stmt><expr><name><name pos:line="15" pos:column="17">cmd_data<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">arglist<pos:position pos:line="15" pos:column="34"/></name><index pos:line="15" pos:column="34">[<expr><name><name pos:line="15" pos:column="35">cmd_data<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">num_args<pos:position pos:line="15" pos:column="53"/></name></name><operator pos:line="15" pos:column="53">++<pos:position pos:line="15" pos:column="55"/></operator></expr>]<pos:position pos:line="15" pos:column="56"/></index></name> <operator pos:line="15" pos:column="57">=<pos:position pos:line="15" pos:column="58"/></operator> <name pos:line="15" pos:column="59">arg<pos:position pos:line="15" pos:column="62"/></name></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><name pos:line="16" pos:column="17">arg<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name><name pos:line="16" pos:column="23">argv<pos:position pos:line="16" pos:column="27"/></name><index pos:line="16" pos:column="27">[<expr><operator pos:line="16" pos:column="28">++<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">a<pos:position pos:line="16" pos:column="31"/></name></expr>]<pos:position pos:line="16" pos:column="32"/></index></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="17" pos:column="17">argused<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">parse_output_file_name<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">(<argument><expr><name pos:line="17" pos:column="50">arg<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">cmd_data<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if></elseif> <else pos:line="18" pos:column="15">else <block pos:line="18" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="19" pos:column="17">int<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">num_used<pos:position pos:line="19" pos:column="29"/></name> <init pos:line="19" pos:column="30">= <expr><call><name pos:line="19" pos:column="32">parse_short_opt<pos:position pos:line="19" pos:column="47"/></name><argument_list pos:line="19" pos:column="47">(<argument><expr><name pos:line="19" pos:column="48">arg<pos:position pos:line="19" pos:column="51"/></name> <operator pos:line="19" pos:column="52">+<pos:position pos:line="19" pos:column="53"/></operator> <literal type="number" pos:line="19" pos:column="54">1<pos:position pos:line="19" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">cmd_data<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="67"/></decl_stmt>
                <expr_stmt><expr><name pos:line="20" pos:column="17">argused<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">num_used<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">&gt;<pos:position pos:line="20" pos:column="40"/></operator> <literal type="number" pos:line="20" pos:column="38">0<pos:position pos:line="20" pos:column="39"/></literal></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>

                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">num_used<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">&gt;<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="32">1<pos:position pos:line="22" pos:column="33"/></literal></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
                    <expr_stmt><expr><name pos:line="23" pos:column="21">a<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">+=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">num_used<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">-<pos:position pos:line="23" pos:column="36"/></operator> <literal type="number" pos:line="23" pos:column="37">1<pos:position pos:line="23" pos:column="38"/></literal></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="24" pos:column="18"/></block></then></if>
            }<pos:position pos:line="25" pos:column="14"/></block></else></if>
        }<pos:position pos:line="26" pos:column="10"/></block></then> <else pos:line="26" pos:column="11">else <block pos:line="26" pos:column="16">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">argused<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">parse_input_file_name<pos:position pos:line="27" pos:column="44"/></name><argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">arg<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">cmd_data<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></else></if>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">argused<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22"> <block pos:line="30" pos:column="23">{
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">cmd_data<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">arglist<pos:position pos:line="31" pos:column="30"/></name><index pos:line="31" pos:column="30">[<expr><name><name pos:line="31" pos:column="31">cmd_data<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">num_args<pos:position pos:line="31" pos:column="49"/></name></name><operator pos:line="31" pos:column="49">++<pos:position pos:line="31" pos:column="51"/></operator></expr>]<pos:position pos:line="31" pos:column="52"/></index></name> <operator pos:line="31" pos:column="53">=<pos:position pos:line="31" pos:column="54"/></operator> <name pos:line="31" pos:column="55">arg<pos:position pos:line="31" pos:column="58"/></name></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
    }<pos:position pos:line="33" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">post_parse_fixup<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">cmd_data<pos:position pos:line="35" pos:column="30"/></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_952_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">menu_comment<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">menu<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">comment<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><call><name pos:line="3" pos:column="10">strcasecmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">menu<pos:position pos:line="3" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="27">"formatted"<pos:position pos:line="3" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="40"/></condition><then pos:line="3" pos:column="40"> <block pos:line="3" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">ap_rputs<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><literal type="string" pos:line="4" pos:column="18">"\n"<pos:position pos:line="4" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="24">r<pos:position pos:line="4" pos:column="25"/></name></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>         <comment type="block" pos:line="4" pos:column="36">/* print just a newline if 'formatted' */</comment>
    }<pos:position pos:line="5" pos:column="6"/></block></then></if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">strcasecmp<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">menu<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="27">"semiformatted"<pos:position pos:line="6" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call> <operator pos:line="6" pos:column="44">&amp;&amp;<pos:position pos:line="6" pos:column="54"/></operator> <operator pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="48">comment<pos:position pos:line="6" pos:column="55"/></name></expr>)<pos:position pos:line="6" pos:column="56"/></condition><then pos:line="6" pos:column="56"> <block pos:line="6" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">ap_rvputs<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">r<pos:position pos:line="7" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="22">comment<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="31">"\n"<pos:position pos:line="7" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="37">NULL<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">strcasecmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">menu<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="27">"unformatted"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call> <operator pos:line="9" pos:column="42">&amp;&amp;<pos:position pos:line="9" pos:column="52"/></operator> <operator pos:line="9" pos:column="45">*<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">comment<pos:position pos:line="9" pos:column="53"/></name></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54"> <block pos:line="9" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_rvputs<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">r<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="22">comment<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">"\n"<pos:position pos:line="10" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">NULL<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return>                     <comment type="block" pos:line="12" pos:column="33">/* comments are ignored in the
                                   'formatted' form */</comment>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

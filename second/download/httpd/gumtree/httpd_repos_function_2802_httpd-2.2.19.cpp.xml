<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2802_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_error<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">apr_dbd_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">dbc<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">step<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">SQLRETURN<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">rc<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                 <parameter><decl><type><name pos:line="2" pos:column="18">SQLSMALLINT<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">type<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">SQLHANDLE<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">h<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">line<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SQLCHAR<pos:position pos:line="4" pos:column="12"/></name></type> <name><name pos:line="4" pos:column="13">buffer<pos:position pos:line="4" pos:column="19"/></name><index pos:line="4" pos:column="19">[<expr><literal type="number" pos:line="4" pos:column="20">512<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SQLCHAR<pos:position pos:line="5" pos:column="12"/></name></type> <name><name pos:line="5" pos:column="13">sqlstate<pos:position pos:line="5" pos:column="21"/></name><index pos:line="5" pos:column="21">[<expr><literal type="number" pos:line="5" pos:column="22">128<pos:position pos:line="5" pos:column="25"/></literal></expr>]<pos:position pos:line="5" pos:column="26"/></index></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SQLINTEGER<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">native<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SQLSMALLINT<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">reslength<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">res<pos:position pos:line="8" pos:column="14"/></name></decl>, <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="17">p<pos:position pos:line="8" pos:column="18"/></name></decl>, <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="21">end<pos:position pos:line="8" pos:column="24"/></name></decl>, <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="27">logval<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name pos:line="8" pos:column="36">NULL<pos:position pos:line="8" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* set info about last error in dbc  - fast return for SQL_SUCCESS  */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">rc<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">==<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">SQL_SUCCESS<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name></type> <name><name pos:line="13" pos:column="14">successMsg<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[]<pos:position pos:line="13" pos:column="26"/></index></name> <init pos:line="13" pos:column="27">= <expr><literal type="string" pos:line="13" pos:column="29">"[dbd_odbc] SQL_SUCCESS "<pos:position pos:line="13" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="55"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">apr_size_t<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">successMsgLen<pos:position pos:line="14" pos:column="33"/></name> <init pos:line="14" pos:column="34">= <expr><sizeof pos:line="14" pos:column="36">sizeof <name pos:line="14" pos:column="43">successMsg<pos:position pos:line="14" pos:column="53"/></name></sizeof> <operator pos:line="14" pos:column="54">-<pos:position pos:line="14" pos:column="55"/></operator> <literal type="number" pos:line="14" pos:column="56">1<pos:position pos:line="14" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="58"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="16" pos:column="9">dbc<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">lasterrorcode<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">SQL_SUCCESS<pos:position pos:line="16" pos:column="41"/></name></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_cpystrn<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name><name pos:line="17" pos:column="21">dbc<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">lastError<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">successMsg<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="49">sizeof <name><name pos:line="17" pos:column="56">dbc<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">lastError<pos:position pos:line="17" pos:column="70"/></name></name></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">apr_cpystrn<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name><name pos:line="18" pos:column="21">dbc<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">lastError<pos:position pos:line="18" pos:column="35"/></name></name> <operator pos:line="18" pos:column="36">+<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">successMsgLen<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">step<pos:position pos:line="18" pos:column="57"/></name></expr></argument>,
                    <argument><expr><sizeof pos:line="19" pos:column="21">sizeof <name><name pos:line="19" pos:column="28">dbc<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">lastError<pos:position pos:line="19" pos:column="42"/></name></name></sizeof> <operator pos:line="19" pos:column="43">-<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">successMsgLen<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <switch pos:line="22" pos:column="5">switch <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">rc<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition> <block pos:line="22" pos:column="17">{
    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">SQL_INVALID_HANDLE<pos:position pos:line="23" pos:column="28"/></name></expr>:<pos:position pos:line="23" pos:column="29"/></case>
        <expr_stmt><expr><name pos:line="24" pos:column="9">res<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <literal type="string" pos:line="24" pos:column="15">"SQL_INVALID_HANDLE"<pos:position pos:line="24" pos:column="35"/></literal></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
        <break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">SQL_ERROR<pos:position pos:line="26" pos:column="19"/></name></expr>:<pos:position pos:line="26" pos:column="20"/></case>
        <expr_stmt><expr><name pos:line="27" pos:column="9">res<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <literal type="string" pos:line="27" pos:column="15">"SQL_ERROR"<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
        <break pos:line="28" pos:column="9">break;<pos:position pos:line="28" pos:column="15"/></break>
    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">SQL_SUCCESS_WITH_INFO<pos:position pos:line="29" pos:column="31"/></name></expr>:<pos:position pos:line="29" pos:column="32"/></case>
        <expr_stmt><expr><name pos:line="30" pos:column="9">res<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <literal type="string" pos:line="30" pos:column="15">"SQL_SUCCESS_WITH_INFO"<pos:position pos:line="30" pos:column="38"/></literal></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
        <break pos:line="31" pos:column="9">break;<pos:position pos:line="31" pos:column="15"/></break>
    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">SQL_STILL_EXECUTING<pos:position pos:line="32" pos:column="29"/></name></expr>:<pos:position pos:line="32" pos:column="30"/></case>
        <expr_stmt><expr><name pos:line="33" pos:column="9">res<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <literal type="string" pos:line="33" pos:column="15">"SQL_STILL_EXECUTING"<pos:position pos:line="33" pos:column="36"/></literal></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
        <break pos:line="34" pos:column="9">break;<pos:position pos:line="34" pos:column="15"/></break>
    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">SQL_NEED_DATA<pos:position pos:line="35" pos:column="23"/></name></expr>:<pos:position pos:line="35" pos:column="24"/></case>
        <expr_stmt><expr><name pos:line="36" pos:column="9">res<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <literal type="string" pos:line="36" pos:column="15">"SQL_NEED_DATA"<pos:position pos:line="36" pos:column="30"/></literal></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
        <break pos:line="37" pos:column="9">break;<pos:position pos:line="37" pos:column="15"/></break>
    <case pos:line="38" pos:column="5">case <expr><name pos:line="38" pos:column="10">SQL_NO_DATA<pos:position pos:line="38" pos:column="21"/></name></expr>:<pos:position pos:line="38" pos:column="22"/></case>
        <expr_stmt><expr><name pos:line="39" pos:column="9">res<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <literal type="string" pos:line="39" pos:column="15">"SQL_NO_DATA"<pos:position pos:line="39" pos:column="28"/></literal></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>
    <default pos:line="41" pos:column="5">default:<pos:position pos:line="41" pos:column="13"/></default>
        <expr_stmt><expr><name pos:line="42" pos:column="9">res<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <literal type="string" pos:line="42" pos:column="15">"unrecognized SQL return code"<pos:position pos:line="42" pos:column="45"/></literal></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></switch>
    <comment type="block" pos:line="44" pos:column="5">/* these two returns are expected during normal execution */</comment>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">rc<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">!=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">SQL_SUCCESS_WITH_INFO<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">&amp;&amp;<pos:position pos:line="45" pos:column="47"/></operator> <name pos:line="45" pos:column="40">rc<pos:position pos:line="45" pos:column="42"/></name> <operator pos:line="45" pos:column="43">!=<pos:position pos:line="45" pos:column="45"/></operator> <name pos:line="45" pos:column="46">SQL_NO_DATA<pos:position pos:line="45" pos:column="57"/></name> 
        <operator pos:line="46" pos:column="9">&amp;&amp;<pos:position pos:line="46" pos:column="19"/></operator> <name><name pos:line="46" pos:column="12">dbc<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">can_commit<pos:position pos:line="46" pos:column="27"/></name></name> <operator pos:line="46" pos:column="28">!=<pos:position pos:line="46" pos:column="30"/></operator> <name pos:line="46" pos:column="31">APR_DBD_TRANSACTION_IGNORE_ERRORS<pos:position pos:line="46" pos:column="64"/></name></expr>)<pos:position pos:line="46" pos:column="65"/></condition><then pos:line="46" pos:column="65"> <block pos:line="46" pos:column="66">{
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">dbc<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">can_commit<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="27">APR_DBD_TRANSACTION_ROLLBACK<pos:position pos:line="47" pos:column="55"/></name></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="49" pos:column="5">p<pos:position pos:line="49" pos:column="6"/></name> <operator pos:line="49" pos:column="7">=<pos:position pos:line="49" pos:column="8"/></operator> <name><name pos:line="49" pos:column="9">dbc<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">lastError<pos:position pos:line="49" pos:column="23"/></name></name></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">end<pos:position pos:line="50" pos:column="8"/></name> <operator pos:line="50" pos:column="9">=<pos:position pos:line="50" pos:column="10"/></operator> <name pos:line="50" pos:column="11">p<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">+<pos:position pos:line="50" pos:column="14"/></operator> <sizeof pos:line="50" pos:column="15">sizeof<argument_list pos:line="50" pos:column="21">(<argument><expr><name><name pos:line="50" pos:column="22">dbc<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">-&gt;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="27">lastError<pos:position pos:line="50" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">dbc<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">-&gt;<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="10">lasterrorcode<pos:position pos:line="51" pos:column="23"/></name></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <name pos:line="51" pos:column="26">rc<pos:position pos:line="51" pos:column="28"/></name></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="52" pos:column="5">p<pos:position pos:line="52" pos:column="6"/></name> <operator pos:line="52" pos:column="7">+=<pos:position pos:line="52" pos:column="9"/></operator> <call><name pos:line="52" pos:column="10">sprintf<pos:position pos:line="52" pos:column="17"/></name><argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">p<pos:position pos:line="52" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="21">"[dbd_odbc] %.64s returned %.30s (%d) at %.24s:%d "<pos:position pos:line="52" pos:column="72"/></literal></expr></argument>,
                 <argument><expr><name pos:line="53" pos:column="18">step<pos:position pos:line="53" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="24">res<pos:position pos:line="53" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="29">rc<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="33">SOURCE_FILE<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="46">line<pos:position pos:line="53" pos:column="50"/></name> <operator pos:line="53" pos:column="51">-<pos:position pos:line="53" pos:column="52"/></operator> <literal type="number" pos:line="53" pos:column="53">1<pos:position pos:line="53" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt>
    <for pos:line="54" pos:column="5">for <control pos:line="54" pos:column="9">(<init><expr><name pos:line="54" pos:column="10">i<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <literal type="number" pos:line="54" pos:column="14">1<pos:position pos:line="54" pos:column="15"/></literal></expr><operator pos:line="54" pos:column="15">,<pos:position pos:line="54" pos:column="16"/></operator> <expr><name pos:line="54" pos:column="17">rc<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <literal type="number" pos:line="54" pos:column="22">0<pos:position pos:line="54" pos:column="23"/></literal></expr>;<pos:position pos:line="54" pos:column="24"/></init> <condition><expr><name pos:line="54" pos:column="25">rc<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">==<pos:position pos:line="54" pos:column="30"/></operator> <literal type="number" pos:line="54" pos:column="31">0<pos:position pos:line="54" pos:column="32"/></literal></expr>;<pos:position pos:line="54" pos:column="33"/></condition> <incr><expr><name pos:line="54" pos:column="34">i<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">++<pos:position pos:line="54" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="38"/></control> <block pos:line="54" pos:column="39">{
        <expr_stmt><expr><name pos:line="55" pos:column="9">rc<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">SQLGetDiagRec<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><name pos:line="55" pos:column="28">type<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">h<pos:position pos:line="55" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="37">i<pos:position pos:line="55" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="40">sqlstate<pos:position pos:line="55" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="50">&amp;<pos:position pos:line="55" pos:column="55"/></operator><name pos:line="55" pos:column="51">native<pos:position pos:line="55" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="59">buffer<pos:position pos:line="55" pos:column="65"/></name></expr></argument>, 
                            <argument><expr><sizeof pos:line="56" pos:column="29">sizeof<argument_list pos:line="56" pos:column="35">(<argument><expr><name pos:line="56" pos:column="36">buffer<pos:position pos:line="56" pos:column="42"/></name></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="56" pos:column="45">&amp;<pos:position pos:line="56" pos:column="50"/></operator><name pos:line="56" pos:column="46">reslength<pos:position pos:line="56" pos:column="55"/></name></expr></argument>)<pos:position pos:line="56" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="57"/></expr_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><call><name pos:line="57" pos:column="13">SQL_SUCCEEDED<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">rc<pos:position pos:line="57" pos:column="29"/></name></expr></argument>)<pos:position pos:line="57" pos:column="30"/></argument_list></call> <operator pos:line="57" pos:column="31">&amp;&amp;<pos:position pos:line="57" pos:column="41"/></operator> <operator pos:line="57" pos:column="34">(<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="35">p<pos:position pos:line="57" pos:column="36"/></name> <operator pos:line="57" pos:column="37">&lt;<pos:position pos:line="57" pos:column="41"/></operator> <operator pos:line="57" pos:column="39">(<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="40">end<pos:position pos:line="57" pos:column="43"/></name> <operator pos:line="57" pos:column="44">-<pos:position pos:line="57" pos:column="45"/></operator> <literal type="number" pos:line="57" pos:column="46">280<pos:position pos:line="57" pos:column="49"/></literal><operator pos:line="57" pos:column="49">)<pos:position pos:line="57" pos:column="50"/></operator><operator pos:line="57" pos:column="50">)<pos:position pos:line="57" pos:column="51"/></operator></expr>)<pos:position pos:line="57" pos:column="52"/></condition><then pos:line="57" pos:column="52"> 
            <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="13">p<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">+=<pos:position pos:line="58" pos:column="17"/></operator> <call><name pos:line="58" pos:column="18">sprintf<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">p<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"%.256s %.20s "<pos:position pos:line="58" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="46">buffer<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="54">sqlstate<pos:position pos:line="58" pos:column="62"/></name></expr></argument>)<pos:position pos:line="58" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="64"/></expr_stmt></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">apr_env_get<pos:position pos:line="60" pos:column="16"/></name><argument_list pos:line="60" pos:column="16">(<argument><expr><operator pos:line="60" pos:column="17">&amp;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="18">logval<pos:position pos:line="60" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="26">"apr_dbd_odbc_log"<pos:position pos:line="60" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="46">dbc<pos:position pos:line="60" pos:column="49"/></name><operator pos:line="60" pos:column="49">-&gt;<pos:position pos:line="60" pos:column="54"/></operator><name pos:line="60" pos:column="51">pool<pos:position pos:line="60" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="57"/></expr_stmt>
    <comment type="block" pos:line="61" pos:column="5">/* if env var was set or call was init/open (no dbname) - log to stderr */</comment>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">logval<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">||<pos:position pos:line="62" pos:column="18"/></operator> <operator pos:line="62" pos:column="19">!<pos:position pos:line="62" pos:column="20"/></operator><name><name pos:line="62" pos:column="20">dbc<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">dbname<pos:position pos:line="62" pos:column="31"/></name></name></expr> )<pos:position pos:line="62" pos:column="33"/></condition><then pos:line="62" pos:column="33"> <block pos:line="62" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">char<pos:position pos:line="63" pos:column="13"/></name></type> <name><name pos:line="63" pos:column="14">timestamp<pos:position pos:line="63" pos:column="23"/></name><index pos:line="63" pos:column="23">[<expr><name pos:line="63" pos:column="24">APR_CTIME_LEN<pos:position pos:line="63" pos:column="37"/></name></expr>]<pos:position pos:line="63" pos:column="38"/></index></name></decl>;<pos:position pos:line="63" pos:column="39"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="65" pos:column="9">apr_file_t<pos:position pos:line="65" pos:column="19"/></name> <modifier pos:line="65" pos:column="20">*<pos:position pos:line="65" pos:column="21"/></modifier></type><name pos:line="65" pos:column="21">se<pos:position pos:line="65" pos:column="23"/></name></decl>;<pos:position pos:line="65" pos:column="24"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">apr_ctime<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><name pos:line="66" pos:column="19">timestamp<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="30">apr_time_now<pos:position pos:line="66" pos:column="42"/></name><argument_list pos:line="66" pos:column="42">()<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">apr_file_open_stderr<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><operator pos:line="67" pos:column="30">&amp;<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="31">se<pos:position pos:line="67" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="35">dbc<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">pool<pos:position pos:line="67" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">apr_file_printf<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">se<pos:position pos:line="68" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="29">"[%s] %s\n"<pos:position pos:line="68" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="42">timestamp<pos:position pos:line="68" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="53">dbc<pos:position pos:line="68" pos:column="56"/></name><operator pos:line="68" pos:column="56">-&gt;<pos:position pos:line="68" pos:column="61"/></operator><name pos:line="68" pos:column="58">lastError<pos:position pos:line="68" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

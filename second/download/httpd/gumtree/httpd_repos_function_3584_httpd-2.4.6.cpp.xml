<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3584_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">process_timeout_queue<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">timeout_queue<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">q<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_time_t<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">timeout_time<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                  <parameter><function_decl><type><name pos:line="3" pos:column="35">int<pos:position pos:line="3" pos:column="38"/></name></type> (<modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier><name pos:line="3" pos:column="41">func<pos:position pos:line="3" pos:column="45"/></name>)<parameter_list pos:line="3" pos:column="46">(<parameter><decl><type><name pos:line="3" pos:column="47">event_conn_state_t<pos:position pos:line="3" pos:column="65"/></name> <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="68"/></parameter_list></function_decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">count<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">event_conn_state_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">first<pos:position pos:line="6" pos:column="30"/></name></decl>, <modifier pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="33">cs<pos:position pos:line="6" pos:column="35"/></name></decl>, <modifier pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="38">last<pos:position pos:line="6" pos:column="42"/></name></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">q<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">count<pos:position pos:line="8" pos:column="18"/></name></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19"> <block pos:line="8" pos:column="20">{
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><call><name pos:line="11" pos:column="22">APR_RING_EMPTY<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><operator pos:line="11" pos:column="37">&amp;<pos:position pos:line="11" pos:column="42"/></operator><name><name pos:line="11" pos:column="38">q<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">head<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">event_conn_state_t<pos:position pos:line="11" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="67">timeout_list<pos:position pos:line="11" pos:column="79"/></name></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="82"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">cs<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <name pos:line="13" pos:column="10">first<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">APR_RING_FIRST<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><operator pos:line="13" pos:column="33">&amp;<pos:position pos:line="13" pos:column="38"/></operator><name><name pos:line="13" pos:column="34">q<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">head<pos:position pos:line="13" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">cs<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">!=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">APR_RING_SENTINEL<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator><name><name pos:line="14" pos:column="37">q<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">head<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">event_conn_state_t<pos:position pos:line="14" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="66">timeout_list<pos:position pos:line="14" pos:column="78"/></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call>
           <operator pos:line="15" pos:column="12">&amp;&amp;<pos:position pos:line="15" pos:column="22"/></operator> <name><name pos:line="15" pos:column="15">cs<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">expiration_time<pos:position pos:line="15" pos:column="34"/></name></name> <operator pos:line="15" pos:column="35">&lt;<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="37">timeout_time<pos:position pos:line="15" pos:column="49"/></name></expr>)<pos:position pos:line="15" pos:column="50"/></condition> <block pos:line="15" pos:column="51">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">last<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">cs<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">rv<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">apr_pollset_remove<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">event_pollset<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="48">&amp;<pos:position pos:line="17" pos:column="53"/></operator><name><name pos:line="17" pos:column="49">cs<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="53">pfd<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">rv<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">!=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">APR_SUCCESS<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">&amp;&amp;<pos:position pos:line="18" pos:column="41"/></operator> <operator pos:line="18" pos:column="34">!<pos:position pos:line="18" pos:column="35"/></operator><call><name pos:line="18" pos:column="35">APR_STATUS_IS_NOTFOUND<pos:position pos:line="18" pos:column="57"/></name><argument_list pos:line="18" pos:column="57">(<argument><expr><name pos:line="18" pos:column="58">rv<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="62"/></condition><then pos:line="18" pos:column="62"> <block pos:line="18" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">ap_log_cerror<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">APLOG_MARK<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="39">APLOG_ERR<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">rv<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="54">cs<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">c<pos:position pos:line="19" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="61">APLOGNO<pos:position pos:line="19" pos:column="68"/></name><argument_list pos:line="19" pos:column="68">(<argument><expr><literal type="number" pos:line="19" pos:column="69">00473<pos:position pos:line="19" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call>
                          <literal type="string" pos:line="20" pos:column="27">"apr_pollset_remove failed"<pos:position pos:line="20" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="22" pos:column="9">cs<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">APR_RING_NEXT<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">cs<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">timeout_list<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">count<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">++<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></while>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">count<pos:position pos:line="25" pos:column="15"/></name></expr>)<pos:position pos:line="25" pos:column="16"/></condition><then pos:line="25" pos:column="16">
        <block type="pseudo"><return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">APR_RING_UNSPLICE<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">first<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">last<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">timeout_list<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name><name pos:line="29" pos:column="21">q<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">count<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">&gt;=<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="33">count<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">q<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">count<pos:position pos:line="30" pos:column="13"/></name></name> <operator pos:line="30" pos:column="14">-=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">count<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">timeout_mutex<pos:position pos:line="31" pos:column="42"/></name></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
    <while pos:line="32" pos:column="5">while <condition pos:line="32" pos:column="11">(<expr><name pos:line="32" pos:column="12">count<pos:position pos:line="32" pos:column="17"/></name></expr>)<pos:position pos:line="32" pos:column="18"/></condition> <block pos:line="32" pos:column="19">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">cs<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">APR_RING_NEXT<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">first<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="35">timeout_list<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">TO_QUEUE_ELEM_INIT<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">first<pos:position pos:line="34" pos:column="33"/></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">func<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">first<pos:position pos:line="35" pos:column="19"/></name></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">first<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">cs<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">count<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">--<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">timeout_mutex<pos:position pos:line="39" pos:column="40"/></name></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

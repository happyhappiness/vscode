<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1770_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
    <name pos:line="2" pos:column="5">set_proxy_param<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">cmd_parms<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">cmd<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">void<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">dummy<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">arg<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">server_rec<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">s<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">cmd<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">server<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">proxy_server_conf<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">conf<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">=
    <expr><operator pos:line="6" pos:column="5">(<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">proxy_server_conf<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></operator><operator pos:line="6" pos:column="25">)<pos:position pos:line="6" pos:column="26"/></operator> <call><name pos:line="6" pos:column="27">ap_get_module_config<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><name><name pos:line="6" pos:column="48">s<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">-&gt;<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="51">module_config<pos:position pos:line="6" pos:column="64"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="66">&amp;<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="67">proxy_module<pos:position pos:line="6" pos:column="79"/></name></expr></argument>)<pos:position pos:line="6" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">name<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">word<pos:position pos:line="8" pos:column="15"/></name></decl>, <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="18">val<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">proxy_balancer<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">balancer<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name pos:line="9" pos:column="32">NULL<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">proxy_worker<pos:position pos:line="10" pos:column="17"/></name> <modifier pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></modifier></type><name pos:line="10" pos:column="19">worker<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name pos:line="10" pos:column="28">NULL<pos:position pos:line="10" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">err<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">in_proxy_section<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">cmd<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">directive<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">parent<pos:position pos:line="14" pos:column="31"/></name></name> <operator pos:line="14" pos:column="32">&amp;&amp;<pos:position pos:line="14" pos:column="42"/></operator>
        <call><name pos:line="15" pos:column="9">strncasecmp<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name><name pos:line="15" pos:column="21">cmd<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">directive<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">parent<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">directive<pos:position pos:line="15" pos:column="54"/></name></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="16" pos:column="21">"&lt;Proxy"<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="31">6<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call> <operator pos:line="16" pos:column="34">==<pos:position pos:line="16" pos:column="36"/></operator> <literal type="number" pos:line="16" pos:column="37">0<pos:position pos:line="16" pos:column="38"/></literal></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39"> <block pos:line="16" pos:column="40">{
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">char<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">pargs<pos:position pos:line="17" pos:column="26"/></name> <init pos:line="17" pos:column="27">= <expr><name><name pos:line="17" pos:column="29">cmd<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">directive<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">parent<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="53">args<pos:position pos:line="17" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="58"/></decl_stmt>
        <comment type="block" pos:line="18" pos:column="9">/* Directive inside &lt;Proxy section
         * Parent directive arg is the worker/balancer name.
         */</comment>
        <expr_stmt><expr><name pos:line="21" pos:column="9">name<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name pos:line="21" pos:column="16">ap_getword_conf<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name><name pos:line="21" pos:column="32">cmd<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">temp_pool<pos:position pos:line="21" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="48">&amp;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="49">pargs<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">(<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">word<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">ap_strchr<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">name<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="37">'&gt;'<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call><operator pos:line="22" pos:column="41">)<pos:position pos:line="22" pos:column="42"/></operator></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="13">*<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">word<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <literal type="char" pos:line="23" pos:column="21">'\0'<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="24" pos:column="9">in_proxy_section<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <literal type="number" pos:line="24" pos:column="28">1<pos:position pos:line="24" pos:column="29"/></literal></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
        <comment type="block" pos:line="27" pos:column="9">/* Standard set directive with worker/balancer
         * name as first param.
         */</comment>
        <expr_stmt><expr><name pos:line="30" pos:column="9">name<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">ap_getword_conf<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name><name pos:line="30" pos:column="32">cmd<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">temp_pool<pos:position pos:line="30" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="48">&amp;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="49">arg<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">strncasecmp<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">name<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="27">"balancer:"<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="40">9<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call> <operator pos:line="33" pos:column="43">==<pos:position pos:line="33" pos:column="45"/></operator> <literal type="number" pos:line="33" pos:column="46">0<pos:position pos:line="33" pos:column="47"/></literal></expr>)<pos:position pos:line="33" pos:column="48"/></condition><then pos:line="33" pos:column="48"> <block pos:line="33" pos:column="49">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">balancer<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <call><name pos:line="34" pos:column="20">ap_proxy_get_balancer<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><name><name pos:line="34" pos:column="42">cmd<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="47">pool<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">conf<pos:position pos:line="34" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="59">name<pos:position pos:line="34" pos:column="63"/></name></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">balancer<pos:position pos:line="35" pos:column="22"/></name></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23"> <block pos:line="35" pos:column="24">{
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">in_proxy_section<pos:position pos:line="36" pos:column="33"/></name></expr>)<pos:position pos:line="36" pos:column="34"/></condition><then pos:line="36" pos:column="34"> <block pos:line="36" pos:column="35">{
                <expr_stmt><expr><name pos:line="37" pos:column="17">err<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <call><name pos:line="37" pos:column="23">ap_proxy_add_balancer<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><operator pos:line="37" pos:column="45">&amp;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="46">balancer<pos:position pos:line="37" pos:column="54"/></name></expr></argument>,
                                            <argument><expr><name><name pos:line="38" pos:column="45">cmd<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">pool<pos:position pos:line="38" pos:column="54"/></name></name></expr></argument>,
                                            <argument><expr><name pos:line="39" pos:column="45">conf<pos:position pos:line="39" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="51">name<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">err<pos:position pos:line="40" pos:column="24"/></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
                    <block type="pseudo"><return pos:line="41" pos:column="21">return <expr><call><name pos:line="41" pos:column="28">apr_pstrcat<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><name><name pos:line="41" pos:column="40">cmd<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">-&gt;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="45">temp_pool<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="56">"ProxySet "<pos:position pos:line="41" pos:column="67"/></literal></expr></argument>,
                                       <argument><expr><name pos:line="42" pos:column="40">err<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="45">NULL<pos:position pos:line="42" pos:column="49"/></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="51"/></return></block></then></if>
            }<pos:position pos:line="43" pos:column="14"/></block></then>
            <else pos:line="44" pos:column="13">else
                <block type="pseudo"><return pos:line="45" pos:column="17">return <expr><call><name pos:line="45" pos:column="24">apr_pstrcat<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name><name pos:line="45" pos:column="36">cmd<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">temp_pool<pos:position pos:line="45" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="52">"ProxySet can not find '"<pos:position pos:line="45" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><name pos:line="46" pos:column="36">name<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="42">"' Balancer."<pos:position pos:line="46" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="57">NULL<pos:position pos:line="46" pos:column="61"/></name></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="63"/></return></block></else></if>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
    }<pos:position pos:line="48" pos:column="6"/></block></then>
    <else pos:line="49" pos:column="5">else <block pos:line="49" pos:column="10">{
        <expr_stmt><expr><name pos:line="50" pos:column="9">worker<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <call><name pos:line="50" pos:column="18">ap_proxy_get_worker<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name><name pos:line="50" pos:column="38">cmd<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">-&gt;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="43">temp_pool<pos:position pos:line="50" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="54">conf<pos:position pos:line="50" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="60">name<pos:position pos:line="50" pos:column="64"/></name></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">worker<pos:position pos:line="51" pos:column="20"/></name></expr>)<pos:position pos:line="51" pos:column="21"/></condition><then pos:line="51" pos:column="21"> <block pos:line="51" pos:column="22">{
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">in_proxy_section<pos:position pos:line="52" pos:column="33"/></name></expr>)<pos:position pos:line="52" pos:column="34"/></condition><then pos:line="52" pos:column="34"> <block pos:line="52" pos:column="35">{
                <expr_stmt><expr><name pos:line="53" pos:column="17">err<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <call><name pos:line="53" pos:column="23">ap_proxy_add_worker<pos:position pos:line="53" pos:column="42"/></name><argument_list pos:line="53" pos:column="42">(<argument><expr><operator pos:line="53" pos:column="43">&amp;<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="44">worker<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="52">cmd<pos:position pos:line="53" pos:column="55"/></name><operator pos:line="53" pos:column="55">-&gt;<pos:position pos:line="53" pos:column="60"/></operator><name pos:line="53" pos:column="57">pool<pos:position pos:line="53" pos:column="61"/></name></name></expr></argument>,
                                          <argument><expr><name pos:line="54" pos:column="43">conf<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="49">name<pos:position pos:line="54" pos:column="53"/></name></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="55"/></expr_stmt>
                <if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">err<pos:position pos:line="55" pos:column="24"/></name></expr>)<pos:position pos:line="55" pos:column="25"/></condition><then pos:line="55" pos:column="25">
                    <block type="pseudo"><return pos:line="56" pos:column="21">return <expr><call><name pos:line="56" pos:column="28">apr_pstrcat<pos:position pos:line="56" pos:column="39"/></name><argument_list pos:line="56" pos:column="39">(<argument><expr><name><name pos:line="56" pos:column="40">cmd<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">temp_pool<pos:position pos:line="56" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="56">"ProxySet "<pos:position pos:line="56" pos:column="67"/></literal></expr></argument>,
                                       <argument><expr><name pos:line="57" pos:column="40">err<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="45">NULL<pos:position pos:line="57" pos:column="49"/></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></return></block></then></if>
            }<pos:position pos:line="58" pos:column="14"/></block></then>
            <else pos:line="59" pos:column="13">else
                <block type="pseudo"><return pos:line="60" pos:column="17">return <expr><call><name pos:line="60" pos:column="24">apr_pstrcat<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">(<argument><expr><name><name pos:line="60" pos:column="36">cmd<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">-&gt;<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="41">temp_pool<pos:position pos:line="60" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="52">"ProxySet can not find '"<pos:position pos:line="60" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><name pos:line="61" pos:column="36">name<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="42">"' Worker."<pos:position pos:line="61" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="55">NULL<pos:position pos:line="61" pos:column="59"/></name></expr></argument>)<pos:position pos:line="61" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="61"/></return></block></else></if>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
    }<pos:position pos:line="63" pos:column="6"/></block></else></if>

    <while pos:line="65" pos:column="5">while <condition pos:line="65" pos:column="11">(<expr><operator pos:line="65" pos:column="12">*<pos:position pos:line="65" pos:column="13"/></operator><name pos:line="65" pos:column="13">arg<pos:position pos:line="65" pos:column="16"/></name></expr>)<pos:position pos:line="65" pos:column="17"/></condition> <block pos:line="65" pos:column="18">{
        <expr_stmt><expr><name pos:line="66" pos:column="9">word<pos:position pos:line="66" pos:column="13"/></name> <operator pos:line="66" pos:column="14">=<pos:position pos:line="66" pos:column="15"/></operator> <call><name pos:line="66" pos:column="16">ap_getword_conf<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><name><name pos:line="66" pos:column="32">cmd<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">pool<pos:position pos:line="66" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="43">&amp;<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="44">arg<pos:position pos:line="66" pos:column="47"/></name></expr></argument>)<pos:position pos:line="66" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="67" pos:column="9">val<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <call><name pos:line="67" pos:column="15">strchr<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name pos:line="67" pos:column="22">word<pos:position pos:line="67" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="67" pos:column="28">'='<pos:position pos:line="67" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><operator pos:line="68" pos:column="13">!<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">val<pos:position pos:line="68" pos:column="17"/></name></expr>)<pos:position pos:line="68" pos:column="18"/></condition><then pos:line="68" pos:column="18"> <block pos:line="68" pos:column="19">{
            <return pos:line="69" pos:column="13">return <expr><literal type="string" pos:line="69" pos:column="20">"Invalid ProxySet parameter. Parameter must be "<pos:position pos:line="69" pos:column="68"/></literal>
                   <literal type="string" pos:line="70" pos:column="20">"in the form 'key=value'"<pos:position pos:line="70" pos:column="45"/></literal></expr>;<pos:position pos:line="70" pos:column="46"/></return>
        }<pos:position pos:line="71" pos:column="10"/></block></then>
        <else pos:line="72" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="73" pos:column="13">*<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">val<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">++<pos:position pos:line="73" pos:column="19"/></operator> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <literal type="char" pos:line="73" pos:column="22">'\0'<pos:position pos:line="73" pos:column="26"/></literal></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt></block></else></if>
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">worker<pos:position pos:line="74" pos:column="19"/></name></expr>)<pos:position pos:line="74" pos:column="20"/></condition><then pos:line="74" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="13">err<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <call><name pos:line="75" pos:column="19">set_worker_param<pos:position pos:line="75" pos:column="35"/></name><argument_list pos:line="75" pos:column="35">(<argument><expr><name><name pos:line="75" pos:column="36">cmd<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">-&gt;<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="41">pool<pos:position pos:line="75" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="47">worker<pos:position pos:line="75" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="55">word<pos:position pos:line="75" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="61">val<pos:position pos:line="75" pos:column="64"/></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></expr_stmt></block></then>
        <else pos:line="76" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="13">err<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <call><name pos:line="77" pos:column="19">set_balancer_param<pos:position pos:line="77" pos:column="37"/></name><argument_list pos:line="77" pos:column="37">(<argument><expr><name pos:line="77" pos:column="38">conf<pos:position pos:line="77" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="44">cmd<pos:position pos:line="77" pos:column="47"/></name><operator pos:line="77" pos:column="47">-&gt;<pos:position pos:line="77" pos:column="52"/></operator><name pos:line="77" pos:column="49">pool<pos:position pos:line="77" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="55">balancer<pos:position pos:line="77" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="65">word<pos:position pos:line="77" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="71">val<pos:position pos:line="77" pos:column="74"/></name></expr></argument>)<pos:position pos:line="77" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="76"/></expr_stmt></block></else></if>

        <if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">err<pos:position pos:line="79" pos:column="16"/></name></expr>)<pos:position pos:line="79" pos:column="17"/></condition><then pos:line="79" pos:column="17">
            <block type="pseudo"><return pos:line="80" pos:column="13">return <expr><call><name pos:line="80" pos:column="20">apr_pstrcat<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><name><name pos:line="80" pos:column="32">cmd<pos:position pos:line="80" pos:column="35"/></name><operator pos:line="80" pos:column="35">-&gt;<pos:position pos:line="80" pos:column="40"/></operator><name pos:line="80" pos:column="37">temp_pool<pos:position pos:line="80" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="48">"ProxySet: "<pos:position pos:line="80" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="62">err<pos:position pos:line="80" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="67">" "<pos:position pos:line="80" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="72">word<pos:position pos:line="80" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="78">"="<pos:position pos:line="80" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="83">val<pos:position pos:line="80" pos:column="86"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="88">"; "<pos:position pos:line="80" pos:column="92"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="94">name<pos:position pos:line="80" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="100">NULL<pos:position pos:line="80" pos:column="104"/></name></expr></argument>)<pos:position pos:line="80" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="106"/></return></block></then></if>
    }<pos:position pos:line="81" pos:column="6"/></block></while>

    <return pos:line="83" pos:column="5">return <expr><name pos:line="83" pos:column="12">NULL<pos:position pos:line="83" pos:column="16"/></name></expr>;<pos:position pos:line="83" pos:column="17"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

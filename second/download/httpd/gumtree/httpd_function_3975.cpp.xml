<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3975.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">req_dispatch<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">lua_State<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">L<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_hash_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">dispatch<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">req_fun_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">rft<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">ap_lua_check_request_rec<pos:position pos:line="5" pos:column="46"/></name><argument_list pos:line="5" pos:column="46">(<argument><expr><name pos:line="5" pos:column="47">L<pos:position pos:line="5" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="50">1<pos:position pos:line="5" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">name<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name pos:line="6" pos:column="24">luaL_checkstring<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><name pos:line="6" pos:column="41">L<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="44">2<pos:position pos:line="6" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">lua_pop<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">L<pos:position pos:line="7" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">2<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">lua_getfield<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">L<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="21">LUA_REGISTRYINDEX<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="40">"Apache2.Request.dispatch"<pos:position pos:line="9" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">dispatch<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">lua_touserdata<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">L<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="34">1<pos:position pos:line="10" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">lua_pop<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">L<pos:position pos:line="11" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">rft<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">apr_hash_get<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">dispatch<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">name<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">APR_HASH_KEY_STRING<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">rft<pos:position pos:line="14" pos:column="12"/></name></expr>)<pos:position pos:line="14" pos:column="13"/></condition><then pos:line="14" pos:column="13"> <block pos:line="14" pos:column="14">{
        <switch pos:line="15" pos:column="9">switch <condition pos:line="15" pos:column="16">(<expr><name><name pos:line="15" pos:column="17">rft<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">type<pos:position pos:line="15" pos:column="26"/></name></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition> <block pos:line="15" pos:column="28">{
        <case pos:line="16" pos:column="9">case <expr><name pos:line="16" pos:column="14">APL_REQ_FUNTYPE_TABLE<pos:position pos:line="16" pos:column="35"/></name></expr>:<pos:position pos:line="16" pos:column="36"/></case><block pos:line="16" pos:column="36">{
                <decl_stmt><decl><type><name pos:line="17" pos:column="17">apr_table_t<pos:position pos:line="17" pos:column="28"/></name> <modifier pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></modifier></type><name pos:line="17" pos:column="30">rs<pos:position pos:line="17" pos:column="32"/></name></decl>;<pos:position pos:line="17" pos:column="33"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="18" pos:column="17">req_field_apr_table_f<pos:position pos:line="18" pos:column="38"/></name></type> <name pos:line="18" pos:column="39">func<pos:position pos:line="18" pos:column="43"/></name> <init pos:line="18" pos:column="44">= <expr><operator pos:line="18" pos:column="46">(<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">req_field_apr_table_f<pos:position pos:line="18" pos:column="68"/></name><operator pos:line="18" pos:column="68">)<pos:position pos:line="18" pos:column="69"/></operator><name><name pos:line="18" pos:column="69">rft<pos:position pos:line="18" pos:column="72"/></name><operator pos:line="18" pos:column="72">-&gt;<pos:position pos:line="18" pos:column="77"/></operator><name pos:line="18" pos:column="74">fun<pos:position pos:line="18" pos:column="77"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="78"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="19" pos:column="17">ap_log_rerror<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">APLOG_MARK<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">APLOG_DEBUG<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="56">0<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">r<pos:position pos:line="19" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="20" pos:column="31">"request_rec-&gt;dispatching %s -&gt; apr table"<pos:position pos:line="20" pos:column="79"/></literal></expr></argument>,
                              <argument><expr><name pos:line="21" pos:column="31">name<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name pos:line="22" pos:column="17">rs<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <call pos:line="22" pos:column="22">(<modifier pos:line="22" pos:column="23">*<pos:position pos:line="22" pos:column="24"/></modifier><name pos:line="22" pos:column="24">func<pos:position pos:line="22" pos:column="28"/></name>)<argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">r<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">ap_lua_push_apr_table<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">L<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">rs<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>          
                <return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">1<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return>
            }<pos:position pos:line="25" pos:column="14"/></block>

        <case pos:line="27" pos:column="9">case <expr><name pos:line="27" pos:column="14">APL_REQ_FUNTYPE_LUACFUN<pos:position pos:line="27" pos:column="37"/></name></expr>:<pos:position pos:line="27" pos:column="38"/></case><block pos:line="27" pos:column="38">{
                <decl_stmt><decl><type><name pos:line="28" pos:column="17">lua_CFunction<pos:position pos:line="28" pos:column="30"/></name></type> <name pos:line="28" pos:column="31">func<pos:position pos:line="28" pos:column="35"/></name> <init pos:line="28" pos:column="36">= <expr><operator pos:line="28" pos:column="38">(<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">lua_CFunction<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">)<pos:position pos:line="28" pos:column="53"/></operator><name><name pos:line="28" pos:column="53">rft<pos:position pos:line="28" pos:column="56"/></name><operator pos:line="28" pos:column="56">-&gt;<pos:position pos:line="28" pos:column="61"/></operator><name pos:line="28" pos:column="58">fun<pos:position pos:line="28" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="28" pos:column="62"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">ap_log_rerror<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">APLOG_MARK<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">APLOG_DEBUG<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="56">0<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="59">r<pos:position pos:line="29" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="30" pos:column="31">"request_rec-&gt;dispatching %s -&gt; lua_CFunction"<pos:position pos:line="30" pos:column="83"/></literal></expr></argument>,
                              <argument><expr><name pos:line="31" pos:column="31">name<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">lua_pushcfunction<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">L<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">func<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
                <return pos:line="33" pos:column="17">return <expr><literal type="number" pos:line="33" pos:column="24">1<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></return>
            }<pos:position pos:line="34" pos:column="14"/></block>
        <case pos:line="35" pos:column="9">case <expr><name pos:line="35" pos:column="14">APL_REQ_FUNTYPE_STRING<pos:position pos:line="35" pos:column="36"/></name></expr>:<pos:position pos:line="35" pos:column="37"/></case><block pos:line="35" pos:column="37">{
                <decl_stmt><decl><type><name pos:line="36" pos:column="17">req_field_string_f<pos:position pos:line="36" pos:column="35"/></name></type> <name pos:line="36" pos:column="36">func<pos:position pos:line="36" pos:column="40"/></name> <init pos:line="36" pos:column="41">= <expr><operator pos:line="36" pos:column="43">(<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="44">req_field_string_f<pos:position pos:line="36" pos:column="62"/></name><operator pos:line="36" pos:column="62">)<pos:position pos:line="36" pos:column="63"/></operator><name><name pos:line="36" pos:column="63">rft<pos:position pos:line="36" pos:column="66"/></name><operator pos:line="36" pos:column="66">-&gt;<pos:position pos:line="36" pos:column="71"/></operator><name pos:line="36" pos:column="68">fun<pos:position pos:line="36" pos:column="71"/></name></name></expr></init></decl>;<pos:position pos:line="36" pos:column="72"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="37" pos:column="17">char<pos:position pos:line="37" pos:column="21"/></name> <modifier pos:line="37" pos:column="22">*<pos:position pos:line="37" pos:column="23"/></modifier></type><name pos:line="37" pos:column="23">rs<pos:position pos:line="37" pos:column="25"/></name></decl>;<pos:position pos:line="37" pos:column="26"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">ap_log_rerror<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">APLOG_MARK<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">APLOG_DEBUG<pos:position pos:line="38" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="56">0<pos:position pos:line="38" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">r<pos:position pos:line="38" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="39" pos:column="31">"request_rec-&gt;dispatching %s -&gt; string"<pos:position pos:line="39" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="72">name<pos:position pos:line="39" pos:column="76"/></name></expr></argument>)<pos:position pos:line="39" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="78"/></expr_stmt>
                <expr_stmt><expr><name pos:line="40" pos:column="17">rs<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <call pos:line="40" pos:column="22">(<modifier pos:line="40" pos:column="23">*<pos:position pos:line="40" pos:column="24"/></modifier><name pos:line="40" pos:column="24">func<pos:position pos:line="40" pos:column="28"/></name>) <argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">r<pos:position pos:line="40" pos:column="32"/></name></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="41" pos:column="17">lua_pushstring<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">L<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">rs<pos:position pos:line="41" pos:column="37"/></name></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
                <return pos:line="42" pos:column="17">return <expr><literal type="number" pos:line="42" pos:column="24">1<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></return>
            }<pos:position pos:line="43" pos:column="14"/></block>
        <case pos:line="44" pos:column="9">case <expr><name pos:line="44" pos:column="14">APL_REQ_FUNTYPE_INT<pos:position pos:line="44" pos:column="33"/></name></expr>:<pos:position pos:line="44" pos:column="34"/></case><block pos:line="44" pos:column="34">{
                <decl_stmt><decl><type><name pos:line="45" pos:column="17">req_field_int_f<pos:position pos:line="45" pos:column="32"/></name></type> <name pos:line="45" pos:column="33">func<pos:position pos:line="45" pos:column="37"/></name> <init pos:line="45" pos:column="38">= <expr><operator pos:line="45" pos:column="40">(<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="41">req_field_int_f<pos:position pos:line="45" pos:column="56"/></name><operator pos:line="45" pos:column="56">)<pos:position pos:line="45" pos:column="57"/></operator><name><name pos:line="45" pos:column="57">rft<pos:position pos:line="45" pos:column="60"/></name><operator pos:line="45" pos:column="60">-&gt;<pos:position pos:line="45" pos:column="65"/></operator><name pos:line="45" pos:column="62">fun<pos:position pos:line="45" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="45" pos:column="66"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="46" pos:column="17">int<pos:position pos:line="46" pos:column="20"/></name></type> <name pos:line="46" pos:column="21">rs<pos:position pos:line="46" pos:column="23"/></name></decl>;<pos:position pos:line="46" pos:column="24"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="47" pos:column="17">ap_log_rerror<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">APLOG_MARK<pos:position pos:line="47" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="43">APLOG_DEBUG<pos:position pos:line="47" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="56">0<pos:position pos:line="47" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="59">r<pos:position pos:line="47" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="48" pos:column="31">"request_rec-&gt;dispatching %s -&gt; int"<pos:position pos:line="48" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="69">name<pos:position pos:line="48" pos:column="73"/></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">rs<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <call pos:line="49" pos:column="22">(<modifier pos:line="49" pos:column="23">*<pos:position pos:line="49" pos:column="24"/></modifier><name pos:line="49" pos:column="24">func<pos:position pos:line="49" pos:column="28"/></name>) <argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">r<pos:position pos:line="49" pos:column="32"/></name></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">lua_pushnumber<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">L<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="35">rs<pos:position pos:line="50" pos:column="37"/></name></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>
                <return pos:line="51" pos:column="17">return <expr><literal type="number" pos:line="51" pos:column="24">1<pos:position pos:line="51" pos:column="25"/></literal></expr>;<pos:position pos:line="51" pos:column="26"/></return>
            }<pos:position pos:line="52" pos:column="14"/></block>
        <case pos:line="53" pos:column="9">case <expr><name pos:line="53" pos:column="14">APL_REQ_FUNTYPE_BOOLEAN<pos:position pos:line="53" pos:column="37"/></name></expr>:<pos:position pos:line="53" pos:column="38"/></case><block pos:line="53" pos:column="38">{
                <decl_stmt><decl><type><name pos:line="54" pos:column="17">req_field_int_f<pos:position pos:line="54" pos:column="32"/></name></type> <name pos:line="54" pos:column="33">func<pos:position pos:line="54" pos:column="37"/></name> <init pos:line="54" pos:column="38">= <expr><operator pos:line="54" pos:column="40">(<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="41">req_field_int_f<pos:position pos:line="54" pos:column="56"/></name><operator pos:line="54" pos:column="56">)<pos:position pos:line="54" pos:column="57"/></operator><name><name pos:line="54" pos:column="57">rft<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">fun<pos:position pos:line="54" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="54" pos:column="66"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="55" pos:column="17">int<pos:position pos:line="55" pos:column="20"/></name></type> <name pos:line="55" pos:column="21">rs<pos:position pos:line="55" pos:column="23"/></name></decl>;<pos:position pos:line="55" pos:column="24"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="56" pos:column="17">ap_log_rerror<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">APLOG_MARK<pos:position pos:line="56" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="43">APLOG_DEBUG<pos:position pos:line="56" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="56">0<pos:position pos:line="56" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="59">r<pos:position pos:line="56" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="57" pos:column="31">"request_rec-&gt;dispatching %s -&gt; boolean"<pos:position pos:line="57" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="73">name<pos:position pos:line="57" pos:column="77"/></name></expr></argument>)<pos:position pos:line="57" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="79"/></expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">rs<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator> <call pos:line="58" pos:column="22">(<modifier pos:line="58" pos:column="23">*<pos:position pos:line="58" pos:column="24"/></modifier><name pos:line="58" pos:column="24">func<pos:position pos:line="58" pos:column="28"/></name>) <argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">r<pos:position pos:line="58" pos:column="32"/></name></expr></argument>)<pos:position pos:line="58" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">lua_pushboolean<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">L<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">rs<pos:position pos:line="59" pos:column="38"/></name></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt>
                <return pos:line="60" pos:column="17">return <expr><literal type="number" pos:line="60" pos:column="24">1<pos:position pos:line="60" pos:column="25"/></literal></expr>;<pos:position pos:line="60" pos:column="26"/></return>
            }<pos:position pos:line="61" pos:column="14"/></block>
        }<pos:position pos:line="62" pos:column="10"/></block></switch>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ap_log_rerror<pos:position pos:line="65" pos:column="18"/></name><argument_list pos:line="65" pos:column="18">(<argument><expr><name pos:line="65" pos:column="19">APLOG_MARK<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="31">APLOG_DEBUG<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="44">0<pos:position pos:line="65" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="47">r<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="50">"nothing for %s"<pos:position pos:line="65" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="68">name<pos:position pos:line="65" pos:column="72"/></name></expr></argument>)<pos:position pos:line="65" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="74"/></expr_stmt>
    <return pos:line="66" pos:column="5">return <expr><literal type="number" pos:line="66" pos:column="12">0<pos:position pos:line="66" pos:column="13"/></literal></expr>;<pos:position pos:line="66" pos:column="14"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

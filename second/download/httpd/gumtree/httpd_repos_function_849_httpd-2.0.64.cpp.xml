<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_849_httpd-2.0.64.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_rand_seed<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">server_rec<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">s<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">apr_pool_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">ssl_rsctx_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">nCtx<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">prefix<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLModConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">mc<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_array_header_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">apRandSeed<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ssl_randseed_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">pRandSeeds<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ssl_randseed_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">pRandSeed<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name></type> <name><name pos:line="7" pos:column="19">stackdata<pos:position pos:line="7" pos:column="28"/></name><index pos:line="7" pos:column="28">[<expr><literal type="number" pos:line="7" pos:column="29">256<pos:position pos:line="7" pos:column="32"/></literal></expr>]<pos:position pos:line="7" pos:column="33"/></index></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">nReq<pos:position pos:line="8" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="15">nDone<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_file_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">fp<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">i<pos:position pos:line="10" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="12">n<pos:position pos:line="10" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="15">l<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">mc<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">myModConfig<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">s<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">nReq<pos:position pos:line="13" pos:column="9"/></name>  <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">nDone<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">apRandSeed<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name><name pos:line="15" pos:column="18">mc<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">aRandSeed<pos:position pos:line="15" pos:column="31"/></name></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">pRandSeeds<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">(<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">ssl_randseed_t<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">*<pos:position pos:line="16" pos:column="35"/></operator><operator pos:line="16" pos:column="35">)<pos:position pos:line="16" pos:column="36"/></operator><name><name pos:line="16" pos:column="36">apRandSeed<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">elts<pos:position pos:line="16" pos:column="52"/></name></name></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">i<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></init> <condition><expr><name pos:line="17" pos:column="17">i<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&lt;<pos:position pos:line="17" pos:column="23"/></operator> <name><name pos:line="17" pos:column="21">apRandSeed<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">nelts<pos:position pos:line="17" pos:column="38"/></name></name></expr>;<pos:position pos:line="17" pos:column="39"/></condition> <incr><expr><name pos:line="17" pos:column="40">i<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">++<pos:position pos:line="17" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="44"/></control> <block pos:line="17" pos:column="45">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">pRandSeed<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <operator pos:line="18" pos:column="21">&amp;<pos:position pos:line="18" pos:column="26"/></operator><name><name pos:line="18" pos:column="22">pRandSeeds<pos:position pos:line="18" pos:column="32"/></name><index pos:line="18" pos:column="32">[<expr><name pos:line="18" pos:column="33">i<pos:position pos:line="18" pos:column="34"/></name></expr>]<pos:position pos:line="18" pos:column="35"/></index></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">pRandSeed<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">nCtx<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">==<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="32">nCtx<pos:position pos:line="19" pos:column="36"/></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">nReq<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">+=<pos:position pos:line="20" pos:column="20"/></operator> <name><name pos:line="20" pos:column="21">pRandSeed<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">nBytes<pos:position pos:line="20" pos:column="38"/></name></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name><name pos:line="21" pos:column="17">pRandSeed<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">nSrc<pos:position pos:line="21" pos:column="32"/></name></name> <operator pos:line="21" pos:column="33">==<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="36">SSL_RSSRC_FILE<pos:position pos:line="21" pos:column="50"/></name></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51"> <block pos:line="21" pos:column="52">{
                <comment type="block" pos:line="22" pos:column="17">/*
                 * seed in contents of an external file
                 */</comment>
                <if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">apr_file_open<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><operator pos:line="25" pos:column="35">&amp;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="36">fp<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="40">pRandSeed<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">-&gt;<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="51">cpPath<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>, 
                                  <argument><expr><name pos:line="26" pos:column="35">APR_READ<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">APR_OS_DEFAULT<pos:position pos:line="26" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">p<pos:position pos:line="26" pos:column="62"/></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call> <operator pos:line="26" pos:column="64">!=<pos:position pos:line="26" pos:column="66"/></operator> <name pos:line="26" pos:column="67">APR_SUCCESS<pos:position pos:line="26" pos:column="78"/></name></expr>)<pos:position pos:line="26" pos:column="79"/></condition><then pos:line="26" pos:column="79">
                    <block type="pseudo"><continue pos:line="27" pos:column="21">continue;<pos:position pos:line="27" pos:column="30"/></continue></block></then></if>
                <expr_stmt><expr><name pos:line="28" pos:column="17">nDone<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">+=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">ssl_rand_feedfp<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">p<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">fp<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="49">pRandSeed<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">nBytes<pos:position pos:line="28" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">apr_file_close<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">fp<pos:position pos:line="29" pos:column="34"/></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then>
            <elseif pos:line="31" pos:column="13">else <if pos:line="31" pos:column="18">if <condition pos:line="31" pos:column="21">(<expr><name><name pos:line="31" pos:column="22">pRandSeed<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">nSrc<pos:position pos:line="31" pos:column="37"/></name></name> <operator pos:line="31" pos:column="38">==<pos:position pos:line="31" pos:column="40"/></operator> <name pos:line="31" pos:column="41">SSL_RSSRC_EXEC<pos:position pos:line="31" pos:column="55"/></name></expr>)<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56"> <block pos:line="31" pos:column="57">{
                <decl_stmt><decl><type><specifier pos:line="32" pos:column="17">const<pos:position pos:line="32" pos:column="22"/></specifier> <name pos:line="32" pos:column="23">char<pos:position pos:line="32" pos:column="27"/></name> <modifier pos:line="32" pos:column="28">*<pos:position pos:line="32" pos:column="29"/></modifier></type><name pos:line="32" pos:column="29">cmd<pos:position pos:line="32" pos:column="32"/></name> <init pos:line="32" pos:column="33">= <expr><name><name pos:line="32" pos:column="35">pRandSeed<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">-&gt;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="46">cpPath<pos:position pos:line="32" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="32" pos:column="53"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="33" pos:column="17">const<pos:position pos:line="33" pos:column="22"/></specifier> <name pos:line="33" pos:column="23">char<pos:position pos:line="33" pos:column="27"/></name> <modifier pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></modifier><modifier pos:line="33" pos:column="29">*<pos:position pos:line="33" pos:column="30"/></modifier></type><name pos:line="33" pos:column="30">argv<pos:position pos:line="33" pos:column="34"/></name> <init pos:line="33" pos:column="35">= <expr><call><name pos:line="33" pos:column="37">apr_palloc<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><name pos:line="33" pos:column="48">p<pos:position pos:line="33" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="51">sizeof<argument_list pos:line="33" pos:column="57">(<argument><expr><name pos:line="33" pos:column="58">char<pos:position pos:line="33" pos:column="62"/></name> <operator pos:line="33" pos:column="63">*<pos:position pos:line="33" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></sizeof> <operator pos:line="33" pos:column="66">*<pos:position pos:line="33" pos:column="67"/></operator> <literal type="number" pos:line="33" pos:column="68">3<pos:position pos:line="33" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="71"/></decl_stmt>
                <comment type="block" pos:line="34" pos:column="17">/*
                 * seed in contents generated by an external program
                 */</comment>
                <expr_stmt><expr><name><name pos:line="37" pos:column="17">argv<pos:position pos:line="37" pos:column="21"/></name><index pos:line="37" pos:column="21">[<expr><literal type="number" pos:line="37" pos:column="22">0<pos:position pos:line="37" pos:column="23"/></literal></expr>]<pos:position pos:line="37" pos:column="24"/></index></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">cmd<pos:position pos:line="37" pos:column="30"/></name></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="38" pos:column="17">argv<pos:position pos:line="38" pos:column="21"/></name><index pos:line="38" pos:column="21">[<expr><literal type="number" pos:line="38" pos:column="22">1<pos:position pos:line="38" pos:column="23"/></literal></expr>]<pos:position pos:line="38" pos:column="24"/></index></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <call><name pos:line="38" pos:column="27">apr_itoa<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">p<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="39">pRandSeed<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">nBytes<pos:position pos:line="38" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="39" pos:column="17">argv<pos:position pos:line="39" pos:column="21"/></name><index pos:line="39" pos:column="21">[<expr><literal type="number" pos:line="39" pos:column="22">2<pos:position pos:line="39" pos:column="23"/></literal></expr>]<pos:position pos:line="39" pos:column="24"/></index></name> <operator pos:line="39" pos:column="25">=<pos:position pos:line="39" pos:column="26"/></operator> <name pos:line="39" pos:column="27">NULL<pos:position pos:line="39" pos:column="31"/></name></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>

                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">(<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">fp<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <call><name pos:line="41" pos:column="27">ssl_util_ppopen<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">s<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">p<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">cmd<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">argv<pos:position pos:line="41" pos:column="58"/></name></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call><operator pos:line="41" pos:column="59">)<pos:position pos:line="41" pos:column="60"/></operator> <operator pos:line="41" pos:column="61">==<pos:position pos:line="41" pos:column="63"/></operator> <name pos:line="41" pos:column="64">NULL<pos:position pos:line="41" pos:column="68"/></name></expr>)<pos:position pos:line="41" pos:column="69"/></condition><then pos:line="41" pos:column="69">
                    <block type="pseudo"><continue pos:line="42" pos:column="21">continue;<pos:position pos:line="42" pos:column="30"/></continue></block></then></if>
                <expr_stmt><expr><name pos:line="43" pos:column="17">nDone<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">+=<pos:position pos:line="43" pos:column="25"/></operator> <call><name pos:line="43" pos:column="26">ssl_rand_feedfp<pos:position pos:line="43" pos:column="41"/></name><argument_list pos:line="43" pos:column="41">(<argument><expr><name pos:line="43" pos:column="42">p<pos:position pos:line="43" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="45">fp<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="49">pRandSeed<pos:position pos:line="43" pos:column="58"/></name><operator pos:line="43" pos:column="58">-&gt;<pos:position pos:line="43" pos:column="63"/></operator><name pos:line="43" pos:column="60">nBytes<pos:position pos:line="43" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="44" pos:column="17">ssl_util_ppclose<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">s<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">p<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">fp<pos:position pos:line="44" pos:column="42"/></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if></elseif>
<cpp:ifdef pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">ifdef<pos:position pos:line="46" pos:column="7"/></cpp:directive> <name pos:line="46" pos:column="8">HAVE_SSL_RAND_EGD<pos:position pos:line="46" pos:column="25"/></name></cpp:ifdef>
            <elseif pos:line="47" pos:column="13">else <if pos:line="47" pos:column="18">if <condition pos:line="47" pos:column="21">(<expr><name><name pos:line="47" pos:column="22">pRandSeed<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">nSrc<pos:position pos:line="47" pos:column="37"/></name></name> <operator pos:line="47" pos:column="38">==<pos:position pos:line="47" pos:column="40"/></operator> <name pos:line="47" pos:column="41">SSL_RSSRC_EGD<pos:position pos:line="47" pos:column="54"/></name></expr>)<pos:position pos:line="47" pos:column="55"/></condition><then pos:line="47" pos:column="55"> <block pos:line="47" pos:column="56">{
                <comment type="block" pos:line="48" pos:column="17">/*
                 * seed in contents provided by the external
                 * Entropy Gathering Daemon (EGD)
                 */</comment>
                <if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><operator pos:line="52" pos:column="21">(<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">n<pos:position pos:line="52" pos:column="23"/></name> <operator pos:line="52" pos:column="24">=<pos:position pos:line="52" pos:column="25"/></operator> <call><name pos:line="52" pos:column="26">RAND_egd<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name><name pos:line="52" pos:column="35">pRandSeed<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">-&gt;<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="46">cpPath<pos:position pos:line="52" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call><operator pos:line="52" pos:column="53">)<pos:position pos:line="52" pos:column="54"/></operator> <operator pos:line="52" pos:column="55">==<pos:position pos:line="52" pos:column="57"/></operator> <operator pos:line="52" pos:column="58">-<pos:position pos:line="52" pos:column="59"/></operator><literal type="number" pos:line="52" pos:column="59">1<pos:position pos:line="52" pos:column="60"/></literal></expr>)<pos:position pos:line="52" pos:column="61"/></condition><then pos:line="52" pos:column="61">
                    <block type="pseudo"><continue pos:line="53" pos:column="21">continue;<pos:position pos:line="53" pos:column="30"/></continue></block></then></if>
                <expr_stmt><expr><name pos:line="54" pos:column="17">nDone<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">+=<pos:position pos:line="54" pos:column="25"/></operator> <name pos:line="54" pos:column="26">n<pos:position pos:line="54" pos:column="27"/></name></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="55" pos:column="14"/></block></then></if></elseif>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>
            <elseif pos:line="57" pos:column="13">else <if pos:line="57" pos:column="18">if <condition pos:line="57" pos:column="21">(<expr><name><name pos:line="57" pos:column="22">pRandSeed<pos:position pos:line="57" pos:column="31"/></name><operator pos:line="57" pos:column="31">-&gt;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="33">nSrc<pos:position pos:line="57" pos:column="37"/></name></name> <operator pos:line="57" pos:column="38">==<pos:position pos:line="57" pos:column="40"/></operator> <name pos:line="57" pos:column="41">SSL_RSSRC_BUILTIN<pos:position pos:line="57" pos:column="58"/></name></expr>)<pos:position pos:line="57" pos:column="59"/></condition><then pos:line="57" pos:column="59"> <block pos:line="57" pos:column="60">{
                <struct pos:line="58" pos:column="17">struct <block pos:line="58" pos:column="24">{<public type="default" pos:line="58" pos:column="25">
                    <decl_stmt><decl><type><name pos:line="59" pos:column="21">time_t<pos:position pos:line="59" pos:column="27"/></name></type> <name pos:line="59" pos:column="28">t<pos:position pos:line="59" pos:column="29"/></name></decl>;<pos:position pos:line="59" pos:column="30"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="60" pos:column="21">pid_t<pos:position pos:line="60" pos:column="26"/></name></type> <name pos:line="60" pos:column="27">pid<pos:position pos:line="60" pos:column="30"/></name></decl>;<pos:position pos:line="60" pos:column="31"/></decl_stmt>
                <pos:position pos:line="61" pos:column="17"/></public>}<pos:position pos:line="61" pos:column="18"/></block> <decl><name pos:line="61" pos:column="19">my_seed<pos:position pos:line="61" pos:column="26"/></name></decl>;<pos:position pos:line="61" pos:column="27"/></struct>

                <comment type="block" pos:line="63" pos:column="17">/*
                 * seed in the current time (usually just 4 bytes)
                 */</comment>
                <expr_stmt><expr><name><name pos:line="66" pos:column="17">my_seed<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">.<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="25">t<pos:position pos:line="66" pos:column="26"/></name></name> <operator pos:line="66" pos:column="27">=<pos:position pos:line="66" pos:column="28"/></operator> <call><name pos:line="66" pos:column="29">time<pos:position pos:line="66" pos:column="33"/></name><argument_list pos:line="66" pos:column="33">(<argument><expr><name pos:line="66" pos:column="34">NULL<pos:position pos:line="66" pos:column="38"/></name></expr></argument>)<pos:position pos:line="66" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="40"/></expr_stmt>

                <comment type="block" pos:line="68" pos:column="17">/*
                 * seed in the current process id (usually just 4 bytes)
                 */</comment>
                <expr_stmt><expr><name><name pos:line="71" pos:column="17">my_seed<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">.<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="25">pid<pos:position pos:line="71" pos:column="28"/></name></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <name><name pos:line="71" pos:column="31">mc<pos:position pos:line="71" pos:column="33"/></name><operator pos:line="71" pos:column="33">-&gt;<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="35">pid<pos:position pos:line="71" pos:column="38"/></name></name></expr>;<pos:position pos:line="71" pos:column="39"/></expr_stmt>

                <expr_stmt><expr><name pos:line="73" pos:column="17">l<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">=<pos:position pos:line="73" pos:column="20"/></operator> <sizeof pos:line="73" pos:column="21">sizeof<argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">my_seed<pos:position pos:line="73" pos:column="35"/></name></expr></argument>)<pos:position pos:line="73" pos:column="36"/></argument_list></sizeof></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">RAND_seed<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><operator pos:line="74" pos:column="27">(<pos:position pos:line="74" pos:column="28"/></operator><name pos:line="74" pos:column="28">unsigned<pos:position pos:line="74" pos:column="36"/></name> <name pos:line="74" pos:column="37">char<pos:position pos:line="74" pos:column="41"/></name> <operator pos:line="74" pos:column="42">*<pos:position pos:line="74" pos:column="43"/></operator><operator pos:line="74" pos:column="43">)<pos:position pos:line="74" pos:column="44"/></operator><operator pos:line="74" pos:column="44">&amp;<pos:position pos:line="74" pos:column="49"/></operator><name pos:line="74" pos:column="45">my_seed<pos:position pos:line="74" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="54">l<pos:position pos:line="74" pos:column="55"/></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">nDone<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">+=<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="26">l<pos:position pos:line="75" pos:column="27"/></name></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt>
                
                <comment type="block" pos:line="77" pos:column="17">/*
                 * seed in some current state of the run-time stack (128 bytes)
                 */</comment>
                <expr_stmt><expr><name pos:line="80" pos:column="17">n<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">=<pos:position pos:line="80" pos:column="20"/></operator> <call><name pos:line="80" pos:column="21">ssl_rand_choosenum<pos:position pos:line="80" pos:column="39"/></name><argument_list pos:line="80" pos:column="39">(<argument><expr><literal type="number" pos:line="80" pos:column="40">0<pos:position pos:line="80" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="80" pos:column="43">sizeof<argument_list pos:line="80" pos:column="49">(<argument><expr><name pos:line="80" pos:column="50">stackdata<pos:position pos:line="80" pos:column="59"/></name></expr></argument>)<pos:position pos:line="80" pos:column="60"/></argument_list></sizeof><operator pos:line="80" pos:column="60">-<pos:position pos:line="80" pos:column="61"/></operator><literal type="number" pos:line="80" pos:column="61">128<pos:position pos:line="80" pos:column="64"/></literal><operator pos:line="80" pos:column="64">-<pos:position pos:line="80" pos:column="65"/></operator><literal type="number" pos:line="80" pos:column="65">1<pos:position pos:line="80" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="81" pos:column="17">RAND_seed<pos:position pos:line="81" pos:column="26"/></name><argument_list pos:line="81" pos:column="26">(<argument><expr><name pos:line="81" pos:column="27">stackdata<pos:position pos:line="81" pos:column="36"/></name><operator pos:line="81" pos:column="36">+<pos:position pos:line="81" pos:column="37"/></operator><name pos:line="81" pos:column="37">n<pos:position pos:line="81" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="40">128<pos:position pos:line="81" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name pos:line="82" pos:column="17">nDone<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">+=<pos:position pos:line="82" pos:column="25"/></operator> <literal type="number" pos:line="82" pos:column="26">128<pos:position pos:line="82" pos:column="29"/></literal></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt>

            }<pos:position pos:line="84" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if>
    }<pos:position pos:line="86" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">ap_log_error<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><name pos:line="87" pos:column="18">APLOG_MARK<pos:position pos:line="87" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="30">APLOG_INFO<pos:position pos:line="87" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="42">0<pos:position pos:line="87" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="45">s<pos:position pos:line="87" pos:column="46"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="88" pos:column="18">"%sSeeding PRNG with %d bytes of entropy"<pos:position pos:line="88" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="61">prefix<pos:position pos:line="88" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="69">nDone<pos:position pos:line="88" pos:column="74"/></name></expr></argument>)<pos:position pos:line="88" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="76"/></expr_stmt>

    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><call><name pos:line="90" pos:column="9">RAND_status<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">()<pos:position pos:line="90" pos:column="22"/></argument_list></call> <operator pos:line="90" pos:column="23">==<pos:position pos:line="90" pos:column="25"/></operator> <literal type="number" pos:line="90" pos:column="26">0<pos:position pos:line="90" pos:column="27"/></literal></expr>)<pos:position pos:line="90" pos:column="28"/></condition><then pos:line="90" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="9">ap_log_error<pos:position pos:line="91" pos:column="21"/></name><argument_list pos:line="91" pos:column="21">(<argument><expr><name pos:line="91" pos:column="22">APLOG_MARK<pos:position pos:line="91" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="34">APLOG_WARNING<pos:position pos:line="91" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="49">0<pos:position pos:line="91" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="52">s<pos:position pos:line="91" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="92" pos:column="22">"%sPRNG still contains insufficient entropy!"<pos:position pos:line="92" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="69">prefix<pos:position pos:line="92" pos:column="75"/></name></expr></argument>)<pos:position pos:line="92" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="77"/></expr_stmt></block></then></if>

    <return pos:line="94" pos:column="5">return <expr><name pos:line="94" pos:column="12">nDone<pos:position pos:line="94" pos:column="17"/></name></expr>;<pos:position pos:line="94" pos:column="18"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

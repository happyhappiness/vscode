<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_435_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_array_header_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">parse_log_string<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">apr_pool_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">p<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">s<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="75">const<pos:position pos:line="1" pos:column="80"/></specifier> <name pos:line="1" pos:column="81">char<pos:position pos:line="1" pos:column="85"/></name> <modifier pos:line="1" pos:column="86">*<pos:position pos:line="1" pos:column="87"/></modifier><modifier pos:line="1" pos:column="87">*<pos:position pos:line="1" pos:column="88"/></modifier></type><name pos:line="1" pos:column="88">err<pos:position pos:line="1" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="92"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_array_header_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">a<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">apr_array_make<pos:position pos:line="3" pos:column="43"/></name><argument_list pos:line="3" pos:column="43">(<argument><expr><name pos:line="3" pos:column="44">p<pos:position pos:line="3" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="47">30<pos:position pos:line="3" pos:column="49"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="51">sizeof<argument_list pos:line="3" pos:column="57">(<argument><expr><name pos:line="3" pos:column="58">log_format_item<pos:position pos:line="3" pos:column="73"/></name></expr></argument>)<pos:position pos:line="3" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">res<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">s<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition> <block pos:line="6" pos:column="16">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">res<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <call><name pos:line="7" pos:column="20">parse_log_item<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">p<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="38">(<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">log_format_item<pos:position pos:line="7" pos:column="54"/></name> <operator pos:line="7" pos:column="55">*<pos:position pos:line="7" pos:column="56"/></operator><operator pos:line="7" pos:column="56">)<pos:position pos:line="7" pos:column="57"/></operator> <call><name pos:line="7" pos:column="58">apr_array_push<pos:position pos:line="7" pos:column="72"/></name><argument_list pos:line="7" pos:column="72">(<argument><expr><name pos:line="7" pos:column="73">a<pos:position pos:line="7" pos:column="74"/></name></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="7" pos:column="77">&amp;<pos:position pos:line="7" pos:column="82"/></operator><name pos:line="7" pos:column="78">s<pos:position pos:line="7" pos:column="79"/></name></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call><operator pos:line="7" pos:column="80">)<pos:position pos:line="7" pos:column="81"/></operator></expr>)<pos:position pos:line="7" pos:column="82"/></condition><then pos:line="7" pos:column="82"> <block pos:line="7" pos:column="83">{
            <expr_stmt><expr><operator pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">err<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">res<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
            <return pos:line="9" pos:column="13">return <expr><name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></return>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="13" pos:column="5">s<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <name pos:line="13" pos:column="9">APR_EOL_STR<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">parse_log_item<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">p<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="23">(<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">log_format_item<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">*<pos:position pos:line="14" pos:column="41"/></operator><operator pos:line="14" pos:column="41">)<pos:position pos:line="14" pos:column="42"/></operator> <call><name pos:line="14" pos:column="43">apr_array_push<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><name pos:line="14" pos:column="58">a<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="14" pos:column="62">&amp;<pos:position pos:line="14" pos:column="67"/></operator><name pos:line="14" pos:column="63">s<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">a<pos:position pos:line="15" pos:column="13"/></name></expr>;<pos:position pos:line="15" pos:column="14"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

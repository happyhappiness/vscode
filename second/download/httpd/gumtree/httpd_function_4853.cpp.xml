<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4853.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">get_line<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">apr_bucket_brigade<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">bbout<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">apr_bucket_brigade<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">bbin<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">conn_rec<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">c<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">apr_pool_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">p<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">line<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">apr_brigade_cleanup<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">bbout<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">rv<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">apr_brigade_split_line<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">bbout<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">bbin<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">APR_BLOCK_READ<pos:position pos:line="10" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="62">8192<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">rv<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12"> <block pos:line="11" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_log_cerror<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">APLOG_MARK<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">APLOG_ERR<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">rv<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">c<pos:position pos:line="12" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="13" pos:column="23">"failed reading line from OCSP server"<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="17" pos:column="5">rv<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">apr_brigade_pflatten<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">bbout<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="38">&amp;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="39">line<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="45">&amp;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="46">len<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">p<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12"> <block pos:line="18" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">ap_log_cerror<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">APLOG_MARK<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">APLOG_ERR<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">rv<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">c<pos:position pos:line="19" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="20" pos:column="23">"failed reading line from OCSP server"<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">len<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">&amp;&amp;<pos:position pos:line="24" pos:column="23"/></operator> <name><name pos:line="24" pos:column="16">line<pos:position pos:line="24" pos:column="20"/></name><index pos:line="24" pos:column="20">[<expr><name pos:line="24" pos:column="21">len<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-<pos:position pos:line="24" pos:column="25"/></operator><literal type="number" pos:line="24" pos:column="25">1<pos:position pos:line="24" pos:column="26"/></literal></expr>]<pos:position pos:line="24" pos:column="27"/></index></name> <operator pos:line="24" pos:column="28">!=<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">APR_ASCII_LF<pos:position pos:line="24" pos:column="43"/></name></expr>)<pos:position pos:line="24" pos:column="44"/></condition><then pos:line="24" pos:column="44"> <block pos:line="24" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_cerror<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">APLOG_MARK<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">APLOG_ERR<pos:position pos:line="25" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="46">rv<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">c<pos:position pos:line="25" pos:column="51"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="26" pos:column="23">"response header line too long from OCSP server"<pos:position pos:line="26" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="73"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="30" pos:column="5">line<pos:position pos:line="30" pos:column="9"/></name><index pos:line="30" pos:column="9">[<expr><name pos:line="30" pos:column="10">len<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal></expr>]<pos:position pos:line="30" pos:column="16"/></index></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <literal type="char" pos:line="30" pos:column="19">'\0'<pos:position pos:line="30" pos:column="23"/></literal></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">len<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">&gt;<pos:position pos:line="31" pos:column="17"/></operator> <literal type="number" pos:line="31" pos:column="15">1<pos:position pos:line="31" pos:column="16"/></literal> <operator pos:line="31" pos:column="17">&amp;&amp;<pos:position pos:line="31" pos:column="27"/></operator> <name><name pos:line="31" pos:column="20">line<pos:position pos:line="31" pos:column="24"/></name><index pos:line="31" pos:column="24">[<expr><name pos:line="31" pos:column="25">len<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-<pos:position pos:line="31" pos:column="29"/></operator><literal type="number" pos:line="31" pos:column="29">2<pos:position pos:line="31" pos:column="30"/></literal></expr>]<pos:position pos:line="31" pos:column="31"/></index></name> <operator pos:line="31" pos:column="32">==<pos:position pos:line="31" pos:column="34"/></operator> <name pos:line="31" pos:column="35">APR_ASCII_CR<pos:position pos:line="31" pos:column="47"/></name></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48"> <block pos:line="31" pos:column="49">{
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">line<pos:position pos:line="32" pos:column="13"/></name><index pos:line="32" pos:column="13">[<expr><name pos:line="32" pos:column="14">len<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-<pos:position pos:line="32" pos:column="18"/></operator><literal type="number" pos:line="32" pos:column="18">2<pos:position pos:line="32" pos:column="19"/></literal></expr>]<pos:position pos:line="32" pos:column="20"/></index></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <literal type="char" pos:line="32" pos:column="23">'\0'<pos:position pos:line="32" pos:column="27"/></literal></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">line<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4672.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_server_import_cert<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">server_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">s<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">modssl_ctx_t<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">mctx<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="3" pos:column="35">const<pos:position pos:line="3" pos:column="40"/></specifier> <name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">id<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="4" pos:column="35">int<pos:position pos:line="4" pos:column="38"/></name></type> <name pos:line="4" pos:column="39">idx<pos:position pos:line="4" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="43"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSLModConfigRec<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">mc<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><call><name pos:line="6" pos:column="27">myModConfig<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">s<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ssl_asn1_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">asn1<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">MODSSL_D2I_X509_CONST<pos:position pos:line="8" pos:column="26"/></name> <name pos:line="8" pos:column="27">unsigned<pos:position pos:line="8" pos:column="35"/></name> <name pos:line="8" pos:column="36">char<pos:position pos:line="8" pos:column="40"/></name> <modifier pos:line="8" pos:column="41">*<pos:position pos:line="8" pos:column="42"/></modifier></type><name pos:line="8" pos:column="42">ptr<pos:position pos:line="8" pos:column="45"/></name></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">type<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><call><name pos:line="9" pos:column="24">ssl_asn1_keystr<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">idx<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">X509<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">cert<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">asn1<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">ssl_asn1_table_get<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name><name pos:line="12" pos:column="37">mc<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">tPublicCert<pos:position pos:line="12" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="54">id<pos:position pos:line="12" pos:column="56"/></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call><operator pos:line="12" pos:column="57">)<pos:position pos:line="12" pos:column="58"/></operator></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59"> <block pos:line="12" pos:column="60">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">FALSE<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ap_log_error<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">APLOG_MARK<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="30">APLOG_DEBUG<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="43">0<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">s<pos:position pos:line="16" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="17" pos:column="18">"Configuring %s server certificate"<pos:position pos:line="17" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">type<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">ptr<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <name><name pos:line="19" pos:column="11">asn1<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">cpData<pos:position pos:line="19" pos:column="23"/></name></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">cert<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">d2i_X509<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">NULL<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="34">ptr<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="39">asn1<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">nData<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call><operator pos:line="20" pos:column="51">)<pos:position pos:line="20" pos:column="52"/></operator></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53"> <block pos:line="20" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_error<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">APLOG_MARK<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">APLOG_ERR<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="45">0<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">s<pos:position pos:line="21" pos:column="49"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="22" pos:column="17">"Unable to import %s server certificate"<pos:position pos:line="22" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="59">type<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ssl_log_ssl_error<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">SSLLOG_MARK<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">APLOG_ERR<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">s<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ssl_die<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">()<pos:position pos:line="24" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">SSL_CTX_use_certificate<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name><name pos:line="27" pos:column="33">mctx<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">ssl_ctx<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">cert<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call> <operator pos:line="27" pos:column="54">&lt;=<pos:position pos:line="27" pos:column="59"/></operator> <literal type="number" pos:line="27" pos:column="57">0<pos:position pos:line="27" pos:column="58"/></literal></expr>)<pos:position pos:line="27" pos:column="59"/></condition><then pos:line="27" pos:column="59"> <block pos:line="27" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ap_log_error<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">APLOG_MARK<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">APLOG_ERR<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="45">0<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">s<pos:position pos:line="28" pos:column="49"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="29" pos:column="17">"Unable to configure %s server certificate"<pos:position pos:line="29" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="62">type<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">ssl_log_ssl_error<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">SSLLOG_MARK<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">APLOG_ERR<pos:position pos:line="30" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="51">s<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ssl_die<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">()<pos:position pos:line="31" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
  
<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">HAVE_OCSP_STAPLING<pos:position pos:line="34" pos:column="26"/></name></cpp:ifdef>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><name><name pos:line="35" pos:column="10">mctx<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">pkp<pos:position pos:line="35" pos:column="19"/></name></name> <operator pos:line="35" pos:column="20">==<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">FALSE<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator> <operator pos:line="35" pos:column="30">&amp;&amp;<pos:position pos:line="35" pos:column="40"/></operator> <operator pos:line="35" pos:column="33">(<pos:position pos:line="35" pos:column="34"/></operator><name><name pos:line="35" pos:column="34">mctx<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">stapling_enabled<pos:position pos:line="35" pos:column="56"/></name></name> <operator pos:line="35" pos:column="57">==<pos:position pos:line="35" pos:column="59"/></operator> <name pos:line="35" pos:column="60">TRUE<pos:position pos:line="35" pos:column="64"/></name><operator pos:line="35" pos:column="64">)<pos:position pos:line="35" pos:column="65"/></operator></expr>)<pos:position pos:line="35" pos:column="66"/></condition><then pos:line="35" pos:column="66"> <block pos:line="35" pos:column="67">{
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">ssl_stapling_init_cert<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">s<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">mctx<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">cert<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52"> <block pos:line="36" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">ap_log_error<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">APLOG_MARK<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">APLOG_ERR<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="49">0<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="52">s<pos:position pos:line="37" pos:column="53"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="38" pos:column="26">"Unable to configure server certificate for stapling"<pos:position pos:line="38" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="81"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">mctx<pos:position pos:line="43" pos:column="9"/></name><operator pos:line="43" pos:column="9">-&gt;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="11">pks<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">certs<pos:position pos:line="43" pos:column="21"/></name><index pos:line="43" pos:column="21">[<expr><name pos:line="43" pos:column="22">idx<pos:position pos:line="43" pos:column="25"/></name></expr>]<pos:position pos:line="43" pos:column="26"/></index></name> <operator pos:line="43" pos:column="27">=<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="29">cert<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>

    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">TRUE<pos:position pos:line="45" pos:column="16"/></name></expr>;<pos:position pos:line="45" pos:column="17"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

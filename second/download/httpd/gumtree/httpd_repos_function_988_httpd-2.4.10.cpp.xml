<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_988_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">register_named_block_function_hook<pos:position pos:line="1" pos:column="54"/></name><parameter_list pos:line="1" pos:column="54">(<parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">name<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                                      <parameter><decl><type><name pos:line="2" pos:column="55">cmd_parms<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">cmd<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                                                      <parameter><decl><type><name pos:line="3" pos:column="55">void<pos:position pos:line="3" pos:column="59"/></name> <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type><name pos:line="3" pos:column="61">mconfig<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>,
                                                      <parameter><decl><type><specifier pos:line="4" pos:column="55">const<pos:position pos:line="4" pos:column="60"/></specifier> <name pos:line="4" pos:column="61">char<pos:position pos:line="4" pos:column="65"/></name> <modifier pos:line="4" pos:column="66">*<pos:position pos:line="4" pos:column="67"/></modifier></type><name pos:line="4" pos:column="67">line<pos:position pos:line="4" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="72"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">function<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">NULL<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_lua_mapped_handler_spec<pos:position pos:line="7" pos:column="31"/></name> <modifier pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></modifier></type><name pos:line="7" pos:column="33">spec<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">when<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><name pos:line="8" pos:column="16">APR_HOOK_MIDDLE<pos:position pos:line="8" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">endp<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><call><name pos:line="9" pos:column="24">ap_strrchr_c<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">line<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="43">'&gt;'<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">endp<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22"> <block pos:line="11" pos:column="23">{
        <return pos:line="12" pos:column="9">return <expr><call><name pos:line="12" pos:column="16">apr_pstrcat<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name><name pos:line="12" pos:column="28">cmd<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">pool<pos:position pos:line="12" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="39">cmd<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">cmd<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">name<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="13" pos:column="28">"&gt; directive missing closing '&gt;'"<pos:position pos:line="13" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="63">NULL<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">line<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">apr_pstrndup<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name><name pos:line="16" pos:column="25">cmd<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">temp_pool<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="41">line<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">endp<pos:position pos:line="16" pos:column="51"/></name> <operator pos:line="16" pos:column="52">-<pos:position pos:line="16" pos:column="53"/></operator> <name pos:line="16" pos:column="54">line<pos:position pos:line="16" pos:column="58"/></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">line<pos:position pos:line="18" pos:column="13"/></name><index pos:line="18" pos:column="13">[<expr><literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>]<pos:position pos:line="18" pos:column="16"/></index></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17"> <block pos:line="18" pos:column="18">{ 
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">word<pos:position pos:line="19" pos:column="25"/></name></decl>;<pos:position pos:line="19" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">word<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">ap_getword_conf<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name><name pos:line="20" pos:column="32">cmd<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">temp_pool<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="48">&amp;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="49">line<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">word<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19"> <block pos:line="21" pos:column="20">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">function<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <call><name pos:line="22" pos:column="24">apr_pstrdup<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name><name pos:line="22" pos:column="36">cmd<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">pool<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">word<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="24" pos:column="9">word<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">ap_getword_conf<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name><name pos:line="24" pos:column="32">cmd<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">temp_pool<pos:position pos:line="24" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="48">&amp;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="49">line<pos:position pos:line="24" pos:column="53"/></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">*<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">word<pos:position pos:line="25" pos:column="18"/></name></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><call><name pos:line="26" pos:column="18">strcasecmp<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><literal type="string" pos:line="26" pos:column="29">"early"<pos:position pos:line="26" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">word<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44"> <block pos:line="26" pos:column="45">{ 
                <expr_stmt><expr><name pos:line="27" pos:column="17">when<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">AP_LUA_HOOK_FIRST<pos:position pos:line="27" pos:column="41"/></name></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then>
            <elseif pos:line="29" pos:column="13">else <if pos:line="29" pos:column="18">if <condition pos:line="29" pos:column="21">(<expr><operator pos:line="29" pos:column="22">!<pos:position pos:line="29" pos:column="23"/></operator><call><name pos:line="29" pos:column="23">strcasecmp<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><literal type="string" pos:line="29" pos:column="34">"late"<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">word<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="48"/></condition><then pos:line="29" pos:column="48"> <block pos:line="29" pos:column="49">{
                <expr_stmt><expr><name pos:line="30" pos:column="17">when<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">AP_LUA_HOOK_LAST<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if></elseif>
            <else pos:line="32" pos:column="13">else <block pos:line="32" pos:column="18">{ 
                <return pos:line="33" pos:column="17">return <expr><call><name pos:line="33" pos:column="24">apr_pstrcat<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name><name pos:line="33" pos:column="36">cmd<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">pool<pos:position pos:line="33" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="47">cmd<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">-&gt;<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="52">cmd<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">name<pos:position pos:line="33" pos:column="61"/></name></name></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="34" pos:column="36">"&gt; 2nd argument must be 'early' or 'late'"<pos:position pos:line="34" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="80">NULL<pos:position pos:line="34" pos:column="84"/></name></expr></argument>)<pos:position pos:line="34" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="86"/></return>
            }<pos:position pos:line="35" pos:column="14"/></block></else></if>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="39" pos:column="5">spec<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <call><name pos:line="39" pos:column="12">apr_pcalloc<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name><name pos:line="39" pos:column="24">cmd<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">pool<pos:position pos:line="39" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="35">sizeof<argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">ap_lua_mapped_handler_spec<pos:position pos:line="39" pos:column="68"/></name></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>

    <block pos:line="41" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">cr_ctx<pos:position pos:line="42" pos:column="15"/></name></type> <name pos:line="42" pos:column="16">ctx<pos:position pos:line="42" pos:column="19"/></name></decl>;<pos:position pos:line="42" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="43" pos:column="9">lua_State<pos:position pos:line="43" pos:column="18"/></name> <modifier pos:line="43" pos:column="19">*<pos:position pos:line="43" pos:column="20"/></modifier></type><name pos:line="43" pos:column="20">lvm<pos:position pos:line="43" pos:column="23"/></name></decl>;<pos:position pos:line="43" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="44" pos:column="9">char<pos:position pos:line="44" pos:column="13"/></name> <modifier pos:line="44" pos:column="14">*<pos:position pos:line="44" pos:column="15"/></modifier></type><name pos:line="44" pos:column="15">tmp<pos:position pos:line="44" pos:column="18"/></name></decl>;<pos:position pos:line="44" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">int<pos:position pos:line="45" pos:column="12"/></name></type> <name pos:line="45" pos:column="13">rv<pos:position pos:line="45" pos:column="15"/></name></decl>;<pos:position pos:line="45" pos:column="16"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="46" pos:column="9">ap_directive_t<pos:position pos:line="46" pos:column="23"/></name> <modifier pos:line="46" pos:column="24">*<pos:position pos:line="46" pos:column="25"/></modifier><modifier pos:line="46" pos:column="25">*<pos:position pos:line="46" pos:column="26"/></modifier></type><name pos:line="46" pos:column="26">current<pos:position pos:line="46" pos:column="33"/></name></decl>;<pos:position pos:line="46" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">hack_section_baton<pos:position pos:line="47" pos:column="27"/></name> <modifier pos:line="47" pos:column="28">*<pos:position pos:line="47" pos:column="29"/></modifier></type><name pos:line="47" pos:column="29">baton<pos:position pos:line="47" pos:column="34"/></name></decl>;<pos:position pos:line="47" pos:column="35"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="49" pos:column="9">spec<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">-&gt;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="15">file_name<pos:position pos:line="49" pos:column="24"/></name></name> <operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator> <call><name pos:line="49" pos:column="27">apr_psprintf<pos:position pos:line="49" pos:column="39"/></name><argument_list pos:line="49" pos:column="39">(<argument><expr><name><name pos:line="49" pos:column="40">cmd<pos:position pos:line="49" pos:column="43"/></name><operator pos:line="49" pos:column="43">-&gt;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="45">pool<pos:position pos:line="49" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="51">"%s:%u"<pos:position pos:line="49" pos:column="58"/></literal></expr></argument>,
                                       <argument><expr><name><name pos:line="50" pos:column="40">cmd<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">-&gt;<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="45">config_file<pos:position pos:line="50" pos:column="56"/></name><operator pos:line="50" pos:column="56">-&gt;<pos:position pos:line="50" pos:column="61"/></operator><name pos:line="50" pos:column="58">name<pos:position pos:line="50" pos:column="62"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="51" pos:column="40">cmd<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">config_file<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">line_number<pos:position pos:line="51" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="71"/></expr_stmt>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">function<pos:position pos:line="52" pos:column="21"/></name></expr>)<pos:position pos:line="52" pos:column="22"/></condition><then pos:line="52" pos:column="22"> <block pos:line="52" pos:column="23">{
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">spec<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">-&gt;<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="19">function_name<pos:position pos:line="53" pos:column="32"/></name></name> <operator pos:line="53" pos:column="33">=<pos:position pos:line="53" pos:column="34"/></operator> <operator pos:line="53" pos:column="35">(<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="36">char<pos:position pos:line="53" pos:column="40"/></name> <operator pos:line="53" pos:column="41">*<pos:position pos:line="53" pos:column="42"/></operator><operator pos:line="53" pos:column="42">)<pos:position pos:line="53" pos:column="43"/></operator> <name pos:line="53" pos:column="44">function<pos:position pos:line="53" pos:column="52"/></name></expr>;<pos:position pos:line="53" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then>
        <else pos:line="55" pos:column="9">else <block pos:line="55" pos:column="14">{
            <expr_stmt><expr><name pos:line="56" pos:column="13">function<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <name pos:line="56" pos:column="24">NULL<pos:position pos:line="56" pos:column="28"/></name></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="59" pos:column="9">ctx<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">.<pos:position pos:line="59" pos:column="13"/></operator><name pos:line="59" pos:column="13">cmd<pos:position pos:line="59" pos:column="16"/></name></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">cmd<pos:position pos:line="59" pos:column="22"/></name></expr>;<pos:position pos:line="59" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="60" pos:column="9">tmp<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <call><name pos:line="60" pos:column="15">apr_pstrdup<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name><name pos:line="60" pos:column="27">cmd<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">pool<pos:position pos:line="60" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="38">cmd<pos:position pos:line="60" pos:column="41"/></name><operator pos:line="60" pos:column="41">-&gt;<pos:position pos:line="60" pos:column="46"/></operator><name pos:line="60" pos:column="43">err_directive<pos:position pos:line="60" pos:column="56"/></name><operator pos:line="60" pos:column="56">-&gt;<pos:position pos:line="60" pos:column="61"/></operator><name pos:line="60" pos:column="58">directive<pos:position pos:line="60" pos:column="67"/></name></name> <operator pos:line="60" pos:column="68">+<pos:position pos:line="60" pos:column="69"/></operator> <literal type="number" pos:line="60" pos:column="70">1<pos:position pos:line="60" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">ap_str_tolower<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">tmp<pos:position pos:line="61" pos:column="27"/></name></expr></argument>)<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">ctx<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">.<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="13">endstr<pos:position pos:line="62" pos:column="19"/></name></name> <operator pos:line="62" pos:column="20">=<pos:position pos:line="62" pos:column="21"/></operator> <name pos:line="62" pos:column="22">tmp<pos:position pos:line="62" pos:column="25"/></name></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">ctx<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">.<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="13">cfp<pos:position pos:line="63" pos:column="16"/></name></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name><name pos:line="63" pos:column="19">cmd<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">config_file<pos:position pos:line="63" pos:column="35"/></name></name></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">ctx<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">.<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="13">startline<pos:position pos:line="64" pos:column="22"/></name></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <name><name pos:line="64" pos:column="25">cmd<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">config_file<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">-&gt;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="43">line_number<pos:position pos:line="64" pos:column="54"/></name></name></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>

        <comment type="block" pos:line="66" pos:column="9">/* This lua State is used only to compile the input strings -&gt; bytecode, so we don't need anything extra. */</comment>
        <expr_stmt><expr><name pos:line="67" pos:column="9">lvm<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <call><name pos:line="67" pos:column="15">luaL_newstate<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">()<pos:position pos:line="67" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="69" pos:column="9">lua_settop<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><name pos:line="69" pos:column="20">lvm<pos:position pos:line="69" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="25">0<pos:position pos:line="69" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name pos:line="71" pos:column="9">rv<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <call><name pos:line="71" pos:column="14">lua_load<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">lvm<pos:position pos:line="71" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="28">direct_chunkreader<pos:position pos:line="71" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="48">&amp;<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="49">ctx<pos:position pos:line="71" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="54">spec<pos:position pos:line="71" pos:column="58"/></name><operator pos:line="71" pos:column="58">-&gt;<pos:position pos:line="71" pos:column="63"/></operator><name pos:line="71" pos:column="60">file_name<pos:position pos:line="71" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="71"/></expr_stmt>

        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">rv<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">!=<pos:position pos:line="73" pos:column="18"/></operator> <literal type="number" pos:line="73" pos:column="19">0<pos:position pos:line="73" pos:column="20"/></literal></expr>)<pos:position pos:line="73" pos:column="21"/></condition><then pos:line="73" pos:column="21"> <block pos:line="73" pos:column="22">{
            <decl_stmt><decl><type><specifier pos:line="74" pos:column="13">const<pos:position pos:line="74" pos:column="18"/></specifier> <name pos:line="74" pos:column="19">char<pos:position pos:line="74" pos:column="23"/></name> <modifier pos:line="74" pos:column="24">*<pos:position pos:line="74" pos:column="25"/></modifier></type><name pos:line="74" pos:column="25">errstr<pos:position pos:line="74" pos:column="31"/></name> <init pos:line="74" pos:column="32">= <expr><call><name pos:line="74" pos:column="34">apr_pstrcat<pos:position pos:line="74" pos:column="45"/></name><argument_list pos:line="74" pos:column="45">(<argument><expr><name><name pos:line="74" pos:column="46">cmd<pos:position pos:line="74" pos:column="49"/></name><operator pos:line="74" pos:column="49">-&gt;<pos:position pos:line="74" pos:column="54"/></operator><name pos:line="74" pos:column="51">pool<pos:position pos:line="74" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="57">"Lua Error:"<pos:position pos:line="74" pos:column="69"/></literal></expr></argument>,
                                             <argument><expr><call><name pos:line="75" pos:column="46">lua_tostring<pos:position pos:line="75" pos:column="58"/></name><argument_list pos:line="75" pos:column="58">(<argument><expr><name pos:line="75" pos:column="59">lvm<pos:position pos:line="75" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="64">-<pos:position pos:line="75" pos:column="65"/></operator><literal type="number" pos:line="75" pos:column="65">1<pos:position pos:line="75" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="75" pos:column="69">NULL<pos:position pos:line="75" pos:column="73"/></name></expr></argument>)<pos:position pos:line="75" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="75"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">lua_close<pos:position pos:line="76" pos:column="22"/></name><argument_list pos:line="76" pos:column="22">(<argument><expr><name pos:line="76" pos:column="23">lvm<pos:position pos:line="76" pos:column="26"/></name></expr></argument>)<pos:position pos:line="76" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt>
            <return pos:line="77" pos:column="13">return <expr><name pos:line="77" pos:column="20">errstr<pos:position pos:line="77" pos:column="26"/></name></expr>;<pos:position pos:line="77" pos:column="27"/></return>
        }<pos:position pos:line="78" pos:column="10"/></block></then>
        <else pos:line="79" pos:column="9">else <block pos:line="79" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="80" pos:column="13">luaL_Buffer<pos:position pos:line="80" pos:column="24"/></name></type> <name pos:line="80" pos:column="25">b<pos:position pos:line="80" pos:column="26"/></name></decl>;<pos:position pos:line="80" pos:column="27"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">luaL_buffinit<pos:position pos:line="81" pos:column="26"/></name><argument_list pos:line="81" pos:column="26">(<argument><expr><name pos:line="81" pos:column="27">lvm<pos:position pos:line="81" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="32">&amp;<pos:position pos:line="81" pos:column="37"/></operator><name pos:line="81" pos:column="33">b<pos:position pos:line="81" pos:column="34"/></name></expr></argument>)<pos:position pos:line="81" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">lua_dump<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">lvm<pos:position pos:line="82" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="27">ldump_writer<pos:position pos:line="82" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="41">&amp;<pos:position pos:line="82" pos:column="46"/></operator><name pos:line="82" pos:column="42">b<pos:position pos:line="82" pos:column="43"/></name></expr></argument>)<pos:position pos:line="82" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">luaL_pushresult<pos:position pos:line="83" pos:column="28"/></name><argument_list pos:line="83" pos:column="28">(<argument><expr><operator pos:line="83" pos:column="29">&amp;<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="30">b<pos:position pos:line="83" pos:column="31"/></name></expr></argument>)<pos:position pos:line="83" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="84" pos:column="13">spec<pos:position pos:line="84" pos:column="17"/></name><operator pos:line="84" pos:column="17">-&gt;<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="19">bytecode_len<pos:position pos:line="84" pos:column="31"/></name></name> <operator pos:line="84" pos:column="32">=<pos:position pos:line="84" pos:column="33"/></operator> <call><name pos:line="84" pos:column="34">lua_strlen<pos:position pos:line="84" pos:column="44"/></name><argument_list pos:line="84" pos:column="44">(<argument><expr><name pos:line="84" pos:column="45">lvm<pos:position pos:line="84" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="50">-<pos:position pos:line="84" pos:column="51"/></operator><literal type="number" pos:line="84" pos:column="51">1<pos:position pos:line="84" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">spec<pos:position pos:line="85" pos:column="17"/></name><operator pos:line="85" pos:column="17">-&gt;<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="19">bytecode<pos:position pos:line="85" pos:column="27"/></name></name> <operator pos:line="85" pos:column="28">=<pos:position pos:line="85" pos:column="29"/></operator> <call><name pos:line="85" pos:column="30">apr_pstrmemdup<pos:position pos:line="85" pos:column="44"/></name><argument_list pos:line="85" pos:column="44">(<argument><expr><name><name pos:line="85" pos:column="45">cmd<pos:position pos:line="85" pos:column="48"/></name><operator pos:line="85" pos:column="48">-&gt;<pos:position pos:line="85" pos:column="53"/></operator><name pos:line="85" pos:column="50">pool<pos:position pos:line="85" pos:column="54"/></name></name></expr></argument>, <argument><expr><call><name pos:line="85" pos:column="56">lua_tostring<pos:position pos:line="85" pos:column="68"/></name><argument_list pos:line="85" pos:column="68">(<argument><expr><name pos:line="85" pos:column="69">lvm<pos:position pos:line="85" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="74">-<pos:position pos:line="85" pos:column="75"/></operator><literal type="number" pos:line="85" pos:column="75">1<pos:position pos:line="85" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="77"/></argument_list></call></expr></argument>,
                                            <argument><expr><name><name pos:line="86" pos:column="45">spec<pos:position pos:line="86" pos:column="49"/></name><operator pos:line="86" pos:column="49">-&gt;<pos:position pos:line="86" pos:column="54"/></operator><name pos:line="86" pos:column="51">bytecode_len<pos:position pos:line="86" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">lua_close<pos:position pos:line="87" pos:column="22"/></name><argument_list pos:line="87" pos:column="22">(<argument><expr><name pos:line="87" pos:column="23">lvm<pos:position pos:line="87" pos:column="26"/></name></expr></argument>)<pos:position pos:line="87" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="90" pos:column="9">current<pos:position pos:line="90" pos:column="16"/></name> <operator pos:line="90" pos:column="17">=<pos:position pos:line="90" pos:column="18"/></operator> <name pos:line="90" pos:column="19">mconfig<pos:position pos:line="90" pos:column="26"/></name></expr>;<pos:position pos:line="90" pos:column="27"/></expr_stmt>

        <comment type="block" pos:line="92" pos:column="9">/* Here, we have to replace our current config node for the next pass */</comment>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">!<pos:position pos:line="93" pos:column="14"/></operator><operator pos:line="93" pos:column="14">*<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="15">current<pos:position pos:line="93" pos:column="22"/></name></expr>)<pos:position pos:line="93" pos:column="23"/></condition><then pos:line="93" pos:column="23"> <block pos:line="93" pos:column="24">{
            <expr_stmt><expr><operator pos:line="94" pos:column="13">*<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="14">current<pos:position pos:line="94" pos:column="21"/></name> <operator pos:line="94" pos:column="22">=<pos:position pos:line="94" pos:column="23"/></operator> <call><name pos:line="94" pos:column="24">apr_pcalloc<pos:position pos:line="94" pos:column="35"/></name><argument_list pos:line="94" pos:column="35">(<argument><expr><name><name pos:line="94" pos:column="36">cmd<pos:position pos:line="94" pos:column="39"/></name><operator pos:line="94" pos:column="39">-&gt;<pos:position pos:line="94" pos:column="44"/></operator><name pos:line="94" pos:column="41">pool<pos:position pos:line="94" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="94" pos:column="47">sizeof<argument_list pos:line="94" pos:column="53">(<argument><expr><operator pos:line="94" pos:column="54">*<pos:position pos:line="94" pos:column="55"/></operator><operator pos:line="94" pos:column="55">*<pos:position pos:line="94" pos:column="56"/></operator><name pos:line="94" pos:column="56">current<pos:position pos:line="94" pos:column="63"/></name></expr></argument>)<pos:position pos:line="94" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="95" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="97" pos:column="9">baton<pos:position pos:line="97" pos:column="14"/></name> <operator pos:line="97" pos:column="15">=<pos:position pos:line="97" pos:column="16"/></operator> <call><name pos:line="97" pos:column="17">apr_pcalloc<pos:position pos:line="97" pos:column="28"/></name><argument_list pos:line="97" pos:column="28">(<argument><expr><name><name pos:line="97" pos:column="29">cmd<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">-&gt;<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="34">pool<pos:position pos:line="97" pos:column="38"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="40">sizeof<argument_list pos:line="97" pos:column="46">(<argument><expr><name pos:line="97" pos:column="47">hack_section_baton<pos:position pos:line="97" pos:column="65"/></name></expr></argument>)<pos:position pos:line="97" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="98" pos:column="9">baton<pos:position pos:line="98" pos:column="14"/></name><operator pos:line="98" pos:column="14">-&gt;<pos:position pos:line="98" pos:column="19"/></operator><name pos:line="98" pos:column="16">name<pos:position pos:line="98" pos:column="20"/></name></name> <operator pos:line="98" pos:column="21">=<pos:position pos:line="98" pos:column="22"/></operator> <name pos:line="98" pos:column="23">name<pos:position pos:line="98" pos:column="27"/></name></expr>;<pos:position pos:line="98" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">baton<pos:position pos:line="99" pos:column="14"/></name><operator pos:line="99" pos:column="14">-&gt;<pos:position pos:line="99" pos:column="19"/></operator><name pos:line="99" pos:column="16">spec<pos:position pos:line="99" pos:column="20"/></name></name> <operator pos:line="99" pos:column="21">=<pos:position pos:line="99" pos:column="22"/></operator> <name pos:line="99" pos:column="23">spec<pos:position pos:line="99" pos:column="27"/></name></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="100" pos:column="9">baton<pos:position pos:line="100" pos:column="14"/></name><operator pos:line="100" pos:column="14">-&gt;<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="16">apr_hook_when<pos:position pos:line="100" pos:column="29"/></name></name> <operator pos:line="100" pos:column="30">=<pos:position pos:line="100" pos:column="31"/></operator> <name pos:line="100" pos:column="32">when<pos:position pos:line="100" pos:column="36"/></name></expr>;<pos:position pos:line="100" pos:column="37"/></expr_stmt>

        <expr_stmt><expr><name><operator pos:line="102" pos:column="9">(<pos:position pos:line="102" pos:column="10"/></operator><operator pos:line="102" pos:column="10">*<pos:position pos:line="102" pos:column="11"/></operator><name pos:line="102" pos:column="11">current<pos:position pos:line="102" pos:column="18"/></name><operator pos:line="102" pos:column="18">)<pos:position pos:line="102" pos:column="19"/></operator><operator pos:line="102" pos:column="19">-&gt;<pos:position pos:line="102" pos:column="24"/></operator><name pos:line="102" pos:column="21">filename<pos:position pos:line="102" pos:column="29"/></name></name> <operator pos:line="102" pos:column="30">=<pos:position pos:line="102" pos:column="31"/></operator> <name><name pos:line="102" pos:column="32">cmd<pos:position pos:line="102" pos:column="35"/></name><operator pos:line="102" pos:column="35">-&gt;<pos:position pos:line="102" pos:column="40"/></operator><name pos:line="102" pos:column="37">config_file<pos:position pos:line="102" pos:column="48"/></name><operator pos:line="102" pos:column="48">-&gt;<pos:position pos:line="102" pos:column="53"/></operator><name pos:line="102" pos:column="50">name<pos:position pos:line="102" pos:column="54"/></name></name></expr>;<pos:position pos:line="102" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="103" pos:column="9">(<pos:position pos:line="103" pos:column="10"/></operator><operator pos:line="103" pos:column="10">*<pos:position pos:line="103" pos:column="11"/></operator><name pos:line="103" pos:column="11">current<pos:position pos:line="103" pos:column="18"/></name><operator pos:line="103" pos:column="18">)<pos:position pos:line="103" pos:column="19"/></operator><operator pos:line="103" pos:column="19">-&gt;<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="21">line_num<pos:position pos:line="103" pos:column="29"/></name></name> <operator pos:line="103" pos:column="30">=<pos:position pos:line="103" pos:column="31"/></operator> <name><name pos:line="103" pos:column="32">cmd<pos:position pos:line="103" pos:column="35"/></name><operator pos:line="103" pos:column="35">-&gt;<pos:position pos:line="103" pos:column="40"/></operator><name pos:line="103" pos:column="37">config_file<pos:position pos:line="103" pos:column="48"/></name><operator pos:line="103" pos:column="48">-&gt;<pos:position pos:line="103" pos:column="53"/></operator><name pos:line="103" pos:column="50">line_number<pos:position pos:line="103" pos:column="61"/></name></name></expr>;<pos:position pos:line="103" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="104" pos:column="9">(<pos:position pos:line="104" pos:column="10"/></operator><operator pos:line="104" pos:column="10">*<pos:position pos:line="104" pos:column="11"/></operator><name pos:line="104" pos:column="11">current<pos:position pos:line="104" pos:column="18"/></name><operator pos:line="104" pos:column="18">)<pos:position pos:line="104" pos:column="19"/></operator><operator pos:line="104" pos:column="19">-&gt;<pos:position pos:line="104" pos:column="24"/></operator><name pos:line="104" pos:column="21">directive<pos:position pos:line="104" pos:column="30"/></name></name> <operator pos:line="104" pos:column="31">=<pos:position pos:line="104" pos:column="32"/></operator> <call><name pos:line="104" pos:column="33">apr_pstrdup<pos:position pos:line="104" pos:column="44"/></name><argument_list pos:line="104" pos:column="44">(<argument><expr><name><name pos:line="104" pos:column="45">cmd<pos:position pos:line="104" pos:column="48"/></name><operator pos:line="104" pos:column="48">-&gt;<pos:position pos:line="104" pos:column="53"/></operator><name pos:line="104" pos:column="50">pool<pos:position pos:line="104" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="56">"Lua_____ByteCodeHack"<pos:position pos:line="104" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="105" pos:column="9">(<pos:position pos:line="105" pos:column="10"/></operator><operator pos:line="105" pos:column="10">*<pos:position pos:line="105" pos:column="11"/></operator><name pos:line="105" pos:column="11">current<pos:position pos:line="105" pos:column="18"/></name><operator pos:line="105" pos:column="18">)<pos:position pos:line="105" pos:column="19"/></operator><operator pos:line="105" pos:column="19">-&gt;<pos:position pos:line="105" pos:column="24"/></operator><name pos:line="105" pos:column="21">args<pos:position pos:line="105" pos:column="25"/></name></name> <operator pos:line="105" pos:column="26">=<pos:position pos:line="105" pos:column="27"/></operator> <name pos:line="105" pos:column="28">NULL<pos:position pos:line="105" pos:column="32"/></name></expr>;<pos:position pos:line="105" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><operator pos:line="106" pos:column="9">(<pos:position pos:line="106" pos:column="10"/></operator><operator pos:line="106" pos:column="10">*<pos:position pos:line="106" pos:column="11"/></operator><name pos:line="106" pos:column="11">current<pos:position pos:line="106" pos:column="18"/></name><operator pos:line="106" pos:column="18">)<pos:position pos:line="106" pos:column="19"/></operator><operator pos:line="106" pos:column="19">-&gt;<pos:position pos:line="106" pos:column="24"/></operator><name pos:line="106" pos:column="21">data<pos:position pos:line="106" pos:column="25"/></name></name> <operator pos:line="106" pos:column="26">=<pos:position pos:line="106" pos:column="27"/></operator> <name pos:line="106" pos:column="28">baton<pos:position pos:line="106" pos:column="33"/></name></expr>;<pos:position pos:line="106" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="107" pos:column="6"/></block>

    <return pos:line="109" pos:column="5">return <expr><name pos:line="109" pos:column="12">NULL<pos:position pos:line="109" pos:column="16"/></name></expr>;<pos:position pos:line="109" pos:column="17"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

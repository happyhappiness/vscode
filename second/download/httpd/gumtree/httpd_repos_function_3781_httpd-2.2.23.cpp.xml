<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3781_httpd-2.2.23.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_thread_create<pos:position pos:line="1" pos:column="31"/></name><argument_list pos:line="1" pos:column="31">(<argument><expr><name pos:line="1" pos:column="32">apr_thread_t<pos:position pos:line="1" pos:column="44"/></name> <operator pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></operator><operator pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></operator><operator pos:line="1" pos:column="47">new<pos:position pos:line="1" pos:column="50"/></operator></expr></argument>,
                               <argument><expr><name pos:line="2" pos:column="32">apr_threadattr_t<pos:position pos:line="2" pos:column="48"/></name> <operator pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></operator><name pos:line="2" pos:column="50">attr<pos:position pos:line="2" pos:column="54"/></name></expr></argument>, 
                               <argument><expr><name pos:line="3" pos:column="32">apr_thread_start_t<pos:position pos:line="3" pos:column="50"/></name> <name pos:line="3" pos:column="51">func<pos:position pos:line="3" pos:column="55"/></name></expr></argument>,
                               <argument><expr><name pos:line="4" pos:column="32">void<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="38">data<pos:position pos:line="4" pos:column="42"/></name></expr></argument>,
                               <argument><expr><name pos:line="5" pos:column="32">apr_pool_t<pos:position pos:line="5" pos:column="42"/></name> <operator pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="44">pool<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list>
<argument_list pos:line="6" pos:column="1">{
    <argument><expr><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">stat<pos:position pos:line="7" pos:column="22"/></name></expr></argument>;
    <argument><expr><name pos:line="8" pos:column="5">long<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">flags<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NX_THR_BIND_CONTEXT<pos:position pos:line="8" pos:column="37"/></name></expr></argument>;
    <argument><expr><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <name><name pos:line="9" pos:column="10">threadName<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><name pos:line="9" pos:column="21">NX_MAX_OBJECT_NAME_LEN<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">+<pos:position pos:line="9" pos:column="44"/></operator><literal type="number" pos:line="9" pos:column="44">1<pos:position pos:line="9" pos:column="45"/></literal></expr>]<pos:position pos:line="9" pos:column="46"/></index></name></expr></argument>;
    <argument><expr><name pos:line="10" pos:column="5">size_t<pos:position pos:line="10" pos:column="11"/></name> <name pos:line="10" pos:column="12">stack_size<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">APR_DEFAULT_STACK_SIZE<pos:position pos:line="10" pos:column="47"/></name></expr></argument>;

    if <argument><expr><operator pos:line="12" pos:column="8">(<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">attr<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">&amp;&amp;<pos:position pos:line="12" pos:column="24"/></operator> <name><name pos:line="12" pos:column="17">attr<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">thread_name<pos:position pos:line="12" pos:column="34"/></name></name><operator pos:line="12" pos:column="34">)<pos:position pos:line="12" pos:column="35"/></operator> <block pos:line="12" pos:column="36">{
        <expr><call><name pos:line="13" pos:column="9">strncpy<pos:position pos:line="13" pos:column="16"/></name> <argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">threadName<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="30">attr<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">thread_name<pos:position pos:line="13" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">NX_MAX_OBJECT_NAME_LEN<pos:position pos:line="13" pos:column="71"/></name></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr>;
    }<pos:position pos:line="14" pos:column="6"/></block></expr></argument>
    <else pos:line="15" pos:column="5">else <expr_stmt><expr><block pos:line="15" pos:column="10">{
        <expr><call><name pos:line="16" pos:column="9">sprintf<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">threadName<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="29">"APR_thread %04ld"<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="49">++<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">thread_count<pos:position pos:line="16" pos:column="63"/></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;
    }<pos:position pos:line="17" pos:column="6"/></block></expr></expr_stmt></else>

    <comment type="block" pos:line="19" pos:column="5">/* An original stack size of 0 will allow NXCreateThread() to
    *   assign a default system stack size.  An original stack
    *   size of less than 0 will assign the APR default stack size.
    *   anything else will be taken as is.
    */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">attr<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">&amp;&amp;<pos:position pos:line="24" pos:column="24"/></operator> <operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><name><name pos:line="24" pos:column="18">attr<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">stack_size<pos:position pos:line="24" pos:column="34"/></name></name> <operator pos:line="24" pos:column="35">&gt;=<pos:position pos:line="24" pos:column="40"/></operator> <literal type="number" pos:line="24" pos:column="38">0<pos:position pos:line="24" pos:column="39"/></literal><operator pos:line="24" pos:column="39">)<pos:position pos:line="24" pos:column="40"/></operator></expr>)<pos:position pos:line="24" pos:column="41"/></condition><then pos:line="24" pos:column="41"> <expr_stmt><expr><block pos:line="24" pos:column="42">{
        <expr><name pos:line="25" pos:column="9">stack_size<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name><name pos:line="25" pos:column="22">attr<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">stack_size<pos:position pos:line="25" pos:column="38"/></name></name></expr>;
    }<pos:position pos:line="26" pos:column="6"/></block>
    
    <operator pos:line="28" pos:column="5">(<pos:position pos:line="28" pos:column="6"/></operator><operator pos:line="28" pos:column="6">*<pos:position pos:line="28" pos:column="7"/></operator><operator pos:line="28" pos:column="7">new<pos:position pos:line="28" pos:column="10"/></operator><operator pos:line="28" pos:column="10">)<pos:position pos:line="28" pos:column="11"/></operator> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">apr_thread_t<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">*<pos:position pos:line="28" pos:column="29"/></operator><operator pos:line="28" pos:column="29">)<pos:position pos:line="28" pos:column="30"/></operator><call><name pos:line="28" pos:column="30">apr_palloc<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">pool<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="47">sizeof<argument_list pos:line="28" pos:column="53">(<argument><expr><name pos:line="28" pos:column="54">apr_thread_t<pos:position pos:line="28" pos:column="66"/></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt></then></if></argument_list></decl></decl_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></operator><operator pos:line="30" pos:column="11">new<pos:position pos:line="30" pos:column="14"/></operator><operator pos:line="30" pos:column="14">)<pos:position pos:line="30" pos:column="15"/></operator> <operator pos:line="30" pos:column="16">==<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">NULL<pos:position pos:line="30" pos:column="23"/></name></expr>)<pos:position pos:line="30" pos:column="24"/></condition><then pos:line="30" pos:column="24"> <block pos:line="30" pos:column="25">{
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">APR_ENOMEM<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><operator pos:line="34" pos:column="5">(<pos:position pos:line="34" pos:column="6"/></operator><operator pos:line="34" pos:column="6">*<pos:position pos:line="34" pos:column="7"/></operator><operator pos:line="34" pos:column="7">new<pos:position pos:line="34" pos:column="10"/></operator><operator pos:line="34" pos:column="10">)<pos:position pos:line="34" pos:column="11"/></operator><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">data<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">data<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="35" pos:column="5">(<pos:position pos:line="35" pos:column="6"/></operator><operator pos:line="35" pos:column="6">*<pos:position pos:line="35" pos:column="7"/></operator><operator pos:line="35" pos:column="7">new<pos:position pos:line="35" pos:column="10"/></operator><operator pos:line="35" pos:column="10">)<pos:position pos:line="35" pos:column="11"/></operator><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">func<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">func<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="36" pos:column="5">(<pos:position pos:line="36" pos:column="6"/></operator><operator pos:line="36" pos:column="6">*<pos:position pos:line="36" pos:column="7"/></operator><operator pos:line="36" pos:column="7">new<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">)<pos:position pos:line="36" pos:column="11"/></operator><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">thread_name<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">=<pos:position pos:line="36" pos:column="26"/></operator> <operator pos:line="36" pos:column="27">(<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">char<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">*<pos:position pos:line="36" pos:column="33"/></operator><operator pos:line="36" pos:column="33">)<pos:position pos:line="36" pos:column="34"/></operator><call><name pos:line="36" pos:column="34">apr_pstrdup<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><name pos:line="36" pos:column="46">pool<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="52">threadName<pos:position pos:line="36" pos:column="62"/></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="38" pos:column="5">stat<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">apr_pool_create<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><operator pos:line="38" pos:column="28">&amp;<pos:position pos:line="38" pos:column="33"/></operator><operator pos:line="38" pos:column="29">(<pos:position pos:line="38" pos:column="30"/></operator><operator pos:line="38" pos:column="30">*<pos:position pos:line="38" pos:column="31"/></operator><operator pos:line="38" pos:column="31">new<pos:position pos:line="38" pos:column="34"/></operator><operator pos:line="38" pos:column="34">)<pos:position pos:line="38" pos:column="35"/></operator><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">pool<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">pool<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">stat<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">!=<pos:position pos:line="39" pos:column="16"/></operator> <name pos:line="39" pos:column="17">APR_SUCCESS<pos:position pos:line="39" pos:column="28"/></name></expr>)<pos:position pos:line="39" pos:column="29"/></condition><then pos:line="39" pos:column="29"> <block pos:line="39" pos:column="30">{
        <return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">stat<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">attr<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">&amp;&amp;<pos:position pos:line="43" pos:column="24"/></operator> <name><name pos:line="43" pos:column="17">attr<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">detach<pos:position pos:line="43" pos:column="29"/></name></name></expr>)<pos:position pos:line="43" pos:column="30"/></condition><then pos:line="43" pos:column="30"> <block pos:line="43" pos:column="31">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">flags<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">|=<pos:position pos:line="44" pos:column="17"/></operator> <name pos:line="44" pos:column="18">NX_THR_DETACHED<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><operator pos:line="47" pos:column="5">(<pos:position pos:line="47" pos:column="6"/></operator><operator pos:line="47" pos:column="6">*<pos:position pos:line="47" pos:column="7"/></operator><operator pos:line="47" pos:column="7">new<pos:position pos:line="47" pos:column="10"/></operator><operator pos:line="47" pos:column="10">)<pos:position pos:line="47" pos:column="11"/></operator><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">ctx<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <call><name pos:line="47" pos:column="19">NXContextAlloc<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(
        <comment type="block" pos:line="48" pos:column="9">/* void(*start_routine)(void *arg) */</comment> <argument><expr><operator pos:line="48" pos:column="47">(<pos:position pos:line="48" pos:column="48"/></operator><call><call><name pos:line="48" pos:column="48">void<pos:position pos:line="48" pos:column="52"/></name> <argument_list pos:line="48" pos:column="53">(<argument><expr><operator pos:line="48" pos:column="54">*<pos:position pos:line="48" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="56"/></argument_list></call><argument_list pos:line="48" pos:column="56">(<argument><expr><name pos:line="48" pos:column="57">void<pos:position pos:line="48" pos:column="61"/></name> <operator pos:line="48" pos:column="62">*<pos:position pos:line="48" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call><operator pos:line="48" pos:column="64">)<pos:position pos:line="48" pos:column="65"/></operator> <name pos:line="48" pos:column="66">dummy_worker<pos:position pos:line="48" pos:column="78"/></name></expr></argument>,
        <comment type="block" pos:line="49" pos:column="9">/* void *arg */</comment>                       <argument><expr><operator pos:line="49" pos:column="47">(<pos:position pos:line="49" pos:column="48"/></operator><operator pos:line="49" pos:column="48">*<pos:position pos:line="49" pos:column="49"/></operator><operator pos:line="49" pos:column="49">new<pos:position pos:line="49" pos:column="52"/></operator><operator pos:line="49" pos:column="52">)<pos:position pos:line="49" pos:column="53"/></operator></expr></argument>,
        <comment type="block" pos:line="50" pos:column="9">/* int priority */</comment>                    <argument><expr><name pos:line="50" pos:column="47">NX_PRIO_MED<pos:position pos:line="50" pos:column="58"/></name></expr></argument>,
        <comment type="block" pos:line="51" pos:column="9">/* NXSize_t stackSize */</comment>              <argument><expr><name pos:line="51" pos:column="47">stack_size<pos:position pos:line="51" pos:column="57"/></name></expr></argument>,
        <comment type="block" pos:line="52" pos:column="9">/* long flags */</comment>                      <argument><expr><name pos:line="52" pos:column="47">NX_CTX_NORMAL<pos:position pos:line="52" pos:column="60"/></name></expr></argument>,
        <comment type="block" pos:line="53" pos:column="9">/* int *error */</comment>                      <argument><expr><operator pos:line="53" pos:column="47">&amp;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="48">stat<pos:position pos:line="53" pos:column="52"/></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><name pos:line="55" pos:column="5">stat<pos:position pos:line="55" pos:column="9"/></name> <operator pos:line="55" pos:column="10">=<pos:position pos:line="55" pos:column="11"/></operator> <call><name pos:line="55" pos:column="12">NXContextSetName<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(
        <comment type="block" pos:line="56" pos:column="9">/* NXContext_t ctx */</comment>  <argument><expr><operator pos:line="56" pos:column="32">(<pos:position pos:line="56" pos:column="33"/></operator><operator pos:line="56" pos:column="33">*<pos:position pos:line="56" pos:column="34"/></operator><operator pos:line="56" pos:column="34">new<pos:position pos:line="56" pos:column="37"/></operator><operator pos:line="56" pos:column="37">)<pos:position pos:line="56" pos:column="38"/></operator><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">ctx<pos:position pos:line="56" pos:column="43"/></name></expr></argument>,
        <comment type="block" pos:line="57" pos:column="9">/* const char *name */</comment> <argument><expr><name pos:line="57" pos:column="32">threadName<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name pos:line="59" pos:column="5">stat<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <call><name pos:line="59" pos:column="12">NXThreadCreate<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(
        <comment type="block" pos:line="60" pos:column="9">/* NXContext_t context */</comment>     <argument><expr><operator pos:line="60" pos:column="39">(<pos:position pos:line="60" pos:column="40"/></operator><operator pos:line="60" pos:column="40">*<pos:position pos:line="60" pos:column="41"/></operator><operator pos:line="60" pos:column="41">new<pos:position pos:line="60" pos:column="44"/></operator><operator pos:line="60" pos:column="44">)<pos:position pos:line="60" pos:column="45"/></operator><operator pos:line="60" pos:column="45">-&gt;<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="47">ctx<pos:position pos:line="60" pos:column="50"/></name></expr></argument>,
        <comment type="block" pos:line="61" pos:column="9">/* long flags */</comment>              <argument><expr><name pos:line="61" pos:column="39">flags<pos:position pos:line="61" pos:column="44"/></name></expr></argument>,
        <comment type="block" pos:line="62" pos:column="9">/* NXThreadId_t *thread_id */</comment> <argument><expr><operator pos:line="62" pos:column="39">&amp;<pos:position pos:line="62" pos:column="44"/></operator><operator pos:line="62" pos:column="40">(<pos:position pos:line="62" pos:column="41"/></operator><operator pos:line="62" pos:column="41">*<pos:position pos:line="62" pos:column="42"/></operator><operator pos:line="62" pos:column="42">new<pos:position pos:line="62" pos:column="45"/></operator><operator pos:line="62" pos:column="45">)<pos:position pos:line="62" pos:column="46"/></operator><operator pos:line="62" pos:column="46">-&gt;<pos:position pos:line="62" pos:column="51"/></operator><name pos:line="62" pos:column="48">td<pos:position pos:line="62" pos:column="50"/></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">stat<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">==<pos:position pos:line="64" pos:column="16"/></operator> <literal type="number" pos:line="64" pos:column="17">0<pos:position pos:line="64" pos:column="18"/></literal></expr>)<pos:position pos:line="64" pos:column="19"/></condition><then pos:line="64" pos:column="19">
        <block type="pseudo"><return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">APR_SUCCESS<pos:position pos:line="65" pos:column="27"/></name></expr>;<pos:position pos:line="65" pos:column="28"/></return></block></then></if>
        
    <return pos:line="67" pos:column="5">return<expr><operator pos:line="67" pos:column="11">(<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="12">stat<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">)<pos:position pos:line="67" pos:column="17"/></operator></expr>;<pos:position pos:line="67" pos:column="18"/></return> <comment type="block" pos:line="67" pos:column="19">/* if error */</comment>    
}</unit>

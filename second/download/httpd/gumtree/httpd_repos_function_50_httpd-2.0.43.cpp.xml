<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_50_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">clean_env<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">pathbuf<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">512<pos:position pos:line="3" pos:column="21"/></literal></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier><modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">cleanenv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier><modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">ep<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">cidx<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">idx<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>


    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">cleanenv<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">char<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></operator><operator pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></operator><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="31">calloc<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">AP_ENVBUF<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="49">sizeof<argument_list pos:line="10" pos:column="55">(<argument><expr><name pos:line="10" pos:column="56">char<pos:position pos:line="10" pos:column="60"/></name> <operator pos:line="10" pos:column="61">*<pos:position pos:line="10" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call><operator pos:line="10" pos:column="64">)<pos:position pos:line="10" pos:column="65"/></operator> <operator pos:line="10" pos:column="66">==<pos:position pos:line="10" pos:column="68"/></operator> <name pos:line="10" pos:column="69">NULL<pos:position pos:line="10" pos:column="73"/></name></expr>)<pos:position pos:line="10" pos:column="74"/></condition><then pos:line="10" pos:column="74"> <block pos:line="10" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">log_err<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><literal type="string" pos:line="11" pos:column="17">"failed to malloc memory for environment\n"<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">exit<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="number" pos:line="12" pos:column="14">120<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">sprintf<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">pathbuf<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="22">"PATH=%s"<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="33">AP_SAFE_PATH<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">cleanenv<pos:position pos:line="16" pos:column="13"/></name><index pos:line="16" pos:column="13">[<expr><name pos:line="16" pos:column="14">cidx<pos:position pos:line="16" pos:column="18"/></name></expr>]<pos:position pos:line="16" pos:column="19"/></index></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">strdup<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">pathbuf<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">cidx<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">++<pos:position pos:line="17" pos:column="11"/></operator></expr>;<pos:position pos:line="17" pos:column="12"/></expr_stmt>

    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">ep<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">environ<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></init> <condition><expr><operator pos:line="19" pos:column="24">*<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">ep<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">&amp;&amp;<pos:position pos:line="19" pos:column="38"/></operator> <name pos:line="19" pos:column="31">cidx<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">&lt;<pos:position pos:line="19" pos:column="40"/></operator> <name pos:line="19" pos:column="38">AP_ENVBUF<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-<pos:position pos:line="19" pos:column="48"/></operator><literal type="number" pos:line="19" pos:column="48">1<pos:position pos:line="19" pos:column="49"/></literal></expr>;<pos:position pos:line="19" pos:column="50"/></condition> <incr><expr><name pos:line="19" pos:column="51">ep<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">++<pos:position pos:line="19" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="56"/></control> <block pos:line="19" pos:column="57">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><call><name pos:line="20" pos:column="14">strncmp<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><operator pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">ep<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"HTTP_"<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="36">5<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call> <operator pos:line="20" pos:column="39">||<pos:position pos:line="20" pos:column="41"/></operator> <operator pos:line="20" pos:column="42">!<pos:position pos:line="20" pos:column="43"/></operator><call><name pos:line="20" pos:column="43">strncmp<pos:position pos:line="20" pos:column="50"/></name><argument_list pos:line="20" pos:column="50">(<argument><expr><operator pos:line="20" pos:column="51">*<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="52">ep<pos:position pos:line="20" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="56">"SSL_"<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="64">4<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="67"/></condition><then pos:line="20" pos:column="67"> <block pos:line="20" pos:column="68">{
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">cleanenv<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><name pos:line="21" pos:column="22">cidx<pos:position pos:line="21" pos:column="26"/></name></expr>]<pos:position pos:line="21" pos:column="27"/></index></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <operator pos:line="21" pos:column="30">*<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">ep<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="22" pos:column="13">cidx<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">++<pos:position pos:line="22" pos:column="19"/></operator></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then>
        <else pos:line="24" pos:column="9">else <block pos:line="24" pos:column="14">{
            <for pos:line="25" pos:column="13">for <control pos:line="25" pos:column="17">(<init><expr><name pos:line="25" pos:column="18">idx<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">0<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></init> <condition><expr><name><name pos:line="25" pos:column="27">safe_env_lst<pos:position pos:line="25" pos:column="39"/></name><index pos:line="25" pos:column="39">[<expr><name pos:line="25" pos:column="40">idx<pos:position pos:line="25" pos:column="43"/></name></expr>]<pos:position pos:line="25" pos:column="44"/></index></name></expr>;<pos:position pos:line="25" pos:column="45"/></condition> <incr><expr><name pos:line="25" pos:column="46">idx<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">++<pos:position pos:line="25" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="52"/></control> <block pos:line="25" pos:column="53">{
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">strncmp<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">ep<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="35">safe_env_lst<pos:position pos:line="26" pos:column="47"/></name><index pos:line="26" pos:column="47">[<expr><name pos:line="26" pos:column="48">idx<pos:position pos:line="26" pos:column="51"/></name></expr>]<pos:position pos:line="26" pos:column="52"/></index></name></expr></argument>,
                             <argument><expr><call><name pos:line="27" pos:column="30">strlen<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name><name pos:line="27" pos:column="37">safe_env_lst<pos:position pos:line="27" pos:column="49"/></name><index pos:line="27" pos:column="49">[<expr><name pos:line="27" pos:column="50">idx<pos:position pos:line="27" pos:column="53"/></name></expr>]<pos:position pos:line="27" pos:column="54"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="57"/></condition><then pos:line="27" pos:column="57"> <block pos:line="27" pos:column="58">{
                    <expr_stmt><expr><name><name pos:line="28" pos:column="21">cleanenv<pos:position pos:line="28" pos:column="29"/></name><index pos:line="28" pos:column="29">[<expr><name pos:line="28" pos:column="30">cidx<pos:position pos:line="28" pos:column="34"/></name></expr>]<pos:position pos:line="28" pos:column="35"/></index></name> <operator pos:line="28" pos:column="36">=<pos:position pos:line="28" pos:column="37"/></operator> <operator pos:line="28" pos:column="38">*<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">ep<pos:position pos:line="28" pos:column="41"/></name></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="29" pos:column="21">cidx<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">++<pos:position pos:line="29" pos:column="27"/></operator></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
                    <break pos:line="30" pos:column="21">break;<pos:position pos:line="30" pos:column="27"/></break>
                }<pos:position pos:line="31" pos:column="18"/></block></then></if>
            }<pos:position pos:line="32" pos:column="14"/></block></for>
        }<pos:position pos:line="33" pos:column="10"/></block></else></if>
    }<pos:position pos:line="34" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="36" pos:column="5">cleanenv<pos:position pos:line="36" pos:column="13"/></name><index pos:line="36" pos:column="13">[<expr><name pos:line="36" pos:column="14">cidx<pos:position pos:line="36" pos:column="18"/></name></expr>]<pos:position pos:line="36" pos:column="19"/></index></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">NULL<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="38" pos:column="5">environ<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <name pos:line="38" pos:column="15">cleanenv<pos:position pos:line="38" pos:column="23"/></name></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2900_httpd-2.4.18.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">slotmem_create<pos:position pos:line="1" pos:column="35"/></name><argument_list pos:line="1" pos:column="35">(<argument><expr><name pos:line="1" pos:column="36">ap_slotmem_instance_t<pos:position pos:line="1" pos:column="57"/></name> <operator pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></operator><operator pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></operator><operator pos:line="1" pos:column="60">new<pos:position pos:line="1" pos:column="63"/></operator></expr></argument>, <argument><expr><specifier pos:line="1" pos:column="65">const<pos:position pos:line="1" pos:column="70"/></specifier> <name pos:line="1" pos:column="71">char<pos:position pos:line="1" pos:column="75"/></name> <operator pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></operator><name pos:line="1" pos:column="77">name<pos:position pos:line="1" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="83">apr_size_t<pos:position pos:line="1" pos:column="93"/></name> <name pos:line="1" pos:column="94">item_size<pos:position pos:line="1" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="105">unsigned<pos:position pos:line="1" pos:column="113"/></name> <name pos:line="1" pos:column="114">int<pos:position pos:line="1" pos:column="117"/></name> <name pos:line="1" pos:column="118">item_num<pos:position pos:line="1" pos:column="126"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="128">ap_slotmem_type_t<pos:position pos:line="1" pos:column="145"/></name> <name pos:line="1" pos:column="146">type<pos:position pos:line="1" pos:column="150"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="152">apr_pool_t<pos:position pos:line="1" pos:column="162"/></name> <operator pos:line="1" pos:column="163">*<pos:position pos:line="1" pos:column="164"/></operator><name pos:line="1" pos:column="164">pool<pos:position pos:line="1" pos:column="168"/></name></expr></argument>)<pos:position pos:line="1" pos:column="169"/></argument_list>
<argument_list pos:line="2" pos:column="1">{
    <argument><expr><name pos:line="3" pos:column="5">ap_slotmem_instance_t<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">res<pos:position pos:line="3" pos:column="31"/></name></expr></argument>;
    <argument><expr><name pos:line="4" pos:column="5">ap_slotmem_instance_t<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">next<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">=<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="35">globallistmem<pos:position pos:line="4" pos:column="48"/></name></expr></argument>;
    <argument><expr><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">basesize<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">=<pos:position pos:line="5" pos:column="26"/></operator> <operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">item_size<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="40">item_num<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">)<pos:position pos:line="5" pos:column="49"/></operator></expr></argument>;

    <argument><expr><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">fname<pos:position pos:line="7" pos:column="22"/></name></expr></argument>;

    if <argument><expr><operator pos:line="9" pos:column="8">(<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">name<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">)<pos:position pos:line="9" pos:column="14"/></operator> <block pos:line="9" pos:column="15">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">name<pos:position pos:line="10" pos:column="17"/></name><index pos:line="10" pos:column="17">[<expr><literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>]<pos:position pos:line="10" pos:column="20"/></index></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <literal type="char" pos:line="10" pos:column="24">':'<pos:position pos:line="10" pos:column="27"/></literal></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="13">fname<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">name<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt></block></then>
        <else pos:line="12" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="13">fname<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <call><name pos:line="13" pos:column="21">ap_runtime_dir_relative<pos:position pos:line="13" pos:column="44"/></name><argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">pool<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">name<pos:position pos:line="13" pos:column="55"/></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt></block></else></if></block></expr></argument>

        <comment type="block" pos:line="15" pos:column="9">/* first try to attach to existing slotmem */</comment>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">next<pos:position pos:line="16" pos:column="17"/></name></expr>)<pos:position pos:line="16" pos:column="18"/></condition><then pos:line="16" pos:column="18"> <expr_stmt><expr><block pos:line="16" pos:column="19">{
            <for pos:line="17" pos:column="13">for <control pos:line="17" pos:column="17">(<init pos:line="17" pos:column="18">;<pos:position pos:line="17" pos:column="19"/></init><condition pos:line="17" pos:column="19">;<pos:position pos:line="17" pos:column="20"/></condition><incr/>)<pos:position pos:line="17" pos:column="21"/></control> <expr_stmt><expr><block pos:line="17" pos:column="22">{
                <if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">strcmp<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name><name pos:line="18" pos:column="28">next<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">name<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">fname<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call> <operator pos:line="18" pos:column="47">==<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="50">0<pos:position pos:line="18" pos:column="51"/></literal></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52"> <expr_stmt><expr><block pos:line="18" pos:column="53">{
                    <comment type="block" pos:line="19" pos:column="21">/* we already have it */</comment>
                    <expr><operator pos:line="20" pos:column="21">*<pos:position pos:line="20" pos:column="22"/></operator><operator pos:line="20" pos:column="22">new<pos:position pos:line="20" pos:column="25"/></operator> <operator pos:line="20" pos:column="26">=<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="28">next<pos:position pos:line="20" pos:column="32"/></name></expr>;<pos:position pos:line="20" pos:column="33"/></block></expr></expr_stmt></then></if>
                    <return pos:line="21" pos:column="21">return <expr><name pos:line="21" pos:column="28">APR_SUCCESS<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></return>
                }<pos:position pos:line="22" pos:column="18"/></block></expr></expr_stmt></for>
                <if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><name><name pos:line="23" pos:column="22">next<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">next<pos:position pos:line="23" pos:column="32"/></name></name></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33"> <expr_stmt><expr><block pos:line="23" pos:column="34">{
                     <break pos:line="24" pos:column="22">break;<pos:position pos:line="24" pos:column="28"/></break>
                }<pos:position pos:line="25" pos:column="18"/></block>
                <name pos:line="26" pos:column="17">next<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name><name pos:line="26" pos:column="24">next<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">next<pos:position pos:line="26" pos:column="34"/></name></name></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt></then></if>
            }<pos:position pos:line="27" pos:column="14"/></block>
        }
    }<pos:position pos:line="29" pos:column="6"/></expr></expr_stmt></then>
    <else pos:line="30" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="9">fname<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="string" pos:line="31" pos:column="17">"anonymous"<pos:position pos:line="31" pos:column="28"/></literal></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt></block></else></if></argument_list></decl></decl_stmt>

    <comment type="block" pos:line="33" pos:column="5">/* create the memory using the gpool */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">res<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <operator pos:line="34" pos:column="11">(<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">ap_slotmem_instance_t<pos:position pos:line="34" pos:column="33"/></name> <operator pos:line="34" pos:column="34">*<pos:position pos:line="34" pos:column="35"/></operator><operator pos:line="34" pos:column="35">)<pos:position pos:line="34" pos:column="36"/></operator> <call><name pos:line="34" pos:column="37">apr_pcalloc<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">(<argument><expr><name pos:line="34" pos:column="49">gpool<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="56">sizeof<argument_list pos:line="34" pos:column="62">(<argument><expr><name pos:line="34" pos:column="63">ap_slotmem_instance_t<pos:position pos:line="34" pos:column="84"/></name></expr></argument>)<pos:position pos:line="34" pos:column="85"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="87"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">res<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">-&gt;<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="10">base<pos:position pos:line="35" pos:column="14"/></name></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <call><name pos:line="35" pos:column="17">apr_pcalloc<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">gpool<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="36">basesize<pos:position pos:line="35" pos:column="44"/></name> <operator pos:line="35" pos:column="45">+<pos:position pos:line="35" pos:column="46"/></operator> <operator pos:line="35" pos:column="47">(<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="48">item_num<pos:position pos:line="35" pos:column="56"/></name> <operator pos:line="35" pos:column="57">*<pos:position pos:line="35" pos:column="58"/></operator> <sizeof pos:line="35" pos:column="59">sizeof<argument_list pos:line="35" pos:column="65">(<argument><expr><name pos:line="35" pos:column="66">char<pos:position pos:line="35" pos:column="70"/></name></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></sizeof><operator pos:line="35" pos:column="71">)<pos:position pos:line="35" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><name><name pos:line="36" pos:column="10">res<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">base<pos:position pos:line="36" pos:column="19"/></name></name></expr>)<pos:position pos:line="36" pos:column="20"/></condition><then pos:line="36" pos:column="20">
        <block type="pseudo"><return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">APR_ENOSHMAVAIL<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></return></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* For the chained slotmem stuff */</comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">res<pos:position pos:line="40" pos:column="8"/></name><operator pos:line="40" pos:column="8">-&gt;<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="10">name<pos:position pos:line="40" pos:column="14"/></name></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <call><name pos:line="40" pos:column="17">apr_pstrdup<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">gpool<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="36">fname<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">res<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">size<pos:position pos:line="41" pos:column="14"/></name></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">item_size<pos:position pos:line="41" pos:column="26"/></name></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">res<pos:position pos:line="42" pos:column="8"/></name><operator pos:line="42" pos:column="8">-&gt;<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="10">num<pos:position pos:line="42" pos:column="13"/></name></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <name pos:line="42" pos:column="16">item_num<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">res<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">-&gt;<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="10">next<pos:position pos:line="43" pos:column="14"/></name></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <name pos:line="43" pos:column="17">NULL<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">res<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">type<pos:position pos:line="44" pos:column="14"/></name></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">type<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">res<pos:position pos:line="45" pos:column="8"/></name><operator pos:line="45" pos:column="8">-&gt;<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="10">inuse<pos:position pos:line="45" pos:column="15"/></name></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <operator pos:line="45" pos:column="18">(<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">char<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">*<pos:position pos:line="45" pos:column="25"/></operator><operator pos:line="45" pos:column="25">)<pos:position pos:line="45" pos:column="26"/></operator><name><name pos:line="45" pos:column="26">res<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">-&gt;<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="31">base<pos:position pos:line="45" pos:column="35"/></name></name> <operator pos:line="45" pos:column="36">+<pos:position pos:line="45" pos:column="37"/></operator> <name pos:line="45" pos:column="38">basesize<pos:position pos:line="45" pos:column="46"/></name></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">globallistmem<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">==<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="26">NULL<pos:position pos:line="46" pos:column="30"/></name></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="9">globallistmem<pos:position pos:line="47" pos:column="22"/></name> <operator pos:line="47" pos:column="23">=<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="25">res<pos:position pos:line="47" pos:column="28"/></name></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="48" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="9">next<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">-&gt;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="15">next<pos:position pos:line="49" pos:column="19"/></name></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">res<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt></block></else></if>

    <expr_stmt><expr><operator pos:line="51" pos:column="5">*<pos:position pos:line="51" pos:column="6"/></operator><operator pos:line="51" pos:column="6">new<pos:position pos:line="51" pos:column="9"/></operator> <operator pos:line="51" pos:column="10">=<pos:position pos:line="51" pos:column="11"/></operator> <name pos:line="51" pos:column="12">res<pos:position pos:line="51" pos:column="15"/></name></expr>;<pos:position pos:line="51" pos:column="16"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">APR_SUCCESS<pos:position pos:line="52" pos:column="23"/></name></expr>;<pos:position pos:line="52" pos:column="24"/></return>
}</unit>

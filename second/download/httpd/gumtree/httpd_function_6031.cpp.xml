<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6031.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_req_engine_pull<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">h2_req_engine<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">ngn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, 
                                     <parameter><decl><type><name pos:line="2" pos:column="38">apr_read_type_e<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">block<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, 
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_uint32_t<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">capacity<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>, 
                                     <parameter><decl><type><name pos:line="4" pos:column="38">request_rec<pos:position pos:line="4" pos:column="49"/></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier><modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">pr<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="55"/></parameter_list>
<block pos:line="5" pos:column="1">{   
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">h2_ngn_shed<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">shed<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name pos:line="6" pos:column="25">h2_ngn_shed_get_shed<pos:position pos:line="6" pos:column="45"/></name><argument_list pos:line="6" pos:column="45">(<argument><expr><name pos:line="6" pos:column="46">ngn<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">h2_mplx<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">m<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><call><name pos:line="7" pos:column="18">h2_ngn_shed_get_ctx<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">shed<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">status<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">h2_task<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">task<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><name pos:line="9" pos:column="21">NULL<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">acquired<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
    
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">status<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">enter_mutex<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">m<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="34">&amp;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="35">acquired<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call><operator pos:line="12" pos:column="44">)<pos:position pos:line="12" pos:column="45"/></operator> <operator pos:line="12" pos:column="46">==<pos:position pos:line="12" pos:column="48"/></operator> <name pos:line="12" pos:column="49">APR_SUCCESS<pos:position pos:line="12" pos:column="60"/></name></expr>)<pos:position pos:line="12" pos:column="61"/></condition><then pos:line="12" pos:column="61"> <block pos:line="12" pos:column="62">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">want_shutdown<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><operator pos:line="13" pos:column="29">(<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">block<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">==<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">APR_BLOCK_READ<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">)<pos:position pos:line="13" pos:column="54"/></operator></expr></init></decl>;<pos:position pos:line="13" pos:column="55"/></decl_stmt>

        <comment type="block" pos:line="15" pos:column="9">/* Take this opportunity to update output consummation 
         * for this engine */</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ngn_out_update_windows<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">m<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">ngn<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
        
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">want_shutdown<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&amp;&amp;<pos:position pos:line="19" pos:column="37"/></operator> <operator pos:line="19" pos:column="30">!<pos:position pos:line="19" pos:column="31"/></operator><call><name pos:line="19" pos:column="31">h2_iq_empty<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><name><name pos:line="19" pos:column="43">m<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">q<pos:position pos:line="19" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <block pos:line="19" pos:column="50">{
            <comment type="block" pos:line="20" pos:column="13">/* For a blocking read, check first if requests are to be
             * had and, if not, wait a short while before doing the
             * blocking, and if unsuccessful, terminating read.
             */</comment>
            <expr_stmt><expr><name pos:line="24" pos:column="13">status<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <call><name pos:line="24" pos:column="22">h2_ngn_shed_pull_task<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">shed<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">ngn<pos:position pos:line="24" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="55">capacity<pos:position pos:line="24" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="65">1<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="68">&amp;<pos:position pos:line="24" pos:column="73"/></operator><name pos:line="24" pos:column="69">task<pos:position pos:line="24" pos:column="73"/></name></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="75"/></expr_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><call><name pos:line="25" pos:column="17">APR_STATUS_IS_EAGAIN<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">status<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46"> <block pos:line="25" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">ap_log_cerror<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">APLOG_MARK<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">APLOG_TRACE1<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="57">0<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="60">m<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">-&gt;<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="63">c<pos:position pos:line="26" pos:column="64"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="27" pos:column="31">"h2_mplx(%ld): start block engine pull"<pos:position pos:line="27" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="72">m<pos:position pos:line="27" pos:column="73"/></name><operator pos:line="27" pos:column="73">-&gt;<pos:position pos:line="27" pos:column="78"/></operator><name pos:line="27" pos:column="75">id<pos:position pos:line="27" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="79"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">apr_thread_cond_timedwait<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><name><name pos:line="28" pos:column="43">m<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">-&gt;<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="46">task_thawed<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="59">m<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">-&gt;<pos:position pos:line="28" pos:column="65"/></operator><name pos:line="28" pos:column="62">lock<pos:position pos:line="28" pos:column="66"/></name></name></expr></argument>, 
                                          <argument><expr><call><name pos:line="29" pos:column="43">apr_time_from_msec<pos:position pos:line="29" pos:column="61"/></name><argument_list pos:line="29" pos:column="61">(<argument><expr><literal type="number" pos:line="29" pos:column="62">20<pos:position pos:line="29" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><name pos:line="30" pos:column="17">status<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <call><name pos:line="30" pos:column="26">h2_ngn_shed_pull_task<pos:position pos:line="30" pos:column="47"/></name><argument_list pos:line="30" pos:column="47">(<argument><expr><name pos:line="30" pos:column="48">shed<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">ngn<pos:position pos:line="30" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="59">capacity<pos:position pos:line="30" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="69">1<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="72">&amp;<pos:position pos:line="30" pos:column="77"/></operator><name pos:line="30" pos:column="73">task<pos:position pos:line="30" pos:column="77"/></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then>
        <else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">status<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">h2_ngn_shed_pull_task<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name pos:line="34" pos:column="44">shed<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">ngn<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">capacity<pos:position pos:line="34" pos:column="63"/></name></expr></argument>,
                                           <argument><expr><name pos:line="35" pos:column="44">want_shutdown<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="59">&amp;<pos:position pos:line="35" pos:column="64"/></operator><name pos:line="35" pos:column="60">task<pos:position pos:line="35" pos:column="64"/></name></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">leave_mutex<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">m<pos:position pos:line="37" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="24">acquired<pos:position pos:line="37" pos:column="32"/></name></expr></argument>)<pos:position pos:line="37" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="39" pos:column="5">*<pos:position pos:line="39" pos:column="6"/></operator><name pos:line="39" pos:column="6">pr<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <ternary><condition><expr><name pos:line="39" pos:column="11">task<pos:position pos:line="39" pos:column="15"/></name></expr>?<pos:position pos:line="39" pos:column="16"/></condition><then pos:line="39" pos:column="16"> <expr><name><name pos:line="39" pos:column="17">task<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">r<pos:position pos:line="39" pos:column="24"/></name></name></expr> <pos:position pos:line="39" pos:column="25"/></then><else pos:line="39" pos:column="25">: <expr><name pos:line="39" pos:column="27">NULL<pos:position pos:line="39" pos:column="31"/></name></expr></else></ternary></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">status<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3692_httpd-2.2.19.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">strstr<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">s1<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">s2<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">p1<pos:position pos:line="3" pos:column="13"/></name></decl>, <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="16">p2<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">s2<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <literal type="char" pos:line="4" pos:column="16">'\0'<pos:position pos:line="4" pos:column="20"/></literal></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
        <comment type="block" pos:line="5" pos:column="9">/* an empty s2 */</comment>
        <return pos:line="6" pos:column="9">return<expr><operator pos:line="6" pos:column="15">(<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">s1<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">)<pos:position pos:line="6" pos:column="19"/></operator></expr>;<pos:position pos:line="6" pos:column="20"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <while pos:line="8" pos:column="5">while<condition pos:line="8" pos:column="10">(<expr><operator pos:line="8" pos:column="11">(<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">s1<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">strchr<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">s1<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">s2<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator> <operator pos:line="8" pos:column="34">!=<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">NULL<pos:position pos:line="8" pos:column="41"/></name></expr>)<pos:position pos:line="8" pos:column="42"/></condition> <block pos:line="8" pos:column="43">{
        <comment type="block" pos:line="9" pos:column="9">/* found first character of s2, see if the rest matches */</comment>
        <expr_stmt><expr><name pos:line="10" pos:column="9">p1<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">s1<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">p2<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">s2<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>
        <while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><operator pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></operator><operator pos:line="12" pos:column="17">++<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">p1<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator> <operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator><operator pos:line="12" pos:column="26">++<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">p2<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition> <block pos:line="12" pos:column="32">{
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">p1<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">==<pos:position pos:line="13" pos:column="23"/></operator> <literal type="char" pos:line="13" pos:column="24">'\0'<pos:position pos:line="13" pos:column="28"/></literal></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29"> <block pos:line="13" pos:column="30">{
                <comment type="block" pos:line="14" pos:column="17">/* both strings ended together */</comment>
                <return pos:line="15" pos:column="17">return<expr><operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">s1<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator></expr>;<pos:position pos:line="15" pos:column="28"/></return>
            }<pos:position pos:line="16" pos:column="14"/></block></then></if>
        }<pos:position pos:line="17" pos:column="10"/></block></while>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">p2<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">==<pos:position pos:line="18" pos:column="19"/></operator> <literal type="char" pos:line="18" pos:column="20">'\0'<pos:position pos:line="18" pos:column="24"/></literal></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
            <comment type="block" pos:line="19" pos:column="13">/* second string ended, a match */</comment>
            <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="22" pos:column="9">/* didn't find a match here, try starting at next character in s1 */</comment>
        <expr_stmt><expr><name pos:line="23" pos:column="9">s1<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">++<pos:position pos:line="23" pos:column="13"/></operator></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></while>
    <return pos:line="25" pos:column="5">return<expr><operator pos:line="25" pos:column="11">(<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">s1<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">)<pos:position pos:line="25" pos:column="15"/></operator></expr>;<pos:position pos:line="25" pos:column="16"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

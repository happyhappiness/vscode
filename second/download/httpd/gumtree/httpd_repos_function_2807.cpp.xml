<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2807.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">log_error_core<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">file<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">line<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">module_index<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">level<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">apr_status_t<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">status<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="49">const<pos:position pos:line="3" pos:column="54"/></specifier> <name pos:line="3" pos:column="55">server_rec<pos:position pos:line="3" pos:column="65"/></name> <modifier pos:line="3" pos:column="66">*<pos:position pos:line="3" pos:column="67"/></modifier></type><name pos:line="3" pos:column="67">s<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="4" pos:column="28">const<pos:position pos:line="4" pos:column="33"/></specifier> <name pos:line="4" pos:column="34">conn_rec<pos:position pos:line="4" pos:column="42"/></name> <modifier pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></modifier></type><name pos:line="4" pos:column="44">c<pos:position pos:line="4" pos:column="45"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="5" pos:column="28">const<pos:position pos:line="5" pos:column="33"/></specifier> <name pos:line="5" pos:column="34">request_rec<pos:position pos:line="5" pos:column="45"/></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier></type><name pos:line="5" pos:column="47">r<pos:position pos:line="5" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="50">apr_pool_t<pos:position pos:line="5" pos:column="60"/></name> <modifier pos:line="5" pos:column="61">*<pos:position pos:line="5" pos:column="62"/></modifier></type><name pos:line="5" pos:column="62">pool<pos:position pos:line="5" pos:column="66"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="6" pos:column="28">const<pos:position pos:line="6" pos:column="33"/></specifier> <name pos:line="6" pos:column="34">char<pos:position pos:line="6" pos:column="38"/></name> <modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier></type><name pos:line="6" pos:column="40">fmt<pos:position pos:line="6" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="45">va_list<pos:position pos:line="6" pos:column="52"/></name></type> <name pos:line="6" pos:column="53">args<pos:position pos:line="6" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="58"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">errstr<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><name pos:line="8" pos:column="17">MAX_STRING_LEN<pos:position pos:line="8" pos:column="31"/></name></expr>]<pos:position pos:line="8" pos:column="32"/></index></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
<cpp:ifndef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifndef<pos:position pos:line="9" pos:column="8"/></cpp:directive> <name pos:line="9" pos:column="9">AP_UNSAFE_ERROR_LOG_UNESCAPED<pos:position pos:line="9" pos:column="38"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">scratch<pos:position pos:line="10" pos:column="17"/></name><index pos:line="10" pos:column="17">[<expr><name pos:line="10" pos:column="18">MAX_STRING_LEN<pos:position pos:line="10" pos:column="32"/></name></expr>]<pos:position pos:line="10" pos:column="33"/></index></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">len<pos:position pos:line="12" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="21">errstrlen<pos:position pos:line="12" pos:column="30"/></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_file_t<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">logf<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">referer<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">level_and_mask<pos:position pos:line="15" pos:column="23"/></name> <init pos:line="15" pos:column="24">= <expr><name pos:line="15" pos:column="26">level<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="34">APLOG_LEVELMASK<pos:position pos:line="15" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="50"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">r<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">&amp;&amp;<pos:position pos:line="17" pos:column="21"/></operator> <name><name pos:line="17" pos:column="14">r<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">connection<pos:position pos:line="17" pos:column="27"/></name></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28"> <block pos:line="17" pos:column="29">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">c<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <name><name pos:line="18" pos:column="13">r<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">connection<pos:position pos:line="18" pos:column="26"/></name></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">s<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">==<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">NULL<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19"> <block pos:line="21" pos:column="20">{
        <comment type="block" pos:line="22" pos:column="9">/*
         * If we are doing stderr logging (startup), don't log messages that are
         * above the default server log level unless it is a startup/shutdown
         * notice
         */</comment>
<cpp:ifndef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifndef<pos:position pos:line="27" pos:column="8"/></cpp:directive> <name pos:line="27" pos:column="9">DEBUG<pos:position pos:line="27" pos:column="14"/></name></cpp:ifndef>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">level_and_mask<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">!=<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">APLOG_NOTICE<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">)<pos:position pos:line="28" pos:column="45"/></operator>
            <operator pos:line="29" pos:column="13">&amp;&amp;<pos:position pos:line="29" pos:column="23"/></operator> <operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">level_and_mask<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">&gt;<pos:position pos:line="29" pos:column="36"/></operator> <name pos:line="29" pos:column="34">ap_default_loglevel<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">)<pos:position pos:line="29" pos:column="54"/></operator></expr>)<pos:position pos:line="29" pos:column="55"/></condition><then pos:line="29" pos:column="55"> <block pos:line="29" pos:column="56">{
            <return pos:line="30" pos:column="13">return;<pos:position pos:line="30" pos:column="20"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name pos:line="34" pos:column="9">logf<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <name pos:line="34" pos:column="16">stderr_log<pos:position pos:line="34" pos:column="26"/></name></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then>
    <else pos:line="36" pos:column="5">else <block pos:line="36" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="37" pos:column="9">int<pos:position pos:line="37" pos:column="12"/></name></type> <name pos:line="37" pos:column="13">configured_level<pos:position pos:line="37" pos:column="29"/></name> <init pos:line="37" pos:column="30">= <expr><ternary><condition><expr><name pos:line="37" pos:column="32">r<pos:position pos:line="37" pos:column="33"/></name></expr> ?<pos:position pos:line="37" pos:column="35"/></condition><then pos:line="37" pos:column="35"> <expr><call><name pos:line="37" pos:column="36">ap_get_request_module_loglevel<pos:position pos:line="37" pos:column="66"/></name><argument_list pos:line="37" pos:column="66">(<argument><expr><name pos:line="37" pos:column="67">r<pos:position pos:line="37" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="70">module_index<pos:position pos:line="37" pos:column="82"/></name></expr></argument>)<pos:position pos:line="37" pos:column="83"/></argument_list></call></expr>        <pos:position pos:line="37" pos:column="91"/></then><else pos:line="37" pos:column="91">:
                               <expr><ternary><condition><expr><name pos:line="38" pos:column="32">c<pos:position pos:line="38" pos:column="33"/></name></expr> ?<pos:position pos:line="38" pos:column="35"/></condition><then pos:line="38" pos:column="35"> <expr><call><name pos:line="38" pos:column="36">ap_get_conn_server_module_loglevel<pos:position pos:line="38" pos:column="70"/></name><argument_list pos:line="38" pos:column="70">(<argument><expr><name pos:line="38" pos:column="71">c<pos:position pos:line="38" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="74">s<pos:position pos:line="38" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="77">module_index<pos:position pos:line="38" pos:column="89"/></name></expr></argument>)<pos:position pos:line="38" pos:column="90"/></argument_list></call></expr> <pos:position pos:line="38" pos:column="91"/></then><else pos:line="38" pos:column="91">:
                                   <expr><call><name pos:line="39" pos:column="36">ap_get_server_module_loglevel<pos:position pos:line="39" pos:column="65"/></name><argument_list pos:line="39" pos:column="65">(<argument><expr><name pos:line="39" pos:column="66">s<pos:position pos:line="39" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="69">module_index<pos:position pos:line="39" pos:column="81"/></name></expr></argument>)<pos:position pos:line="39" pos:column="82"/></argument_list></call></expr></else></ternary></expr></else></ternary></expr></init></decl>;<pos:position pos:line="39" pos:column="83"/></decl_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">s<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">error_log<pos:position pos:line="40" pos:column="25"/></name></name></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26"> <block pos:line="40" pos:column="27">{
            <comment type="block" pos:line="41" pos:column="13">/*
             * If we are doing normal logging, don't log messages that are
             * above the module's log level unless it is a startup/shutdown notice
             */</comment>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><operator pos:line="45" pos:column="17">(<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">level_and_mask<pos:position pos:line="45" pos:column="32"/></name> <operator pos:line="45" pos:column="33">!=<pos:position pos:line="45" pos:column="35"/></operator> <name pos:line="45" pos:column="36">APLOG_NOTICE<pos:position pos:line="45" pos:column="48"/></name><operator pos:line="45" pos:column="48">)<pos:position pos:line="45" pos:column="49"/></operator>
                <operator pos:line="46" pos:column="17">&amp;&amp;<pos:position pos:line="46" pos:column="27"/></operator> <operator pos:line="46" pos:column="20">(<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">level_and_mask<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">&gt;<pos:position pos:line="46" pos:column="40"/></operator> <name pos:line="46" pos:column="38">configured_level<pos:position pos:line="46" pos:column="54"/></name><operator pos:line="46" pos:column="54">)<pos:position pos:line="46" pos:column="55"/></operator></expr>)<pos:position pos:line="46" pos:column="56"/></condition><then pos:line="46" pos:column="56"> <block pos:line="46" pos:column="57">{
                <return pos:line="47" pos:column="17">return;<pos:position pos:line="47" pos:column="24"/></return>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="50" pos:column="13">logf<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <name><name pos:line="50" pos:column="20">s<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">error_log<pos:position pos:line="50" pos:column="32"/></name></name></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then>
        <else pos:line="52" pos:column="9">else <block pos:line="52" pos:column="14">{
            <comment type="block" pos:line="53" pos:column="13">/*
             * If we are doing syslog logging, don't log messages that are
             * above the module's log level (including a startup/shutdown notice)
             */</comment>
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name pos:line="57" pos:column="17">level_and_mask<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">&gt;<pos:position pos:line="57" pos:column="36"/></operator> <name pos:line="57" pos:column="34">configured_level<pos:position pos:line="57" pos:column="50"/></name></expr>)<pos:position pos:line="57" pos:column="51"/></condition><then pos:line="57" pos:column="51"> <block pos:line="57" pos:column="52">{
                <return pos:line="58" pos:column="17">return;<pos:position pos:line="58" pos:column="24"/></return>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if>
        }<pos:position pos:line="60" pos:column="10"/></block></else></if>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">logf<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">&amp;&amp;<pos:position pos:line="63" pos:column="24"/></operator> <operator pos:line="63" pos:column="17">(<pos:position pos:line="63" pos:column="18"/></operator><operator pos:line="63" pos:column="18">(<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="19">level<pos:position pos:line="63" pos:column="24"/></name> <operator pos:line="63" pos:column="25">&amp;<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="27">APLOG_STARTUP<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">)<pos:position pos:line="63" pos:column="41"/></operator> <operator pos:line="63" pos:column="42">!=<pos:position pos:line="63" pos:column="44"/></operator> <name pos:line="63" pos:column="45">APLOG_STARTUP<pos:position pos:line="63" pos:column="58"/></name><operator pos:line="63" pos:column="58">)<pos:position pos:line="63" pos:column="59"/></operator></expr>)<pos:position pos:line="63" pos:column="60"/></condition><then pos:line="63" pos:column="60"> <block pos:line="63" pos:column="61">{
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">int<pos:position pos:line="64" pos:column="12"/></name></type> <name pos:line="64" pos:column="13">time_len<pos:position pos:line="64" pos:column="21"/></name></decl>;<pos:position pos:line="64" pos:column="22"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="66" pos:column="9">errstr<pos:position pos:line="66" pos:column="15"/></name><index pos:line="66" pos:column="15">[<expr><literal type="number" pos:line="66" pos:column="16">0<pos:position pos:line="66" pos:column="17"/></literal></expr>]<pos:position pos:line="66" pos:column="18"/></index></name> <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <literal type="char" pos:line="66" pos:column="21">'['<pos:position pos:line="66" pos:column="24"/></literal></expr>;<pos:position pos:line="66" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="67" pos:column="9">len<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <literal type="number" pos:line="67" pos:column="15">1<pos:position pos:line="67" pos:column="16"/></literal></expr>;<pos:position pos:line="67" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">time_len<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">=<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="20">MAX_STRING_LEN<pos:position pos:line="68" pos:column="34"/></name> <operator pos:line="68" pos:column="35">-<pos:position pos:line="68" pos:column="36"/></operator> <name pos:line="68" pos:column="37">len<pos:position pos:line="68" pos:column="40"/></name></expr>;<pos:position pos:line="68" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">ap_recent_ctime_ex<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name pos:line="69" pos:column="28">errstr<pos:position pos:line="69" pos:column="34"/></name> <operator pos:line="69" pos:column="35">+<pos:position pos:line="69" pos:column="36"/></operator> <name pos:line="69" pos:column="37">len<pos:position pos:line="69" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="42">apr_time_now<pos:position pos:line="69" pos:column="54"/></name><argument_list pos:line="69" pos:column="54">()<pos:position pos:line="69" pos:column="56"/></argument_list></call></expr></argument>,
                           <argument><expr><name pos:line="70" pos:column="28">AP_CTIME_OPTION_USEC<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="50">&amp;<pos:position pos:line="70" pos:column="55"/></operator><name pos:line="70" pos:column="51">time_len<pos:position pos:line="70" pos:column="59"/></name></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="71" pos:column="9">len<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">+=<pos:position pos:line="71" pos:column="15"/></operator> <name pos:line="71" pos:column="16">time_len<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">-<pos:position pos:line="71" pos:column="26"/></operator><literal type="number" pos:line="71" pos:column="26">1<pos:position pos:line="71" pos:column="27"/></literal></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">errstr<pos:position pos:line="72" pos:column="15"/></name><index pos:line="72" pos:column="15">[<expr><name pos:line="72" pos:column="16">len<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">++<pos:position pos:line="72" pos:column="21"/></operator></expr>]<pos:position pos:line="72" pos:column="22"/></index></name> <operator pos:line="72" pos:column="23">=<pos:position pos:line="72" pos:column="24"/></operator> <literal type="char" pos:line="72" pos:column="25">']'<pos:position pos:line="72" pos:column="28"/></literal></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">errstr<pos:position pos:line="73" pos:column="15"/></name><index pos:line="73" pos:column="15">[<expr><name pos:line="73" pos:column="16">len<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">++<pos:position pos:line="73" pos:column="21"/></operator></expr>]<pos:position pos:line="73" pos:column="22"/></index></name> <operator pos:line="73" pos:column="23">=<pos:position pos:line="73" pos:column="24"/></operator> <literal type="char" pos:line="73" pos:column="25">' '<pos:position pos:line="73" pos:column="28"/></literal></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then> <else pos:line="74" pos:column="7">else <block pos:line="74" pos:column="12">{
        <expr_stmt><expr><name pos:line="75" pos:column="9">len<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <literal type="number" pos:line="75" pos:column="15">0<pos:position pos:line="75" pos:column="16"/></literal></expr>;<pos:position pos:line="75" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></else></if>

    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><operator pos:line="78" pos:column="9">(<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">level<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">&amp;<pos:position pos:line="78" pos:column="21"/></operator> <name pos:line="78" pos:column="18">APLOG_STARTUP<pos:position pos:line="78" pos:column="31"/></name><operator pos:line="78" pos:column="31">)<pos:position pos:line="78" pos:column="32"/></operator> <operator pos:line="78" pos:column="33">!=<pos:position pos:line="78" pos:column="35"/></operator> <name pos:line="78" pos:column="36">APLOG_STARTUP<pos:position pos:line="78" pos:column="49"/></name></expr>)<pos:position pos:line="78" pos:column="50"/></condition><then pos:line="78" pos:column="50"> <block pos:line="78" pos:column="51">{
        <expr_stmt><expr><name pos:line="79" pos:column="9">len<pos:position pos:line="79" pos:column="12"/></name> <operator pos:line="79" pos:column="13">+=<pos:position pos:line="79" pos:column="15"/></operator> <call><name pos:line="79" pos:column="16">apr_snprintf<pos:position pos:line="79" pos:column="28"/></name><argument_list pos:line="79" pos:column="28">(<argument><expr><name pos:line="79" pos:column="29">errstr<pos:position pos:line="79" pos:column="35"/></name> <operator pos:line="79" pos:column="36">+<pos:position pos:line="79" pos:column="37"/></operator> <name pos:line="79" pos:column="38">len<pos:position pos:line="79" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="43">MAX_STRING_LEN<pos:position pos:line="79" pos:column="57"/></name> <operator pos:line="79" pos:column="58">-<pos:position pos:line="79" pos:column="59"/></operator> <name pos:line="79" pos:column="60">len<pos:position pos:line="79" pos:column="63"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="80" pos:column="29">"[%s] "<pos:position pos:line="80" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="38">priorities<pos:position pos:line="80" pos:column="48"/></name><index pos:line="80" pos:column="48">[<expr><name pos:line="80" pos:column="49">level_and_mask<pos:position pos:line="80" pos:column="63"/></name></expr>]<pos:position pos:line="80" pos:column="64"/></index></name><operator pos:line="80" pos:column="64">.<pos:position pos:line="80" pos:column="65"/></operator><name pos:line="80" pos:column="65">t_name<pos:position pos:line="80" pos:column="71"/></name></expr></argument>)<pos:position pos:line="80" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="73"/></expr_stmt>

        <expr_stmt><expr><name pos:line="82" pos:column="9">len<pos:position pos:line="82" pos:column="12"/></name> <operator pos:line="82" pos:column="13">+=<pos:position pos:line="82" pos:column="15"/></operator> <call><name pos:line="82" pos:column="16">apr_snprintf<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">errstr<pos:position pos:line="82" pos:column="35"/></name> <operator pos:line="82" pos:column="36">+<pos:position pos:line="82" pos:column="37"/></operator> <name pos:line="82" pos:column="38">len<pos:position pos:line="82" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="43">MAX_STRING_LEN<pos:position pos:line="82" pos:column="57"/></name> <operator pos:line="82" pos:column="58">-<pos:position pos:line="82" pos:column="59"/></operator> <name pos:line="82" pos:column="60">len<pos:position pos:line="82" pos:column="63"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="83" pos:column="29">"[pid %"<pos:position pos:line="83" pos:column="37"/></literal> <name pos:line="83" pos:column="38">APR_PID_T_FMT<pos:position pos:line="83" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="53">getpid<pos:position pos:line="83" pos:column="59"/></name><argument_list pos:line="83" pos:column="59">()<pos:position pos:line="83" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="63"/></expr_stmt>
<cpp:if pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">if<pos:position pos:line="84" pos:column="4"/></cpp:directive> <expr><name pos:line="84" pos:column="5">APR_HAS_THREADS<pos:position pos:line="84" pos:column="20"/></name></expr></cpp:if>
        <block pos:line="85" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="86" pos:column="13">int<pos:position pos:line="86" pos:column="16"/></name></type> <name pos:line="86" pos:column="17">result<pos:position pos:line="86" pos:column="23"/></name></decl>;<pos:position pos:line="86" pos:column="24"/></decl_stmt>

            <if pos:line="88" pos:column="13">if <condition pos:line="88" pos:column="16">(<expr><call><name pos:line="88" pos:column="17">ap_mpm_query<pos:position pos:line="88" pos:column="29"/></name><argument_list pos:line="88" pos:column="29">(<argument><expr><name pos:line="88" pos:column="30">AP_MPMQ_IS_THREADED<pos:position pos:line="88" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="51">&amp;<pos:position pos:line="88" pos:column="56"/></operator><name pos:line="88" pos:column="52">result<pos:position pos:line="88" pos:column="58"/></name></expr></argument>)<pos:position pos:line="88" pos:column="59"/></argument_list></call> <operator pos:line="88" pos:column="60">==<pos:position pos:line="88" pos:column="62"/></operator> <name pos:line="88" pos:column="63">APR_SUCCESS<pos:position pos:line="88" pos:column="74"/></name>
                <operator pos:line="89" pos:column="17">&amp;&amp;<pos:position pos:line="89" pos:column="27"/></operator> <name pos:line="89" pos:column="20">result<pos:position pos:line="89" pos:column="26"/></name> <operator pos:line="89" pos:column="27">!=<pos:position pos:line="89" pos:column="29"/></operator> <name pos:line="89" pos:column="30">AP_MPMQ_NOT_SUPPORTED<pos:position pos:line="89" pos:column="51"/></name></expr>)<pos:position pos:line="89" pos:column="52"/></condition><then pos:line="89" pos:column="52"> <block pos:line="89" pos:column="53">{
                <decl_stmt><decl><type><name pos:line="90" pos:column="17">apr_os_thread_t<pos:position pos:line="90" pos:column="32"/></name></type> <name pos:line="90" pos:column="33">tid<pos:position pos:line="90" pos:column="36"/></name> <init pos:line="90" pos:column="37">= <expr><call><name pos:line="90" pos:column="39">apr_os_thread_current<pos:position pos:line="90" pos:column="60"/></name><argument_list pos:line="90" pos:column="60">()<pos:position pos:line="90" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="90" pos:column="63"/></decl_stmt>
                <expr_stmt><expr><name pos:line="91" pos:column="17">len<pos:position pos:line="91" pos:column="20"/></name> <operator pos:line="91" pos:column="21">+=<pos:position pos:line="91" pos:column="23"/></operator> <call><name pos:line="91" pos:column="24">apr_snprintf<pos:position pos:line="91" pos:column="36"/></name><argument_list pos:line="91" pos:column="36">(<argument><expr><name pos:line="91" pos:column="37">errstr<pos:position pos:line="91" pos:column="43"/></name> <operator pos:line="91" pos:column="44">+<pos:position pos:line="91" pos:column="45"/></operator> <name pos:line="91" pos:column="46">len<pos:position pos:line="91" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="51">MAX_STRING_LEN<pos:position pos:line="91" pos:column="65"/></name> <operator pos:line="91" pos:column="66">-<pos:position pos:line="91" pos:column="67"/></operator> <name pos:line="91" pos:column="68">len<pos:position pos:line="91" pos:column="71"/></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="92" pos:column="37">":tid %pT"<pos:position pos:line="92" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="92" pos:column="49">&amp;<pos:position pos:line="92" pos:column="54"/></operator><name pos:line="92" pos:column="50">tid<pos:position pos:line="92" pos:column="53"/></name></expr></argument>)<pos:position pos:line="92" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="93" pos:column="14"/></block></then></if>
        }<pos:position pos:line="94" pos:column="10"/></block>
<cpp:endif pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">endif<pos:position pos:line="95" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name><name pos:line="96" pos:column="9">errstr<pos:position pos:line="96" pos:column="15"/></name><index pos:line="96" pos:column="15">[<expr><name pos:line="96" pos:column="16">len<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">++<pos:position pos:line="96" pos:column="21"/></operator></expr>]<pos:position pos:line="96" pos:column="22"/></index></name> <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <literal type="char" pos:line="96" pos:column="25">']'<pos:position pos:line="96" pos:column="28"/></literal></expr>;<pos:position pos:line="96" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">errstr<pos:position pos:line="97" pos:column="15"/></name><index pos:line="97" pos:column="15">[<expr><name pos:line="97" pos:column="16">len<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">++<pos:position pos:line="97" pos:column="21"/></operator></expr>]<pos:position pos:line="97" pos:column="22"/></index></name> <operator pos:line="97" pos:column="23">=<pos:position pos:line="97" pos:column="24"/></operator> <literal type="char" pos:line="97" pos:column="25">' '<pos:position pos:line="97" pos:column="28"/></literal></expr>;<pos:position pos:line="97" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name pos:line="100" pos:column="9">file<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">&amp;&amp;<pos:position pos:line="100" pos:column="24"/></operator> <name pos:line="100" pos:column="17">level_and_mask<pos:position pos:line="100" pos:column="31"/></name> <operator pos:line="100" pos:column="32">&gt;=<pos:position pos:line="100" pos:column="37"/></operator> <name pos:line="100" pos:column="35">APLOG_DEBUG<pos:position pos:line="100" pos:column="46"/></name></expr>)<pos:position pos:line="100" pos:column="47"/></condition><then pos:line="100" pos:column="47"> <block pos:line="100" pos:column="48">{
<cpp:if pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">if<pos:position pos:line="101" pos:column="4"/></cpp:directive> <expr><call><name pos:line="101" pos:column="5">defined<pos:position pos:line="101" pos:column="12"/></name><argument_list pos:line="101" pos:column="12">(<argument><expr><name pos:line="101" pos:column="13">_OSD_POSIX<pos:position pos:line="101" pos:column="23"/></name></expr></argument>)<pos:position pos:line="101" pos:column="24"/></argument_list></call> <operator pos:line="101" pos:column="25">||<pos:position pos:line="101" pos:column="27"/></operator> <call><name pos:line="101" pos:column="28">defined<pos:position pos:line="101" pos:column="35"/></name><argument_list pos:line="101" pos:column="35">(<argument><expr><name pos:line="101" pos:column="36">WIN32<pos:position pos:line="101" pos:column="41"/></name></expr></argument>)<pos:position pos:line="101" pos:column="42"/></argument_list></call> <operator pos:line="101" pos:column="43">||<pos:position pos:line="101" pos:column="45"/></operator> <call><name pos:line="101" pos:column="46">defined<pos:position pos:line="101" pos:column="53"/></name><argument_list pos:line="101" pos:column="53">(<argument><expr><name pos:line="101" pos:column="54">__MVS__<pos:position pos:line="101" pos:column="61"/></name></expr></argument>)<pos:position pos:line="101" pos:column="62"/></argument_list></call></expr></cpp:if>
        <decl_stmt><decl><type><name pos:line="102" pos:column="9">char<pos:position pos:line="102" pos:column="13"/></name></type> <name><name pos:line="102" pos:column="14">tmp<pos:position pos:line="102" pos:column="17"/></name><index pos:line="102" pos:column="17">[<expr><literal type="number" pos:line="102" pos:column="18">256<pos:position pos:line="102" pos:column="21"/></literal></expr>]<pos:position pos:line="102" pos:column="22"/></index></name></decl>;<pos:position pos:line="102" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="103" pos:column="9">char<pos:position pos:line="103" pos:column="13"/></name> <modifier pos:line="103" pos:column="14">*<pos:position pos:line="103" pos:column="15"/></modifier></type><name pos:line="103" pos:column="15">e<pos:position pos:line="103" pos:column="16"/></name> <init pos:line="103" pos:column="17">= <expr><call><name pos:line="103" pos:column="19">strrchr<pos:position pos:line="103" pos:column="26"/></name><argument_list pos:line="103" pos:column="26">(<argument><expr><name pos:line="103" pos:column="27">file<pos:position pos:line="103" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="103" pos:column="33">'/'<pos:position pos:line="103" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="103" pos:column="38"/></decl_stmt>
<cpp:ifdef pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">ifdef<pos:position pos:line="104" pos:column="7"/></cpp:directive> <name pos:line="104" pos:column="8">WIN32<pos:position pos:line="104" pos:column="13"/></name></cpp:ifdef>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><operator pos:line="105" pos:column="13">!<pos:position pos:line="105" pos:column="14"/></operator><name pos:line="105" pos:column="14">e<pos:position pos:line="105" pos:column="15"/></name></expr>)<pos:position pos:line="105" pos:column="16"/></condition><then pos:line="105" pos:column="16"> <block pos:line="105" pos:column="17">{
            <expr_stmt><expr><name pos:line="106" pos:column="13">e<pos:position pos:line="106" pos:column="14"/></name> <operator pos:line="106" pos:column="15">=<pos:position pos:line="106" pos:column="16"/></operator> <call><name pos:line="106" pos:column="17">strrchr<pos:position pos:line="106" pos:column="24"/></name><argument_list pos:line="106" pos:column="24">(<argument><expr><name pos:line="106" pos:column="25">file<pos:position pos:line="106" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="106" pos:column="31">'\\'<pos:position pos:line="106" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="110" pos:column="9">/* In OSD/POSIX, the compiler returns for __FILE__
         * a string like: __FILE__="*POSIX(/usr/include/stdio.h)"
         * (it even returns an absolute path for sources in
         * the current directory). Here we try to strip this
         * down to the basename.
         */</comment>
        <if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">e<pos:position pos:line="116" pos:column="14"/></name> <operator pos:line="116" pos:column="15">!=<pos:position pos:line="116" pos:column="17"/></operator> <name pos:line="116" pos:column="18">NULL<pos:position pos:line="116" pos:column="22"/></name> <operator pos:line="116" pos:column="23">&amp;&amp;<pos:position pos:line="116" pos:column="33"/></operator> <name><name pos:line="116" pos:column="26">e<pos:position pos:line="116" pos:column="27"/></name><index pos:line="116" pos:column="27">[<expr><literal type="number" pos:line="116" pos:column="28">1<pos:position pos:line="116" pos:column="29"/></literal></expr>]<pos:position pos:line="116" pos:column="30"/></index></name> <operator pos:line="116" pos:column="31">!=<pos:position pos:line="116" pos:column="33"/></operator> <literal type="char" pos:line="116" pos:column="34">'\0'<pos:position pos:line="116" pos:column="38"/></literal></expr>)<pos:position pos:line="116" pos:column="39"/></condition><then pos:line="116" pos:column="39"> <block pos:line="116" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">apr_snprintf<pos:position pos:line="117" pos:column="25"/></name><argument_list pos:line="117" pos:column="25">(<argument><expr><name pos:line="117" pos:column="26">tmp<pos:position pos:line="117" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="117" pos:column="31">sizeof<argument_list pos:line="117" pos:column="37">(<argument><expr><name pos:line="117" pos:column="38">tmp<pos:position pos:line="117" pos:column="41"/></name></expr></argument>)<pos:position pos:line="117" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="44">"%s"<pos:position pos:line="117" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="117" pos:column="50">&amp;<pos:position pos:line="117" pos:column="55"/></operator><name><name pos:line="117" pos:column="51">e<pos:position pos:line="117" pos:column="52"/></name><index pos:line="117" pos:column="52">[<expr><literal type="number" pos:line="117" pos:column="53">1<pos:position pos:line="117" pos:column="54"/></literal></expr>]<pos:position pos:line="117" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="117" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="118" pos:column="13">e<pos:position pos:line="118" pos:column="14"/></name> <operator pos:line="118" pos:column="15">=<pos:position pos:line="118" pos:column="16"/></operator> <operator pos:line="118" pos:column="17">&amp;<pos:position pos:line="118" pos:column="22"/></operator><name><name pos:line="118" pos:column="18">tmp<pos:position pos:line="118" pos:column="21"/></name><index pos:line="118" pos:column="21">[<expr><call><name pos:line="118" pos:column="22">strlen<pos:position pos:line="118" pos:column="28"/></name><argument_list pos:line="118" pos:column="28">(<argument><expr><name pos:line="118" pos:column="29">tmp<pos:position pos:line="118" pos:column="32"/></name></expr></argument>)<pos:position pos:line="118" pos:column="33"/></argument_list></call><operator pos:line="118" pos:column="33">-<pos:position pos:line="118" pos:column="34"/></operator><literal type="number" pos:line="118" pos:column="34">1<pos:position pos:line="118" pos:column="35"/></literal></expr>]<pos:position pos:line="118" pos:column="36"/></index></name></expr>;<pos:position pos:line="118" pos:column="37"/></expr_stmt>
            <if pos:line="119" pos:column="13">if <condition pos:line="119" pos:column="16">(<expr><operator pos:line="119" pos:column="17">*<pos:position pos:line="119" pos:column="18"/></operator><name pos:line="119" pos:column="18">e<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">==<pos:position pos:line="119" pos:column="22"/></operator> <literal type="char" pos:line="119" pos:column="23">')'<pos:position pos:line="119" pos:column="26"/></literal></expr>)<pos:position pos:line="119" pos:column="27"/></condition><then pos:line="119" pos:column="27"> <block pos:line="119" pos:column="28">{
                <expr_stmt><expr><operator pos:line="120" pos:column="17">*<pos:position pos:line="120" pos:column="18"/></operator><name pos:line="120" pos:column="18">e<pos:position pos:line="120" pos:column="19"/></name> <operator pos:line="120" pos:column="20">=<pos:position pos:line="120" pos:column="21"/></operator> <literal type="char" pos:line="120" pos:column="22">'\0'<pos:position pos:line="120" pos:column="26"/></literal></expr>;<pos:position pos:line="120" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="121" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="122" pos:column="13">file<pos:position pos:line="122" pos:column="17"/></name> <operator pos:line="122" pos:column="18">=<pos:position pos:line="122" pos:column="19"/></operator> <name pos:line="122" pos:column="20">tmp<pos:position pos:line="122" pos:column="23"/></name></expr>;<pos:position pos:line="122" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="123" pos:column="10"/></block></then></if>
<cpp:else pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">else<pos:position pos:line="124" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="124" pos:column="7">/* _OSD_POSIX || WIN32 */</comment>
        <decl_stmt><decl><type><specifier pos:line="125" pos:column="9">const<pos:position pos:line="125" pos:column="14"/></specifier> <name pos:line="125" pos:column="15">char<pos:position pos:line="125" pos:column="19"/></name> <modifier pos:line="125" pos:column="20">*<pos:position pos:line="125" pos:column="21"/></modifier></type><name pos:line="125" pos:column="21">p<pos:position pos:line="125" pos:column="22"/></name></decl>;<pos:position pos:line="125" pos:column="23"/></decl_stmt>
        <comment type="block" pos:line="126" pos:column="9">/* On Unix, __FILE__ may be an absolute path in a
         * VPATH build. */</comment>
        <if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><name><name pos:line="128" pos:column="13">file<pos:position pos:line="128" pos:column="17"/></name><index pos:line="128" pos:column="17">[<expr><literal type="number" pos:line="128" pos:column="18">0<pos:position pos:line="128" pos:column="19"/></literal></expr>]<pos:position pos:line="128" pos:column="20"/></index></name> <operator pos:line="128" pos:column="21">==<pos:position pos:line="128" pos:column="23"/></operator> <literal type="char" pos:line="128" pos:column="24">'/'<pos:position pos:line="128" pos:column="27"/></literal> <operator pos:line="128" pos:column="28">&amp;&amp;<pos:position pos:line="128" pos:column="38"/></operator> <operator pos:line="128" pos:column="31">(<pos:position pos:line="128" pos:column="32"/></operator><name pos:line="128" pos:column="32">p<pos:position pos:line="128" pos:column="33"/></name> <operator pos:line="128" pos:column="34">=<pos:position pos:line="128" pos:column="35"/></operator> <call><name pos:line="128" pos:column="36">ap_strrchr_c<pos:position pos:line="128" pos:column="48"/></name><argument_list pos:line="128" pos:column="48">(<argument><expr><name pos:line="128" pos:column="49">file<pos:position pos:line="128" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="128" pos:column="55">'/'<pos:position pos:line="128" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="59"/></argument_list></call><operator pos:line="128" pos:column="59">)<pos:position pos:line="128" pos:column="60"/></operator> <operator pos:line="128" pos:column="61">!=<pos:position pos:line="128" pos:column="63"/></operator> <name pos:line="128" pos:column="64">NULL<pos:position pos:line="128" pos:column="68"/></name></expr>)<pos:position pos:line="128" pos:column="69"/></condition><then pos:line="128" pos:column="69"> <block pos:line="128" pos:column="70">{
            <expr_stmt><expr><name pos:line="129" pos:column="13">file<pos:position pos:line="129" pos:column="17"/></name> <operator pos:line="129" pos:column="18">=<pos:position pos:line="129" pos:column="19"/></operator> <name pos:line="129" pos:column="20">p<pos:position pos:line="129" pos:column="21"/></name> <operator pos:line="129" pos:column="22">+<pos:position pos:line="129" pos:column="23"/></operator> <literal type="number" pos:line="129" pos:column="24">1<pos:position pos:line="129" pos:column="25"/></literal></expr>;<pos:position pos:line="129" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="130" pos:column="10"/></block></then></if>
<cpp:endif pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">endif<pos:position pos:line="131" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="131" pos:column="8">/*_OSD_POSIX || WIN32 */</comment>
        <expr_stmt><expr><name pos:line="132" pos:column="9">len<pos:position pos:line="132" pos:column="12"/></name> <operator pos:line="132" pos:column="13">+=<pos:position pos:line="132" pos:column="15"/></operator> <call><name pos:line="132" pos:column="16">apr_snprintf<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><name pos:line="132" pos:column="29">errstr<pos:position pos:line="132" pos:column="35"/></name> <operator pos:line="132" pos:column="36">+<pos:position pos:line="132" pos:column="37"/></operator> <name pos:line="132" pos:column="38">len<pos:position pos:line="132" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="43">MAX_STRING_LEN<pos:position pos:line="132" pos:column="57"/></name> <operator pos:line="132" pos:column="58">-<pos:position pos:line="132" pos:column="59"/></operator> <name pos:line="132" pos:column="60">len<pos:position pos:line="132" pos:column="63"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="133" pos:column="29">"%s(%d): "<pos:position pos:line="133" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="133" pos:column="41">file<pos:position pos:line="133" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="47">line<pos:position pos:line="133" pos:column="51"/></name></expr></argument>)<pos:position pos:line="133" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></then></if>

    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><name pos:line="136" pos:column="9">c<pos:position pos:line="136" pos:column="10"/></name></expr>)<pos:position pos:line="136" pos:column="11"/></condition><then pos:line="136" pos:column="11"> <block pos:line="136" pos:column="12">{
        <comment type="block" pos:line="137" pos:column="9">/* XXX: TODO: add a method of selecting whether logged remote
         * addresses are in dotted quad or resolved form... dotted
         * quad is the most secure, which is why I'm implementing it
         * first. -djg
         */</comment>
        <comment type="block" pos:line="142" pos:column="9">/*
         * remote_ip can be client or backend server. If we have a scoreboard
         * handle, it is likely a client.
         */</comment>
        <expr_stmt><expr><name pos:line="146" pos:column="9">len<pos:position pos:line="146" pos:column="12"/></name> <operator pos:line="146" pos:column="13">+=<pos:position pos:line="146" pos:column="15"/></operator> <call><name pos:line="146" pos:column="16">apr_snprintf<pos:position pos:line="146" pos:column="28"/></name><argument_list pos:line="146" pos:column="28">(<argument><expr><name pos:line="146" pos:column="29">errstr<pos:position pos:line="146" pos:column="35"/></name> <operator pos:line="146" pos:column="36">+<pos:position pos:line="146" pos:column="37"/></operator> <name pos:line="146" pos:column="38">len<pos:position pos:line="146" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="43">MAX_STRING_LEN<pos:position pos:line="146" pos:column="57"/></name> <operator pos:line="146" pos:column="58">-<pos:position pos:line="146" pos:column="59"/></operator> <name pos:line="146" pos:column="60">len<pos:position pos:line="146" pos:column="63"/></name></expr></argument>,
                            <argument><expr><ternary><condition><expr><name><name pos:line="147" pos:column="29">c<pos:position pos:line="147" pos:column="30"/></name><operator pos:line="147" pos:column="30">-&gt;<pos:position pos:line="147" pos:column="35"/></operator><name pos:line="147" pos:column="32">sbh<pos:position pos:line="147" pos:column="35"/></name></name></expr> ?<pos:position pos:line="147" pos:column="37"/></condition><then pos:line="147" pos:column="37"> <expr><literal type="string" pos:line="147" pos:column="38">"[client %s:%d] "<pos:position pos:line="147" pos:column="55"/></literal></expr> <pos:position pos:line="147" pos:column="56"/></then><else pos:line="147" pos:column="56">: <expr><literal type="string" pos:line="147" pos:column="58">"[remote %s:%d] "<pos:position pos:line="147" pos:column="75"/></literal></expr></else></ternary></expr></argument>,
                            <argument><expr><name><name pos:line="148" pos:column="29">c<pos:position pos:line="148" pos:column="30"/></name><operator pos:line="148" pos:column="30">-&gt;<pos:position pos:line="148" pos:column="35"/></operator><name pos:line="148" pos:column="32">remote_ip<pos:position pos:line="148" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="43">c<pos:position pos:line="148" pos:column="44"/></name><operator pos:line="148" pos:column="44">-&gt;<pos:position pos:line="148" pos:column="49"/></operator><name pos:line="148" pos:column="46">remote_addr<pos:position pos:line="148" pos:column="57"/></name><operator pos:line="148" pos:column="57">-&gt;<pos:position pos:line="148" pos:column="62"/></operator><name pos:line="148" pos:column="59">port<pos:position pos:line="148" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="149" pos:column="6"/></block></then></if>
    <if pos:line="150" pos:column="5">if <condition pos:line="150" pos:column="8">(<expr><name pos:line="150" pos:column="9">status<pos:position pos:line="150" pos:column="15"/></name> <operator pos:line="150" pos:column="16">!=<pos:position pos:line="150" pos:column="18"/></operator> <literal type="number" pos:line="150" pos:column="19">0<pos:position pos:line="150" pos:column="20"/></literal></expr>)<pos:position pos:line="150" pos:column="21"/></condition><then pos:line="150" pos:column="21"> <block pos:line="150" pos:column="22">{
        <if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">status<pos:position pos:line="151" pos:column="19"/></name> <operator pos:line="151" pos:column="20">&lt;<pos:position pos:line="151" pos:column="24"/></operator> <name pos:line="151" pos:column="22">APR_OS_START_EAIERR<pos:position pos:line="151" pos:column="41"/></name></expr>)<pos:position pos:line="151" pos:column="42"/></condition><then pos:line="151" pos:column="42"> <block pos:line="151" pos:column="43">{
            <expr_stmt><expr><name pos:line="152" pos:column="13">len<pos:position pos:line="152" pos:column="16"/></name> <operator pos:line="152" pos:column="17">+=<pos:position pos:line="152" pos:column="19"/></operator> <call><name pos:line="152" pos:column="20">apr_snprintf<pos:position pos:line="152" pos:column="32"/></name><argument_list pos:line="152" pos:column="32">(<argument><expr><name pos:line="152" pos:column="33">errstr<pos:position pos:line="152" pos:column="39"/></name> <operator pos:line="152" pos:column="40">+<pos:position pos:line="152" pos:column="41"/></operator> <name pos:line="152" pos:column="42">len<pos:position pos:line="152" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="47">MAX_STRING_LEN<pos:position pos:line="152" pos:column="61"/></name> <operator pos:line="152" pos:column="62">-<pos:position pos:line="152" pos:column="63"/></operator> <name pos:line="152" pos:column="64">len<pos:position pos:line="152" pos:column="67"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="153" pos:column="33">"(%d)"<pos:position pos:line="153" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="41">status<pos:position pos:line="153" pos:column="47"/></name></expr></argument>)<pos:position pos:line="153" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="154" pos:column="10"/></block></then>
        <elseif pos:line="155" pos:column="9">else <if pos:line="155" pos:column="14">if <condition pos:line="155" pos:column="17">(<expr><name pos:line="155" pos:column="18">status<pos:position pos:line="155" pos:column="24"/></name> <operator pos:line="155" pos:column="25">&lt;<pos:position pos:line="155" pos:column="29"/></operator> <name pos:line="155" pos:column="27">APR_OS_START_SYSERR<pos:position pos:line="155" pos:column="46"/></name></expr>)<pos:position pos:line="155" pos:column="47"/></condition><then pos:line="155" pos:column="47"> <block pos:line="155" pos:column="48">{
            <expr_stmt><expr><name pos:line="156" pos:column="13">len<pos:position pos:line="156" pos:column="16"/></name> <operator pos:line="156" pos:column="17">+=<pos:position pos:line="156" pos:column="19"/></operator> <call><name pos:line="156" pos:column="20">apr_snprintf<pos:position pos:line="156" pos:column="32"/></name><argument_list pos:line="156" pos:column="32">(<argument><expr><name pos:line="156" pos:column="33">errstr<pos:position pos:line="156" pos:column="39"/></name> <operator pos:line="156" pos:column="40">+<pos:position pos:line="156" pos:column="41"/></operator> <name pos:line="156" pos:column="42">len<pos:position pos:line="156" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="47">MAX_STRING_LEN<pos:position pos:line="156" pos:column="61"/></name> <operator pos:line="156" pos:column="62">-<pos:position pos:line="156" pos:column="63"/></operator> <name pos:line="156" pos:column="64">len<pos:position pos:line="156" pos:column="67"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="157" pos:column="33">"(EAI %d)"<pos:position pos:line="157" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="157" pos:column="45">status<pos:position pos:line="157" pos:column="51"/></name> <operator pos:line="157" pos:column="52">-<pos:position pos:line="157" pos:column="53"/></operator> <name pos:line="157" pos:column="54">APR_OS_START_EAIERR<pos:position pos:line="157" pos:column="73"/></name></expr></argument>)<pos:position pos:line="157" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="158" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="159" pos:column="9">else <if pos:line="159" pos:column="14">if <condition pos:line="159" pos:column="17">(<expr><name pos:line="159" pos:column="18">status<pos:position pos:line="159" pos:column="24"/></name> <operator pos:line="159" pos:column="25">&lt;<pos:position pos:line="159" pos:column="29"/></operator> <literal type="number" pos:line="159" pos:column="27">100000<pos:position pos:line="159" pos:column="33"/></literal> <operator pos:line="159" pos:column="34">+<pos:position pos:line="159" pos:column="35"/></operator> <name pos:line="159" pos:column="36">APR_OS_START_SYSERR<pos:position pos:line="159" pos:column="55"/></name></expr>)<pos:position pos:line="159" pos:column="56"/></condition><then pos:line="159" pos:column="56"> <block pos:line="159" pos:column="57">{
            <expr_stmt><expr><name pos:line="160" pos:column="13">len<pos:position pos:line="160" pos:column="16"/></name> <operator pos:line="160" pos:column="17">+=<pos:position pos:line="160" pos:column="19"/></operator> <call><name pos:line="160" pos:column="20">apr_snprintf<pos:position pos:line="160" pos:column="32"/></name><argument_list pos:line="160" pos:column="32">(<argument><expr><name pos:line="160" pos:column="33">errstr<pos:position pos:line="160" pos:column="39"/></name> <operator pos:line="160" pos:column="40">+<pos:position pos:line="160" pos:column="41"/></operator> <name pos:line="160" pos:column="42">len<pos:position pos:line="160" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="47">MAX_STRING_LEN<pos:position pos:line="160" pos:column="61"/></name> <operator pos:line="160" pos:column="62">-<pos:position pos:line="160" pos:column="63"/></operator> <name pos:line="160" pos:column="64">len<pos:position pos:line="160" pos:column="67"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="161" pos:column="33">"(OS %d)"<pos:position pos:line="161" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="161" pos:column="44">status<pos:position pos:line="161" pos:column="50"/></name> <operator pos:line="161" pos:column="51">-<pos:position pos:line="161" pos:column="52"/></operator> <name pos:line="161" pos:column="53">APR_OS_START_SYSERR<pos:position pos:line="161" pos:column="72"/></name></expr></argument>)<pos:position pos:line="161" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="162" pos:column="10"/></block></then></if></elseif>
        <else pos:line="163" pos:column="9">else <block pos:line="163" pos:column="14">{
            <expr_stmt><expr><name pos:line="164" pos:column="13">len<pos:position pos:line="164" pos:column="16"/></name> <operator pos:line="164" pos:column="17">+=<pos:position pos:line="164" pos:column="19"/></operator> <call><name pos:line="164" pos:column="20">apr_snprintf<pos:position pos:line="164" pos:column="32"/></name><argument_list pos:line="164" pos:column="32">(<argument><expr><name pos:line="164" pos:column="33">errstr<pos:position pos:line="164" pos:column="39"/></name> <operator pos:line="164" pos:column="40">+<pos:position pos:line="164" pos:column="41"/></operator> <name pos:line="164" pos:column="42">len<pos:position pos:line="164" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="47">MAX_STRING_LEN<pos:position pos:line="164" pos:column="61"/></name> <operator pos:line="164" pos:column="62">-<pos:position pos:line="164" pos:column="63"/></operator> <name pos:line="164" pos:column="64">len<pos:position pos:line="164" pos:column="67"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="165" pos:column="33">"(os 0x%08x)"<pos:position pos:line="165" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="165" pos:column="48">status<pos:position pos:line="165" pos:column="54"/></name> <operator pos:line="165" pos:column="55">-<pos:position pos:line="165" pos:column="56"/></operator> <name pos:line="165" pos:column="57">APR_OS_START_SYSERR<pos:position pos:line="165" pos:column="76"/></name></expr></argument>)<pos:position pos:line="165" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="166" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="167" pos:column="9">apr_strerror<pos:position pos:line="167" pos:column="21"/></name><argument_list pos:line="167" pos:column="21">(<argument><expr><name pos:line="167" pos:column="22">status<pos:position pos:line="167" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="30">errstr<pos:position pos:line="167" pos:column="36"/></name> <operator pos:line="167" pos:column="37">+<pos:position pos:line="167" pos:column="38"/></operator> <name pos:line="167" pos:column="39">len<pos:position pos:line="167" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="44">MAX_STRING_LEN<pos:position pos:line="167" pos:column="58"/></name> <operator pos:line="167" pos:column="59">-<pos:position pos:line="167" pos:column="60"/></operator> <name pos:line="167" pos:column="61">len<pos:position pos:line="167" pos:column="64"/></name></expr></argument>)<pos:position pos:line="167" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name pos:line="168" pos:column="9">len<pos:position pos:line="168" pos:column="12"/></name> <operator pos:line="168" pos:column="13">+=<pos:position pos:line="168" pos:column="15"/></operator> <call><name pos:line="168" pos:column="16">strlen<pos:position pos:line="168" pos:column="22"/></name><argument_list pos:line="168" pos:column="22">(<argument><expr><name pos:line="168" pos:column="23">errstr<pos:position pos:line="168" pos:column="29"/></name> <operator pos:line="168" pos:column="30">+<pos:position pos:line="168" pos:column="31"/></operator> <name pos:line="168" pos:column="32">len<pos:position pos:line="168" pos:column="35"/></name></expr></argument>)<pos:position pos:line="168" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="37"/></expr_stmt>
        <if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><name pos:line="169" pos:column="13">MAX_STRING_LEN<pos:position pos:line="169" pos:column="27"/></name> <operator pos:line="169" pos:column="28">-<pos:position pos:line="169" pos:column="29"/></operator> <name pos:line="169" pos:column="30">len<pos:position pos:line="169" pos:column="33"/></name> <operator pos:line="169" pos:column="34">&gt;<pos:position pos:line="169" pos:column="38"/></operator> <literal type="number" pos:line="169" pos:column="36">2<pos:position pos:line="169" pos:column="37"/></literal></expr>)<pos:position pos:line="169" pos:column="38"/></condition><then pos:line="169" pos:column="38"> <block pos:line="169" pos:column="39">{
            <expr_stmt><expr><name><name pos:line="170" pos:column="13">errstr<pos:position pos:line="170" pos:column="19"/></name><index pos:line="170" pos:column="19">[<expr><name pos:line="170" pos:column="20">len<pos:position pos:line="170" pos:column="23"/></name><operator pos:line="170" pos:column="23">++<pos:position pos:line="170" pos:column="25"/></operator></expr>]<pos:position pos:line="170" pos:column="26"/></index></name> <operator pos:line="170" pos:column="27">=<pos:position pos:line="170" pos:column="28"/></operator> <literal type="char" pos:line="170" pos:column="29">':'<pos:position pos:line="170" pos:column="32"/></literal></expr>;<pos:position pos:line="170" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="171" pos:column="13">errstr<pos:position pos:line="171" pos:column="19"/></name><index pos:line="171" pos:column="19">[<expr><name pos:line="171" pos:column="20">len<pos:position pos:line="171" pos:column="23"/></name><operator pos:line="171" pos:column="23">++<pos:position pos:line="171" pos:column="25"/></operator></expr>]<pos:position pos:line="171" pos:column="26"/></index></name> <operator pos:line="171" pos:column="27">=<pos:position pos:line="171" pos:column="28"/></operator> <literal type="char" pos:line="171" pos:column="29">' '<pos:position pos:line="171" pos:column="32"/></literal></expr>;<pos:position pos:line="171" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="172" pos:column="13">errstr<pos:position pos:line="172" pos:column="19"/></name><index pos:line="172" pos:column="19">[<expr><name pos:line="172" pos:column="20">len<pos:position pos:line="172" pos:column="23"/></name></expr>]<pos:position pos:line="172" pos:column="24"/></index></name> <operator pos:line="172" pos:column="25">=<pos:position pos:line="172" pos:column="26"/></operator> <literal type="char" pos:line="172" pos:column="27">'\0'<pos:position pos:line="172" pos:column="31"/></literal></expr>;<pos:position pos:line="172" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="173" pos:column="10"/></block></then></if>
    }<pos:position pos:line="174" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="176" pos:column="5">errstrlen<pos:position pos:line="176" pos:column="14"/></name> <operator pos:line="176" pos:column="15">=<pos:position pos:line="176" pos:column="16"/></operator> <name pos:line="176" pos:column="17">len<pos:position pos:line="176" pos:column="20"/></name></expr>;<pos:position pos:line="176" pos:column="21"/></expr_stmt>
<cpp:ifndef pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">ifndef<pos:position pos:line="177" pos:column="8"/></cpp:directive> <name pos:line="177" pos:column="9">AP_UNSAFE_ERROR_LOG_UNESCAPED<pos:position pos:line="177" pos:column="38"/></name></cpp:ifndef>
    <if pos:line="178" pos:column="5">if <condition pos:line="178" pos:column="8">(<expr><call><name pos:line="178" pos:column="9">apr_vsnprintf<pos:position pos:line="178" pos:column="22"/></name><argument_list pos:line="178" pos:column="22">(<argument><expr><name pos:line="178" pos:column="23">scratch<pos:position pos:line="178" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="32">MAX_STRING_LEN<pos:position pos:line="178" pos:column="46"/></name> <operator pos:line="178" pos:column="47">-<pos:position pos:line="178" pos:column="48"/></operator> <name pos:line="178" pos:column="49">len<pos:position pos:line="178" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="54">fmt<pos:position pos:line="178" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="59">args<pos:position pos:line="178" pos:column="63"/></name></expr></argument>)<pos:position pos:line="178" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="178" pos:column="65"/></condition><then pos:line="178" pos:column="65"> <block pos:line="178" pos:column="66">{
        <expr_stmt><expr><name pos:line="179" pos:column="9">len<pos:position pos:line="179" pos:column="12"/></name> <operator pos:line="179" pos:column="13">+=<pos:position pos:line="179" pos:column="15"/></operator> <call><name pos:line="179" pos:column="16">ap_escape_errorlog_item<pos:position pos:line="179" pos:column="39"/></name><argument_list pos:line="179" pos:column="39">(<argument><expr><name pos:line="179" pos:column="40">errstr<pos:position pos:line="179" pos:column="46"/></name> <operator pos:line="179" pos:column="47">+<pos:position pos:line="179" pos:column="48"/></operator> <name pos:line="179" pos:column="49">len<pos:position pos:line="179" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="54">scratch<pos:position pos:line="179" pos:column="61"/></name></expr></argument>,
                                       <argument><expr><name pos:line="180" pos:column="40">MAX_STRING_LEN<pos:position pos:line="180" pos:column="54"/></name> <operator pos:line="180" pos:column="55">-<pos:position pos:line="180" pos:column="56"/></operator> <name pos:line="180" pos:column="57">len<pos:position pos:line="180" pos:column="60"/></name></expr></argument>)<pos:position pos:line="180" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="181" pos:column="6"/></block></then></if>
<cpp:else pos:line="182" pos:column="1">#<cpp:directive pos:line="182" pos:column="2">else<pos:position pos:line="182" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="183" pos:column="5">len<pos:position pos:line="183" pos:column="8"/></name> <operator pos:line="183" pos:column="9">+=<pos:position pos:line="183" pos:column="11"/></operator> <call><name pos:line="183" pos:column="12">apr_vsnprintf<pos:position pos:line="183" pos:column="25"/></name><argument_list pos:line="183" pos:column="25">(<argument><expr><name pos:line="183" pos:column="26">errstr<pos:position pos:line="183" pos:column="32"/></name> <operator pos:line="183" pos:column="33">+<pos:position pos:line="183" pos:column="34"/></operator> <name pos:line="183" pos:column="35">len<pos:position pos:line="183" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="40">MAX_STRING_LEN<pos:position pos:line="183" pos:column="54"/></name> <operator pos:line="183" pos:column="55">-<pos:position pos:line="183" pos:column="56"/></operator> <name pos:line="183" pos:column="57">len<pos:position pos:line="183" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="62">fmt<pos:position pos:line="183" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="67">args<pos:position pos:line="183" pos:column="71"/></name></expr></argument>)<pos:position pos:line="183" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="73"/></expr_stmt>
<cpp:endif pos:line="184" pos:column="1">#<cpp:directive pos:line="184" pos:column="2">endif<pos:position pos:line="184" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="186" pos:column="5">if <condition pos:line="186" pos:column="8">(   <expr><name pos:line="186" pos:column="12">r<pos:position pos:line="186" pos:column="13"/></name> <operator pos:line="186" pos:column="14">&amp;&amp;<pos:position pos:line="186" pos:column="24"/></operator> <operator pos:line="186" pos:column="17">(<pos:position pos:line="186" pos:column="18"/></operator><name pos:line="186" pos:column="18">referer<pos:position pos:line="186" pos:column="25"/></name> <operator pos:line="186" pos:column="26">=<pos:position pos:line="186" pos:column="27"/></operator> <call><name pos:line="186" pos:column="28">apr_table_get<pos:position pos:line="186" pos:column="41"/></name><argument_list pos:line="186" pos:column="41">(<argument><expr><name><name pos:line="186" pos:column="42">r<pos:position pos:line="186" pos:column="43"/></name><operator pos:line="186" pos:column="43">-&gt;<pos:position pos:line="186" pos:column="48"/></operator><name pos:line="186" pos:column="45">headers_in<pos:position pos:line="186" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="186" pos:column="57">"Referer"<pos:position pos:line="186" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="186" pos:column="67"/></argument_list></call><operator pos:line="186" pos:column="67">)<pos:position pos:line="186" pos:column="68"/></operator>
<cpp:ifndef pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">ifndef<pos:position pos:line="187" pos:column="8"/></cpp:directive> <name pos:line="187" pos:column="9">AP_UNSAFE_ERROR_LOG_UNESCAPED<pos:position pos:line="187" pos:column="38"/></name></cpp:ifndef>
        <operator pos:line="188" pos:column="9">&amp;&amp;<pos:position pos:line="188" pos:column="19"/></operator> <call><name pos:line="188" pos:column="12">ap_escape_errorlog_item<pos:position pos:line="188" pos:column="35"/></name><argument_list pos:line="188" pos:column="35">(<argument><expr><name pos:line="188" pos:column="36">scratch<pos:position pos:line="188" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="45">referer<pos:position pos:line="188" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="54">MAX_STRING_LEN<pos:position pos:line="188" pos:column="68"/></name> <operator pos:line="188" pos:column="69">-<pos:position pos:line="188" pos:column="70"/></operator> <name pos:line="188" pos:column="71">len<pos:position pos:line="188" pos:column="74"/></name></expr></argument>)<pos:position pos:line="188" pos:column="75"/></argument_list></call></expr>
<cpp:endif pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">endif<pos:position pos:line="189" pos:column="7"/></cpp:directive></cpp:endif>
        )<pos:position pos:line="190" pos:column="10"/></condition><then pos:line="190" pos:column="10"> <block pos:line="190" pos:column="11">{
        <expr_stmt><expr><name pos:line="191" pos:column="9">len<pos:position pos:line="191" pos:column="12"/></name> <operator pos:line="191" pos:column="13">+=<pos:position pos:line="191" pos:column="15"/></operator> <macro><name pos:line="191" pos:column="16">apr_snprintf<pos:position pos:line="191" pos:column="28"/></name><argument_list pos:line="191" pos:column="28">(<argument pos:line="191" pos:column="29">errstr + len<pos:position pos:line="191" pos:column="41"/></argument>, <argument pos:line="191" pos:column="43">MAX_STRING_LEN - len<pos:position pos:line="191" pos:column="63"/></argument>,
                            <argument><literal type="string" pos:line="192" pos:column="29">", referer: %s"<pos:position pos:line="192" pos:column="44"/></literal></argument>,
<cpp:ifndef pos:line="193" pos:column="1">#<cpp:directive pos:line="193" pos:column="2">ifndef<pos:position pos:line="193" pos:column="8"/></cpp:directive> <name pos:line="193" pos:column="9">AP_UNSAFE_ERROR_LOG_UNESCAPED<pos:position pos:line="193" pos:column="38"/></name></cpp:ifndef>
                            <argument pos:line="194" pos:column="29">scratch
<cpp:else pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">else<pos:position pos:line="195" pos:column="6"/></cpp:directive></cpp:else>
                            referer<pos:position pos:line="196" pos:column="36"/></argument>
<cpp:endif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">endif<pos:position pos:line="197" pos:column="7"/></cpp:directive></cpp:endif>
                            )<pos:position pos:line="198" pos:column="30"/></argument_list></macro></expr>;<pos:position pos:line="198" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="199" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="201" pos:column="5">/* NULL if we are logging to syslog */</comment>
    <if pos:line="202" pos:column="5">if <condition pos:line="202" pos:column="8">(<expr><name pos:line="202" pos:column="9">logf<pos:position pos:line="202" pos:column="13"/></name></expr>)<pos:position pos:line="202" pos:column="14"/></condition><then pos:line="202" pos:column="14"> <block pos:line="202" pos:column="15">{
        <comment type="block" pos:line="203" pos:column="9">/* Truncate for the terminator (as apr_snprintf does) */</comment>
        <if pos:line="204" pos:column="9">if <condition pos:line="204" pos:column="12">(<expr><name pos:line="204" pos:column="13">len<pos:position pos:line="204" pos:column="16"/></name> <operator pos:line="204" pos:column="17">&gt;<pos:position pos:line="204" pos:column="21"/></operator> <name pos:line="204" pos:column="19">MAX_STRING_LEN<pos:position pos:line="204" pos:column="33"/></name> <operator pos:line="204" pos:column="34">-<pos:position pos:line="204" pos:column="35"/></operator> <sizeof pos:line="204" pos:column="36">sizeof<argument_list pos:line="204" pos:column="42">(<argument><expr><name pos:line="204" pos:column="43">APR_EOL_STR<pos:position pos:line="204" pos:column="54"/></name></expr></argument>)<pos:position pos:line="204" pos:column="55"/></argument_list></sizeof></expr>)<pos:position pos:line="204" pos:column="56"/></condition><then pos:line="204" pos:column="56"> <block pos:line="204" pos:column="57">{
            <expr_stmt><expr><name pos:line="205" pos:column="13">len<pos:position pos:line="205" pos:column="16"/></name> <operator pos:line="205" pos:column="17">=<pos:position pos:line="205" pos:column="18"/></operator> <name pos:line="205" pos:column="19">MAX_STRING_LEN<pos:position pos:line="205" pos:column="33"/></name> <operator pos:line="205" pos:column="34">-<pos:position pos:line="205" pos:column="35"/></operator> <sizeof pos:line="205" pos:column="36">sizeof<argument_list pos:line="205" pos:column="42">(<argument><expr><name pos:line="205" pos:column="43">APR_EOL_STR<pos:position pos:line="205" pos:column="54"/></name></expr></argument>)<pos:position pos:line="205" pos:column="55"/></argument_list></sizeof></expr>;<pos:position pos:line="205" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="206" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="207" pos:column="9">strcpy<pos:position pos:line="207" pos:column="15"/></name><argument_list pos:line="207" pos:column="15">(<argument><expr><name pos:line="207" pos:column="16">errstr<pos:position pos:line="207" pos:column="22"/></name> <operator pos:line="207" pos:column="23">+<pos:position pos:line="207" pos:column="24"/></operator> <name pos:line="207" pos:column="25">len<pos:position pos:line="207" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="30">APR_EOL_STR<pos:position pos:line="207" pos:column="41"/></name></expr></argument>)<pos:position pos:line="207" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="208" pos:column="9">apr_file_puts<pos:position pos:line="208" pos:column="22"/></name><argument_list pos:line="208" pos:column="22">(<argument><expr><name pos:line="208" pos:column="23">errstr<pos:position pos:line="208" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="31">logf<pos:position pos:line="208" pos:column="35"/></name></expr></argument>)<pos:position pos:line="208" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="209" pos:column="9">apr_file_flush<pos:position pos:line="209" pos:column="23"/></name><argument_list pos:line="209" pos:column="23">(<argument><expr><name pos:line="209" pos:column="24">logf<pos:position pos:line="209" pos:column="28"/></name></expr></argument>)<pos:position pos:line="209" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="210" pos:column="6"/></block></then>
<cpp:ifdef pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">ifdef<pos:position pos:line="211" pos:column="7"/></cpp:directive> <name pos:line="211" pos:column="8">HAVE_SYSLOG<pos:position pos:line="211" pos:column="19"/></name></cpp:ifdef>
    <else pos:line="212" pos:column="5">else <block pos:line="212" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="213" pos:column="9">syslog<pos:position pos:line="213" pos:column="15"/></name><argument_list pos:line="213" pos:column="15">(<argument><expr><ternary><condition><expr><name pos:line="213" pos:column="16">level_and_mask<pos:position pos:line="213" pos:column="30"/></name> <operator pos:line="213" pos:column="31">&lt;<pos:position pos:line="213" pos:column="35"/></operator> <name pos:line="213" pos:column="33">LOG_PRIMASK<pos:position pos:line="213" pos:column="44"/></name></expr> ?<pos:position pos:line="213" pos:column="46"/></condition><then pos:line="213" pos:column="46"> <expr><name pos:line="213" pos:column="47">level_and_mask<pos:position pos:line="213" pos:column="61"/></name></expr> <pos:position pos:line="213" pos:column="62"/></then><else pos:line="213" pos:column="62">: <expr><name pos:line="213" pos:column="64">APLOG_DEBUG<pos:position pos:line="213" pos:column="75"/></name></expr></else></ternary></expr></argument>,
               <argument><expr><literal type="string" pos:line="214" pos:column="16">"%s"<pos:position pos:line="214" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="214" pos:column="22">errstr<pos:position pos:line="214" pos:column="28"/></name></expr></argument>)<pos:position pos:line="214" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="215" pos:column="6"/></block></else></if>
<cpp:endif pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">endif<pos:position pos:line="216" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="218" pos:column="5">ap_run_error_log<pos:position pos:line="218" pos:column="21"/></name><argument_list pos:line="218" pos:column="21">(<argument><expr><name pos:line="218" pos:column="22">file<pos:position pos:line="218" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="28">line<pos:position pos:line="218" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="34">module_index<pos:position pos:line="218" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="48">level<pos:position pos:line="218" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="55">status<pos:position pos:line="218" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="63">s<pos:position pos:line="218" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="66">r<pos:position pos:line="218" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="69">pool<pos:position pos:line="218" pos:column="73"/></name></expr></argument>,
                     <argument><expr><name pos:line="219" pos:column="22">errstr<pos:position pos:line="219" pos:column="28"/></name> <operator pos:line="219" pos:column="29">+<pos:position pos:line="219" pos:column="30"/></operator> <name pos:line="219" pos:column="31">errstrlen<pos:position pos:line="219" pos:column="40"/></name></expr></argument>)<pos:position pos:line="219" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="42"/></expr_stmt>
}<pos:position pos:line="220" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6939.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">add_header<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">ngh_ctx<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">ctx<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">key<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">value<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">nghttp2_nv<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">nv<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><operator pos:line="3" pos:column="22">&amp;<pos:position pos:line="3" pos:column="27"/></operator><name><operator pos:line="3" pos:column="23">(<pos:position pos:line="3" pos:column="24"/></operator><name><name pos:line="3" pos:column="24">ctx<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">ngh<pos:position pos:line="3" pos:column="32"/></name></name><operator pos:line="3" pos:column="32">)<pos:position pos:line="3" pos:column="33"/></operator><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">nv<pos:position pos:line="3" pos:column="37"/></name></name><index pos:line="3" pos:column="37">[<expr><name><operator pos:line="3" pos:column="38">(<pos:position pos:line="3" pos:column="39"/></operator><name><name pos:line="3" pos:column="39">ctx<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">-&gt;<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="44">ngh<pos:position pos:line="3" pos:column="47"/></name></name><operator pos:line="3" pos:column="47">)<pos:position pos:line="3" pos:column="48"/></operator><operator pos:line="3" pos:column="48">-&gt;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="50">nvlen<pos:position pos:line="3" pos:column="55"/></name></name><operator pos:line="3" pos:column="55">++<pos:position pos:line="3" pos:column="57"/></operator></expr>]<pos:position pos:line="3" pos:column="58"/></index></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name><name pos:line="6" pos:column="10">ctx<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">unsafe<pos:position pos:line="6" pos:column="21"/></name></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22"> <block pos:line="6" pos:column="23">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">p<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name pos:line="7" pos:column="18">inv_field_name_chr<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">key<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43"> <block pos:line="7" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="8" pos:column="13">ap_log_perror<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">APLOG_MARK<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">APLOG_TRACE1<pos:position pos:line="8" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">APR_EINVAL<pos:position pos:line="8" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="65">ctx<pos:position pos:line="8" pos:column="68"/></name><operator pos:line="8" pos:column="68">-&gt;<pos:position pos:line="8" pos:column="73"/></operator><name pos:line="8" pos:column="70">p<pos:position pos:line="8" pos:column="71"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="9" pos:column="27">"h2_request: head field '%s: %s' has invalid char %s"<pos:position pos:line="9" pos:column="80"/></literal></expr></argument>, 
                          <argument><expr><name pos:line="10" pos:column="27">key<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">value<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">p<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="11" pos:column="13">ctx<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">status<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">APR_EINVAL<pos:position pos:line="11" pos:column="37"/></name></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
            <return pos:line="12" pos:column="13">return <expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">p<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">inv_field_value_chr<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">value<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call><operator pos:line="14" pos:column="44">)<pos:position pos:line="14" pos:column="45"/></operator></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46"> <block pos:line="14" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">ap_log_perror<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">APLOG_MARK<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">APLOG_TRACE1<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">APR_EINVAL<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="65">ctx<pos:position pos:line="15" pos:column="68"/></name><operator pos:line="15" pos:column="68">-&gt;<pos:position pos:line="15" pos:column="73"/></operator><name pos:line="15" pos:column="70">p<pos:position pos:line="15" pos:column="71"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="16" pos:column="27">"h2_request: head field '%s: %s' has invalid char %s"<pos:position pos:line="16" pos:column="80"/></literal></expr></argument>, 
                          <argument><expr><name pos:line="17" pos:column="27">key<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">value<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">p<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">ctx<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">status<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">APR_EINVAL<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">nv<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">name<pos:position pos:line="22" pos:column="13"/></name></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">uint8_t<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">)<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">key<pos:position pos:line="22" pos:column="29"/></name></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">nv<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">namelen<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">strlen<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">key<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">nv<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">value<pos:position pos:line="24" pos:column="14"/></name></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">uint8_t<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">*<pos:position pos:line="24" pos:column="26"/></operator><operator pos:line="24" pos:column="26">)<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">value<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">nv<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">valuelen<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <call><name pos:line="25" pos:column="20">strlen<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">value<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
    
    <return pos:line="27" pos:column="5">return <expr><literal type="number" pos:line="27" pos:column="12">1<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

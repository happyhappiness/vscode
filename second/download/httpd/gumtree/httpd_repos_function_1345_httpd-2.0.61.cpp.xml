<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1345_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ap_ssi_parse_string<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">request_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">r<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">include_ctx_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">ctx<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, 
                                 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">in<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">out<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">apr_size_t<pos:position pos:line="3" pos:column="44"/></name></type> <name pos:line="3" pos:column="45">length<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="53">int<pos:position pos:line="3" pos:column="56"/></name></type> <name pos:line="3" pos:column="57">leave_name<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="68"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">ch<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">next<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">end_out<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">out_size<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* allocate an output buffer if needed */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">out<pos:position pos:line="11" pos:column="13"/></name></expr>)<pos:position pos:line="11" pos:column="14"/></condition><then pos:line="11" pos:column="14"> <block pos:line="11" pos:column="15">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">out_size<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">PARSE_STRING_INITIAL_SIZE<pos:position pos:line="12" pos:column="45"/></name></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">out_size<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">&gt;<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="24">length<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
            <expr_stmt><expr><name pos:line="14" pos:column="13">out_size<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">length<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="16" pos:column="9">out<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">apr_palloc<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name><name pos:line="16" pos:column="26">r<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">pool<pos:position pos:line="16" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">out_size<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">out_size<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">length<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="22" pos:column="5">/* leave room for nul terminator */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">end_out<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">out<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">+<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">out_size<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">-<pos:position pos:line="23" pos:column="31"/></operator> <literal type="number" pos:line="23" pos:column="32">1<pos:position pos:line="23" pos:column="33"/></literal></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">next<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <name pos:line="25" pos:column="12">out<pos:position pos:line="25" pos:column="15"/></name></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt>
    <while pos:line="26" pos:column="5">while <condition pos:line="26" pos:column="11">(<expr><operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">ch<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <operator pos:line="26" pos:column="18">*<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">in<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">++<pos:position pos:line="26" pos:column="23"/></operator><operator pos:line="26" pos:column="23">)<pos:position pos:line="26" pos:column="24"/></operator> <operator pos:line="26" pos:column="25">!=<pos:position pos:line="26" pos:column="27"/></operator> <literal type="char" pos:line="26" pos:column="28">'\0'<pos:position pos:line="26" pos:column="32"/></literal></expr>)<pos:position pos:line="26" pos:column="33"/></condition> <block pos:line="26" pos:column="34">{
        <switch pos:line="27" pos:column="9">switch <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">ch<pos:position pos:line="27" pos:column="19"/></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition> <block pos:line="27" pos:column="21">{
        <case pos:line="28" pos:column="9">case <expr><literal type="char" pos:line="28" pos:column="14">'\\'<pos:position pos:line="28" pos:column="18"/></literal></expr>:<pos:position pos:line="28" pos:column="19"/></case>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">next<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">==<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">end_out<pos:position pos:line="29" pos:column="32"/></name></expr>)<pos:position pos:line="29" pos:column="33"/></condition><then pos:line="29" pos:column="33"> <block pos:line="29" pos:column="34">{
                <if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">out_size<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">&lt;<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="32">length<pos:position pos:line="30" pos:column="38"/></name></expr>)<pos:position pos:line="30" pos:column="39"/></condition><then pos:line="30" pos:column="39"> <block pos:line="30" pos:column="40">{
                    <comment type="block" pos:line="31" pos:column="21">/* double the buffer size */</comment>
                    <decl_stmt><decl><type><name pos:line="32" pos:column="21">apr_size_t<pos:position pos:line="32" pos:column="31"/></name></type> <name pos:line="32" pos:column="32">new_out_size<pos:position pos:line="32" pos:column="44"/></name> <init pos:line="32" pos:column="45">= <expr><name pos:line="32" pos:column="47">out_size<pos:position pos:line="32" pos:column="55"/></name> <operator pos:line="32" pos:column="56">*<pos:position pos:line="32" pos:column="57"/></operator> <literal type="number" pos:line="32" pos:column="58">2<pos:position pos:line="32" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="60"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="33" pos:column="21">apr_size_t<pos:position pos:line="33" pos:column="31"/></name></type> <name pos:line="33" pos:column="32">current_length<pos:position pos:line="33" pos:column="46"/></name> <init pos:line="33" pos:column="47">= <expr><name pos:line="33" pos:column="49">next<pos:position pos:line="33" pos:column="53"/></name> <operator pos:line="33" pos:column="54">-<pos:position pos:line="33" pos:column="55"/></operator> <name pos:line="33" pos:column="56">out<pos:position pos:line="33" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="60"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="34" pos:column="21">char<pos:position pos:line="34" pos:column="25"/></name> <modifier pos:line="34" pos:column="26">*<pos:position pos:line="34" pos:column="27"/></modifier></type><name pos:line="34" pos:column="27">new_out<pos:position pos:line="34" pos:column="34"/></name></decl>;<pos:position pos:line="34" pos:column="35"/></decl_stmt>
                    <if pos:line="35" pos:column="21">if <condition pos:line="35" pos:column="24">(<expr><name pos:line="35" pos:column="25">new_out_size<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">&gt;<pos:position pos:line="35" pos:column="42"/></operator> <name pos:line="35" pos:column="40">length<pos:position pos:line="35" pos:column="46"/></name></expr>)<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47"> <block pos:line="35" pos:column="48">{
                        <expr_stmt><expr><name pos:line="36" pos:column="25">new_out_size<pos:position pos:line="36" pos:column="37"/></name> <operator pos:line="36" pos:column="38">=<pos:position pos:line="36" pos:column="39"/></operator> <name pos:line="36" pos:column="40">length<pos:position pos:line="36" pos:column="46"/></name></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
                    }<pos:position pos:line="37" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="38" pos:column="21">new_out<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <call><name pos:line="38" pos:column="31">apr_palloc<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name><name pos:line="38" pos:column="42">r<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">pool<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">new_out_size<pos:position pos:line="38" pos:column="63"/></name></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="65"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="39" pos:column="21">memcpy<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">new_out<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">out<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">current_length<pos:position pos:line="39" pos:column="56"/></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="40" pos:column="21">out<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="27">new_out<pos:position pos:line="40" pos:column="34"/></name></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="41" pos:column="21">out_size<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">=<pos:position pos:line="41" pos:column="31"/></operator> <name pos:line="41" pos:column="32">new_out_size<pos:position pos:line="41" pos:column="44"/></name></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="42" pos:column="21">end_out<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <name pos:line="42" pos:column="31">out<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">+<pos:position pos:line="42" pos:column="36"/></operator> <name pos:line="42" pos:column="37">out_size<pos:position pos:line="42" pos:column="45"/></name> <operator pos:line="42" pos:column="46">-<pos:position pos:line="42" pos:column="47"/></operator> <literal type="number" pos:line="42" pos:column="48">1<pos:position pos:line="42" pos:column="49"/></literal></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="43" pos:column="21">next<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">=<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="28">out<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">+<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="34">current_length<pos:position pos:line="43" pos:column="48"/></name></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></then>
                <else pos:line="45" pos:column="17">else <block pos:line="45" pos:column="22">{
                    <comment type="block" pos:line="46" pos:column="21">/* truncated */</comment>
                    <expr_stmt><expr><operator pos:line="47" pos:column="21">*<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">next<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <literal type="char" pos:line="47" pos:column="29">'\0'<pos:position pos:line="47" pos:column="33"/></literal></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
                    <return pos:line="48" pos:column="21">return <expr><name pos:line="48" pos:column="28">out<pos:position pos:line="48" pos:column="31"/></name></expr>;<pos:position pos:line="48" pos:column="32"/></return>
                }<pos:position pos:line="49" pos:column="18"/></block></else></if>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><operator pos:line="51" pos:column="17">*<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">in<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">==<pos:position pos:line="51" pos:column="23"/></operator> <literal type="char" pos:line="51" pos:column="24">'$'<pos:position pos:line="51" pos:column="27"/></literal></expr>)<pos:position pos:line="51" pos:column="28"/></condition><then pos:line="51" pos:column="28"> <block pos:line="51" pos:column="29">{
                <expr_stmt><expr><operator pos:line="52" pos:column="17">*<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">next<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">++<pos:position pos:line="52" pos:column="24"/></operator> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <operator pos:line="52" pos:column="27">*<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">in<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">++<pos:position pos:line="52" pos:column="32"/></operator></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></then>
            <else pos:line="54" pos:column="13">else <block pos:line="54" pos:column="18">{
                <expr_stmt><expr><operator pos:line="55" pos:column="17">*<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="18">next<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">++<pos:position pos:line="55" pos:column="24"/></operator> <operator pos:line="55" pos:column="25">=<pos:position pos:line="55" pos:column="26"/></operator> <name pos:line="55" pos:column="27">ch<pos:position pos:line="55" pos:column="29"/></name></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></else></if>
            <break pos:line="57" pos:column="13">break;<pos:position pos:line="57" pos:column="19"/></break>
        <case pos:line="58" pos:column="9">case <expr><literal type="char" pos:line="58" pos:column="14">'$'<pos:position pos:line="58" pos:column="17"/></literal></expr>:<pos:position pos:line="58" pos:column="18"/></case>
            <block pos:line="59" pos:column="13">{
                <decl_stmt><decl><type><specifier pos:line="60" pos:column="17">const<pos:position pos:line="60" pos:column="22"/></specifier> <name pos:line="60" pos:column="23">char<pos:position pos:line="60" pos:column="27"/></name> <modifier pos:line="60" pos:column="28">*<pos:position pos:line="60" pos:column="29"/></modifier></type><name pos:line="60" pos:column="29">start_of_var_name<pos:position pos:line="60" pos:column="46"/></name></decl>;<pos:position pos:line="60" pos:column="47"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="61" pos:column="17">char<pos:position pos:line="61" pos:column="21"/></name> <modifier pos:line="61" pos:column="22">*<pos:position pos:line="61" pos:column="23"/></modifier></type><name pos:line="61" pos:column="23">end_of_var_name<pos:position pos:line="61" pos:column="38"/></name></decl>;<pos:position pos:line="61" pos:column="39"/></decl_stmt>        <comment type="block" pos:line="61" pos:column="47">/* end of var name + 1 */</comment>
                <decl_stmt><decl><type><specifier pos:line="62" pos:column="17">const<pos:position pos:line="62" pos:column="22"/></specifier> <name pos:line="62" pos:column="23">char<pos:position pos:line="62" pos:column="27"/></name> <modifier pos:line="62" pos:column="28">*<pos:position pos:line="62" pos:column="29"/></modifier></type><name pos:line="62" pos:column="29">expansion<pos:position pos:line="62" pos:column="38"/></name></decl>, <modifier pos:line="62" pos:column="40">*<pos:position pos:line="62" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="62" pos:column="41">temp_end<pos:position pos:line="62" pos:column="49"/></name></decl>, <modifier pos:line="62" pos:column="51">*<pos:position pos:line="62" pos:column="52"/></modifier><decl><type ref="prev"/><name pos:line="62" pos:column="52">val<pos:position pos:line="62" pos:column="55"/></name></decl>;<pos:position pos:line="62" pos:column="56"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="63" pos:column="17">char<pos:position pos:line="63" pos:column="21"/></name></type>        <name pos:line="63" pos:column="29">tmp_store<pos:position pos:line="63" pos:column="38"/></name></decl>;<pos:position pos:line="63" pos:column="39"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="64" pos:column="17">apr_size_t<pos:position pos:line="64" pos:column="27"/></name></type> <name pos:line="64" pos:column="28">l<pos:position pos:line="64" pos:column="29"/></name></decl>;<pos:position pos:line="64" pos:column="30"/></decl_stmt>

                <comment type="block" pos:line="66" pos:column="17">/* guess that the expansion won't happen */</comment>
                <expr_stmt><expr><name pos:line="67" pos:column="17">expansion<pos:position pos:line="67" pos:column="26"/></name> <operator pos:line="67" pos:column="27">=<pos:position pos:line="67" pos:column="28"/></operator> <name pos:line="67" pos:column="29">in<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">-<pos:position pos:line="67" pos:column="33"/></operator> <literal type="number" pos:line="67" pos:column="34">1<pos:position pos:line="67" pos:column="35"/></literal></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
                <if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><operator pos:line="68" pos:column="21">*<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="22">in<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">==<pos:position pos:line="68" pos:column="27"/></operator> <literal type="char" pos:line="68" pos:column="28">'{'<pos:position pos:line="68" pos:column="31"/></literal></expr>)<pos:position pos:line="68" pos:column="32"/></condition><then pos:line="68" pos:column="32"> <block pos:line="68" pos:column="33">{
                    <expr_stmt><expr><operator pos:line="69" pos:column="21">++<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="23">in<pos:position pos:line="69" pos:column="25"/></name></expr>;<pos:position pos:line="69" pos:column="26"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="70" pos:column="21">start_of_var_name<pos:position pos:line="70" pos:column="38"/></name> <operator pos:line="70" pos:column="39">=<pos:position pos:line="70" pos:column="40"/></operator> <name pos:line="70" pos:column="41">in<pos:position pos:line="70" pos:column="43"/></name></expr>;<pos:position pos:line="70" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="71" pos:column="21">in<pos:position pos:line="71" pos:column="23"/></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <call><name pos:line="71" pos:column="26">ap_strchr_c<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">in<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="71" pos:column="42">'}'<pos:position pos:line="71" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="47"/></expr_stmt>
                    <if pos:line="72" pos:column="21">if <condition pos:line="72" pos:column="24">(<expr><name pos:line="72" pos:column="25">in<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">==<pos:position pos:line="72" pos:column="30"/></operator> <name pos:line="72" pos:column="31">NULL<pos:position pos:line="72" pos:column="35"/></name></expr>)<pos:position pos:line="72" pos:column="36"/></condition><then pos:line="72" pos:column="36"> <block pos:line="72" pos:column="37">{
                        <expr_stmt><expr><call><name pos:line="73" pos:column="25">ap_log_rerror<pos:position pos:line="73" pos:column="38"/></name><argument_list pos:line="73" pos:column="38">(<argument><expr><name pos:line="73" pos:column="39">APLOG_MARK<pos:position pos:line="73" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="51">APLOG_ERR<pos:position pos:line="73" pos:column="60"/></name></expr></argument>,
                                      <argument><expr><literal type="number" pos:line="74" pos:column="39">0<pos:position pos:line="74" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="42">r<pos:position pos:line="74" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="45">"Missing '}' on variable \"%s\""<pos:position pos:line="74" pos:column="77"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="75" pos:column="39">expansion<pos:position pos:line="75" pos:column="48"/></name></expr></argument>)<pos:position pos:line="75" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="50"/></expr_stmt>
                        <expr_stmt><expr><operator pos:line="76" pos:column="25">*<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="26">next<pos:position pos:line="76" pos:column="30"/></name> <operator pos:line="76" pos:column="31">=<pos:position pos:line="76" pos:column="32"/></operator> <literal type="char" pos:line="76" pos:column="33">'\0'<pos:position pos:line="76" pos:column="37"/></literal></expr>;<pos:position pos:line="76" pos:column="38"/></expr_stmt>
                        <return pos:line="77" pos:column="25">return <expr><name pos:line="77" pos:column="32">out<pos:position pos:line="77" pos:column="35"/></name></expr>;<pos:position pos:line="77" pos:column="36"/></return>
                    }<pos:position pos:line="78" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="79" pos:column="21">temp_end<pos:position pos:line="79" pos:column="29"/></name> <operator pos:line="79" pos:column="30">=<pos:position pos:line="79" pos:column="31"/></operator> <name pos:line="79" pos:column="32">in<pos:position pos:line="79" pos:column="34"/></name></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="80" pos:column="21">end_of_var_name<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">=<pos:position pos:line="80" pos:column="38"/></operator> <operator pos:line="80" pos:column="39">(<pos:position pos:line="80" pos:column="40"/></operator><name pos:line="80" pos:column="40">char<pos:position pos:line="80" pos:column="44"/></name> <operator pos:line="80" pos:column="45">*<pos:position pos:line="80" pos:column="46"/></operator><operator pos:line="80" pos:column="46">)<pos:position pos:line="80" pos:column="47"/></operator><name pos:line="80" pos:column="47">temp_end<pos:position pos:line="80" pos:column="55"/></name></expr>;<pos:position pos:line="80" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="81" pos:column="21">++<pos:position pos:line="81" pos:column="23"/></operator><name pos:line="81" pos:column="23">in<pos:position pos:line="81" pos:column="25"/></name></expr>;<pos:position pos:line="81" pos:column="26"/></expr_stmt>
                }<pos:position pos:line="82" pos:column="18"/></block></then>
                <else pos:line="83" pos:column="17">else <block pos:line="83" pos:column="22">{
                    <expr_stmt><expr><name pos:line="84" pos:column="21">start_of_var_name<pos:position pos:line="84" pos:column="38"/></name> <operator pos:line="84" pos:column="39">=<pos:position pos:line="84" pos:column="40"/></operator> <name pos:line="84" pos:column="41">in<pos:position pos:line="84" pos:column="43"/></name></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt>
                    <while pos:line="85" pos:column="21">while <condition pos:line="85" pos:column="27">(<expr><call><name pos:line="85" pos:column="28">apr_isalnum<pos:position pos:line="85" pos:column="39"/></name><argument_list pos:line="85" pos:column="39">(<argument><expr><operator pos:line="85" pos:column="40">*<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="41">in<pos:position pos:line="85" pos:column="43"/></name></expr></argument>)<pos:position pos:line="85" pos:column="44"/></argument_list></call> <operator pos:line="85" pos:column="45">||<pos:position pos:line="85" pos:column="47"/></operator> <operator pos:line="85" pos:column="48">*<pos:position pos:line="85" pos:column="49"/></operator><name pos:line="85" pos:column="49">in<pos:position pos:line="85" pos:column="51"/></name> <operator pos:line="85" pos:column="52">==<pos:position pos:line="85" pos:column="54"/></operator> <literal type="char" pos:line="85" pos:column="55">'_'<pos:position pos:line="85" pos:column="58"/></literal></expr>)<pos:position pos:line="85" pos:column="59"/></condition> <block pos:line="85" pos:column="60">{
                        <expr_stmt><expr><operator pos:line="86" pos:column="25">++<pos:position pos:line="86" pos:column="27"/></operator><name pos:line="86" pos:column="27">in<pos:position pos:line="86" pos:column="29"/></name></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt>
                    }<pos:position pos:line="87" pos:column="22"/></block></while>
                    <expr_stmt><expr><name pos:line="88" pos:column="21">temp_end<pos:position pos:line="88" pos:column="29"/></name> <operator pos:line="88" pos:column="30">=<pos:position pos:line="88" pos:column="31"/></operator> <name pos:line="88" pos:column="32">in<pos:position pos:line="88" pos:column="34"/></name></expr>;<pos:position pos:line="88" pos:column="35"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="89" pos:column="21">end_of_var_name<pos:position pos:line="89" pos:column="36"/></name> <operator pos:line="89" pos:column="37">=<pos:position pos:line="89" pos:column="38"/></operator> <operator pos:line="89" pos:column="39">(<pos:position pos:line="89" pos:column="40"/></operator><name pos:line="89" pos:column="40">char<pos:position pos:line="89" pos:column="44"/></name> <operator pos:line="89" pos:column="45">*<pos:position pos:line="89" pos:column="46"/></operator><operator pos:line="89" pos:column="46">)<pos:position pos:line="89" pos:column="47"/></operator><name pos:line="89" pos:column="47">temp_end<pos:position pos:line="89" pos:column="55"/></name></expr>;<pos:position pos:line="89" pos:column="56"/></expr_stmt>
                }<pos:position pos:line="90" pos:column="18"/></block></else></if>
                <comment type="block" pos:line="91" pos:column="17">/* what a pain, too bad there's no table_getn where you can
                 * pass a non-nul terminated string */</comment>
                <expr_stmt><expr><name pos:line="93" pos:column="17">l<pos:position pos:line="93" pos:column="18"/></name> <operator pos:line="93" pos:column="19">=<pos:position pos:line="93" pos:column="20"/></operator> <name pos:line="93" pos:column="21">end_of_var_name<pos:position pos:line="93" pos:column="36"/></name> <operator pos:line="93" pos:column="37">-<pos:position pos:line="93" pos:column="38"/></operator> <name pos:line="93" pos:column="39">start_of_var_name<pos:position pos:line="93" pos:column="56"/></name></expr>;<pos:position pos:line="93" pos:column="57"/></expr_stmt>
                <if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><name pos:line="94" pos:column="21">l<pos:position pos:line="94" pos:column="22"/></name> <operator pos:line="94" pos:column="23">!=<pos:position pos:line="94" pos:column="25"/></operator> <literal type="number" pos:line="94" pos:column="26">0<pos:position pos:line="94" pos:column="27"/></literal></expr>)<pos:position pos:line="94" pos:column="28"/></condition><then pos:line="94" pos:column="28"> <block pos:line="94" pos:column="29">{
                    <expr_stmt><expr><name pos:line="95" pos:column="21">tmp_store<pos:position pos:line="95" pos:column="30"/></name>        <operator pos:line="95" pos:column="38">=<pos:position pos:line="95" pos:column="39"/></operator> <operator pos:line="95" pos:column="40">*<pos:position pos:line="95" pos:column="41"/></operator><name pos:line="95" pos:column="41">end_of_var_name<pos:position pos:line="95" pos:column="56"/></name></expr>;<pos:position pos:line="95" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="96" pos:column="21">*<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="22">end_of_var_name<pos:position pos:line="96" pos:column="37"/></name> <operator pos:line="96" pos:column="38">=<pos:position pos:line="96" pos:column="39"/></operator> <literal type="char" pos:line="96" pos:column="40">'\0'<pos:position pos:line="96" pos:column="44"/></literal></expr>;<pos:position pos:line="96" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="97" pos:column="21">val<pos:position pos:line="97" pos:column="24"/></name> <operator pos:line="97" pos:column="25">=<pos:position pos:line="97" pos:column="26"/></operator> <call><name pos:line="97" pos:column="27">get_include_var<pos:position pos:line="97" pos:column="42"/></name><argument_list pos:line="97" pos:column="42">(<argument><expr><name pos:line="97" pos:column="43">r<pos:position pos:line="97" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="46">ctx<pos:position pos:line="97" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="51">start_of_var_name<pos:position pos:line="97" pos:column="68"/></name></expr></argument>)<pos:position pos:line="97" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="70"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="98" pos:column="21">*<pos:position pos:line="98" pos:column="22"/></operator><name pos:line="98" pos:column="22">end_of_var_name<pos:position pos:line="98" pos:column="37"/></name> <operator pos:line="98" pos:column="38">=<pos:position pos:line="98" pos:column="39"/></operator> <name pos:line="98" pos:column="40">tmp_store<pos:position pos:line="98" pos:column="49"/></name></expr>;<pos:position pos:line="98" pos:column="50"/></expr_stmt>

                    <if pos:line="100" pos:column="21">if <condition pos:line="100" pos:column="24">(<expr><name pos:line="100" pos:column="25">val<pos:position pos:line="100" pos:column="28"/></name></expr>)<pos:position pos:line="100" pos:column="29"/></condition><then pos:line="100" pos:column="29"> <block pos:line="100" pos:column="30">{
                        <expr_stmt><expr><name pos:line="101" pos:column="25">expansion<pos:position pos:line="101" pos:column="34"/></name> <operator pos:line="101" pos:column="35">=<pos:position pos:line="101" pos:column="36"/></operator> <name pos:line="101" pos:column="37">val<pos:position pos:line="101" pos:column="40"/></name></expr>;<pos:position pos:line="101" pos:column="41"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="102" pos:column="25">l<pos:position pos:line="102" pos:column="26"/></name> <operator pos:line="102" pos:column="27">=<pos:position pos:line="102" pos:column="28"/></operator> <call><name pos:line="102" pos:column="29">strlen<pos:position pos:line="102" pos:column="35"/></name><argument_list pos:line="102" pos:column="35">(<argument><expr><name pos:line="102" pos:column="36">expansion<pos:position pos:line="102" pos:column="45"/></name></expr></argument>)<pos:position pos:line="102" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="47"/></expr_stmt>
                    }<pos:position pos:line="103" pos:column="22"/></block></then>
                    <elseif pos:line="104" pos:column="21">else <if pos:line="104" pos:column="26">if <condition pos:line="104" pos:column="29">(<expr><name pos:line="104" pos:column="30">leave_name<pos:position pos:line="104" pos:column="40"/></name></expr>)<pos:position pos:line="104" pos:column="41"/></condition><then pos:line="104" pos:column="41"> <block pos:line="104" pos:column="42">{
                        <expr_stmt><expr><name pos:line="105" pos:column="25">l<pos:position pos:line="105" pos:column="26"/></name> <operator pos:line="105" pos:column="27">=<pos:position pos:line="105" pos:column="28"/></operator> <name pos:line="105" pos:column="29">in<pos:position pos:line="105" pos:column="31"/></name> <operator pos:line="105" pos:column="32">-<pos:position pos:line="105" pos:column="33"/></operator> <name pos:line="105" pos:column="34">expansion<pos:position pos:line="105" pos:column="43"/></name></expr>;<pos:position pos:line="105" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="106" pos:column="22"/></block></then></if></elseif>
                    <else pos:line="107" pos:column="21">else <block pos:line="107" pos:column="26">{
                        <comment type="block" pos:line="108" pos:column="25">/* no expansion to be done */</comment>
                        <break pos:line="109" pos:column="25">break;<pos:position pos:line="109" pos:column="31"/></break>
                    }<pos:position pos:line="110" pos:column="22"/></block></else></if>
                }<pos:position pos:line="111" pos:column="18"/></block></then>
                <else pos:line="112" pos:column="17">else <block pos:line="112" pos:column="22">{
                    <comment type="block" pos:line="113" pos:column="21">/* zero-length variable name causes just the $ to be 
                     * copied */</comment>
                    <expr_stmt><expr><name pos:line="115" pos:column="21">l<pos:position pos:line="115" pos:column="22"/></name> <operator pos:line="115" pos:column="23">=<pos:position pos:line="115" pos:column="24"/></operator> <literal type="number" pos:line="115" pos:column="25">1<pos:position pos:line="115" pos:column="26"/></literal></expr>;<pos:position pos:line="115" pos:column="27"/></expr_stmt>
                }<pos:position pos:line="116" pos:column="18"/></block></else></if>
                <if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><operator pos:line="117" pos:column="21">(<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="22">next<pos:position pos:line="117" pos:column="26"/></name> <operator pos:line="117" pos:column="27">+<pos:position pos:line="117" pos:column="28"/></operator> <name pos:line="117" pos:column="29">l<pos:position pos:line="117" pos:column="30"/></name> <operator pos:line="117" pos:column="31">&gt;<pos:position pos:line="117" pos:column="35"/></operator> <name pos:line="117" pos:column="33">end_out<pos:position pos:line="117" pos:column="40"/></name><operator pos:line="117" pos:column="40">)<pos:position pos:line="117" pos:column="41"/></operator> <operator pos:line="117" pos:column="42">&amp;&amp;<pos:position pos:line="117" pos:column="52"/></operator> <operator pos:line="117" pos:column="45">(<pos:position pos:line="117" pos:column="46"/></operator><name pos:line="117" pos:column="46">out_size<pos:position pos:line="117" pos:column="54"/></name> <operator pos:line="117" pos:column="55">&lt;<pos:position pos:line="117" pos:column="59"/></operator> <name pos:line="117" pos:column="57">length<pos:position pos:line="117" pos:column="63"/></name><operator pos:line="117" pos:column="63">)<pos:position pos:line="117" pos:column="64"/></operator></expr>)<pos:position pos:line="117" pos:column="65"/></condition><then pos:line="117" pos:column="65"> <block pos:line="117" pos:column="66">{
                    <comment type="block" pos:line="118" pos:column="21">/* increase the buffer size to accommodate l more chars */</comment>
                    <decl_stmt><decl><type><name pos:line="119" pos:column="21">apr_size_t<pos:position pos:line="119" pos:column="31"/></name></type> <name pos:line="119" pos:column="32">new_out_size<pos:position pos:line="119" pos:column="44"/></name> <init pos:line="119" pos:column="45">= <expr><name pos:line="119" pos:column="47">out_size<pos:position pos:line="119" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="119" pos:column="56"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="120" pos:column="21">apr_size_t<pos:position pos:line="120" pos:column="31"/></name></type> <name pos:line="120" pos:column="32">current_length<pos:position pos:line="120" pos:column="46"/></name> <init pos:line="120" pos:column="47">= <expr><name pos:line="120" pos:column="49">next<pos:position pos:line="120" pos:column="53"/></name> <operator pos:line="120" pos:column="54">-<pos:position pos:line="120" pos:column="55"/></operator> <name pos:line="120" pos:column="56">out<pos:position pos:line="120" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="120" pos:column="60"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="121" pos:column="21">char<pos:position pos:line="121" pos:column="25"/></name> <modifier pos:line="121" pos:column="26">*<pos:position pos:line="121" pos:column="27"/></modifier></type><name pos:line="121" pos:column="27">new_out<pos:position pos:line="121" pos:column="34"/></name></decl>;<pos:position pos:line="121" pos:column="35"/></decl_stmt>
                    <do pos:line="122" pos:column="21">do <block pos:line="122" pos:column="24">{
                        <expr_stmt><expr><name pos:line="123" pos:column="25">new_out_size<pos:position pos:line="123" pos:column="37"/></name> <operator pos:line="123" pos:column="38">*=<pos:position pos:line="123" pos:column="40"/></operator> <literal type="number" pos:line="123" pos:column="41">2<pos:position pos:line="123" pos:column="42"/></literal></expr>;<pos:position pos:line="123" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="124" pos:column="22"/></block> while <condition pos:line="124" pos:column="29">(<expr><name pos:line="124" pos:column="30">new_out_size<pos:position pos:line="124" pos:column="42"/></name> <operator pos:line="124" pos:column="43">&lt;<pos:position pos:line="124" pos:column="47"/></operator> <name pos:line="124" pos:column="45">current_length<pos:position pos:line="124" pos:column="59"/></name> <operator pos:line="124" pos:column="60">+<pos:position pos:line="124" pos:column="61"/></operator> <name pos:line="124" pos:column="62">l<pos:position pos:line="124" pos:column="63"/></name> <operator pos:line="124" pos:column="64">+<pos:position pos:line="124" pos:column="65"/></operator> <literal type="number" pos:line="124" pos:column="66">1<pos:position pos:line="124" pos:column="67"/></literal></expr>)<pos:position pos:line="124" pos:column="68"/></condition>;<pos:position pos:line="124" pos:column="69"/></do> <comment type="block" pos:line="124" pos:column="70">/* +1 for NUL */</comment>
                    <if pos:line="125" pos:column="21">if <condition pos:line="125" pos:column="24">(<expr><name pos:line="125" pos:column="25">new_out_size<pos:position pos:line="125" pos:column="37"/></name> <operator pos:line="125" pos:column="38">&gt;<pos:position pos:line="125" pos:column="42"/></operator> <name pos:line="125" pos:column="40">length<pos:position pos:line="125" pos:column="46"/></name></expr>)<pos:position pos:line="125" pos:column="47"/></condition><then pos:line="125" pos:column="47"> <block pos:line="125" pos:column="48">{
                        <expr_stmt><expr><name pos:line="126" pos:column="25">new_out_size<pos:position pos:line="126" pos:column="37"/></name> <operator pos:line="126" pos:column="38">=<pos:position pos:line="126" pos:column="39"/></operator> <name pos:line="126" pos:column="40">length<pos:position pos:line="126" pos:column="46"/></name></expr>;<pos:position pos:line="126" pos:column="47"/></expr_stmt>
                    }<pos:position pos:line="127" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="128" pos:column="21">new_out<pos:position pos:line="128" pos:column="28"/></name> <operator pos:line="128" pos:column="29">=<pos:position pos:line="128" pos:column="30"/></operator> <call><name pos:line="128" pos:column="31">apr_palloc<pos:position pos:line="128" pos:column="41"/></name><argument_list pos:line="128" pos:column="41">(<argument><expr><name><name pos:line="128" pos:column="42">r<pos:position pos:line="128" pos:column="43"/></name><operator pos:line="128" pos:column="43">-&gt;<pos:position pos:line="128" pos:column="48"/></operator><name pos:line="128" pos:column="45">pool<pos:position pos:line="128" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="51">new_out_size<pos:position pos:line="128" pos:column="63"/></name></expr></argument>)<pos:position pos:line="128" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="65"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="129" pos:column="21">memcpy<pos:position pos:line="129" pos:column="27"/></name><argument_list pos:line="129" pos:column="27">(<argument><expr><name pos:line="129" pos:column="28">new_out<pos:position pos:line="129" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="37">out<pos:position pos:line="129" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="42">current_length<pos:position pos:line="129" pos:column="56"/></name></expr></argument>)<pos:position pos:line="129" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="130" pos:column="21">out<pos:position pos:line="130" pos:column="24"/></name> <operator pos:line="130" pos:column="25">=<pos:position pos:line="130" pos:column="26"/></operator> <name pos:line="130" pos:column="27">new_out<pos:position pos:line="130" pos:column="34"/></name></expr>;<pos:position pos:line="130" pos:column="35"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="131" pos:column="21">out_size<pos:position pos:line="131" pos:column="29"/></name> <operator pos:line="131" pos:column="30">=<pos:position pos:line="131" pos:column="31"/></operator> <name pos:line="131" pos:column="32">new_out_size<pos:position pos:line="131" pos:column="44"/></name></expr>;<pos:position pos:line="131" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="132" pos:column="21">end_out<pos:position pos:line="132" pos:column="28"/></name> <operator pos:line="132" pos:column="29">=<pos:position pos:line="132" pos:column="30"/></operator> <name pos:line="132" pos:column="31">out<pos:position pos:line="132" pos:column="34"/></name> <operator pos:line="132" pos:column="35">+<pos:position pos:line="132" pos:column="36"/></operator> <name pos:line="132" pos:column="37">out_size<pos:position pos:line="132" pos:column="45"/></name> <operator pos:line="132" pos:column="46">-<pos:position pos:line="132" pos:column="47"/></operator> <literal type="number" pos:line="132" pos:column="48">1<pos:position pos:line="132" pos:column="49"/></literal></expr>;<pos:position pos:line="132" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="133" pos:column="21">next<pos:position pos:line="133" pos:column="25"/></name> <operator pos:line="133" pos:column="26">=<pos:position pos:line="133" pos:column="27"/></operator> <name pos:line="133" pos:column="28">out<pos:position pos:line="133" pos:column="31"/></name> <operator pos:line="133" pos:column="32">+<pos:position pos:line="133" pos:column="33"/></operator> <name pos:line="133" pos:column="34">current_length<pos:position pos:line="133" pos:column="48"/></name></expr>;<pos:position pos:line="133" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="134" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="135" pos:column="17">l<pos:position pos:line="135" pos:column="18"/></name> <operator pos:line="135" pos:column="19">=<pos:position pos:line="135" pos:column="20"/></operator> <ternary><condition><expr><operator pos:line="135" pos:column="21">(<pos:position pos:line="135" pos:column="22"/></operator><operator pos:line="135" pos:column="22">(<pos:position pos:line="135" pos:column="23"/></operator><name pos:line="135" pos:column="23">int<pos:position pos:line="135" pos:column="26"/></name><operator pos:line="135" pos:column="26">)<pos:position pos:line="135" pos:column="27"/></operator><name pos:line="135" pos:column="27">l<pos:position pos:line="135" pos:column="28"/></name> <operator pos:line="135" pos:column="29">&gt;<pos:position pos:line="135" pos:column="33"/></operator> <name pos:line="135" pos:column="31">end_out<pos:position pos:line="135" pos:column="38"/></name> <operator pos:line="135" pos:column="39">-<pos:position pos:line="135" pos:column="40"/></operator> <name pos:line="135" pos:column="41">next<pos:position pos:line="135" pos:column="45"/></name><operator pos:line="135" pos:column="45">)<pos:position pos:line="135" pos:column="46"/></operator></expr> ?<pos:position pos:line="135" pos:column="48"/></condition><then pos:line="135" pos:column="48"> <expr><operator pos:line="135" pos:column="49">(<pos:position pos:line="135" pos:column="50"/></operator><name pos:line="135" pos:column="50">end_out<pos:position pos:line="135" pos:column="57"/></name> <operator pos:line="135" pos:column="58">-<pos:position pos:line="135" pos:column="59"/></operator> <name pos:line="135" pos:column="60">next<pos:position pos:line="135" pos:column="64"/></name><operator pos:line="135" pos:column="64">)<pos:position pos:line="135" pos:column="65"/></operator></expr> <pos:position pos:line="135" pos:column="66"/></then><else pos:line="135" pos:column="66">: <expr><name pos:line="135" pos:column="68">l<pos:position pos:line="135" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="135" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="136" pos:column="17">memcpy<pos:position pos:line="136" pos:column="23"/></name><argument_list pos:line="136" pos:column="23">(<argument><expr><name pos:line="136" pos:column="24">next<pos:position pos:line="136" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="30">expansion<pos:position pos:line="136" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="41">l<pos:position pos:line="136" pos:column="42"/></name></expr></argument>)<pos:position pos:line="136" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name pos:line="137" pos:column="17">next<pos:position pos:line="137" pos:column="21"/></name> <operator pos:line="137" pos:column="22">+=<pos:position pos:line="137" pos:column="24"/></operator> <name pos:line="137" pos:column="25">l<pos:position pos:line="137" pos:column="26"/></name></expr>;<pos:position pos:line="137" pos:column="27"/></expr_stmt>
                <break pos:line="138" pos:column="17">break;<pos:position pos:line="138" pos:column="23"/></break>
            }<pos:position pos:line="139" pos:column="14"/></block>
        <default pos:line="140" pos:column="9">default:<pos:position pos:line="140" pos:column="17"/></default>
            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><name pos:line="141" pos:column="17">next<pos:position pos:line="141" pos:column="21"/></name> <operator pos:line="141" pos:column="22">==<pos:position pos:line="141" pos:column="24"/></operator> <name pos:line="141" pos:column="25">end_out<pos:position pos:line="141" pos:column="32"/></name></expr>)<pos:position pos:line="141" pos:column="33"/></condition><then pos:line="141" pos:column="33"> <block pos:line="141" pos:column="34">{
                <if pos:line="142" pos:column="17">if <condition pos:line="142" pos:column="20">(<expr><name pos:line="142" pos:column="21">out_size<pos:position pos:line="142" pos:column="29"/></name> <operator pos:line="142" pos:column="30">&lt;<pos:position pos:line="142" pos:column="34"/></operator> <name pos:line="142" pos:column="32">length<pos:position pos:line="142" pos:column="38"/></name></expr>)<pos:position pos:line="142" pos:column="39"/></condition><then pos:line="142" pos:column="39"> <block pos:line="142" pos:column="40">{
                    <comment type="block" pos:line="143" pos:column="21">/* double the buffer size */</comment>
                    <decl_stmt><decl><type><name pos:line="144" pos:column="21">apr_size_t<pos:position pos:line="144" pos:column="31"/></name></type> <name pos:line="144" pos:column="32">new_out_size<pos:position pos:line="144" pos:column="44"/></name> <init pos:line="144" pos:column="45">= <expr><name pos:line="144" pos:column="47">out_size<pos:position pos:line="144" pos:column="55"/></name> <operator pos:line="144" pos:column="56">*<pos:position pos:line="144" pos:column="57"/></operator> <literal type="number" pos:line="144" pos:column="58">2<pos:position pos:line="144" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="144" pos:column="60"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="145" pos:column="21">apr_size_t<pos:position pos:line="145" pos:column="31"/></name></type> <name pos:line="145" pos:column="32">current_length<pos:position pos:line="145" pos:column="46"/></name> <init pos:line="145" pos:column="47">= <expr><name pos:line="145" pos:column="49">next<pos:position pos:line="145" pos:column="53"/></name> <operator pos:line="145" pos:column="54">-<pos:position pos:line="145" pos:column="55"/></operator> <name pos:line="145" pos:column="56">out<pos:position pos:line="145" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="145" pos:column="60"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="146" pos:column="21">char<pos:position pos:line="146" pos:column="25"/></name> <modifier pos:line="146" pos:column="26">*<pos:position pos:line="146" pos:column="27"/></modifier></type><name pos:line="146" pos:column="27">new_out<pos:position pos:line="146" pos:column="34"/></name></decl>;<pos:position pos:line="146" pos:column="35"/></decl_stmt>
                    <if pos:line="147" pos:column="21">if <condition pos:line="147" pos:column="24">(<expr><name pos:line="147" pos:column="25">new_out_size<pos:position pos:line="147" pos:column="37"/></name> <operator pos:line="147" pos:column="38">&gt;<pos:position pos:line="147" pos:column="42"/></operator> <name pos:line="147" pos:column="40">length<pos:position pos:line="147" pos:column="46"/></name></expr>)<pos:position pos:line="147" pos:column="47"/></condition><then pos:line="147" pos:column="47"> <block pos:line="147" pos:column="48">{
                        <expr_stmt><expr><name pos:line="148" pos:column="25">new_out_size<pos:position pos:line="148" pos:column="37"/></name> <operator pos:line="148" pos:column="38">=<pos:position pos:line="148" pos:column="39"/></operator> <name pos:line="148" pos:column="40">length<pos:position pos:line="148" pos:column="46"/></name></expr>;<pos:position pos:line="148" pos:column="47"/></expr_stmt>
                    }<pos:position pos:line="149" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="150" pos:column="21">new_out<pos:position pos:line="150" pos:column="28"/></name> <operator pos:line="150" pos:column="29">=<pos:position pos:line="150" pos:column="30"/></operator> <call><name pos:line="150" pos:column="31">apr_palloc<pos:position pos:line="150" pos:column="41"/></name><argument_list pos:line="150" pos:column="41">(<argument><expr><name><name pos:line="150" pos:column="42">r<pos:position pos:line="150" pos:column="43"/></name><operator pos:line="150" pos:column="43">-&gt;<pos:position pos:line="150" pos:column="48"/></operator><name pos:line="150" pos:column="45">pool<pos:position pos:line="150" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="51">new_out_size<pos:position pos:line="150" pos:column="63"/></name></expr></argument>)<pos:position pos:line="150" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="65"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="151" pos:column="21">memcpy<pos:position pos:line="151" pos:column="27"/></name><argument_list pos:line="151" pos:column="27">(<argument><expr><name pos:line="151" pos:column="28">new_out<pos:position pos:line="151" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="37">out<pos:position pos:line="151" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="42">current_length<pos:position pos:line="151" pos:column="56"/></name></expr></argument>)<pos:position pos:line="151" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="58"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="152" pos:column="21">out<pos:position pos:line="152" pos:column="24"/></name> <operator pos:line="152" pos:column="25">=<pos:position pos:line="152" pos:column="26"/></operator> <name pos:line="152" pos:column="27">new_out<pos:position pos:line="152" pos:column="34"/></name></expr>;<pos:position pos:line="152" pos:column="35"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="153" pos:column="21">out_size<pos:position pos:line="153" pos:column="29"/></name> <operator pos:line="153" pos:column="30">=<pos:position pos:line="153" pos:column="31"/></operator> <name pos:line="153" pos:column="32">new_out_size<pos:position pos:line="153" pos:column="44"/></name></expr>;<pos:position pos:line="153" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="154" pos:column="21">end_out<pos:position pos:line="154" pos:column="28"/></name> <operator pos:line="154" pos:column="29">=<pos:position pos:line="154" pos:column="30"/></operator> <name pos:line="154" pos:column="31">out<pos:position pos:line="154" pos:column="34"/></name> <operator pos:line="154" pos:column="35">+<pos:position pos:line="154" pos:column="36"/></operator> <name pos:line="154" pos:column="37">out_size<pos:position pos:line="154" pos:column="45"/></name> <operator pos:line="154" pos:column="46">-<pos:position pos:line="154" pos:column="47"/></operator> <literal type="number" pos:line="154" pos:column="48">1<pos:position pos:line="154" pos:column="49"/></literal></expr>;<pos:position pos:line="154" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="155" pos:column="21">next<pos:position pos:line="155" pos:column="25"/></name> <operator pos:line="155" pos:column="26">=<pos:position pos:line="155" pos:column="27"/></operator> <name pos:line="155" pos:column="28">out<pos:position pos:line="155" pos:column="31"/></name> <operator pos:line="155" pos:column="32">+<pos:position pos:line="155" pos:column="33"/></operator> <name pos:line="155" pos:column="34">current_length<pos:position pos:line="155" pos:column="48"/></name></expr>;<pos:position pos:line="155" pos:column="49"/></expr_stmt>
                }<pos:position pos:line="156" pos:column="18"/></block></then>
                <else pos:line="157" pos:column="17">else <block pos:line="157" pos:column="22">{
                    <comment type="block" pos:line="158" pos:column="21">/* truncated */</comment>
                    <expr_stmt><expr><operator pos:line="159" pos:column="21">*<pos:position pos:line="159" pos:column="22"/></operator><name pos:line="159" pos:column="22">next<pos:position pos:line="159" pos:column="26"/></name> <operator pos:line="159" pos:column="27">=<pos:position pos:line="159" pos:column="28"/></operator> <literal type="char" pos:line="159" pos:column="29">'\0'<pos:position pos:line="159" pos:column="33"/></literal></expr>;<pos:position pos:line="159" pos:column="34"/></expr_stmt>
                    <return pos:line="160" pos:column="21">return <expr><name pos:line="160" pos:column="28">out<pos:position pos:line="160" pos:column="31"/></name></expr>;<pos:position pos:line="160" pos:column="32"/></return>
                }<pos:position pos:line="161" pos:column="18"/></block></else></if>
            }<pos:position pos:line="162" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="163" pos:column="13">*<pos:position pos:line="163" pos:column="14"/></operator><name pos:line="163" pos:column="14">next<pos:position pos:line="163" pos:column="18"/></name><operator pos:line="163" pos:column="18">++<pos:position pos:line="163" pos:column="20"/></operator> <operator pos:line="163" pos:column="21">=<pos:position pos:line="163" pos:column="22"/></operator> <name pos:line="163" pos:column="23">ch<pos:position pos:line="163" pos:column="25"/></name></expr>;<pos:position pos:line="163" pos:column="26"/></expr_stmt>
            <break pos:line="164" pos:column="13">break;<pos:position pos:line="164" pos:column="19"/></break>
        }<pos:position pos:line="165" pos:column="10"/></block></switch>
    }<pos:position pos:line="166" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="167" pos:column="5">*<pos:position pos:line="167" pos:column="6"/></operator><name pos:line="167" pos:column="6">next<pos:position pos:line="167" pos:column="10"/></name> <operator pos:line="167" pos:column="11">=<pos:position pos:line="167" pos:column="12"/></operator> <literal type="char" pos:line="167" pos:column="13">'\0'<pos:position pos:line="167" pos:column="17"/></literal></expr>;<pos:position pos:line="167" pos:column="18"/></expr_stmt>
    <return pos:line="168" pos:column="5">return <expr><name pos:line="168" pos:column="12">out<pos:position pos:line="168" pos:column="15"/></name></expr>;<pos:position pos:line="168" pos:column="16"/></return>
}<pos:position pos:line="169" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_485_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cmd_log_message<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cmd_parms<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">dconf_<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="66">const<pos:position pos:line="1" pos:column="71"/></specifier> <name pos:line="1" pos:column="72">char<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">arg1<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">arg2<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">char<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">arg3<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">msg_entry<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">entry<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><call><name pos:line="4" pos:column="24">apr_pcalloc<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name><name pos:line="4" pos:column="36">cmd<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">pool<pos:position pos:line="4" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="47">sizeof<argument_list pos:line="4" pos:column="53">(<argument><expr><name pos:line="4" pos:column="54">msg_entry<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">log_debug_dirconf<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">dconf<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">dconf_<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="12">j<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">err<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name><name pos:line="8" pos:column="17">args<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><literal type="number" pos:line="8" pos:column="22">2<pos:position pos:line="8" pos:column="23"/></literal></expr>]<pos:position pos:line="8" pos:column="24"/></index></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">args<pos:position pos:line="9" pos:column="9"/></name><index pos:line="9" pos:column="9">[<expr><literal type="number" pos:line="9" pos:column="10">0<pos:position pos:line="9" pos:column="11"/></literal></expr>]<pos:position pos:line="9" pos:column="12"/></index></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">arg2<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">args<pos:position pos:line="10" pos:column="9"/></name><index pos:line="10" pos:column="9">[<expr><literal type="number" pos:line="10" pos:column="10">1<pos:position pos:line="10" pos:column="11"/></literal></expr>]<pos:position pos:line="10" pos:column="12"/></index></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">arg3<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="12" pos:column="5">entry<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">msg_expr<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">ap_expr_parse_cmd<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">cmd<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">arg1<pos:position pos:line="12" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="52">AP_EXPR_FLAG_STRING_RESULT<pos:position pos:line="12" pos:column="78"/></name><operator pos:line="12" pos:column="78">|<pos:position pos:line="12" pos:column="79"/></operator>
                                                   <name pos:line="13" pos:column="52">AP_EXPR_FLAG_DONT_VARY<pos:position pos:line="13" pos:column="74"/></name></expr></argument>,
                                        <argument><expr><operator pos:line="14" pos:column="41">&amp;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="42">err<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">NULL<pos:position pos:line="14" pos:column="51"/></name></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">err<pos:position pos:line="15" pos:column="12"/></name></expr>)<pos:position pos:line="15" pos:column="13"/></condition><then pos:line="15" pos:column="13">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><call><name pos:line="16" pos:column="16">apr_psprintf<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">cmd<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">pool<pos:position pos:line="16" pos:column="38"/></name></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="17" pos:column="29">"Could not parse message expression '%s': %s"<pos:position pos:line="17" pos:column="74"/></literal></expr></argument>,
                            <argument><expr><name pos:line="18" pos:column="29">arg1<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="35">err<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></return></block></then></if>

    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">i<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <literal type="number" pos:line="20" pos:column="14">0<pos:position pos:line="20" pos:column="15"/></literal></expr>;<pos:position pos:line="20" pos:column="16"/></init> <condition><expr><name pos:line="20" pos:column="17">i<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&lt;<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="21">2<pos:position pos:line="20" pos:column="22"/></literal></expr>;<pos:position pos:line="20" pos:column="23"/></condition> <incr><expr><name pos:line="20" pos:column="24">i<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">++<pos:position pos:line="20" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="28"/></control> <block pos:line="20" pos:column="29">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">args<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><name pos:line="21" pos:column="18">i<pos:position pos:line="21" pos:column="19"/></name></expr>]<pos:position pos:line="21" pos:column="20"/></index></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">NULL<pos:position pos:line="21" pos:column="28"/></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29">
            <block type="pseudo"><break pos:line="22" pos:column="13">break;<pos:position pos:line="22" pos:column="19"/></break></block></then></if>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">strncasecmp<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name><name pos:line="24" pos:column="25">args<pos:position pos:line="24" pos:column="29"/></name><index pos:line="24" pos:column="29">[<expr><name pos:line="24" pos:column="30">i<pos:position pos:line="24" pos:column="31"/></name></expr>]<pos:position pos:line="24" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="34">"hook="<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="43">5<pos:position pos:line="24" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call> <operator pos:line="24" pos:column="46">==<pos:position pos:line="24" pos:column="48"/></operator> <literal type="number" pos:line="24" pos:column="49">0<pos:position pos:line="24" pos:column="50"/></literal></expr>)<pos:position pos:line="24" pos:column="51"/></condition><then pos:line="24" pos:column="51"> <block pos:line="24" pos:column="52">{
            <decl_stmt><decl><type><specifier pos:line="25" pos:column="13">const<pos:position pos:line="25" pos:column="18"/></specifier> <name pos:line="25" pos:column="19">char<pos:position pos:line="25" pos:column="23"/></name> <modifier pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></modifier></type><name pos:line="25" pos:column="25">name<pos:position pos:line="25" pos:column="29"/></name> <init pos:line="25" pos:column="30">= <expr><name><name pos:line="25" pos:column="32">args<pos:position pos:line="25" pos:column="36"/></name><index pos:line="25" pos:column="36">[<expr><name pos:line="25" pos:column="37">i<pos:position pos:line="25" pos:column="38"/></name></expr>]<pos:position pos:line="25" pos:column="39"/></index></name> <operator pos:line="25" pos:column="40">+<pos:position pos:line="25" pos:column="41"/></operator> <literal type="number" pos:line="25" pos:column="42">5<pos:position pos:line="25" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="44"/></decl_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">j<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
            <while pos:line="27" pos:column="13">while <condition pos:line="27" pos:column="19">(<expr><name><name pos:line="27" pos:column="20">hooks<pos:position pos:line="27" pos:column="25"/></name><index pos:line="27" pos:column="25">[<expr><name pos:line="27" pos:column="26">j<pos:position pos:line="27" pos:column="27"/></name></expr>]<pos:position pos:line="27" pos:column="28"/></index></name></expr>)<pos:position pos:line="27" pos:column="29"/></condition> <block pos:line="27" pos:column="30">{
                <if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">strcasecmp<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name><name pos:line="28" pos:column="32">hooks<pos:position pos:line="28" pos:column="37"/></name><index pos:line="28" pos:column="37">[<expr><name pos:line="28" pos:column="38">j<pos:position pos:line="28" pos:column="39"/></name></expr>]<pos:position pos:line="28" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">name<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call> <operator pos:line="28" pos:column="48">==<pos:position pos:line="28" pos:column="50"/></operator> <literal type="number" pos:line="28" pos:column="51">0<pos:position pos:line="28" pos:column="52"/></literal></expr>)<pos:position pos:line="28" pos:column="53"/></condition><then pos:line="28" pos:column="53"> <block pos:line="28" pos:column="54">{
                    <expr_stmt><expr><name><name pos:line="29" pos:column="21">entry<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">hook<pos:position pos:line="29" pos:column="32"/></name></name> <operator pos:line="29" pos:column="33">=<pos:position pos:line="29" pos:column="34"/></operator> <name><name pos:line="29" pos:column="35">hooks<pos:position pos:line="29" pos:column="40"/></name><index pos:line="29" pos:column="40">[<expr><name pos:line="29" pos:column="41">j<pos:position pos:line="29" pos:column="42"/></name></expr>]<pos:position pos:line="29" pos:column="43"/></index></name></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
                    <break pos:line="30" pos:column="21">break;<pos:position pos:line="30" pos:column="27"/></break>
                }<pos:position pos:line="31" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="32" pos:column="17">j<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">++<pos:position pos:line="32" pos:column="20"/></operator></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="33" pos:column="14"/></block></while>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name><name pos:line="34" pos:column="17">entry<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">hook<pos:position pos:line="34" pos:column="28"/></name></name> <operator pos:line="34" pos:column="29">==<pos:position pos:line="34" pos:column="31"/></operator> <name pos:line="34" pos:column="32">NULL<pos:position pos:line="34" pos:column="36"/></name></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37"> <block pos:line="34" pos:column="38">{
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">strcmp<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">name<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="34">"*"<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call> <operator pos:line="35" pos:column="39">==<pos:position pos:line="35" pos:column="41"/></operator> <literal type="number" pos:line="35" pos:column="42">0<pos:position pos:line="35" pos:column="43"/></literal> <operator pos:line="35" pos:column="44">||<pos:position pos:line="35" pos:column="46"/></operator> <call><name pos:line="35" pos:column="47">strcasecmp<pos:position pos:line="35" pos:column="57"/></name><argument_list pos:line="35" pos:column="57">(<argument><expr><name pos:line="35" pos:column="58">name<pos:position pos:line="35" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="64">allhooks<pos:position pos:line="35" pos:column="72"/></name></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call> <operator pos:line="35" pos:column="74">==<pos:position pos:line="35" pos:column="76"/></operator> <literal type="number" pos:line="35" pos:column="77">0<pos:position pos:line="35" pos:column="78"/></literal></expr>)<pos:position pos:line="35" pos:column="79"/></condition><then pos:line="35" pos:column="79">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="21">entry<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">hook<pos:position pos:line="36" pos:column="32"/></name></name> <operator pos:line="36" pos:column="33">=<pos:position pos:line="36" pos:column="34"/></operator> <name pos:line="36" pos:column="35">allhooks<pos:position pos:line="36" pos:column="43"/></name></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt></block></then>
                <else pos:line="37" pos:column="17">else
                    <block type="pseudo"><return pos:line="38" pos:column="21">return <expr><call><name pos:line="38" pos:column="28">apr_psprintf<pos:position pos:line="38" pos:column="40"/></name><argument_list pos:line="38" pos:column="40">(<argument><expr><name><name pos:line="38" pos:column="41">cmd<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">-&gt;<pos:position pos:line="38" pos:column="49"/></operator><name pos:line="38" pos:column="46">pool<pos:position pos:line="38" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="52">"Invalid hook name: %s"<pos:position pos:line="38" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="77">name<pos:position pos:line="38" pos:column="81"/></name></expr></argument>)<pos:position pos:line="38" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="83"/></return></block></else></if>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
        }<pos:position pos:line="40" pos:column="10"/></block></then>
        <elseif pos:line="41" pos:column="9">else <if pos:line="41" pos:column="14">if <condition pos:line="41" pos:column="17">(<expr><call><name pos:line="41" pos:column="18">strncasecmp<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name><name pos:line="41" pos:column="30">args<pos:position pos:line="41" pos:column="34"/></name><index pos:line="41" pos:column="34">[<expr><name pos:line="41" pos:column="35">i<pos:position pos:line="41" pos:column="36"/></name></expr>]<pos:position pos:line="41" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="39">"expr="<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="48">5<pos:position pos:line="41" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call> <operator pos:line="41" pos:column="51">==<pos:position pos:line="41" pos:column="53"/></operator> <literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56"> <block pos:line="41" pos:column="57">{
            <decl_stmt><decl><type><specifier pos:line="42" pos:column="13">const<pos:position pos:line="42" pos:column="18"/></specifier> <name pos:line="42" pos:column="19">char<pos:position pos:line="42" pos:column="23"/></name> <modifier pos:line="42" pos:column="24">*<pos:position pos:line="42" pos:column="25"/></modifier></type><name pos:line="42" pos:column="25">expr<pos:position pos:line="42" pos:column="29"/></name> <init pos:line="42" pos:column="30">= <expr><name><name pos:line="42" pos:column="32">args<pos:position pos:line="42" pos:column="36"/></name><index pos:line="42" pos:column="36">[<expr><name pos:line="42" pos:column="37">i<pos:position pos:line="42" pos:column="38"/></name></expr>]<pos:position pos:line="42" pos:column="39"/></index></name> <operator pos:line="42" pos:column="40">+<pos:position pos:line="42" pos:column="41"/></operator> <literal type="number" pos:line="42" pos:column="42">5<pos:position pos:line="42" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="44"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">entry<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">condition<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <call><name pos:line="43" pos:column="32">ap_expr_parse_cmd<pos:position pos:line="43" pos:column="49"/></name><argument_list pos:line="43" pos:column="49">(<argument><expr><name pos:line="43" pos:column="50">cmd<pos:position pos:line="43" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="55">expr<pos:position pos:line="43" pos:column="59"/></name></expr></argument>,
                                                 <argument><expr><name pos:line="44" pos:column="50">AP_EXPR_FLAG_DONT_VARY<pos:position pos:line="44" pos:column="72"/></name></expr></argument>,
                                                 <argument><expr><operator pos:line="45" pos:column="50">&amp;<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="51">err<pos:position pos:line="45" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="56">NULL<pos:position pos:line="45" pos:column="60"/></name></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt>
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name pos:line="46" pos:column="17">err<pos:position pos:line="46" pos:column="20"/></name></expr>)<pos:position pos:line="46" pos:column="21"/></condition><then pos:line="46" pos:column="21">
                <block type="pseudo"><return pos:line="47" pos:column="17">return <expr><call><name pos:line="47" pos:column="24">apr_psprintf<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name><name pos:line="47" pos:column="37">cmd<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">pool<pos:position pos:line="47" pos:column="46"/></name></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="48" pos:column="37">"Could not parse expression '%s': %s"<pos:position pos:line="48" pos:column="74"/></literal></expr></argument>,
                                    <argument><expr><name pos:line="49" pos:column="37">expr<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="43">err<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></return></block></then></if>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif>
        <else pos:line="51" pos:column="9">else <block pos:line="51" pos:column="14">{
            <return pos:line="52" pos:column="13">return <expr><call><name pos:line="52" pos:column="20">apr_psprintf<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name><name pos:line="52" pos:column="33">cmd<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">-&gt;<pos:position pos:line="52" pos:column="41"/></operator><name pos:line="52" pos:column="38">pool<pos:position pos:line="52" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="44">"Invalid argument %s"<pos:position pos:line="52" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="67">args<pos:position pos:line="52" pos:column="71"/></name><index pos:line="52" pos:column="71">[<expr><name pos:line="52" pos:column="72">i<pos:position pos:line="52" pos:column="73"/></name></expr>]<pos:position pos:line="52" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="76"/></return>
        }<pos:position pos:line="53" pos:column="10"/></block></else></if>
    }<pos:position pos:line="54" pos:column="6"/></block></for>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">entry<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">hook<pos:position pos:line="55" pos:column="20"/></name></name> <operator pos:line="55" pos:column="21">==<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="24">NULL<pos:position pos:line="55" pos:column="28"/></name></expr>)<pos:position pos:line="55" pos:column="29"/></condition><then pos:line="55" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="9">entry<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">hook<pos:position pos:line="56" pos:column="20"/></name></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <name><name pos:line="56" pos:column="23">hooks<pos:position pos:line="56" pos:column="28"/></name><index pos:line="56" pos:column="28">[<expr><literal type="number" pos:line="56" pos:column="29">0<pos:position pos:line="56" pos:column="30"/></literal></expr>]<pos:position pos:line="56" pos:column="31"/></index></name></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><name><name pos:line="58" pos:column="10">dconf<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">-&gt;<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="17">entries<pos:position pos:line="58" pos:column="24"/></name></name></expr>)<pos:position pos:line="58" pos:column="25"/></condition><then pos:line="58" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="59" pos:column="9">dconf<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">entries<pos:position pos:line="59" pos:column="23"/></name></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator> <call><name pos:line="59" pos:column="26">apr_array_make<pos:position pos:line="59" pos:column="40"/></name><argument_list pos:line="59" pos:column="40">(<argument><expr><name><name pos:line="59" pos:column="41">cmd<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">pool<pos:position pos:line="59" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="52">4<pos:position pos:line="59" pos:column="53"/></literal></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="55">sizeof<argument_list pos:line="59" pos:column="61">(<argument><expr><name pos:line="59" pos:column="62">msg_entry<pos:position pos:line="59" pos:column="71"/></name> <operator pos:line="59" pos:column="72">*<pos:position pos:line="59" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="76"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">APR_ARRAY_PUSH<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><name><name pos:line="61" pos:column="20">dconf<pos:position pos:line="61" pos:column="25"/></name><operator pos:line="61" pos:column="25">-&gt;<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="27">entries<pos:position pos:line="61" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="36">msg_entry<pos:position pos:line="61" pos:column="45"/></name> <operator pos:line="61" pos:column="46">*<pos:position pos:line="61" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call> <operator pos:line="61" pos:column="49">=<pos:position pos:line="61" pos:column="50"/></operator> <name pos:line="61" pos:column="51">entry<pos:position pos:line="61" pos:column="56"/></name></expr>;<pos:position pos:line="61" pos:column="57"/></expr_stmt>

    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">NULL<pos:position pos:line="63" pos:column="16"/></name></expr>;<pos:position pos:line="63" pos:column="17"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

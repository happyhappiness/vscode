<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_874.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_callback_Info<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">MODSSL_INFO_CB_ARG_TYPE<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">ssl<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">where<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">rc<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">conn_rec<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">c<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">server_rec<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">s<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLConnRec<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">scr<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* Retrieve the conn_rec and the associated SSLConnRec. */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">c<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <operator pos:line="8" pos:column="14">(<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">conn_rec<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">)<pos:position pos:line="8" pos:column="26"/></operator><call><name pos:line="8" pos:column="26">SSL_get_app_data<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">(<argument><expr><operator pos:line="8" pos:column="43">(<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">SSL<pos:position pos:line="8" pos:column="47"/></name> <operator pos:line="8" pos:column="48">*<pos:position pos:line="8" pos:column="49"/></operator><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">ssl<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call><operator pos:line="8" pos:column="54">)<pos:position pos:line="8" pos:column="55"/></operator> <operator pos:line="8" pos:column="56">==<pos:position pos:line="8" pos:column="58"/></operator> <name pos:line="8" pos:column="59">NULL<pos:position pos:line="8" pos:column="63"/></name></expr>)<pos:position pos:line="8" pos:column="64"/></condition><then pos:line="8" pos:column="64"> <block pos:line="8" pos:column="65">{
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">scr<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">myConnConfig<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">c<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41"> <block pos:line="12" pos:column="42">{
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* If the reneg state is to reject renegotiations, check the SSL
     * state machine and move to ABORT if a Client Hello is being
     * read. */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">where<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">&amp;<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="18">SSL_CB_ACCEPT_LOOP<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">)<pos:position pos:line="19" pos:column="37"/></operator> <operator pos:line="19" pos:column="38">&amp;&amp;<pos:position pos:line="19" pos:column="48"/></operator> <name><name pos:line="19" pos:column="41">scr<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">reneg_state<pos:position pos:line="19" pos:column="57"/></name></name> <operator pos:line="19" pos:column="58">==<pos:position pos:line="19" pos:column="60"/></operator> <name pos:line="19" pos:column="61">RENEG_REJECT<pos:position pos:line="19" pos:column="73"/></name></expr>)<pos:position pos:line="19" pos:column="74"/></condition><then pos:line="19" pos:column="74"> <block pos:line="19" pos:column="75">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">state<pos:position pos:line="20" pos:column="18"/></name> <init pos:line="20" pos:column="19">= <expr><call><name pos:line="20" pos:column="21">SSL_get_state<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><operator pos:line="20" pos:column="35">(<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">SSL<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">*<pos:position pos:line="20" pos:column="41"/></operator><operator pos:line="20" pos:column="41">)<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">ssl<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="47"/></decl_stmt>
        
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">state<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">SSL3_ST_SR_CLNT_HELLO_A<pos:position pos:line="22" pos:column="45"/></name> 
            <operator pos:line="23" pos:column="13">||<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">state<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">==<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">SSL23_ST_SR_CLNT_HELLO_A<pos:position pos:line="23" pos:column="49"/></name></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50"> <block pos:line="23" pos:column="51">{
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">scr<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">reneg_state<pos:position pos:line="24" pos:column="29"/></name></name> <operator pos:line="24" pos:column="30">=<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="32">RENEG_ABORT<pos:position pos:line="24" pos:column="43"/></name></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">ap_log_cerror<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">APLOG_MARK<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">APLOG_ERR<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="50">0<pos:position pos:line="25" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">c<pos:position pos:line="25" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="26" pos:column="27">"rejecting client initiated renegotiation"<pos:position pos:line="26" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then>
    <comment type="block" pos:line="29" pos:column="5">/* If the first handshake is complete, change state to reject any
     * subsequent client-initated renegotiation. */</comment>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">where<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">&amp;<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="23">SSL_CB_HANDSHAKE_DONE<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">)<pos:position pos:line="31" pos:column="45"/></operator> <operator pos:line="31" pos:column="46">&amp;&amp;<pos:position pos:line="31" pos:column="56"/></operator> <name><name pos:line="31" pos:column="49">scr<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">-&gt;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="54">reneg_state<pos:position pos:line="31" pos:column="65"/></name></name> <operator pos:line="31" pos:column="66">==<pos:position pos:line="31" pos:column="68"/></operator> <name pos:line="31" pos:column="69">RENEG_INIT<pos:position pos:line="31" pos:column="79"/></name></expr>)<pos:position pos:line="31" pos:column="80"/></condition><then pos:line="31" pos:column="80"> <block pos:line="31" pos:column="81">{
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">scr<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">reneg_state<pos:position pos:line="32" pos:column="25"/></name></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">RENEG_REJECT<pos:position pos:line="32" pos:column="40"/></name></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="35" pos:column="5">s<pos:position pos:line="35" pos:column="6"/></name> <operator pos:line="35" pos:column="7">=<pos:position pos:line="35" pos:column="8"/></operator> <name><name pos:line="35" pos:column="9">c<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">base_server<pos:position pos:line="35" pos:column="23"/></name></name></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">s<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">&amp;&amp;<pos:position pos:line="36" pos:column="21"/></operator> <name><name pos:line="36" pos:column="14">s<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">loglevel<pos:position pos:line="36" pos:column="25"/></name></name> <operator pos:line="36" pos:column="26">&gt;=<pos:position pos:line="36" pos:column="31"/></operator> <name pos:line="36" pos:column="29">APLOG_DEBUG<pos:position pos:line="36" pos:column="40"/></name></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41"> <block pos:line="36" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">log_tracing_state<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">ssl<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="32">c<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="35">s<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">where<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">rc<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_33_httpd-2.0.63.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <block pos:line="1" pos:column="33">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">c<pos:position pos:line="2" pos:column="8"/></name></decl>;<pos:position pos:line="2" pos:column="9"/></decl_stmt>
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">argc<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">&lt;<pos:position pos:line="3" pos:column="16"/></operator> <literal type="number" pos:line="3" pos:column="14">3<pos:position pos:line="3" pos:column="15"/></literal></expr>)<pos:position pos:line="3" pos:column="16"/></condition><then pos:line="3" pos:column="16"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="3" pos:column="17">usage<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name><name pos:line="3" pos:column="23">argv<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">0<pos:position pos:line="3" pos:column="29"/></literal></expr>]<pos:position pos:line="3" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="32"/></expr_stmt></block></then></if>
  
  <expr_stmt><expr><name pos:line="5" pos:column="3">machine<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <name><name pos:line="5" pos:column="13">argv<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><literal type="number" pos:line="5" pos:column="18">1<pos:position pos:line="5" pos:column="19"/></literal></expr>]<pos:position pos:line="5" pos:column="20"/></index></name></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt> 
  <expr_stmt><expr><name pos:line="6" pos:column="3">file<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <name><name pos:line="6" pos:column="10">argv<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">2<pos:position pos:line="6" pos:column="16"/></literal></expr>]<pos:position pos:line="6" pos:column="17"/></index></name></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">optind<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <literal type="number" pos:line="7" pos:column="12">3<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></expr_stmt>
  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">c<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">getopt<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">argc<pos:position pos:line="8" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="27">argv<pos:position pos:line="8" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="8" pos:column="32">"p:n:c:d:t:d:k"<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call><operator pos:line="8" pos:column="48">)<pos:position pos:line="8" pos:column="49"/></operator><operator pos:line="8" pos:column="49">&gt;<pos:position pos:line="8" pos:column="53"/></operator><literal type="number" pos:line="8" pos:column="50">0<pos:position pos:line="8" pos:column="51"/></literal></expr>)<pos:position pos:line="8" pos:column="52"/></condition> <block pos:line="8" pos:column="53">{
    <switch pos:line="9" pos:column="5">switch<condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">c<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition> <block pos:line="9" pos:column="15">{
    <case pos:line="10" pos:column="5">case <expr><literal type="char" pos:line="10" pos:column="10">'d'<pos:position pos:line="10" pos:column="13"/></literal></expr>:<pos:position pos:line="10" pos:column="14"/></case>
      <break pos:line="11" pos:column="7">break;<pos:position pos:line="11" pos:column="13"/></break>
    <case pos:line="12" pos:column="5">case <expr><literal type="char" pos:line="12" pos:column="10">'n'<pos:position pos:line="12" pos:column="13"/></literal></expr>:<pos:position pos:line="12" pos:column="14"/></case> 
      <expr_stmt><expr><name pos:line="13" pos:column="7">requests<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">atoi<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">optarg<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
      <if pos:line="14" pos:column="7">if<condition pos:line="14" pos:column="9">(<expr><operator pos:line="14" pos:column="10">!<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">requests<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">printf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="string" pos:line="15" pos:column="16">"Invalid number of requests\n"<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">exit<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="17" pos:column="8"/></block></then></if>
      <break pos:line="18" pos:column="7">break;<pos:position pos:line="18" pos:column="13"/></break>
    <case pos:line="19" pos:column="5">case <expr><literal type="char" pos:line="19" pos:column="10">'k'<pos:position pos:line="19" pos:column="13"/></literal></expr>:<pos:position pos:line="19" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="20" pos:column="7">keepalive<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator><literal type="number" pos:line="20" pos:column="17">1<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
      <break pos:line="21" pos:column="7">break;<pos:position pos:line="21" pos:column="13"/></break>
    <case pos:line="22" pos:column="5">case <expr><literal type="char" pos:line="22" pos:column="10">'c'<pos:position pos:line="22" pos:column="13"/></literal></expr>:<pos:position pos:line="22" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="23" pos:column="7">concurrency<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">atoi<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">optarg<pos:position pos:line="23" pos:column="32"/></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
      <break pos:line="24" pos:column="7">break;<pos:position pos:line="24" pos:column="13"/></break>
    <case pos:line="25" pos:column="5">case <expr><literal type="char" pos:line="25" pos:column="10">'p'<pos:position pos:line="25" pos:column="13"/></literal></expr>:<pos:position pos:line="25" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="26" pos:column="7">port<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">atoi<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">optarg<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
      <break pos:line="27" pos:column="7">break;<pos:position pos:line="27" pos:column="13"/></break>
    <case pos:line="28" pos:column="5">case <expr><literal type="char" pos:line="28" pos:column="10">'t'<pos:position pos:line="28" pos:column="13"/></literal></expr>:<pos:position pos:line="28" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="29" pos:column="7">tlimit<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">atoi<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">optarg<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="30" pos:column="7">requests<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">MAX_REQUESTS<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>  <comment type="block" pos:line="30" pos:column="33">/* need to size data array on something */</comment>
      <break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break>
    <default pos:line="32" pos:column="5">default:<pos:position pos:line="32" pos:column="13"/></default>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">usage<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name><name pos:line="33" pos:column="13">argv<pos:position pos:line="33" pos:column="17"/></name><index pos:line="33" pos:column="17">[<expr><literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>]<pos:position pos:line="33" pos:column="20"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>
      <break pos:line="34" pos:column="7">break;<pos:position pos:line="34" pos:column="13"/></break>
    }<pos:position pos:line="35" pos:column="6"/></block></switch>
  }<pos:position pos:line="36" pos:column="4"/></block></while>   
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">test<pos:position pos:line="37" pos:column="7"/></name><argument_list pos:line="37" pos:column="7">()<pos:position pos:line="37" pos:column="9"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="10"/></expr_stmt>
  <return pos:line="38" pos:column="3">return <expr><literal type="number" pos:line="38" pos:column="10">0<pos:position pos:line="38" pos:column="11"/></literal></expr>;<pos:position pos:line="38" pos:column="12"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5538.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">post_rotate<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">apr_pool_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">pool<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="43">struct<pos:position pos:line="1" pos:column="49"/></name> <name pos:line="1" pos:column="50">logfile<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">newlog<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="2" pos:column="25">rotate_config_t<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">config<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">rotate_status_t<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">status<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">error<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><literal type="number" pos:line="5" pos:column="16">120<pos:position pos:line="5" pos:column="19"/></literal></expr>]<pos:position pos:line="5" pos:column="20"/></index></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_procattr_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">pattr<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name><name pos:line="7" pos:column="17">argv<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">4<pos:position pos:line="7" pos:column="23"/></literal></expr>]<pos:position pos:line="7" pos:column="24"/></index></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_proc_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">proc<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Handle link file, if configured. */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">config<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">linkfile<pos:position pos:line="11" pos:column="25"/></name></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26"> <block pos:line="11" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">apr_file_remove<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name><name pos:line="12" pos:column="25">config<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">linkfile<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="43">newlog<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">pool<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">config<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">verbose<pos:position pos:line="13" pos:column="28"/></name></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29"> <block pos:line="13" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">fprintf<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">stderr<pos:position pos:line="14" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="14" pos:column="28">"Linking %s to %s\n"<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="50">newlog<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">-&gt;<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="58">name<pos:position pos:line="14" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="64">config<pos:position pos:line="14" pos:column="70"/></name><operator pos:line="14" pos:column="70">-&gt;<pos:position pos:line="14" pos:column="75"/></operator><name pos:line="14" pos:column="72">linkfile<pos:position pos:line="14" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="82"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="16" pos:column="9">rv<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">apr_file_link<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name><name pos:line="16" pos:column="28">newlog<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">name<pos:position pos:line="16" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="42">config<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">linkfile<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">rv<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">APR_SUCCESS<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">char<pos:position pos:line="18" pos:column="17"/></name></type> <name><name pos:line="18" pos:column="18">error<pos:position pos:line="18" pos:column="23"/></name><index pos:line="18" pos:column="23">[<expr><literal type="number" pos:line="18" pos:column="24">120<pos:position pos:line="18" pos:column="27"/></literal></expr>]<pos:position pos:line="18" pos:column="28"/></index></name></decl>;<pos:position pos:line="18" pos:column="29"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">apr_strerror<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">rv<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">error<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="37">sizeof <name pos:line="19" pos:column="44">error<pos:position pos:line="19" pos:column="49"/></name></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">fprintf<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">stderr<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="29">"Error linking file %s to %s (%s)\n"<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="21" pos:column="21">newlog<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">name<pos:position pos:line="21" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="35">config<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">linkfile<pos:position pos:line="21" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">error<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">exit<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><literal type="number" pos:line="22" pos:column="18">2<pos:position pos:line="22" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">config<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">postrotate_prog<pos:position pos:line="26" pos:column="33"/></name></name></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34"> <block pos:line="26" pos:column="35">{
        <comment type="block" pos:line="27" pos:column="9">/* Nothing more to do. */</comment>
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* Collect any zombies from a previous run, but don't wait. */</comment>
    <while pos:line="32" pos:column="5">while <condition pos:line="32" pos:column="11">(<expr><call><name pos:line="32" pos:column="12">apr_proc_wait_all_procs<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><operator pos:line="32" pos:column="36">&amp;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="37">proc<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">NULL<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">NULL<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">APR_NOWAIT<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="67">pool<pos:position pos:line="32" pos:column="71"/></name></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call> <operator pos:line="32" pos:column="73">==<pos:position pos:line="32" pos:column="75"/></operator> <name pos:line="32" pos:column="76">APR_CHILD_DONE<pos:position pos:line="32" pos:column="90"/></name></expr>)<pos:position pos:line="32" pos:column="91"/></condition>
        <comment type="block" pos:line="33" pos:column="9">/* noop */</comment><block type="pseudo"><empty_stmt pos:line="33" pos:column="19">;<pos:position pos:line="33" pos:column="20"/></empty_stmt></block></while>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">(<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">rv<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">apr_procattr_create<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><operator pos:line="35" pos:column="35">&amp;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="36">pattr<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">pool<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call><operator pos:line="35" pos:column="48">)<pos:position pos:line="35" pos:column="49"/></operator> <operator pos:line="35" pos:column="50">!=<pos:position pos:line="35" pos:column="52"/></operator> <name pos:line="35" pos:column="53">APR_SUCCESS<pos:position pos:line="35" pos:column="64"/></name></expr>)<pos:position pos:line="35" pos:column="65"/></condition><then pos:line="35" pos:column="65"> <block pos:line="35" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">fprintf<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">stderr<pos:position pos:line="36" pos:column="23"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="37" pos:column="17">"post_rotate: apr_procattr_create failed for '%s': %s\n"<pos:position pos:line="37" pos:column="73"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="38" pos:column="17">config<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">postrotate_prog<pos:position pos:line="38" pos:column="40"/></name></name></expr></argument>,
                <argument><expr><call><name pos:line="39" pos:column="17">apr_strerror<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">rv<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">error<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="41">sizeof<argument_list pos:line="39" pos:column="47">(<argument><expr><name pos:line="39" pos:column="48">error<pos:position pos:line="39" pos:column="53"/></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>
        <return pos:line="40" pos:column="9">return;<pos:position pos:line="40" pos:column="16"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="43" pos:column="5">rv<pos:position pos:line="43" pos:column="7"/></name> <operator pos:line="43" pos:column="8">=<pos:position pos:line="43" pos:column="9"/></operator> <call><name pos:line="43" pos:column="10">apr_procattr_error_check_set<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">pattr<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="46">1<pos:position pos:line="43" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">rv<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">==<pos:position pos:line="44" pos:column="14"/></operator> <name pos:line="44" pos:column="15">APR_SUCCESS<pos:position pos:line="44" pos:column="26"/></name></expr>)<pos:position pos:line="44" pos:column="27"/></condition><then pos:line="44" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="9">rv<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">apr_procattr_cmdtype_set<pos:position pos:line="45" pos:column="38"/></name><argument_list pos:line="45" pos:column="38">(<argument><expr><name pos:line="45" pos:column="39">pattr<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="46">APR_PROGRAM_ENV<pos:position pos:line="45" pos:column="61"/></name></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="63"/></expr_stmt></block></then></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">rv<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">!=<pos:position pos:line="47" pos:column="14"/></operator> <name pos:line="47" pos:column="15">APR_SUCCESS<pos:position pos:line="47" pos:column="26"/></name></expr>)<pos:position pos:line="47" pos:column="27"/></condition><then pos:line="47" pos:column="27"> <block pos:line="47" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">fprintf<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">stderr<pos:position pos:line="48" pos:column="23"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="49" pos:column="17">"post_rotate: could not set up process attributes for '%s': %s\n"<pos:position pos:line="49" pos:column="82"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="50" pos:column="17">config<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">-&gt;<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="25">postrotate_prog<pos:position pos:line="50" pos:column="40"/></name></name></expr></argument>,
                <argument><expr><call><name pos:line="51" pos:column="17">apr_strerror<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">rv<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="34">error<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="41">sizeof<argument_list pos:line="51" pos:column="47">(<argument><expr><name pos:line="51" pos:column="48">error<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>
        <return pos:line="52" pos:column="9">return;<pos:position pos:line="52" pos:column="16"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="55" pos:column="5">argv<pos:position pos:line="55" pos:column="9"/></name><index pos:line="55" pos:column="9">[<expr><literal type="number" pos:line="55" pos:column="10">0<pos:position pos:line="55" pos:column="11"/></literal></expr>]<pos:position pos:line="55" pos:column="12"/></index></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <name><name pos:line="55" pos:column="15">config<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">postrotate_prog<pos:position pos:line="55" pos:column="38"/></name></name></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">argv<pos:position pos:line="56" pos:column="9"/></name><index pos:line="56" pos:column="9">[<expr><literal type="number" pos:line="56" pos:column="10">1<pos:position pos:line="56" pos:column="11"/></literal></expr>]<pos:position pos:line="56" pos:column="12"/></index></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <name><name pos:line="56" pos:column="15">newlog<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">name<pos:position pos:line="56" pos:column="27"/></name></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name><name pos:line="57" pos:column="9">status<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">current<pos:position pos:line="57" pos:column="24"/></name><operator pos:line="57" pos:column="24">.<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="25">name<pos:position pos:line="57" pos:column="29"/></name></name></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30"> <block pos:line="57" pos:column="31">{
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">argv<pos:position pos:line="58" pos:column="13"/></name><index pos:line="58" pos:column="13">[<expr><literal type="number" pos:line="58" pos:column="14">2<pos:position pos:line="58" pos:column="15"/></literal></expr>]<pos:position pos:line="58" pos:column="16"/></index></name> <operator pos:line="58" pos:column="17">=<pos:position pos:line="58" pos:column="18"/></operator> <name><name pos:line="58" pos:column="19">status<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">current<pos:position pos:line="58" pos:column="34"/></name><operator pos:line="58" pos:column="34">.<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="35">name<pos:position pos:line="58" pos:column="39"/></name></name></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">argv<pos:position pos:line="59" pos:column="13"/></name><index pos:line="59" pos:column="13">[<expr><literal type="number" pos:line="59" pos:column="14">3<pos:position pos:line="59" pos:column="15"/></literal></expr>]<pos:position pos:line="59" pos:column="16"/></index></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">NULL<pos:position pos:line="59" pos:column="23"/></name></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <else pos:line="61" pos:column="5">else <block pos:line="61" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">argv<pos:position pos:line="62" pos:column="13"/></name><index pos:line="62" pos:column="13">[<expr><literal type="number" pos:line="62" pos:column="14">2<pos:position pos:line="62" pos:column="15"/></literal></expr>]<pos:position pos:line="62" pos:column="16"/></index></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <name pos:line="62" pos:column="19">NULL<pos:position pos:line="62" pos:column="23"/></name></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></else></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name><name pos:line="65" pos:column="9">config<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">-&gt;<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="17">verbose<pos:position pos:line="65" pos:column="24"/></name></name></expr>)<pos:position pos:line="65" pos:column="25"/></condition><then pos:line="65" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="9">fprintf<pos:position pos:line="66" pos:column="16"/></name><argument_list pos:line="66" pos:column="16">(<argument><expr><name pos:line="66" pos:column="17">stderr<pos:position pos:line="66" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="25">"Calling post-rotate program: %s\n"<pos:position pos:line="66" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="62">argv<pos:position pos:line="66" pos:column="66"/></name><index pos:line="66" pos:column="66">[<expr><literal type="number" pos:line="66" pos:column="67">0<pos:position pos:line="66" pos:column="68"/></literal></expr>]<pos:position pos:line="66" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="66" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="71"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="68" pos:column="5">rv<pos:position pos:line="68" pos:column="7"/></name> <operator pos:line="68" pos:column="8">=<pos:position pos:line="68" pos:column="9"/></operator> <call><name pos:line="68" pos:column="10">apr_proc_create<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><operator pos:line="68" pos:column="26">&amp;<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="27">proc<pos:position pos:line="68" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="33">argv<pos:position pos:line="68" pos:column="37"/></name><index pos:line="68" pos:column="37">[<expr><literal type="number" pos:line="68" pos:column="38">0<pos:position pos:line="68" pos:column="39"/></literal></expr>]<pos:position pos:line="68" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="42">argv<pos:position pos:line="68" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="48">NULL<pos:position pos:line="68" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="54">pattr<pos:position pos:line="68" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="61">pool<pos:position pos:line="68" pos:column="65"/></name></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="67"/></expr_stmt>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">rv<pos:position pos:line="69" pos:column="11"/></name> <operator pos:line="69" pos:column="12">!=<pos:position pos:line="69" pos:column="14"/></operator> <name pos:line="69" pos:column="15">APR_SUCCESS<pos:position pos:line="69" pos:column="26"/></name></expr>)<pos:position pos:line="69" pos:column="27"/></condition><then pos:line="69" pos:column="27"> <block pos:line="69" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">fprintf<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name pos:line="70" pos:column="17">stderr<pos:position pos:line="70" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="25">"Could not spawn post-rotate process '%s': %s\n"<pos:position pos:line="70" pos:column="73"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="71" pos:column="17">config<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">-&gt;<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="25">postrotate_prog<pos:position pos:line="71" pos:column="40"/></name></name></expr></argument>,
                <argument><expr><call><name pos:line="72" pos:column="17">apr_strerror<pos:position pos:line="72" pos:column="29"/></name><argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">rv<pos:position pos:line="72" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">error<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="41">sizeof<argument_list pos:line="72" pos:column="47">(<argument><expr><name pos:line="72" pos:column="48">error<pos:position pos:line="72" pos:column="53"/></name></expr></argument>)<pos:position pos:line="72" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="57"/></expr_stmt>
        <return pos:line="73" pos:column="9">return;<pos:position pos:line="73" pos:column="16"/></return>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2757_httpd-2.4.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">in_domain<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">domain<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">what<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">dl<pos:position pos:line="3" pos:column="11"/></name> <init pos:line="3" pos:column="12">= <expr><call><name pos:line="3" pos:column="14">strlen<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">domain<pos:position pos:line="3" pos:column="27"/></name></expr></argument>)<pos:position pos:line="3" pos:column="28"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">wl<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><call><name pos:line="4" pos:column="14">strlen<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">what<pos:position pos:line="4" pos:column="25"/></name></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">wl<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">-<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">dl<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">)<pos:position pos:line="6" pos:column="18"/></operator> <operator pos:line="6" pos:column="19">&gt;=<pos:position pos:line="6" pos:column="24"/></operator> <literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr>)<pos:position pos:line="6" pos:column="24"/></condition><then pos:line="6" pos:column="24"> <block pos:line="6" pos:column="25">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">strcasecmp<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">domain<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="32">&amp;<pos:position pos:line="7" pos:column="37"/></operator><name><name pos:line="7" pos:column="33">what<pos:position pos:line="7" pos:column="37"/></name><index pos:line="7" pos:column="37">[<expr><name pos:line="7" pos:column="38">wl<pos:position pos:line="7" pos:column="40"/></name> <operator pos:line="7" pos:column="41">-<pos:position pos:line="7" pos:column="42"/></operator> <name pos:line="7" pos:column="43">dl<pos:position pos:line="7" pos:column="45"/></name></expr>]<pos:position pos:line="7" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call> <operator pos:line="7" pos:column="48">!=<pos:position pos:line="7" pos:column="50"/></operator> <literal type="number" pos:line="7" pos:column="51">0<pos:position pos:line="7" pos:column="52"/></literal></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53"> <block pos:line="7" pos:column="54">{
            <return pos:line="8" pos:column="13">return <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="11" pos:column="9">/* Make sure we matched an *entire* subdomain --- if the user
         * said 'allow from good.com', we don't want people from nogood.com
         * to be able to get in.
         */</comment>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">wl<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">dl<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <block pos:line="16" pos:column="23">{
            <return pos:line="17" pos:column="13">return <expr><literal type="number" pos:line="17" pos:column="20">1<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></return>                <comment type="block" pos:line="17" pos:column="38">/* matched whole thing */</comment>
        }<pos:position pos:line="18" pos:column="10"/></block></then>
        <else pos:line="19" pos:column="9">else <block pos:line="19" pos:column="14">{
            <return pos:line="20" pos:column="13">return <expr><operator pos:line="20" pos:column="20">(<pos:position pos:line="20" pos:column="21"/></operator><name><name pos:line="20" pos:column="21">domain<pos:position pos:line="20" pos:column="27"/></name><index pos:line="20" pos:column="27">[<expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr>]<pos:position pos:line="20" pos:column="30"/></index></name> <operator pos:line="20" pos:column="31">==<pos:position pos:line="20" pos:column="33"/></operator> <literal type="char" pos:line="20" pos:column="34">'.'<pos:position pos:line="20" pos:column="37"/></literal> <operator pos:line="20" pos:column="38">||<pos:position pos:line="20" pos:column="40"/></operator> <name><name pos:line="20" pos:column="41">what<pos:position pos:line="20" pos:column="45"/></name><index pos:line="20" pos:column="45">[<expr><name pos:line="20" pos:column="46">wl<pos:position pos:line="20" pos:column="48"/></name> <operator pos:line="20" pos:column="49">-<pos:position pos:line="20" pos:column="50"/></operator> <name pos:line="20" pos:column="51">dl<pos:position pos:line="20" pos:column="53"/></name> <operator pos:line="20" pos:column="54">-<pos:position pos:line="20" pos:column="55"/></operator> <literal type="number" pos:line="20" pos:column="56">1<pos:position pos:line="20" pos:column="57"/></literal></expr>]<pos:position pos:line="20" pos:column="58"/></index></name> <operator pos:line="20" pos:column="59">==<pos:position pos:line="20" pos:column="61"/></operator> <literal type="char" pos:line="20" pos:column="62">'.'<pos:position pos:line="20" pos:column="65"/></literal><operator pos:line="20" pos:column="65">)<pos:position pos:line="20" pos:column="66"/></operator></expr>;<pos:position pos:line="20" pos:column="67"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></else></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
        <return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

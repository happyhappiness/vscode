<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1071_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_variant_better<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">negotiation_state<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">neg<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">var_rec<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">variant<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">var_rec<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">best<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">float<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">p_bestq<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">float<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">bestq<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><operator pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">p_bestq<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="29">q<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">levcmp<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* For non-transparent negotiation, server can choose how
     * to handle the negotiation. We'll use the following in
     * order: content-type, language, content-type level, charset,
     * content encoding, content length.
     *
     * For each check, we have three possible outcomes:
     *   This variant is worse than current best: return 0
     *   This variant is better than the current best:
     *          assign this variant's q to *p_bestq, and return 1
     *   This variant is just as desirable as the current best:
     *          drop through to the next test.
     *
     * This code is written in this long-winded way to allow future
     * customisation, either by the addition of additional
     * checks, or to allow the order of the checks to be determined
     * by configuration options (e.g. we might prefer to check
     * language quality _before_ content type).
     */</comment>

    <comment type="block" pos:line="26" pos:column="5">/* First though, eliminate this variant if it is not
     * acceptable by type, charset, encoding or language.
     */</comment>

<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">NEG_DEBUG<pos:position pos:line="30" pos:column="17"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ap_log_error<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">APLOG_MARK<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">APLOG_STARTUP<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="45">0<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">NULL<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, 
           <argument><expr><literal type="string" pos:line="32" pos:column="12">"Variant: file=%s type=%s lang=%s sourceq=%1.3f "<pos:position pos:line="32" pos:column="61"/></literal>
           <literal type="string" pos:line="33" pos:column="12">"mimeq=%1.3f langq=%1.3f langidx=%d charq=%1.3f encq=%1.3f "<pos:position pos:line="33" pos:column="72"/></literal></expr></argument>,
            <argument><expr><operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="34" pos:column="14">variant<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">file_name<pos:position pos:line="34" pos:column="32"/></name></name></expr> ?<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34"> <expr><name><name pos:line="34" pos:column="35">variant<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">-&gt;<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="44">file_name<pos:position pos:line="34" pos:column="53"/></name></name></expr> <pos:position pos:line="34" pos:column="54"/></then><else pos:line="34" pos:column="54">: <expr><literal type="string" pos:line="34" pos:column="56">""<pos:position pos:line="34" pos:column="58"/></literal></expr></else></ternary><operator pos:line="34" pos:column="58">)<pos:position pos:line="34" pos:column="59"/></operator></expr></argument>,
            <argument><expr><operator pos:line="35" pos:column="13">(<pos:position pos:line="35" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="35" pos:column="14">variant<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">mime_type<pos:position pos:line="35" pos:column="32"/></name></name></expr> ?<pos:position pos:line="35" pos:column="34"/></condition><then pos:line="35" pos:column="34"> <expr><name><name pos:line="35" pos:column="35">variant<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">mime_type<pos:position pos:line="35" pos:column="53"/></name></name></expr> <pos:position pos:line="35" pos:column="54"/></then><else pos:line="35" pos:column="54">: <expr><literal type="string" pos:line="35" pos:column="56">""<pos:position pos:line="35" pos:column="58"/></literal></expr></else></ternary><operator pos:line="35" pos:column="58">)<pos:position pos:line="35" pos:column="59"/></operator></expr></argument>,
            <argument><expr><operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="36" pos:column="14">variant<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">-&gt;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="23">content_languages<pos:position pos:line="36" pos:column="40"/></name></name></expr>
             ?<pos:position pos:line="37" pos:column="15"/></condition><then pos:line="37" pos:column="15"> <expr><call><name pos:line="37" pos:column="16">apr_array_pstrcat<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name><name pos:line="37" pos:column="34">neg<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">pool<pos:position pos:line="37" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="45">variant<pos:position pos:line="37" pos:column="52"/></name><operator pos:line="37" pos:column="52">-&gt;<pos:position pos:line="37" pos:column="57"/></operator><name pos:line="37" pos:column="54">content_languages<pos:position pos:line="37" pos:column="71"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="37" pos:column="73">','<pos:position pos:line="37" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="77"/></argument_list></call></expr>
             <pos:position pos:line="38" pos:column="14"/></then><else pos:line="38" pos:column="14">: <expr><literal type="string" pos:line="38" pos:column="16">""<pos:position pos:line="38" pos:column="18"/></literal></expr></else></ternary><operator pos:line="38" pos:column="18">)<pos:position pos:line="38" pos:column="19"/></operator></expr></argument>,
            <argument><expr><name><name pos:line="39" pos:column="13">variant<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">source_quality<pos:position pos:line="39" pos:column="36"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="40" pos:column="13">variant<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">mime_type_quality<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="41" pos:column="13">variant<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">lang_quality<pos:position pos:line="41" pos:column="34"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="42" pos:column="13">variant<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">lang_index<pos:position pos:line="42" pos:column="32"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="43" pos:column="13">variant<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">charset_quality<pos:position pos:line="43" pos:column="37"/></name></name></expr></argument>,
            <argument><expr><name><name pos:line="44" pos:column="13">variant<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">encoding_quality<pos:position pos:line="44" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">variant<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">encoding_quality<pos:position pos:line="47" pos:column="34"/></name></name> <operator pos:line="47" pos:column="35">==<pos:position pos:line="47" pos:column="37"/></operator> <literal type="number" pos:line="47" pos:column="38">0.0f<pos:position pos:line="47" pos:column="42"/></literal> <operator pos:line="47" pos:column="43">||<pos:position pos:line="47" pos:column="45"/></operator>
        <name><name pos:line="48" pos:column="9">variant<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">lang_quality<pos:position pos:line="48" pos:column="30"/></name></name> <operator pos:line="48" pos:column="31">==<pos:position pos:line="48" pos:column="33"/></operator> <literal type="number" pos:line="48" pos:column="34">0.0f<pos:position pos:line="48" pos:column="38"/></literal> <operator pos:line="48" pos:column="39">||<pos:position pos:line="48" pos:column="41"/></operator>
        <name><name pos:line="49" pos:column="9">variant<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">source_quality<pos:position pos:line="49" pos:column="32"/></name></name> <operator pos:line="49" pos:column="33">==<pos:position pos:line="49" pos:column="35"/></operator> <literal type="number" pos:line="49" pos:column="36">0.0f<pos:position pos:line="49" pos:column="40"/></literal> <operator pos:line="49" pos:column="41">||<pos:position pos:line="49" pos:column="43"/></operator>
        <name><name pos:line="50" pos:column="9">variant<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">charset_quality<pos:position pos:line="50" pos:column="33"/></name></name> <operator pos:line="50" pos:column="34">==<pos:position pos:line="50" pos:column="36"/></operator> <literal type="number" pos:line="50" pos:column="37">0.0f<pos:position pos:line="50" pos:column="41"/></literal> <operator pos:line="50" pos:column="42">||<pos:position pos:line="50" pos:column="44"/></operator>
        <name><name pos:line="51" pos:column="9">variant<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">mime_type_quality<pos:position pos:line="51" pos:column="35"/></name></name> <operator pos:line="51" pos:column="36">==<pos:position pos:line="51" pos:column="38"/></operator> <literal type="number" pos:line="51" pos:column="39">0.0f<pos:position pos:line="51" pos:column="43"/></literal></expr>)<pos:position pos:line="51" pos:column="44"/></condition><then pos:line="51" pos:column="44"> <block pos:line="51" pos:column="45">{
        <return pos:line="52" pos:column="9">return <expr><literal type="number" pos:line="52" pos:column="16">0<pos:position pos:line="52" pos:column="17"/></literal></expr>;<pos:position pos:line="52" pos:column="18"/></return>               <comment type="block" pos:line="52" pos:column="33">/* don't consider unacceptables */</comment>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="55" pos:column="5">q<pos:position pos:line="55" pos:column="6"/></name> <operator pos:line="55" pos:column="7">=<pos:position pos:line="55" pos:column="8"/></operator> <name><name pos:line="55" pos:column="9">variant<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">mime_type_quality<pos:position pos:line="55" pos:column="35"/></name></name> <operator pos:line="55" pos:column="36">*<pos:position pos:line="55" pos:column="37"/></operator> <name><name pos:line="55" pos:column="38">variant<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">-&gt;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="47">source_quality<pos:position pos:line="55" pos:column="61"/></name></name></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">q<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">==<pos:position pos:line="56" pos:column="13"/></operator> <literal type="number" pos:line="56" pos:column="14">0.0<pos:position pos:line="56" pos:column="17"/></literal> <operator pos:line="56" pos:column="18">||<pos:position pos:line="56" pos:column="20"/></operator> <name pos:line="56" pos:column="21">q<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="25">bestq<pos:position pos:line="56" pos:column="30"/></name></expr>)<pos:position pos:line="56" pos:column="31"/></condition><then pos:line="56" pos:column="31"> <block pos:line="56" pos:column="32">{
        <return pos:line="57" pos:column="9">return <expr><literal type="number" pos:line="57" pos:column="16">0<pos:position pos:line="57" pos:column="17"/></literal></expr>;<pos:position pos:line="57" pos:column="18"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">q<pos:position pos:line="59" pos:column="10"/></name> <operator pos:line="59" pos:column="11">&gt;<pos:position pos:line="59" pos:column="15"/></operator> <name pos:line="59" pos:column="13">bestq<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">||<pos:position pos:line="59" pos:column="21"/></operator> <operator pos:line="59" pos:column="22">!<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="23">best<pos:position pos:line="59" pos:column="27"/></name></expr>)<pos:position pos:line="59" pos:column="28"/></condition><then pos:line="59" pos:column="28"> <block pos:line="59" pos:column="29">{
        <expr_stmt><expr><operator pos:line="60" pos:column="9">*<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">p_bestq<pos:position pos:line="60" pos:column="17"/></name> <operator pos:line="60" pos:column="18">=<pos:position pos:line="60" pos:column="19"/></operator> <name pos:line="60" pos:column="20">q<pos:position pos:line="60" pos:column="21"/></name></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
        <return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">1<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/* language */</comment>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name><name pos:line="65" pos:column="9">variant<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">lang_quality<pos:position pos:line="65" pos:column="30"/></name></name> <operator pos:line="65" pos:column="31">&lt;<pos:position pos:line="65" pos:column="35"/></operator> <name><name pos:line="65" pos:column="33">best<pos:position pos:line="65" pos:column="37"/></name><operator pos:line="65" pos:column="37">-&gt;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="39">lang_quality<pos:position pos:line="65" pos:column="51"/></name></name></expr>)<pos:position pos:line="65" pos:column="52"/></condition><then pos:line="65" pos:column="52"> <block pos:line="65" pos:column="53">{
        <return pos:line="66" pos:column="9">return <expr><literal type="number" pos:line="66" pos:column="16">0<pos:position pos:line="66" pos:column="17"/></literal></expr>;<pos:position pos:line="66" pos:column="18"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name><name pos:line="68" pos:column="9">variant<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">lang_quality<pos:position pos:line="68" pos:column="30"/></name></name> <operator pos:line="68" pos:column="31">&gt;<pos:position pos:line="68" pos:column="35"/></operator> <name><name pos:line="68" pos:column="33">best<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">lang_quality<pos:position pos:line="68" pos:column="51"/></name></name></expr>)<pos:position pos:line="68" pos:column="52"/></condition><then pos:line="68" pos:column="52"> <block pos:line="68" pos:column="53">{
        <expr_stmt><expr><operator pos:line="69" pos:column="9">*<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">p_bestq<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <name pos:line="69" pos:column="20">q<pos:position pos:line="69" pos:column="21"/></name></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>
        <return pos:line="70" pos:column="9">return <expr><literal type="number" pos:line="70" pos:column="16">1<pos:position pos:line="70" pos:column="17"/></literal></expr>;<pos:position pos:line="70" pos:column="18"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="73" pos:column="5">/* if language qualities were equal, try the LanguagePriority stuff */</comment>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name><name pos:line="74" pos:column="9">best<pos:position pos:line="74" pos:column="13"/></name><operator pos:line="74" pos:column="13">-&gt;<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="15">lang_index<pos:position pos:line="74" pos:column="25"/></name></name> <operator pos:line="74" pos:column="26">!=<pos:position pos:line="74" pos:column="28"/></operator> <operator pos:line="74" pos:column="29">-<pos:position pos:line="74" pos:column="30"/></operator><literal type="number" pos:line="74" pos:column="30">1<pos:position pos:line="74" pos:column="31"/></literal> <operator pos:line="74" pos:column="32">&amp;&amp;<pos:position pos:line="74" pos:column="42"/></operator>
        <operator pos:line="75" pos:column="9">(<pos:position pos:line="75" pos:column="10"/></operator><name><name pos:line="75" pos:column="10">variant<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">-&gt;<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="19">lang_index<pos:position pos:line="75" pos:column="29"/></name></name> <operator pos:line="75" pos:column="30">==<pos:position pos:line="75" pos:column="32"/></operator> <operator pos:line="75" pos:column="33">-<pos:position pos:line="75" pos:column="34"/></operator><literal type="number" pos:line="75" pos:column="34">1<pos:position pos:line="75" pos:column="35"/></literal> <operator pos:line="75" pos:column="36">||<pos:position pos:line="75" pos:column="38"/></operator> <name><name pos:line="75" pos:column="39">variant<pos:position pos:line="75" pos:column="46"/></name><operator pos:line="75" pos:column="46">-&gt;<pos:position pos:line="75" pos:column="51"/></operator><name pos:line="75" pos:column="48">lang_index<pos:position pos:line="75" pos:column="58"/></name></name> <operator pos:line="75" pos:column="59">&gt;<pos:position pos:line="75" pos:column="63"/></operator> <name><name pos:line="75" pos:column="61">best<pos:position pos:line="75" pos:column="65"/></name><operator pos:line="75" pos:column="65">-&gt;<pos:position pos:line="75" pos:column="70"/></operator><name pos:line="75" pos:column="67">lang_index<pos:position pos:line="75" pos:column="77"/></name></name><operator pos:line="75" pos:column="77">)<pos:position pos:line="75" pos:column="78"/></operator></expr>)<pos:position pos:line="75" pos:column="79"/></condition><then pos:line="75" pos:column="79"> <block pos:line="75" pos:column="80">{
        <return pos:line="76" pos:column="9">return <expr><literal type="number" pos:line="76" pos:column="16">0<pos:position pos:line="76" pos:column="17"/></literal></expr>;<pos:position pos:line="76" pos:column="18"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name><name pos:line="78" pos:column="9">variant<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">-&gt;<pos:position pos:line="78" pos:column="21"/></operator><name pos:line="78" pos:column="18">lang_index<pos:position pos:line="78" pos:column="28"/></name></name> <operator pos:line="78" pos:column="29">!=<pos:position pos:line="78" pos:column="31"/></operator> <operator pos:line="78" pos:column="32">-<pos:position pos:line="78" pos:column="33"/></operator><literal type="number" pos:line="78" pos:column="33">1<pos:position pos:line="78" pos:column="34"/></literal> <operator pos:line="78" pos:column="35">&amp;&amp;<pos:position pos:line="78" pos:column="45"/></operator>
        <operator pos:line="79" pos:column="9">(<pos:position pos:line="79" pos:column="10"/></operator><name><name pos:line="79" pos:column="10">best<pos:position pos:line="79" pos:column="14"/></name><operator pos:line="79" pos:column="14">-&gt;<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="16">lang_index<pos:position pos:line="79" pos:column="26"/></name></name> <operator pos:line="79" pos:column="27">==<pos:position pos:line="79" pos:column="29"/></operator> <operator pos:line="79" pos:column="30">-<pos:position pos:line="79" pos:column="31"/></operator><literal type="number" pos:line="79" pos:column="31">1<pos:position pos:line="79" pos:column="32"/></literal> <operator pos:line="79" pos:column="33">||<pos:position pos:line="79" pos:column="35"/></operator> <name><name pos:line="79" pos:column="36">variant<pos:position pos:line="79" pos:column="43"/></name><operator pos:line="79" pos:column="43">-&gt;<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="45">lang_index<pos:position pos:line="79" pos:column="55"/></name></name> <operator pos:line="79" pos:column="56">&lt;<pos:position pos:line="79" pos:column="60"/></operator> <name><name pos:line="79" pos:column="58">best<pos:position pos:line="79" pos:column="62"/></name><operator pos:line="79" pos:column="62">-&gt;<pos:position pos:line="79" pos:column="67"/></operator><name pos:line="79" pos:column="64">lang_index<pos:position pos:line="79" pos:column="74"/></name></name><operator pos:line="79" pos:column="74">)<pos:position pos:line="79" pos:column="75"/></operator></expr>)<pos:position pos:line="79" pos:column="76"/></condition><then pos:line="79" pos:column="76"> <block pos:line="79" pos:column="77">{
        <expr_stmt><expr><operator pos:line="80" pos:column="9">*<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">p_bestq<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <name pos:line="80" pos:column="20">q<pos:position pos:line="80" pos:column="21"/></name></expr>;<pos:position pos:line="80" pos:column="22"/></expr_stmt>
        <return pos:line="81" pos:column="9">return <expr><literal type="number" pos:line="81" pos:column="16">1<pos:position pos:line="81" pos:column="17"/></literal></expr>;<pos:position pos:line="81" pos:column="18"/></return>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="84" pos:column="5">/* content-type level (sometimes used with text/html, though we
     * support it on other types too)
     */</comment>
    <expr_stmt><expr><name pos:line="87" pos:column="5">levcmp<pos:position pos:line="87" pos:column="11"/></name> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <call><name pos:line="87" pos:column="14">level_cmp<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument><expr><name pos:line="87" pos:column="24">variant<pos:position pos:line="87" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="33">best<pos:position pos:line="87" pos:column="37"/></name></expr></argument>)<pos:position pos:line="87" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="39"/></expr_stmt>
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">levcmp<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">==<pos:position pos:line="88" pos:column="18"/></operator> <operator pos:line="88" pos:column="19">-<pos:position pos:line="88" pos:column="20"/></operator><literal type="number" pos:line="88" pos:column="20">1<pos:position pos:line="88" pos:column="21"/></literal></expr>)<pos:position pos:line="88" pos:column="22"/></condition><then pos:line="88" pos:column="22"> <block pos:line="88" pos:column="23">{
        <return pos:line="89" pos:column="9">return <expr><literal type="number" pos:line="89" pos:column="16">0<pos:position pos:line="89" pos:column="17"/></literal></expr>;<pos:position pos:line="89" pos:column="18"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name pos:line="91" pos:column="9">levcmp<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">==<pos:position pos:line="91" pos:column="18"/></operator> <literal type="number" pos:line="91" pos:column="19">1<pos:position pos:line="91" pos:column="20"/></literal></expr>)<pos:position pos:line="91" pos:column="21"/></condition><then pos:line="91" pos:column="21"> <block pos:line="91" pos:column="22">{
        <expr_stmt><expr><operator pos:line="92" pos:column="9">*<pos:position pos:line="92" pos:column="10"/></operator><name pos:line="92" pos:column="10">p_bestq<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">=<pos:position pos:line="92" pos:column="19"/></operator> <name pos:line="92" pos:column="20">q<pos:position pos:line="92" pos:column="21"/></name></expr>;<pos:position pos:line="92" pos:column="22"/></expr_stmt>
        <return pos:line="93" pos:column="9">return <expr><literal type="number" pos:line="93" pos:column="16">1<pos:position pos:line="93" pos:column="17"/></literal></expr>;<pos:position pos:line="93" pos:column="18"/></return>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="96" pos:column="5">/* charset */</comment>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name><name pos:line="97" pos:column="9">variant<pos:position pos:line="97" pos:column="16"/></name><operator pos:line="97" pos:column="16">-&gt;<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="18">charset_quality<pos:position pos:line="97" pos:column="33"/></name></name> <operator pos:line="97" pos:column="34">&lt;<pos:position pos:line="97" pos:column="38"/></operator> <name><name pos:line="97" pos:column="36">best<pos:position pos:line="97" pos:column="40"/></name><operator pos:line="97" pos:column="40">-&gt;<pos:position pos:line="97" pos:column="45"/></operator><name pos:line="97" pos:column="42">charset_quality<pos:position pos:line="97" pos:column="57"/></name></name></expr>)<pos:position pos:line="97" pos:column="58"/></condition><then pos:line="97" pos:column="58"> <block pos:line="97" pos:column="59">{
        <return pos:line="98" pos:column="9">return <expr><literal type="number" pos:line="98" pos:column="16">0<pos:position pos:line="98" pos:column="17"/></literal></expr>;<pos:position pos:line="98" pos:column="18"/></return>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="100" pos:column="5">/* If the best variant's charset is ISO-8859-1 and this variant has
     * the same charset quality, then we prefer this variant
     */</comment>

    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><name><name pos:line="104" pos:column="9">variant<pos:position pos:line="104" pos:column="16"/></name><operator pos:line="104" pos:column="16">-&gt;<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="18">charset_quality<pos:position pos:line="104" pos:column="33"/></name></name> <operator pos:line="104" pos:column="34">&gt;<pos:position pos:line="104" pos:column="38"/></operator> <name><name pos:line="104" pos:column="36">best<pos:position pos:line="104" pos:column="40"/></name><operator pos:line="104" pos:column="40">-&gt;<pos:position pos:line="104" pos:column="45"/></operator><name pos:line="104" pos:column="42">charset_quality<pos:position pos:line="104" pos:column="57"/></name></name> <operator pos:line="104" pos:column="58">||<pos:position pos:line="104" pos:column="60"/></operator>
        <operator pos:line="105" pos:column="9">(<pos:position pos:line="105" pos:column="10"/></operator><operator pos:line="105" pos:column="10">(<pos:position pos:line="105" pos:column="11"/></operator><name><name pos:line="105" pos:column="11">variant<pos:position pos:line="105" pos:column="18"/></name><operator pos:line="105" pos:column="18">-&gt;<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="20">content_charset<pos:position pos:line="105" pos:column="35"/></name></name> <operator pos:line="105" pos:column="36">!=<pos:position pos:line="105" pos:column="38"/></operator> <name pos:line="105" pos:column="39">NULL<pos:position pos:line="105" pos:column="43"/></name> <operator pos:line="105" pos:column="44">&amp;&amp;<pos:position pos:line="105" pos:column="54"/></operator>
          <operator pos:line="106" pos:column="11">*<pos:position pos:line="106" pos:column="12"/></operator><name><name pos:line="106" pos:column="12">variant<pos:position pos:line="106" pos:column="19"/></name><operator pos:line="106" pos:column="19">-&gt;<pos:position pos:line="106" pos:column="24"/></operator><name pos:line="106" pos:column="21">content_charset<pos:position pos:line="106" pos:column="36"/></name></name> <operator pos:line="106" pos:column="37">!=<pos:position pos:line="106" pos:column="39"/></operator> <literal type="char" pos:line="106" pos:column="40">'\0'<pos:position pos:line="106" pos:column="44"/></literal> <operator pos:line="106" pos:column="45">&amp;&amp;<pos:position pos:line="106" pos:column="55"/></operator>
          <call><name pos:line="107" pos:column="11">strcmp<pos:position pos:line="107" pos:column="17"/></name><argument_list pos:line="107" pos:column="17">(<argument><expr><name><name pos:line="107" pos:column="18">variant<pos:position pos:line="107" pos:column="25"/></name><operator pos:line="107" pos:column="25">-&gt;<pos:position pos:line="107" pos:column="30"/></operator><name pos:line="107" pos:column="27">content_charset<pos:position pos:line="107" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="44">"iso-8859-1"<pos:position pos:line="107" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="57"/></argument_list></call> <operator pos:line="107" pos:column="58">!=<pos:position pos:line="107" pos:column="60"/></operator> <literal type="number" pos:line="107" pos:column="61">0<pos:position pos:line="107" pos:column="62"/></literal><operator pos:line="107" pos:column="62">)<pos:position pos:line="107" pos:column="63"/></operator> <operator pos:line="107" pos:column="64">&amp;&amp;<pos:position pos:line="107" pos:column="74"/></operator>
         <operator pos:line="108" pos:column="10">(<pos:position pos:line="108" pos:column="11"/></operator><name><name pos:line="108" pos:column="11">best<pos:position pos:line="108" pos:column="15"/></name><operator pos:line="108" pos:column="15">-&gt;<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="17">content_charset<pos:position pos:line="108" pos:column="32"/></name></name> <operator pos:line="108" pos:column="33">==<pos:position pos:line="108" pos:column="35"/></operator> <name pos:line="108" pos:column="36">NULL<pos:position pos:line="108" pos:column="40"/></name> <operator pos:line="108" pos:column="41">||<pos:position pos:line="108" pos:column="43"/></operator>
          <operator pos:line="109" pos:column="11">*<pos:position pos:line="109" pos:column="12"/></operator><name><name pos:line="109" pos:column="12">best<pos:position pos:line="109" pos:column="16"/></name><operator pos:line="109" pos:column="16">-&gt;<pos:position pos:line="109" pos:column="21"/></operator><name pos:line="109" pos:column="18">content_charset<pos:position pos:line="109" pos:column="33"/></name></name> <operator pos:line="109" pos:column="34">==<pos:position pos:line="109" pos:column="36"/></operator> <literal type="char" pos:line="109" pos:column="37">'\0'<pos:position pos:line="109" pos:column="41"/></literal> <operator pos:line="109" pos:column="42">||<pos:position pos:line="109" pos:column="44"/></operator>
          <call><name pos:line="110" pos:column="11">strcmp<pos:position pos:line="110" pos:column="17"/></name><argument_list pos:line="110" pos:column="17">(<argument><expr><name><name pos:line="110" pos:column="18">best<pos:position pos:line="110" pos:column="22"/></name><operator pos:line="110" pos:column="22">-&gt;<pos:position pos:line="110" pos:column="27"/></operator><name pos:line="110" pos:column="24">content_charset<pos:position pos:line="110" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="41">"iso-8859-1"<pos:position pos:line="110" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="54"/></argument_list></call> <operator pos:line="110" pos:column="55">==<pos:position pos:line="110" pos:column="57"/></operator> <literal type="number" pos:line="110" pos:column="58">0<pos:position pos:line="110" pos:column="59"/></literal><operator pos:line="110" pos:column="59">)<pos:position pos:line="110" pos:column="60"/></operator><operator pos:line="110" pos:column="60">)<pos:position pos:line="110" pos:column="61"/></operator></expr>)<pos:position pos:line="110" pos:column="62"/></condition><then pos:line="110" pos:column="62"> <block pos:line="110" pos:column="63">{
        <expr_stmt><expr><operator pos:line="111" pos:column="9">*<pos:position pos:line="111" pos:column="10"/></operator><name pos:line="111" pos:column="10">p_bestq<pos:position pos:line="111" pos:column="17"/></name> <operator pos:line="111" pos:column="18">=<pos:position pos:line="111" pos:column="19"/></operator> <name pos:line="111" pos:column="20">q<pos:position pos:line="111" pos:column="21"/></name></expr>;<pos:position pos:line="111" pos:column="22"/></expr_stmt>
        <return pos:line="112" pos:column="9">return <expr><literal type="number" pos:line="112" pos:column="16">1<pos:position pos:line="112" pos:column="17"/></literal></expr>;<pos:position pos:line="112" pos:column="18"/></return>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="115" pos:column="5">/* Prefer the highest value for encoding_quality.
     */</comment>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><name><name pos:line="117" pos:column="9">variant<pos:position pos:line="117" pos:column="16"/></name><operator pos:line="117" pos:column="16">-&gt;<pos:position pos:line="117" pos:column="21"/></operator><name pos:line="117" pos:column="18">encoding_quality<pos:position pos:line="117" pos:column="34"/></name></name> <operator pos:line="117" pos:column="35">&lt;<pos:position pos:line="117" pos:column="39"/></operator> <name><name pos:line="117" pos:column="37">best<pos:position pos:line="117" pos:column="41"/></name><operator pos:line="117" pos:column="41">-&gt;<pos:position pos:line="117" pos:column="46"/></operator><name pos:line="117" pos:column="43">encoding_quality<pos:position pos:line="117" pos:column="59"/></name></name></expr>)<pos:position pos:line="117" pos:column="60"/></condition><then pos:line="117" pos:column="60"> <block pos:line="117" pos:column="61">{
       <return pos:line="118" pos:column="8">return <expr><literal type="number" pos:line="118" pos:column="15">0<pos:position pos:line="118" pos:column="16"/></literal></expr>;<pos:position pos:line="118" pos:column="17"/></return>
    }<pos:position pos:line="119" pos:column="6"/></block></then></if>
    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><name><name pos:line="120" pos:column="9">variant<pos:position pos:line="120" pos:column="16"/></name><operator pos:line="120" pos:column="16">-&gt;<pos:position pos:line="120" pos:column="21"/></operator><name pos:line="120" pos:column="18">encoding_quality<pos:position pos:line="120" pos:column="34"/></name></name> <operator pos:line="120" pos:column="35">&gt;<pos:position pos:line="120" pos:column="39"/></operator> <macro><name pos:line="120" pos:column="37">best<pos:position pos:line="120" pos:column="41"/></name></macro><operator pos:line="120" pos:column="41">-&gt;<pos:position pos:line="120" pos:column="46"/></operator><macro><name pos:line="120" pos:column="43">encodin<pos:position pos:line="120" pos:column="50"/></name></macro></expr></condition></if></block></function></unit>

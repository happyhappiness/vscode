<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_336.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ap_fatal_signal_setup<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">server_rec<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">s<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_pool_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">in_pconf<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifndef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifndef<pos:position pos:line="3" pos:column="8"/></cpp:directive> <name pos:line="3" pos:column="9">NO_USE_SIGACTION<pos:position pos:line="3" pos:column="25"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">sigaction<pos:position pos:line="4" pos:column="21"/></name></name></type> <name pos:line="4" pos:column="22">sa<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">sigemptyset<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><operator pos:line="6" pos:column="17">&amp;<pos:position pos:line="6" pos:column="22"/></operator><name><name pos:line="6" pos:column="18">sa<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">sa_mask<pos:position pos:line="6" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
    
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><call><name pos:line="8" pos:column="5">defined<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">SA_ONESHOT<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">sa<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">.<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">sa_flags<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">SA_ONESHOT<pos:position pos:line="9" pos:column="29"/></name></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
<cpp:elif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">elif<pos:position pos:line="10" pos:column="6"/></cpp:directive> <expr><call><name pos:line="10" pos:column="7">defined<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><name pos:line="10" pos:column="15">SA_RESETHAND<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr></cpp:elif>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">sa<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">.<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">sa_flags<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">SA_RESETHAND<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">sa<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">.<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">sa_flags<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="16" pos:column="5">sa<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">.<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">sa_handler<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">sig_coredump<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">sigaction<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">SIGSEGV<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="28">&amp;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="29">sa<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">NULL<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call> <operator pos:line="17" pos:column="39">&lt;<pos:position pos:line="17" pos:column="43"/></operator> <literal type="number" pos:line="17" pos:column="41">0<pos:position pos:line="17" pos:column="42"/></literal></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_WARNING<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">errno<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">s<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="59">"sigaction(SIGSEGV)"<pos:position pos:line="18" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">SIGBUS<pos:position pos:line="19" pos:column="14"/></name></cpp:ifdef>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">sigaction<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">SIGBUS<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="28">sa<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="32">NULL<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call> <operator pos:line="20" pos:column="38">&lt;<pos:position pos:line="20" pos:column="42"/></operator> <literal type="number" pos:line="20" pos:column="40">0<pos:position pos:line="20" pos:column="41"/></literal></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_error<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">APLOG_MARK<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">APLOG_WARNING<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">errno<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">s<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="59">"sigaction(SIGBUS)"<pos:position pos:line="21" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="80"/></expr_stmt></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">SIGABORT<pos:position pos:line="23" pos:column="16"/></name></cpp:ifdef>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">sigaction<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">SIGABORT<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="29">&amp;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="30">sa<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">NULL<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call> <operator pos:line="24" pos:column="40">&lt;<pos:position pos:line="24" pos:column="44"/></operator> <literal type="number" pos:line="24" pos:column="42">0<pos:position pos:line="24" pos:column="43"/></literal></expr>)<pos:position pos:line="24" pos:column="44"/></condition><then pos:line="24" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_WARNING<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">errno<pos:position pos:line="25" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">s<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="59">"sigaction(SIGABORT)"<pos:position pos:line="25" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="82"/></expr_stmt></block></then></if>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifdef<pos:position pos:line="27" pos:column="7"/></cpp:directive> <name pos:line="27" pos:column="8">SIGABRT<pos:position pos:line="27" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">sigaction<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">SIGABRT<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="28">&amp;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="29">sa<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">NULL<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call> <operator pos:line="28" pos:column="39">&lt;<pos:position pos:line="28" pos:column="43"/></operator> <literal type="number" pos:line="28" pos:column="41">0<pos:position pos:line="28" pos:column="42"/></literal></expr>)<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_log_error<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><name pos:line="29" pos:column="22">APLOG_MARK<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">APLOG_WARNING<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">errno<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="56">s<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="59">"sigaction(SIGABRT)"<pos:position pos:line="29" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="81"/></expr_stmt></block></then></if>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">SIGILL<pos:position pos:line="31" pos:column="14"/></name></cpp:ifdef>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">sigaction<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">SIGILL<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="28">sa<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="32">NULL<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call> <operator pos:line="32" pos:column="38">&lt;<pos:position pos:line="32" pos:column="42"/></operator> <literal type="number" pos:line="32" pos:column="40">0<pos:position pos:line="32" pos:column="41"/></literal></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_error<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">APLOG_MARK<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">APLOG_WARNING<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">errno<pos:position pos:line="33" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">s<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="59">"sigaction(SIGILL)"<pos:position pos:line="33" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt></block></then></if>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:else pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">else<pos:position pos:line="36" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="36" pos:column="7">/* NO_USE_SIGACTION */</comment>
    
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">apr_signal<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">SIGSEGV<pos:position pos:line="38" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="25">sig_coredump<pos:position pos:line="38" pos:column="37"/></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
<cpp:ifdef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifdef<pos:position pos:line="39" pos:column="7"/></cpp:directive> <name pos:line="39" pos:column="8">SIGBUS<pos:position pos:line="39" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">apr_signal<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">SIGBUS<pos:position pos:line="40" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="24">sig_coredump<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="41" pos:column="8">/* SIGBUS */</comment>
<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">SIGABORT<pos:position pos:line="42" pos:column="16"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">apr_signal<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><name pos:line="43" pos:column="16">SIGABORT<pos:position pos:line="43" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="26">sig_coredump<pos:position pos:line="43" pos:column="38"/></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="44" pos:column="8">/* SIGABORT */</comment>
<cpp:ifdef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">ifdef<pos:position pos:line="45" pos:column="7"/></cpp:directive> <name pos:line="45" pos:column="8">SIGABRT<pos:position pos:line="45" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">apr_signal<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">SIGABRT<pos:position pos:line="46" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="25">sig_coredump<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="47" pos:column="8">/* SIGABRT */</comment>
<cpp:ifdef pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">ifdef<pos:position pos:line="48" pos:column="7"/></cpp:directive> <name pos:line="48" pos:column="8">SIGILL<pos:position pos:line="48" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">apr_signal<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">SIGILL<pos:position pos:line="49" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="24">sig_coredump<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="50" pos:column="8">/* SIGILL */</comment>

<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="52" pos:column="8">/* NO_USE_SIGACTION */</comment>

    <expr_stmt><expr><name pos:line="54" pos:column="5">pconf<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <name pos:line="54" pos:column="13">in_pconf<pos:position pos:line="54" pos:column="21"/></name></expr>;<pos:position pos:line="54" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">parent_pid<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <name pos:line="55" pos:column="18">my_pid<pos:position pos:line="55" pos:column="24"/></name> <operator pos:line="55" pos:column="25">=<pos:position pos:line="55" pos:column="26"/></operator> <call><name pos:line="55" pos:column="27">getpid<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">()<pos:position pos:line="55" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>

    <return pos:line="57" pos:column="5">return <expr><name pos:line="57" pos:column="12">APR_SUCCESS<pos:position pos:line="57" pos:column="23"/></name></expr>;<pos:position pos:line="57" pos:column="24"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1859_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">find_default_family<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_pool_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="3" pos:column="18"/></name></expr></cpp:if>
    <comment type="block" pos:line="4" pos:column="5">/* We know the platform supports IPv6, but this particular
     * system may not have IPv6 enabled.  See if we can get an
     * AF_INET6 socket and bind to an ephemeral port.  (On most
     * systems, getting an AF_INET6 socket is a sufficient test.
     * On certain levels of OpenUNIX, getting the socket is
     * successful but bind always returns ENETUNREACH.)
     */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">default_family<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">==<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">APR_UNSPEC<pos:position pos:line="11" pos:column="37"/></name></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38"> <block pos:line="11" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">apr_status_t<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">sock_rv<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">apr_socket_t<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">tmp_sock<pos:position pos:line="13" pos:column="31"/></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">apr_sockaddr_t<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">sa<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">sock_rv<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name pos:line="16" pos:column="24">apr_socket_create<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><operator pos:line="16" pos:column="42">&amp;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="43">tmp_sock<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">APR_INET6<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="64">SOCK_STREAM<pos:position pos:line="16" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="77">p<pos:position pos:line="16" pos:column="78"/></name></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call><operator pos:line="16" pos:column="79">)<pos:position pos:line="16" pos:column="80"/></operator> 
            <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">APR_SUCCESS<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&amp;&amp;<pos:position pos:line="17" pos:column="38"/></operator>
            <call><name pos:line="18" pos:column="13">apr_sockaddr_info_get<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><operator pos:line="18" pos:column="35">&amp;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="36">sa<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">NULL<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">APR_INET6<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="57">0<pos:position pos:line="18" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="60">0<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="63">p<pos:position pos:line="18" pos:column="64"/></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call> <operator pos:line="18" pos:column="66">==<pos:position pos:line="18" pos:column="68"/></operator> <name pos:line="18" pos:column="69">APR_SUCCESS<pos:position pos:line="18" pos:column="80"/></name> <operator pos:line="18" pos:column="81">&amp;&amp;<pos:position pos:line="18" pos:column="91"/></operator>
            <call><name pos:line="19" pos:column="13">apr_bind<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">tmp_sock<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">sa<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call> <operator pos:line="19" pos:column="36">==<pos:position pos:line="19" pos:column="38"/></operator> <name pos:line="19" pos:column="39">APR_SUCCESS<pos:position pos:line="19" pos:column="50"/></name></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51"> <block pos:line="19" pos:column="52">{ 
            <expr_stmt><expr><name pos:line="20" pos:column="13">default_family<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="30">APR_INET6<pos:position pos:line="20" pos:column="39"/></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then>
        <else pos:line="22" pos:column="9">else <block pos:line="22" pos:column="14">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">default_family<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">APR_INET<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></else></if>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">sock_rv<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">==<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">APR_SUCCESS<pos:position pos:line="25" pos:column="35"/></name></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36"> <block pos:line="25" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">apr_socket_close<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">tmp_sock<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

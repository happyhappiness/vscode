<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6905.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_stream_send_frame<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">h2_stream<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">stream<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">ftype<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">flags<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">APR_SUCCESS<pos:position pos:line="3" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">new_state<pos:position pos:line="4" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">eos<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">new_state<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <call><name pos:line="6" pos:column="17">on_frame_send<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name><name pos:line="6" pos:column="31">stream<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">state<pos:position pos:line="6" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="46">ftype<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">new_state<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23"> <block pos:line="7" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_cerror<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">APLOG_MARK<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">APLOG_TRACE1<pos:position pos:line="8" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="49">0<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="52">stream<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">-&gt;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="60">session<pos:position pos:line="8" pos:column="67"/></name><operator pos:line="8" pos:column="67">-&gt;<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="69">c<pos:position pos:line="8" pos:column="70"/></name></name></expr></argument>, 
                      <argument><expr><call><name pos:line="9" pos:column="23">H2_STRM_MSG<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">stream<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="43">"invalid frame %d send"<pos:position pos:line="9" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="69">ftype<pos:position pos:line="9" pos:column="74"/></name></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">new_state<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">&gt;<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="37">S_XXX<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><call><name pos:line="11" pos:column="16">transit<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">stream<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">new_state<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    
    <switch pos:line="14" pos:column="5">switch <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ftype<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition> <block pos:line="14" pos:column="20">{
        <case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">NGHTTP2_DATA<pos:position pos:line="15" pos:column="26"/></name></expr>:<pos:position pos:line="15" pos:column="27"/></case>
            <expr_stmt><expr><name pos:line="16" pos:column="13">eos<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <operator pos:line="16" pos:column="19">(<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">flags<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="28">NGHTTP2_FLAG_END_STREAM<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">)<pos:position pos:line="16" pos:column="52"/></operator></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break>
            
        <case pos:line="19" pos:column="9">case <expr><name pos:line="19" pos:column="14">NGHTTP2_HEADERS<pos:position pos:line="19" pos:column="29"/></name></expr>:<pos:position pos:line="19" pos:column="30"/></case>
            <expr_stmt><expr><name pos:line="20" pos:column="13">eos<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">(<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">flags<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">&amp;<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="28">NGHTTP2_FLAG_END_STREAM<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">)<pos:position pos:line="20" pos:column="52"/></operator></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>
            <break pos:line="21" pos:column="13">break;<pos:position pos:line="21" pos:column="19"/></break>
            
        <case pos:line="23" pos:column="9">case <expr><name pos:line="23" pos:column="14">NGHTTP2_PUSH_PROMISE<pos:position pos:line="23" pos:column="34"/></name></expr>:<pos:position pos:line="23" pos:column="35"/></case>
                <comment type="block" pos:line="24" pos:column="17">/* start pushed stream */</comment>
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">ap_assert<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name><name pos:line="25" pos:column="27">stream<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">request<pos:position pos:line="25" pos:column="42"/></name></name> <operator pos:line="25" pos:column="43">==<pos:position pos:line="25" pos:column="45"/></operator> <name pos:line="25" pos:column="46">NULL<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">ap_assert<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name><name pos:line="26" pos:column="27">stream<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">rtmp<pos:position pos:line="26" pos:column="39"/></name></name> <operator pos:line="26" pos:column="40">!=<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="43">NULL<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name pos:line="27" pos:column="17">status<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <call><name pos:line="27" pos:column="26">h2_request_end_headers<pos:position pos:line="27" pos:column="48"/></name><argument_list pos:line="27" pos:column="48">(<argument><expr><name><name pos:line="27" pos:column="49">stream<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">rtmp<pos:position pos:line="27" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="63">stream<pos:position pos:line="27" pos:column="69"/></name><operator pos:line="27" pos:column="69">-&gt;<pos:position pos:line="27" pos:column="74"/></operator><name pos:line="27" pos:column="71">pool<pos:position pos:line="27" pos:column="75"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="77">1<pos:position pos:line="27" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt>
                <if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">status<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">!=<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="31">APR_SUCCESS<pos:position pos:line="28" pos:column="42"/></name></expr>)<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43"> <block pos:line="28" pos:column="44">{
                    <return pos:line="29" pos:column="21">return <expr><name pos:line="29" pos:column="28">status<pos:position pos:line="29" pos:column="34"/></name></expr>;<pos:position pos:line="29" pos:column="35"/></return>
                }<pos:position pos:line="30" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">set_policy_for<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">stream<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="40">stream<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">rtmp<pos:position pos:line="31" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="32" pos:column="17">stream<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">request<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <name><name pos:line="32" pos:column="35">stream<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">-&gt;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="43">rtmp<pos:position pos:line="32" pos:column="47"/></name></name></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="33" pos:column="17">stream<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">rtmp<pos:position pos:line="33" pos:column="29"/></name></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="32">NULL<pos:position pos:line="33" pos:column="36"/></name></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
            <break pos:line="34" pos:column="13">break;<pos:position pos:line="34" pos:column="19"/></break>
            
        <default pos:line="36" pos:column="9">default:<pos:position pos:line="36" pos:column="17"/></default>
            <break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break>
    }<pos:position pos:line="38" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">ap_log_cerror<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><name pos:line="39" pos:column="19">APLOG_MARK<pos:position pos:line="39" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="31">APLOG_TRACE1<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="45">0<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="48">stream<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">-&gt;<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="56">session<pos:position pos:line="39" pos:column="63"/></name><operator pos:line="39" pos:column="63">-&gt;<pos:position pos:line="39" pos:column="68"/></operator><name pos:line="39" pos:column="65">c<pos:position pos:line="39" pos:column="66"/></name></name></expr></argument>, 
                  <argument><expr><call><name pos:line="40" pos:column="19">H2_STRM_MSG<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">stream<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="39">"send frame %d, eos=%d"<pos:position pos:line="40" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="65">ftype<pos:position pos:line="40" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="72">eos<pos:position pos:line="40" pos:column="75"/></name></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">status<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">transit<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">stream<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="30">new_state<pos:position pos:line="41" pos:column="39"/></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">status<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">==<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">APR_SUCCESS<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">&amp;&amp;<pos:position pos:line="42" pos:column="41"/></operator> <name pos:line="42" pos:column="34">eos<pos:position pos:line="42" pos:column="37"/></name></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38"> <block pos:line="42" pos:column="39">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">status<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">transit<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">stream<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="34">on_event<pos:position pos:line="43" pos:column="42"/></name><argument_list pos:line="43" pos:column="42">(<argument><expr><name pos:line="43" pos:column="43">stream<pos:position pos:line="43" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="51">H2_SEV_CLOSED_L<pos:position pos:line="43" pos:column="66"/></name></expr></argument>)<pos:position pos:line="43" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">status<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

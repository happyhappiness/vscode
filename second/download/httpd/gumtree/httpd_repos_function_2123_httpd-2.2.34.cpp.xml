<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2123_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">get_addresses<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_pool_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">w_<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">server_addr_rec<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">paddr<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">apr_port_t<pos:position pos:line="3" pos:column="44"/></name></type> <name pos:line="3" pos:column="45">default_port<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="58"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_sockaddr_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">my_addr<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">server_addr_rec<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">sar<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">w<pos:position pos:line="7" pos:column="12"/></name></decl>, <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="15">host<pos:position pos:line="7" pos:column="19"/></name></decl>, <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="22">scope_id<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">wild_port<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">wlen<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_port_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">port<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_status_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">rv<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">w_<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">==<pos:position pos:line="13" pos:column="15"/></operator> <literal type="char" pos:line="13" pos:column="16">'\0'<pos:position pos:line="13" pos:column="20"/></literal></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">w<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">apr_pstrdup<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">p<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="24">w_<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="17" pos:column="5">/* apr_parse_addr_port() doesn't understand ":*" so handle that first. */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">wlen<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">strlen<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">w<pos:position pos:line="18" pos:column="20"/></name></expr></argument>)<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>                    <comment type="block" pos:line="18" pos:column="42">/* wlen must be &gt; 0 at this point */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">wild_port<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">w<pos:position pos:line="20" pos:column="10"/></name><index pos:line="20" pos:column="10">[<expr><name pos:line="20" pos:column="11">wlen<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">-<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">1<pos:position pos:line="20" pos:column="19"/></literal></expr>]<pos:position pos:line="20" pos:column="20"/></index></name> <operator pos:line="20" pos:column="21">==<pos:position pos:line="20" pos:column="23"/></operator> <literal type="char" pos:line="20" pos:column="24">'*'<pos:position pos:line="20" pos:column="27"/></literal></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <block pos:line="20" pos:column="29">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">wlen<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">&lt;<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="20">2<pos:position pos:line="21" pos:column="21"/></literal></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22"> <block pos:line="21" pos:column="23">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">wild_port<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">1<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then>
        <elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><name><name pos:line="24" pos:column="18">w<pos:position pos:line="24" pos:column="19"/></name><index pos:line="24" pos:column="19">[<expr><name pos:line="24" pos:column="20">wlen<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">-<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">2<pos:position pos:line="24" pos:column="28"/></literal></expr>]<pos:position pos:line="24" pos:column="29"/></index></name> <operator pos:line="24" pos:column="30">==<pos:position pos:line="24" pos:column="32"/></operator> <literal type="char" pos:line="24" pos:column="33">':'<pos:position pos:line="24" pos:column="36"/></literal></expr>)<pos:position pos:line="24" pos:column="37"/></condition><then pos:line="24" pos:column="37"> <block pos:line="24" pos:column="38">{
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">w<pos:position pos:line="25" pos:column="14"/></name><index pos:line="25" pos:column="14">[<expr><name pos:line="25" pos:column="15">wlen<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">-<pos:position pos:line="25" pos:column="21"/></operator> <literal type="number" pos:line="25" pos:column="22">2<pos:position pos:line="25" pos:column="23"/></literal></expr>]<pos:position pos:line="25" pos:column="24"/></index></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <literal type="char" pos:line="25" pos:column="27">'\0'<pos:position pos:line="25" pos:column="31"/></literal></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">wild_port<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">rv<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">apr_parse_addr_port<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><operator pos:line="29" pos:column="30">&amp;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="31">host<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="37">&amp;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="38">scope_id<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="48">&amp;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="49">port<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">w<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">p<pos:position pos:line="29" pos:column="59"/></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>
    <comment type="block" pos:line="30" pos:column="5">/* If the string is "80", apr_parse_addr_port() will be happy and set
     * host to NULL and port to 80, so watch out for that.
     */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">rv<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">!=<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">APR_SUCCESS<pos:position pos:line="33" pos:column="26"/></name></expr>)<pos:position pos:line="33" pos:column="27"/></condition><then pos:line="33" pos:column="27"> <block pos:line="33" pos:column="28">{
        <return pos:line="34" pos:column="9">return <expr><literal type="string" pos:line="34" pos:column="16">"The address or port is invalid"<pos:position pos:line="34" pos:column="48"/></literal></expr>;<pos:position pos:line="34" pos:column="49"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">host<pos:position pos:line="36" pos:column="14"/></name></expr>)<pos:position pos:line="36" pos:column="15"/></condition><then pos:line="36" pos:column="15"> <block pos:line="36" pos:column="16">{
        <return pos:line="37" pos:column="9">return <expr><literal type="string" pos:line="37" pos:column="16">"Missing address for VirtualHost"<pos:position pos:line="37" pos:column="49"/></literal></expr>;<pos:position pos:line="37" pos:column="50"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">scope_id<pos:position pos:line="39" pos:column="17"/></name></expr>)<pos:position pos:line="39" pos:column="18"/></condition><then pos:line="39" pos:column="18"> <block pos:line="39" pos:column="19">{
        <return pos:line="40" pos:column="9">return <expr><literal type="string" pos:line="40" pos:column="16">"Scope ids are not supported"<pos:position pos:line="40" pos:column="45"/></literal></expr>;<pos:position pos:line="40" pos:column="46"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">!<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">port<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">&amp;&amp;<pos:position pos:line="42" pos:column="25"/></operator> <operator pos:line="42" pos:column="18">!<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">wild_port<pos:position pos:line="42" pos:column="28"/></name></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29"> <block pos:line="42" pos:column="30">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">port<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <name pos:line="43" pos:column="16">default_port<pos:position pos:line="43" pos:column="28"/></name></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">strcmp<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">host<pos:position pos:line="46" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="22">"*"<pos:position pos:line="46" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="26"/></argument_list></call> <operator pos:line="46" pos:column="27">==<pos:position pos:line="46" pos:column="29"/></operator> <literal type="number" pos:line="46" pos:column="30">0<pos:position pos:line="46" pos:column="31"/></literal></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32"> <block pos:line="46" pos:column="33">{
        <expr_stmt><expr><name pos:line="47" pos:column="9">rv<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">apr_sockaddr_info_get<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><operator pos:line="47" pos:column="36">&amp;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="37">my_addr<pos:position pos:line="47" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="46">"0.0.0.0"<pos:position pos:line="47" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="57">APR_INET<pos:position pos:line="47" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="67">port<pos:position pos:line="47" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="73">0<pos:position pos:line="47" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="76">p<pos:position pos:line="47" pos:column="77"/></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">rv<pos:position pos:line="48" pos:column="15"/></name></expr>)<pos:position pos:line="48" pos:column="16"/></condition><then pos:line="48" pos:column="16"> <block pos:line="48" pos:column="17">{
            <return pos:line="49" pos:column="13">return <expr><literal type="string" pos:line="49" pos:column="20">"Could not resolve address '0.0.0.0' -- "<pos:position pos:line="49" pos:column="61"/></literal>
                <literal type="string" pos:line="50" pos:column="17">"check resolver configuration."<pos:position pos:line="50" pos:column="48"/></literal></expr>;<pos:position pos:line="50" pos:column="49"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><call><name pos:line="53" pos:column="14">strcasecmp<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">host<pos:position pos:line="53" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="31">"_default_"<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call> <operator pos:line="53" pos:column="44">==<pos:position pos:line="53" pos:column="46"/></operator> <literal type="number" pos:line="53" pos:column="47">0<pos:position pos:line="53" pos:column="48"/></literal>
        <operator pos:line="54" pos:column="9">||<pos:position pos:line="54" pos:column="11"/></operator> <call><name pos:line="54" pos:column="12">strcmp<pos:position pos:line="54" pos:column="18"/></name><argument_list pos:line="54" pos:column="18">(<argument><expr><name pos:line="54" pos:column="19">host<pos:position pos:line="54" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="25">"255.255.255.255"<pos:position pos:line="54" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call> <operator pos:line="54" pos:column="44">==<pos:position pos:line="54" pos:column="46"/></operator> <literal type="number" pos:line="54" pos:column="47">0<pos:position pos:line="54" pos:column="48"/></literal></expr>)<pos:position pos:line="54" pos:column="49"/></condition><then pos:line="54" pos:column="49"> <block pos:line="54" pos:column="50">{
        <expr_stmt><expr><name pos:line="55" pos:column="9">rv<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">apr_sockaddr_info_get<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><operator pos:line="55" pos:column="36">&amp;<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="37">my_addr<pos:position pos:line="55" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="46">"255.255.255.255"<pos:position pos:line="55" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="65">APR_INET<pos:position pos:line="55" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="75">port<pos:position pos:line="55" pos:column="79"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="81">0<pos:position pos:line="55" pos:column="82"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="84">p<pos:position pos:line="55" pos:column="85"/></name></expr></argument>)<pos:position pos:line="55" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="87"/></expr_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">rv<pos:position pos:line="56" pos:column="15"/></name></expr>)<pos:position pos:line="56" pos:column="16"/></condition><then pos:line="56" pos:column="16"> <block pos:line="56" pos:column="17">{
            <return pos:line="57" pos:column="13">return <expr><literal type="string" pos:line="57" pos:column="20">"Could not resolve address '255.255.255.255' -- "<pos:position pos:line="57" pos:column="69"/></literal>
                <literal type="string" pos:line="58" pos:column="17">"check resolver configuration."<pos:position pos:line="58" pos:column="48"/></literal></expr>;<pos:position pos:line="58" pos:column="49"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif>
    <else pos:line="61" pos:column="5">else <block pos:line="61" pos:column="10">{
        <expr_stmt><expr><name pos:line="62" pos:column="9">rv<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">apr_sockaddr_info_get<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><operator pos:line="62" pos:column="36">&amp;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="37">my_addr<pos:position pos:line="62" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">host<pos:position pos:line="62" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="52">APR_UNSPEC<pos:position pos:line="62" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="64">port<pos:position pos:line="62" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="70">0<pos:position pos:line="62" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="73">p<pos:position pos:line="62" pos:column="74"/></name></expr></argument>)<pos:position pos:line="62" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="76"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">rv<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">!=<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">APR_SUCCESS<pos:position pos:line="63" pos:column="30"/></name></expr>)<pos:position pos:line="63" pos:column="31"/></condition><then pos:line="63" pos:column="31"> <block pos:line="63" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">ap_log_error<pos:position pos:line="64" pos:column="25"/></name><argument_list pos:line="64" pos:column="25">(<argument><expr><name pos:line="64" pos:column="26">APLOG_MARK<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="38">APLOG_ERR<pos:position pos:line="64" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="49">rv<pos:position pos:line="64" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="53">NULL<pos:position pos:line="64" pos:column="57"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="65" pos:column="17">"Could not resolve host name %s -- ignoring!"<pos:position pos:line="65" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">host<pos:position pos:line="65" pos:column="68"/></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></expr_stmt>
            <return pos:line="66" pos:column="13">return <expr><name pos:line="66" pos:column="20">NULL<pos:position pos:line="66" pos:column="24"/></name></expr>;<pos:position pos:line="66" pos:column="25"/></return>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>
    }<pos:position pos:line="68" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="70" pos:column="5">/* Remember all addresses for the host */</comment>

    <do pos:line="72" pos:column="5">do <block pos:line="72" pos:column="8">{
        <expr_stmt><expr><name pos:line="73" pos:column="9">sar<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">=<pos:position pos:line="73" pos:column="14"/></operator> <call><name pos:line="73" pos:column="15">apr_pcalloc<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">p<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="30">sizeof<argument_list pos:line="73" pos:column="36">(<argument><expr><name pos:line="73" pos:column="37">server_addr_rec<pos:position pos:line="73" pos:column="52"/></name></expr></argument>)<pos:position pos:line="73" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="74" pos:column="9">*<pos:position pos:line="74" pos:column="10"/></operator><operator pos:line="74" pos:column="10">*<pos:position pos:line="74" pos:column="11"/></operator><name pos:line="74" pos:column="11">paddr<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">=<pos:position pos:line="74" pos:column="18"/></operator> <name pos:line="74" pos:column="19">sar<pos:position pos:line="74" pos:column="22"/></name></expr>;<pos:position pos:line="74" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="75" pos:column="9">*<pos:position pos:line="75" pos:column="10"/></operator><name pos:line="75" pos:column="10">paddr<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <operator pos:line="75" pos:column="18">&amp;<pos:position pos:line="75" pos:column="23"/></operator><name><name pos:line="75" pos:column="19">sar<pos:position pos:line="75" pos:column="22"/></name><operator pos:line="75" pos:column="22">-&gt;<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="24">next<pos:position pos:line="75" pos:column="28"/></name></name></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">sar<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">-&gt;<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="14">host_addr<pos:position pos:line="76" pos:column="23"/></name></name> <operator pos:line="76" pos:column="24">=<pos:position pos:line="76" pos:column="25"/></operator> <name pos:line="76" pos:column="26">my_addr<pos:position pos:line="76" pos:column="33"/></name></expr>;<pos:position pos:line="76" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">sar<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">-&gt;<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="14">host_port<pos:position pos:line="77" pos:column="23"/></name></name> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <name pos:line="77" pos:column="26">port<pos:position pos:line="77" pos:column="30"/></name></expr>;<pos:position pos:line="77" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">sar<pos:position pos:line="78" pos:column="12"/></name><operator pos:line="78" pos:column="12">-&gt;<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="14">virthost<pos:position pos:line="78" pos:column="22"/></name></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <name pos:line="78" pos:column="25">host<pos:position pos:line="78" pos:column="29"/></name></expr>;<pos:position pos:line="78" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="79" pos:column="9">my_addr<pos:position pos:line="79" pos:column="16"/></name> <operator pos:line="79" pos:column="17">=<pos:position pos:line="79" pos:column="18"/></operator> <name><name pos:line="79" pos:column="19">my_addr<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">-&gt;<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="28">next<pos:position pos:line="79" pos:column="32"/></name></name></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block> while <condition pos:line="80" pos:column="13">(<expr><name pos:line="80" pos:column="14">my_addr<pos:position pos:line="80" pos:column="21"/></name></expr>)<pos:position pos:line="80" pos:column="22"/></condition>;<pos:position pos:line="80" pos:column="23"/></do>

    <return pos:line="82" pos:column="5">return <expr><name pos:line="82" pos:column="12">NULL<pos:position pos:line="82" pos:column="16"/></name></expr>;<pos:position pos:line="82" pos:column="17"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

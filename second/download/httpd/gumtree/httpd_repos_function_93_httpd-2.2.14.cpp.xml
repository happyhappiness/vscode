<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_93_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_url<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">url<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">cp<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">h<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">scope_id<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* Save a copy for the proxy */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">fullurl<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">apr_pstrdup<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">cntxt<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">url<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">strlen<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">url<pos:position pos:line="11" pos:column="19"/></name></expr></argument>)<pos:position pos:line="11" pos:column="20"/></argument_list></call> <operator pos:line="11" pos:column="21">&gt;<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="23">7<pos:position pos:line="11" pos:column="24"/></literal> <operator pos:line="11" pos:column="25">&amp;&amp;<pos:position pos:line="11" pos:column="35"/></operator> <call><name pos:line="11" pos:column="28">strncmp<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">url<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="41">"http://"<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="52">7<pos:position pos:line="11" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call> <operator pos:line="11" pos:column="55">==<pos:position pos:line="11" pos:column="57"/></operator> <literal type="number" pos:line="11" pos:column="58">0<pos:position pos:line="11" pos:column="59"/></literal></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60"> <block pos:line="11" pos:column="61">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">url<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">+=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="16">7<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">USE_SSL<pos:position pos:line="13" pos:column="15"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="14" pos:column="9">is_ssl<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <elseif pos:line="17" pos:column="5">else
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">USE_SSL<pos:position pos:line="18" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">strlen<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">url<pos:position pos:line="19" pos:column="19"/></name></expr></argument>)<pos:position pos:line="19" pos:column="20"/></argument_list></call> <operator pos:line="19" pos:column="21">&gt;<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="23">8<pos:position pos:line="19" pos:column="24"/></literal> <operator pos:line="19" pos:column="25">&amp;&amp;<pos:position pos:line="19" pos:column="35"/></operator> <call><name pos:line="19" pos:column="28">strncmp<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">url<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="41">"https://"<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="53">8<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call> <operator pos:line="19" pos:column="56">==<pos:position pos:line="19" pos:column="58"/></operator> <literal type="number" pos:line="19" pos:column="59">0<pos:position pos:line="19" pos:column="60"/></literal></expr>)<pos:position pos:line="19" pos:column="61"/></condition><then pos:line="19" pos:column="61"> <block pos:line="19" pos:column="62">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">url<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">+=<pos:position pos:line="20" pos:column="15"/></operator> <literal type="number" pos:line="20" pos:column="16">8<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">is_ssl<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">1<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if></elseif></if>
<cpp:else pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">else<pos:position pos:line="23" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">strlen<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">url<pos:position pos:line="24" pos:column="19"/></name></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call> <operator pos:line="24" pos:column="21">&gt;<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="23">8<pos:position pos:line="24" pos:column="24"/></literal> <operator pos:line="24" pos:column="25">&amp;&amp;<pos:position pos:line="24" pos:column="35"/></operator> <call><name pos:line="24" pos:column="28">strncmp<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">url<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="41">"https://"<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="53">8<pos:position pos:line="24" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call> <operator pos:line="24" pos:column="56">==<pos:position pos:line="24" pos:column="58"/></operator> <literal type="number" pos:line="24" pos:column="59">0<pos:position pos:line="24" pos:column="60"/></literal></expr>)<pos:position pos:line="24" pos:column="61"/></condition><then pos:line="24" pos:column="61"> <block pos:line="24" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">fprintf<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">stderr<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="25">"SSL not compiled in; no https support\n"<pos:position pos:line="25" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">exit<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><literal type="number" pos:line="26" pos:column="14">1<pos:position pos:line="26" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">cp<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">strchr<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">url<pos:position pos:line="30" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="27">'/'<pos:position pos:line="30" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call><operator pos:line="30" pos:column="31">)<pos:position pos:line="30" pos:column="32"/></operator> <operator pos:line="30" pos:column="33">==<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">NULL<pos:position pos:line="30" pos:column="40"/></name></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="32" pos:column="5">h<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <call><name pos:line="32" pos:column="9">apr_palloc<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">cntxt<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="27">cp<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">-<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">url<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">+<pos:position pos:line="32" pos:column="37"/></operator> <literal type="number" pos:line="32" pos:column="38">1<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">memcpy<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><name pos:line="33" pos:column="12">h<pos:position pos:line="33" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="15">url<pos:position pos:line="33" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="20">cp<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">-<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">url<pos:position pos:line="33" pos:column="28"/></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">h<pos:position pos:line="34" pos:column="6"/></name><index pos:line="34" pos:column="6">[<expr><name pos:line="34" pos:column="7">cp<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">-<pos:position pos:line="34" pos:column="11"/></operator> <name pos:line="34" pos:column="12">url<pos:position pos:line="34" pos:column="15"/></name></expr>]<pos:position pos:line="34" pos:column="16"/></index></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <literal type="char" pos:line="34" pos:column="19">'\0'<pos:position pos:line="34" pos:column="23"/></literal></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">rv<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">apr_parse_addr_port<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><operator pos:line="35" pos:column="30">&amp;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="31">hostname<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="41">&amp;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="42">scope_id<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="52">&amp;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="53">port<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="59">h<pos:position pos:line="35" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="62">cntxt<pos:position pos:line="35" pos:column="67"/></name></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">rv<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">!=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">APR_SUCCESS<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">||<pos:position pos:line="36" pos:column="29"/></operator> <operator pos:line="36" pos:column="30">!<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="31">hostname<pos:position pos:line="36" pos:column="39"/></name> <operator pos:line="36" pos:column="40">||<pos:position pos:line="36" pos:column="42"/></operator> <name pos:line="36" pos:column="43">scope_id<pos:position pos:line="36" pos:column="51"/></name></expr>)<pos:position pos:line="36" pos:column="52"/></condition><then pos:line="36" pos:column="52"> <block pos:line="36" pos:column="53">{
        <return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">1<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="39" pos:column="5">path<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <call><name pos:line="39" pos:column="12">apr_pstrdup<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">cntxt<pos:position pos:line="39" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="31">cp<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="40" pos:column="5">*<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">cp<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <literal type="char" pos:line="40" pos:column="11">'\0'<pos:position pos:line="40" pos:column="15"/></literal></expr>;<pos:position pos:line="40" pos:column="16"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">*<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">url<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">==<pos:position pos:line="41" pos:column="16"/></operator> <literal type="char" pos:line="41" pos:column="17">'['<pos:position pos:line="41" pos:column="20"/></literal></expr>)<pos:position pos:line="41" pos:column="21"/></condition><then pos:line="41" pos:column="21"> <block pos:line="41" pos:column="22">{      <comment type="block" pos:line="41" pos:column="29">/* IPv6 numeric address string */</comment>
        <expr_stmt><expr><name pos:line="42" pos:column="9">host_field<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <call><name pos:line="42" pos:column="22">apr_psprintf<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">cntxt<pos:position pos:line="42" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="42">"[%s]"<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">hostname<pos:position pos:line="42" pos:column="58"/></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then>
    <else pos:line="44" pos:column="5">else <block pos:line="44" pos:column="10">{
        <expr_stmt><expr><name pos:line="45" pos:column="9">host_field<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">hostname<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">port<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">==<pos:position pos:line="48" pos:column="16"/></operator> <literal type="number" pos:line="48" pos:column="17">0<pos:position pos:line="48" pos:column="18"/></literal></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19"> <block pos:line="48" pos:column="20">{        <comment type="block" pos:line="48" pos:column="29">/* no port specified */</comment>
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">USE_SSL<pos:position pos:line="49" pos:column="15"/></name></cpp:ifdef>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">is_ssl<pos:position pos:line="50" pos:column="19"/></name></expr>)<pos:position pos:line="50" pos:column="20"/></condition><then pos:line="50" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="13">port<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <literal type="number" pos:line="51" pos:column="20">443<pos:position pos:line="51" pos:column="23"/></literal></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt></block></then>
        <else pos:line="52" pos:column="9">else
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>
        <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="9">port<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <literal type="number" pos:line="54" pos:column="16">80<pos:position pos:line="54" pos:column="18"/></literal></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt></block></else></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">(<pos:position pos:line="57" pos:column="10"/></operator>
<cpp:ifdef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifdef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">USE_SSL<pos:position pos:line="58" pos:column="15"/></name></cpp:ifdef>
         <name pos:line="59" pos:column="10">is_ssl<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">&amp;&amp;<pos:position pos:line="59" pos:column="27"/></operator> <operator pos:line="59" pos:column="20">(<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">port<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">!=<pos:position pos:line="59" pos:column="28"/></operator> <literal type="number" pos:line="59" pos:column="29">443<pos:position pos:line="59" pos:column="32"/></literal><operator pos:line="59" pos:column="32">)<pos:position pos:line="59" pos:column="33"/></operator><operator pos:line="59" pos:column="33">)<pos:position pos:line="59" pos:column="34"/></operator> <operator pos:line="59" pos:column="35">||<pos:position pos:line="59" pos:column="37"/></operator> <operator pos:line="59" pos:column="38">(<pos:position pos:line="59" pos:column="39"/></operator><operator pos:line="59" pos:column="39">!<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="40">is_ssl<pos:position pos:line="59" pos:column="46"/></name> <operator pos:line="59" pos:column="47">&amp;&amp;<pos:position pos:line="59" pos:column="57"/></operator>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
         <operator pos:line="61" pos:column="10">(<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="11">port<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">!=<pos:position pos:line="61" pos:column="18"/></operator> <literal type="number" pos:line="61" pos:column="19">80<pos:position pos:line="61" pos:column="21"/></literal><operator pos:line="61" pos:column="21">)<pos:position pos:line="61" pos:column="22"/></operator><operator pos:line="61" pos:column="22">)<pos:position pos:line="61" pos:column="23"/></operator></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24">
    <block pos:line="62" pos:column="5">{
        <expr_stmt><expr><name pos:line="63" pos:column="9">colonhost<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <call><name pos:line="63" pos:column="21">apr_psprintf<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name pos:line="63" pos:column="34">cntxt<pos:position pos:line="63" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="63" pos:column="40">":%d"<pos:position pos:line="63" pos:column="45"/></literal></expr></argument>,<argument><expr><name pos:line="63" pos:column="46">port<pos:position pos:line="63" pos:column="50"/></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then> <else pos:line="64" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="9">colonhost<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">=<pos:position pos:line="65" pos:column="20"/></operator> <literal type="string" pos:line="65" pos:column="21">""<pos:position pos:line="65" pos:column="23"/></literal></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt></block></else></if>
    <return pos:line="66" pos:column="5">return <expr><literal type="number" pos:line="66" pos:column="12">0<pos:position pos:line="66" pos:column="13"/></literal></expr>;<pos:position pos:line="66" pos:column="14"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

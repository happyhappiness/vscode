<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2838_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">APR_INLINE<pos:position pos:line="1" pos:column="18"/></name> <name pos:line="1" pos:column="19">ipaddr_chain<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">find_ipaddr<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">apr_sockaddr_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">sa<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">bucket<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ipaddr_chain<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">trav<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ipaddr_chain<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">wild_match<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* scan the hash table for an exact match first */</comment>
    <expr_stmt><expr><name pos:line="8" pos:column="5">bucket<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">hash_addr<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">sa<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">trav<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name><name pos:line="9" pos:column="17">iphash_table<pos:position pos:line="9" pos:column="29"/></name><index pos:line="9" pos:column="29">[<expr><name pos:line="9" pos:column="30">bucket<pos:position pos:line="9" pos:column="36"/></name></expr>]<pos:position pos:line="9" pos:column="37"/></index></name></expr>;<pos:position pos:line="9" pos:column="38"/></init> <condition><expr><name pos:line="9" pos:column="39">trav<pos:position pos:line="9" pos:column="43"/></name></expr>;<pos:position pos:line="9" pos:column="44"/></condition> <incr><expr><name pos:line="9" pos:column="45">trav<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">=<pos:position pos:line="9" pos:column="51"/></operator> <name><name pos:line="9" pos:column="52">trav<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">-&gt;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="58">next<pos:position pos:line="9" pos:column="62"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="63"/></control> <block pos:line="9" pos:column="64">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">server_addr_rec<pos:position pos:line="10" pos:column="24"/></name> <modifier pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></modifier></type><name pos:line="10" pos:column="26">sar<pos:position pos:line="10" pos:column="29"/></name> <init pos:line="10" pos:column="30">= <expr><name><name pos:line="10" pos:column="32">trav<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">sar<pos:position pos:line="10" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">apr_sockaddr_t<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">cur<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><name><name pos:line="11" pos:column="31">sar<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">host_addr<pos:position pos:line="11" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">cur<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">port<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">==<pos:position pos:line="13" pos:column="25"/></operator> <name><name pos:line="13" pos:column="26">sa<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">port<pos:position pos:line="13" pos:column="34"/></name></name></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35"> <block pos:line="13" pos:column="36">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><call><name pos:line="14" pos:column="17">apr_sockaddr_equal<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">cur<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">sa<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45"> <block pos:line="14" pos:column="46">{
                <return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">trav<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></return>
            }<pos:position pos:line="16" pos:column="14"/></block></then></if>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">wild_match<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">==<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">NULL<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">&amp;&amp;<pos:position pos:line="18" pos:column="42"/></operator> <operator pos:line="18" pos:column="35">(<pos:position pos:line="18" pos:column="36"/></operator><name><name pos:line="18" pos:column="36">cur<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">port<pos:position pos:line="18" pos:column="45"/></name></name> <operator pos:line="18" pos:column="46">==<pos:position pos:line="18" pos:column="48"/></operator> <literal type="number" pos:line="18" pos:column="49">0<pos:position pos:line="18" pos:column="50"/></literal> <operator pos:line="18" pos:column="51">||<pos:position pos:line="18" pos:column="53"/></operator> <name><name pos:line="18" pos:column="54">sa<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">-&gt;<pos:position pos:line="18" pos:column="61"/></operator><name pos:line="18" pos:column="58">port<pos:position pos:line="18" pos:column="62"/></name></name> <operator pos:line="18" pos:column="63">==<pos:position pos:line="18" pos:column="65"/></operator> <literal type="number" pos:line="18" pos:column="66">0<pos:position pos:line="18" pos:column="67"/></literal><operator pos:line="18" pos:column="67">)<pos:position pos:line="18" pos:column="68"/></operator></expr>)<pos:position pos:line="18" pos:column="69"/></condition><then pos:line="18" pos:column="69"> <block pos:line="18" pos:column="70">{
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><call><name pos:line="19" pos:column="17">apr_sockaddr_equal<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">cur<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">sa<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <block pos:line="19" pos:column="46">{
                <comment type="block" pos:line="20" pos:column="17">/* don't break, continue looking for an exact match */</comment>
                <expr_stmt><expr><name pos:line="21" pos:column="17">wild_match<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">trav<pos:position pos:line="21" pos:column="34"/></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></for>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">wild_match<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

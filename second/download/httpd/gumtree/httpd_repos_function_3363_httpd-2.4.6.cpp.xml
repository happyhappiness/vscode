<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3363_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">writev_nonblocking<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">apr_socket_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                       <parameter><decl><type><name><name pos:line="2" pos:column="40">struct<pos:position pos:line="2" pos:column="46"/></name> <name pos:line="2" pos:column="47">iovec<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">vec<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">apr_size_t<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">nvec<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="3" pos:column="40">apr_bucket_brigade<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">bb<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="4" pos:column="40">apr_size_t<pos:position pos:line="4" pos:column="50"/></name> <modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">cumulative_bytes_written<pos:position pos:line="4" pos:column="76"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="5" pos:column="40">conn_rec<pos:position pos:line="5" pos:column="48"/></name> <modifier pos:line="5" pos:column="49">*<pos:position pos:line="5" pos:column="50"/></modifier></type><name pos:line="5" pos:column="50">c<pos:position pos:line="5" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="52"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">APR_SUCCESS<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="36">arv<pos:position pos:line="7" pos:column="39"/></name></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">bytes_written<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="35">bytes_to_write<pos:position pos:line="8" pos:column="49"/></name> <init pos:line="8" pos:column="50">= <expr><literal type="number" pos:line="8" pos:column="52">0<pos:position pos:line="8" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">i<pos:position pos:line="9" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="19">offset<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_interval_time_t<pos:position pos:line="10" pos:column="24"/></name></type> <name pos:line="10" pos:column="25">old_timeout<pos:position pos:line="10" pos:column="36"/></name></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">arv<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">apr_socket_timeout_get<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">s<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="37">&amp;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="38">old_timeout<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">arv<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">!=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">APR_SUCCESS<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <block pos:line="13" pos:column="29">{
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">arv<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="16" pos:column="5">arv<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name pos:line="16" pos:column="11">apr_socket_timeout_set<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">s<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="37">0<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">arv<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">!=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">APR_SUCCESS<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28"> <block pos:line="17" pos:column="29">{
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">arv<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><expr><name pos:line="21" pos:column="10">i<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></init> <condition><expr><name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="21">nvec<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></condition> <incr><expr><name pos:line="21" pos:column="27">i<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">++<pos:position pos:line="21" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="31"/></control> <block pos:line="21" pos:column="32">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">bytes_to_write<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">+=<pos:position pos:line="22" pos:column="26"/></operator> <name><name pos:line="22" pos:column="27">vec<pos:position pos:line="22" pos:column="30"/></name><index pos:line="22" pos:column="30">[<expr><name pos:line="22" pos:column="31">i<pos:position pos:line="22" pos:column="32"/></name></expr>]<pos:position pos:line="22" pos:column="33"/></index></name><operator pos:line="22" pos:column="33">.<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">iov_len<pos:position pos:line="22" pos:column="41"/></name></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="24" pos:column="5">offset<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
    <while pos:line="25" pos:column="5">while <condition pos:line="25" pos:column="11">(<expr><name pos:line="25" pos:column="12">bytes_written<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">&lt;<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="28">bytes_to_write<pos:position pos:line="25" pos:column="42"/></name></expr>)<pos:position pos:line="25" pos:column="43"/></condition> <block pos:line="25" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">apr_size_t<pos:position pos:line="26" pos:column="19"/></name></type> <name pos:line="26" pos:column="20">n<pos:position pos:line="26" pos:column="21"/></name> <init pos:line="26" pos:column="22">= <expr><literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">rv<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">apr_socket_sendv<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">s<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">vec<pos:position pos:line="27" pos:column="37"/></name> <operator pos:line="27" pos:column="38">+<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="40">offset<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">nvec<pos:position pos:line="27" pos:column="52"/></name> <operator pos:line="27" pos:column="53">-<pos:position pos:line="27" pos:column="54"/></operator> <name pos:line="27" pos:column="55">offset<pos:position pos:line="27" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="63">&amp;<pos:position pos:line="27" pos:column="68"/></operator><name pos:line="27" pos:column="64">n<pos:position pos:line="27" pos:column="65"/></name></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">n<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">&gt;<pos:position pos:line="28" pos:column="19"/></operator> <literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">bytes_written<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">+=<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">n<pos:position pos:line="29" pos:column="31"/></name></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
            <for pos:line="30" pos:column="13">for <control pos:line="30" pos:column="17">(<init><expr><name pos:line="30" pos:column="18">i<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">offset<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></init> <condition><expr><name pos:line="30" pos:column="30">i<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">&lt;<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="34">nvec<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></condition> <incr/>)<pos:position pos:line="30" pos:column="41"/></control> <block pos:line="30" pos:column="42">{
                <decl_stmt><decl><type><name pos:line="31" pos:column="17">apr_bucket<pos:position pos:line="31" pos:column="27"/></name> <modifier pos:line="31" pos:column="28">*<pos:position pos:line="31" pos:column="29"/></modifier></type><name pos:line="31" pos:column="29">bucket<pos:position pos:line="31" pos:column="35"/></name> <init pos:line="31" pos:column="36">= <expr><call><name pos:line="31" pos:column="38">APR_BRIGADE_FIRST<pos:position pos:line="31" pos:column="55"/></name><argument_list pos:line="31" pos:column="55">(<argument><expr><name pos:line="31" pos:column="56">bb<pos:position pos:line="31" pos:column="58"/></name></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="60"/></decl_stmt>
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">APR_BUCKET_IS_METADATA<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">bucket<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52"> <block pos:line="32" pos:column="53">{
                    <expr_stmt><expr><call><name pos:line="33" pos:column="21">APR_BUCKET_REMOVE<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">bucket<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="34" pos:column="21">apr_bucket_destroy<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">bucket<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="35" pos:column="18"/></block></then>
                <elseif pos:line="36" pos:column="17">else <if pos:line="36" pos:column="22">if <condition pos:line="36" pos:column="25">(<expr><name pos:line="36" pos:column="26">n<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">&gt;=<pos:position pos:line="36" pos:column="33"/></operator> <name><name pos:line="36" pos:column="31">vec<pos:position pos:line="36" pos:column="34"/></name><index pos:line="36" pos:column="34">[<expr><name pos:line="36" pos:column="35">i<pos:position pos:line="36" pos:column="36"/></name></expr>]<pos:position pos:line="36" pos:column="37"/></index></name><operator pos:line="36" pos:column="37">.<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="38">iov_len<pos:position pos:line="36" pos:column="45"/></name></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46"> <block pos:line="36" pos:column="47">{
                    <expr_stmt><expr><call><name pos:line="37" pos:column="21">APR_BUCKET_REMOVE<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">bucket<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="38" pos:column="21">apr_bucket_destroy<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><name pos:line="38" pos:column="40">bucket<pos:position pos:line="38" pos:column="46"/></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="39" pos:column="21">offset<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">++<pos:position pos:line="39" pos:column="29"/></operator></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="40" pos:column="21">n<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">-=<pos:position pos:line="40" pos:column="25"/></operator> <name><name pos:line="40" pos:column="26">vec<pos:position pos:line="40" pos:column="29"/></name><index pos:line="40" pos:column="29">[<expr><name pos:line="40" pos:column="30">i<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">++<pos:position pos:line="40" pos:column="33"/></operator></expr>]<pos:position pos:line="40" pos:column="34"/></index></name><operator pos:line="40" pos:column="34">.<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="35">iov_len<pos:position pos:line="40" pos:column="42"/></name></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="41" pos:column="18"/></block></then></if></elseif>
                <else pos:line="42" pos:column="17">else <block pos:line="42" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="43" pos:column="21">apr_bucket_split<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">bucket<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="46">n<pos:position pos:line="43" pos:column="47"/></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="44" pos:column="21">APR_BUCKET_REMOVE<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">bucket<pos:position pos:line="44" pos:column="45"/></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="45" pos:column="21">apr_bucket_destroy<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">bucket<pos:position pos:line="45" pos:column="46"/></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="46" pos:column="21">vec<pos:position pos:line="46" pos:column="24"/></name><index pos:line="46" pos:column="24">[<expr><name pos:line="46" pos:column="25">i<pos:position pos:line="46" pos:column="26"/></name></expr>]<pos:position pos:line="46" pos:column="27"/></index></name><operator pos:line="46" pos:column="27">.<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="28">iov_len<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">-=<pos:position pos:line="46" pos:column="38"/></operator> <name pos:line="46" pos:column="39">n<pos:position pos:line="46" pos:column="40"/></name></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="47" pos:column="21">vec<pos:position pos:line="47" pos:column="24"/></name><index pos:line="47" pos:column="24">[<expr><name pos:line="47" pos:column="25">i<pos:position pos:line="47" pos:column="26"/></name></expr>]<pos:position pos:line="47" pos:column="27"/></index></name><operator pos:line="47" pos:column="27">.<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">iov_base<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">=<pos:position pos:line="47" pos:column="38"/></operator> <operator pos:line="47" pos:column="39">(<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">char<pos:position pos:line="47" pos:column="44"/></name> <operator pos:line="47" pos:column="45">*<pos:position pos:line="47" pos:column="46"/></operator><operator pos:line="47" pos:column="46">)<pos:position pos:line="47" pos:column="47"/></operator> <name><name pos:line="47" pos:column="48">vec<pos:position pos:line="47" pos:column="51"/></name><index pos:line="47" pos:column="51">[<expr><name pos:line="47" pos:column="52">i<pos:position pos:line="47" pos:column="53"/></name></expr>]<pos:position pos:line="47" pos:column="54"/></index></name><operator pos:line="47" pos:column="54">.<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="55">iov_base<pos:position pos:line="47" pos:column="63"/></name> <operator pos:line="47" pos:column="64">+<pos:position pos:line="47" pos:column="65"/></operator> <name pos:line="47" pos:column="66">n<pos:position pos:line="47" pos:column="67"/></name></expr>;<pos:position pos:line="47" pos:column="68"/></expr_stmt>
                    <break pos:line="48" pos:column="21">break;<pos:position pos:line="48" pos:column="27"/></break>
                }<pos:position pos:line="49" pos:column="18"/></block></else></if>
            }<pos:position pos:line="50" pos:column="14"/></block></for>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">rv<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">!=<pos:position pos:line="52" pos:column="18"/></operator> <name pos:line="52" pos:column="19">APR_SUCCESS<pos:position pos:line="52" pos:column="30"/></name></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31"> <block pos:line="52" pos:column="32">{
            <break pos:line="53" pos:column="13">break;<pos:position pos:line="53" pos:column="19"/></break>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></while>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">(<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">ap__logio_add_bytes_out<pos:position pos:line="56" pos:column="33"/></name> <operator pos:line="56" pos:column="34">!=<pos:position pos:line="56" pos:column="36"/></operator> <name pos:line="56" pos:column="37">NULL<pos:position pos:line="56" pos:column="41"/></name><operator pos:line="56" pos:column="41">)<pos:position pos:line="56" pos:column="42"/></operator> <operator pos:line="56" pos:column="43">&amp;&amp;<pos:position pos:line="56" pos:column="53"/></operator> <operator pos:line="56" pos:column="46">(<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="47">bytes_written<pos:position pos:line="56" pos:column="60"/></name> <operator pos:line="56" pos:column="61">&gt;<pos:position pos:line="56" pos:column="65"/></operator> <literal type="number" pos:line="56" pos:column="63">0<pos:position pos:line="56" pos:column="64"/></literal><operator pos:line="56" pos:column="64">)<pos:position pos:line="56" pos:column="65"/></operator></expr>)<pos:position pos:line="56" pos:column="66"/></condition><then pos:line="56" pos:column="66"> <block pos:line="56" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">ap__logio_add_bytes_out<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">c<pos:position pos:line="57" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="36">bytes_written<pos:position pos:line="57" pos:column="49"/></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="59" pos:column="5">*<pos:position pos:line="59" pos:column="6"/></operator><name pos:line="59" pos:column="6">cumulative_bytes_written<pos:position pos:line="59" pos:column="30"/></name> <operator pos:line="59" pos:column="31">+=<pos:position pos:line="59" pos:column="33"/></operator> <name pos:line="59" pos:column="34">bytes_written<pos:position pos:line="59" pos:column="47"/></name></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name pos:line="61" pos:column="5">arv<pos:position pos:line="61" pos:column="8"/></name> <operator pos:line="61" pos:column="9">=<pos:position pos:line="61" pos:column="10"/></operator> <call><name pos:line="61" pos:column="11">apr_socket_timeout_set<pos:position pos:line="61" pos:column="33"/></name><argument_list pos:line="61" pos:column="33">(<argument><expr><name pos:line="61" pos:column="34">s<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">old_timeout<pos:position pos:line="61" pos:column="48"/></name></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">(<pos:position pos:line="62" pos:column="10"/></operator><name pos:line="62" pos:column="10">arv<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">!=<pos:position pos:line="62" pos:column="16"/></operator> <name pos:line="62" pos:column="17">APR_SUCCESS<pos:position pos:line="62" pos:column="28"/></name><operator pos:line="62" pos:column="28">)<pos:position pos:line="62" pos:column="29"/></operator> <operator pos:line="62" pos:column="30">&amp;&amp;<pos:position pos:line="62" pos:column="40"/></operator> <operator pos:line="62" pos:column="33">(<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="34">rv<pos:position pos:line="62" pos:column="36"/></name> <operator pos:line="62" pos:column="37">==<pos:position pos:line="62" pos:column="39"/></operator> <name pos:line="62" pos:column="40">APR_SUCCESS<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">)<pos:position pos:line="62" pos:column="52"/></operator></expr>)<pos:position pos:line="62" pos:column="53"/></condition><then pos:line="62" pos:column="53"> <block pos:line="62" pos:column="54">{
        <return pos:line="63" pos:column="9">return <expr><name pos:line="63" pos:column="16">arv<pos:position pos:line="63" pos:column="19"/></name></expr>;<pos:position pos:line="63" pos:column="20"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then>
    <else pos:line="65" pos:column="5">else <block pos:line="65" pos:column="10">{
        <return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">rv<pos:position pos:line="66" pos:column="18"/></name></expr>;<pos:position pos:line="66" pos:column="19"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

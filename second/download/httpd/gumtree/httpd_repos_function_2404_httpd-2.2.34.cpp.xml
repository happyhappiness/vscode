<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2404_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">create_listener_thread<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">tid<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">num_listeners<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">use_acceptex<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23"> <block pos:line="5" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">_beginthreadex<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">win9x_accept<pos:position pos:line="6" pos:column="45"/></name></expr></argument>,
                       <argument><expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="33">&amp;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="34">tid<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then> <else pos:line="8" pos:column="7">else <block pos:line="8" pos:column="12">{
        <comment type="block" pos:line="9" pos:column="9">/* Start an accept thread per listener
         * XXX: Why would we have a NULL sd in our listeners?
         */</comment>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">ap_listen_rec<pos:position pos:line="12" pos:column="22"/></name> <modifier pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></modifier></type><name pos:line="12" pos:column="24">lr<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>

        <comment type="block" pos:line="14" pos:column="9">/* Number of completion_contexts allowed in the system is
         * (ap_threads_per_child + num_listeners). We need the additional
         * completion contexts to prevent server hangs when ThreadsPerChild
         * is configured to something less than or equal to the number
         * of listeners. This is not a usual case, but people have
         * encountered it.
         * */</comment>
        <for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">lr<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">ap_listeners<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></init> <condition><expr><name pos:line="21" pos:column="33">lr<pos:position pos:line="21" pos:column="35"/></name></expr> ;<pos:position pos:line="21" pos:column="37"/></condition> <incr><expr><name pos:line="21" pos:column="38">lr<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">=<pos:position pos:line="21" pos:column="42"/></operator> <name><name pos:line="21" pos:column="43">lr<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">next<pos:position pos:line="21" pos:column="51"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="52"/></control> <block pos:line="21" pos:column="53">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">num_listeners<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">++<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="24" pos:column="9">max_num_completion_contexts<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">=<pos:position pos:line="24" pos:column="38"/></operator> <name pos:line="24" pos:column="39">ap_threads_per_child<pos:position pos:line="24" pos:column="59"/></name> <operator pos:line="24" pos:column="60">+<pos:position pos:line="24" pos:column="61"/></operator> <name pos:line="24" pos:column="62">num_listeners<pos:position pos:line="24" pos:column="75"/></name></expr>;<pos:position pos:line="24" pos:column="76"/></expr_stmt>

        <comment type="block" pos:line="26" pos:column="9">/* Now start a thread per listener */</comment>
        <for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">lr<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">ap_listeners<pos:position pos:line="27" pos:column="31"/></name></expr>;<pos:position pos:line="27" pos:column="32"/></init> <condition><expr><name pos:line="27" pos:column="33">lr<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></condition> <incr><expr><name pos:line="27" pos:column="37">lr<pos:position pos:line="27" pos:column="39"/></name> <operator pos:line="27" pos:column="40">=<pos:position pos:line="27" pos:column="41"/></operator> <name><name pos:line="27" pos:column="42">lr<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">next<pos:position pos:line="27" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="27" pos:column="51"/></control> <block pos:line="27" pos:column="52">{
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><name><name pos:line="28" pos:column="17">lr<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">-&gt;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="21">sd<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">!=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">NULL<pos:position pos:line="28" pos:column="31"/></name></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32"> <block pos:line="28" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">_beginthreadex<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">NULL<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="38">1000<pos:position pos:line="29" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">winnt_accept<pos:position pos:line="29" pos:column="56"/></name></expr></argument>,
                               <argument><expr><operator pos:line="30" pos:column="32">(<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">void<pos:position pos:line="30" pos:column="37"/></name> <operator pos:line="30" pos:column="38">*<pos:position pos:line="30" pos:column="39"/></operator><operator pos:line="30" pos:column="39">)<pos:position pos:line="30" pos:column="40"/></operator> <name pos:line="30" pos:column="41">lr<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="45">0<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="48">&amp;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="49">tid<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></for>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

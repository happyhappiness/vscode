<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3859_httpd-2.2.17.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_create<pos:position pos:line="1" pos:column="31"/></name><argument_list pos:line="1" pos:column="31">(<argument><expr><name pos:line="1" pos:column="32">apr_socket_t<pos:position pos:line="1" pos:column="44"/></name> <operator pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></operator><operator pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></operator><operator pos:line="1" pos:column="47">new<pos:position pos:line="1" pos:column="50"/></operator></expr></argument>, <argument><expr><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">ofamily<pos:position pos:line="1" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name> <name pos:line="1" pos:column="69">type<pos:position pos:line="1" pos:column="73"/></name></expr></argument>,
                               <argument><expr><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">protocol<pos:position pos:line="2" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="46">apr_pool_t<pos:position pos:line="2" pos:column="56"/></name> <operator pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></operator><name pos:line="2" pos:column="58">cont<pos:position pos:line="2" pos:column="62"/></name></expr></argument>)<pos:position pos:line="2" pos:column="63"/></argument_list>
<argument_list pos:line="3" pos:column="1">{
    <argument><expr><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name> <name pos:line="4" pos:column="9">family<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">ofamily<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="27">flags<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">=<pos:position pos:line="4" pos:column="34"/></operator> <literal type="number" pos:line="4" pos:column="35">0<pos:position pos:line="4" pos:column="36"/></literal></expr></argument>;

<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">HAVE_SOCK_CLOEXEC<pos:position pos:line="6" pos:column="25"/></name></cpp:ifdef>
    <argument><expr><name pos:line="7" pos:column="5">flags<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">|=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">SOCK_CLOEXEC<pos:position pos:line="7" pos:column="26"/></name></expr></argument>;
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

    if <argument><expr><operator pos:line="10" pos:column="8">(<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">family<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">APR_UNSPEC<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator> <block pos:line="10" pos:column="31">{
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="11" pos:column="18"/></name></expr></cpp:if>
        <expr><name pos:line="12" pos:column="9">family<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">APR_INET6<pos:position pos:line="12" pos:column="27"/></name></expr>;
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
        <expr><name pos:line="14" pos:column="9">family<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">APR_INET<pos:position pos:line="14" pos:column="26"/></name></expr>;
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="16" pos:column="6"/></block>

    <call><name pos:line="18" pos:column="5">alloc_socket<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><operator pos:line="18" pos:column="18">new<pos:position pos:line="18" pos:column="21"/></operator></expr></argument>, <argument><expr><name pos:line="18" pos:column="23">cont<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr></argument>;

<cpp:ifndef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifndef<pos:position pos:line="20" pos:column="8"/></cpp:directive> <name pos:line="20" pos:column="9">BEOS_R5<pos:position pos:line="20" pos:column="16"/></name></cpp:ifndef>
    <argument><expr><operator pos:line="21" pos:column="5">(<pos:position pos:line="21" pos:column="6"/></operator><operator pos:line="21" pos:column="6">*<pos:position pos:line="21" pos:column="7"/></operator><operator pos:line="21" pos:column="7">new<pos:position pos:line="21" pos:column="10"/></operator><operator pos:line="21" pos:column="10">)<pos:position pos:line="21" pos:column="11"/></operator><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">socketdes<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <call><name pos:line="21" pos:column="25">socket<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">family<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">type<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">|<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="45">flags<pos:position pos:line="21" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="52">protocol<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr></argument>;
<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="23" pos:column="5">/* For some reason BeOS R5 has an unconventional protocol numbering,
     * so we need to translate here. */</comment>
    switch <argument><expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">protocol<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">)<pos:position pos:line="25" pos:column="22"/></operator> <block pos:line="25" pos:column="23">{
    <case pos:line="26" pos:column="5">case <expr><literal type="number" pos:line="26" pos:column="10">0<pos:position pos:line="26" pos:column="11"/></literal></expr>:<pos:position pos:line="26" pos:column="12"/></case>
        <expr><operator pos:line="27" pos:column="9">(<pos:position pos:line="27" pos:column="10"/></operator><operator pos:line="27" pos:column="10">*<pos:position pos:line="27" pos:column="11"/></operator><operator pos:line="27" pos:column="11">new<pos:position pos:line="27" pos:column="14"/></operator><operator pos:line="27" pos:column="14">)<pos:position pos:line="27" pos:column="15"/></operator><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">socketdes<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <call><name pos:line="27" pos:column="29">socket<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">family<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">type<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">|<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="49">flags<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="56">0<pos:position pos:line="27" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;
        <break pos:line="28" pos:column="9">break;<pos:position pos:line="28" pos:column="15"/></break></block></expr></argument>
    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">APR_PROTO_TCP<pos:position pos:line="29" pos:column="23"/></name></expr>:<pos:position pos:line="29" pos:column="24"/></case>
        <argument><expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></operator><operator pos:line="30" pos:column="11">new<pos:position pos:line="30" pos:column="14"/></operator><operator pos:line="30" pos:column="14">)<pos:position pos:line="30" pos:column="15"/></operator><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">socketdes<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <call><name pos:line="30" pos:column="29">socket<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">family<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">type<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">|<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">flags<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="56">IPPROTO_TCP<pos:position pos:line="30" pos:column="67"/></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr></argument>;
        break;
    case <argument><expr><name pos:line="32" pos:column="10">APR_PROTO_UDP<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">:<pos:position pos:line="32" pos:column="24"/></operator>
        <operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><operator pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></operator><operator pos:line="33" pos:column="11">new<pos:position pos:line="33" pos:column="14"/></operator><operator pos:line="33" pos:column="14">)<pos:position pos:line="33" pos:column="15"/></operator><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">socketdes<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <call><name pos:line="33" pos:column="29">socket<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">family<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">type<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">|<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="49">flags<pos:position pos:line="33" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">IPPROTO_UDP<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr></argument>;
        break;
    case <argument><expr><name pos:line="35" pos:column="10">APR_PROTO_SCTP<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">:<pos:position pos:line="35" pos:column="25"/></operator></expr></argument>
    <default pos:line="36" pos:column="5">default:<pos:position pos:line="36" pos:column="13"/></default>
        <argument><expr><name pos:line="37" pos:column="9">errno<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">EPROTONOSUPPORT<pos:position pos:line="37" pos:column="32"/></name></expr></argument>;
        <argument><expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><operator pos:line="38" pos:column="10">*<pos:position pos:line="38" pos:column="11"/></operator><operator pos:line="38" pos:column="11">new<pos:position pos:line="38" pos:column="14"/></operator><operator pos:line="38" pos:column="14">)<pos:position pos:line="38" pos:column="15"/></operator><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">socketdes<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="29">-<pos:position pos:line="38" pos:column="30"/></operator><literal type="number" pos:line="38" pos:column="30">1<pos:position pos:line="38" pos:column="31"/></literal></expr></argument>;
        break;
    }<pos:position pos:line="40" pos:column="6"/></argument_list>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="41" pos:column="8">/* BEOS_R5 */</comment>

<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><name pos:line="43" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="43" pos:column="18"/></name></expr></cpp:if>
    if <argument_list pos:line="44" pos:column="8">(<argument><expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><operator pos:line="44" pos:column="10">*<pos:position pos:line="44" pos:column="11"/></operator><operator pos:line="44" pos:column="11">new<pos:position pos:line="44" pos:column="14"/></operator><operator pos:line="44" pos:column="14">)<pos:position pos:line="44" pos:column="15"/></operator><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">socketdes<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">&lt;<pos:position pos:line="44" pos:column="31"/></operator> <literal type="number" pos:line="44" pos:column="29">0<pos:position pos:line="44" pos:column="30"/></literal> <operator pos:line="44" pos:column="31">&amp;&amp;<pos:position pos:line="44" pos:column="41"/></operator> <name pos:line="44" pos:column="34">ofamily<pos:position pos:line="44" pos:column="41"/></name> <operator pos:line="44" pos:column="42">==<pos:position pos:line="44" pos:column="44"/></operator> <name pos:line="44" pos:column="45">APR_UNSPEC<pos:position pos:line="44" pos:column="55"/></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list> <argument_list pos:line="44" pos:column="57">{
        <argument><expr><name pos:line="45" pos:column="9">family<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <name pos:line="45" pos:column="18">APR_INET<pos:position pos:line="45" pos:column="26"/></name></expr></argument>;
        <argument><expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><operator pos:line="46" pos:column="10">*<pos:position pos:line="46" pos:column="11"/></operator><operator pos:line="46" pos:column="11">new<pos:position pos:line="46" pos:column="14"/></operator><operator pos:line="46" pos:column="14">)<pos:position pos:line="46" pos:column="15"/></operator><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">socketdes<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <call><name pos:line="46" pos:column="29">socket<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">family<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="44">type<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">|<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="49">flags<pos:position pos:line="46" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="56">protocol<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr></argument>;
    }<pos:position pos:line="47" pos:column="6"/></argument_list>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>

    if <argument_list pos:line="50" pos:column="8">(<argument><expr><operator pos:line="50" pos:column="9">(<pos:position pos:line="50" pos:column="10"/></operator><operator pos:line="50" pos:column="10">*<pos:position pos:line="50" pos:column="11"/></operator><operator pos:line="50" pos:column="11">new<pos:position pos:line="50" pos:column="14"/></operator><operator pos:line="50" pos:column="14">)<pos:position pos:line="50" pos:column="15"/></operator><operator pos:line="50" pos:column="15">-&gt;<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="17">socketdes<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">&lt;<pos:position pos:line="50" pos:column="31"/></operator> <literal type="number" pos:line="50" pos:column="29">0<pos:position pos:line="50" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="31"/></argument_list> <argument_list pos:line="50" pos:column="32">{
        return <argument><expr><name pos:line="51" pos:column="16">errno<pos:position pos:line="51" pos:column="21"/></name></expr></argument>;
    }<pos:position pos:line="52" pos:column="6"/></argument_list>
    <name pos:line="53" pos:column="5">set_socket_vars<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><operator pos:line="53" pos:column="21">*<pos:position pos:line="53" pos:column="22"/></operator><operator pos:line="53" pos:column="22">new<pos:position pos:line="53" pos:column="25"/></operator></expr></argument>, <argument><expr><name pos:line="53" pos:column="27">family<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="35">type<pos:position pos:line="53" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="41">protocol<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></decl>;<pos:position pos:line="53" pos:column="51"/></decl_stmt>

<cpp:ifndef pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">ifndef<pos:position pos:line="55" pos:column="8"/></cpp:directive> <name pos:line="55" pos:column="9">HAVE_SOCK_CLOEXEC<pos:position pos:line="55" pos:column="26"/></name></cpp:ifndef>
    <block pos:line="56" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="57" pos:column="9">int<pos:position pos:line="57" pos:column="12"/></name></type> <name pos:line="57" pos:column="13">flags<pos:position pos:line="57" pos:column="18"/></name></decl>;<pos:position pos:line="57" pos:column="19"/></decl_stmt>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">(<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">flags<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator> <call><name pos:line="59" pos:column="22">fcntl<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><operator pos:line="59" pos:column="28">(<pos:position pos:line="59" pos:column="29"/></operator><operator pos:line="59" pos:column="29">*<pos:position pos:line="59" pos:column="30"/></operator><operator pos:line="59" pos:column="30">new<pos:position pos:line="59" pos:column="33"/></operator><operator pos:line="59" pos:column="33">)<pos:position pos:line="59" pos:column="34"/></operator><operator pos:line="59" pos:column="34">-&gt;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="36">socketdes<pos:position pos:line="59" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="47">F_GETFD<pos:position pos:line="59" pos:column="54"/></name></expr></argument>)<pos:position pos:line="59" pos:column="55"/></argument_list></call><operator pos:line="59" pos:column="55">)<pos:position pos:line="59" pos:column="56"/></operator> <operator pos:line="59" pos:column="57">==<pos:position pos:line="59" pos:column="59"/></operator> <operator pos:line="59" pos:column="60">-<pos:position pos:line="59" pos:column="61"/></operator><literal type="number" pos:line="59" pos:column="61">1<pos:position pos:line="59" pos:column="62"/></literal></expr>)<pos:position pos:line="59" pos:column="63"/></condition><then pos:line="59" pos:column="63">
            <block type="pseudo"><return pos:line="60" pos:column="13">return <expr><name pos:line="60" pos:column="20">errno<pos:position pos:line="60" pos:column="25"/></name></expr>;<pos:position pos:line="60" pos:column="26"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="62" pos:column="9">flags<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">|=<pos:position pos:line="62" pos:column="17"/></operator> <name pos:line="62" pos:column="18">FD_CLOEXEC<pos:position pos:line="62" pos:column="28"/></name></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><call><name pos:line="63" pos:column="13">fcntl<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><operator pos:line="63" pos:column="19">(<pos:position pos:line="63" pos:column="20"/></operator><operator pos:line="63" pos:column="20">*<pos:position pos:line="63" pos:column="21"/></operator><operator pos:line="63" pos:column="21">new<pos:position pos:line="63" pos:column="24"/></operator><operator pos:line="63" pos:column="24">)<pos:position pos:line="63" pos:column="25"/></operator><operator pos:line="63" pos:column="25">-&gt;<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="27">socketdes<pos:position pos:line="63" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="38">F_SETFD<pos:position pos:line="63" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="47">flags<pos:position pos:line="63" pos:column="52"/></name></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call> <operator pos:line="63" pos:column="54">==<pos:position pos:line="63" pos:column="56"/></operator> <operator pos:line="63" pos:column="57">-<pos:position pos:line="63" pos:column="58"/></operator><literal type="number" pos:line="63" pos:column="58">1<pos:position pos:line="63" pos:column="59"/></literal></expr>)<pos:position pos:line="63" pos:column="60"/></condition><then pos:line="63" pos:column="60">
            <block type="pseudo"><return pos:line="64" pos:column="13">return <expr><name pos:line="64" pos:column="20">errno<pos:position pos:line="64" pos:column="25"/></name></expr>;<pos:position pos:line="64" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="65" pos:column="6"/></block>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><operator pos:line="68" pos:column="5">(<pos:position pos:line="68" pos:column="6"/></operator><operator pos:line="68" pos:column="6">*<pos:position pos:line="68" pos:column="7"/></operator><operator pos:line="68" pos:column="7">new<pos:position pos:line="68" pos:column="10"/></operator><operator pos:line="68" pos:column="10">)<pos:position pos:line="68" pos:column="11"/></operator><operator pos:line="68" pos:column="11">-&gt;<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="13">timeout<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">=<pos:position pos:line="68" pos:column="22"/></operator> <operator pos:line="68" pos:column="23">-<pos:position pos:line="68" pos:column="24"/></operator><literal type="number" pos:line="68" pos:column="24">1<pos:position pos:line="68" pos:column="25"/></literal></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="69" pos:column="5">(<pos:position pos:line="69" pos:column="6"/></operator><operator pos:line="69" pos:column="6">*<pos:position pos:line="69" pos:column="7"/></operator><operator pos:line="69" pos:column="7">new<pos:position pos:line="69" pos:column="10"/></operator><operator pos:line="69" pos:column="10">)<pos:position pos:line="69" pos:column="11"/></operator><operator pos:line="69" pos:column="11">-&gt;<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="13">inherit<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">=<pos:position pos:line="69" pos:column="22"/></operator> <literal type="number" pos:line="69" pos:column="23">0<pos:position pos:line="69" pos:column="24"/></literal></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><operator pos:line="70" pos:column="31">(<pos:position pos:line="70" pos:column="32"/></operator><operator pos:line="70" pos:column="32">*<pos:position pos:line="70" pos:column="33"/></operator><operator pos:line="70" pos:column="33">new<pos:position pos:line="70" pos:column="36"/></operator><operator pos:line="70" pos:column="36">)<pos:position pos:line="70" pos:column="37"/></operator><operator pos:line="70" pos:column="37">-&gt;<pos:position pos:line="70" pos:column="42"/></operator><name pos:line="70" pos:column="39">pool<pos:position pos:line="70" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="45">(<pos:position pos:line="70" pos:column="46"/></operator><name pos:line="70" pos:column="46">void<pos:position pos:line="70" pos:column="50"/></name> <operator pos:line="70" pos:column="51">*<pos:position pos:line="70" pos:column="52"/></operator><operator pos:line="70" pos:column="52">)<pos:position pos:line="70" pos:column="53"/></operator><operator pos:line="70" pos:column="53">(<pos:position pos:line="70" pos:column="54"/></operator><operator pos:line="70" pos:column="54">*<pos:position pos:line="70" pos:column="55"/></operator><operator pos:line="70" pos:column="55">new<pos:position pos:line="70" pos:column="58"/></operator><operator pos:line="70" pos:column="58">)<pos:position pos:line="70" pos:column="59"/></operator></expr></argument>, <argument><expr><name pos:line="70" pos:column="61">socket_cleanup<pos:position pos:line="70" pos:column="75"/></name></expr></argument>,
                              <argument><expr><name pos:line="71" pos:column="31">socket_cleanup<pos:position pos:line="71" pos:column="45"/></name></expr></argument>)<pos:position pos:line="71" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="47"/></expr_stmt>

    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">APR_SUCCESS<pos:position pos:line="73" pos:column="23"/></name></expr>;<pos:position pos:line="73" pos:column="24"/></return>
}</unit>

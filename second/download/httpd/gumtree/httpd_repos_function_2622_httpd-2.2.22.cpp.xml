<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2622_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">dbm_open_type<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">apr_dbm_type_t<pos:position pos:line="1" pos:column="49"/></name> <specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">vtable<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">type<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, 
                                  <parameter><decl><type><name pos:line="3" pos:column="35">apr_pool_t<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">pool<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><operator pos:line="5" pos:column="5">!<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">APU_DSO_BUILD<pos:position pos:line="5" pos:column="19"/></name></expr></cpp:if>

    <expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">vtable<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">strcasecmp<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">type<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="27">"default"<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">     <block type="pseudo"><expr_stmt><expr><operator pos:line="8" pos:column="43">*<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">vtable<pos:position pos:line="8" pos:column="50"/></name> <operator pos:line="8" pos:column="51">=<pos:position pos:line="8" pos:column="52"/></operator> <operator pos:line="8" pos:column="53">&amp;<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="54">DBM_VTABLE<pos:position pos:line="8" pos:column="64"/></name></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt></block></then>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">APU_HAVE_DB<pos:position pos:line="9" pos:column="16"/></name></expr></cpp:if>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if <condition pos:line="10" pos:column="13">(<expr><operator pos:line="10" pos:column="14">!<pos:position pos:line="10" pos:column="15"/></operator><call><name pos:line="10" pos:column="15">strcasecmp<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">type<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="32">"db"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">     <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="43">*<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">vtable<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">=<pos:position pos:line="10" pos:column="52"/></operator> <operator pos:line="10" pos:column="53">&amp;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="54">apr_dbm_type_db<pos:position pos:line="10" pos:column="69"/></name></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><operator pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">type<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&amp;&amp;<pos:position pos:line="12" pos:column="30"/></operator> <operator pos:line="12" pos:column="23">!<pos:position pos:line="12" pos:column="24"/></operator><call><name pos:line="12" pos:column="24">strcasecmp<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">type<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">+<pos:position pos:line="12" pos:column="41"/></operator> <literal type="number" pos:line="12" pos:column="42">1<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="45">"dbm"<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52"> <block pos:line="12" pos:column="53">{
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">APU_HAVE_GDBM<pos:position pos:line="13" pos:column="18"/></name></expr></cpp:if>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">type<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">==<pos:position pos:line="14" pos:column="21"/></operator> <literal type="char" pos:line="14" pos:column="22">'G'<pos:position pos:line="14" pos:column="25"/></literal> <operator pos:line="14" pos:column="26">||<pos:position pos:line="14" pos:column="28"/></operator> <operator pos:line="14" pos:column="29">*<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">type<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">==<pos:position pos:line="14" pos:column="37"/></operator> <literal type="char" pos:line="14" pos:column="38">'g'<pos:position pos:line="14" pos:column="41"/></literal></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="43">*<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">vtable<pos:position pos:line="14" pos:column="50"/></name> <operator pos:line="14" pos:column="51">=<pos:position pos:line="14" pos:column="52"/></operator> <operator pos:line="14" pos:column="53">&amp;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="54">apr_dbm_type_gdbm<pos:position pos:line="14" pos:column="71"/></name></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">APU_HAVE_NDBM<pos:position pos:line="16" pos:column="18"/></name></expr></cpp:if>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">type<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">==<pos:position pos:line="17" pos:column="21"/></operator> <literal type="char" pos:line="17" pos:column="22">'N'<pos:position pos:line="17" pos:column="25"/></literal> <operator pos:line="17" pos:column="26">||<pos:position pos:line="17" pos:column="28"/></operator> <operator pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">type<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">==<pos:position pos:line="17" pos:column="37"/></operator> <literal type="char" pos:line="17" pos:column="38">'n'<pos:position pos:line="17" pos:column="41"/></literal></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42"> <block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="43">*<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="44">vtable<pos:position pos:line="17" pos:column="50"/></name> <operator pos:line="17" pos:column="51">=<pos:position pos:line="17" pos:column="52"/></operator> <operator pos:line="17" pos:column="53">&amp;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="54">apr_dbm_type_ndbm<pos:position pos:line="17" pos:column="71"/></name></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">APU_HAVE_SDBM<pos:position pos:line="19" pos:column="18"/></name></expr></cpp:if>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">type<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">==<pos:position pos:line="20" pos:column="21"/></operator> <literal type="char" pos:line="20" pos:column="22">'S'<pos:position pos:line="20" pos:column="25"/></literal> <operator pos:line="20" pos:column="26">||<pos:position pos:line="20" pos:column="28"/></operator> <operator pos:line="20" pos:column="29">*<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">type<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">==<pos:position pos:line="20" pos:column="37"/></operator> <literal type="char" pos:line="20" pos:column="38">'s'<pos:position pos:line="20" pos:column="41"/></literal></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42"> <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="43">*<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">vtable<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">=<pos:position pos:line="20" pos:column="52"/></operator> <operator pos:line="20" pos:column="53">&amp;<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="54">apr_dbm_type_sdbm<pos:position pos:line="20" pos:column="71"/></name></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt></block></then></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="22" pos:column="9">/* avoid empty block */</comment> <empty_stmt pos:line="22" pos:column="33">;<pos:position pos:line="22" pos:column="34"/></empty_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">vtable<pos:position pos:line="24" pos:column="16"/></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17">
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">APR_SUCCESS<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></return></block></then></if>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">APR_ENOTIMPL<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></return>

<cpp:else pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">else<pos:position pos:line="28" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="28" pos:column="7">/* APU_DSO_BUILD */</comment>

    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name></type> <name><name pos:line="30" pos:column="10">modname<pos:position pos:line="30" pos:column="17"/></name><index pos:line="30" pos:column="17">[<expr><literal type="number" pos:line="30" pos:column="18">32<pos:position pos:line="30" pos:column="20"/></literal></expr>]<pos:position pos:line="30" pos:column="21"/></index></name></decl>;<pos:position pos:line="30" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name></type> <name><name pos:line="31" pos:column="10">symname<pos:position pos:line="31" pos:column="17"/></name><index pos:line="31" pos:column="17">[<expr><literal type="number" pos:line="31" pos:column="18">34<pos:position pos:line="31" pos:column="20"/></literal></expr>]<pos:position pos:line="31" pos:column="21"/></index></name></decl>;<pos:position pos:line="31" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">apr_dso_handle_sym_t<pos:position pos:line="32" pos:column="25"/></name></type> <name pos:line="32" pos:column="26">symbol<pos:position pos:line="32" pos:column="32"/></name></decl>;<pos:position pos:line="32" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">apr_status_t<pos:position pos:line="33" pos:column="17"/></name></type> <name pos:line="33" pos:column="18">rv<pos:position pos:line="33" pos:column="20"/></name></decl>;<pos:position pos:line="33" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">int<pos:position pos:line="34" pos:column="8"/></name></type> <name pos:line="34" pos:column="9">usertype<pos:position pos:line="34" pos:column="17"/></name> <init pos:line="34" pos:column="18">= <expr><literal type="number" pos:line="34" pos:column="20">0<pos:position pos:line="34" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="22"/></decl_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><call><name pos:line="36" pos:column="10">strcasecmp<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">type<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="27">"default"<pos:position pos:line="36" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="38"/></condition><then pos:line="36" pos:column="38">        <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="46">type<pos:position pos:line="36" pos:column="50"/></name> <operator pos:line="36" pos:column="51">=<pos:position pos:line="36" pos:column="52"/></operator> <name pos:line="36" pos:column="53">DBM_NAME<pos:position pos:line="36" pos:column="61"/></name></expr>;<pos:position pos:line="36" pos:column="62"/></expr_stmt></block></then>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><operator pos:line="37" pos:column="14">!<pos:position pos:line="37" pos:column="15"/></operator><call><name pos:line="37" pos:column="15">strcasecmp<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">type<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="32">"db"<pos:position pos:line="37" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="38"/></condition><then pos:line="37" pos:column="38">        <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="46">type<pos:position pos:line="37" pos:column="50"/></name> <operator pos:line="37" pos:column="51">=<pos:position pos:line="37" pos:column="52"/></operator> <literal type="string" pos:line="37" pos:column="53">"db"<pos:position pos:line="37" pos:column="57"/></literal></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><operator pos:line="38" pos:column="14">*<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">type<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">&amp;&amp;<pos:position pos:line="38" pos:column="30"/></operator> <operator pos:line="38" pos:column="23">!<pos:position pos:line="38" pos:column="24"/></operator><call><name pos:line="38" pos:column="24">strcasecmp<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">type<pos:position pos:line="38" pos:column="39"/></name> <operator pos:line="38" pos:column="40">+<pos:position pos:line="38" pos:column="41"/></operator> <literal type="number" pos:line="38" pos:column="42">1<pos:position pos:line="38" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="45">"dbm"<pos:position pos:line="38" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="52"/></condition><then pos:line="38" pos:column="52"> <block pos:line="38" pos:column="53">{
        <if pos:line="39" pos:column="9">if      <condition pos:line="39" pos:column="17">(<expr><operator pos:line="39" pos:column="18">*<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">type<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">==<pos:position pos:line="39" pos:column="26"/></operator> <literal type="char" pos:line="39" pos:column="27">'G'<pos:position pos:line="39" pos:column="30"/></literal> <operator pos:line="39" pos:column="31">||<pos:position pos:line="39" pos:column="33"/></operator> <operator pos:line="39" pos:column="34">*<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">type<pos:position pos:line="39" pos:column="39"/></name> <operator pos:line="39" pos:column="40">==<pos:position pos:line="39" pos:column="42"/></operator> <literal type="char" pos:line="39" pos:column="43">'g'<pos:position pos:line="39" pos:column="46"/></literal></expr>)<pos:position pos:line="39" pos:column="47"/></condition><then pos:line="39" pos:column="47"> <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="48">type<pos:position pos:line="39" pos:column="52"/></name> <operator pos:line="39" pos:column="53">=<pos:position pos:line="39" pos:column="54"/></operator> <literal type="string" pos:line="39" pos:column="55">"gdbm"<pos:position pos:line="39" pos:column="61"/></literal></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt></block></then> 
        <elseif pos:line="40" pos:column="9">else <if pos:line="40" pos:column="14">if <condition pos:line="40" pos:column="17">(<expr><operator pos:line="40" pos:column="18">*<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">type<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">==<pos:position pos:line="40" pos:column="26"/></operator> <literal type="char" pos:line="40" pos:column="27">'N'<pos:position pos:line="40" pos:column="30"/></literal> <operator pos:line="40" pos:column="31">||<pos:position pos:line="40" pos:column="33"/></operator> <operator pos:line="40" pos:column="34">*<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="35">type<pos:position pos:line="40" pos:column="39"/></name> <operator pos:line="40" pos:column="40">==<pos:position pos:line="40" pos:column="42"/></operator> <literal type="char" pos:line="40" pos:column="43">'n'<pos:position pos:line="40" pos:column="46"/></literal></expr>)<pos:position pos:line="40" pos:column="47"/></condition><then pos:line="40" pos:column="47"> <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="48">type<pos:position pos:line="40" pos:column="52"/></name> <operator pos:line="40" pos:column="53">=<pos:position pos:line="40" pos:column="54"/></operator> <literal type="string" pos:line="40" pos:column="55">"ndbm"<pos:position pos:line="40" pos:column="61"/></literal></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt></block></then></if></elseif> 
        <elseif pos:line="41" pos:column="9">else <if pos:line="41" pos:column="14">if <condition pos:line="41" pos:column="17">(<expr><operator pos:line="41" pos:column="18">*<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">type<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">==<pos:position pos:line="41" pos:column="26"/></operator> <literal type="char" pos:line="41" pos:column="27">'S'<pos:position pos:line="41" pos:column="30"/></literal> <operator pos:line="41" pos:column="31">||<pos:position pos:line="41" pos:column="33"/></operator> <operator pos:line="41" pos:column="34">*<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">type<pos:position pos:line="41" pos:column="39"/></name> <operator pos:line="41" pos:column="40">==<pos:position pos:line="41" pos:column="42"/></operator> <literal type="char" pos:line="41" pos:column="43">'s'<pos:position pos:line="41" pos:column="46"/></literal></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="48">type<pos:position pos:line="41" pos:column="52"/></name> <operator pos:line="41" pos:column="53">=<pos:position pos:line="41" pos:column="54"/></operator> <literal type="string" pos:line="41" pos:column="55">"sdbm"<pos:position pos:line="41" pos:column="61"/></literal></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt></block></then></if></elseif></if> 
    }<pos:position pos:line="42" pos:column="6"/></block></then></if></elseif>
    <else pos:line="43" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="10">usertype<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <literal type="number" pos:line="43" pos:column="21">1<pos:position pos:line="43" pos:column="22"/></literal></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt></block></else></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name pos:line="45" pos:column="9">apr_atomic_inc32<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><operator pos:line="45" pos:column="26">&amp;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="27">initialised<pos:position pos:line="45" pos:column="38"/></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="40"/></condition><then pos:line="45" pos:column="40"> <block pos:line="45" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">apr_atomic_set32<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><operator pos:line="46" pos:column="26">&amp;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="27">initialised<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="40">1<pos:position pos:line="46" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt> <comment type="block" pos:line="46" pos:column="44">/* prevent wrap-around */</comment>

        <while pos:line="48" pos:column="9">while <condition pos:line="48" pos:column="15">(<expr><call><name pos:line="48" pos:column="16">apr_atomic_read32<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><operator pos:line="48" pos:column="34">&amp;<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="35">in_init<pos:position pos:line="48" pos:column="42"/></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="44"/></condition> <comment type="block" pos:line="48" pos:column="45">/* wait until we get fully inited */</comment>
            <block type="pseudo"><empty_stmt pos:line="49" pos:column="13">;<pos:position pos:line="49" pos:column="14"/></empty_stmt></block></while>
    }<pos:position pos:line="50" pos:column="6"/></block></then>
    <else pos:line="51" pos:column="5">else <block pos:line="51" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="52" pos:column="9">apr_pool_t<pos:position pos:line="52" pos:column="19"/></name> <modifier pos:line="52" pos:column="20">*<pos:position pos:line="52" pos:column="21"/></modifier></type><name pos:line="52" pos:column="21">parent<pos:position pos:line="52" pos:column="27"/></name></decl>;<pos:position pos:line="52" pos:column="28"/></decl_stmt>

        <comment type="block" pos:line="54" pos:column="9">/* Top level pool scope, need process-scope lifetime */</comment>
        <for pos:line="55" pos:column="9">for <control pos:line="55" pos:column="13">(<init><expr><name pos:line="55" pos:column="14">parent<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <name pos:line="55" pos:column="23">pool<pos:position pos:line="55" pos:column="27"/></name></expr>;<pos:position pos:line="55" pos:column="28"/></init>  <condition><expr><name pos:line="55" pos:column="30">parent<pos:position pos:line="55" pos:column="36"/></name></expr>;<pos:position pos:line="55" pos:column="37"/></condition> <incr><expr><name pos:line="55" pos:column="38">parent<pos:position pos:line="55" pos:column="44"/></name> <operator pos:line="55" pos:column="45">=<pos:position pos:line="55" pos:column="46"/></operator> <call><name pos:line="55" pos:column="47">apr_pool_parent_get<pos:position pos:line="55" pos:column="66"/></name><argument_list pos:line="55" pos:column="66">(<argument><expr><name pos:line="55" pos:column="67">pool<pos:position pos:line="55" pos:column="71"/></name></expr></argument>)<pos:position pos:line="55" pos:column="72"/></argument_list></call></expr></incr>)<pos:position pos:line="55" pos:column="73"/></control>
             <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="14">pool<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <name pos:line="56" pos:column="21">parent<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt></block></for>

        <comment type="block" pos:line="58" pos:column="9">/* deprecate in 2.0 - permit implicit initialization */</comment>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">apu_dso_init<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">pool<pos:position pos:line="59" pos:column="26"/></name></expr></argument>)<pos:position pos:line="59" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name pos:line="61" pos:column="9">drivers<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <call><name pos:line="61" pos:column="19">apr_hash_make<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">pool<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">apr_hash_set<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">drivers<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="31">"sdbm"<pos:position pos:line="62" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="39">APR_HASH_KEY_STRING<pos:position pos:line="62" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="60">&amp;<pos:position pos:line="62" pos:column="65"/></operator><name pos:line="62" pos:column="61">apr_dbm_type_sdbm<pos:position pos:line="62" pos:column="78"/></name></expr></argument>)<pos:position pos:line="62" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="80"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="64" pos:column="9">apr_pool_cleanup_register<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">pool<pos:position pos:line="64" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="41">NULL<pos:position pos:line="64" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="47">dbm_term<pos:position pos:line="64" pos:column="55"/></name></expr></argument>,
                                  <argument><expr><name pos:line="65" pos:column="35">apr_pool_cleanup_null<pos:position pos:line="65" pos:column="56"/></name></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="58"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="67" pos:column="9">apr_atomic_dec32<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><operator pos:line="67" pos:column="26">&amp;<pos:position pos:line="67" pos:column="31"/></operator><name pos:line="67" pos:column="27">in_init<pos:position pos:line="67" pos:column="34"/></name></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="70" pos:column="5">rv<pos:position pos:line="70" pos:column="7"/></name> <operator pos:line="70" pos:column="8">=<pos:position pos:line="70" pos:column="9"/></operator> <call><name pos:line="70" pos:column="10">apu_dso_mutex_lock<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">()<pos:position pos:line="70" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="31"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">rv<pos:position pos:line="71" pos:column="11"/></name></expr>)<pos:position pos:line="71" pos:column="12"/></condition><then pos:line="71" pos:column="12"> <block pos:line="71" pos:column="13">{
        <expr_stmt><expr><operator pos:line="72" pos:column="9">*<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">vtable<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">=<pos:position pos:line="72" pos:column="18"/></operator> <name pos:line="72" pos:column="19">NULL<pos:position pos:line="72" pos:column="23"/></name></expr>;<pos:position pos:line="72" pos:column="24"/></expr_stmt>
        <return pos:line="73" pos:column="9">return <expr><name pos:line="73" pos:column="16">rv<pos:position pos:line="73" pos:column="18"/></name></expr>;<pos:position pos:line="73" pos:column="19"/></return>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="76" pos:column="5">*<pos:position pos:line="76" pos:column="6"/></operator><name pos:line="76" pos:column="6">vtable<pos:position pos:line="76" pos:column="12"/></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <call><name pos:line="76" pos:column="15">apr_hash_get<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name pos:line="76" pos:column="28">drivers<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">type<pos:position pos:line="76" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="43">APR_HASH_KEY_STRING<pos:position pos:line="76" pos:column="62"/></name></expr></argument>)<pos:position pos:line="76" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="64"/></expr_stmt>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><operator pos:line="77" pos:column="9">*<pos:position pos:line="77" pos:column="10"/></operator><name pos:line="77" pos:column="10">vtable<pos:position pos:line="77" pos:column="16"/></name></expr>)<pos:position pos:line="77" pos:column="17"/></condition><then pos:line="77" pos:column="17"> <block pos:line="77" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">apu_dso_mutex_unlock<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">()<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">APR_SUCCESS<pos:position pos:line="79" pos:column="27"/></name></expr>;<pos:position pos:line="79" pos:column="28"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="82" pos:column="5">/* The driver DSO must have exactly the same lifetime as the
     * drivers hash table; ignore the passed-in pool */</comment>
    <expr_stmt><expr><name pos:line="84" pos:column="5">pool<pos:position pos:line="84" pos:column="9"/></name> <operator pos:line="84" pos:column="10">=<pos:position pos:line="84" pos:column="11"/></operator> <call><name pos:line="84" pos:column="12">apr_hash_pool_get<pos:position pos:line="84" pos:column="29"/></name><argument_list pos:line="84" pos:column="29">(<argument><expr><name pos:line="84" pos:column="30">drivers<pos:position pos:line="84" pos:column="37"/></name></expr></argument>)<pos:position pos:line="84" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="39"/></expr_stmt>

<cpp:if pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">if<pos:position pos:line="86" pos:column="4"/></cpp:directive> <expr><call><name pos:line="86" pos:column="5">defined<pos:position pos:line="86" pos:column="12"/></name><argument_list pos:line="86" pos:column="12">(<argument><expr><name pos:line="86" pos:column="13">NETWARE<pos:position pos:line="86" pos:column="20"/></name></expr></argument>)<pos:position pos:line="86" pos:column="21"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">apr_snprintf<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><name pos:line="87" pos:column="18">modname<pos:position pos:line="87" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="27">sizeof<argument_list pos:line="87" pos:column="33">(<argument><expr><name pos:line="87" pos:column="34">modname<pos:position pos:line="87" pos:column="41"/></name></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="44">"dbm%s.nlm"<pos:position pos:line="87" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="57">type<pos:position pos:line="87" pos:column="61"/></name></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="63"/></expr_stmt>
<cpp:elif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">elif<pos:position pos:line="88" pos:column="6"/></cpp:directive> <expr><call><name pos:line="88" pos:column="7">defined<pos:position pos:line="88" pos:column="14"/></name><argument_list pos:line="88" pos:column="14">(<argument><expr><name pos:line="88" pos:column="15">WIN32<pos:position pos:line="88" pos:column="20"/></name></expr></argument>)<pos:position pos:line="88" pos:column="21"/></argument_list></call></expr></cpp:elif>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">apr_snprintf<pos:position pos:line="89" pos:column="17"/></name><argument_list pos:line="89" pos:column="17">(<argument><expr><name pos:line="89" pos:column="18">modname<pos:position pos:line="89" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="27">sizeof<argument_list pos:line="89" pos:column="33">(<argument><expr><name pos:line="89" pos:column="34">modname<pos:position pos:line="89" pos:column="41"/></name></expr></argument>)<pos:position pos:line="89" pos:column="42"/></argument_list></sizeof></expr></argument>,
                 <argument><expr><literal type="string" pos:line="90" pos:column="18">"apr_dbm_%s-"<pos:position pos:line="90" pos:column="31"/></literal> <call><name pos:line="90" pos:column="32">APU_STRINGIFY<pos:position pos:line="90" pos:column="45"/></name><argument_list pos:line="90" pos:column="45">(<argument><expr><name pos:line="90" pos:column="46">APU_MAJOR_VERSION<pos:position pos:line="90" pos:column="63"/></name></expr></argument>)<pos:position pos:line="90" pos:column="64"/></argument_list></call> <literal type="string" pos:line="90" pos:column="65">".dll"<pos:position pos:line="90" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="73">type<pos:position pos:line="90" pos:column="77"/></name></expr></argument>)<pos:position pos:line="90" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="79"/></expr_stmt>
<cpp:else pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">else<pos:position pos:line="91" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">apr_snprintf<pos:position pos:line="92" pos:column="17"/></name><argument_list pos:line="92" pos:column="17">(<argument><expr><name pos:line="92" pos:column="18">modname<pos:position pos:line="92" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="27">sizeof<argument_list pos:line="92" pos:column="33">(<argument><expr><name pos:line="92" pos:column="34">modname<pos:position pos:line="92" pos:column="41"/></name></expr></argument>)<pos:position pos:line="92" pos:column="42"/></argument_list></sizeof></expr></argument>,
                 <argument><expr><literal type="string" pos:line="93" pos:column="18">"apr_dbm_%s-"<pos:position pos:line="93" pos:column="31"/></literal> <call><name pos:line="93" pos:column="32">APU_STRINGIFY<pos:position pos:line="93" pos:column="45"/></name><argument_list pos:line="93" pos:column="45">(<argument><expr><name pos:line="93" pos:column="46">APU_MAJOR_VERSION<pos:position pos:line="93" pos:column="63"/></name></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call> <literal type="string" pos:line="93" pos:column="65">".so"<pos:position pos:line="93" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="72">type<pos:position pos:line="93" pos:column="76"/></name></expr></argument>)<pos:position pos:line="93" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="78"/></expr_stmt>
<cpp:endif pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">endif<pos:position pos:line="94" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">apr_snprintf<pos:position pos:line="95" pos:column="17"/></name><argument_list pos:line="95" pos:column="17">(<argument><expr><name pos:line="95" pos:column="18">symname<pos:position pos:line="95" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="27">sizeof<argument_list pos:line="95" pos:column="33">(<argument><expr><name pos:line="95" pos:column="34">symname<pos:position pos:line="95" pos:column="41"/></name></expr></argument>)<pos:position pos:line="95" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="44">"apr_dbm_type_%s"<pos:position pos:line="95" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="63">type<pos:position pos:line="95" pos:column="67"/></name></expr></argument>)<pos:position pos:line="95" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><name pos:line="97" pos:column="5">rv<pos:position pos:line="97" pos:column="7"/></name> <operator pos:line="97" pos:column="8">=<pos:position pos:line="97" pos:column="9"/></operator> <call><name pos:line="97" pos:column="10">apu_dso_load<pos:position pos:line="97" pos:column="22"/></name><argument_list pos:line="97" pos:column="22">(<argument><expr><name pos:line="97" pos:column="23">NULL<pos:position pos:line="97" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="29">&amp;<pos:position pos:line="97" pos:column="34"/></operator><name pos:line="97" pos:column="30">symbol<pos:position pos:line="97" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="38">modname<pos:position pos:line="97" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="47">symname<pos:position pos:line="97" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="56">pool<pos:position pos:line="97" pos:column="60"/></name></expr></argument>)<pos:position pos:line="97" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="62"/></expr_stmt>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name pos:line="98" pos:column="9">rv<pos:position pos:line="98" pos:column="11"/></name> <operator pos:line="98" pos:column="12">==<pos:position pos:line="98" pos:column="14"/></operator> <name pos:line="98" pos:column="15">APR_SUCCESS<pos:position pos:line="98" pos:column="26"/></name> <operator pos:line="98" pos:column="27">||<pos:position pos:line="98" pos:column="29"/></operator> <name pos:line="98" pos:column="30">rv<pos:position pos:line="98" pos:column="32"/></name> <operator pos:line="98" pos:column="33">==<pos:position pos:line="98" pos:column="35"/></operator> <name pos:line="98" pos:column="36">APR_EINIT<pos:position pos:line="98" pos:column="45"/></name></expr>)<pos:position pos:line="98" pos:column="46"/></condition><then pos:line="98" pos:column="46"> <block pos:line="98" pos:column="47">{ <comment type="block" pos:line="98" pos:column="49">/* previously loaded?!? */</comment>
        <expr_stmt><expr><operator pos:line="99" pos:column="9">*<pos:position pos:line="99" pos:column="10"/></operator><name pos:line="99" pos:column="10">vtable<pos:position pos:line="99" pos:column="16"/></name> <operator pos:line="99" pos:column="17">=<pos:position pos:line="99" pos:column="18"/></operator> <name pos:line="99" pos:column="19">symbol<pos:position pos:line="99" pos:column="25"/></name></expr>;<pos:position pos:line="99" pos:column="26"/></expr_stmt>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">usertype<pos:position pos:line="100" pos:column="21"/></name></expr>)<pos:position pos:line="100" pos:column="22"/></condition><then pos:line="100" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="13">type<pos:position pos:line="101" pos:column="17"/></name> <operator pos:line="101" pos:column="18">=<pos:position pos:line="101" pos:column="19"/></operator> <call><name pos:line="101" pos:column="20">apr_pstrdup<pos:position pos:line="101" pos:column="31"/></name><argument_list pos:line="101" pos:column="31">(<argument><expr><name pos:line="101" pos:column="32">pool<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">type<pos:position pos:line="101" pos:column="42"/></name></expr></argument>)<pos:position pos:line="101" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="44"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="102" pos:column="9">apr_hash_set<pos:position pos:line="102" pos:column="21"/></name><argument_list pos:line="102" pos:column="21">(<argument><expr><name pos:line="102" pos:column="22">drivers<pos:position pos:line="102" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="31">type<pos:position pos:line="102" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="37">APR_HASH_KEY_STRING<pos:position pos:line="102" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="58">*<pos:position pos:line="102" pos:column="59"/></operator><name pos:line="102" pos:column="59">vtable<pos:position pos:line="102" pos:column="65"/></name></expr></argument>)<pos:position pos:line="102" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="103" pos:column="9">rv<pos:position pos:line="103" pos:column="11"/></name> <operator pos:line="103" pos:column="12">=<pos:position pos:line="103" pos:column="13"/></operator> <name pos:line="103" pos:column="14">APR_SUCCESS<pos:position pos:line="103" pos:column="25"/></name></expr>;<pos:position pos:line="103" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="104" pos:column="6"/></block></then>
    <else pos:line="105" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="106" pos:column="9">*<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">vtable<pos:position pos:line="106" pos:column="16"/></name> <operator pos:line="106" pos:column="17">=<pos:position pos:line="106" pos:column="18"/></operator> <name pos:line="106" pos:column="19">NULL<pos:position pos:line="106" pos:column="23"/></name></expr>;<pos:position pos:line="106" pos:column="24"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="108" pos:column="5">apu_dso_mutex_unlock<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">()<pos:position pos:line="108" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="28"/></expr_stmt>
    <return pos:line="109" pos:column="5">return <expr><name pos:line="109" pos:column="12">rv<pos:position pos:line="109" pos:column="14"/></name></expr>;<pos:position pos:line="109" pos:column="15"/></return>

<cpp:endif pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">endif<pos:position pos:line="111" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="111" pos:column="8">/* APU_DSO_BUILD */</comment>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

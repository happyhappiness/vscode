<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2078_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">send_data<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">proxy_conn_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">conn<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">iovec<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">vec<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">nvec<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="4" pos:column="31">apr_size_t<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier></type><name pos:line="4" pos:column="43">len<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="5" pos:column="31">int<pos:position pos:line="5" pos:column="34"/></name></type> <name pos:line="5" pos:column="35">blocking<pos:position pos:line="5" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="44"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">APR_SUCCESS<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="36">arv<pos:position pos:line="7" pos:column="39"/></name></decl>;<pos:position pos:line="7" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">written<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="29">to_write<pos:position pos:line="8" pos:column="37"/></name> <init pos:line="8" pos:column="38">= <expr><literal type="number" pos:line="8" pos:column="40">0<pos:position pos:line="8" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="12">offset<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_interval_time_t<pos:position pos:line="10" pos:column="24"/></name></type> <name pos:line="10" pos:column="25">old_timeout<pos:position pos:line="10" pos:column="36"/></name></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_socket_t<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">s<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><name><name pos:line="11" pos:column="23">conn<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">sock<pos:position pos:line="11" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">blocking<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">arv<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">apr_socket_timeout_get<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">s<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="41">&amp;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="42">old_timeout<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">arv<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">!=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">APR_SUCCESS<pos:position pos:line="15" pos:column="31"/></name></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32"> <block pos:line="15" pos:column="33">{
            <return pos:line="16" pos:column="13">return <expr><name pos:line="16" pos:column="20">arv<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="18" pos:column="9">arv<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">apr_socket_timeout_set<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">s<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="41">0<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">arv<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">!=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">APR_SUCCESS<pos:position pos:line="19" pos:column="31"/></name></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32"> <block pos:line="19" pos:column="33">{
            <return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">arv<pos:position pos:line="20" pos:column="23"/></name></expr>;<pos:position pos:line="20" pos:column="24"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">i<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></init> <condition><expr><name pos:line="24" pos:column="17">i<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&lt;<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="21">nvec<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></condition> <incr><expr><name pos:line="24" pos:column="27">i<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">++<pos:position pos:line="24" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="31"/></control> <block pos:line="24" pos:column="32">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">to_write<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">+=<pos:position pos:line="25" pos:column="20"/></operator> <name><name pos:line="25" pos:column="21">vec<pos:position pos:line="25" pos:column="24"/></name><index pos:line="25" pos:column="24">[<expr><name pos:line="25" pos:column="25">i<pos:position pos:line="25" pos:column="26"/></name></expr>]<pos:position pos:line="25" pos:column="27"/></index></name><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">iov_len<pos:position pos:line="25" pos:column="35"/></name></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="28" pos:column="5">offset<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <literal type="number" pos:line="28" pos:column="14">0<pos:position pos:line="28" pos:column="15"/></literal></expr>;<pos:position pos:line="28" pos:column="16"/></expr_stmt>
    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><name pos:line="29" pos:column="12">to_write<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition> <block pos:line="29" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">apr_size_t<pos:position pos:line="30" pos:column="19"/></name></type> <name pos:line="30" pos:column="20">n<pos:position pos:line="30" pos:column="21"/></name> <init pos:line="30" pos:column="22">= <expr><literal type="number" pos:line="30" pos:column="24">0<pos:position pos:line="30" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">rv<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">apr_socket_sendv<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">s<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">vec<pos:position pos:line="31" pos:column="37"/></name> <operator pos:line="31" pos:column="38">+<pos:position pos:line="31" pos:column="39"/></operator> <name pos:line="31" pos:column="40">offset<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">nvec<pos:position pos:line="31" pos:column="52"/></name> <operator pos:line="31" pos:column="53">-<pos:position pos:line="31" pos:column="54"/></operator> <name pos:line="31" pos:column="55">offset<pos:position pos:line="31" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="63">&amp;<pos:position pos:line="31" pos:column="68"/></operator><name pos:line="31" pos:column="64">n<pos:position pos:line="31" pos:column="65"/></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">rv<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">!=<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">APR_SUCCESS<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">)<pos:position pos:line="32" pos:column="32"/></operator> <operator pos:line="32" pos:column="33">&amp;&amp;<pos:position pos:line="32" pos:column="43"/></operator> <operator pos:line="32" pos:column="36">!<pos:position pos:line="32" pos:column="37"/></operator><call><name pos:line="32" pos:column="37">APR_STATUS_IS_EAGAIN<pos:position pos:line="32" pos:column="57"/></name><argument_list pos:line="32" pos:column="57">(<argument><expr><name pos:line="32" pos:column="58">rv<pos:position pos:line="32" pos:column="60"/></name></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62"> <block pos:line="32" pos:column="63">{
            <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">n<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">&gt;<pos:position pos:line="35" pos:column="19"/></operator> <literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19"> <block pos:line="35" pos:column="20">{
            <expr_stmt><expr><name pos:line="36" pos:column="13">written<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">+=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">n<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name pos:line="37" pos:column="17">written<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">&gt;=<pos:position pos:line="37" pos:column="30"/></operator> <name pos:line="37" pos:column="28">to_write<pos:position pos:line="37" pos:column="36"/></name></expr>)<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37">
                <block type="pseudo"><break pos:line="38" pos:column="17">break;<pos:position pos:line="38" pos:column="23"/></break></block></then></if>                 <comment type="block" pos:line="38" pos:column="40">/* short circuit out */</comment>
            <for pos:line="39" pos:column="13">for <control pos:line="39" pos:column="17">(<init><expr><name pos:line="39" pos:column="18">i<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">offset<pos:position pos:line="39" pos:column="28"/></name></expr>;<pos:position pos:line="39" pos:column="29"/></init> <condition><expr><name pos:line="39" pos:column="30">i<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">&lt;<pos:position pos:line="39" pos:column="36"/></operator> <name pos:line="39" pos:column="34">nvec<pos:position pos:line="39" pos:column="38"/></name></expr>;<pos:position pos:line="39" pos:column="39"/></condition> <incr/>)<pos:position pos:line="39" pos:column="41"/></control> <block pos:line="39" pos:column="42">{
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">n<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&gt;=<pos:position pos:line="40" pos:column="28"/></operator> <name><name pos:line="40" pos:column="26">vec<pos:position pos:line="40" pos:column="29"/></name><index pos:line="40" pos:column="29">[<expr><name pos:line="40" pos:column="30">i<pos:position pos:line="40" pos:column="31"/></name></expr>]<pos:position pos:line="40" pos:column="32"/></index></name><operator pos:line="40" pos:column="32">.<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">iov_len<pos:position pos:line="40" pos:column="40"/></name></expr>)<pos:position pos:line="40" pos:column="41"/></condition><then pos:line="40" pos:column="41"> <block pos:line="40" pos:column="42">{
                    <expr_stmt><expr><name pos:line="41" pos:column="21">offset<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">++<pos:position pos:line="41" pos:column="29"/></operator></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="42" pos:column="21">n<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">-=<pos:position pos:line="42" pos:column="25"/></operator> <name><name pos:line="42" pos:column="26">vec<pos:position pos:line="42" pos:column="29"/></name><index pos:line="42" pos:column="29">[<expr><name pos:line="42" pos:column="30">i<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">++<pos:position pos:line="42" pos:column="33"/></operator></expr>]<pos:position pos:line="42" pos:column="34"/></index></name><operator pos:line="42" pos:column="34">.<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">iov_len<pos:position pos:line="42" pos:column="42"/></name></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="43" pos:column="18"/></block></then> <else pos:line="43" pos:column="19">else <block pos:line="43" pos:column="24">{
                    <expr_stmt><expr><name><name pos:line="44" pos:column="21">vec<pos:position pos:line="44" pos:column="24"/></name><index pos:line="44" pos:column="24">[<expr><name pos:line="44" pos:column="25">i<pos:position pos:line="44" pos:column="26"/></name></expr>]<pos:position pos:line="44" pos:column="27"/></index></name><operator pos:line="44" pos:column="27">.<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">iov_len<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">-=<pos:position pos:line="44" pos:column="38"/></operator> <name pos:line="44" pos:column="39">n<pos:position pos:line="44" pos:column="40"/></name></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="45" pos:column="21">vec<pos:position pos:line="45" pos:column="24"/></name><index pos:line="45" pos:column="24">[<expr><name pos:line="45" pos:column="25">i<pos:position pos:line="45" pos:column="26"/></name></expr>]<pos:position pos:line="45" pos:column="27"/></index></name><operator pos:line="45" pos:column="27">.<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">iov_base<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">=<pos:position pos:line="45" pos:column="38"/></operator> <operator pos:line="45" pos:column="39">(<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="40">char<pos:position pos:line="45" pos:column="44"/></name> <operator pos:line="45" pos:column="45">*<pos:position pos:line="45" pos:column="46"/></operator><operator pos:line="45" pos:column="46">)<pos:position pos:line="45" pos:column="47"/></operator> <name><name pos:line="45" pos:column="48">vec<pos:position pos:line="45" pos:column="51"/></name><index pos:line="45" pos:column="51">[<expr><name pos:line="45" pos:column="52">i<pos:position pos:line="45" pos:column="53"/></name></expr>]<pos:position pos:line="45" pos:column="54"/></index></name><operator pos:line="45" pos:column="54">.<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="55">iov_base<pos:position pos:line="45" pos:column="63"/></name> <operator pos:line="45" pos:column="64">+<pos:position pos:line="45" pos:column="65"/></operator> <name pos:line="45" pos:column="66">n<pos:position pos:line="45" pos:column="67"/></name></expr>;<pos:position pos:line="45" pos:column="68"/></expr_stmt>
                    <break pos:line="46" pos:column="21">break;<pos:position pos:line="46" pos:column="27"/></break>
                }<pos:position pos:line="47" pos:column="18"/></block></else></if>
            }<pos:position pos:line="48" pos:column="14"/></block></for>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></while>

    <expr_stmt><expr><name><name pos:line="52" pos:column="5">conn<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">worker<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">s<pos:position pos:line="52" pos:column="20"/></name><operator pos:line="52" pos:column="20">-&gt;<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="22">transferred<pos:position pos:line="52" pos:column="33"/></name></name> <operator pos:line="52" pos:column="34">+=<pos:position pos:line="52" pos:column="36"/></operator> <name pos:line="52" pos:column="37">written<pos:position pos:line="52" pos:column="44"/></name></expr>;<pos:position pos:line="52" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="53" pos:column="5">*<pos:position pos:line="53" pos:column="6"/></operator><name pos:line="53" pos:column="6">len<pos:position pos:line="53" pos:column="9"/></name> <operator pos:line="53" pos:column="10">=<pos:position pos:line="53" pos:column="11"/></operator> <name pos:line="53" pos:column="12">written<pos:position pos:line="53" pos:column="19"/></name></expr>;<pos:position pos:line="53" pos:column="20"/></expr_stmt>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">blocking<pos:position pos:line="55" pos:column="18"/></name></expr>)<pos:position pos:line="55" pos:column="19"/></condition><then pos:line="55" pos:column="19"> <block pos:line="55" pos:column="20">{
        <expr_stmt><expr><name pos:line="56" pos:column="9">arv<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">apr_socket_timeout_set<pos:position pos:line="56" pos:column="37"/></name><argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">s<pos:position pos:line="56" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="41">old_timeout<pos:position pos:line="56" pos:column="52"/></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">arv<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">!=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">APR_SUCCESS<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">)<pos:position pos:line="57" pos:column="33"/></operator> <operator pos:line="57" pos:column="34">&amp;&amp;<pos:position pos:line="57" pos:column="44"/></operator> <operator pos:line="57" pos:column="37">(<pos:position pos:line="57" pos:column="38"/></operator><name pos:line="57" pos:column="38">rv<pos:position pos:line="57" pos:column="40"/></name> <operator pos:line="57" pos:column="41">==<pos:position pos:line="57" pos:column="43"/></operator> <name pos:line="57" pos:column="44">APR_SUCCESS<pos:position pos:line="57" pos:column="55"/></name><operator pos:line="57" pos:column="55">)<pos:position pos:line="57" pos:column="56"/></operator></expr>)<pos:position pos:line="57" pos:column="57"/></condition><then pos:line="57" pos:column="57"> <block pos:line="57" pos:column="58">{
            <return pos:line="58" pos:column="13">return <expr><name pos:line="58" pos:column="20">arv<pos:position pos:line="58" pos:column="23"/></name></expr>;<pos:position pos:line="58" pos:column="24"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">rv<pos:position pos:line="61" pos:column="14"/></name></expr>;<pos:position pos:line="61" pos:column="15"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

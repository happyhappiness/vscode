<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_637.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_printenv<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">include_ctx_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ctx<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">apr_bucket_brigade<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier><modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">bb<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, 
                           <parameter><decl><type><name pos:line="2" pos:column="28">request_rec<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">r<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">ap_filter_t<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">f<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, 
                           <parameter><decl><type><name pos:line="3" pos:column="28">apr_bucket<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">head_ptr<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="50">apr_bucket<pos:position pos:line="3" pos:column="60"/></name> <modifier pos:line="3" pos:column="61">*<pos:position pos:line="3" pos:column="62"/></modifier><modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">inserted_head<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="77"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">tag<pos:position pos:line="5" pos:column="14"/></name>     <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">tag_val<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">tmp_buck<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">ctx<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">flags<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">&amp;<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="22">FLAG_PRINTING<pos:position pos:line="9" pos:column="35"/></name></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <block pos:line="9" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_ssi_get_tag_and_value<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">ctx<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="39">&amp;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="40">tag<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="45">&amp;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="46">tag_val<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="55">1<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">tag<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">==<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator> <operator pos:line="11" pos:column="27">&amp;&amp;<pos:position pos:line="11" pos:column="37"/></operator> <operator pos:line="11" pos:column="30">(<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">tag_val<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">==<pos:position pos:line="11" pos:column="41"/></operator> <name pos:line="11" pos:column="42">NULL<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">)<pos:position pos:line="11" pos:column="47"/></operator></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48"> <block pos:line="11" pos:column="49">{
            <decl_stmt><decl><type><specifier pos:line="12" pos:column="13">const<pos:position pos:line="12" pos:column="18"/></specifier> <name pos:line="12" pos:column="19">apr_array_header_t<pos:position pos:line="12" pos:column="37"/></name> <modifier pos:line="12" pos:column="38">*<pos:position pos:line="12" pos:column="39"/></modifier></type><name pos:line="12" pos:column="39">arr<pos:position pos:line="12" pos:column="42"/></name> <init pos:line="12" pos:column="43">= <expr><call><name pos:line="12" pos:column="45">apr_table_elts<pos:position pos:line="12" pos:column="59"/></name><argument_list pos:line="12" pos:column="59">(<argument><expr><name><name pos:line="12" pos:column="60">r<pos:position pos:line="12" pos:column="61"/></name><operator pos:line="12" pos:column="61">-&gt;<pos:position pos:line="12" pos:column="66"/></operator><name pos:line="12" pos:column="63">subprocess_env<pos:position pos:line="12" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="79"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="13" pos:column="13">const<pos:position pos:line="13" pos:column="18"/></specifier> <name pos:line="13" pos:column="19">apr_table_entry_t<pos:position pos:line="13" pos:column="36"/></name> <modifier pos:line="13" pos:column="37">*<pos:position pos:line="13" pos:column="38"/></modifier></type><name pos:line="13" pos:column="38">elts<pos:position pos:line="13" pos:column="42"/></name> <init pos:line="13" pos:column="43">= <expr><operator pos:line="13" pos:column="45">(<pos:position pos:line="13" pos:column="46"/></operator><specifier pos:line="13" pos:column="46">const<pos:position pos:line="13" pos:column="51"/></specifier> <name pos:line="13" pos:column="52">apr_table_entry_t<pos:position pos:line="13" pos:column="69"/></name> <operator pos:line="13" pos:column="70">*<pos:position pos:line="13" pos:column="71"/></operator><operator pos:line="13" pos:column="71">)<pos:position pos:line="13" pos:column="72"/></operator><name><name pos:line="13" pos:column="72">arr<pos:position pos:line="13" pos:column="75"/></name><operator pos:line="13" pos:column="75">-&gt;<pos:position pos:line="13" pos:column="80"/></operator><name pos:line="13" pos:column="77">elts<pos:position pos:line="13" pos:column="81"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="82"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">int<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">i<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="15" pos:column="13">const<pos:position pos:line="15" pos:column="18"/></specifier> <name pos:line="15" pos:column="19">char<pos:position pos:line="15" pos:column="23"/></name> <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier></type><name pos:line="15" pos:column="25">key_text<pos:position pos:line="15" pos:column="33"/></name></decl>, <modifier pos:line="15" pos:column="35">*<pos:position pos:line="15" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="15" pos:column="36">val_text<pos:position pos:line="15" pos:column="44"/></name></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">char<pos:position pos:line="16" pos:column="17"/></name> <modifier pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></modifier></type><name pos:line="16" pos:column="19">key_val<pos:position pos:line="16" pos:column="26"/></name></decl>, <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="16" pos:column="29">next<pos:position pos:line="16" pos:column="33"/></name></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">apr_size_t<pos:position pos:line="17" pos:column="23"/></name></type>   <name pos:line="17" pos:column="26">k_len<pos:position pos:line="17" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="33">v_len<pos:position pos:line="17" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="40">kv_length<pos:position pos:line="17" pos:column="49"/></name></decl>;<pos:position pos:line="17" pos:column="50"/></decl_stmt>

            <expr_stmt><expr><operator pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">inserted_head<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">NULL<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
            <for pos:line="20" pos:column="13">for <control pos:line="20" pos:column="17">(<init><expr><name pos:line="20" pos:column="18">i<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr>;<pos:position pos:line="20" pos:column="24"/></init> <condition><expr><name pos:line="20" pos:column="25">i<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&lt;<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="29">arr<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">nelts<pos:position pos:line="20" pos:column="39"/></name></name></expr>;<pos:position pos:line="20" pos:column="40"/></condition> <incr><expr><operator pos:line="20" pos:column="41">++<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="43">i<pos:position pos:line="20" pos:column="44"/></name></expr></incr>)<pos:position pos:line="20" pos:column="45"/></control> <block pos:line="20" pos:column="46">{
                <expr_stmt><expr><name pos:line="21" pos:column="17">key_text<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <call><name pos:line="21" pos:column="28">ap_escape_html<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><name><name pos:line="21" pos:column="43">r<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">pool<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="52">elts<pos:position pos:line="21" pos:column="56"/></name><index pos:line="21" pos:column="56">[<expr><name pos:line="21" pos:column="57">i<pos:position pos:line="21" pos:column="58"/></name></expr>]<pos:position pos:line="21" pos:column="59"/></index></name><operator pos:line="21" pos:column="59">.<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="60">key<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><name pos:line="22" pos:column="17">val_text<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <name><name pos:line="22" pos:column="28">elts<pos:position pos:line="22" pos:column="32"/></name><index pos:line="22" pos:column="32">[<expr><name pos:line="22" pos:column="33">i<pos:position pos:line="22" pos:column="34"/></name></expr>]<pos:position pos:line="22" pos:column="35"/></index></name><operator pos:line="22" pos:column="35">.<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">val<pos:position pos:line="22" pos:column="39"/></name></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
                <if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">val_text<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">==<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">LAZY_VALUE<pos:position pos:line="23" pos:column="43"/></name></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44"> <block pos:line="23" pos:column="45">{
                    <expr_stmt><expr><name pos:line="24" pos:column="21">val_text<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">=<pos:position pos:line="24" pos:column="31"/></operator> <call><name pos:line="24" pos:column="32">add_include_vars_lazy<pos:position pos:line="24" pos:column="53"/></name><argument_list pos:line="24" pos:column="53">(<argument><expr><name pos:line="24" pos:column="54">r<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="57">elts<pos:position pos:line="24" pos:column="61"/></name><index pos:line="24" pos:column="61">[<expr><name pos:line="24" pos:column="62">i<pos:position pos:line="24" pos:column="63"/></name></expr>]<pos:position pos:line="24" pos:column="64"/></index></name><operator pos:line="24" pos:column="64">.<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="65">key<pos:position pos:line="24" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="70">ctx<pos:position pos:line="24" pos:column="73"/></name><operator pos:line="24" pos:column="73">-&gt;<pos:position pos:line="24" pos:column="78"/></operator><name pos:line="24" pos:column="75">time_str<pos:position pos:line="24" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="85"/></expr_stmt>
                }<pos:position pos:line="25" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="26" pos:column="17">val_text<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <call><name pos:line="26" pos:column="28">ap_escape_html<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument><expr><name><name pos:line="26" pos:column="43">r<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">pool<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="52">elts<pos:position pos:line="26" pos:column="56"/></name><index pos:line="26" pos:column="56">[<expr><name pos:line="26" pos:column="57">i<pos:position pos:line="26" pos:column="58"/></name></expr>]<pos:position pos:line="26" pos:column="59"/></index></name><operator pos:line="26" pos:column="59">.<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="60">val<pos:position pos:line="26" pos:column="63"/></name></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><name pos:line="27" pos:column="17">k_len<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <call><name pos:line="27" pos:column="25">strlen<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">key_text<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="28" pos:column="17">v_len<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">strlen<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">val_text<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="29" pos:column="17">kv_length<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">k_len<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">+<pos:position pos:line="29" pos:column="36"/></operator> <name pos:line="29" pos:column="37">v_len<pos:position pos:line="29" pos:column="42"/></name> <operator pos:line="29" pos:column="43">+<pos:position pos:line="29" pos:column="44"/></operator> <sizeof pos:line="29" pos:column="45">sizeof<argument_list pos:line="29" pos:column="51">(<argument><expr><literal type="string" pos:line="29" pos:column="52">"=\n"<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></sizeof></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name pos:line="30" pos:column="17">key_val<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <call><name pos:line="30" pos:column="27">apr_palloc<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name><name pos:line="30" pos:column="38">r<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">pool<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">kv_length<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="31" pos:column="17">next<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">key_val<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">memcpy<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">next<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="30">key_text<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">k_len<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="33" pos:column="17">next<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">+=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">k_len<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">next<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">++<pos:position pos:line="34" pos:column="24"/></operator> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <literal type="char" pos:line="34" pos:column="27">'='<pos:position pos:line="34" pos:column="30"/></literal></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="35" pos:column="17">memcpy<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">next<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="30">val_text<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">v_len<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="36" pos:column="17">next<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">+=<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="25">v_len<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="37" pos:column="17">*<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">next<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">++<pos:position pos:line="37" pos:column="24"/></operator> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <literal type="char" pos:line="37" pos:column="27">'\n'<pos:position pos:line="37" pos:column="31"/></literal></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">next<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <literal type="number" pos:line="38" pos:column="25">0<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name pos:line="39" pos:column="17">tmp_buck<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <call><name pos:line="39" pos:column="28">apr_bucket_pool_create<pos:position pos:line="39" pos:column="50"/></name><argument_list pos:line="39" pos:column="50">(<argument><expr><name pos:line="39" pos:column="51">key_val<pos:position pos:line="39" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="60">kv_length<pos:position pos:line="39" pos:column="69"/></name> <operator pos:line="39" pos:column="70">-<pos:position pos:line="39" pos:column="71"/></operator> <literal type="number" pos:line="39" pos:column="72">1<pos:position pos:line="39" pos:column="73"/></literal></expr></argument>,
                                                  <argument><expr><name><name pos:line="40" pos:column="51">r<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">-&gt;<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="54">pool<pos:position pos:line="40" pos:column="58"/></name></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="41" pos:column="51">r<pos:position pos:line="41" pos:column="52"/></name><operator pos:line="41" pos:column="52">-&gt;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="54">connection<pos:position pos:line="41" pos:column="64"/></name><operator pos:line="41" pos:column="64">-&gt;<pos:position pos:line="41" pos:column="69"/></operator><name pos:line="41" pos:column="66">bucket_alloc<pos:position pos:line="41" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">head_ptr<pos:position pos:line="42" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="52">tmp_buck<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt>
                <if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">*<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">inserted_head<pos:position pos:line="43" pos:column="35"/></name> <operator pos:line="43" pos:column="36">==<pos:position pos:line="43" pos:column="38"/></operator> <name pos:line="43" pos:column="39">NULL<pos:position pos:line="43" pos:column="43"/></name></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44"> <block pos:line="43" pos:column="45">{
                    <expr_stmt><expr><operator pos:line="44" pos:column="21">*<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">inserted_head<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">=<pos:position pos:line="44" pos:column="37"/></operator> <name pos:line="44" pos:column="38">tmp_buck<pos:position pos:line="44" pos:column="46"/></name></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="45" pos:column="18"/></block></then></if>
            }<pos:position pos:line="46" pos:column="14"/></block></for>
            <return pos:line="47" pos:column="13">return <expr><literal type="number" pos:line="47" pos:column="20">0<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then>
        <else pos:line="49" pos:column="9">else <block pos:line="49" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">ap_log_rerror<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">APLOG_MARK<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="39">APLOG_ERR<pos:position pos:line="50" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="50">0<pos:position pos:line="50" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="53">r<pos:position pos:line="50" pos:column="54"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="51" pos:column="25">"printenv directive does not take tags in %s"<pos:position pos:line="51" pos:column="70"/></literal></expr></argument>, 
                        <argument><expr><name><name pos:line="52" pos:column="25">r<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">-&gt;<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="28">filename<pos:position pos:line="52" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">CREATE_ERROR_BUCKET<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">ctx<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">tmp_buck<pos:position pos:line="53" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="48">head_ptr<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="58">*<pos:position pos:line="53" pos:column="59"/></operator><name pos:line="53" pos:column="59">inserted_head<pos:position pos:line="53" pos:column="72"/></name></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>
            <return pos:line="54" pos:column="13">return <expr><operator pos:line="54" pos:column="20">-<pos:position pos:line="54" pos:column="21"/></operator><literal type="number" pos:line="54" pos:column="21">1<pos:position pos:line="54" pos:column="22"/></literal></expr>;<pos:position pos:line="54" pos:column="23"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></else></if>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <return pos:line="57" pos:column="5">return <expr><literal type="number" pos:line="57" pos:column="12">0<pos:position pos:line="57" pos:column="13"/></literal></expr>;<pos:position pos:line="57" pos:column="14"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

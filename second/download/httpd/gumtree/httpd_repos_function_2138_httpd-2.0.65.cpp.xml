<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2138_httpd-2.0.65.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">worker_main<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">void<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">arg<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_listen_rec<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">lr<pos:position pos:line="3" pos:column="22"/></name></decl>, <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="25">first_lr<pos:position pos:line="3" pos:column="33"/></name></decl>, <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="36">last_lr<pos:position pos:line="3" pos:column="43"/></name> <init pos:line="3" pos:column="44">= <expr><name pos:line="3" pos:column="46">NULL<pos:position pos:line="3" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ptrans<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_pool_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pbucket<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_allocator_t<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">allocator<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">bucket_alloc<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">conn_rec<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">current_conn<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">stat<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><name pos:line="9" pos:column="25">APR_EINIT<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_sb_handle_t<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">sbh<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">my_worker_num<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">int<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">)<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">arg<pos:position pos:line="12" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_socket_t<pos:position pos:line="13" pos:column="17"/></name> <modifier pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></modifier></type><name pos:line="13" pos:column="19">csd<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><name pos:line="13" pos:column="25">NULL<pos:position pos:line="13" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">requests_this_child<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_socket_t<pos:position pos:line="15" pos:column="17"/></name> <modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier></type><name pos:line="15" pos:column="19">sd<pos:position pos:line="15" pos:column="21"/></name> <init pos:line="15" pos:column="22">= <expr><name pos:line="15" pos:column="24">NULL<pos:position pos:line="15" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">fd_set<pos:position pos:line="16" pos:column="11"/></name></type> <name pos:line="16" pos:column="12">main_fds<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">sockdes<pos:position pos:line="18" pos:column="16"/></name></decl>;<pos:position pos:line="18" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">srv<pos:position pos:line="19" pos:column="12"/></name></decl>;<pos:position pos:line="19" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="20" pos:column="5">struct<pos:position pos:line="20" pos:column="11"/></name> <name pos:line="20" pos:column="12">timeval<pos:position pos:line="20" pos:column="19"/></name></name></type> <name pos:line="20" pos:column="20">tv<pos:position pos:line="20" pos:column="22"/></name></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">wouldblock_retry<pos:position pos:line="21" pos:column="25"/></name></decl>;<pos:position pos:line="21" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">tv<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">.<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">tv_sec<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <literal type="number" pos:line="23" pos:column="17">1<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">tv<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">.<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">tv_usec<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">apr_allocator_create<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><operator pos:line="26" pos:column="26">&amp;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="27">allocator<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">apr_allocator_max_free_set<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">allocator<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">ap_max_mem_free<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">apr_pool_create_ex<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><operator pos:line="29" pos:column="24">&amp;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="25">ptrans<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">pmain<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="40">NULL<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">allocator<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">apr_allocator_owner_set<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">allocator<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">ptrans<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">apr_pool_tag<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">ptrans<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="26">"transaction"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="33" pos:column="5">bucket_alloc<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">apr_bucket_alloc_create_ex<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">(<argument><expr><name pos:line="33" pos:column="47">allocator<pos:position pos:line="33" pos:column="56"/></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">atomic_inc<pos:position pos:line="35" pos:column="15"/></name> <argument_list pos:line="35" pos:column="16">(<argument><expr><operator pos:line="35" pos:column="17">&amp;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="18">worker_thread_count<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>

    <while pos:line="37" pos:column="5">while <condition pos:line="37" pos:column="11">(<expr><operator pos:line="37" pos:column="12">!<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="13">die_now<pos:position pos:line="37" pos:column="20"/></name></expr>)<pos:position pos:line="37" pos:column="21"/></condition> <block pos:line="37" pos:column="22">{
        <comment type="block" pos:line="38" pos:column="9">/*
        * (Re)initialize this child to a pre-connection state.
        */</comment>
        <expr_stmt><expr><name pos:line="41" pos:column="9">current_conn<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">NULL<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">apr_pool_clear<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">ptrans<pos:position pos:line="42" pos:column="30"/></name></expr></argument>)<pos:position pos:line="42" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">(<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">ap_max_requests_per_child<pos:position pos:line="44" pos:column="39"/></name> <operator pos:line="44" pos:column="40">&gt;<pos:position pos:line="44" pos:column="44"/></operator> <literal type="number" pos:line="44" pos:column="42">0<pos:position pos:line="44" pos:column="43"/></literal>
            <operator pos:line="45" pos:column="13">&amp;&amp;<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="16">requests_this_child<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">++<pos:position pos:line="45" pos:column="37"/></operator> <operator pos:line="45" pos:column="38">&gt;=<pos:position pos:line="45" pos:column="43"/></operator> <name pos:line="45" pos:column="41">ap_max_requests_per_child<pos:position pos:line="45" pos:column="66"/></name><operator pos:line="45" pos:column="66">)<pos:position pos:line="45" pos:column="67"/></operator></expr>)<pos:position pos:line="45" pos:column="68"/></condition><then pos:line="45" pos:column="68"> <block pos:line="45" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">DBPRINT1<pos:position pos:line="46" pos:column="21"/></name> <argument_list pos:line="46" pos:column="22">(<argument><expr><literal type="string" pos:line="46" pos:column="23">"\n**Thread slot %d is shutting down"<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="62">my_worker_num<pos:position pos:line="46" pos:column="75"/></name></expr></argument>)<pos:position pos:line="46" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">clean_child_exit<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><literal type="number" pos:line="47" pos:column="30">0<pos:position pos:line="47" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="33">my_worker_num<pos:position pos:line="47" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="48">ptrans<pos:position pos:line="47" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="56">bucket_alloc<pos:position pos:line="47" pos:column="68"/></name></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ap_update_child_status_from_indexes<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><literal type="number" pos:line="50" pos:column="45">0<pos:position pos:line="50" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="48">my_worker_num<pos:position pos:line="50" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="63">WORKER_READY<pos:position pos:line="50" pos:column="75"/></name></expr></argument>, 
                                            <argument><expr><operator pos:line="51" pos:column="45">(<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="46">request_rec<pos:position pos:line="51" pos:column="57"/></name> <operator pos:line="51" pos:column="58">*<pos:position pos:line="51" pos:column="59"/></operator><operator pos:line="51" pos:column="59">)<pos:position pos:line="51" pos:column="60"/></operator> <name pos:line="51" pos:column="61">NULL<pos:position pos:line="51" pos:column="65"/></name></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="67"/></expr_stmt>

        <comment type="block" pos:line="53" pos:column="9">/*
        * Wait for an acceptable connection to arrive.
        */</comment>

        <for pos:line="57" pos:column="9">for <control pos:line="57" pos:column="13">(<init pos:line="57" pos:column="14">;<pos:position pos:line="57" pos:column="15"/></init><condition pos:line="57" pos:column="15">;<pos:position pos:line="57" pos:column="16"/></condition><incr/>)<pos:position pos:line="57" pos:column="17"/></control> <block pos:line="57" pos:column="18">{
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name pos:line="58" pos:column="17">shutdown_pending<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">||<pos:position pos:line="58" pos:column="36"/></operator> <name pos:line="58" pos:column="37">restart_pending<pos:position pos:line="58" pos:column="52"/></name> <operator pos:line="58" pos:column="53">||<pos:position pos:line="58" pos:column="55"/></operator> <operator pos:line="58" pos:column="56">(<pos:position pos:line="58" pos:column="57"/></operator><name><name pos:line="58" pos:column="57">ap_scoreboard_image<pos:position pos:line="58" pos:column="76"/></name><operator pos:line="58" pos:column="76">-&gt;<pos:position pos:line="58" pos:column="81"/></operator><name pos:line="58" pos:column="78">servers<pos:position pos:line="58" pos:column="85"/></name><index pos:line="58" pos:column="85">[<expr><literal type="number" pos:line="58" pos:column="86">0<pos:position pos:line="58" pos:column="87"/></literal></expr>]<pos:position pos:line="58" pos:column="88"/></index><index pos:line="58" pos:column="88">[<expr><name pos:line="58" pos:column="89">my_worker_num<pos:position pos:line="58" pos:column="102"/></name></expr>]<pos:position pos:line="58" pos:column="103"/></index></name><operator pos:line="58" pos:column="103">.<pos:position pos:line="58" pos:column="104"/></operator><name pos:line="58" pos:column="104">status<pos:position pos:line="58" pos:column="110"/></name> <operator pos:line="58" pos:column="111">==<pos:position pos:line="58" pos:column="113"/></operator> <name pos:line="58" pos:column="114">WORKER_IDLE_KILL<pos:position pos:line="58" pos:column="130"/></name><operator pos:line="58" pos:column="130">)<pos:position pos:line="58" pos:column="131"/></operator></expr>)<pos:position pos:line="58" pos:column="132"/></condition><then pos:line="58" pos:column="132"> <block pos:line="58" pos:column="133">{
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">DBPRINT1<pos:position pos:line="59" pos:column="25"/></name> <argument_list pos:line="59" pos:column="26">(<argument><expr><literal type="string" pos:line="59" pos:column="27">"\nThread slot %d is shutting down\n"<pos:position pos:line="59" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="66">my_worker_num<pos:position pos:line="59" pos:column="79"/></name></expr></argument>)<pos:position pos:line="59" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">clean_child_exit<pos:position pos:line="60" pos:column="33"/></name><argument_list pos:line="60" pos:column="33">(<argument><expr><literal type="number" pos:line="60" pos:column="34">0<pos:position pos:line="60" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="37">my_worker_num<pos:position pos:line="60" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="52">ptrans<pos:position pos:line="60" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="60">bucket_alloc<pos:position pos:line="60" pos:column="72"/></name></expr></argument>)<pos:position pos:line="60" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="61" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="63" pos:column="13">/* Check the listen queue on all sockets for requests */</comment>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">memcpy<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><operator pos:line="64" pos:column="20">&amp;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="21">main_fds<pos:position pos:line="64" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="31">&amp;<pos:position pos:line="64" pos:column="36"/></operator><name pos:line="64" pos:column="32">listenfds<pos:position pos:line="64" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="43">sizeof<argument_list pos:line="64" pos:column="49">(<argument><expr><name pos:line="64" pos:column="50">fd_set<pos:position pos:line="64" pos:column="56"/></name></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="65" pos:column="13">srv<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <call><name pos:line="65" pos:column="19">select<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><name pos:line="65" pos:column="26">listenmaxfd<pos:position pos:line="65" pos:column="37"/></name> <operator pos:line="65" pos:column="38">+<pos:position pos:line="65" pos:column="39"/></operator> <literal type="number" pos:line="65" pos:column="40">1<pos:position pos:line="65" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="43">&amp;<pos:position pos:line="65" pos:column="48"/></operator><name pos:line="65" pos:column="44">main_fds<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">NULL<pos:position pos:line="65" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="60">NULL<pos:position pos:line="65" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="66">&amp;<pos:position pos:line="65" pos:column="71"/></operator><name pos:line="65" pos:column="67">tv<pos:position pos:line="65" pos:column="69"/></name></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="71"/></expr_stmt>

            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><name pos:line="67" pos:column="17">srv<pos:position pos:line="67" pos:column="20"/></name> <operator pos:line="67" pos:column="21">&lt;=<pos:position pos:line="67" pos:column="26"/></operator> <literal type="number" pos:line="67" pos:column="24">0<pos:position pos:line="67" pos:column="25"/></literal></expr>)<pos:position pos:line="67" pos:column="26"/></condition><then pos:line="67" pos:column="26"> <block pos:line="67" pos:column="27">{
                <if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">srv<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">&lt;<pos:position pos:line="68" pos:column="29"/></operator> <literal type="number" pos:line="68" pos:column="27">0<pos:position pos:line="68" pos:column="28"/></literal></expr>)<pos:position pos:line="68" pos:column="29"/></condition><then pos:line="68" pos:column="29"> <block pos:line="68" pos:column="30">{
                    <expr_stmt><expr><call><name pos:line="69" pos:column="21">ap_log_error<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><name pos:line="69" pos:column="34">APLOG_MARK<pos:position pos:line="69" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="46">APLOG_NOTICE<pos:position pos:line="69" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="60">WSAGetLastError<pos:position pos:line="69" pos:column="75"/></name><argument_list pos:line="69" pos:column="75">()<pos:position pos:line="69" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="79">ap_server_conf<pos:position pos:line="69" pos:column="93"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="70" pos:column="25">"select() failed on listen socket"<pos:position pos:line="70" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="61"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="71" pos:column="21">apr_thread_yield<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">()<pos:position pos:line="71" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="72" pos:column="18"/></block></then></if>
                <continue pos:line="73" pos:column="17">continue;<pos:position pos:line="73" pos:column="26"/></continue>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="76" pos:column="13">/* remember the last_lr we searched last time around so that
            we don't end up starving any particular listening socket */</comment>
            <if pos:line="78" pos:column="13">if <condition pos:line="78" pos:column="16">(<expr><name pos:line="78" pos:column="17">last_lr<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">==<pos:position pos:line="78" pos:column="27"/></operator> <name pos:line="78" pos:column="28">NULL<pos:position pos:line="78" pos:column="32"/></name></expr>)<pos:position pos:line="78" pos:column="33"/></condition><then pos:line="78" pos:column="33"> <block pos:line="78" pos:column="34">{
                <expr_stmt><expr><name pos:line="79" pos:column="17">lr<pos:position pos:line="79" pos:column="19"/></name> <operator pos:line="79" pos:column="20">=<pos:position pos:line="79" pos:column="21"/></operator> <name pos:line="79" pos:column="22">ap_listeners<pos:position pos:line="79" pos:column="34"/></name></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="80" pos:column="14"/></block></then>
            <else pos:line="81" pos:column="13">else <block pos:line="81" pos:column="18">{
                <expr_stmt><expr><name pos:line="82" pos:column="17">lr<pos:position pos:line="82" pos:column="19"/></name> <operator pos:line="82" pos:column="20">=<pos:position pos:line="82" pos:column="21"/></operator> <name><name pos:line="82" pos:column="22">last_lr<pos:position pos:line="82" pos:column="29"/></name><operator pos:line="82" pos:column="29">-&gt;<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="31">next<pos:position pos:line="82" pos:column="35"/></name></name></expr>;<pos:position pos:line="82" pos:column="36"/></expr_stmt>
                <if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><operator pos:line="83" pos:column="21">!<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">lr<pos:position pos:line="83" pos:column="24"/></name></expr>)<pos:position pos:line="83" pos:column="25"/></condition><then pos:line="83" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="21">lr<pos:position pos:line="84" pos:column="23"/></name> <operator pos:line="84" pos:column="24">=<pos:position pos:line="84" pos:column="25"/></operator> <name pos:line="84" pos:column="26">ap_listeners<pos:position pos:line="84" pos:column="38"/></name></expr>;<pos:position pos:line="84" pos:column="39"/></expr_stmt></block></then></if>
            }<pos:position pos:line="85" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="86" pos:column="13">first_lr<pos:position pos:line="86" pos:column="21"/></name> <operator pos:line="86" pos:column="22">=<pos:position pos:line="86" pos:column="23"/></operator> <name pos:line="86" pos:column="24">lr<pos:position pos:line="86" pos:column="26"/></name></expr>;<pos:position pos:line="86" pos:column="27"/></expr_stmt>
            <do pos:line="87" pos:column="13">do <block pos:line="87" pos:column="16">{
                <expr_stmt><expr><call><name pos:line="88" pos:column="17">apr_os_sock_get<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">(<argument><expr><operator pos:line="88" pos:column="33">&amp;<pos:position pos:line="88" pos:column="38"/></operator><name pos:line="88" pos:column="34">sockdes<pos:position pos:line="88" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="43">lr<pos:position pos:line="88" pos:column="45"/></name><operator pos:line="88" pos:column="45">-&gt;<pos:position pos:line="88" pos:column="50"/></operator><name pos:line="88" pos:column="47">sd<pos:position pos:line="88" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="51"/></expr_stmt>
                <if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><call><name pos:line="89" pos:column="21">FD_ISSET<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><name pos:line="89" pos:column="30">sockdes<pos:position pos:line="89" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="39">&amp;<pos:position pos:line="89" pos:column="44"/></operator><name pos:line="89" pos:column="40">main_fds<pos:position pos:line="89" pos:column="48"/></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="50"/></condition><then pos:line="89" pos:column="50">
                    <block type="pseudo"><goto pos:line="90" pos:column="21">goto <name pos:line="90" pos:column="26">got_listener<pos:position pos:line="90" pos:column="38"/></name>;<pos:position pos:line="90" pos:column="39"/></goto></block></then></if>
                <expr_stmt><expr><name pos:line="91" pos:column="17">lr<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <name><name pos:line="91" pos:column="22">lr<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">-&gt;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="26">next<pos:position pos:line="91" pos:column="30"/></name></name></expr>;<pos:position pos:line="91" pos:column="31"/></expr_stmt>
                <if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><operator pos:line="92" pos:column="21">!<pos:position pos:line="92" pos:column="22"/></operator><name pos:line="92" pos:column="22">lr<pos:position pos:line="92" pos:column="24"/></name></expr>)<pos:position pos:line="92" pos:column="25"/></condition><then pos:line="92" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="21">lr<pos:position pos:line="93" pos:column="23"/></name> <operator pos:line="93" pos:column="24">=<pos:position pos:line="93" pos:column="25"/></operator> <name pos:line="93" pos:column="26">ap_listeners<pos:position pos:line="93" pos:column="38"/></name></expr>;<pos:position pos:line="93" pos:column="39"/></expr_stmt></block></then></if>
            }<pos:position pos:line="94" pos:column="14"/></block> while <condition pos:line="94" pos:column="21">(<expr><name pos:line="94" pos:column="22">lr<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">!=<pos:position pos:line="94" pos:column="27"/></operator> <name pos:line="94" pos:column="28">first_lr<pos:position pos:line="94" pos:column="36"/></name></expr>)<pos:position pos:line="94" pos:column="37"/></condition>;<pos:position pos:line="94" pos:column="38"/></do>
            <comment type="block" pos:line="95" pos:column="13">/* if we get here, something unexpected happened. Go back
            into the select state and try again.
            */</comment>
            <continue pos:line="98" pos:column="13">continue;<pos:position pos:line="98" pos:column="22"/></continue>
        <label><name pos:line="99" pos:column="9">got_listener<pos:position pos:line="99" pos:column="21"/></name>:<pos:position pos:line="99" pos:column="22"/></label>
            <expr_stmt><expr><name pos:line="100" pos:column="13">last_lr<pos:position pos:line="100" pos:column="20"/></name> <operator pos:line="100" pos:column="21">=<pos:position pos:line="100" pos:column="22"/></operator> <name pos:line="100" pos:column="23">lr<pos:position pos:line="100" pos:column="25"/></name></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="101" pos:column="13">sd<pos:position pos:line="101" pos:column="15"/></name> <operator pos:line="101" pos:column="16">=<pos:position pos:line="101" pos:column="17"/></operator> <name><name pos:line="101" pos:column="18">lr<pos:position pos:line="101" pos:column="20"/></name><operator pos:line="101" pos:column="20">-&gt;<pos:position pos:line="101" pos:column="25"/></operator><name pos:line="101" pos:column="22">sd<pos:position pos:line="101" pos:column="24"/></name></name></expr>;<pos:position pos:line="101" pos:column="25"/></expr_stmt>

            <expr_stmt><expr><name pos:line="103" pos:column="13">wouldblock_retry<pos:position pos:line="103" pos:column="29"/></name> <operator pos:line="103" pos:column="30">=<pos:position pos:line="103" pos:column="31"/></operator> <name pos:line="103" pos:column="32">MAX_WB_RETRIES<pos:position pos:line="103" pos:column="46"/></name></expr>;<pos:position pos:line="103" pos:column="47"/></expr_stmt>

            <while pos:line="105" pos:column="13">while <condition pos:line="105" pos:column="19">(<expr><name pos:line="105" pos:column="20">wouldblock_retry<pos:position pos:line="105" pos:column="36"/></name></expr>)<pos:position pos:line="105" pos:column="37"/></condition> <block pos:line="105" pos:column="38">{
                <if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><operator pos:line="106" pos:column="21">(<pos:position pos:line="106" pos:column="22"/></operator><name pos:line="106" pos:column="22">stat<pos:position pos:line="106" pos:column="26"/></name> <operator pos:line="106" pos:column="27">=<pos:position pos:line="106" pos:column="28"/></operator> <call><name pos:line="106" pos:column="29">apr_accept<pos:position pos:line="106" pos:column="39"/></name><argument_list pos:line="106" pos:column="39">(<argument><expr><operator pos:line="106" pos:column="40">&amp;<pos:position pos:line="106" pos:column="45"/></operator><name pos:line="106" pos:column="41">csd<pos:position pos:line="106" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="46">sd<pos:position pos:line="106" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="50">ptrans<pos:position pos:line="106" pos:column="56"/></name></expr></argument>)<pos:position pos:line="106" pos:column="57"/></argument_list></call><operator pos:line="106" pos:column="57">)<pos:position pos:line="106" pos:column="58"/></operator> <operator pos:line="106" pos:column="59">==<pos:position pos:line="106" pos:column="61"/></operator> <name pos:line="106" pos:column="62">APR_SUCCESS<pos:position pos:line="106" pos:column="73"/></name></expr>)<pos:position pos:line="106" pos:column="74"/></condition><then pos:line="106" pos:column="74"> <block pos:line="106" pos:column="75">{
                    <break pos:line="107" pos:column="21">break;<pos:position pos:line="107" pos:column="27"/></break>
                }<pos:position pos:line="108" pos:column="18"/></block></then>
                <else pos:line="109" pos:column="17">else <block pos:line="109" pos:column="22">{
                    <comment type="block" pos:line="110" pos:column="21">/* if the error is a wouldblock then maybe we were too
                        quick try to pull the next request from the listen 
                        queue.  Try a few more times then return to our idle
                        listen state. */</comment>
                    <if pos:line="114" pos:column="21">if <condition pos:line="114" pos:column="24">(<expr><operator pos:line="114" pos:column="25">!<pos:position pos:line="114" pos:column="26"/></operator><call><name pos:line="114" pos:column="26">APR_STATUS_IS_EAGAIN<pos:position pos:line="114" pos:column="46"/></name><argument_list pos:line="114" pos:column="46">(<argument><expr><name pos:line="114" pos:column="47">stat<pos:position pos:line="114" pos:column="51"/></name></expr></argument>)<pos:position pos:line="114" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="53"/></condition><then pos:line="114" pos:column="53"> <block pos:line="114" pos:column="54">{
                        <break pos:line="115" pos:column="25">break;<pos:position pos:line="115" pos:column="31"/></break>
                    }<pos:position pos:line="116" pos:column="22"/></block></then></if>

                    <if pos:line="118" pos:column="21">if <condition pos:line="118" pos:column="24">(<expr><name pos:line="118" pos:column="25">wouldblock_retry<pos:position pos:line="118" pos:column="41"/></name><operator pos:line="118" pos:column="41">--<pos:position pos:line="118" pos:column="43"/></operator></expr>)<pos:position pos:line="118" pos:column="44"/></condition><then pos:line="118" pos:column="44"> <block pos:line="118" pos:column="45">{
                        <expr_stmt><expr><call><name pos:line="119" pos:column="25">apr_thread_yield<pos:position pos:line="119" pos:column="41"/></name><argument_list pos:line="119" pos:column="41">()<pos:position pos:line="119" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="120" pos:column="22"/></block></then></if>
                }<pos:position pos:line="121" pos:column="18"/></block></else></if>
            }<pos:position pos:line="122" pos:column="14"/></block></while>

            <comment type="block" pos:line="124" pos:column="13">/* If we got a new socket, set it to non-blocking mode and process
                it.  Otherwise handle the error. */</comment>
            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><name pos:line="126" pos:column="17">stat<pos:position pos:line="126" pos:column="21"/></name> <operator pos:line="126" pos:column="22">==<pos:position pos:line="126" pos:column="24"/></operator> <name pos:line="126" pos:column="25">APR_SUCCESS<pos:position pos:line="126" pos:column="36"/></name></expr>)<pos:position pos:line="126" pos:column="37"/></condition><then pos:line="126" pos:column="37"> <block pos:line="126" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="127" pos:column="17">apr_socket_opt_set<pos:position pos:line="127" pos:column="35"/></name><argument_list pos:line="127" pos:column="35">(<argument><expr><name pos:line="127" pos:column="36">csd<pos:position pos:line="127" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="41">APR_SO_NONBLOCK<pos:position pos:line="127" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="58">0<pos:position pos:line="127" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="61"/></expr_stmt>
<cpp:ifdef pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">ifdef<pos:position pos:line="128" pos:column="7"/></cpp:directive> <name pos:line="128" pos:column="8">DBINFO_ON<pos:position pos:line="128" pos:column="17"/></name></cpp:ifdef>
                <if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><name pos:line="129" pos:column="21">wouldblock_retry<pos:position pos:line="129" pos:column="37"/></name> <operator pos:line="129" pos:column="38">&lt;<pos:position pos:line="129" pos:column="42"/></operator> <name pos:line="129" pos:column="40">MAX_WB_RETRIES<pos:position pos:line="129" pos:column="54"/></name></expr>)<pos:position pos:line="129" pos:column="55"/></condition><then pos:line="129" pos:column="55"> <block pos:line="129" pos:column="56">{
                    <expr_stmt><expr><name pos:line="130" pos:column="21">retry_success<pos:position pos:line="130" pos:column="34"/></name><operator pos:line="130" pos:column="34">++<pos:position pos:line="130" pos:column="36"/></operator></expr>;<pos:position pos:line="130" pos:column="37"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="131" pos:column="21">avg_retries<pos:position pos:line="131" pos:column="32"/></name> <operator pos:line="131" pos:column="33">+=<pos:position pos:line="131" pos:column="35"/></operator> <operator pos:line="131" pos:column="36">(<pos:position pos:line="131" pos:column="37"/></operator><name pos:line="131" pos:column="37">MAX_WB_RETRIES<pos:position pos:line="131" pos:column="51"/></name><operator pos:line="131" pos:column="51">-<pos:position pos:line="131" pos:column="52"/></operator><name pos:line="131" pos:column="52">wouldblock_retry<pos:position pos:line="131" pos:column="68"/></name><operator pos:line="131" pos:column="68">)<pos:position pos:line="131" pos:column="69"/></operator></expr>;<pos:position pos:line="131" pos:column="70"/></expr_stmt>
                }<pos:position pos:line="132" pos:column="18"/></block></then></if>
<cpp:endif pos:line="133" pos:column="1">#<cpp:directive pos:line="133" pos:column="2">endif<pos:position pos:line="133" pos:column="7"/></cpp:directive></cpp:endif>
                <break pos:line="134" pos:column="17">break;<pos:position pos:line="134" pos:column="23"/></break>       <comment type="block" pos:line="134" pos:column="30">/* We have a socket ready for reading */</comment>
            }<pos:position pos:line="135" pos:column="14"/></block></then>
            <else pos:line="136" pos:column="13">else <block pos:line="136" pos:column="18">{
<cpp:ifdef pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">ifdef<pos:position pos:line="137" pos:column="7"/></cpp:directive> <name pos:line="137" pos:column="8">DBINFO_ON<pos:position pos:line="137" pos:column="17"/></name></cpp:ifdef>
                <if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><call><name pos:line="138" pos:column="21">APR_STATUS_IS_EAGAIN<pos:position pos:line="138" pos:column="41"/></name><argument_list pos:line="138" pos:column="41">(<argument><expr><name pos:line="138" pos:column="42">stat<pos:position pos:line="138" pos:column="46"/></name></expr></argument>)<pos:position pos:line="138" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="48"/></condition><then pos:line="138" pos:column="48"> <block pos:line="138" pos:column="49">{
                        <expr_stmt><expr><name pos:line="139" pos:column="25">would_block<pos:position pos:line="139" pos:column="36"/></name><operator pos:line="139" pos:column="36">++<pos:position pos:line="139" pos:column="38"/></operator></expr>;<pos:position pos:line="139" pos:column="39"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="140" pos:column="25">retry_fail<pos:position pos:line="140" pos:column="35"/></name><operator pos:line="140" pos:column="35">++<pos:position pos:line="140" pos:column="37"/></operator></expr>;<pos:position pos:line="140" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="141" pos:column="18"/></block></then>
                <elseif pos:line="142" pos:column="17">else
<cpp:else pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">else<pos:position pos:line="143" pos:column="6"/></cpp:directive></cpp:else>
                <if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><call><name pos:line="144" pos:column="21">APR_STATUS_IS_EAGAIN<pos:position pos:line="144" pos:column="41"/></name><argument_list pos:line="144" pos:column="41">(<argument><expr><name pos:line="144" pos:column="42">stat<pos:position pos:line="144" pos:column="46"/></name></expr></argument>)<pos:position pos:line="144" pos:column="47"/></argument_list></call> <operator pos:line="144" pos:column="48">||<pos:position pos:line="144" pos:column="50"/></operator>
<cpp:endif pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">endif<pos:position pos:line="145" pos:column="7"/></cpp:directive></cpp:endif>
                    <call><name pos:line="146" pos:column="21">APR_STATUS_IS_ECONNRESET<pos:position pos:line="146" pos:column="45"/></name><argument_list pos:line="146" pos:column="45">(<argument><expr><name pos:line="146" pos:column="46">stat<pos:position pos:line="146" pos:column="50"/></name></expr></argument>)<pos:position pos:line="146" pos:column="51"/></argument_list></call> <operator pos:line="146" pos:column="52">||<pos:position pos:line="146" pos:column="54"/></operator>
                    <call><name pos:line="147" pos:column="21">APR_STATUS_IS_ETIMEDOUT<pos:position pos:line="147" pos:column="44"/></name><argument_list pos:line="147" pos:column="44">(<argument><expr><name pos:line="147" pos:column="45">stat<pos:position pos:line="147" pos:column="49"/></name></expr></argument>)<pos:position pos:line="147" pos:column="50"/></argument_list></call> <operator pos:line="147" pos:column="51">||<pos:position pos:line="147" pos:column="53"/></operator>
                    <call><name pos:line="148" pos:column="21">APR_STATUS_IS_EHOSTUNREACH<pos:position pos:line="148" pos:column="47"/></name><argument_list pos:line="148" pos:column="47">(<argument><expr><name pos:line="148" pos:column="48">stat<pos:position pos:line="148" pos:column="52"/></name></expr></argument>)<pos:position pos:line="148" pos:column="53"/></argument_list></call> <operator pos:line="148" pos:column="54">||<pos:position pos:line="148" pos:column="56"/></operator>
                    <call><name pos:line="149" pos:column="21">APR_STATUS_IS_ENETUNREACH<pos:position pos:line="149" pos:column="46"/></name><argument_list pos:line="149" pos:column="46">(<argument><expr><name pos:line="149" pos:column="47">stat<pos:position pos:line="149" pos:column="51"/></name></expr></argument>)<pos:position pos:line="149" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="149" pos:column="53"/></condition><then pos:line="149" pos:column="53"> <block pos:line="149" pos:column="54">{
                        <empty_stmt pos:line="150" pos:column="25">;<pos:position pos:line="150" pos:column="26"/></empty_stmt>
                }<pos:position pos:line="151" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="152" pos:column="17">else <if pos:line="152" pos:column="22">if <condition pos:line="152" pos:column="25">(<expr><call><name pos:line="152" pos:column="26">APR_STATUS_IS_ENETDOWN<pos:position pos:line="152" pos:column="48"/></name><argument_list pos:line="152" pos:column="48">(<argument><expr><name pos:line="152" pos:column="49">stat<pos:position pos:line="152" pos:column="53"/></name></expr></argument>)<pos:position pos:line="152" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="55"/></condition><then pos:line="152" pos:column="55"> <block pos:line="152" pos:column="56">{
                       <comment type="block" pos:line="153" pos:column="24">/*
                        * When the network layer has been shut down, there
                        * is not much use in simply exiting: the parent
                        * would simply re-create us (and we'd fail again).
                        * Use the CHILDFATAL code to tear the server down.
                        * @@@ Martin's idea for possible improvement:
                        * A different approach would be to define
                        * a new APEXIT_NETDOWN exit code, the reception
                        * of which would make the parent shutdown all
                        * children, then idle-loop until it detected that
                        * the network is up again, and restart the children.
                        * Ben Hyde noted that temporary ENETDOWN situations
                        * occur in mobile IP.
                        */</comment>
                        <expr_stmt><expr><call><name pos:line="167" pos:column="25">ap_log_error<pos:position pos:line="167" pos:column="37"/></name><argument_list pos:line="167" pos:column="37">(<argument><expr><name pos:line="167" pos:column="38">APLOG_MARK<pos:position pos:line="167" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="50">APLOG_EMERG<pos:position pos:line="167" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="63">stat<pos:position pos:line="167" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="69">ap_server_conf<pos:position pos:line="167" pos:column="83"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="168" pos:column="29">"apr_accept: giving up."<pos:position pos:line="168" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="55"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="169" pos:column="25">clean_child_exit<pos:position pos:line="169" pos:column="41"/></name><argument_list pos:line="169" pos:column="41">(<argument><expr><name pos:line="169" pos:column="42">APEXIT_CHILDFATAL<pos:position pos:line="169" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="61">my_worker_num<pos:position pos:line="169" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="76">ptrans<pos:position pos:line="169" pos:column="82"/></name></expr></argument>, 
                                         <argument><expr><name pos:line="170" pos:column="42">bucket_alloc<pos:position pos:line="170" pos:column="54"/></name></expr></argument>)<pos:position pos:line="170" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="56"/></expr_stmt>
                }<pos:position pos:line="171" pos:column="18"/></block></then></if></elseif>
                <else pos:line="172" pos:column="17">else <block pos:line="172" pos:column="22">{
                        <expr_stmt><expr><call><name pos:line="173" pos:column="25">ap_log_error<pos:position pos:line="173" pos:column="37"/></name><argument_list pos:line="173" pos:column="37">(<argument><expr><name pos:line="173" pos:column="38">APLOG_MARK<pos:position pos:line="173" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="50">APLOG_ERR<pos:position pos:line="173" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="61">stat<pos:position pos:line="173" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="67">ap_server_conf<pos:position pos:line="173" pos:column="81"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="174" pos:column="29">"apr_accept: (client socket)"<pos:position pos:line="174" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="60"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="175" pos:column="25">clean_child_exit<pos:position pos:line="175" pos:column="41"/></name><argument_list pos:line="175" pos:column="41">(<argument><expr><literal type="number" pos:line="175" pos:column="42">1<pos:position pos:line="175" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="175" pos:column="45">my_worker_num<pos:position pos:line="175" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="60">ptrans<pos:position pos:line="175" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="68">bucket_alloc<pos:position pos:line="175" pos:column="80"/></name></expr></argument>)<pos:position pos:line="175" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="82"/></expr_stmt>
                }<pos:position pos:line="176" pos:column="18"/></block></else></if>
            }<pos:position pos:line="177" pos:column="14"/></block></else></if>
        }<pos:position pos:line="178" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="180" pos:column="9">ap_create_sb_handle<pos:position pos:line="180" pos:column="28"/></name><argument_list pos:line="180" pos:column="28">(<argument><expr><operator pos:line="180" pos:column="29">&amp;<pos:position pos:line="180" pos:column="34"/></operator><name pos:line="180" pos:column="30">sbh<pos:position pos:line="180" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="35">ptrans<pos:position pos:line="180" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="180" pos:column="43">0<pos:position pos:line="180" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="180" pos:column="46">my_worker_num<pos:position pos:line="180" pos:column="59"/></name></expr></argument>)<pos:position pos:line="180" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="61"/></expr_stmt>
        <comment type="block" pos:line="181" pos:column="9">/*
        * We now have a connection, so set it up with the appropriate
        * socket options, file descriptors, and read/write buffers.
        */</comment>
        <expr_stmt><expr><name pos:line="185" pos:column="9">current_conn<pos:position pos:line="185" pos:column="21"/></name> <operator pos:line="185" pos:column="22">=<pos:position pos:line="185" pos:column="23"/></operator> <call><name pos:line="185" pos:column="24">ap_run_create_connection<pos:position pos:line="185" pos:column="48"/></name><argument_list pos:line="185" pos:column="48">(<argument><expr><name pos:line="185" pos:column="49">ptrans<pos:position pos:line="185" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="57">ap_server_conf<pos:position pos:line="185" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="73">csd<pos:position pos:line="185" pos:column="76"/></name></expr></argument>, 
                                                <argument><expr><name pos:line="186" pos:column="49">my_worker_num<pos:position pos:line="186" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="64">sbh<pos:position pos:line="186" pos:column="67"/></name></expr></argument>,
                                                <argument><expr><name pos:line="187" pos:column="49">bucket_alloc<pos:position pos:line="187" pos:column="61"/></name></expr></argument>)<pos:position pos:line="187" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="63"/></expr_stmt>
        <if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><name pos:line="188" pos:column="13">current_conn<pos:position pos:line="188" pos:column="25"/></name></expr>)<pos:position pos:line="188" pos:column="26"/></condition><then pos:line="188" pos:column="26"> <block pos:line="188" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="189" pos:column="13">ap_process_connection<pos:position pos:line="189" pos:column="34"/></name><argument_list pos:line="189" pos:column="34">(<argument><expr><name pos:line="189" pos:column="35">current_conn<pos:position pos:line="189" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="49">csd<pos:position pos:line="189" pos:column="52"/></name></expr></argument>)<pos:position pos:line="189" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="190" pos:column="13">ap_lingering_close<pos:position pos:line="190" pos:column="31"/></name><argument_list pos:line="190" pos:column="31">(<argument><expr><name pos:line="190" pos:column="32">current_conn<pos:position pos:line="190" pos:column="44"/></name></expr></argument>)<pos:position pos:line="190" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="191" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="192" pos:column="9">request_count<pos:position pos:line="192" pos:column="22"/></name><operator pos:line="192" pos:column="22">++<pos:position pos:line="192" pos:column="24"/></operator></expr>;<pos:position pos:line="192" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="193" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="194" pos:column="5">clean_child_exit<pos:position pos:line="194" pos:column="21"/></name><argument_list pos:line="194" pos:column="21">(<argument><expr><literal type="number" pos:line="194" pos:column="22">0<pos:position pos:line="194" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="194" pos:column="25">my_worker_num<pos:position pos:line="194" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="40">ptrans<pos:position pos:line="194" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="48">bucket_alloc<pos:position pos:line="194" pos:column="60"/></name></expr></argument>)<pos:position pos:line="194" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="62"/></expr_stmt>
}<pos:position pos:line="195" pos:column="2"/></block></function></unit>
